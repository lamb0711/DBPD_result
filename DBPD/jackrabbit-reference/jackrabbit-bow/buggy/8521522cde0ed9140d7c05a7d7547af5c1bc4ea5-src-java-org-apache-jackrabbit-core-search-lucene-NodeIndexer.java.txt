Implemented support for value comparison and general comparison using multi valued properties.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126294 13f79535-47bb-0310-9956-ffa450edef68

-                for (int i = 0; i < values.length; i++) {
-                    addValue(doc, values[i], propState.getName());
+                if (propState.isMultiValued()) {
+                    // multi valued
+                    if (values.length == 1) {
+                        // also index as if single value property
+                        addValue(doc, values[0], propState.getName(), false);
+                    }
+                    for (int i = 0; i < values.length; i++) {
+                        addValue(doc, values[i], propState.getName(), true);
+                    }
+                } else {
+                    // single value
+                    addValue(doc, values[0], propState.getName(), false);
+     * @param multiValued if <code>true</code> the value is treated as a
+     *   multivalued.
-    private void addValue(Document doc, InternalValue value, QName name) {
-        String fieldName = name.toString();
+    private void addValue(Document doc, InternalValue value, QName name, boolean multiValued) {
+        String fieldName = name.getLocalName();
-            fieldName = mappings.getPrefix(name.getNamespaceURI()) + ":" + name.getLocalName();
+            StringBuffer tmp = new StringBuffer();
+            tmp.append(mappings.getPrefix(name.getNamespaceURI()));
+            tmp.append(':');
+            if (multiValued) {
+                tmp.append(FieldNames.MVP_PREFIX);
+            }
+            tmp.append(name.getLocalName());
+            fieldName = tmp.toString();
