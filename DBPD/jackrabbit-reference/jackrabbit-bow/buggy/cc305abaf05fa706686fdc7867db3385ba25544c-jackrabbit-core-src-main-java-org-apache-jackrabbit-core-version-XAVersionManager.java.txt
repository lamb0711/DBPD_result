JCR-1592 - JSR 283: Activities


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784261 13f79535-47bb-0310-9956-ffa450edef68

-            NodeStateEx state = createVersionHistory(node, copiedFrom);
+            NodeStateEx state = internalCreateVersionHistory(node, copiedFrom);
+    public NodeId createActivity(Session session, String title)
+            throws RepositoryException {
+
+        if (isInXA()) {
+            NodeStateEx state = internalCreateActivity(title);
+            InternalActivityImpl activity =
+                new InternalActivityImpl(vMgr, state);
+            xaItems.put(state.getNodeId(), activity);
+            return state.getNodeId();
+        }
+        return vMgr.createActivity(session, title);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void removeActivity(Session session, NodeId nodeId)
+            throws RepositoryException {
+
+        if (isInXA()) {
+            InternalActivityImpl act = (InternalActivityImpl) getItem(nodeId);
+            internalRemoveActivity(act);
+        }
+        vMgr.removeActivity(session, nodeId);
+    }
+
+    /**
+     * {@inheritDoc}
+     * <p/>
+     * Before modifying activity, make a local copy of it.
+     */
+    protected void internalRemoveActivity(InternalActivityImpl activity)
+            throws VersionException, RepositoryException {
+        if (activity.getVersionManager() != this) {
+            activity = makeLocalCopy(activity);
+            xaItems.put(activity.getId(), activity);
+        }
+        super.internalRemoveActivity(activity);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public Version checkout(NodeImpl node) throws RepositoryException {
+        return vMgr.checkout(node);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
-                version = checkin((InternalVersionHistoryImpl) vh, node, false);
+                version = internalCheckin((InternalVersionHistoryImpl) vh, node, false);
-                version = checkin((InternalVersionHistoryImpl) vh, node, true);
+                version = internalCheckin((InternalVersionHistoryImpl) vh, node, true);
-            removeVersion(vh, versionName);
+            internalRemoveVersion(vh, versionName);
-    protected InternalVersion checkin(InternalVersionHistoryImpl history,
+    protected InternalVersion internalCheckin(InternalVersionHistoryImpl history,
-        InternalVersion version = super.checkin(history, node, simple);
+        InternalVersion version = super.internalCheckin(history, node, simple);
-    protected void removeVersion(InternalVersionHistoryImpl history, Name name)
+    protected void internalRemoveVersion(InternalVersionHistoryImpl history, Name name)
-        super.removeVersion(history, name);
+        super.internalRemoveVersion(history, name);
+    @SuppressWarnings("unchecked")
-            Map xaItems = (Map) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
+            Map<NodeId, InternalVersionItem> xaItems =
+                    (Map<NodeId, InternalVersionItem>) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
+     * Make a local copy of an internal version item. This will recreate the
+     * (global) version item with state information from our own state
+     * manager.
+     * @param act source
+     * @return the new copy
+     * @throws RepositoryException if an error occurs
+     */
+    private InternalActivityImpl makeLocalCopy(InternalActivityImpl act)
+            throws RepositoryException {
+        ReadLock lock = acquireReadLock();
+        try {
+            NodeState state = (NodeState) stateMgr.getItemState(act.getId());
+            NodeStateEx stateEx = new NodeStateEx(stateMgr, ntReg, state, null);
+            return new InternalActivityImpl(this, stateEx);
+        } catch (ItemStateException e) {
+            throw new RepositoryException("Unable to make local copy", e);
+        } finally {
+            lock.release();
+        }
+    }
+
+    /**
