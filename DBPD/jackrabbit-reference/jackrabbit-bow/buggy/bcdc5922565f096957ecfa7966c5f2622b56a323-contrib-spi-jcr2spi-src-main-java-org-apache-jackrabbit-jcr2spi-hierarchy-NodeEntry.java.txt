- NodeEntry: retrieving child node entries may throw RepositoryException -> adjust methods that add/remove/access child node entries.
- HierarchyEventListener: ignore local events


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@523326 13f79535-47bb-0310-9956-ffa450edef68

+     * @throws PathNotFoundException
+     * @throws RepositoryException
+     * @throws RepositoryException If an unexpected error occurs.
-    public NodeEntry getNodeEntry(QName nodeName, int index);
+    public NodeEntry getNodeEntry(QName nodeName, int index) throws RepositoryException;
+     * @throws RepositoryException If an unexpected error occurs.
-    public NodeEntry getNodeEntry(NodeId childId);
+    public NodeEntry getNodeEntry(NodeId childId) throws RepositoryException;
+     * @throws RepositoryException If an unexpected error occurs.
-    public Iterator getNodeEntries();
+    public Iterator getNodeEntries() throws RepositoryException;
+     * @throws RepositoryException If an unexpected error occurs.
-    public List getNodeEntries(QName nodeName);
+    public List getNodeEntries(QName nodeName) throws RepositoryException;
+     * @throws RepositoryException If an unexpected error occurs.
-    public NodeEntry addNodeEntry(QName nodeName, String uniqueID, int index);
+    public NodeEntry addNodeEntry(QName nodeName, String uniqueID, int index) throws RepositoryException;
-     * @throws ItemExistsException
+     * @throws RepositoryException If an error occurs.
-    public NodeState addNewNodeEntry(QName nodeName, String uniqueID, QName primaryNodeType, QNodeDefinition definition) throws ItemExistsException;
+    public NodeState addNewNodeEntry(QName nodeName, String uniqueID, QName primaryNodeType, QNodeDefinition definition) throws RepositoryException;
+     * @throws ItemExistsException if a child item exists with the given name
+     * @throws RepositoryException if an unexpected error occurs.
-    public PropertyEntry addPropertyEntry(QName propName) throws ItemExistsException;
+    public PropertyEntry addPropertyEntry(QName propName) throws ItemExistsException, RepositoryException;
+     * @throws RepositoryException if an unexpected error occurs.
-    public void addPropertyEntries(Collection propNames) throws ItemExistsException;
+    public void addPropertyEntries(Collection propNames) throws ItemExistsException, RepositoryException;
-     * @return
+     * @return The PropertyState associated with the new property entry.
+     * @throws ItemExistsException
+     * @throws RepositoryException if an unexpected error occurs.
-    public PropertyState addNewPropertyEntry(QName propName, QPropertyDefinition definition) throws ItemExistsException;
+    public PropertyState addNewPropertyEntry(QName propName, QPropertyDefinition definition) throws ItemExistsException, RepositoryException;
+     * @throws RepositoryException If an unexpected error occurs.
-    public void orderBefore(NodeEntry beforeEntry) ;
+    public void orderBefore(NodeEntry beforeEntry) throws RepositoryException;
-     * @return
+     * @return the moved entry
+     * @throws RepositoryException If the entry to be moved is not a child of this
+     * NodeEntry or if an unexpected error occurs.
-}
+}
