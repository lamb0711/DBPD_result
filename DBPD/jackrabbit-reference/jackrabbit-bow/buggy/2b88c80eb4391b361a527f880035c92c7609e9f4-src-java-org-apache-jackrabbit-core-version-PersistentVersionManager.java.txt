- enhancing versioning to work with all workspaces

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@56758 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.Workspace;
-     * the virtual root node of the version histories
-     */
-    private final String virtHistoryRootId;
-
-    /**
-     * the system root id
-     */
-    private final String systemRootId;
-
-    /**
-     * The representation version manager
+     * The representation version managers (per workspace)
-    private VersionManager versionManager;
+    private HashMap versionManagers = new HashMap();
-        systemRootId = systemRoot.internalGetUUID();
-        if (!systemRoot.hasNode(VersionManager.VERSION_HISTORY_ROOT_NAME)) {
-            // if not exist, create
-            systemRoot.addNode(VersionManager.VERSION_HISTORY_ROOT_NAME, NodeTypeRegistry.NT_UNSTRUCTURED);
-        }
-        virtHistoryRootId = systemRoot.getNode(VersionManager.VERSION_HISTORY_ROOT_NAME).internalGetUUID();
+
+        // notify version managers
+        onVersionHistoryModified(hist);
-        if (versionManager!=null) {
-            versionManager.onVersionModified(version);
+        Iterator iter = versionManagers.values().iterator();
+        while (iter.hasNext()) {
+            ((VersionManager) iter.next()).onVersionModified(version);
+        }
+    }
+
+    /**
+     * is informed by the versions if they were modified
+     * @param vh
+     */
+    protected void onVersionHistoryModified(InternalVersionHistory vh)  throws RepositoryException {
+        // check if version manager already generated item states
+        Iterator iter = versionManagers.values().iterator();
+        while (iter.hasNext()) {
+            ((VersionManager) iter.next()).onVersionHistoryModified(vh);
-    public synchronized VersionManager getVersionManager() {
-        if (versionManager==null) {
-            versionManager = new VersionManager(this, virtHistoryRootId);
+    public synchronized VersionManager getVersionManager(Workspace wsp) {
+        VersionManager vm = (VersionManager) versionManagers.get(wsp.getName());
+        if (vm==null) {
+            vm = new VersionManager(this);
+            versionManagers.put(wsp.getName(), vm);
-        return versionManager;
+        return vm;
