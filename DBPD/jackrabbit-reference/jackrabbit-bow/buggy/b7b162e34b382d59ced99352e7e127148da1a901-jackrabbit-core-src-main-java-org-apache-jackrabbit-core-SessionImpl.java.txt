JCR-688: Apply the new Resolver interfaces in jackrabbit-core.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@496140 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.name.NameException;
+import org.apache.jackrabbit.name.NameResolver;
+import org.apache.jackrabbit.name.ParsingNameResolver;
+import org.apache.jackrabbit.name.ParsingPathResolver;
+import org.apache.jackrabbit.name.PathResolver;
-public class SessionImpl implements Session, Dumpable {
+public class SessionImpl
+        implements Session, NameResolver, PathResolver, Dumpable {
+    //--------------------------------------------------------< NameResolver >
+
+    public String getJCRName(QName name) throws NamespaceException {
+        return nsMappings.getNameResolver().getJCRName(name);
+    }
+
+    public QName getQName(String name) throws NameException, NamespaceException {
+        return nsMappings.getNameResolver().getQName(name);
+    }
+
+    //--------------------------------------------------------< PathResolver >
+
+    public String getJCRPath(Path path) throws NamespaceException {
+        return nsMappings.getPathResolver().getJCRPath(path);
+    }
+
+    public Path getQPath(String path) throws NameException, NamespaceException {
+        return nsMappings.getPathResolver().getQPath(path);
+    }
+
-            targetPath = PathFormat.parse(absPath, getNamespaceResolver()).getNormalizedPath();
-        } catch (MalformedPathException mpe) {
+            targetPath = getQPath(absPath).getNormalizedPath();
+        } catch (NameException e) {
-            log.debug(msg, mpe);
-            throw new RepositoryException(msg);
+            log.debug(msg, e);
+            throw new RepositoryException(msg, e);
-            Path p = PathFormat.parse(absPath, getNamespaceResolver()).getNormalizedPath();
+            Path p = getQPath(absPath).getNormalizedPath();
-        } catch (MalformedPathException mpe) {
+        } catch (NameException e) {
-            throw new RepositoryException(msg, mpe);
+            throw new RepositoryException(msg, e);
-            Path p = PathFormat.parse(absPath, getNamespaceResolver()).getNormalizedPath();
+            Path p = getQPath(absPath).getNormalizedPath();
-        } catch (MalformedPathException mpe) {
+        } catch (NameException e) {
-            throw new RepositoryException(msg, mpe);
+            throw new RepositoryException(msg, e);
-            srcPath = PathFormat.parse(srcAbsPath, getNamespaceResolver()).getNormalizedPath();
+            srcPath = getQPath(srcAbsPath).getNormalizedPath();
-        } catch (MalformedPathException mpe) {
+        } catch (NameException e) {
-            throw new RepositoryException(msg, mpe);
+            throw new RepositoryException(msg, e);
-            destPath = PathFormat.parse(destAbsPath, getNamespaceResolver()).getNormalizedPath();
+            destPath = getQPath(destAbsPath).getNormalizedPath();
-        } catch (MalformedPathException mpe) {
+        } catch (NameException e) {
-            throw new RepositoryException(msg, mpe);
+            throw new RepositoryException(msg, e);
-            Path p = PathFormat.parse(parentAbsPath, getNamespaceResolver()).getNormalizedPath();
+            Path p = getQPath(parentAbsPath).getNormalizedPath();
-        } catch (MalformedPathException mpe) {
+        } catch (NameException e) {
-            throw new RepositoryException(msg, mpe);
+            throw new RepositoryException(msg, e);
+
