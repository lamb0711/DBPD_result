JCR-428 BLOBFileValues might be discarded to early

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@407709 13f79535-47bb-0310-9956-ffa450edef68

+     * underlying blob file value
+     */
+    private final BLOBFileValue blob;
+
+    /**
+        blob = null;
+        blob = null;
+        blob = null;
+        blob = null;
+     * Creates a new <code>BLOBFileValue</code> instance from a existing blob.
+     *
+     * @param blob the existing blob
+     */
+    public BLOBFileValue(BLOBFileValue blob) {
+        // this instance is backed by a blob
+        this.blob = blob;
+        // set 'real' file to null
+        file = null;
+        fsResource = null;
+        // this instance is not backed by temporarily allocated resource/buffer
+        temp = false;
+    }
+
+
+    /**
+        } else if (blob != null) {
+            return blob.getLength();
+        } else if (blob != null) {
+            blob.discard();
+        } else if (blob != null) {
+            blob.delete(pruneEmptyParentDirs);
+        if (blob != null) {
+            blob.spool(out);
+            return;
+        }
+
+                // ignore
+        } else if (blob != null) {
+            return blob.toString();
+                    && (blob == null ? other.blob == null : blob.equals(other.blob))
+        } else if (blob != null) {
+            return blob.getStream();
-}
+
+    /**
+     * Creates a copy of this blob file value that has the 'temporary' field
+     * cleared. if the 'temp' flag is not set, <code>this</code> is returned.
+     *
+     * @return a new value based on this one.
+     */
+    public BLOBFileValue copy() {
+        return temp ? new BLOBFileValue(this) : this;
+    }
+}
