[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-     * @return
+     * @return the name of this node
-                String parentId = nodeState.getParentUUID();
-                NodeState parent = (NodeState) stateMgr.getItemState(new NodeId(parentId));
-                name = parent.getChildNodeEntry(nodeState.getUUID()).getName();
+                NodeId parentId = nodeState.getParentId();
+                NodeState parent = (NodeState) stateMgr.getItemState(parentId);
+                name = parent.getChildNodeEntry(nodeState.getNodeId()).getName();
-     * Returns the uuid of this node
+     * Returns the id of this node.
-     * @return
+     * @return the id of this node.
-    public String getUUID() {
-        return nodeState.getUUID();
+    public NodeId getNodeId() {
+        return nodeState.getNodeId();
-     * Returns the parent uuid of this node
+     * Returns the parent id of this node
-     * @return
+     * @return the parent id of this node
-    public String getParentUUID() {
-        return nodeState.getParentUUID();
+    public NodeId getParentId() {
+        return nodeState.getParentId();
-     * Returns the node state wrpaee
-     * @return
+     * Returns the underlaying node state.
+     * @return the underlaying node state.
-     * @return
+     * @return the properties of this node
-            PropertyId propId = new PropertyId(nodeState.getUUID(), propName);
+            PropertyId propId = new PropertyId(nodeState.getNodeId(), propName);
-     * @return
+     * @return <code>true</code> if the given property exists.
-        PropertyId propId = new PropertyId(nodeState.getUUID(), name);
+        PropertyId propId = new PropertyId(nodeState.getNodeId(), name);
-     * @return
+     * @return the values of the given property.
-        PropertyId propId = new PropertyId(nodeState.getUUID(), name);
+        PropertyId propId = new PropertyId(nodeState.getNodeId(), name);
-     * @return
+     * @return the value of the given property.
-        PropertyId propId = new PropertyId(nodeState.getUUID(), name);
+        PropertyId propId = new PropertyId(nodeState.getNodeId(), name);
-     * @return
+     * @return the property state
-        PropertyId propId = new PropertyId(nodeState.getUUID(), name);
+        PropertyId propId = new PropertyId(nodeState.getNodeId(), name);
-            PropertyState propState = stateMgr.createNew(name, nodeState.getUUID());
+            PropertyState propState = stateMgr.createNew(name, nodeState.getNodeId());
-            String msg = "internal error: failed to build effective node type for node " + nodeState.getUUID();
+            String msg = "internal error: failed to build effective node type for node " + nodeState.getNodeId();
-     * @return
+     * @return <code>true</code> if the given child exists.
-     * @return
+     * @return <code>true</code> if the child was removed
-     * @return
+     * @return <code>true</code> if the child was removed.
-                ItemState state = stateMgr.getItemState(new NodeId(entry.getUUID()));
+                ItemState state = stateMgr.getItemState(entry.getId());
-     * @return
+     * @return <code>true</code> if the property was removed.
-                PropertyId propId = new PropertyId(nodeState.getUUID(), name);
+                PropertyId propId = new PropertyId(nodeState.getNodeId(), name);
-     * @return
+     * @return the node state.
-            NodeState state = (NodeState) stateMgr.getItemState(new NodeId(entry.getUUID()));
+            NodeState state = (NodeState) stateMgr.getItemState(entry.getId());
-     * @return
+     * @return the node state
-                                  String uuid, boolean referenceable)
+                               NodeId id, boolean referenceable)
-        NodeStateEx node = createChildNode(nodeName, nodeTypeName, uuid);
+        NodeStateEx node = createChildNode(nodeName, nodeTypeName, id);
-            node.setPropertyValue(QName.JCR_UUID, InternalValue.create(node.getUUID()));
+            node.setPropertyValue(QName.JCR_UUID, InternalValue.create(node.getNodeId().getUUID().toString()));
-     * @param uuid
-     * @return
+     * @param id
+     * @return the newly created node.
-    private NodeStateEx createChildNode(QName name, QName nodeTypeName, String uuid)
+    private NodeStateEx createChildNode(QName name, QName nodeTypeName, NodeId id)
-        String parentUUID = nodeState.getUUID();
+        NodeId parentId = nodeState.getNodeId();
-        if (uuid == null) {
-            uuid = UUID.randomUUID().toString();    // version 4 uuid
+        if (id == null) {
+            id = new NodeId(UUID.randomUUID());
-        NodeState state = stateMgr.createNew(uuid, nodeTypeName, parentUUID);
+        NodeState state = stateMgr.createNew(id, nodeTypeName, parentId);
-        nodeState.addChildNodeEntry(name, state.getUUID());
+        nodeState.addChildNodeEntry(name, id);
-     * @return
+     * @return the child nodes.
-                NodeState state = (NodeState) stateMgr.getItemState(new NodeId(entry.getUUID()));
+                NodeState state = (NodeState) stateMgr.getItemState(entry.getId());
-                PropertyState pstate = (PropertyState) stateMgr.getItemState(new PropertyId(state.getUUID(), propName));
+                PropertyState pstate = (PropertyState) stateMgr.getItemState(
+                        new PropertyId(state.getNodeId(), propName));
-                NodeState nstate = (NodeState) stateMgr.getItemState(new NodeId(entry.getUUID()));
+                NodeState nstate = (NodeState) stateMgr.getItemState(entry.getId());
-            nodeState = (NodeState) stateMgr.getItemState(nodeState.getId());
+            nodeState = (NodeState) stateMgr.getItemState(nodeState.getNodeId());
-                PropertyState pstate = (PropertyState) stateMgr.getItemState(new PropertyId(state.getUUID(), propName));
+                PropertyState pstate = (PropertyState) stateMgr.getItemState(
+                        new PropertyId(state.getNodeId(), propName));
-                NodeState nstate = (NodeState) stateMgr.getItemState(new NodeId(entry.getUUID()));
+                NodeState nstate = (NodeState) stateMgr.getItemState(entry.getId());
