JCR-233 repository lock file not removed without a clean shutdown

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@312865 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.RandomAccessFile;
+import java.nio.channels.FileLock;
+     * the lock that guards instantiation of multiple repositories.
+     */
+    private FileLock repLock;
+
+    /**
-     * @throws RepositoryException
-     *         if the repository lock can not be acquired
+     *
+     * @throws RepositoryException if the repository lock can not be acquired
-    private void acquireRepositoryLock() throws RepositoryException {
+    protected void acquireRepositoryLock() throws RepositoryException {
-        File lock  = new File(home, REPOSITORY_LOCK) ;
+        File lock = new File(home, REPOSITORY_LOCK);
+
-            throw new RepositoryException("The repository home at " + home.getAbsolutePath() + 
-                " appears to be in use. If you are sure it's not in use please delete the file at " + 
-                lock.getAbsolutePath() + ". Probably the repository was not shutdown properly.");
+            log.warn("Existing lock file at " + lock.getAbsolutePath() +
+                    " deteteced. Repository was not shutdown properly.");
+        } else {
+            try {
+                lock.createNewFile();
+            } catch (IOException e) {
+                throw new RepositoryException(
+                    "Unable to create lock file at " + lock.getAbsolutePath(), e);
+            }
-            lock.createNewFile() ;
+            repLock = new RandomAccessFile(lock, "rw").getChannel().tryLock();
-            throw new RepositoryException("Unable to create lock file at " + lock.getAbsolutePath());
+            throw new RepositoryException(
+                "Unable to lock file at " + lock.getAbsolutePath(), e);
+        }
+        if (repLock == null) {
+            throw new RepositoryException(
+                    "The repository home at " + home.getAbsolutePath() +
+                    " appears to be in use since the file at " +
+                    lock.getAbsolutePath() + " is locked by another process.");
-    private void releaseRepositoryLock() {
+    protected void releaseRepositoryLock() {
+        if (repLock != null) {
+            try {
+                repLock.release();
+            } catch (IOException e) {
+                // ignore
+            }
+        }
+        repLock = null;
+
-        File lock  = new File(home, REPOSITORY_LOCK) ;
+        File lock = new File(home, REPOSITORY_LOCK);
-            log.error("Unable to release repository lock") ;
+            log.error("Unable to release repository lock");
