[JCR-128] Deleting binary property does not remove 'blob file' in filesystem

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@180292 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.util.LazyFileInputStream;
-import java.io.FileInputStream;
-import java.io.IOException;
+import java.io.FileDescriptor;
-        private class MonitoredInputStream extends InputStream {
-
-            /**
-             * the underlying input stream
-             */
-            private final FileInputStream in;
+        private class MonitoredInputStream extends LazyFileInputStream {
-             * Creates a new stream
-             * @param file
-             * @throws FileNotFoundException
+             * {@inheritDoc}
-                in = new FileInputStream(file);
+                super(file);
+                // register the throwable
+                try {
+                    throw new Exception();
+                } catch (Exception e) {
+                    throwable = e;
+                }
+            }
+
+            /**
+             * {@inheritDoc}
+             */
+            public MonitoredInputStream(FileDescriptor fdObj) {
+                super(fdObj);
+                // register the throwable
+                try {
+                    throw new Exception();
+                } catch (Exception e) {
+                    throwable = e;
+                }
+            }
+
+            /**
+             * {@inheritDoc}
+             */
+            public MonitoredInputStream(String name) throws FileNotFoundException {
+                super(name);
+                // register the throwable
-            /**
-             * {@inheritDoc}
-             */
-            public int available() throws IOException {
-                return in.available();
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public void close() throws IOException {
-                in.close();
-                Handle.this.close(this);
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public synchronized void reset() throws IOException {
-                in.reset();
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public boolean markSupported() {
-                return in.markSupported();
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public synchronized void mark(int readlimit) {
-                in.mark(readlimit);
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public long skip(long n) throws IOException {
-                return in.skip(n);
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public int read(byte b[]) throws IOException {
-                return in.read(b);
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public int read(byte b[], int off, int len) throws IOException {
-                return in.read(b, off, len);
-            }
-
-            /**
-             * {@inheritDoc}
-             */
-            public int read() throws IOException {
-                return in.read();
-            }
