JCR-2105: JSR 283 NodeType Management (work in progress)
JCR-1483: Move common node type functionality to jackrabbit-spi-commons

NOTE: intermediate checkin to avoid additional conflicts with stefans work


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774294 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.nodetype.NodeDefinitionImpl;
+import org.apache.jackrabbit.spi.commons.nodetype.PropertyDefinitionImpl;
+import org.apache.jackrabbit.spi.commons.QNodeTypeDefinitionImpl;
-import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.nodetype.NodeTypeExistsException;
+import java.util.HashSet;
+import java.util.List;
-     * @see NodeTypeManager#registerNodeType(javax.jcr.nodetype.NodeTypeDefinition, boolean)
-     */
-    public NodeType registerNodeType(NodeTypeDefinition ntd, boolean allowUpdate)
-            throws RepositoryException {
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
-    }
-
-    /**
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
-    }
+        List<QNodeTypeDefinition> defs = new ArrayList<QNodeTypeDefinition>(ntds.length);
+        for (NodeTypeDefinition definition : ntds) {
+            QNodeTypeDefinition qdef = new QNodeTypeDefinitionImpl(definition, resolver(), mgrProvider.getQValueFactory());
+            if (!allowUpdate && hasNodeType(qdef.getName())) {
+                throw new NodeTypeExistsException("NodeType " + definition.getName() + " already exists.");
+            }
+            defs.add(qdef);
+        }
-    /**
-     * @see NodeTypeManager#unregisterNodeType(String)
-     */
-    public void unregisterNodeType(String name) throws RepositoryException {
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
+        getNodeTypeRegistry().registerNodeTypes(defs, allowUpdate);
+
+        List<NodeType> nts = new ArrayList<NodeType>();
+        for (Iterator<QNodeTypeDefinition> it = defs.iterator(); it.hasNext();) {
+            nts.add(getNodeType(it.next().getName()));
+        }
+        return new NodeTypeIteratorAdapter(nts);
+
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
+        HashSet ntNames = new HashSet();
+        for (String name : names) {
+            ntNames.add(resolver().getQName(name));
+        }
+        getNodeTypeRegistry().unregisterNodeTypes(ntNames);
