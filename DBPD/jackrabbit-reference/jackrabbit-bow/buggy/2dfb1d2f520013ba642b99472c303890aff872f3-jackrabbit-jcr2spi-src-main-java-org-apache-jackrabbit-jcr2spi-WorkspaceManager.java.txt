JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816719 13f79535-47bb-0310-9956-ffa450edef68

-    private final Set listeners = new HashSet();
+    private final Set<InternalEventListener> listeners = new HashSet<InternalEventListener>();
-                                        Map namespaces)
+                                        Map<String, String> namespaces)
-    public QueryInfo executeQuery(String statement, String language, Map namespaces,
+    public QueryInfo executeQuery(String statement, String language, Map<String, String> namespaces,
-    private static EventFilter[] getEventFilters(Collection listeners) {
-        List filters = new ArrayList();
-        for (Iterator it = listeners.iterator(); it.hasNext(); ) {
-            InternalEventListener listener = (InternalEventListener) it.next();
+    private static EventFilter[] getEventFilters(Collection<InternalEventListener> listeners) {
+        List<EventFilter> filters = new ArrayList<EventFilter>();
+        for (InternalEventListener listener : listeners) {
-        return (EventFilter[]) filters.toArray(new EventFilter[filters.size()]);
+        return filters.toArray(new EventFilter[filters.size()]);
-            public Iterator getAllDefinitions() throws RepositoryException {
+            public Iterator<QNodeTypeDefinition> getAllDefinitions() throws RepositoryException {
-            public Iterator getDefinitions(Name[] nodeTypeNames) throws NoSuchNodeTypeException, RepositoryException {
+            public Iterator<QNodeTypeDefinition> getDefinitions(Name[] nodeTypeNames) throws NoSuchNodeTypeException, RepositoryException {
-    public Map getRegisteredNamespaces() throws RepositoryException {
+    public Map<String, String> getRegisteredNamespaces() throws RepositoryException {
-                for (Iterator it = eventBundles[i].getEvents(); it.hasNext(); ) {
-                    Event e = (Event) it.next();
+                for (Iterator<Event> it = eventBundles[i].getEvents(); it.hasNext(); ) {
+                    Event e = it.next();
-                Iterator it = changeLog.getOperations().iterator();
-                while (it.hasNext()) {
-                    Operation op = (Operation) it.next();
+                for (Operation op : changeLog.getOperations()) {
-            Iterator failed;
+            Iterator<NodeId> failed;
-                        iel = (InternalEventListener[]) listeners.toArray(new InternalEventListener[0]);
+                        iel = listeners.toArray(new InternalEventListener[0]);
