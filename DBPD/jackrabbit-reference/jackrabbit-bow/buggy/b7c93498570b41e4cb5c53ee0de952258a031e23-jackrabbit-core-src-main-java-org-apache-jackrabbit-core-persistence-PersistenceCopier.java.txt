JCR-442: Implement a backup tool

Support for binary values and the data store in RepositoryCopier.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@800807 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.InputStream;
+import javax.jcr.PropertyType;
+
+import org.apache.jackrabbit.core.data.DataStore;
-import org.apache.jackrabbit.core.state.ItemStateException;
+import org.apache.jackrabbit.core.value.InternalValue;
+     * Target data store, possibly <code>null</code>.
+     */
+    private final DataStore store;
+
+    /**
+     * @param store target data store
-            PersistenceManager source, PersistenceManager target) {
+            PersistenceManager source,  PersistenceManager target,
+            DataStore store) {
+        this.store = store;
-     * @throws ItemStateException if the copy operation fails
+     * @throws Exception if the copy operation fails
-    public void copy(NodeId id) throws ItemStateException {
+    public void copy(NodeId id) throws Exception {
-     * @throws ItemStateException if the copy operation fails
+     * @throws Exception if the copy operation fails
-    private void copy(NodeState sourceNode) throws ItemStateException {
+    private void copy(NodeState sourceNode) throws Exception {
-            // TODO: Copy binaries?
-            targetState.setValues(sourceState.getValues());
+            if (sourceState.getType() != PropertyType.BINARY) {
+                targetState.setValues(sourceState.getValues());
+            } else {
+                InternalValue[] values = sourceState.getValues();
+                for (int i = 0; i < values.length; i++) {
+                    InputStream stream = values[i].getStream();
+                    try {
+                        values[i] = InternalValue.create(stream, store);
+                    } finally {
+                        stream.close();
+                    }
+                }
+            }
