JCR-2064 Add new JSR283 features to CND reader/writer
JCR-2153 Introduce QValueConstraint and change return type of QPropertyDefinition.getValueConstraints()
JCR-2158 Consolidate CND related classes from SPI and Core


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785777 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.nodetype.ValueConstraint;
+import org.apache.jackrabbit.spi.commons.nodetype.constraint.ValueConstraint;
+import org.apache.jackrabbit.spi.QValueConstraint;
-            for (int i = 0; i < types.length; i++) {
-                writer.addNodeTypeDef(types[i]);
+            for (NodeTypeDef type : types) {
+                writer.addNodeTypeDef(type);
-        for (int i = 0; i < prefixes.length; i++) {
-            if (!"".equals(prefixes[i])) {
-                String uri = registry.getURI(prefixes[i]);
-                builder.setAttribute("xmlns:" + prefixes[i], uri);
+        for (String prefix : prefixes) {
+            if (!"".equals(prefix)) {
+                String uri = registry.getURI(prefix);
+                builder.setAttribute("xmlns:" + prefix, uri);
-            for (int i = 0; i < supertypes.length; i++) {
+            for (Name supertype : supertypes) {
-                        resolver.getJCRName(supertypes[i]));
+                        resolver.getJCRName(supertype));
-        for (int i = 0; i < properties.length; i++) {
-            addPropDef(properties[i]);
+        for (PropDef property : properties) {
+            addPropDef(property);
-        for (int i = 0; i < nodes.length; i++) {
-            addChildNodeDef(nodes[i]);
+        for (NodeDef node : nodes) {
+            addChildNodeDef(node);
-        ValueConstraint[] constraints = def.getValueConstraints();
+        QValueConstraint[] constraints = def.getValueConstraints();
-            for (int i = 0; i < constraints.length; i++) {
+            for (QValueConstraint constraint : constraints) {
+                ValueConstraint vc = ValueConstraint.create(
+                        def.getRequiredType(), constraint.getString());
-                        constraints[i].getDefinition(resolver));
+                        vc.getDefinition(resolver));
-            for (int i = 0; i < defaults.length; i++) {
-                InternalValue v = defaults[i];
+            for (InternalValue v : defaults) {
-        for (int i = 0; i < requiredTypes.length; i++) {
+        for (Name requiredType : requiredTypes) {
-                    resolver.getJCRName(requiredTypes[i]));
+                    resolver.getJCRName(requiredType));
