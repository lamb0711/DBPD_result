JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.property.PropEntry;
-import java.util.ArrayList;
+import java.util.Collections;
+    @Override
-     * @see DefaultItemCollection#alterProperties(org.apache.jackrabbit.webdav.property.DavPropertySet, org.apache.jackrabbit.webdav.property.DavPropertyNameSet)
+     * @see DefaultItemCollection#alterProperties(List)
-    public MultiStatusResponse alterProperties(List changeList) throws DavException {
+    @Override
+    public MultiStatusResponse alterProperties(List<? extends PropEntry> changeList) throws DavException {
-    private void resolveMergeConflict(List changeList) throws DavException {
+    private void resolveMergeConflict(List<? extends PropEntry> changeList) throws DavException {
-            Node n = (Node)item;
-            DavProperty autoMergeSet = null;
-            DavProperty predecessorSet = null;
+            Node n = (Node) item;
+            DavProperty<?> autoMergeSet = null;
+            DavProperty<?> predecessorSet = null;
-                Object propEntry = changeList.get(i);
+                PropEntry propEntry = changeList.get(i);
-                    for (int j = 0; j < mergeFailed.length; j++) {
-                        n.cancelMerge((Version)getRepositorySession().getNodeByUUID(mergeFailed[j].getString()));
+                    for (Value value : mergeFailed) {
+                        n.cancelMerge((Version) getRepositorySession().getNodeByUUID(value.getString()));
-                    if (AUTO_MERGE_SET.equals(((DavProperty)propEntry).getName())) {
-                        autoMergeSet = (DavProperty)propEntry;
-                    } else if (PREDECESSOR_SET.equals(((DavProperty)propEntry).getName())) {
-                        predecessorSet = (DavProperty)propEntry;
+                    if (AUTO_MERGE_SET.equals(((DavProperty<?>)propEntry).getName())) {
+                        autoMergeSet = (DavProperty<?>) propEntry;
+                    } else if (PREDECESSOR_SET.equals(((DavProperty<?>)propEntry).getName())) {
+                        predecessorSet = (DavProperty<?>) propEntry;
-                List mergeset = new HrefProperty(autoMergeSet).getHrefs();
-                List predecSet = (predecessorSet == null) ? new ArrayList() : new HrefProperty(predecessorSet).getHrefs();
+                List<String> mergeset = new HrefProperty(autoMergeSet).getHrefs();
+                List<String> predecL;
+                if (predecessorSet == null) {
+                    predecL = Collections.emptyList();
+                } else {
+                    predecL = new HrefProperty(predecessorSet).getHrefs();
+                }
-                for (int i = 0; i < mergeFailed.length; i++) {
+                for (Value value : mergeFailed) {
-                    Version version = (Version) session.getNodeByUUID(mergeFailed[i].getString());
+                    Version version = (Version) session.getNodeByUUID(value.getString());
-                        if (predecSet.contains(href)) {
+                        if (predecL.contains(href)) {
+    @Override
-	    supportedReports.addReportType(ReportType.LOCATE_BY_HISTORY);
+            supportedReports.addReportType(ReportType.LOCATE_BY_HISTORY);
-            supportedReports.addReportType(ReportType.VERSION_TREE);
-	    }
+                supportedReports.addReportType(ReportType.VERSION_TREE);
+            }
+    @Override
-                    properties.add(new DefaultDavProperty(AUTO_VERSION, null, false));
+                    properties.add(new DefaultDavProperty<String>(AUTO_VERSION, null, false));
-            nodes[i] = getRepositorySession().getNodeByUUID(values[i].getString());
+            nodes[i] = getRepositorySession().getNodeByIdentifier(values[i].getString());
-}
+}
