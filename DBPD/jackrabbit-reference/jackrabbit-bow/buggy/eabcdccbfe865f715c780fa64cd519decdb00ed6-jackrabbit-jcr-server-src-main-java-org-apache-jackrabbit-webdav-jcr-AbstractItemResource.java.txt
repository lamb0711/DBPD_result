JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

+    @Override
-        DavProperty etag = getProperty(DavPropertyName.GETETAG);
+        DavProperty<?> etag = getProperty(DavPropertyName.GETETAG);
-        DavProperty contentType = getProperty(DavPropertyName.GETCONTENTTYPE);
+        DavProperty<?> contentType = getProperty(DavPropertyName.GETCONTENTTYPE);
-        DavProperty contentLength = getProperty(DavPropertyName.GETCONTENTLENGTH);
+        DavProperty<?> contentLength = getProperty(DavPropertyName.GETCONTENTLENGTH);
-        DavProperty contentLanguage = getProperty(DavPropertyName.GETCONTENTLANGUAGE);
+        DavProperty<?> contentLanguage = getProperty(DavPropertyName.GETCONTENTLANGUAGE);
+    @Override
-                // if not part of a transaction directely import on workspace
+                // if not part of a transaction directly import on workspace
+    @Override
+    @Override
-            // add supportedlock entries for local and eventually for global transaction locks
+            // add supported lock entries for local and eventually for global
+            // transaction locks
+    @Override
-                properties.add(new DefaultDavProperty(JCR_NAME, item.getName()));
-                properties.add(new DefaultDavProperty(JCR_PATH, item.getPath()));
-                properties.add(new DefaultDavProperty(JCR_DEPTH, String.valueOf(item.getDepth())));
+                properties.add(new DefaultDavProperty<String>(JCR_NAME, item.getName()));
+                properties.add(new DefaultDavProperty<String>(JCR_PATH, item.getPath()));
+                properties.add(new DefaultDavProperty<String>(JCR_DEPTH, String.valueOf(item.getDepth())));
-                properties.add(new DefaultDavProperty(JCR_DEFINITION, val, true));
+                properties.add(new DefaultDavProperty<ItemDefinitionImpl>(JCR_DEFINITION, val, true));
-                properties.add(new DefaultDavProperty(JCR_ISNEW, null, true));
+                properties.add(new DefaultDavProperty<String>(JCR_ISNEW, null, true));
-                properties.add(new DefaultDavProperty(JCR_ISMODIFIED, null, true));
+                properties.add(new DefaultDavProperty<String>(JCR_ISMODIFIED, null, true));
-        List currentPrivs = new ArrayList();
-        for (int i = 0; i < allPrivs.length; i++) {
+        List<Privilege> currentPrivs = new ArrayList<Privilege>();
+        for (Privilege priv : allPrivs) {
-                getRepositorySession().checkPermission(getLocator().getRepositoryPath(), allPrivs[i].getName());
-                currentPrivs.add(allPrivs[i]);
+                String path = getLocator().getRepositoryPath();
+                getRepositorySession().checkPermission(path, priv.getName());
+                currentPrivs.add(priv);
-        properties.add(new CurrentUserPrivilegeSetProperty((Privilege[])currentPrivs.toArray(new Privilege[currentPrivs.size()])));
+        properties.add(new CurrentUserPrivilegeSetProperty(currentPrivs.toArray(new Privilege[currentPrivs.size()])));
+    @Override
-}
+}
