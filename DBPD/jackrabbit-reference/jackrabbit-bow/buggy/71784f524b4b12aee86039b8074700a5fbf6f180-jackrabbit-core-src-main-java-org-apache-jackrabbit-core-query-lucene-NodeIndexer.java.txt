JCR-1609:  new Property Types (WIP...)




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@779228 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.URI;
-                    addReferenceValue(doc, fieldName, value.getUUID());
+                    addReferenceValue(doc, fieldName, value.getUUID(), false);
+                }
+                break;
+            case PropertyType.WEAKREFERENCE:
+                if (isIndexed(name)) {
+                    addReferenceValue(doc, fieldName, value.getUUID(), true);
+            case PropertyType.URI:
+                if (isIndexed(name)) {
+                    addURIValue(doc, fieldName, value.getURI());
+                }
+                break;
+            // TODO support indexing of BigDecimal (JCR-1609: new Property Types)
+            case PropertyType.DECIMAL:
+
-                throw new IllegalArgumentException("illegal internal value type");
+                throw new IllegalArgumentException("illegal internal value type: " + value.getType());
+     * @param weak          Flag indicating whether it's a WEAKREFERENCE (true) or a REFERENCE (flase)
-    protected void addReferenceValue(Document doc, String fieldName, Object internalValue) {
+    protected void addReferenceValue(Document doc, String fieldName, Object internalValue, boolean weak) {
-                PropertyType.REFERENCE));
+                weak ? PropertyType.WEAKREFERENCE : PropertyType.REFERENCE));
+     * Adds the uri value to the document as the named field.
+     *
+     * @param doc           The document to which to add the field
+     * @param fieldName     The name of the field to add
+     * @param internalValue The value for the field to add to the document.
+     */
+    protected void addURIValue(Document doc, String fieldName, Object internalValue) {
+        URI uri = (URI) internalValue;
+        doc.add(createFieldWithoutNorms(fieldName, uri.toString(),
+                PropertyType.URI));
+    }
+
+    /**
