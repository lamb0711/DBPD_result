[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.NodeId;
+    /**
+     * the default logger
+     */
-     * flags defining the current status of this <code>ItemState</code> instance
+     * undefined state
-
-     * the uuid of the (primary) parent node or <code>null</code> if this is the root node
-     */
-    protected String parentUUID;
-
-    /**
-    protected ItemId id;
-
-    // the backing persistent item state (may be null)
+    /**
+     * the backing persistent item state (may be null)
+     */
-     * Protected constructor
+     * Constructs a new unconnected item state
-     * @param parentUUID    the UUID of the (primary) parent node or <code>null</code>
-     * @param id            the id of the item state object
-    protected ItemState(String parentUUID, ItemId id, int initialStatus,
-                        boolean isTransient) {
+    protected ItemState(int initialStatus, boolean isTransient) {
-        this.id = id;
-        this.parentUUID = parentUUID;
-     * Protected constructor
+     * Constructs a new node state that is initially connected to an overlayed
+     * state.
+     * @param overlayedState the backing node state being overlayed
-    protected ItemState(int initialStatus, boolean isTransient) {
+    protected ItemState(ItemState overlayedState, int initialStatus, boolean isTransient) {
+        connect(overlayedState);
-    protected synchronized void copy(ItemState state) {
-        synchronized (state) {
-            parentUUID = state.getParentUUID();
-            id = state.getId();
-        }
-    }
+    abstract protected void copy(ItemState state);
-    public ItemId getId() {
-        return id;
-    }
+    abstract public ItemId getId();
-     * Returns the UUID of the parent <code>NodeState</code> or <code>null</code>
+     * Returns the Idof the parent <code>NodeState</code> or <code>null</code>
-     * @return the parent <code>NodeState</code>'s UUID
+     * @return the parent <code>NodeState</code>'s Id
-    public String getParentUUID() {
-        return parentUUID;
-    }
-
-    /**
-     * Sets the UUID of the parent <code>NodeState</code>.
-     *
-     * @param parentUUID the parent <code>NodeState</code>'s UUID or <code>null</code>
-     *                   if either this item state should represent the root node or this item state
-     *                   should be 'free floating', i.e. detached from the repository's hierarchy.
-     */
-    public void setParentUUID(String parentUUID) {
-        this.parentUUID = parentUUID;
-    }
+    abstract public NodeId getParentId();
