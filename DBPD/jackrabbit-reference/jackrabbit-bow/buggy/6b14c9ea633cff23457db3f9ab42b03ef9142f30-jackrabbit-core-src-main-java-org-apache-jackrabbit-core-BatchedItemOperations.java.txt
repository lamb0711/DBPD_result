JCR-1104 : JSR 283 support
JCR-1171 : Contribute Pluggable Permission and User Management to Jackrabbit

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638834 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.authorization.Permission;
+import org.apache.jackrabbit.spi.commons.name.PathFactoryImpl;
-            if (!srcAccessMgr.isGranted(srcState.getNodeId(), AccessManager.READ)) {
+            if (!srcAccessMgr.isGranted(srcPath, Permission.READ)) {
-        NodeState newState = copyNodeState(srcState, srcStateMgr, srcAccessMgr,
+        NodeState newState = copyNodeState(srcState, srcPath, srcStateMgr, srcAccessMgr,
-            if (!accessMgr.isGranted(parentState.getNodeId(), AccessManager.READ)) {
+            if (!accessMgr.isGranted(parentPath, Permission.READ)) {
-            if (!accessMgr.isGranted(parentState.getNodeId(), AccessManager.WRITE)) {
+            if (!accessMgr.isGranted(parentPath, nodeName, Permission.ADD_NODE)) {
-        NodeId targetId = targetState.getNodeId();
+        Path targetPath = hierMgr.getPath(targetState.getNodeId());
-                if (!accessMgr.isGranted(targetId, AccessManager.READ)) {
-                    throw new PathNotFoundException(safeGetJCRPath(targetId));
+                if (!accessMgr.isGranted(targetPath, Permission.READ)) {
+                    throw new PathNotFoundException(safeGetJCRPath(targetPath));
-                if (!accessMgr.isGranted(targetId, AccessManager.REMOVE)) {
-                    throw new AccessDeniedException(safeGetJCRPath(targetId)
+                if (!accessMgr.isGranted(targetPath, Permission.REMOVE_NODE)) {
+                    throw new AccessDeniedException(safeGetJCRPath(targetPath)
-                        + safeGetJCRPath(targetId);
+                        + safeGetJCRPath(targetPath);
-                throw new ConstraintViolationException(safeGetJCRPath(targetId)
+                throw new ConstraintViolationException(safeGetJCRPath(targetPath)
-                throw new ConstraintViolationException(safeGetJCRPath(targetId)
+                throw new ConstraintViolationException(safeGetJCRPath(targetPath)
-                            throw new ReferentialIntegrityException(safeGetJCRPath(targetId)
+                            throw new ReferentialIntegrityException(safeGetJCRPath(targetPath)
-                                + safeGetJCRPath(targetId);
+                                + safeGetJCRPath(targetPath);
-        if (!accessMgr.isGranted(node.getNodeId(), AccessManager.READ)) {
+        if (!accessMgr.isGranted(nodePath, Permission.READ)) {
-        // make sure current session is granted write access on node
-        if (!accessMgr.isGranted(node.getNodeId(), AccessManager.WRITE)) {
-            throw new AccessDeniedException(safeGetJCRPath(node.getNodeId())
-                    + ": not allowed to modify node");
-        }
+        // TODO: removed check for 'WRITE' permission on node due to the fact,
+        // TODO: that add_node and set_property permission are granted on the
+        // TODO: items to be create/modified and not on their parent.
+        // in any case, the ability to add child-nodes and properties is checked
+        // while executing the corresponding operation.
-        NodeState node = getNodeState(nodePath);
-
-        if (!accessMgr.isGranted(node.getNodeId(), AccessManager.READ)) {
-            throw new PathNotFoundException(safeGetJCRPath(node.getNodeId()));
+        if (!accessMgr.isGranted(nodePath, Permission.READ)) {
+            throw new PathNotFoundException(safeGetJCRPath(nodePath));
+     * @param srcPath
+                                    Path srcPath,
-                NodeId nodeId = entry.getId();
-                if (!srcAccessMgr.isGranted(nodeId, AccessManager.READ)) {
+                Path srcChildPath = PathFactoryImpl.getInstance().create(srcPath, entry.getName(), true);
+                if (!srcAccessMgr.isGranted(srcChildPath, Permission.READ)) {
+                NodeId nodeId = entry.getId();
-                NodeState newChildState = copyNodeState(srcChildState,
+                NodeState newChildState = copyNodeState(srcChildState, srcChildPath,
-                PropertyId propId = new PropertyId(srcState.getNodeId(), propName);
-                if (!srcAccessMgr.isGranted(propId, AccessManager.READ)) {
+                if (!srcAccessMgr.isGranted(srcPath, propName, Permission.READ)) {
+                PropertyId propId = new PropertyId(srcState.getNodeId(), propName);
