JCR-2113 : WIP (Contribution by Alfusainey Jallow)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1640892 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.JackrabbitWorkspace;
+import org.apache.jackrabbit.spi.PrivilegeDefinition;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinitionImpl;
+import javax.jcr.security.Privilege;
+    @Override
+    public PrivilegeDefinition[] getPrivilegeDefinitions(SessionInfo sessionInfo) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        Session session = sInfo.getSession();
+        Workspace wsp = session.getWorkspace();
+        Collection<Privilege> privs;
+        if (wsp instanceof JackrabbitWorkspace) {
+            privs = Arrays.asList(((JackrabbitWorkspace) wsp).getPrivilegeManager().getRegisteredPrivileges());
+        } else {
+            Privilege jcrAll = session.getAccessControlManager().privilegeFromName(Privilege.JCR_ALL);
+            privs = new HashSet<Privilege>();
+            privs.add(jcrAll);
+            for (Privilege p : jcrAll.getAggregatePrivileges()) {
+                privs.add(p);
+            }
+        }
+
+        PrivilegeDefinition[] pDefs = new PrivilegeDefinition[privs.size()];
+        NamePathResolver npResolver = sInfo.getNamePathResolver();
+        int i = 0;
+        for (Privilege p : privs) {
+            Set<Name> aggrnames = null;
+            if (p.isAggregate()) {
+                aggrnames = new HashSet<Name>();
+                for (Privilege dap : p.getDeclaredAggregatePrivileges()) {
+                    aggrnames.add(npResolver.getQName(dap.getName()));
+                }
+            }
+            PrivilegeDefinition def = new PrivilegeDefinitionImpl(npResolver.getQName(p.getName()), p.isAbstract(), aggrnames);
+            pDefs[i++] = def;
+        }
+        return pDefs;
+    }
+
+    public PrivilegeDefinition[] getSupportedPrivileges(SessionInfo sessionInfo, NodeId nodeId) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        String path = (nodeId == null) ? null : pathForId(nodeId, sInfo);
+
+        Privilege[] privs = sInfo.getSession().getAccessControlManager().getSupportedPrivileges(path);
+        PrivilegeDefinition[] pDefs = new PrivilegeDefinition[privs.length];
+        NamePathResolver npResolver = sInfo.getNamePathResolver();
+        for (int i = 0; i < privs.length; i++) {
+            Set<Name> aggrnames = null;
+            if (privs[i].isAggregate()) {
+                aggrnames = new HashSet<Name>();
+                for (Privilege dap : privs[i].getDeclaredAggregatePrivileges()) {
+                    aggrnames.add(npResolver.getQName(dap.getName()));
+                }
+            }
+            PrivilegeDefinition def = new PrivilegeDefinitionImpl(npResolver.getQName(privs[i].getName()), privs[i].isAbstract(), aggrnames);
+            pDefs[i] = def;
+        }
+        return pDefs;
+    }
+
