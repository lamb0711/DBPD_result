JCR-2415: Update Lucene to 3.0
- Merge all from JCR-2415-lucene-3.0 at 1064038 (reintegration)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1064058 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.core.query.lucene.hits.AbstractHitCollector;
-import org.apache.lucene.search.HitCollector;
-import org.apache.lucene.search.Weight;
-import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.lucene.search.Weight;
-import java.util.Set;
-import java.util.Map;
-import java.util.TreeMap;
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeMap;
+@SuppressWarnings("serial")
-    protected Weight createWeight(Searcher searcher) {
+    public Weight createWeight(Searcher searcher) {
-    private class DescendantSelfAxisWeight implements Weight {
+    private class DescendantSelfAxisWeight extends Weight {
-        public Scorer scorer(IndexReader reader) throws IOException {
-            contextScorer = contextQuery.weight(searcher).scorer(reader);
-            subScorer = subQuery.weight(searcher).scorer(reader);
+        public Scorer scorer(IndexReader reader, boolean scoreDocsInOrder,
+                boolean topScorer) throws IOException {
+            contextScorer = contextQuery.weight(searcher).scorer(reader, scoreDocsInOrder, topScorer);
+            subScorer = subQuery.weight(searcher).scorer(reader, scoreDocsInOrder, topScorer);
+         * The next document id to be returned
+         */
+        private int currentDoc = -1;
+
+        /**
-        /**
-         * {@inheritDoc}
-         */
-        public boolean next() throws IOException {
-            collectContextHits();
-            if (!subScorer.next() || contextHits.isEmpty()) {
-                return false;
+        @Override
+        public int nextDoc() throws IOException {
+            if (currentDoc == NO_MORE_DOCS) {
+                return currentDoc;
-            int nextDoc = subScorer.doc();
-            while (nextDoc > -1) {
-                if (isValid(nextDoc)) {
-                    return true;
+            collectContextHits();
+            currentDoc = subScorer.nextDoc();
+            if (contextHits.isEmpty()) {
+                currentDoc = NO_MORE_DOCS;
+            }
+            while (currentDoc != NO_MORE_DOCS) {
+                if (isValid(currentDoc)) {
+                    return currentDoc;
-                nextDoc = subScorer.next() ? subScorer.doc() : -1;
+                currentDoc = subScorer.nextDoc();
-            return false;
+            return currentDoc;
-        /**
-         * {@inheritDoc}
-         */
-        public int doc() {
-            return subScorer.doc();
+        @Override
+        public int docID() {
+            return currentDoc;
-        /**
-         * {@inheritDoc}
-         */
+        @Override
-        /**
-         * {@inheritDoc}
-         */
-        public boolean skipTo(int target) throws IOException {
-            boolean match = subScorer.skipTo(target);
-            if (match) {
-                collectContextHits();
-                return isValid(subScorer.doc()) || next();
+        @Override
+        public int advance(int target) throws IOException {
+            if (currentDoc == NO_MORE_DOCS) {
+                return currentDoc;
+            }
+
+            currentDoc = subScorer.nextDoc();
+            if (currentDoc == NO_MORE_DOCS) {
+                return NO_MORE_DOCS;
-                return false;
+                collectContextHits();
+                return isValid(currentDoc) ? currentDoc : nextDoc();
-                contextScorer.score(new HitCollector() {
-                    public void collect(int doc, float score) {
+                contextScorer.score(new AbstractHitCollector() {
+                    @Override
+                    protected void collect(int doc, float score) {
-         * @throws UnsupportedOperationException this implementation always
-         *                                       throws an <code>UnsupportedOperationException</code>.
-         */
-        public Explanation explain(int doc) throws IOException {
-            throw new UnsupportedOperationException();
-        }
-
-        /**
