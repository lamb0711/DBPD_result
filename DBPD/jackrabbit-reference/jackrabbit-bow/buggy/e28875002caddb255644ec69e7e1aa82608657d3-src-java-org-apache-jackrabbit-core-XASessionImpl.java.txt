changing javadoc pattern for implementation of interface methods
from  @see ... style to {@inheritDoc}
(old dog learning new trick :)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156190 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.Credentials;
+import javax.security.auth.login.LoginContext;
-import javax.security.auth.login.LoginContext;
-     * @param rep         repository
+     * @param rep          repository
-     * @param wspConfig   workspace configuration
+     * @param wspConfig    workspace configuration
-
-     * @see XASession#getXAResource
+     * {@inheritDoc}
-
-     * @see javax.transaction.xa.XAResource#getTransactionTimeout
+     * {@inheritDoc}
-     * @see javax.transaction.xa.XAResource#setTransactionTimeout
+     * {@inheritDoc}
-     * @see javax.transaction.xa.XAResource#isSameRM
-     *      <p/>
-     *      Two resources belong to the same resource manager if both connections
-     *      (i.e. sessions) have the same credentials.
+     * {@inheritDoc}
+     * <p/>
+     * Two resources belong to the same resource manager if both connections
+     * (i.e. sessions) have the same credentials.
-     * @see javax.transaction.xa.XAResource#start
-     *      <p/>
-     *      If <code>TMNOFLAGS</code> is specified, we create a new transaction
-     *      context and associate it with this resource.
-     *      If <code>TMJOIN</code> is specified, this resource should use the
-     *      same transaction context as another, already known transaction.
-     *      If <code>TMRESUME</code> is specified, we should resume work on
-     *      a transaction context that was suspended earlier.
-     *      All other flags generate an <code>XAException</code> of type
-     *      <code>XAER_INVAL</code>
+     * {@inheritDoc}
+     * <p/>
+     * If <code>TMNOFLAGS</code> is specified, we create a new transaction
+     * context and associate it with this resource.
+     * If <code>TMJOIN</code> is specified, this resource should use the
+     * same transaction context as another, already known transaction.
+     * If <code>TMRESUME</code> is specified, we should resume work on
+     * a transaction context that was suspended earlier.
+     * All other flags generate an <code>XAException</code> of type
+     * <code>XAER_INVAL</code>
-     * @see javax.transaction.xa.XAResource#end
-     *      <p/>
-     *      If <code>TMSUCCESS</code> is specified, we disassociate this session
-     *      from the transaction specified.
-     *      If <code>TMFAIL</code> is specified, we disassociate this session from
-     *      the transaction specified and mark the transaction rollback only.
-     *      If <code>TMSUSPEND</code> is specified, we disassociate this session
-     *      from the transaction specified.
-     *      All other flags generate an <code>XAException</code> of type
-     *      <code>XAER_INVAL</code>
+     * {@inheritDoc}
+     * <p/>
+     * If <code>TMSUCCESS</code> is specified, we disassociate this session
+     * from the transaction specified.
+     * If <code>TMFAIL</code> is specified, we disassociate this session from
+     * the transaction specified and mark the transaction rollback only.
+     * If <code>TMSUSPEND</code> is specified, we disassociate this session
+     * from the transaction specified.
+     * All other flags generate an <code>XAException</code> of type
+     * <code>XAER_INVAL</code>
-     * @see javax.transaction.xa.XAResource#prepare
+     * {@inheritDoc}
-     * @see javax.transaction.xa.XAResource#rollback
+     * {@inheritDoc}
-     * @see javax.transaction.xa.XAResource#commit
+     * {@inheritDoc}
-     * @see javax.transaction.xa.XAResource#recover
-     *      <p/>
-     *      No recovery support yet.
+     * {@inheritDoc}
+     * <p/>
+     * No recovery support yet.
-     * @see javax.transaction.xa.XAResource#recover
-     *      <p/>
-     *      No recovery support yet.
+     * {@inheritDoc}
+     * <p/>
+     * No recovery support yet.
-     * @see org.apache.jackrabbit.core.SessionImpl#dispatch
-     *      <p/>
-     *      If we are currently associated with a transaction, the dispatch operation
-     *      will be postponed until commit.
+     * {@inheritDoc}
+     * <p/>
+     * If we are currently associated with a transaction, the dispatch operation
+     * will be postponed until commit.
-     * Internal {@link org.apache.jackrabbit.core.state.TransactionListener} implementation that will dispatch
+     * Internal {@link TransactionListener} implementation that will dispatch
-         * @see org.apache.jackrabbit.core.state.TransactionListener#transactionCommitted
-         *      <p/>
-         *      Dispatch events.
+         * {@inheritDoc}
+         * <p/>
+         * Dispatch events.
-         * @see org.apache.jackrabbit.core.state.TransactionListener#transactionCommitted
-         *      <p/>
-         *      Nothing to do.
+         * {@inheritDoc}
+         * <p/>
+         * Nothing to do.
