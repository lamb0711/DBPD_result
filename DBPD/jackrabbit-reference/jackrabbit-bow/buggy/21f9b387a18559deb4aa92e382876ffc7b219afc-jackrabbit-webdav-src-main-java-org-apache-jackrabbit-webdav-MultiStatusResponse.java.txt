JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 1: jackrabbit-webdav]

in addition:
- fix indention
- minor improvements in comments
- use foreach loops where possible
- introduce PropEntry marker interface as common base for DavProperty and DavPropertyName
- add o.a.j.webdav.lock.Type.hashCode

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915333 13f79535-47bb-0310-9956-ffa450edef68

-    private HashMap statusMap = new HashMap();
+    private HashMap<Integer, PropContainer> statusMap = new HashMap<Integer, PropContainer>();
-            DavPropertyName[] propNames = resource.getPropertyNames();
-            for (int i = 0; i < propNames.length; i++) {
-                status200.addContent(propNames[i]);
+            for (DavPropertyName propName : resource.getPropertyNames()) {
+                status200.addContent(propName);
-                DavProperty property = iter.nextProperty();
+                DavProperty<?> property = iter.nextProperty();
-            Iterator iter = statusMap.keySet().iterator();
+            Iterator<Integer> iter = statusMap.keySet().iterator();
-                Integer statusKey = (Integer) iter.next();
-                sts[i] = new Status(statusKey.intValue());
+                Integer statusKey = iter.next();
+                sts[i] = new Status(statusKey);
-            Iterator iter = statusMap.keySet().iterator();
-            while (iter.hasNext()) {
-                Integer statusKey = (Integer) iter.next();
-                Status st = new Status(statusKey.intValue());
-                PropContainer propCont = (PropContainer) statusMap.get(statusKey);
+            for (Integer statusKey : statusMap.keySet()) {
+                Status st = new Status(statusKey);
+                PropContainer propCont = statusMap.get(statusKey);
-    public void add(DavProperty property) {
+    public void add(DavProperty<?> property) {
-    public void add(DavProperty property, int status) {
+    public void add(DavProperty<?> property, int status) {
-        Integer statusKey = new Integer(status);
-        PropContainer propContainer;
-        Object entry = statusMap.get(statusKey);
-        if (entry == null) {
+        PropContainer propContainer = statusMap.get(status);
+        if (propContainer == null) {
-            statusMap.put(statusKey, propContainer);
-        } else {
-            propContainer = (PropContainer) entry;
+            statusMap.put(status, propContainer);
-        Integer key = new Integer(status);
-        if (statusMap.containsKey(key)) {
-            Object mapEntry = statusMap.get(key);
+        if (statusMap.containsKey(status)) {
+            PropContainer mapEntry = statusMap.get(status);
-        Integer key = new Integer(status);
-        if (statusMap.containsKey(key)) {
-            Object mapEntry = statusMap.get(key);
+        if (statusMap.containsKey(status)) {
+            PropContainer mapEntry = statusMap.get(status);
-                    DavPropertyName[] names = ((DavPropertySet) mapEntry).getPropertyNames();
-                    for (int i = 0; i < names.length; i++) {
-                        set.add(names[i]);
+                    for (DavPropertyName name : ((DavPropertySet) mapEntry).getPropertyNames()) {
+                        set.add(name);
-                    // is alread a DavPropertyNameSet
+                    // is already a DavPropertyNameSet
-                        destinction between prop-names and properties not having
+                        distinction between prop-names and properties not having
-                        DavProperty property = DefaultDavProperty.createFromXml(el);
+                        DavProperty<?> property = DefaultDavProperty.createFromXml(el);
