JCR-3387 On heavy load we see occasional SQLException: closed statement: next

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1367057 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
-    private Map<String, Connection> batchConnectionMap = Collections.synchronizedMap(new HashMap<String, Connection>());
+    private Map<Object, Connection> batchConnectionMap = Collections.synchronizedMap(new HashMap<Object, Connection>());
-       	return batchConnectionMap.get(threadIdToString(threadId));
+       	return batchConnectionMap.get(threadIdToObject(threadId));
-    	batchConnectionMap.put(threadIdToString(threadId), batchConnection);
+    	batchConnectionMap.put(threadIdToObject(threadId), batchConnection);
-    	batchConnectionMap.remove(threadIdToString(threadId));
+    	batchConnectionMap.remove(threadIdToObject(threadId));
-    private String threadIdToString(Object threadId) {
+    private Object threadIdToObject(Object threadId) {
-    		byte[] gtrid = (byte[]) threadId;
-    		int hexVal;
-    		StringBuffer sb = new StringBuffer(512);
-    		sb.append(" gtrid(" + gtrid.length + ")={0x");
-    		for (int i=0; i< gtrid.length; i++) {
-    			hexVal = gtrid[i]&0xFF;
-    			if ( hexVal < 0x10 ) {
-    				sb.append("0" + Integer.toHexString(gtrid[i]&0xFF));
-    			} else {
-    				sb.append(Integer.toHexString(gtrid[i]&0xFF));
-    			}
-    		}
-    		sb.append("}");
-    		return sb.toString();
+    		return new XidWrapper((byte[]) threadId);
+    
+    /**
+     * Wrapper around a global transaction id (byte[]) 
+     * that handles hashCode and equals in a proper way.
+     */
+    private class XidWrapper {
+    	private byte[] gtid;
+    	
+    	public XidWrapper(byte[] gtid) {
+    		this.gtid = gtid;
+    	}
+
+        @Override
+        public boolean equals(Object other) {
+            if (!(other instanceof XidWrapper)) {
+                return false;
+            }
+            return TransactionContext.isSameThreadId(gtid, ((XidWrapper)other).gtid);
+        }
+
+        @Override
+        public int hashCode() {
+            return Arrays.hashCode(gtid);
+        }
+    }
