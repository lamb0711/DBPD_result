Simplify QueryHandler. Added support for jcr:score and jcr:path.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@152654 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.search.Constants;
+import org.apache.jackrabbit.core.search.ExecutableQuery;
-import javax.jcr.ItemNotFoundException;
-    public javax.jcr.query.Query createQuery(SessionImpl session,
+    public ExecutableQuery createExecutableQuery(SessionImpl session,
-     * Retrieves an existing persistent query. If <code>node</code>
-     * is not a valid persisted query (that is, a node of type
-     * <code>nt:query</code>), an <code>InvalidQueryException</code>
-     * is thrown.
-     *
-     * @param absPath path to a persisted query (that is, a node of type
-     *   <code>nt:query</code>).
-     * @throws InvalidQueryException If <code>absPath</code> is not a valid persisted query
-     *   (that is, a node of type <code>nt:query</code>).
-     * @throws RepositoryException if another error occurs
-     * @return a <code>Query</code> object.
-     */
-    public javax.jcr.query.Query createQuery(SessionImpl session,
-                                             ItemManager itemMgr,
-                                             String absPath)
-            throws ItemNotFoundException, RepositoryException {
-        return new QueryImpl(session, itemMgr, this, absPath);
-    }
-
-    /**
-            // FIXME: ??? do logging, simply return?
-            return null;
+            throw new IOException("Unable to obtain read lock on search index.");
-            try {
-                prop = orderProps[i].toJCRName(nsMappings);
-            } catch (NoPrefixDeclaredException e) {
-                // will never happen
+            if (Constants.JCR_SCORE.equals(orderProps[i])) {
+                sortFields[i] = new SortField(null, SortField.SCORE, !orderSpecs[i]);
+            } else {
+                try {
+                    prop = orderProps[i].toJCRName(nsMappings);
+                } catch (NoPrefixDeclaredException e) {
+                    // will never happen
+                }
+                sortFields[i] = new SortField(prop, SortField.STRING, !orderSpecs[i]);
-            sortFields[i] = new SortField(prop, SortField.STRING, !orderSpecs[i]);
