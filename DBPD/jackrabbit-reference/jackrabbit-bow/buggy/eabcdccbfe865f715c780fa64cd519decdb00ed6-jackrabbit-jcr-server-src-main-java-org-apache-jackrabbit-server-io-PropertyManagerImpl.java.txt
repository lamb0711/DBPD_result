JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.property.PropEntry;
-import java.util.HashMap;
-    private final List propertyHandlers = new ArrayList();
+    private final List<PropertyHandler> propertyHandlers = new ArrayList<PropertyHandler>();
-    public Map alterProperties(PropertyImportContext context, boolean isCollection) throws RepositoryException {
-        boolean foundHandler = false;
-        Map failures = new HashMap(0);
-        PropertyHandler[] propertyHandlers = getPropertyHandlers();
-        for (int i = 0; i < propertyHandlers.length && !foundHandler; i++) {
-            PropertyHandler ph = propertyHandlers[i];
-            if ((foundHandler = ph.canImport(context, isCollection))) {
+    public Map<? extends PropEntry, ?> alterProperties(PropertyImportContext context, boolean isCollection) throws RepositoryException {
+        Map<? extends PropEntry, ?> failures = null;
+        for (PropertyHandler ph : getPropertyHandlers()) {
+            if (ph.canImport(context, isCollection)) {
+                break;
-        if (!foundHandler) {
+        if (failures == null) {
-        return (PropertyHandler[]) propertyHandlers.toArray(new PropertyHandler[propertyHandlers.size()]);
+        return propertyHandlers.toArray(new PropertyHandler[propertyHandlers.size()]);
-}
+}
