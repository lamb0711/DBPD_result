JCR-804: Avoid using MultiTermDocs

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520841 13f79535-47bb-0310-9956-ffa450edef68

-    private class WildcardQueryWeight implements Weight {
-
-        /**
-         * The searcher in use
-         */
-        private final Searcher searcher;
+    private class WildcardQueryWeight extends AbstractWeight {
-        public WildcardQueryWeight(Searcher searcher) {
-            this.searcher = searcher;
+        public WildcardQueryWeight(final Searcher searcher) {
+            super(searcher, new ScorerFactory() {
+                public Scorer createScorer(IndexReader reader) {
+                    return new WildcardQueryScorer(searcher.getSimilarity(), reader);
+                }
+            });
-         * Creates a scorer for this <code>WildcardQuery</code>.
-         *
-         * @param reader a reader for accessing the index.
-         * @return a <code>WildcardQueryScorer</code>.
-         * @throws IOException if an error occurs while reading from the index.
-         */
-        public Scorer scorer(IndexReader reader) throws IOException {
-            return new WildcardQueryScorer(searcher.getSimilarity(), reader);
-        }
-
-        /**
-                if (m == null) {
+            if (m == null) {
-                }
-                resultMap = m;
+            }
+            resultMap = m;
-                BitSet result = (BitSet) resultMap.get(cacheKey);
-                if (result == null) {
-                    result = new BitSet(reader.maxDoc());
-                } else {
-                    hitsCalculated = true;
-                }
-                hits = result;
+            BitSet result = (BitSet) resultMap.get(cacheKey);
+            if (result == null) {
+                result = new BitSet(reader.maxDoc());
+            } else {
+                hitsCalculated = true;
+            hits = result;
+        }
-        public boolean skipTo(int target) {
+        public boolean skipTo(int target) throws IOException {
+            calculateHits();
-            synchronized (resultMap) {
-                resultMap.put(cacheKey, hits);
-            }
+            resultMap.put(cacheKey, hits);
