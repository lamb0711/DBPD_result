JCR-2790: jcr:like on node name

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1030038 13f79535-47bb-0310-9956-ffa450edef68

+     * Factory for term values.
+     */
+    private final TermValueFactory tvf;
+
+    /**
-     * @param propName  the embedded jcr property name or <code>null</code> if
-     *                  there is not embedded property name.
+     * @param tvf       the term value factory.
-                            String propName,
+                            TermValueFactory tvf,
+        this.tvf = tvf;
-                    && Character.isLetterOrDigit(pattern.charAt(idx))) {
+                    && (Character.isLetterOrDigit(pattern.charAt(idx)) || pattern.charAt(idx) == ':')) {
-            if (propName == null) {
-                prefix = pattern.substring(0, idx);
-            } else {
-                prefix = FieldNames.createNamedValue(propName, pattern.substring(0, idx));
-            }
+            prefix = tvf.createValue(pattern.substring(0, idx));
-            prefix = FieldNames.createNamedValue(propName, "");
+            prefix = tvf.createValue("");
-            setEnum(new LowerUpperCaseTermEnum(reader, field, propName, pattern, transform));
+            setEnum(new LowerUpperCaseTermEnum(reader, field, pattern, transform));
-                                      String propName,
-                        String prefix = FieldNames.createNamedValue(propName, "");
-                        String limit = FieldNames.createNamedValue(propName, "\uFFFF");
+                        String prefix = tvf.createValue("");
+                        String limit = tvf.createValue("\uFFFF");
-                        String prefix = FieldNames.createNamedValue(propName, lowerLimit.toString());
+                        String prefix = tvf.createValue(lowerLimit.toString());
-                        String limit = FieldNames.createNamedValue(propName, upperLimit.toString());
+                        String limit = tvf.createValue(upperLimit.toString());
-                        prefix = FieldNames.createNamedValue(propName, patternPrefix.toUpperCase());
+                        prefix = tvf.createValue(patternPrefix.toUpperCase());
-                        limit = FieldNames.createNamedValue(propName, upperLimit.toString());
+                        limit = tvf.createValue(upperLimit.toString());
+
+    public static class TermValueFactory {
+
+        /**
+         * Creates a term value from the given string. This implementation
+         * simply returns the given string. Sub classes my apply some
+         * transformation to the string.
+         *
+         * @param s the string.
+         * @return the term value to use in the query.
+         */
+        public String createValue(String s) {
+            return s;
+        }
+    }
