JCR-2209 Versioning operations should be done on the workspace


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@795866 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.RepositoryException;
-import javax.jcr.version.Version;
-import javax.jcr.version.VersionHistory;
-import javax.jcr.version.VersionIterator;
+import javax.jcr.RepositoryException;
+
+import org.apache.jackrabbit.spi.Name;
+
-     * @param date
+     * @param date reference date
-     * @param date
-     * @param returnLatest
+     * @param date reference date
+     * @param returnLatest if <code>true</code> latest is selected
-     * @param date
+     * @param date reference date
-     * @param returnLatest
+     * @param returnLatest the <ocde>returnLatest</code> flag
+     * {@inheritDoc}
+     *
-     *
-     * @param versionHistory
-     * @return
-     * @throws RepositoryException
-    public Version select(VersionHistory versionHistory) throws RepositoryException {
-        Version selected = null;
+    public InternalVersion select(InternalVersionHistory versionHistory) throws RepositoryException {
+        InternalVersion selected = null;
-     * @param history
-     * @param date
+     * @param history history to select from
+     * @param date reference date
-     * @throws RepositoryException
+     * @throws RepositoryException if an error occurs
-    public static Version selectByDate(VersionHistory history, Calendar date)
+    public static InternalVersion selectByDate(InternalVersionHistory history, Calendar date)
-        Version latestVersion = null;
-        VersionIterator iter = history.getAllVersions();
-        while (iter.hasNext()) {
-            Version v = iter.nextVersion();
-            if (v.getPredecessors().length == 0) {
+        InternalVersion latestVersion = null;
+        for (Name name: history.getVersionNames()) {
+            InternalVersion v = history.getVersion(name);
+            if (v.isRootVersion()) {
