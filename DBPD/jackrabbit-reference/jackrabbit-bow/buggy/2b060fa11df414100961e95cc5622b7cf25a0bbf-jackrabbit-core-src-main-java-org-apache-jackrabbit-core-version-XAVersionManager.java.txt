JCR-2209 Versioning operations should be done on the workspace


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@795866 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.version.Version;
-import javax.jcr.version.VersionHistory;
-import org.apache.jackrabbit.core.id.ItemId;
-import org.apache.jackrabbit.core.id.NodeId;
-import org.apache.jackrabbit.core.NodeImpl;
+import org.apache.jackrabbit.core.id.ItemId;
+import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.core.state.ISMLocking.ReadLock;
+import org.apache.jackrabbit.core.state.ISMLocking.WriteLock;
-import org.apache.jackrabbit.core.state.ISMLocking.ReadLock;
-import org.apache.jackrabbit.core.state.ISMLocking.WriteLock;
-    public Version checkout(NodeImpl node) throws RepositoryException {
-        return vMgr.checkout(node);
+    public NodeId canCheckout(NodeStateEx state, NodeId activityId) throws RepositoryException {
+        return vMgr.canCheckout(state, activityId);
-    public Version checkin(NodeImpl node) throws RepositoryException {
+    public InternalVersion checkin(Session session, NodeStateEx node) throws RepositoryException {
-            if (node.isNodeType(NameConstants.MIX_VERSIONABLE)) {
+            if (node.getEffectiveNodeType().includesNodeType(NameConstants.MIX_VERSIONABLE)) {
-                String histUUID = node.getProperty(NameConstants.JCR_VERSIONHISTORY).getString();
-                vh = getVersionHistory(NodeId.valueOf(histUUID));
+                NodeId histId = node.getPropertyValue(NameConstants.JCR_VERSIONHISTORY).getNodeId();
+                vh = getVersionHistory(histId);
-            return (Version) ((SessionImpl) node.getSession()).getNodeById(version.getId());
+            return version;
+        } else {
+            return vMgr.checkin(session, node);
-        return vMgr.checkin(node);
-    public void removeVersion(VersionHistory history, Name versionName)
+    public void removeVersion(Session session, InternalVersionHistory history,
+                              Name versionName)
-
-            InternalVersionHistoryImpl vh = (InternalVersionHistoryImpl)
-                    ((VersionHistoryImpl) history).getInternalVersionHistory();
-            internalRemoveVersion(vh, versionName);
-            return;
+            internalRemoveVersion((InternalVersionHistoryImpl) history, versionName);
+        } else {
+            vMgr.removeVersion(session, history, versionName);
-        vMgr.removeVersion(history, versionName);
-    public Version setVersionLabel(VersionHistory history, Name version,
-                                   Name label, boolean move)
+    public InternalVersion setVersionLabel(Session session,
+                                           InternalVersionHistory history,
+                                           Name version,
+                                           Name label, boolean move)
-            InternalVersionHistoryImpl vh = (InternalVersionHistoryImpl)
-                    ((VersionHistoryImpl) history).getInternalVersionHistory();
-            InternalVersion v = setVersionLabel(vh, version, label, move);
-            if (v == null) {
-                return null;
-            } else {
-                return (Version) ((SessionImpl) history.getSession()).getNodeById(v.getId());
-            }
+            return setVersionLabel((InternalVersionHistoryImpl) history,
+                    version, label, move);
+        } else {
+            return vMgr.setVersionLabel(session, history, version, label, move);
-        return vMgr.setVersionLabel(history, version, label, move);
-                                      NodeImpl node, boolean simple)
+                                      NodeStateEx node, boolean simple)
