JCR-337 - Remove jcr dependency from dav-library
JCR-343 - Report#init limits the Report interface to DeltaV compliant resources
JCR-340 - ValuesProperty missing property type information
JCR-342 - DavResource#getDavSession() missing
JCR-344 - DeltaVResource lists MKWORKSPACE in the method constant.
JCR-345 - DavException does not allow to specify an exception cause

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385540 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.DavSession;
+import org.apache.jackrabbit.webdav.jcr.JcrDavSession;
+import javax.jcr.Session;
- *
- * @todo make sure all expired subscriptions are removed!
+// todo: make sure all expired subscriptions are removed!
-     * @todo is it correct to return subscriptions made by another session?
+        // todo: is it correct to return subscriptions made by another session?
-        DavSession session = resource.getSession();
-            registerSubscription(subscription, session);
+            registerSubscription(subscription, resource);
-            session.addReference(subscription.getSubscriptionId());
+            resource.getSession().addReference(subscription.getSubscriptionId());
-            registerSubscription(subscription, session);
+            registerSubscription(subscription, resource);
-     * @param session
+     * @param resource
-    private void registerSubscription(SubscriptionImpl subscription, DavSession session)
-            throws DavException {
+    private void registerSubscription(SubscriptionImpl subscription,
+                                      ObservationResource resource) throws DavException {
-            ObservationManager oMgr = session.getRepositorySession().getWorkspace().getObservationManager();
-            String itemPath = subscription.getLocator().getJcrPath();
+            Session session = getRepositorySession(resource);
+            ObservationManager oMgr = session.getWorkspace().getObservationManager();
+            String itemPath = subscription.getLocator().getRepositoryPath();
-        unregisterSubscription(subs, resource.getSession());
+        unregisterSubscription(subs, resource);
-     * the repository's observation manager.
+     * the repository's observation manager and clean up the references present
+     * on the <code>DavSession</code>.
-     * @param session
+     * @param resource
-                                        DavSession session) throws DavException {
+                                        ObservationResource resource) throws DavException {
-            session.getRepositorySession().getWorkspace().getObservationManager().removeEventListener(subscription);
+            Session session = getRepositorySession(resource);
+            session.getWorkspace().getObservationManager().removeEventListener(subscription);
-            session.removeReference(sId);
+            resource.getSession().removeReference(sId);
-                unregisterSubscription(subs, resource.getSession());
+                unregisterSubscription(subs, resource);
+     * @param resource
+     * @return JCR session
+     */
+    private static Session getRepositorySession(ObservationResource resource) throws DavException {
+        return JcrDavSession.getRepositorySession(resource.getSession());
+    }
+
+    /**
