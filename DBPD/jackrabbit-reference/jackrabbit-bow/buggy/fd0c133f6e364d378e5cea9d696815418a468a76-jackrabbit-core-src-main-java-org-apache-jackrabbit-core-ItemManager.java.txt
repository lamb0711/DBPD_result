JCR-890: concurrent read-only access to a session

Leverage SessionContext in more places.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@957229 13f79535-47bb-0310-9956-ffa450edef68

-                        session.getAccessManager().isGranted(data.getId(), AccessManager.READ) :
-                        session.getAccessManager().isGranted(path, Permission.READ);
+                        sessionContext.getAccessManager().isGranted(data.getId(), AccessManager.READ) :
+                        sessionContext.getAccessManager().isGranted(path, Permission.READ);
-            return session.getAccessManager().canRead(path, data.getId());
+            return sessionContext.getAccessManager().canRead(path, data.getId());
-            /*
-             child item is for sure not NEW (because then the parent was modified).
-             safe to use AccessManager#canRead(Path, ItemId).
-             */
-            return session.getAccessManager().canRead(null, childId);
+            // child item is for sure not NEW (because then the parent was modified).
+            // safe to use AccessManager#canRead(Path, ItemId).
+            return sessionContext.getAccessManager().canRead(null, childId);
-            /*
-             child could be NEW -> don't use AccessManager#canRead(Path, ItemId)
-             */
-            return session.getAccessManager().isGranted(childId, AccessManager.READ);
+            // child could be NEW -> don't use AccessManager#canRead(Path, ItemId)
+            return sessionContext.getAccessManager().isGranted(childId, AccessManager.READ);
