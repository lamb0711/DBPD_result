- comitting latest changes from angela
- adding configuration for authorization header behaviour

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159798 13f79535-47bb-0310-9956-ffa450edef68

+    /** the 'missing-auth-mapping' init parameter */
+    public final static String INIT_PARAM_MISSING_AUTH_MAPPING = "missing-auth-mapping";
+
+    private static String missingAuthMapping;
+
+        missingAuthMapping = getServletConfig().getInitParameter(INIT_PARAM_MISSING_AUTH_MAPPING);
+        log.info("  " + INIT_PARAM_MISSING_AUTH_MAPPING + " = " + missingAuthMapping);
+
-     * string is <code>null</code> or not of the required format, <code>null</code>
-     * is returned.
+     * string is <code>null</code> or not of the required format the behaviour
+     * depends on the {@link #INIT_PARAM_MISSING_AUTH_MAPPING} param:<br>
+     * <ul>
+     * <li> if this init-param is missing, a LoginException is thrown.
+     *      This is suiteable for clients (eg. webdav clients) for with
+     *      sending a proper authorization header is not possible, if the
+     *      server never send a 401.
+     * <li> if this init-param is present, but with an empty value,
+     *      null-credentials are returned, thus forcing an null login
+     *      on the repository
+     * <li> if this init-param has a 'user:password' value, the respective
+     *      simple credentials are generated.
+     * </ul>
+     * @throws LoginException if no suitable auth header and missing-auth-mapping
+     * is not present
-	    throws ServletException {
+	    throws ServletException, LoginException {
-	    return null;
+            // check special handling
+            if (missingAuthMapping == null) {
+                throw new LoginException();
+            } else if (missingAuthMapping.equals("")) {
+                return null;
+            } else {
+                int pos = missingAuthMapping.indexOf(':');
+                if (pos<0) {
+                    return new SimpleCredentials(missingAuthMapping, null);
+                } else {
+                    return new SimpleCredentials(
+                            missingAuthMapping.substring(0, pos),
+                            missingAuthMapping.substring(pos+1).toCharArray()
+                    );
+                }
+            }
+     * @throws LoginException if credentials are invalid
-    public static Session login(HttpServletRequest request) throws ServletException {
+    public static Session login(HttpServletRequest request)
+            throws LoginException, ServletException {
+        } catch (LoginException e) {
+            throw e;
