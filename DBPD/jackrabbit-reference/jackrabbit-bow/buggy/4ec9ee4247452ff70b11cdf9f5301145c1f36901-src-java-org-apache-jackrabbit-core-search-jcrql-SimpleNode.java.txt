- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-	id = i;
+        id = i;
-	this(i);
-	parser = p;
+        this(i);
+        parser = p;
-	parent = n;
+        parent = n;
-	return parent;
+        return parent;
-	if (children == null) {
-	    children = new Node[i + 1];
-	} else if (i >= children.length) {
-	    Node[] c = new Node[i + 1];
-	    System.arraycopy(children, 0, c, 0, children.length);
-	    children = c;
-	}
-	children[i] = n;
+        if (children == null) {
+            children = new Node[i + 1];
+        } else if (i >= children.length) {
+            Node[] c = new Node[i + 1];
+            System.arraycopy(children, 0, c, 0, children.length);
+            children = c;
+        }
+        children[i] = n;
-	return children[i];
+        return children[i];
-	return (children == null) ? 0 : children.length;
+        return (children == null) ? 0 : children.length;
-	return visitor.visit(this, data);
+        return visitor.visit(this, data);
-	if (children != null) {
-	    for (int i = 0; i < children.length; ++i) {
-		children[i].jjtAccept(visitor, data);
-	    }
-	}
-	return data;
+        if (children != null) {
+            for (int i = 0; i < children.length; ++i) {
+                children[i].jjtAccept(visitor, data);
+            }
+        }
+        return data;
-	return JCRQLParserTreeConstants.jjtNodeName[id];
+        return JCRQLParserTreeConstants.jjtNodeName[id];
-	return prefix + toString();
+        return prefix + toString();
-	System.out.println(toString(prefix));
-	if (children != null) {
-	    for (int i = 0; i < children.length; ++i) {
-		SimpleNode n = (SimpleNode) children[i];
-		if (n != null) {
-		    n.dump(prefix + " ");
-		}
-	    }
-	}
+        System.out.println(toString(prefix));
+        if (children != null) {
+            for (int i = 0; i < children.length; ++i) {
+                SimpleNode n = (SimpleNode) children[i];
+                if (n != null) {
+                    n.dump(prefix + " ");
+                }
+            }
+        }
