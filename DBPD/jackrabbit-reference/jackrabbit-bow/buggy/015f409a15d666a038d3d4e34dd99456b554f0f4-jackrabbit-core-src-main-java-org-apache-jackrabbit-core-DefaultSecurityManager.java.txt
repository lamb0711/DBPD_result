JCR-1588: JSR 283 Access Control (work in progress)
JCR-1622 - Session.getUserID returns first principal in the set obtained from Subject.getPrincipals()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@659024 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.security.user.User;
+import org.apache.jackrabbit.core.security.principal.AdminPrincipal;
+import javax.jcr.SimpleCredentials;
+     * @see JackrabbitSecurityManager#getUserID(Subject)
+     */
+    public String getUserID(Subject subject) throws RepositoryException {
+        /* shortcut if the subject contains the AdminPrincipal in which case
+           the userID is already known. */
+        if (!subject.getPrincipals(AdminPrincipal.class).isEmpty()) {
+            return adminId;
+        }
+        /*
+         Retrieve userID from the subject.
+         Since the subject may contain multiple principals and the principal
+         name must not be equals to the UserID by definition, the userID
+         may either be obtained from the login-credentials or from the
+         user manager. in the latter case the set of principals present with
+         the specified subject is used to search for the user.
+        */
+        String uid = null;
+        // try simple access to userID over SimpleCredentials first.
+        Iterator creds = subject.getPublicCredentials(SimpleCredentials.class).iterator();
+        if (creds.hasNext()) {
+            SimpleCredentials sc = (SimpleCredentials) creds.next();
+            uid = sc.getUserID();
+        } else {
+            // no SimpleCredentials: retrieve authorizables corresponding to
+            // a non-group principal. the first one present is used to determine
+            // the userID.
+            for (Iterator it = subject.getPrincipals().iterator(); it.hasNext();) {
+                Principal p = (Principal) it.next();
+                if (!(p instanceof Group)) {
+                    Authorizable authorz = systemUserManager.getAuthorizable(p);
+                    if (authorz != null && !authorz.isGroup()) {
+                        uid = ((User) authorz).getID();
+                        break;
+                    }
+                }
+            }
+        }
+        return uid;
+    }
+
+    /**
