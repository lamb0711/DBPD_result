more work on value constraints

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@109359 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.nodetype.NodeDefImpl;
-import org.apache.jackrabbit.core.nodetype.NodeTypeImpl;
-import org.apache.jackrabbit.core.nodetype.NodeTypeRegistry;
-import org.apache.jackrabbit.core.nodetype.PropertyDefImpl;
+import org.apache.jackrabbit.core.nodetype.*;
-                    if (def.getValueConstraints() != null) {
+                    String[] constraints = def.getValueConstraints();
+                    if (constraints != null) {
+
+                        // need to manually check REFERENCE value constraints
+                        // as this requires a session (target node needs to
+                        // be checked)
+                        if (def.getRequiredType() == PropertyType.REFERENCE) {
+                            for (int i = 0; i < values.length; i++) {
+                                boolean satisfied = false;
+                                try {
+                                    UUID targetUUID = (UUID) values[i].internalValue();
+                                    Node targetNode = session.getNodeByUUID(targetUUID.toString());
+                                    // constraints are OR-ed, i.e. at least one
+                                    // has to be satisfied
+                                    for (int j = 0; j < constraints.length; j++) {
+                                        // a REFERENCE value constraint specifies
+                                        // the name of the required node type of
+                                        // the target node
+                                        String ntName = constraints[j];
+                                        if (targetNode.isNodeType(ntName)) {
+                                            satisfied = true;
+                                            break;
+                                        }
+                                    }
+                                } catch (RepositoryException re) {
+                                    String msg = prop.safeGetJCRPath()
+                                            + ": failed to check REFERENCE value constraint";
+                                    log.error(msg, re);
+                                    throw new ConstraintViolationException(msg, re);
+                                }
+                                if (!satisfied) {
+                                    String msg = prop.safeGetJCRPath()
+                                            + ": does not satisfy the value constraint "
+                                            + constraints[0];   // just report the 1st
+                                    log.warn(msg);
+                                    throw new ConstraintViolationException(msg);
+                                }
+                            }
+                        }
