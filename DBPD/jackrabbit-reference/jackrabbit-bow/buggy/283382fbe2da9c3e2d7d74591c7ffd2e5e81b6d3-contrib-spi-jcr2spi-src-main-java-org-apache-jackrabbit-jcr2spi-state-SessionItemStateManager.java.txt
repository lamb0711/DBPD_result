- Rename TransientChangeLog to TransientItemStateManager.
- ChangeLog does not disconnect ItemStates anymore
- Added WorkspaceItemStateManager which extends CachingItemStateManager. CachingItemStateManager is now more generic.
- TransientItemStateManager implements TransientItemStateFactory

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431572 13f79535-47bb-0310-9956-ffa450edef68

-    private final TransientChangeLog transientStateMgr;
+    private final TransientItemStateManager transientStateMgr;
+     * The root node state or <code>null</code> if it hasn't been retrieved yet.
+     */
+    private NodeState rootNodeState;
+
+    /**
-        this.transientStateMgr = new TransientChangeLog(idFactory, workspaceItemStateMgr);
+        this.transientStateMgr = new TransientItemStateManager(idFactory, workspaceItemStateMgr);
-        ChangeLog changeLog = new TransientChangeLog(idFactory, workspaceItemStateMgr);
+        ChangeLog changeLog = new ChangeLog();
-        ChangeLog changeLog = new TransientChangeLog(idFactory, workspaceItemStateMgr);
+        ChangeLog changeLog = new ChangeLog();
-        destroy(target);
+        // DIFF JR: notification of transient item state manager is done using ItemStateLifeCycleListener
+        //destroy(target);
+        target.notifyStateDiscarded();
-
-        // destroy target state
-        // DIFF JR: destroy targetState (not overlayed state)
-        destroy(targetState);
-     * Destroy an item state.
-     *
-     * @param state item state that should be destroyed
-     */
-    private void destroy(ItemState state) {
-        // DIFF JACKRABBIT: persistentStateMgr.destroy(state);
-        transientStateMgr.deleted(state);
-        // todo correct?
-        state.notifyStateDiscarded();
-    }
-
-
-    /**
