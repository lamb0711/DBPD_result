JCR-1232: Merge UUID to NodeId

Replace more uses of UUID with NodeId. Most notably:

  * Reference InternalValues now contain NodeIds instead of UUIDs
  * Item state serializers use NodeIds instead of UUIDs
  * Frozen ids in versioning are now NodeIds instead of UUIDs
  * Dropped Session.internalGetUUID() in favor of Session.getNodeId()
  * Dropped Session.getNodeByUUID(UUID) in favor of Session.getNodeById(NodeId)

None of these changes has functional effects, expect reducing the amount of extra NodeId objects that need to be instantiated when switching between representations.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792485 13f79535-47bb-0310-9956-ffa450edef68

-                    UUID ref = pState.getValues()[0].getUUID();
-                    NodeId id = new NodeId(ref);
+                    NodeId id = pState.getValues()[0].getNodeId();
-                        log.warn("Error while resolving label reference. Version missing: " + ref);
+                        log.warn("Error while resolving label reference. Version missing: " + id);
-                labelNode.setPropertyValue(label, InternalValue.create(version.getId().getUUID()));
+                labelNode.setPropertyValue(
+                        label, InternalValue.create(version.getId()));
-                UUID predId = UUID.fromString(preds[i].getString());
+                NodeId predId = new NodeId(preds[i].getString());
-                if (!nameCache.containsValue(new NodeId(predId))) {
-                    throw new RepositoryException("invalid predecessor in source node");
+                if (!nameCache.containsValue(predId)) {
+                    throw new RepositoryException(
+                            "Invalid predecessor in source node: " + predId);
-            Iterator iter = nameCache.values().iterator();
+            Iterator<NodeId> iter = nameCache.values().iterator();
-                last = (NodeId) iter.next();
+                last = iter.next();
-            predecessors = new InternalValue[]{InternalValue.create(last.getUUID())};
+            predecessors = new InternalValue[]{InternalValue.create(last)};
-            pNode.setPropertyValue(NameConstants.JCR_COPIEDFROM, InternalValue.create(copiedFrom.getUUID(), true));
+            pNode.setPropertyValue(NameConstants.JCR_COPIEDFROM, InternalValue.create(copiedFrom, true));
-        Set mixins = nodeState.getMixinTypeNames();
-        if (mixins.size() > 0) {
+        Set<Name> mixins = nodeState.getMixinTypeNames();
+        if (!mixins.isEmpty()) {
-            Iterator iter = mixins.iterator();
+            Iterator<Name> iter = mixins.iterator();
