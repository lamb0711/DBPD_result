JCR-1456: Database connection pooling

Merge back all changes from the JCR-1456 sandbox branch.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@886191 13f79535-47bb-0310-9956-ffa450edef68

-import java.sql.DriverManager;
+import javax.sql.DataSource;
+
-import org.apache.jackrabbit.core.persistence.bundle.DerbyPersistenceManager;
-import org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import org.apache.jackrabbit.core.util.db.ConnectionHelper;
+import org.apache.jackrabbit.core.util.db.DerbyConnectionHelper;
-     * Logger instance
+     * {@inheritDoc}
-    private static Logger log = LoggerFactory.getLogger(DerbyDataStore.class);
+    @Override
+    protected ConnectionHelper createConnectionHelper(DataSource dataSrc) throws Exception {
+        return new DerbyConnectionHelper(dataSrc, false);
+    }
+    /**
+     * {@inheritDoc}
+     */
+    @Override
-
-        // check for embedded driver
-        if (!DerbyPersistenceManager.DERBY_EMBEDDED_DRIVER.equals(getDriver())) {
-            return;
-        }
-
-
-            // prepare connection url for issuing shutdown command
-            ConnectionRecoveryManager connectionManager = getConnection();
-
-            String url = connectionManager.getConnection().getMetaData().getURL();
-            int pos = url.lastIndexOf(';');
-            if (pos != -1) {
-                // strip any attributes from connection url
-                url = url.substring(0, pos);
-            }
-            url += ";shutdown=true";
-
-            // we have to reset the connection to 'autoCommit=true' before closing it;
-            // otherwise Derby would mysteriously complain about some pending uncommitted
-            // changes which can't possibly be true.
-            // @todo further investigate
-            connectionManager.getConnection().setAutoCommit(true);
-
-            // need to call it again because we just opened a connection,
-            // and super.close() closes it.
-            super.close();
-
-            // now it's safe to shutdown the embedded Derby database
-            try {
-                DriverManager.getConnection(url);
-            } catch (SQLException e) {
-                // a shutdown command always raises a SQLException
-                log.info(e.getMessage());
-            }
-        } catch (Exception e) {
+            ((DerbyConnectionHelper) conHelper).shutDown(getDriver());
+        } catch (SQLException e) {
