[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-                refTracker.mappedUUID(nodeInfo.getUUID(), node.getUUID());
+                refTracker.mappedUUID(nodeInfo.getId().getUUID(), node.getNodeId().getUUID());
-            String msg = "a node with uuid " + nodeInfo.getUUID()
+            String msg = "a node with uuid " + nodeInfo.getId()
-            Path p0 = hierMgr.getPath(importTarget.getId());
-            Path p1 = hierMgr.getPath(conflicting.getId());
+            Path p0 = hierMgr.getPath(importTarget.getNodeId());
+            Path p1 = hierMgr.getPath(conflicting.getNodeId());
-                    nodeInfo.getUUID());
+                    nodeInfo.getId());
-            if (conflicting.getParentUUID() == null) {
+            NodeId parentId = conflicting.getParentId();
+            if (parentId == null) {
-            NodeId parentId = new NodeId(conflicting.getParentUUID());
-                    nodeInfo.getUUID());
+                    nodeInfo.getId());
-            String uuid = nodeInfo.getUUID();
+            NodeId id = nodeInfo.getId();
-                NodeId idExisting = new NodeId(entry.getUUID());
+                NodeId idExisting = entry.getId();
-                                + itemOps.safeGetJCRPath(existing.getId()));
+                                + itemOps.safeGetJCRPath(existing.getNodeId()));
-                        throw new ItemExistsException(itemOps.safeGetJCRPath(existing.getId()));
+                        throw new ItemExistsException(itemOps.safeGetJCRPath(existing.getNodeId()));
-                if (uuid == null) {
+                if (id == null) {
-                        PropertyId propId = new PropertyId(parent.getUUID(), nodeName);
+                        PropertyId propId = new PropertyId(parent.getNodeId(), nodeName);
-                        conflicting = itemOps.getNodeState(new NodeId(uuid));
+                        conflicting = itemOps.getNodeState(id);
-                        node = itemOps.createNodeState(parent, nodeName, ntName, mixins, uuid, def);
+                        node = itemOps.createNodeState(parent, nodeName, ntName, mixins, id, def);
-                    PropertyId idExisting = new PropertyId(node.getUUID(), propName);
+                    PropertyId idExisting = new PropertyId(node.getNodeId(), propName);
-                        throw new ItemExistsException(itemOps.safeGetJCRPath(existing.getId()));
+                        throw new ItemExistsException(itemOps.safeGetJCRPath(existing.getPropertyId()));
-                    throw new ConstraintViolationException(itemOps.safeGetJCRPath(prop.getId())
+                    throw new ConstraintViolationException(itemOps.safeGetJCRPath(prop.getPropertyId())
-                    String original = ((UUID) val.internalValue()).toString();
-                    String adjusted = refTracker.getMappedUUID(original);
+                    UUID original = (UUID) val.internalValue();
+                    UUID adjusted = refTracker.getMappedUUID(original);
-                        newVals[i] = InternalValue.create(UUID.fromString(adjusted));
+                        newVals[i] = InternalValue.create(adjusted);
