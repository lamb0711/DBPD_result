JCR-1007: Move common implementations of SPI interfaces to spi-commons module

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@553507 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.EventFilterImpl;
-import org.apache.jackrabbit.util.IteratorHelper;
+import javax.jcr.lock.Lock;
-     * items to be accessed upon a call to {@link getNodeInfo(SessionInfo, NodeId)}.
+     * items to be accessed upon a call to {@link #getNodeInfo(SessionInfo, NodeId)}.
-        return new QNodeDefinitionImpl(getNode(nodeId, sInfo).getDefinition(),
-                sInfo.getNamespaceResolver());
+        try {
+            return new QNodeDefinitionImpl(getNode(nodeId, sInfo).getDefinition(),
+                    sInfo.getNamespaceResolver());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-        return new QPropertyDefinitionImpl(
-                getProperty(propertyId, sInfo).getDefinition(),
-                sInfo.getNamespaceResolver(),
-                getQValueFactory());
+        try {
+            return new QPropertyDefinitionImpl(
+                    getProperty(propertyId, sInfo).getDefinition(),
+                    sInfo.getNamespaceResolver(),
+                    getQValueFactory());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-        NodeInfo info = new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
-        return info;
+        try {
+            return new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-            NodeInfo info = new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
+            NodeInfo info;
+            try {
+                info = new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
+            } catch (NameException e) {
+                throw new RepositoryException(e);
+            }
-                    itemInfos.add(new PropertyInfoImpl(property, idFactory, sInfo.getNamespaceResolver(), getQValueFactory()));
+                    try {
+                        itemInfos.add(new PropertyInfoImpl(property, idFactory, sInfo.getNamespaceResolver(), getQValueFactory()));
+                    } catch (NameException e) {
+                        throw new RepositoryException(e);
+                    }
-                    itemInfos.add(new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver()));
+                    try {
+                        itemInfos.add(new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver()));
+                    } catch (NameException e) {
+                        throw new RepositoryException(e);
+                    }
-        while (children.hasNext()) {
-            childInfos.add(new ChildInfoImpl(children.nextNode(),
-                    sInfo.getNamespaceResolver()));
+        try {
+            while (children.hasNext()) {
+                childInfos.add(new ChildInfoImpl(children.nextNode(),
+                        sInfo.getNamespaceResolver()));
+            }
+        } catch (NameException e) {
+            throw new RepositoryException(e);
-        return new IteratorHelper(childInfos);
+        return childInfos.iterator();
-        return new PropertyInfoImpl(getProperty(propertyId, sInfo), idFactory,
-                sInfo.getNamespaceResolver(), getQValueFactory());
+        try {
+            return new PropertyInfoImpl(getProperty(propertyId, sInfo), idFactory,
+                    sInfo.getNamespaceResolver(), getQValueFactory());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-        return new LockInfoImpl(getNode(nodeId, sInfo), idFactory,
+        return new LockInfoImpl(getNode(nodeId, sInfo).getLock(), idFactory,
-                n.lock(deep, sessionScoped);
-                return new LockInfoImpl(n, idFactory, sInfo.getNamespaceResolver());
+                Lock lock = n.lock(deep, sessionScoped);
+                return new LockInfoImpl(lock, idFactory, sInfo.getNamespaceResolver());
-        for (NodeTypeIterator it = ntMgr.getAllNodeTypes(); it.hasNext(); ) {
-            NodeType nt = it.nextNodeType();
-            nodeTypes.add(new QNodeTypeDefinitionImpl(nt,
-                    sInfo.getNamespaceResolver(), getQValueFactory()));
+        try {
+            for (NodeTypeIterator it = ntMgr.getAllNodeTypes(); it.hasNext(); ) {
+                NodeType nt = it.nextNodeType();
+                nodeTypes.add(new QNodeTypeDefinitionImpl(nt,
+                        sInfo.getNamespaceResolver(), getQValueFactory()));
+            }
+        } catch (NameException e) {
+            throw new RepositoryException(e);
