JCR-2555: Improved reusability of the JCA package

Move the handling of repository URI query parameters to getRepository(Map) so it'll work for all clients

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@924333 13f79535-47bb-0310-9956-ffa450edef68

+        // Use the query part of a repository URI as additional parameters
+        String uri = parameters.get(JcrUtils.REPOSITORY_URI);
+        if (uri != null) {
+            Map<String, String> copy = new HashMap<String, String>(parameters);
+            try {
+                URI u = new URI(uri);
+                String query = u.getRawQuery();
+                if (query != null) {
+                    for (String entry : query.split("&")) {
+                        int i = entry.indexOf('=');
+                        if (i != -1) {
+                            copy.put(
+                                    decode(entry.substring(0, i), "UTF-8"),
+                                    decode(entry.substring(i + 1), "UTF-8"));
+                        } else {
+                            copy.put(
+                                    decode(entry, "UTF-8"),
+                                    Boolean.TRUE.toString());
+                        }
+                    }
+                    copy.put(
+                            JcrUtils.REPOSITORY_URI,
+                            new URI(u.getScheme(), u.getRawAuthority(),
+                                    u.getRawPath(), null, u.getRawFragment()
+                                    ).toASCIIString());
+                    parameters = copy;
+                }
+            } catch (URISyntaxException e) {
+                throw new RepositoryException(e);
+            } catch (UnsupportedEncodingException e) {
+                throw new RepositoryException(e);
+            }
+        }
+
-        try {
-            Map<String, String> parameters = new HashMap<String, String>();
-            URI u = new URI(uri);
-            String query = u.getRawQuery();
-            if (query != null) {
-                for (String entry : query.split("&")) {
-                    int i = entry.indexOf('=');
-                    if (i != -1) {
-                        parameters.put(
-                                decode(entry.substring(0, i), "UTF-8"),
-                                decode(entry.substring(i + 1), "UTF-8"));
-                    } else {
-                        parameters.put(
-                                decode(entry, "UTF-8"),
-                                Boolean.TRUE.toString());
-                    }
-                }
-                parameters.put(
-                        JcrUtils.REPOSITORY_URI,
-                        new URI(u.getScheme(), u.getRawAuthority(),
-                                u.getRawPath(), null, u.getRawFragment()
-                                ).toASCIIString());
-            } else {
-                parameters.put(JcrUtils.REPOSITORY_URI, uri);
-            }
-            return getRepository(parameters);
-        } catch (UnsupportedEncodingException e) {
-            throw new RepositoryException("Unable to decode URI: " + uri, e);
-        } catch (URISyntaxException e) {
-            throw new RepositoryException("Invalid repository URI: " + uri, e);
-        }
+        Map<String, String> parameters = new HashMap<String, String>();
+        parameters.put(JcrUtils.REPOSITORY_URI, uri);
+        return getRepository(parameters);

MOV21 MOV21 INS8 INS60 INS25 MOV60 MOV21 MOV41 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS33 INS60 INS54 INS42 INS42 INS40 INS74 INS59 INS8 INS12 INS12 INS43 INS43 INS43 INS42 INS14 MOV60 MOV60 INS25 MOV44 INS8 MOV44 INS8 INS42 INS42 INS42 INS74 INS42 MOV27 INS8 INS53 INS53 INS43 INS43 INS43 INS70 INS21 INS21 INS14 INS14 INS42 INS42 INS42 MOV44 MOV32 INS8 INS32 INS7 MOV43 INS42 MOV43 INS42 MOV60 INS25 INS42 INS42 INS40 MOV32 INS42 INS42 MOV27 INS8 INS8 INS21 INS21 INS32 INS32 INS42 INS42 MOV32 MOV32 INS42 INS42 MOV32 MOV32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL8 DEL25 DEL8 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8