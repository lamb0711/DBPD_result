JCR-2087 Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@772955 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-    protected boolean initialized = false;
+    protected boolean initialized;
-    protected boolean consistencyCheck = false;
+    protected boolean consistencyCheck;
-    protected boolean consistencyFix = false;
+    protected boolean consistencyFix;
-    protected boolean blockOnConnectionLoss = false;
+    protected boolean blockOnConnectionLoss;
-                                          boolean fix, Collection modifications) {
+                                          boolean fix, Collection<NodePropBundle> modifications) {
-        Collection missingChildren = new ArrayList();
-        Iterator iter = bundle.getChildNodeEntries().iterator();
-        while (iter.hasNext()) {
-            NodePropBundle.ChildNodeEntry entry = (NodePropBundle.ChildNodeEntry) iter.next();
+        Collection<NodePropBundle.ChildNodeEntry> missingChildren = new ArrayList<NodePropBundle.ChildNodeEntry>();
+        for (NodePropBundle.ChildNodeEntry entry : bundle.getChildNodeEntries()) {
-            Iterator iterator = missingChildren.iterator();
-            while (iterator.hasNext()) {
-                bundle.getChildNodeEntries().remove(iterator.next());
+            for (NodePropBundle.ChildNodeEntry entry : missingChildren) {
+                bundle.getChildNodeEntries().remove(entry);
-        Collection modifications = new ArrayList();
+        Collection<NodePropBundle> modifications = new ArrayList<NodePropBundle>();
-            List uuidList = new ArrayList(uuids.length);
+            List<UUID> uuidList = new ArrayList<UUID>(uuids.length);
-                        Iterator iter = bundle.getChildNodeEntries().iterator();
-                        while (iter.hasNext()) {
-                            NodePropBundle.ChildNodeEntry entry = (NodePropBundle.ChildNodeEntry) iter.next();
+                        for (NodePropBundle.ChildNodeEntry entry : bundle.getChildNodeEntries()) {
-            Iterator iterator = modifications.iterator();
-            while (iterator.hasNext()) {
-                NodePropBundle bundle = (NodePropBundle) iterator.next();
+            for (NodePropBundle bundle : modifications) {
-        List key = new ArrayList();
+        List<Object> key = new ArrayList<Object>();
-        List params = new ArrayList();
+        List<Object> params = new ArrayList<Object>();
-            ArrayList result = new ArrayList();
+            ArrayList<UUID> result = new ArrayList<UUID>();
-        private final ArrayList list;
+        private final ArrayList<UUID> list;
-        ListNodeIdIterator(ArrayList list) {
+        ListNodeIdIterator(ArrayList<UUID> list) {
-            return new NodeId((UUID) list.get(pos++));
+            return new NodeId(list.get(pos++));

MOV60 MOV25 INS74 INS70 INS74 MOV43 INS43 INS74 INS44 MOV32 MOV8 INS74 INS74 INS74 MOV43 INS43 INS74 INS42 MOV43 INS43 MOV43 INS42 INS70 MOV43 MOV43 INS70 MOV43 INS43 UPD42 MOV43 INS43 UPD42 INS42 MOV43 MOV43 INS40 INS74 INS44 INS42 MOV8 INS74 INS74 INS44 INS42 MOV8 INS42 INS74 INS42 INS74 INS74 MOV32 MOV43 MOV43 MOV43 INS42 MOV43 MOV43 MOV43 INS43 INS43 INS42 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS42 INS74 UPD42 MOV42 INS42 INS42 INS42 INS74 UPD42 MOV42 MOV43 INS43 MOV43 INS43 INS42 INS42 INS70 INS44 MOV32 MOV8 MOV43 INS42 DEL40 DEL26 DEL9 DEL9 DEL9 DEL9 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL11