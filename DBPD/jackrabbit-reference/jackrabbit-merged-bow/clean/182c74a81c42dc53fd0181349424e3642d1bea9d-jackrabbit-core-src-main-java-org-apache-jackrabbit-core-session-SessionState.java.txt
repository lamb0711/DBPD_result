JCR-890: concurrent read-only access to a session

Improved javadocs on SessionState

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@962482 13f79535-47bb-0310-9956-ffa450edef68

- * The internal state of a session.
+ * Internal session state. This class keeps track of the lifecycle of
+ * a session and controls concurrent access to the session internals.
+ * <p>
+ * The session lifecycle is pretty simple: there are only two lifecycle
+ * states, "alive" and "closed", and only one possible state transition,
+ * from "alive" to "closed".
+ * <p>
+ * Concurrent access to session internals is controlled by the
+ * {@link #perform(SessionOperation)} method that guarantees that no two
+ * {@link SessionOperation operations} are performed concurrently on the
+ * same session.
+ *
+ * @see <a href="https://issues.apache.org/jira/browse/JCR-890">JCR-890</a>
-     * use a session. TODO: Check if this is a performance issue!
+     * use a session.
+    /**
+     * Flag to indicate a closed session. When <code>null</code>, the session
+     * is still alive. And when the session is closed, this reference is set
+     * to an exception that contains the stack trace of where the session was
+     * closed. The stack trace is used as extra information in possible
+     * warning logs caused by clients attempting to access a closed session.
+     */
-     * Checks whether this session is alive.
+     * Checks whether this session is alive. This method should generally
+     * only be called from within a performed {@link SessionOperation}, as
+     * otherwise there's no guarantee against another thread closing the
+     * session right after this method has returned.
-     * @throws RepositoryException if the operation fails
+     * @throws RepositoryException if the operation fails or
+     *                             if the session has already been closed
+    /**
+     * Closes this session.
+     *
+     * @return <code>true</code> if the session was closed, or
+     *         <code>false</code> if the session had already been closed
+     */

INS65 INS29 INS29 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS65 INS65 INS65 INS68 INS42 INS66 UPD66 INS66 INS66 INS66 INS66 INS66 UPD66 INS66 INS65 INS66 INS66 INS66 UPD66 INS66 INS66 INS66 INS66 INS42 INS69 INS42 INS43 INS42