JCR-3402 getSize() returning too many often -1 

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1465974 13f79535-47bb-0310-9956-ffa450edef68

-     * This is the raw number of results that matched the query. This number
-     * also includes matches which will not be returned due to access
-     * restrictions. This value is set whenever hits are obtained.
+     * This is the raw number of results that matched the query, ignoring limit and offset. Only set when accurate.
+     */
+    private int totalResults = -1;
+
+    /**
+     * This is the number of results that matched the query, with limit and offset. Only set when accurate.
+        
+        // quick check
+        // if numResults is set, all relevant results have been fetched
+        if (numResults != -1) {
+            return;
+        }
+            List<ScoreNode[]> offsetNodes = new ArrayList<ScoreNode[]>();
-                collectScoreNodes(result, new ArrayList<ScoreNode[]>(), offset);
+                collectScoreNodes(result, offsetNodes, offset);
-            // update numResults
-            numResults = result.getSize();
+            // update numResults if all results have been fetched 
+            // if resultNodes.getSize() is strictly smaller than maxResultSize, it means that all results have been fetched
+            int resultSize = resultNodes.size();
+            if (resultSize < maxResultSize) {
+                if (resultNodes.isEmpty()) {
+                    // if there's no result nodes, the actual totalResults if smaller or equals than the offset
+                    totalResults = offsetNodes.size();
+                    numResults = 0;
+                }
+                else {
+                    totalResults = resultSize + (int) offset;
+                    numResults = resultSize;
+                }
+            }
+            else if (resultSize == limit) {
+                // if there's "limit" results, we can't know the total size (which may be greater), but the result size is the limit
+                numResults = (int) limit;
+            }
-     * Keep in mind that this number may get smaller if nodes are found in
-     * the result set which the current session has no permission to access.
-     * FIXME: This might be a security problem.
-        if (numResults == -1) {
-            return -1;
-        } else {
-            return numResults - invalid;
-        }
+        return totalResults;
-         * <p/>
-         * This value may shrink when the query result encounters non-existing
-         * nodes or the session does not have access to a node.
-            int total = getTotalSize();
-            if (total == -1) {
-                return -1;
-            }
-            long size = offset > total ? 0 : total - offset;
-            if (limit >= 0 && size > limit) {
-                return limit;
-            } else {
-                return size;
-            }
+            return numResults;
-                    // this check is only possible if we have numResults
-                    if (numResults != -1 && (nextPos + invalid) >= numResults) {
+                    // if numResults is set, all relevant results have been fetched
+                    if (numResults != -1) {

INS23 INS59 INS29 INS83 INS39 MOV59 INS8 INS42 MOV38 INS65 INS25 MOV41 INS8 UPD66 INS66 INS27 INS8 INS42 MOV41 INS42 INS38 INS41 INS60 INS60 INS25 UPD42 INS34 INS74 INS59 INS39 INS59 INS27 INS8 INS25 INS43 INS5 INS42 MOV14 INS42 INS32 INS42 INS42 INS25 INS27 INS8 INS42 INS43 INS85 INS42 INS42 INS32 INS8 INS8 INS42 INS42 INS21 INS42 INS42 INS42 INS42 MOV21 INS21 INS21 INS21 INS7 MOV27 INS7 INS7 INS7 INS42 INS11 UPD42 INS42 INS34 INS42 INS27 INS42 INS42 INS39 INS42 UPD42 UPD42 INS42 INS11 INS39 INS42 DEL66 DEL66 DEL66 DEL66 DEL66 DEL42 DEL42 DEL27 DEL42 DEL27 DEL34 DEL38 DEL41 DEL8 DEL8 DEL25 DEL8 DEL66 DEL66 DEL66 DEL39 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL34 DEL38 DEL27 DEL34 DEL38 DEL41 DEL8 DEL25 DEL39 DEL42 DEL42 DEL42 DEL27 DEL34 DEL42 DEL42 DEL27 DEL16 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL27 DEL27 DEL8 DEL42 DEL41 DEL8 DEL25 DEL8 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL27