JCR-189: QueryHandler should use lucene Input-/OutputStream implementations

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@233174 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.fs.FileSystemException;
+import java.io.File;
+     * The location of the search index.
+     * <p/>
+     * Note: This is a <b>mandatory</b> parameter!
+     */
+    private String path;
+
+    /**
-    private int minMergeDocs = 1000;
+    private int minMergeDocs = 100;
-     * Initializes this <code>QueryHandler</code>.
+     * Initializes this <code>QueryHandler</code>. This implementation requires
+     * that a path parameter is set in the configuration. If this condition
+     * is not met, a <code>IOException</code> is thrown.
+     *
-        try {
-            QueryHandlerContext context = getContext();
-            index = new MultiIndex(context.getFileSystem(), this,
-                    context.getItemStateManager(), context.getRootUUID());
-            if (index.getRedoLogApplied() || forceConsistencyCheck) {
-                log.info("Running consistency check...");
-                try {
-                    ConsistencyCheck check = ConsistencyCheck.run(index,
-                            context.getItemStateManager());
-                    if (autoRepair) {
-                        check.repair(true);
-                    } else {
-                        List errors = check.getErrors();
-                        if (errors.size() == 0) {
-                            log.info("No errors detected.");
-                        }
-                        for (Iterator it = errors.iterator(); it.hasNext(); ) {
-                            ConsistencyCheckError err = (ConsistencyCheckError) it.next();
-                            log.info(err.toString());
-                        }
+        QueryHandlerContext context = getContext();
+        if (path == null) {
+            throw new IOException("SearchIndex requires 'path' parameter in configuration!");
+        }
+        index = new MultiIndex(new File(path), this,
+                context.getItemStateManager(), context.getRootUUID());
+        if (index.getRedoLogApplied() || forceConsistencyCheck) {
+            log.info("Running consistency check...");
+            try {
+                ConsistencyCheck check = ConsistencyCheck.run(index,
+                        context.getItemStateManager());
+                if (autoRepair) {
+                    check.repair(true);
+                } else {
+                    List errors = check.getErrors();
+                    if (errors.size() == 0) {
+                        log.info("No errors detected.");
-                } catch (Exception e) {
-                    log.warn("Failed to run consistency check on index: " + e);
+                    for (Iterator it = errors.iterator(); it.hasNext(); ) {
+                        ConsistencyCheckError err = (ConsistencyCheckError) it.next();
+                        log.info(err.toString());
+                    }
+            } catch (Exception e) {
+                log.warn("Failed to run consistency check on index: " + e);
-        } catch (FileSystemException e) {
-            throw new IOException(e.getMessage());
+     * Sets the location of the search index.
+     *
+     * @param path the location of the search index.
+     */
+    public void setPath(String path) {
+        this.path = path;
+    }
+
+    /**
+     * Returns the location of the search index. Returns <code>null</code> if
+     * not set.
+     *
+     * @return the location of the search index.
+     */
+    public String getPath() {
+        return path;
+    }
+
+    /**

MOV26 UPD40 INS23 INS31 INS31 INS29 INS83 INS43 INS59 MOV8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS42 INS42 UPD34 INS25 INS65 INS65 INS43 INS42 INS21 INS65 INS65 INS42 INS41 INS66 INS66 INS66 UPD66 INS66 INS66 INS27 INS8 INS66 INS42 INS66 INS42 INS7 INS66 INS66 INS66 INS42 INS42 INS33 INS53 INS22 INS42 INS14 INS14 INS52 INS42 MOV43 INS45 INS43 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8