JCR-97: Improved Checkstyle conformance by removing inline conditionals.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@162075 13f79535-47bb-0310-9956-ffa450edef68

-        return normalize
-                ? parse(jcrPath, null, resolver).getNormalizedPath()
-                : parse(jcrPath, null, resolver);
+        Path path = parse(jcrPath, null, resolver);
+        if (normalize) {
+            return path.getNormalizedPath();
+        } else {
+            return path;
+        }
-        return canonicalize
-                ? parse(relJCRPath, parent, resolver).getCanonicalPath()
-                : parse(relJCRPath, parent, resolver);
+        Path path = parse(relJCRPath, parent, resolver);
+        if (canonicalize) {
+            return path.getCanonicalPath();
+        } else {
+            return path;
+        }
-        return normalize
-                ? pb.getPath().getNormalizedPath()
-                : pb.getPath();
+        Path path = pb.getPath();
+        if (normalize) {
+            return path.getNormalizedPath();
+        } else {
+            return path;
+        }
-        return normalize
-                ? pb.getPath().getNormalizedPath()
-                : pb.getPath();
+        Path path = pb.getPath();
+        if (normalize) {
+            return path.getNormalizedPath();
+        } else {
+            return path;
+        }
-        return normalize
-                ? pb.getPath().getNormalizedPath()
-                : pb.getPath();
+        Path path = pb.getPath();
+        if (normalize) {
+            return path.getNormalizedPath();
+        } else {
+            return path;
+        }
-        return resolver == null
-                ? null
-                : new Path((PathElement[]) list.toArray(new PathElement[list.size()]), isNormalized);
+        if (resolver != null) {
+            return new Path(
+                    (PathElement[]) list.toArray(new PathElement[list.size()]),
+                    isNormalized);
+        } else {
+            return null;
+        }
-                last = queue.isEmpty() ? null : (PathElement) queue.getLast();
+                if (queue.isEmpty()) {
+                    last = null;
+                } else {
+                    last = (PathElement) queue.getLast();
+                }

INS60 INS25 INS60 INS25 INS60 INS25 INS60 INS25 INS60 INS25 INS25 INS43 INS59 INS42 INS8 INS8 INS43 INS59 INS42 INS8 INS8 INS43 INS59 INS42 INS8 INS8 INS43 INS59 INS42 INS8 INS8 INS43 INS59 INS42 INS8 INS8 INS27 INS8 INS8 INS42 INS42 MOV32 INS41 INS41 INS42 INS42 MOV32 INS41 INS41 INS42 INS42 MOV32 INS41 INS41 INS42 INS42 MOV32 INS41 INS41 INS42 INS42 MOV32 INS41 INS41 INS42 INS33 MOV41 INS41 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 MOV14 INS33 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS25 MOV32 INS8 INS8 INS21 MOV21 INS7 INS42 INS33 MOV11 DEL42 DEL33 DEL42 DEL32 DEL42 DEL32 DEL16 DEL41 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL16 DEL41 DEL42 DEL32 DEL42 DEL32 DEL16 DEL41 DEL42 DEL32 DEL42 DEL32 DEL16 DEL41 DEL42 DEL32 DEL42 DEL32 DEL16 DEL41 DEL42 DEL33 DEL27 DEL33 DEL16 DEL33 DEL16