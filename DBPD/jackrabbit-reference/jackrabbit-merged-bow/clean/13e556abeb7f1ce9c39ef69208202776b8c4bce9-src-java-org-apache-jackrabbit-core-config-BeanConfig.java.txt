Refactoring step 6 (JCR-53)
 - Documented the simple configuration objects
 - Fixed a bean instantiation problem (Properties.containsKey does not work!)
 - Minor cleanups in ConfigurationParser

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156176 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Enumeration;
-    private String className;
+    private final String className;
-    private Properties properties;
+    private final Properties properties;
-     * Creates a bean configuration.
+     * Creates a bean configuration. Note that a copy of the given
+     * bean properties is stored as a part of the created configuration
+     * object. Thus the caller is free to modify the given properties
+     * once the configuration object has been created.
-        this.properties = properties;
+        this.properties = new Properties(properties);
+    /**
+     * Copies a bean configuration.
+     *
+     * @param config the configuration to be copied
+     */
+    /**
+     * Creates a new instance of the configured bean class.
+     *
+     * @return new bean instance
+     * @throws ClassNotFoundException if the bean class is not found
+     * @throws InstantiationException if the bean could not be instantiated
+     * @throws IllegalAccessException if the bean methods are protected
+     */
-            if (properties.containsKey(name)) {
+            String value = properties.getProperty(name);
+            if (value != null) {

INS83 INS83 INS29 INS29 INS65 INS65 INS65 INS65 INS65 INS65 INS65 UPD66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS14 INS60 INS43 INS42 INS43 INS59 INS27 INS42 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL32