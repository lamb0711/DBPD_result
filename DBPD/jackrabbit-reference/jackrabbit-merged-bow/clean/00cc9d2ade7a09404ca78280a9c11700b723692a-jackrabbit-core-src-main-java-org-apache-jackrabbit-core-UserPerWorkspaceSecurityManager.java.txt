JCR-2419 WorkspaceAccessManager defined with SecurityManager that keeps users per workspace must test if user exists

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@886107 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import java.security.acl.Group;
-    /**
-     * the default logger
-     */
-    private static final Logger log = LoggerFactory.getLogger(UserPerWorkspaceSecurityManager.class);
-
-    private final class WorkspaceAccessManagerImpl extends SimpleWorkspaceAccessManager {
-        @Override
+    private final class WorkspaceAccessManagerImpl implements WorkspaceAccessManager {
+        /**
+         * Does nothing.
+         * @see WorkspaceAccessManager#init(javax.jcr.Session)
+         */
+        public void init(Session systemSession) throws RepositoryException {
+            // nothing to do.
+        }
+
+        /**
+         * Does nothing.
+         * @see org.apache.jackrabbit.core.security.authorization.WorkspaceAccessManager#close()
+         */
+        public void close() throws RepositoryException {
+            // nothing to do.
+        }
+
+        /**
+         * Returns <code>true</code> if a workspace with the given
+         * <code>workspaceName</code> exists and if that workspace defines a
+         * user that matches any of the given <code>principals</code>;
+         * <code>false</code> otherwise.
+         *
+         * @see WorkspaceAccessManager#grants(java.util.Set, String)
+         */
-                return super.grants(principals, workspaceName);
+                UserManager umgr = UserPerWorkspaceSecurityManager.this.getSystemUserManager(workspaceName);
+                for (Principal principal : principals) {
+                    if (!(principal instanceof Group)) {
+                        // check if the workspace identified by the given workspace
+                        // name contains a user with this principal
+                        if (umgr.getAuthorizable(principal) != null) {
+                            return true;
+                        }
+                    }
+                }
+            return false;

MOV26 UPD40 INS55 INS83 INS83 INS42 INS43 INS31 INS31 MOV31 UPD42 MOV42 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS65 INS65 INS43 INS42 INS42 INS65 INS65 UPD42 MOV42 INS65 INS65 INS41 INS66 INS68 UPD42 MOV42 INS66 INS68 INS66 INS66 INS66 INS66 INS68 INS9 INS42 INS42 INS69 INS40 INS42 INS42 INS42 INS69 INS69 INS60 INS70 INS43 INS43 INS43 INS43 INS59 INS44 INS42 INS8 INS40 INS40 INS42 INS42 INS42 INS32 INS43 INS42 INS25 INS52 INS42 INS42 INS42 INS38 INS8 INS42 INS36 INS25 INS62 INS27 INS8 INS42 INS43 INS32 INS33 INS41 INS42 INS42 INS42 INS42 INS9 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL43 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL23 DEL42 DEL78 DEL42 DEL42 DEL42 DEL48 DEL41 DEL83 DEL83 DEL42 DEL43 DEL55