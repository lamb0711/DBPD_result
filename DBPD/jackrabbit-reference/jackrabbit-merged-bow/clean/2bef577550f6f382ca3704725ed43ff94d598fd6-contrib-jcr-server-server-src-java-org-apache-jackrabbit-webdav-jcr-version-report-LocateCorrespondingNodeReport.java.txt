JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.*;
-import org.apache.jackrabbit.webdav.util.XmlUtil;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
-import org.jdom.Document;
-import org.jdom.Element;
+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.DavSession;
+import org.apache.jackrabbit.webdav.DavConstants;
+import org.apache.jackrabbit.webdav.DavResourceLocator;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
-import javax.jcr.Item;
-import javax.jcr.Node;
+import javax.jcr.Item;
+import javax.jcr.Node;
+import javax.jcr.PathNotFoundException;
-    private DeltaVResource resource;
-    private String workspaceHref;
+    private String correspHref;
-     * @see Report#setResource(org.apache.jackrabbit.webdav.version.DeltaVResource)
+     * Always returns <code>false</code>.
+     *
+     * @return false
+     * @see org.apache.jackrabbit.webdav.version.report.Report#isMultiStatusReport()
-    public void setResource(DeltaVResource resource) {
+    public boolean isMultiStatusReport() {
+        return false;
+    }
+
+    /**
+     * @see Report#init(org.apache.jackrabbit.webdav.version.DeltaVResource, org.apache.jackrabbit.webdav.version.report.ReportInfo)
+     */
+    public void init(DeltaVResource resource, ReportInfo info) throws DavException {
-            throw new IllegalArgumentException("Resource must not be null.");
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "Resource must not be null.");
-            throw new IllegalArgumentException("The resource must provide a non-null session object in order to create the dcr:locate-corresponding-node report.");
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "The resource must provide a non-null session object in order to create the dcr:locate-corresponding-node report.");
-        this.resource = resource;
+        if (!getType().isRequestedReportType(info)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "dcr:locate-corresponding-node expected.");
-    /**
-     * @see Report#setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo)
-     */
-    public void setInfo(ReportInfo info) {
-        if (info == null || !REPORT_NAME.equals(info.getReportElement().getName())) {
-            throw new IllegalArgumentException("dcr:locate-corresponding-node expected.");
-        }
-        Element workspace = info.getReportElement().getChild(DeltaVConstants.WORKSPACE.getName(), DeltaVConstants.WORKSPACE.getNamespace());
-        if (workspace != null) {
-            workspaceHref = workspace.getChildText(DavConstants.XML_HREF, DavConstants.NAMESPACE);
-        }
-    }
-
-    /**
-     * @see org.apache.jackrabbit.webdav.version.report.Report#toXml()
-     */
-    public Document toXml() throws DavException {
-        if (resource == null || workspaceHref == null) {
-            throw new DavException(DavServletResponse.SC_INTERNAL_SERVER_ERROR, "Error while running dcr:locate-corresponding-node report: resource must not be null and request body must define the href of a source workspace");
+        Element workspace = info.getContentElement(DeltaVConstants.WORKSPACE.getName(), DeltaVConstants.WORKSPACE.getNamespace());
+        String workspaceHref = DomUtil.getChildTextTrim(workspace, DavConstants.XML_HREF, DavConstants.NAMESPACE);
+        if (workspaceHref == null || "".equals(workspaceHref)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "Request body must define the href of a source workspace");
+            this.correspHref = getCorrespondingResourceHref(resource, workspaceHref);
+        } catch (RepositoryException e) {
+            throw new JcrDavException(e);
+        }
+    }
+
+    /**
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     */
+    public Element toXml(Document document) {
+        Element elem = DomUtil.createElement(document, "locate-corresponding-node-report", ItemResourceConstants.NAMESPACE);
+        if (correspHref != null) {
+            elem.appendChild(DomUtil.hrefToXml(correspHref, document));
+        }
+        return elem;
+        }
+
+    private static String getCorrespondingResourceHref(DeltaVResource resource, String workspaceHref) throws RepositoryException {
-
-                Element e = new Element("locate-corresponding-node-report", ItemResourceConstants.NAMESPACE);
-                e.addContent(XmlUtil.hrefToXml(corrLoc.getHref(true)));
-                return new Document(e);
+            return corrLoc.getHref(true);
-                throw new DavException(DavServletResponse.SC_INTERNAL_SERVER_ERROR, "Error while running dcr:locate-corresponding-node report: resource must represent a jcr node.");
-            }
-        } catch (RepositoryException e) {
-            throw new JcrDavException(e);
+            throw new PathNotFoundException("Node with path " + itemPath + " does not exist.");

MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 UPD40 INS40 INS40 UPD40 UPD40 INS40 INS31 MOV43 INS29 INS83 INS39 INS42 INS8 UPD42 MOV44 MOV43 MOV43 UPD42 INS44 INS8 INS83 UPD83 INS43 INS42 INS44 INS44 INS43 MOV8 UPD42 INS65 INS65 INS65 INS41 INS25 MOV60 INS60 MOV25 INS54 MOV43 INS42 INS60 MOV25 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS66 INS66 INS68 INS9 INS38 MOV8 INS43 INS59 INS8 MOV12 MOV43 INS59 INS42 INS42 INS42 INS8 INS40 INS42 UPD42 INS69 INS32 INS42 INS42 INS32 INS32 MOV21 INS40 UPD42 INS42 INS32 UPD42 INS53 MOV43 INS32 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS40 INS40 INS45 INS42 INS42 MOV43 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS40 INS32 MOV32 INS14 UPD43 INS40 UPD43 INS40 INS42 UPD40 UPD45 UPD40 UPD45 INS32 INS42 INS42 INS32 INS43 INS27 UPD42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 INS45 INS42 INS45 DEL42 DEL43 DEL83 DEL42 DEL59 DEL23 DEL32 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL39 DEL42 DEL40 DEL40 DEL32 DEL7 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL38 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL40 DEL42 DEL68 DEL65 DEL29 DEL42 DEL45 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL14 DEL42 DEL54 DEL8