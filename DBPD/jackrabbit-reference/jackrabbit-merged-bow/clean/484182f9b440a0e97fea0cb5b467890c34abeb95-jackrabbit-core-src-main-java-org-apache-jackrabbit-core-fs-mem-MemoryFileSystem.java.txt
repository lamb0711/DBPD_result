JCR-2246 Deprecate/remove unused FileSystem features

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@802677 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.fs.RandomAccessOutputStream;
-    public void copy(String srcPath, String destPath)
-            throws FileSystemException {
-        assertExistence(srcPath);
-        MemoryFile srcFile = getFile(srcPath);
-        OutputStream destinationOutputStream = getOutputStream(destPath);
-        try {
-            destinationOutputStream.write(srcFile.getData());
-        } catch (IOException e) {
-            throw new FileSystemException(e.getMessage(), e);
-        } finally {
-            IOUtils.closeQuietly(destinationOutputStream);
-        }
-    }
-
-    public RandomAccessOutputStream getRandomAccessOutputStream(String filePath)
-            throws UnsupportedOperationException {
-        throw new UnsupportedOperationException(
-                "Random access is not implemented for the memory file system");
-    }
-
-    public void move(String srcPath, String destPath)
-            throws FileSystemException {
-        assertExistence(srcPath);
-        if (exists(destPath)) {
-            throw new FileSystemException("Destination exists: " + destPath);
-        }
-
-        // Create destination folder if it does not yet exist
-        String[] path = destPath.split(SEPARATOR);
-        String folder = "";
-        for (int i = 1; i < path.length; i++) {
-            folder += SEPARATOR + path[i];
-            if (!exists(folder)) {
-                createFolder(folder);
-            }
-        }
-        
-        Map moves = new HashMap();
-        moves.put(srcPath, destPath);
-        if (getEntry(srcPath).isFolder()) {
-            srcPath = srcPath + "/";
-            Iterator iterator = entries.keySet().iterator();
-            while (iterator.hasNext()) {
-                String name = (String) iterator.next();
-                if (name.startsWith(srcPath)) {
-                    moves.put(
-                            name,
-                            destPath + "/" + name.substring(srcPath.length()));
-                }
-            }
-        }
-
-        Iterator iterator = moves.entrySet().iterator();
-        while (iterator.hasNext()) {
-            Map.Entry entry = (Map.Entry) iterator.next();
-            entries.put(entry.getValue(), entries.remove(entry.getKey()));
-        }
-    }
-
-    public void touch(String filePath) throws FileSystemException {
-        assertIsFile(filePath);
-        getEntry(filePath).touch();
-    }
-

DEL40 DEL26 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL27 DEL7 DEL21 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL45 DEL27 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL61 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL31