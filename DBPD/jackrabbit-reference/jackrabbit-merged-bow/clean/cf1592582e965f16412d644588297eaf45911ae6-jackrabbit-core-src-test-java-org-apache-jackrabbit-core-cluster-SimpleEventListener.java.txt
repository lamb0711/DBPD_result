JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

- clustering support
- move definition & def-reader/writer to spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1095338 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinition;
-        NodeTypeEventListener, NamespaceEventListener, UpdateEventListener {
+        NodeTypeEventListener, NamespaceEventListener, PrivilegeEventListener, UpdateEventListener {
+    //---------------------------------------------< PrivilegeEventListener >---
+    /**
+     * {@inheritDoc}
+     */
+    public void externalRegisteredPrivileges(Collection<PrivilegeDefinition> definitions) throws RepositoryException {
+        clusterEvents.add(new PrivilegeEvent(definitions));
+    }
+
+    /**
+     * privilege event auxiliary class.
+     */
+    public static class PrivilegeEvent {
+
+        /**
+         * Collection of node type definitions or node type names.
+         */
+        private Collection<PrivilegeDefinition> definitions;
+
+        /**
+         * Create a new instance of this class.
+         *
+         * @param definitions
+         */
+        public PrivilegeEvent(Collection<PrivilegeDefinition> definitions) {
+            this.definitions = definitions;
+        }
+
+        /**
+         * Return the definitions.
+         *
+         * @return definitions
+         */
+        public Collection<PrivilegeDefinition> getDefinitions() {
+            return definitions;
+        }
+
+        /**
+         * {@inheritDoc}
+         */
+        public int hashCode() {
+            return definitions.hashCode();
+        }
+
+        /**
+         * {@inheritDoc}
+         */
+        public boolean equals(Object obj) {
+            if (obj instanceof PrivilegeEvent) {
+                PrivilegeEvent other = (PrivilegeEvent) obj;
+                return SimpleEventListener.equals(definitions, other.definitions);
+            }
+            return false;
+        }
+    }
+

INS26 INS40 INS83 INS42 INS43 INS31 INS55 INS42 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 MOV83 INS83 INS42 INS23 INS31 INS31 INS31 INS31 INS65 INS74 INS42 INS42 INS21 INS65 INS29 INS83 INS74 INS59 INS29 INS83 INS42 INS44 INS8 INS29 INS83 INS74 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS43 INS43 INS32 INS66 INS65 INS43 INS43 INS42 INS65 INS65 INS74 INS42 INS21 INS65 INS65 INS43 INS43 INS41 INS65 INS41 INS65 INS43 INS42 INS25 INS41 INS42 INS42 INS42 INS42 INS14 INS66 INS42 INS42 INS66 INS42 INS43 INS43 INS7 INS66 INS66 INS42 INS42 INS42 INS65 INS32 INS65 INS42 INS62 INS8 INS9 INS43 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS43 INS60 INS41 INS42 INS52 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS11 INS42 INS42 INS42 INS40 INS43 INS42 INS42 DEL42