JCR-1138 Data store garbage collection: use IterablePersistenceManager if possible

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@604872 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.RepositoryImpl.WorkspaceInfo;
+import org.apache.jackrabbit.core.data.GarbageCollector;
+import org.apache.jackrabbit.core.persistence.IterablePersistenceManager;
+import org.apache.jackrabbit.core.persistence.PersistenceManager;
+import org.apache.jackrabbit.core.state.ItemStateException;
+import org.apache.jackrabbit.core.version.VersionManagerImpl;
+    
+    /**
+     * Create a data store garbage collector for this repository.
+     * 
+     * @throws ItemStateException 
+     * @throws RepositoryException
+     */
+    public GarbageCollector createDataStoreGarbageCollector() throws RepositoryException, ItemStateException {
+        ArrayList pmList = new ArrayList();
+        VersionManagerImpl vm = (VersionManagerImpl)rep.getVersionManager();
+        PersistenceManager pm = vm.getPersistenceManager();
+        pmList.add(pm);
+        String[] wspNames = rep.getWorkspaceNames();
+        SystemSession[] sysSessions = new SystemSession[wspNames.length];
+        for (int i = 0; i < wspNames.length; i++) {
+            String wspName = wspNames[i];
+            WorkspaceInfo wspInfo = rep.getWorkspaceInfo(wspName);
+            sysSessions[i] = rep.getSystemSession(wspName);
+            pm = wspInfo.getPersistenceManager();
+            pmList.add(pm);
+        }
+        IterablePersistenceManager[] ipmList = new IterablePersistenceManager[pmList.size()];
+        for (int i = 0; i < pmList.size(); i++) {
+            pm = (PersistenceManager) pmList.get(i);
+            if (!(pm instanceof IterablePersistenceManager)) {
+                ipmList = null;
+                break;
+            }
+            ipmList[i] = (IterablePersistenceManager) pm;
+        }
+        GarbageCollector gc = new GarbageCollector(this, ipmList, sysSessions);
+        return gc;
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS29 INS83 INS43 INS42 INS43 INS43 INS8 INS65 INS65 INS65 INS42 INS42 INS42 INS60 INS60 INS60 INS21 INS60 INS60 INS24 INS60 INS24 INS60 INS41 INS66 INS42 INS66 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS5 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS5 INS59 INS58 INS27 INS37 INS8 INS43 INS59 INS42 INS42 INS42 INS14 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS60 INS60 INS21 INS21 INS21 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS32 INS42 INS21 INS25 INS21 INS42 INS42 INS14 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS40 INS42 INS34 INS43 INS59 INS43 INS59 INS7 INS7 INS32 INS42 INS5 INS32 INS42 INS34 INS42 INS42 INS7 INS38 INS8 INS7 INS43 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS2 INS42 INS42 INS32 INS2 INS32 INS42 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS11 INS36 INS21 INS10 INS2 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS62 INS7 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS33 INS42 INS42