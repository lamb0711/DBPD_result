fixing document view xml import:
merge adjacent character chunks reported by ContentHandler.characters()
into one jcr:xmltext/jcr:xmlcharacters property

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55211 13f79535-47bb-0310-9956-ffa450edef68

+    // buffer used to merge adjacent character data
+    private StringBuffer text;
+
+        text = new StringBuffer();
+    }
+
+    /**
+     * Stores character data encountered in <code>{@link #characters(char[], int, int)}</code>
+     * as <code>jcr:xmlcharacters</code> property of <code>jcr:xmltext</code>
+     * child node.
+     * @param parent
+     * @param text
+     * @throws SAXException
+     */
+    protected void addTextNode(NodeImpl parent, String text) throws SAXException {
+        if (text.length() > 0) {
+            try {
+                NodeImpl txtNode = (NodeImpl) parent.addNode(DocViewSAXEventGenerator.NODENAME_XMLTEXT);
+                StringValue val = new StringValue(text.toString());
+                txtNode.setProperty(DocViewSAXEventGenerator.PROPNAME_XMLCHARACTERS, val);
+            } catch (RepositoryException re) {
+                throw new SAXException(re);
+            }
+        }
+        if (text.length() > 0) {
+            // there is character data that needs to be added to the current node
+            addTextNode((NodeImpl) parents.peek(), text.toString());
+            // reset buffer
+            text.setLength(0);
+        }
+
-         * character data in document view:
-         * store as jcr:xmlcharacters property of jcr:xmltext node
-         * (need to store as node in order to maintain ordering)
-         *
-         * todo merge contiguous character data into one jcr:xmltext node
+         * buffer character data; will be processed
+         * in endElement and startElement method
-        try {
-            NodeImpl currentParent = (NodeImpl) parents.peek();
-            NodeImpl txtNode = (NodeImpl) currentParent.addNode(DocViewSAXEventGenerator.NODENAME_XMLTEXT);
-            StringValue val = new StringValue(new String(ch, start, length));
-            txtNode.setProperty(DocViewSAXEventGenerator.PROPNAME_XMLCHARACTERS, val);
-        } catch (RepositoryException re) {
-            throw new SAXException(re);
-        }
+        text.append(ch, start, length);
+        if (text.length() > 0) {
+            // there is character data that needs to be added to the current node
+            addTextNode((NodeImpl) parents.peek(), text.toString());
+            // reset buffer
+            text.setLength(0);
+        }

MOV31 INS23 INS31 INS83 INS43 INS59 INS29 UPD83 UPD42 INS44 INS44 INS43 INS8 MOV29 INS83 INS39 INS42 MOV44 MOV44 MOV44 MOV43 INS8 INS8 INS42 INS42 INS21 INS65 INS65 INS65 INS65 MOV43 INS42 MOV43 INS42 INS42 INS25 INS25 INS21 INS25 MOV21 INS7 INS66 INS65 INS66 INS66 INS66 INS42 INS42 INS42 INS27 MOV8 INS27 INS8 INS32 INS27 INS8 INS42 INS14 INS68 INS32 INS34 INS32 INS34 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS21 INS21 INS43 INS42 INS69 INS69 INS69 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS5 INS39 INS39 INS42 INS11 INS32 INS42 INS42 INS34 INS42 MOV11 INS32 INS42 INS42 INS34 INS39 INS85 MOV43 INS43 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 MOV43 MOV43 INS32 UPD42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL14 DEL14 DEL8