JCR-651: Improve performance for queries with large result sets

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@480138 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeId;
-import org.apache.jackrabbit.core.security.AccessManager;
-import java.io.IOException;
-import java.util.Collections;
-
-        List ids;
-        List scores;
-        AccessManager accessMgr = session.getAccessManager();
-
-        // execute it
-        QueryHits result = null;
-        try {
-            result = index.executeQuery(this, query, orderProperties, ascSpecs);
-            ids = new ArrayList(result.length());
-            scores = new ArrayList(result.length());
-
-            for (int i = 0; i < result.length(); i++) {
-                NodeId id = NodeId.valueOf(result.doc(i).get(FieldNames.UUID));
-                // check access
-                if (accessMgr.isGranted(id, AccessManager.READ)) {
-                    ids.add(id);
-                    scores.add(new Float(result.score(i)));
-                }
-            }
-        } catch (IOException e) {
-            log.error("Exception while executing query: ", e);
-            ids = Collections.EMPTY_LIST;
-            scores = Collections.EMPTY_LIST;
-        } finally {
-            if (result != null) {
-                try {
-                    result.close();
-                } catch (IOException e) {
-                    log.warn("Unable to close query result: " + e);
-                }
-            }
-        }
-
-        // return QueryResult
-        return new QueryResultImpl(itemMgr,
-                (NodeId[]) ids.toArray(new NodeId[ids.size()]),
-                (Float[]) scores.toArray(new Float[scores.size()]),
-                getSelectProperties(),
-                session.getNamespaceResolver(),
-                orderNode == null && documentOrder);
+        return new QueryResultImpl(index, itemMgr, session.getNamespaceResolver(),
+                session.getAccessManager(), this, query, getSelectProperties(),
+                orderProperties, ascSpecs, documentOrder);

INS41 INS14 MOV43 INS42 INS42 MOV32 MOV32 INS52 INS42 MOV32 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL52 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL40 DEL7 DEL21 DEL42 DEL40 DEL7 DEL21 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL54 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11 DEL42 DEL33 DEL27 DEL42 DEL27 DEL14 DEL41