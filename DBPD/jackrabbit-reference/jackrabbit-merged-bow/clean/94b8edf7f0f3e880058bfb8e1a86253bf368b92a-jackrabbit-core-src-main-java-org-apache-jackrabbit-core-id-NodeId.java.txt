JCR-2327 java.util.UUID.fromString() too slow

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@884574 13f79535-47bb-0310-9956-ffa450edef68

-    public NodeId(String uuid) throws IllegalArgumentException {
-        this(fromString(uuid));
+    public NodeId(String uuidString) throws IllegalArgumentException {
+        // e.g. f81d4fae-7dec-11d0-a765-00a0c91e6bf6
+        //      012345678901234567890123456789012345
+        if (uuidString.length() != UUID_FORMATTED_LENGTH) {
+            throw new IllegalArgumentException(uuidString);
+        }
+        long m = 0, x = 0;
+        for (int i = 0; i < UUID_FORMATTED_LENGTH; i++) {
+            int c = uuidString.charAt(i);
+            switch (i) {
+            case 18:
+                m = x;
+                x = 0;
+                // fall through
+            case 8:
+            case 13:
+            case 23:
+                if (c != '-') {
+                    throw new IllegalArgumentException(uuidString);
+                }
+                break;
+            default:
+                if (c >= '0' && c <= '9') {
+                    x = (x << 4) | (c - '0');
+                } else if (c >= 'a' && c <= 'f') {
+                    x = (x << 4) | (c - 'a' + 0xa);
+                } else if (c >= 'A' && c <= 'F') {
+                    x = (x << 4) | (c - 'A' + 0xa);
+                } else {
+                    throw new IllegalArgumentException(uuidString);
+                }
+            }
+        }
+        this.msb = m;
+        this.lsb = x;
-    //------------------------------------------------------------< internal >
-
-    /**
-     * Constructs a UUID from a UUID formatted String.
-     *
-     * @param uuidString the String representing a UUID to construct this UUID
-     * @return the UUID created from the given string.
-     * @throws IllegalArgumentException String must be a properly formatted UUID
-     *                                  string
-     */
-    private static UUID fromString(String uuidString)
-            throws IllegalArgumentException {
-        // e.g. f81d4fae-7dec-11d0-a765-00a0c91e6bf6
-        //      012345678901234567890123456789012345
-        int len = uuidString.length();
-        if (len != UUID_FORMATTED_LENGTH) {
-            throw new IllegalArgumentException();
-        }
-        long[] words = new long[2];
-        int b = 0;
-        for (int i = 0; i < UUID_FORMATTED_LENGTH; i++) {
-            int c = uuidString.charAt(i) | 0x20; // to lowercase (will lose some error checking)
-            if (i == 8 || i == 13 || i == 23) {
-                if (c != '-') {
-                    throw new IllegalArgumentException(String.valueOf(i));
-                }
-            } else if (i == 18) {
-                if (c != '-') {
-                    throw new IllegalArgumentException(String.valueOf(i));
-                }
-                b = 1;
-            } else {
-                byte h = (byte) (c & 0x0f);
-                if (c >= 'a' && c <= 'f') {
-                    h += 9;
-                } else if (c < '0' || c > '9') {
-                    throw new IllegalArgumentException();
-                }
-                words[b] = words[b] << 4 | h;
-            }
-        }
-        return new UUID(words[0], words[1]);
-    }

INS31 MOV29 MOV83 MOV42 MOV44 MOV43 MOV8 INS60 INS21 INS21 INS8 INS39 MOV59 MOV59 INS7 INS7 MOV32 INS53 UPD42 INS34 UPD42 INS50 INS22 INS42 INS22 INS42 INS14 INS42 INS49 INS21 INS21 INS49 INS49 INS49 MOV25 INS10 INS49 INS25 INS52 INS42 INS52 INS42 MOV43 INS42 MOV32 INS34 INS7 INS7 INS34 INS34 INS34 INS27 INS8 INS25 INS42 INS42 INS42 INS34 INS27 INS27 INS21 MOV27 MOV8 INS25 UPD42 MOV42 INS13 MOV42 UPD13 MOV13 INS7 UPD27 MOV27 INS8 MOV8 INS42 INS42 INS27 UPD7 UPD27 UPD27 MOV21 INS36 INS36 UPD42 INS27 UPD13 UPD13 INS27 UPD27 MOV27 INS36 INS36 INS42 INS42 INS42 INS34 INS13 INS27 INS27 INS36 INS36 INS42 INS34 INS27 INS34 INS27 INS27 INS42 INS13 INS42 MOV34 INS27 INS34 UPD42 MOV42 INS13 DEL39 DEL42 DEL59 DEL60 DEL42 DEL39 DEL85 DEL5 DEL34 DEL3 DEL39 DEL85 DEL5 DEL60 DEL39 DEL60 DEL34 DEL27 DEL42 DEL42 DEL42 DEL32 DEL34 DEL34 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL27 DEL42 DEL34 DEL27 DEL42 DEL34 DEL27 DEL27 DEL42 DEL34 DEL27 DEL27 DEL8 DEL34 DEL27 DEL27 DEL42 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL42 DEL34 DEL7 DEL21 DEL8 DEL39 DEL42 DEL39 DEL36 DEL11 DEL59 DEL60 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL25 DEL8 DEL25 DEL25 DEL42 DEL43 DEL42 DEL34 DEL2 DEL42 DEL34 DEL2 DEL14 DEL41 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL17 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL31