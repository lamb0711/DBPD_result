Clean up exceptions thrown by a remote repository to avoid deserialization problems.
(applying patch supplied by jukka)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@152652 13f79535-47bb-0310-9956-ffa450edef68

-        return factory.getRemoteNode(node.addNode(path));
+        try {
+            return factory.getRemoteNode(node.addNode(path));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteNode(node.addNode(path, type));
+        try {
+            return factory.getRemoteNode(node.addNode(path, type));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteProperty(node.getProperty(path));
+        try {
+            return factory.getRemoteProperty(node.getProperty(path));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemotePropertyArray(node.getProperties());
+        try {
+            return getRemotePropertyArray(node.getProperties());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemoteItem(node.getPrimaryItem());
+        try {
+            return getRemoteItem(node.getPrimaryItem());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemotePropertyArray(node.getProperties(pattern));
+        try {
+            return getRemotePropertyArray(node.getProperties(pattern));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemotePropertyArray(node.getReferences());
+        try {
+            return getRemotePropertyArray(node.getReferences());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.getUUID();
+        try {
+            return node.getUUID();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.hasNodes();
+        try {
+            return node.hasNodes();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.hasProperties();
+        try {
+            return node.hasProperties();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.hasProperty(path);
+        try {
+            return node.hasProperty(path);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemoteNodeTypeArray(node.getMixinNodeTypes());
+        try {
+            return getRemoteNodeTypeArray(node.getMixinNodeTypes());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteNodeType(node.getPrimaryNodeType());
+        try {
+            return factory.getRemoteNodeType(node.getPrimaryNodeType());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.isNodeType(type);
+        try {
+            return node.isNodeType(type);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemoteNodeArray(node.getNodes());
+        try {
+            return getRemoteNodeArray(node.getNodes());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemoteNodeArray(node.getNodes(pattern));
+        try {
+            return getRemoteNodeArray(node.getNodes(pattern));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteNode(node.getNode(path));
+        try {
+            return factory.getRemoteNode(node.getNode(path));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.hasNode(path);
+        try {
+            return node.hasNode(path);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteProperty(node.setProperty(name, value));
+        try {
+            return factory.getRemoteProperty(node.setProperty(name, value));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.addMixin(name);
+        try {
+            node.addMixin(name);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.canAddMixin(name);
+        try {
+            return node.canAddMixin(name);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.removeMixin(name);
+        try {
+            node.removeMixin(name);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.orderBefore(src, dst);
+        try {
+            node.orderBefore(src, dst);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteProperty(node.setProperty(name, values));
+        try {
+            return factory.getRemoteProperty(node.setProperty(name, values));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteNodeDef(node.getDefinition());
+        try {
+            return factory.getRemoteNodeDef(node.getDefinition());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.checkout();
+        try {
+            node.checkout();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.getCorrespondingNodePath(workspace);
+        try {
+            return node.getCorrespondingNodePath(workspace);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.getIndex();
+        try {
+            return node.getIndex();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.merge(workspace, bestEffort);
+        try {
+            node.merge(workspace, bestEffort);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.restore(version, removeExisting);
+        try {
+            node.restore(version, removeExisting);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.restoreByLabel(label, removeExisting);
+        try {
+            node.restoreByLabel(label, removeExisting);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.update(workspace);
+        try {
+            node.update(workspace);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.holdsLock();
+        try {
+            return node.holdsLock();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.isCheckedOut();
+        try {
+            return node.isCheckedOut();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return node.isLocked();
+        try {
+            return node.isLocked();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteProperty(node.setProperty(name, values, type));
+        try {
+            return factory.getRemoteProperty(node.setProperty(name, values, type));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        node.unlock();
+        try {
+            node.unlock();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteLock(node.getLock());
+        try {
+            return factory.getRemoteLock(node.getLock());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteLock(node.lock(isDeep, isSessionScoped));
+        try {
+            return factory.getRemoteLock(node.lock(isDeep, isSessionScoped));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }

INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42