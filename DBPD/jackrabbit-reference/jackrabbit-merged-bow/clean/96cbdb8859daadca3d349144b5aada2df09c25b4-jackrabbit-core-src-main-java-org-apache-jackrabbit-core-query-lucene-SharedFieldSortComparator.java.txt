JCR-2076: JSR 283: Joins
- orderings (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@782644 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.List;
-import org.apache.lucene.search.SortField;
+    private static final long serialVersionUID = 2609351820466200052L;
+
-     * Checks if <code>reader</code> is of type {@link MultiIndexReader} and if
-     * that's the case calls this method recursively for each reader within the
-     * multi index reader; otherwise the reader is simply added to the list.
-     *
-     * @param readers the list of index readers.
-     * @param reader  the reader to check.
-     */
-    private static void getIndexReaders(List readers, IndexReader reader) {
-        if (reader instanceof MultiIndexReader) {
-            IndexReader[] r = ((MultiIndexReader) reader).getIndexReaders();
-            for (int i = 0; i < r.length; i++) {
-                getIndexReaders(readers, r[i]);
-            }
-        } else {
-            readers.add(reader);
-        }
-    }
-
-    /**
-     * Abstract base class of {@link ScoreDocComparator} implementations.
-     */
-    abstract class AbstractScoreDocComparator implements ScoreDocComparator {
-
-        /**
-         * The index readers.
-         */
-        protected final List readers = new ArrayList();
-
-        /**
-         * The document number starts for the {@link #readers}.
-         */
-        protected final int[] starts;
-
-        public AbstractScoreDocComparator(IndexReader reader)
-                throws IOException {
-            getIndexReaders(readers, reader);
-
-            int maxDoc = 0;
-            this.starts = new int[readers.size() + 1];
-
-            for (int i = 0; i < readers.size(); i++) {
-                IndexReader r = (IndexReader) readers.get(i);
-                starts[i] = maxDoc;
-                maxDoc += r.maxDoc();
-            }
-            starts[readers.size()] = maxDoc;
-        }
-
-        /**
-         * Compares sort values of <code>i</code> and <code>j</code>. If the
-         * sort values have differing types, then the sort order is defined on
-         * the type itself by calling <code>compareTo()</code> on the respective
-         * type class names.
-         *
-         * @param i first score doc.
-         * @param j second score doc.
-         * @return a negative integer if <code>i</code> should come before
-         *         <code>j</code><br> a positive integer if <code>i</code>
-         *         should come after <code>j</code><br> <code>0</code> if they
-         *         are equal
-         */
-        public int compare(ScoreDoc i, ScoreDoc j) {
-            return Util.compare(sortValue(i), sortValue(j));
-        }
-
-        public int sortType() {
-            return SortField.CUSTOM;
-        }
-
-        /**
-         * Returns the reader index for document <code>n</code>.
-         *
-         * @param n document number.
-         * @return the reader index.
-         */
-        protected int readerIndex(int n) {
-            int lo = 0;
-            int hi = readers.size() - 1;
-
-            while (hi >= lo) {
-                int mid = (lo + hi) >> 1;
-                int midValue = starts[mid];
-                if (n < midValue) {
-                    hi = mid - 1;
-                } else if (n > midValue) {
-                    lo = mid + 1;
-                } else {
-                    while (mid + 1 < readers.size() && starts[mid + 1] == midValue) {
-                        mid++;
-                    }
-                    return mid;
-                }
-            }
-            return hi;
-        }
-    }
-
-    /**
-                IndexReader r = (IndexReader) readers.get(i);
+                IndexReader r = readers.get(i);
-                IndexReader reader = (IndexReader) readers.get(idx);
+                IndexReader reader = readers.get(idx);
-            for (int j = 0; j < comparators.length; j++) {
-                Comparable c = comparators[j].sortValue(i);
+            for (ScoreDocComparator comparator : comparators) {
+                Comparable c = comparator.sortValue(i);

INS23 INS83 INS83 MOV83 INS39 INS59 INS42 INS34 INS70 INS44 INS42 MOV8 MOV60 MOV43 INS42 MOV43 MOV43 MOV32 MOV32 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL66 DEL42 DEL67 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL85 DEL5 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL52 DEL42 DEL22 DEL39 DEL85 DEL5 DEL42 DEL42 DEL32 DEL34 DEL27 DEL3 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL2 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL40 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL59 DEL60 DEL42 DEL42 DEL27 DEL39 DEL42 DEL42 DEL42 DEL27 DEL36 DEL34 DEL27 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL27 DEL42 DEL42 DEL34 DEL27 DEL7 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL34 DEL27 DEL7 DEL21 DEL8 DEL42 DEL34 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL27 DEL27 DEL42 DEL37 DEL21 DEL8 DEL61 DEL42 DEL41 DEL8 DEL25 DEL25 DEL8 DEL61 DEL42 DEL41 DEL8 DEL31 DEL55 DEL42 DEL43 DEL42 DEL43 DEL11 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL11 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24