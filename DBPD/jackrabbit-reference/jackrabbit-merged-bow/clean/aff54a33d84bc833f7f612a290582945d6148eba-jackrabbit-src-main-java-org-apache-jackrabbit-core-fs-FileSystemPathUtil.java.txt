- jdbc-based FileSystem implementation
- some minor fixes/cleanups

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@345937 13f79535-47bb-0310-9956-ffa450edef68

+     * Tests whether the specified path represents the root path, i.e. "/".
+     *
+     * @param path path to test
+     * @return true if the specified path represents the root path; false otherwise.
+     */
+    public static boolean denotesRoot(String path) {
+        return path.equals(FileSystem.SEPARATOR);
+    }
+
+    /**
+     * Checks if <code>path</code> is a valid path.
+     *
+     * @param path the path to be checked
+     * @throws FileSystemException If <code>path</code> is not a valid path
+     */
+    public static void checkFormat(String path) throws FileSystemException {
+        if (path == null) {
+            throw new FileSystemException("null path");
+        }
+
+        // path must be absolute, i.e. starting with '/'
+        if (!path.startsWith(FileSystem.SEPARATOR)) {
+            throw new FileSystemException("not an absolute path: " + path);
+        }
+
+        // trailing '/' is not allowed (except for root path)
+        if (path.endsWith(FileSystem.SEPARATOR) && path.length() > 1) {
+            throw new FileSystemException("malformed path: " + path);
+        }
+
+        String[] names = path.split(FileSystem.SEPARATOR);
+        for (int i = 1; i < names.length; i++) {
+            // name must not be empty
+            if (names[i].length() == 0) {
+                throw new FileSystemException("empty name: " + path);
+            }
+            // leading/trailing whitespace is not allowed
+            String trimmed = names[i].trim();
+            if (!trimmed.equals(names[i])) {
+                throw new FileSystemException("illegal leading or trailing whitespace in name: " + path);
+            }
+        }
+    }
+
+    /**

INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS41 INS65 INS65 INS65 INS43 INS42 INS42 INS25 INS25 INS25 INS60 INS24 INS66 INS42 INS66 INS66 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS27 INS8 INS38 INS8 INS27 INS8 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS40 INS42 INS33 INS53 INS32 INS53 INS32 INS27 INS53 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS60 INS25 INS14 INS42 INS42 INS40 INS14 INS42 INS42 INS40 INS32 INS34 INS14 INS42 INS42 INS42 INS40 INS42 INS34 INS27 INS8 INS43 INS59 INS38 INS8 INS43 INS45 INS43 INS27 INS42 INS42 INS43 INS27 INS32 INS34 INS53 INS42 INS42 INS32 INS32 INS53 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS2 INS42 INS14 INS2 INS42 INS42 INS42 INS2 INS14 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS45 INS42 INS42 INS45 INS42