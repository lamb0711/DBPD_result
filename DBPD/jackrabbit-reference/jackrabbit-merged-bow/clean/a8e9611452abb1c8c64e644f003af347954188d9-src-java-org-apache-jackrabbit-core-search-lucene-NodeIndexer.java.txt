- Removed interface EventDispatcher. not used anymore.
- Adapted implementation of path handling in search to use regular term queries instead of a filter -> scales better.
- Changed notion of TEST_ROOT in test classes to also include the root slash.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@51875 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.InternalValue;
-import org.apache.jackrabbit.core.Path;
-import org.apache.jackrabbit.core.PropertyId;
-import org.apache.jackrabbit.core.QName;
-import org.apache.jackrabbit.core.state.*;
+import org.apache.jackrabbit.core.state.NodeState;
+import org.apache.jackrabbit.core.state.ItemStateProvider;
+import org.apache.jackrabbit.core.state.PropertyState;
+import org.apache.jackrabbit.core.state.NoSuchItemStateException;
+import org.apache.jackrabbit.core.state.ItemStateException;
+import org.apache.jackrabbit.core.PropertyId;
+import org.apache.jackrabbit.core.InternalValue;
+import org.apache.jackrabbit.core.QName;
+import org.apache.jackrabbit.core.Path;
+import org.apache.jackrabbit.core.NoPrefixDeclaredException;
-import javax.jcr.NamespaceException;
-import java.util.Calendar;
-import java.util.Iterator;
+import javax.jcr.NamespaceException;
+import javax.jcr.PathNotFoundException;
+import java.util.Iterator;
+import java.util.Calendar;
+ *
-    private final String path;
+    private final Path path;
-                        String path,
+                        Path path,
-                                          String path,
+                                          Path path,
-        // Path
-        doc.add(new Field(FieldNames.PATH, path, true, true, false));
+        try {
+            // Path
+            doc.add(new Field(FieldNames.PATH, path.toJCRPath(mappings), true, true, false));
+            Path p = null;
+            if (path.denotesRoot()) {
+                p = path;
+            } else {
+                p = path.getAncestor(1);
+            }
+            // Ancestors
+            while (!p.denotesRoot()) {
+                doc.add(new Field(FieldNames.ANCESTORS, p.toJCRPath(mappings),
+                        false, true, false));
+                p = p.getAncestor(1);
+            }
+            // Label
+            doc.add(new Field(FieldNames.LABEL, path.getNameElement().toJCRName(mappings),
+                    false, true, false));
+            // hierarchy level
+            doc.add(new Field(FieldNames.LEVEL, String.valueOf(path.getAncestorCount()),
+                    false, true, false));
+        } catch (NoPrefixDeclaredException e) {
+            // will never happen, because this.mappings will dynamically add
+            // unknown uri<->prefix mappings
+        } catch (PathNotFoundException e) {
+            // will never happen because we check for root
+        }

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 UPD43 UPD42 UPD43 UPD43 INS54 UPD42 UPD42 INS8 INS12 INS12 MOV21 INS60 INS25 INS61 INS21 INS21 INS44 INS8 INS44 INS8 INS43 INS59 INS32 INS8 INS8 INS38 INS8 INS32 INS32 INS43 INS42 INS43 INS42 INS42 INS42 INS33 INS42 INS42 INS21 INS21 INS32 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS7 INS7 INS42 INS42 INS32 INS7 INS43 INS40 INS32 INS9 INS9 INS9 INS43 INS40 INS32 INS9 INS9 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS34 INS43 INS40 INS32 INS9 INS9 INS9 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42