JCR-405: PROPPATCH doesn't respect document order
minor improvements within 'jcr' package:
- reorder nodes
- fixing creation/replacement of multivalued JCR properties
- contentlength for single value JCR properties
- improve spooling of resource content

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@397835 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.io.OutputContext;
-import org.apache.jackrabbit.webdav.property.DavPropertyIterator;
+import org.apache.jackrabbit.server.io.IOUtil;
+import org.apache.xml.serialize.OutputFormat;
+import org.apache.xml.serialize.XMLSerializer;
+import org.w3c.dom.Document;
+import javax.xml.parsers.ParserConfigurationException;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.util.List;
-     * logic is applyed to obtain the stream:<ul>
-     * <li>Property is not multivalue: Return the {@link javax.jcr.Value#getStream()
+     * logic is applyed to spool the property content:
+     * <ul>
+     * <li>Property is not multi valued: Return the {@link javax.jcr.Value#getStream()
-     * <li>Property is multivalue: Return stream that provides the system view of
-     * that item.</li>
+     * <li>Property is multivalue: Return the xml representation of the values.</li>
-     * @return
+     * @param outputContext
+     * @see DavResource#spool(OutputContext)
-    InputStream getStream() {
+    public void spool(OutputContext outputContext) throws IOException {
+        // write properties
+        super.spool(outputContext);
+        // spool content
-        if (exists()) {
-            try {
-                // NOTE: stream cannot be obtained for multivalue properties
-                if (!isMultiple()) {
+        try {
+            OutputStream out = outputContext.getOutputStream();
+            if (out != null && exists()) {
+                if (isMultiple()) {
+                    Document doc = DomUtil.BUILDER_FACTORY.newDocumentBuilder().newDocument();
+                    doc.appendChild(getProperty(JCR_VALUES).toXml(doc));
+                    OutputFormat format = new OutputFormat("xml", "UTF-8", false);
+                    XMLSerializer serializer = new XMLSerializer(out, format);
+                    serializer.setNamespaces(true);
+                    serializer.asDOMSerializer().serialize(doc);
+                } else {
+                    if (in != null) {
+                        IOUtil.spool(in, out);
+                    }
-            } catch (ValueFormatException e) {
-                // should not occur
-                log.error("Cannot obtain stream from resource: " + e.getMessage());
-            } catch (RepositoryException e) {
-                log.error("Cannot obtain stream from resource: " + e.getMessage());
+            }
+        } catch (ParserConfigurationException e) {
+            log.error("Error while spooling multivalued resource: " + e.getMessage());
+        } catch (ValueFormatException e) {
+            // should not occur
+            log.error("Cannot obtain stream from resource: " + e.getMessage());
+        } catch (RepositoryException e) {
+            log.error("Cannot obtain stream from resource: " + e.getMessage());
+        } finally {
+            if (in != null) {
+                in.close();
-        return in;
-     * Loops over the given <code>Set</code>s and alters the properties accordingly.
+     * Loops over the given <code>List</code> and alters the properties accordingly.
-     * @param setProperties
-     * @param removePropertyNames
+     * @param changeList
-     * @see DavResource#alterProperties(DavPropertySet, DavPropertyNameSet)
+     * @see DavResource#alterProperties(List)
-    public MultiStatusResponse alterProperties(DavPropertySet setProperties,
-                                DavPropertyNameSet removePropertyNames)
-        throws DavException {
-
-        // altering any properties fails if an attempt is made to remove a property
-        if (removePropertyNames != null && !removePropertyNames.isEmpty()) {
-            Iterator it = removePropertyNames.iterator();
-            while (it.hasNext()) {
+    public MultiStatusResponse alterProperties(List changeList) throws DavException {
+        Iterator it = changeList.iterator();
+        while (it.hasNext()) {
+            Object propEntry = it.next();
+            if (propEntry instanceof DavPropertyName) {
+                // altering any properties fails if an attempt is made to remove
+                // a property
+            } else if (propEntry instanceof DavProperty) {
+                DavProperty prop = (DavProperty) propEntry;
+                internalSetProperty(prop);
+            } else {
+                throw new IllegalArgumentException("unknown object in change list: " + propEntry.getClass().getName());
-
-        // only set/add >> existance of resource is checked inside internal method
-        DavPropertyIterator setIter = setProperties.iterator();
-        while (setIter.hasNext()) {
-            DavProperty prop = setIter.nextProperty();
-            internalSetProperty(prop);
-        }
-                    properties.add(new DefaultDavProperty(DavPropertyName.GETCONTENTTYPE, contentType));
-                } // else: no contenttype for multivalue properties
+                } else {
+                    contentType = "text/xml";
+                }
+                properties.add(new DefaultDavProperty(DavPropertyName.GETCONTENTTYPE, contentType));
+                
-                    properties.add(new DefaultDavProperty(JCR_LENGTH, String.valueOf(prop.getLength()), true));
+                    long length = prop.getLength();
+                    properties.add(new DefaultDavProperty(JCR_LENGTH, String.valueOf(length), true));
+                    if (prop.getLength() > IOUtil.UNDEFINED_LENGTH) {
+                        properties.add(new DefaultDavProperty(DavPropertyName.GETCONTENTLENGTH, String.valueOf(length)));
+                    }

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS83 INS39 INS42 INS44 INS43 INS8 INS65 UPD65 INS43 INS42 INS42 INS21 MOV60 INS54 UPD43 UPD42 INS60 INS61 UPD66 INS66 UPD66 UPD66 INS42 INS68 INS42 INS48 INS8 INS12 MOV12 MOV12 INS8 UPD66 UPD42 UPD42 MOV43 INS59 MOV32 INS8 INS42 INS42 INS69 INS42 INS42 INS60 MOV25 INS44 INS8 INS25 INS42 INS32 MOV60 INS25 INS43 INS43 INS59 INS27 INS8 INS43 INS42 INS21 INS27 INS8 UPD43 UPD42 MOV42 UPD42 MOV42 INS43 INS62 MOV8 INS25 INS42 UPD42 MOV42 INS42 INS32 INS27 MOV32 MOV25 INS42 INS32 INS42 INS33 INS21 UPD42 INS42 UPD42 INS42 INS43 INS62 MOV8 INS8 MOV21 INS42 INS42 INS42 INS33 INS32 INS8 INS42 INS42 INS27 INS32 UPD42 UPD42 UPD42 MOV42 INS42 INS43 INS53 INS8 MOV42 INS60 INS21 INS60 INS60 INS21 INS21 INS25 INS45 INS32 INS42 INS42 INS42 INS14 INS21 INS60 INS25 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS27 INS8 INS42 INS42 INS11 INS43 INS27 INS7 INS39 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS9 INS32 INS42 INS42 INS42 INS33 INS21 INS43 INS42 INS42 INS45 INS32 INS42 INS45 INS42 MOV32 INS32 INS40 INS21 INS32 INS42 INS32 INS42 INS42 INS43 INS45 INS45 INS9 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS14 INS43 INS40 INS32 INS42 INS42 INS42 INS42 DEL66 DEL32 DEL38 DEL8 DEL54 DEL8 DEL43 DEL42 DEL42 DEL41 DEL8 DEL42 DEL65 DEL42 DEL43 DEL69 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL32 DEL38 DEL27 DEL61 DEL8 DEL25 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL61