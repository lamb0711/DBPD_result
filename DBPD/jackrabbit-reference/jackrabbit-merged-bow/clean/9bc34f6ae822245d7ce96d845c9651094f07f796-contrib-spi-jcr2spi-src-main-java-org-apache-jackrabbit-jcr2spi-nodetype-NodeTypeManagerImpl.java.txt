- new interface EffectiveNodeTypeProvider
- new interface ItemDefinitionProvider
- limit access to NodeTypeRegistry and simplify the NodeTypeRegistry
  interface.
- avoid duplicate code dealing with logic of EffectiveNodeType
  and retrieval of QItemDefinitions.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520408 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.ManagerProvider;
+     * The ManagerProvider
+     */
+    private final ManagerProvider mgrProvider;
+
+    /**
-     * The namespace resolver used to translate qualified names to JCR names.
-     */
-    private final NamespaceResolver nsResolver;
-
-    /**
-    public NodeTypeManagerImpl(NodeTypeRegistry ntReg, NamespaceResolver nsResolver,
+    public NodeTypeManagerImpl(NodeTypeRegistry ntReg, ManagerProvider mgrProvider,
-        this.nsResolver = nsResolver;
+        this.mgrProvider = mgrProvider;
-        QNodeDefinition rootDef = ntReg.getRootNodeDef();
-        NodeDefinition rootNodeDefinition = new NodeDefinitionImpl(rootDef, this, nsResolver);
+        QNodeDefinition rootDef = defProvider().getRootNodeDefinition();
+        NodeDefinition rootNodeDefinition = new NodeDefinitionImpl(rootDef, this, nsResolver());
+    private NamespaceResolver nsResolver() {
+        return mgrProvider.getNamespaceResolver();
+    }
+
+    private ItemDefinitionProvider defProvider() {
+        return mgrProvider.getItemDefinitionProvider();
+    }
+
+    private EffectiveNodeTypeProvider entProvider() {
+        return mgrProvider.getEffectiveNodeTypeProvider();
+    }
-                EffectiveNodeType ent = ntReg.getEffectiveNodeType(name);
+                EffectiveNodeType ent = entProvider().getEffectiveNodeType(name);
-                nt = new NodeTypeImpl(ent, def, this, nsResolver, valueFactory, qValueFactory);
+                nt = new NodeTypeImpl(ent, def, this, mgrProvider);
-                ndi = new NodeDefinitionImpl(def, this, nsResolver);
+                ndi = new NodeDefinitionImpl(def, this, nsResolver());
-                pdi = new PropertyDefinitionImpl(def, this, nsResolver, valueFactory);
+                pdi = new PropertyDefinitionImpl(def, this, nsResolver(), valueFactory);
-            String name = NameFormat.format(ntName, nsResolver);
+            String name = NameFormat.format(ntName, nsResolver());
-            String name = NameFormat.format(ntName, nsResolver);
+            String name = NameFormat.format(ntName, nsResolver());
-            QName qName = NameFormat.parse(nodeTypeName, nsResolver);
+            QName qName = NameFormat.parse(nodeTypeName, nsResolver());

INS26 MOV23 INS40 INS31 INS31 INS31 UPD43 INS83 MOV43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 UPD42 UPD42 INS43 UPD42 INS41 INS42 INS41 INS42 INS41 UPD66 INS42 INS32 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS32 UPD42 INS32 UPD42 MOV42 INS42 INS32 INS32 INS32 MOV42 MOV42 MOV42 INS32 UPD42 INS32 INS32 UPD42 MOV42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL42