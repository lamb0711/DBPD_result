JCR-4496: align ISO8601 class in tests with jcr-commons version

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1869737 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.Map;
+
+// this class is a copy of org.apache.jackrabbit.util.ISO8601 (in order to avoid
+// a dependency to that project)
+
+
+    /**
+     * Flyweight instances of known time zones.
+     */
+    private static final Map<String, TimeZone> TZS =
+            new HashMap<String, TimeZone>();
+
+    static {
+        TimeZone gmt = TimeZone.getTimeZone("GMT");
+        TZS.put("Z", gmt);
+        TZS.put("+00:00", gmt);
+        TZS.put("-00:00", gmt);
+
+        // http://en.wikipedia.org/wiki/List_of_UTC_time_offsets
+        String[] tzs = {
+                "-12:00", "-11:00", "-10:00", "-09:30", "-09:00", "-08:00",
+                "-07:00", "-06:00", "-05:00", "-04:30", "-04:00", "-03:30",
+                "-03:00", "-02:00", "-01:00", "+01:00", "+02:00", "+03:00",
+                "+03:30", "+04:00", "+04:30", "+05:00", "+05:30", "+05:45",
+                "+06:00", "+06:30", "+07:00", "+08:00", "+08:45", "+09:00",
+                "+09:30", "+10:00", "+10:30", "+11:00", "+11:30", "+12:00",
+                "+12:45", "+13:00", "+14:00" };
+        for (String tz : tzs) {
+            TZS.put(tz, TimeZone.getTimeZone("GMT" + tz));
+        }
+    }
+
-        String tzID;
+        TimeZone tz;
-            if (text.charAt(start) == '+' || text.charAt(start) == '-') {
+            String tzid = text.substring(start);
+            tz = TZS.get(tzid);
+            if (tz == null) {
-                tzID = "GMT" + text.substring(start);
-            } else if (text.substring(start).equals("Z")) {
-                tzID = "GMT";
-            } else {
-                // invalid time zone designator
-                return null;
+                tzid = "GMT" + tzid;
+                tz = TimeZone.getTimeZone(tzid);
+                // verify id of returned time zone (getTimeZone defaults to "GMT")
+                if (!tz.getID().equals(tzid)) {
+                    // invalid time zone
+                    return null;
+                }
-        TimeZone tz = TimeZone.getTimeZone(tzID);
-        // verify id of returned time zone (getTimeZone defaults to "GMT")
-        if (!tz.getID().equals(tzID)) {
-            // invalid time zone
-            return null;
-        }
-
-        StringBuffer buf = new StringBuffer();
+        StringBuilder buf = new StringBuilder();
-    private static void appendZeroPaddedInt(StringBuffer buf, int n, int precision) {
+    private static void appendZeroPaddedInt(StringBuilder buf, int n, int precision) {

INS26 INS26 INS40 INS40 INS23 INS28 INS29 INS83 INS83 INS83 INS74 INS59 INS83 INS8 MOV54 INS65 INS43 INS43 INS43 INS42 INS14 INS60 INS21 INS21 INS21 INS60 INS70 UPD43 INS66 INS42 INS42 INS42 INS74 INS43 INS59 INS32 INS32 INS32 INS5 INS59 INS44 INS42 INS8 UPD43 UPD42 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS43 INS85 INS42 INS4 MOV43 INS42 INS21 INS60 INS21 INS25 UPD42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS32 INS43 INS59 INS7 INS27 INS8 UPD43 INS42 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS32 INS42 INS33 MOV21 INS21 INS25 UPD42 INS42 INS42 INS27 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS7 INS38 MOV8 INS45 INS42 UPD42 INS42 INS32 INS32 MOV41 INS42 INS42 INS42 INS42 MOV32 MOV42 INS42 UPD42 MOV42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL13 DEL27 DEL42 DEL42 DEL42 DEL32 DEL13 DEL27 DEL27 DEL8 DEL45 DEL32 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL25 DEL42 DEL42 DEL32 DEL38 DEL25