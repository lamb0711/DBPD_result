- reset updateable item state mgr in case an update operation fails
- import on workspace (work in progress!)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156972 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.xml.Importer;
+import org.apache.jackrabbit.core.xml.WorkspaceImporter;
-    RepositoryImpl getRepository() {
-        return rep;
+    /**
+     * The hierarchy manager that reflects workspace state only
+     * (i.e. that is isolated from transient changes made through
+     * the session)
+     *
+     * @return the hierarchy manager of this workspace
+     */
+    public HierarchyManager getHierarchyManager() {
+        return hierMgr;
+    /**
+     * Returns the item state manager associated with the workspace
+     * represented by <i>this</i> <code>Workspace</code> instance.
+     *
+     * @return the item state manager of this workspace
+     */
-    protected void sanityCheck() throws RepositoryException {
+    public void sanityCheck() throws RepositoryException {
-    protected void checkAddNode(Path nodePath, QName nodeTypeName)
+    public void checkAddNode(Path nodePath, QName nodeTypeName)
-                String msg = "internal error: failed to retrieve state of " + hierMgr.safeGetJCRPath(conflictingId);
+                String msg = "internal error: failed to retrieve state of "
+                        + hierMgr.safeGetJCRPath(conflictingId);
-    protected void checkRemoveNode(Path nodePath)
+    public void checkRemoveNode(Path nodePath)
-    protected EffectiveNodeType getEffectiveNodeType(NodeState state)
+    public EffectiveNodeType getEffectiveNodeType(NodeState state)
-    protected ChildNodeDef findApplicableDefinition(QName name,
-                                                    QName nodeTypeName,
-                                                    NodeState parentState)
+    public ChildNodeDef findApplicableDefinition(QName name,
+                                                 QName nodeTypeName,
+                                                 NodeState parentState)
+        boolean succeeded = false;
-            // persist states
+            // store states
+            succeeded = true;
+        } finally {
+            // update operation failed, cancel all modifications
+            if (!succeeded) {
+                stateMgr.cancel();
+            }
+
+        boolean succeeded = false;
-            // persist states
+            // store states
+            succeeded = true;
+        } finally {
+            // update operation failed, cancel all modifications
+            if (!succeeded) {
+                stateMgr.cancel();
+            }
-
-        Path targetPath;
-        NodeState targetState;
+        Path parentPath;
+        NodeState parentState;
-            targetPath = Path.create(parentAbsPath, session.getNamespaceResolver(), true);
-            targetState = getNodeState(targetPath);
+            parentPath = Path.create(parentAbsPath, session.getNamespaceResolver(), true);
+            parentState = getNodeState(parentPath);
-        // make sure target node is checked-out
-        verifyCheckedOut(targetPath);
+        // make sure import target node is checked-out
+        verifyCheckedOut(parentPath);
-        // @todo check locked-status
-
-        // check node type constraints & access rights
-        checkAddNode(targetPath, targetState.getNodeTypeName());
-
-        // @todo implement Workspace#getImportContentHandler
+        // check locked-status
+        getLockManager().checkLock(parentPath, session);
+/*
+        Importer importer = new WorkspaceImporter(parentState, this, uuidBehavior);
+        return new ImportHandler(importer, session.getNamespaceResolver(),
+                rep.getNamespaceRegistry());
+*/

INS26 INS26 INS40 INS40 INS29 INS83 UPD43 UPD42 INS29 UPD83 UPD83 UPD83 UPD83 UPD83 INS65 INS65 UPD42 INS65 INS65 INS60 INS60 INS66 INS66 INS66 INS66 UPD42 INS66 INS66 INS66 INS39 INS59 INS8 INS39 INS59 INS8 INS42 INS9 INS21 INS25 INS42 INS9 INS21 INS25 UPD42 UPD42 UPD42 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 INS7 INS38 INS8 INS7 INS38 INS8 UPD42 MOV42 INS42 INS9 INS42 INS21 INS42 INS9 INS42 INS21 UPD42 UPD42 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 DEL32