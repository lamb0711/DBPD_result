JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.version.report.*;
+import org.apache.jackrabbit.webdav.version.report.Report;
+import org.apache.jackrabbit.webdav.version.report.ReportType;
+import org.apache.jackrabbit.webdav.version.report.ReportInfo;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
-import org.jdom.Document;
-import org.jdom.Element;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
-import javax.jcr.*;
-import java.util.ArrayList;
-import java.util.List;
+import javax.jcr.Repository;
- * @see Repository#getDescriptor(String)
+ * @see javax.jcr.Repository#getDescriptor(String)
-     * @param resource
-     * @throws IllegalArgumentException if the resource or the session retrieved
-     * from the specified resource is <code>null</code>
-     * @see org.apache.jackrabbit.webdav.version.report.Report#setResource(org.apache.jackrabbit.webdav.version.DeltaVResource)
+     * Always returns <code>false</code>.
+     *
+     * @return false
+     * @see org.apache.jackrabbit.webdav.version.report.Report#isMultiStatusReport()
-    public void setResource(DeltaVResource resource) {
+    public boolean isMultiStatusReport() {
+        return false;
+    }
+
+    /**
+     * @see Report#init(org.apache.jackrabbit.webdav.version.DeltaVResource, org.apache.jackrabbit.webdav.version.report.ReportInfo) 
+     */
+    public void init(DeltaVResource resource, ReportInfo info) throws DavException {
-            throw new IllegalArgumentException("Resource must not be null.");
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "Resource must not be null.");
+        }
+        if (!getType().isRequestedReportType(info)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "repositorydescriptors element expected.");
-            throw new IllegalArgumentException("The resource must provide a non-null session object in order to create the repositorydescriptors report.");
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "The resource must provide a non-null session object in order to create the repositorydescriptors report.");
-     * @param info
-     * @throws IllegalArgumentException if the specified info does not contain
-     * a {@link ItemResourceConstants#NAMESPACE dcr}:repositorydescriptors element.
-     * @see org.apache.jackrabbit.webdav.version.report.Report#setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo)
-     */
-    public void setInfo(ReportInfo info) {
-        if (info == null || !"repositorydescriptors".equals(info.getReportElement().getName())) {
-            throw new IllegalArgumentException("repositorydescriptors element expected.");
-        }
-    }
-
-    /**
-     * Returns a Xml representation of the node type definition(s) according
+     * Returns a Xml representation of the repository descriptors according
-     * @return Xml representation of the node type definition(s)
-     * @throws org.apache.jackrabbit.webdav.DavException if the specified nodetypes are not known or if another
-     * error occurs while retrieving the nodetype definitions.
-     * @see org.apache.jackrabbit.webdav.version.report.Report#toXml()
+     * @return Xml representation of the repository descriptors
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
-    public Document toXml() throws DavException {
+    public Element toXml(Document document) {
+        Element report = DomUtil.createElement(document, "repositorydescriptors-report", NAMESPACE);
-        List descList = new ArrayList();
-            Element elem = new Element(XML_DESCRIPTOR, NAMESPACE);
-            elem.addContent(new Element(XML_DESCRIPTORKEY, NAMESPACE).setText(keys[i]));
-            elem.addContent(new Element(XML_DESCRIPTORVALUE, NAMESPACE).setText(repository.getDescriptor(keys[i])));
-            descList.add(elem);
+            Element elem = DomUtil.addChildElement(report, XML_DESCRIPTOR, NAMESPACE);
+            DomUtil.addChildElement(elem, XML_DESCRIPTORKEY, NAMESPACE, keys[i]);
+            DomUtil.addChildElement(elem, XML_DESCRIPTORVALUE, NAMESPACE, repository.getDescriptor(keys[i]));
-        Element report = new Element("repositorydescriptors-report", NAMESPACE).addContent(descList);
-        Document reportDoc = new Document(report);
-        return reportDoc;
+        return report;
+

MOV26 MOV26 INS26 INS26 MOV31 UPD40 INS40 INS40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD39 INS42 INS8 UPD42 MOV44 MOV43 MOV43 INS44 MOV60 UPD65 INS65 INS41 INS25 INS65 MOV43 INS42 INS40 INS66 UPD66 MOV66 INS9 INS66 INS38 INS8 UPD66 UPD66 INS42 MOV43 INS59 UPD42 UPD42 INS42 INS42 MOV69 INS32 INS53 UPD40 INS69 INS42 INS32 INS32 INS42 INS42 INS14 MOV43 INS42 INS42 INS42 INS45 INS42 MOV32 UPD43 INS40 INS42 INS43 INS40 INS45 UPD43 INS40 INS32 UPD42 UPD42 INS42 INS42 INS42 MOV2 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL66 DEL66 DEL42 DEL42 DEL67 DEL65 DEL66 DEL65 DEL42 DEL42 DEL33 DEL27 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL38 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL65 DEL42 DEL66 DEL66 DEL65 DEL40 DEL42 DEL40 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL42 DEL42 DEL14 DEL42 DEL42 DEL14 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL14 DEL59 DEL60