JCR-4581: use GZIP encoding in XML responses when client signals support

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1878754 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.OutputStream;
+import java.util.Collections;
+import java.util.List;
+import java.util.zip.GZIPOutputStream;
-    /**
-     * Send a multistatus response.
-     *
-     * @param multistatus
-     * @throws IOException
-     * @see DavServletResponse#sendMultiStatus(org.apache.jackrabbit.webdav.MultiStatus)
-     */
+    @Override
+    @Override
+    public void sendMultiStatus(MultiStatus multistatus, List<String> acceptableContentCodings) throws IOException {
+        sendXmlResponse(multistatus, SC_MULTI_STATUS, acceptableContentCodings);
+    }
+
-    /**
-     * Send Xml response body.
-     *
-     * @param serializable
-     * @param status
-     * @throws IOException
-     * @see DavServletResponse#sendXmlResponse(XmlSerializable, int)
-     */
+    @Override
+        sendXmlResponse(serializable, status, Collections.emptyList());
+    }
+
+    @Override
+    public void sendXmlResponse(XmlSerializable serializable, int status, List<String> acceptableContentCodings) throws IOException {
-            ByteArrayOutputStream out = new ByteArrayOutputStream();
+                ByteArrayOutputStream out = new ByteArrayOutputStream();
+                out.close();
-                // TODO: Should this be application/xml? See JCR-1621
-                httpResponse.setContentLength(out.size());
-                out.writeTo(httpResponse.getOutputStream());
+
+                // use GZIP iff accepted by client and content size >= 256 octets
+                if (out.size() < 256 || !acceptableContentCodings.contains("gzip")) {
+                    httpResponse.setContentLength(out.size());
+                    out.writeTo(httpResponse.getOutputStream());
+                } else {
+                    httpResponse.setHeader("Content-Encoding", "gzip");
+                    try (OutputStream os = new GZIPOutputStream(httpResponse.getOutputStream())) {
+                        out.writeTo(os);
+                    }
+                }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS44 INS42 INS42 INS43 INS42 INS74 INS42 INS42 INS21 INS42 INS43 INS42 INS39 INS42 INS42 INS21 INS42 INS74 INS42 INS42 INS43 INS43 INS32 INS42 INS32 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV60 INS21 INS25 INS32 INS27 INS8 INS8 INS42 INS42 INS27 INS38 MOV21 MOV21 INS21 INS54 INS32 INS34 INS32 INS32 INS58 INS8 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS45 INS43 INS59 INS21 INS42 INS42 INS14 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL40 DEL43 DEL69 DEL68 DEL65 DEL29 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL39 DEL69 DEL68 DEL65 DEL29