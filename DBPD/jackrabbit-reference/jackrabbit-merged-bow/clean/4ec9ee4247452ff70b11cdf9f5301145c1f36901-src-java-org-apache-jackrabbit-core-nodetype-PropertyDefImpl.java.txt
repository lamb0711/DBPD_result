- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
+import org.apache.log4j.Logger;
- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.11 $, $Date: 2004/09/09 15:23:43 $
-	super(propDef, ntMgr, nsResolver);
-	this.propDef = propDef;
+        super(propDef, ntMgr, nsResolver);
+        this.propDef = propDef;
-	return propDef;
+        return propDef;
-	InternalValue[] defVals = propDef.getDefaultValues();
-	if (defVals == null) {
-	    return null;
-	}
-	Value[] values = new Value[defVals.length];
-	for (int i = 0; i < defVals.length; i++) {
-	    try {
-		values[i] = defVals[i].toJCRValue(nsResolver);
-	    } catch (RepositoryException re) {
-		// should never get here
-		String propName = (getName() == null) ? "[null]" : getName();
-		log.error("illegal default value specified for property " + propName + " in node type " + getDeclaringNodeType(), re);
-		return null;
-	    }
-	}
-	return values;
+        InternalValue[] defVals = propDef.getDefaultValues();
+        if (defVals == null) {
+            return null;
+        }
+        Value[] values = new Value[defVals.length];
+        for (int i = 0; i < defVals.length; i++) {
+            try {
+                values[i] = defVals[i].toJCRValue(nsResolver);
+            } catch (RepositoryException re) {
+                // should never get here
+                String propName = (getName() == null) ? "[null]" : getName();
+                log.error("illegal default value specified for property " + propName + " in node type " + getDeclaringNodeType(), re);
+                return null;
+            }
+        }
+        return values;
-	return propDef.getRequiredType();
+        return propDef.getRequiredType();
-	ValueConstraint[] constraints = propDef.getValueConstraints();
-	if (constraints == null || constraints.length == 0) {
-	    return null;
-	} else {
-	    return constraints[0].getDefinition();
-	}
+        ValueConstraint[] constraints = propDef.getValueConstraints();
+        if (constraints == null || constraints.length == 0) {
+            return null;
+        } else {
+            return constraints[0].getDefinition();
+        }
-	return propDef.isMultiple();
+        return propDef.isMultiple();

MOV26 DEL66 DEL65 DEL66 DEL65