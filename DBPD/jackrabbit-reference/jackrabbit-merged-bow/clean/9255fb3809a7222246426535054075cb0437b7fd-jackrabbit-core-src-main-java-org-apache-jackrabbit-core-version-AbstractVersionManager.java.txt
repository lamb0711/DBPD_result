JCR-2140: Configurations and Baselines


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@795842 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.UnsupportedRepositoryOperationException;
-import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.core.value.InternalValue;
+import org.apache.jackrabbit.core.id.NodeId;
+     * Persistent root node of the configurations.
+     */
+    protected NodeStateEx configurationsRoot;
+
+    /**
+     * @return the nodestate for the given id.
+     * Creates aew configuration node
+     * @param rootId the id of the root node of the workspace configuration
+     * @param baseline the optional baseline
+     * @return a node state of the created configuration
+     * @throws RepositoryException if an error occurs
+     */
+    NodeStateEx internalCreateConfiguration(NodeId rootId, InternalBaseline baseline)
+            throws RepositoryException {
+        if (baseline != null) {
+            // the exact behavior is not clarified yet.
+            // see http://jsr-283.dev.java.net/issues/show_bug.cgi?id=795
+            throw new UnsupportedRepositoryOperationException(
+                    "creating configurations based on a baseline not supported, yet");
+        }
+
+        WriteOperation ops = startWriteOperation();
+        try {
+            // If the parameter baseline is null, a new version history is created
+            // to store baselines of the new configuration, and the jcr:baseVersion
+            // of the new configuration references the root of the new version history.
+            NodeId configId = new NodeId();
+            NodeStateEx configParent = getParentNode(configurationsRoot,
+                    configId.toString(), NameConstants.REP_CONFIGURATIONS);
+            Name name = getName(configId.toString());
+            NodeStateEx config = configParent.addNode(name, NameConstants.NT_CONFIGURATION, configId, true);
+            config.setPropertyValue(NameConstants.JCR_ROOT, InternalValue.create(rootId));
+
+            // now create the version history of the baseline
+            String uuid = new NodeId().toString();
+            NodeStateEx histParent = getParentNode(historyRoot, uuid, NameConstants.REP_VERSIONSTORAGE);
+            Name histName = getName(uuid);
+            NodeStateEx history =
+                InternalVersionHistoryImpl.create(this, histParent, histName, config.getState(), null);
+            InternalVersionHistory vh = new InternalVersionHistoryImpl(this, history);
+
+            // and set the base version and history to the config
+            NodeId blId = vh.getRootVersion().getId();
+            config.setPropertyValue(NameConstants.JCR_BASEVERSION, InternalValue.create(blId));
+            config.setPropertyValue(NameConstants.JCR_VERSIONHISTORY, InternalValue.create(vh.getId()));
+            configParent.store();
+            ops.save();
+
+            return config;
+        } catch (ItemStateException e) {
+            throw new RepositoryException(e);
+        } finally {
+            ops.close();
+        }
+    }
+
+    /**

MOV26 INS26 INS26 INS40 INS40 INS23 INS31 INS29 INS83 INS43 INS59 INS29 INS43 INS42 INS44 INS44 INS43 INS8 INS65 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS60 INS54 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS27 INS8 INS43 INS59 INS8 INS12 INS8 INS42 INS33 INS53 INS42 INS42 INS32 INS60 INS60 INS60 INS60 INS21 INS60 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS41 INS44 INS8 INS21 INS14 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS43 INS42 INS53 INS32 INS43 INS45 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS9 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS32 INS33 INS43 INS52 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42