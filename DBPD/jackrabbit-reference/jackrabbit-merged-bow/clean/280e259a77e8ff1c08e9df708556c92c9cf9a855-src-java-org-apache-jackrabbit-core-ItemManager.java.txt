ItemManager: minor internal cleanup

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158429 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * Retrieves state of item with given <code>id</code>. If the specified item
+     * doesn't exist an <code>ItemNotFoundException</code> will be thrown.
+     * If the item exists but the current session is not granted read access an
+     * <code>AccessDeniedException</code> will be thrown.
+     *
+     * @param id id of item to be retrieved
+     * @return state state of said item
+     * @throws ItemNotFoundException if no item with given <code>id</code> exists
+     * @throws AccessDeniedException if the current session is not allowed to
+     *                               read the said item
+     * @throws RepositoryException   if another error occurs
+     */
+    private ItemState getItemState(ItemId id)
+            throws ItemNotFoundException, AccessDeniedException,
+            RepositoryException {
+        // check privileges
+        if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
+            // clear cache
+            ItemImpl item = retrieveItem(id);
+            if (item != null) {
+                evictItem(id);
+            }
+            throw new AccessDeniedException("cannot read item " + id);
+        }
+
+        try {
+            return itemStateProvider.getItemState(id);
+        } catch (NoSuchItemStateException nsise) {
+            String msg = "no such item: " + id;
+            log.debug(msg);
+            throw new ItemNotFoundException(msg);
+        } catch (ItemStateException ise) {
+            String msg = "failed to retrieve item state of " + id;
+            log.debug(msg);
+            throw new RepositoryException(msg);
+        }
+    }
+
-        // check privileges
-        if (!session.getAccessManager().isGranted(parentId, AccessManager.READ)) {
-            // clear cache
-            ItemImpl item = retrieveItem(parentId);
-            if (item != null) {
-                evictItem(parentId);
-            }
-            throw new AccessDeniedException("cannot read item " + parentId);
-        }
-
-        ItemState state;
-        try {
-            state = itemStateProvider.getItemState(parentId);
-        } catch (NoSuchItemStateException nsise) {
-            String msg = "no such item: " + parentId;
-            log.debug(msg);
-            throw new ItemNotFoundException(msg);
-        } catch (ItemStateException ise) {
-            String msg = "failed to retrieve item state of node " + parentId;
-            log.debug(msg);
-            throw new RepositoryException(msg);
-        }
-
+        ItemState state = getItemState(parentId);
-        // check privileges
-        if (!session.getAccessManager().isGranted(parentId, AccessManager.READ)) {
-            // clear cache
-            ItemImpl item = retrieveItem(parentId);
-            if (item != null) {
-                evictItem(parentId);
-            }
-            throw new AccessDeniedException("cannot read item " + parentId);
-        }
-
-        ItemState state;
-        try {
-            state = itemStateProvider.getItemState(parentId);
-        } catch (NoSuchItemStateException nsise) {
-            String msg = "no such item: " + parentId;
-            log.debug(msg);
-            throw new ItemNotFoundException(msg);
-        } catch (ItemStateException ise) {
-            String msg = "failed to retrieve item state of node " + parentId;
-            log.debug(msg);
-            throw new RepositoryException(msg);
-        }
-
+        ItemState state = getItemState(parentId);
-        // check privileges
-        if (!session.getAccessManager().isGranted(parentId, AccessManager.READ)) {
-            ItemImpl item = retrieveItem(parentId);
-            if (item != null) {
-                evictItem(parentId);
-            }
-            throw new AccessDeniedException("cannot read item " + parentId);
-        }
-
-        ItemState state;
-        try {
-            state = itemStateProvider.getItemState(parentId);
-        } catch (NoSuchItemStateException nsise) {
-            String msg = "no such item: " + parentId;
-            log.debug(msg);
-            throw new ItemNotFoundException(msg);
-        } catch (ItemStateException ise) {
-            String msg = "failed to retrieve item state of node " + parentId;
-            log.debug(msg);
-            throw new RepositoryException(msg);
-        }
-
+        ItemState state = getItemState(parentId);
-        // check privileges
-        if (!session.getAccessManager().isGranted(parentId, AccessManager.READ)) {
-            ItemImpl item = retrieveItem(parentId);
-            if (item != null) {
-                evictItem(parentId);
-            }
-            throw new AccessDeniedException("cannot read item " + parentId);
-        }
-
-        ArrayList childIds = new ArrayList();
-
-        ItemState state;
-        try {
-            state = itemStateProvider.getItemState(parentId);
-        } catch (NoSuchItemStateException nsise) {
-            String msg = "no such item: " + parentId;
-            log.debug(msg);
-            throw new ItemNotFoundException(msg);
-        } catch (ItemStateException ise) {
-            String msg = "failed to retrieve item state of node " + parentId;
-            log.debug(msg);
-            throw new RepositoryException(msg);
-        }
-
+        ItemState state = getItemState(parentId);
+        ArrayList childIds = new ArrayList();

INS31 INS29 INS83 INS43 INS42 INS44 INS43 MOV43 INS43 INS8 MOV60 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS42 INS25 MOV54 MOV60 MOV60 MOV60 MOV60 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 MOV38 INS8 MOV43 MOV43 UPD43 MOV43 INS60 INS25 INS53 INS41 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV43 INS59 MOV27 INS8 INS14 INS32 MOV21 MOV21 UPD42 UPD42 UPD42 UPD42 INS42 INS32 INS21 MOV43 INS27 MOV42 MOV42 UPD42 MOV42 MOV43 MOV43 INS42 INS42 INS32 INS45 INS42 INS42 INS42 UPD42 UPD45 UPD42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54