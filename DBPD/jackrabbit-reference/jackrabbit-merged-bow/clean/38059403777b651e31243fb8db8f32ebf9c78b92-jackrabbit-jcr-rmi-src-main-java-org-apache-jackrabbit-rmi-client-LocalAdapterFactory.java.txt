JCRRMI-27: JSR-283: Support AccessControlManager

Merged revisions 925218 and 925223 (by Felix) from commons/jcr-rmi/trunk to trunk/jackrabbit-jcr-rmi.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@927849 13f79535-47bb-0310-9956-ffa450edef68

+import java.security.Principal;
+import java.util.Iterator;
+
+import javax.jcr.security.AccessControlEntry;
+import javax.jcr.security.AccessControlManager;
+import javax.jcr.security.AccessControlPolicy;
+import javax.jcr.security.AccessControlPolicyIterator;
+import javax.jcr.security.Privilege;
+import org.apache.jackrabbit.rmi.remote.principal.RemotePrincipal;
+import org.apache.jackrabbit.rmi.remote.security.RemoteAccessControlEntry;
+import org.apache.jackrabbit.rmi.remote.security.RemoteAccessControlManager;
+import org.apache.jackrabbit.rmi.remote.security.RemoteAccessControlPolicy;
+import org.apache.jackrabbit.rmi.remote.security.RemotePrivilege;
+    /**
+     * Factory method for creating a local adapter for a remote access control
+     * manager
+     *
+     * @param remote remote access control manager
+     * @return local access control manager
+     */
+    AccessControlManager getAccessControlManager(
+            RemoteAccessControlManager remote);
+
+    /**
+     * Factory method for creating a local adapter for a remote access control
+     * policy
+     *
+     * @param remote remote access control policy
+     * @return local access control policy
+     */
+    AccessControlPolicy getAccessControlPolicy(RemoteAccessControlPolicy remote);
+
+    /**
+     * Factory method for creating an array of local adapter for an array of
+     * remote access control policies
+     *
+     * @param remote array of remote access control policies
+     * @return array of local access control policies
+     */
+    AccessControlPolicy[] getAccessControlPolicy(
+            RemoteAccessControlPolicy[] remote);
+
+    /**
+     * Factory method for creating a local adapter for a remote access control
+     * policy iterator
+     *
+     * @param remote access control policy iterator
+     * @return local access control policy iterator
+     */
+    AccessControlPolicyIterator getAccessControlPolicyIterator(
+            RemoteIterator remote);
+
+    /**
+     * Factory method for creating a local adapter for a remote access control
+     * entry
+     *
+     * @param remote remote access control entry
+     * @return local access control entry
+     */
+    AccessControlEntry getAccessControlEntry(RemoteAccessControlEntry remote);
+
+    /**
+     * Factory method for creating an array of local adapter for an array of
+     * remote access control entry
+     *
+     * @param remote array of remote access control entry
+     * @return local array of access control entry
+     */
+    AccessControlEntry[] getAccessControlEntry(RemoteAccessControlEntry[] remote);
+
+    /**
+     * Factory method for creating a local adapter for a remote principal.
+     * <p>
+     * If <code>remote</code> is a
+     * {@link org.apache.jackrabbit.rmi.remote.security.RemoteGroup} the
+     * prinicipal returned implements the <code>java.security.acl.Group</code>
+     * interface.
+     *
+     * @param remote principal
+     * @return local principal
+     */
+    Principal getPrincipal(RemotePrincipal remote);
+
+    /**
+     * Factory method for creating a local adapter for a remote principal
+     * iterator.
+     * <p>
+     * Each entry in the <code>remote</code> iterator which is a
+     * {@link org.apache.jackrabbit.rmi.remote.security.RemoteGroup} will be
+     * provided as a principal implementing the
+     * <code>java.security.acl.Group</code> interface.
+     *
+     * @param remote remote principal iterator
+     * @return local principal iterator
+     */
+    Iterator<Principal> getPrincipalIterator(RemoteIterator remote);
+
+    /**
+     * Factory method for creating a local adapter for a remote privilege
+     *
+     * @param remote remote privilege
+     * @return local privilege
+     */
+    Privilege getPrivilege(RemotePrivilege remote);
+
+    /**
+     * Factory method for creating an array of local adapter for an array of
+     * remote privilege
+     *
+     * @param remote array of remote privilege
+     * @return array of local privilege
+     */
+    Privilege[] getPrivilege(RemotePrivilege[] remote);
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS43 INS42 INS44 INS29 INS43 INS42 INS44 INS29 INS5 INS42 INS44 INS29 INS43 INS42 INS44 INS29 INS43 INS42 INS44 INS29 INS5 INS42 INS44 INS29 INS43 INS42 INS44 INS29 INS74 INS42 INS44 INS29 INS43 INS42 INS44 INS29 INS5 INS42 INS44 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS85 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS85 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS85 INS42 INS42 INS40 INS40 INS42