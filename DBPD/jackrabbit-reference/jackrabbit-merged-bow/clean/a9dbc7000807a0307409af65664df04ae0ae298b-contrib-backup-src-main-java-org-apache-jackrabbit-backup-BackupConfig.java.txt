JCR-442: Committed patch-060808-backup.txt from Nicolas.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429606 13f79535-47bb-0310-9956-ffa450edef68

- * contributor license agreements.  See the NOTICE file distributed with
+ * contributor license agreements.  See the NOTICE backupFile distributed with
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
+ * The ASF licenses this backupFile to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this backupFile except in compliance with
+import org.apache.jackrabbit.core.config.RepositoryConfig;
-    
-    //TODO Useful?
-    private PersistenceManagerConfig pmc;
-    //Tused to backup a workspace first in a file
-    private File workFolder;
+
+    //used to backup a workspace first in a backupFile
+    private final File workFolder;
+    //Not final since BackupManager adds some resources
-    private File file;
-    private File repoConfFile;
-    private String login;
-    private String password;
-    
+    private final File backupFile;
+    private final File repoConfFile;
+
+
-     * @param repoConfFile 
+     * @param repoConfFile
-     * @param xml repository configuration document
-     * @param home repository home directory
+     * @param myFile repository configuration document
+     * @param repoConfFile repository file configuration
-     * @throws IllegalAccessException 
-     * @throws InstantiationException 
-     * @throws ClassNotFoundException 
-     * @throws IOException 
+     * @throws IllegalAccessException
+     * @throws InstantiationException
+     * @throws ClassNotFoundException
+     * @throws IOException
-    public static BackupConfig create(String myFile, String repoConfFile, String login, String password)
+    public static BackupConfig create(String myFile, String repoConfFile)
-        
-
-
-        BackupConfig config = parser.parseBackupConfig(is, myFile, repoConfFile, login, password);
-        
+        BackupConfig config = parser.parseBackupConfig(is, myFile, repoConfFile);
-    
- 
-    //TODO see if path is really useful?
-    public BackupConfig(PersistenceManagerConfig pmc, File path, Collection allResources, String myFile, String repoConfFile, String login, String password) throws IOException {
-        
+      public BackupConfig(File path, Collection allResources, String myFile, String repoConfFile) throws IOException {
+
-            throw new IOException();
-        }     
-        
-        this.pmc = pmc;
+            //if path not set in the conf file then create one as the current dir
+            path = new File(".");
+        }
+
-        this.file = new File(myFile);
+        this.backupFile = new File(myFile);
-        this.password = password;
-        this.login = login;
+    public void addResource(Backup b) {
+        this.allResources.add(b);
+    }
+
-    public PersistenceManagerConfig getPmc() {
-        return pmc;
-    }
-        return this.file;       
+        return this.backupFile;
-
-
-
-
-
-    public String getPassword() {
-        return this.password;
-    }
-
-
-
-    public String getLogin() {
-        return this.login;
-    }
-
-
-

INS26 MOV31 INS40 INS23 INS31 INS83 MOV83 UPD83 MOV83 MOV43 MOV59 INS83 INS83 INS39 INS42 INS44 INS8 MOV43 UPD42 UPD42 INS43 INS42 INS21 UPD42 UPD42 UPD66 UPD42 MOV42 INS32 INS21 INS22 INS42 INS42 UPD42 INS7 UPD42 MOV52 UPD42 MOV42 INS42 INS14 UPD43 MOV43 INS45 UPD42 DEL42 DEL43 DEL42 DEL59 DEL23 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL43 DEL42 DEL59 DEL23 DEL66 DEL66 DEL66 DEL66 DEL66 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL14 DEL53 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL22 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL42 DEL43