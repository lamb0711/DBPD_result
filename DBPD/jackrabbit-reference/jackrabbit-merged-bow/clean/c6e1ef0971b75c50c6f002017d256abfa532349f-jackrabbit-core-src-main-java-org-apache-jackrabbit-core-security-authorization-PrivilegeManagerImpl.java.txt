JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1092723 13f79535-47bb-0310-9956-ffa450edef68

-     * names can be resolved to registered custom privileges and if there exists
+     * names can be resolved to registered privileges and if there exists
-     * Returns <code>true</code> if the specified privilege is a custom
-     * privilege that has been
-     * {@link #registerPrivilege(String, boolean, String[]) registered} before.
-     *
-     * @param privilege
-     * @return <code>true</code> if the specified privilege is a custom
-     * privilege; <code>false</code> otherwise.
-     * @throws AccessControlException If the specified privilege is
-     * <code>null</code> or unknown to this manager.
-     */
-    public boolean isCustomPrivilege(Privilege privilege) throws AccessControlException {
-        if (privilege instanceof PrivilegeImpl) {
-            return ((PrivilegeImpl) privilege).definition.isCustom();
-        } else {
-            throw new AccessControlException("Invalid privilege instance.");
-        }
-    }
-
-    /**
-     * @return The bits of the built-in privileges contained in the specified
+     * @return The bits of the privileges contained in the specified
-    public int getBits(Privilege... privileges) throws AccessControlException {
+    public PrivilegeBits getBits(Privilege... privileges) throws AccessControlException {
-        PrivilegeRegistry.Definition[] defs = new PrivilegeRegistry.Definition[privileges.length];
-        for (int i = 0; i < privileges.length; i++) {
-            Privilege priv = privileges[i];
+        PrivilegeBits bits = PrivilegeBits.getInstance();
+        for (Privilege priv : privileges) {
-                defs[i] = ((PrivilegeImpl) priv).definition;
+                bits.add(((PrivilegeImpl) priv).definition.getBits());
-        return registry.getBits(defs);
+        return bits;
-    public Set<Privilege> getPrivileges(int bits) {
+    public Set<Privilege> getPrivileges(PrivilegeBits bits) {

INS43 INS42 INS70 INS43 UPD66 UPD66 INS43 MOV44 INS42 MOV8 INS42 INS42 INS42 UPD42 INS32 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 MOV22 INS42 DEL66 DEL66 DEL42 DEL42 DEL43 DEL69 DEL39 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL66 DEL65 DEL66 DEL65 DEL42 DEL65 DEL66 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL22 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31 DEL39 DEL40 DEL43 DEL85 DEL5 DEL40 DEL43 DEL85 DEL5 DEL40 DEL3 DEL42 DEL43 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL2 DEL7 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL42 DEL32 DEL39