JCR-2715: Improved join query performance

Map single-selector queries to the more efficient SQL1 query engine.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1023748 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
+import javax.jcr.PropertyType;
+import javax.jcr.query.Query;
+import javax.jcr.query.QueryManager;
-import org.apache.jackrabbit.commons.flat.TreeTraverser;
+    private String toSqlConstraint(Constraint constraint)
+            throws RepositoryException {
+        if (constraint instanceof And) {
+            And and = (And) constraint;
+            String c1 = toSqlConstraint(and.getConstraint1());
+            String c2 = toSqlConstraint(and.getConstraint2());
+            return "(" + c1 + ") AND (" + c2 + ")";
+        } else if (constraint instanceof Or) {
+            Or or = (Or) constraint;
+            String c1 = toSqlConstraint(or.getConstraint1());
+            String c2 = toSqlConstraint(or.getConstraint2());
+            return "(" + c1 + ") OR (" + c2 + ")";
+        } else if (constraint instanceof Not) {
+            Not or = (Not) constraint;
+            return "NOT (" + toSqlConstraint(or.getConstraint()) + ")";
+        } else if (constraint instanceof Comparison) {
+            Comparison c = (Comparison) constraint;
+            String left = toSqlOperand(c.getOperand1());
+            String right = toSqlOperand(c.getOperand2());
+            if (c.getOperator().equals(JCR_OPERATOR_EQUAL_TO)) {
+                return left + " = " + right;
+            } else {
+                throw new RepositoryException("Unsupported comparison: " + c);
+            }
+        } else if (constraint instanceof ChildNode) {
+            ChildNode cn = (ChildNode) constraint;
+            return "jcr:path LIKE '" + cn.getParentPath() + "/%'";
+        } else  {
+            throw new RepositoryException("Unsupported constraint: " + constraint);
+        }
+    }
+
+    private String toSqlOperand(Operand operand) throws RepositoryException {
+        if (operand instanceof PropertyValue) {
+            PropertyValue pv = (PropertyValue) operand;
+            return pv.getPropertyName();
+        } else if (operand instanceof Literal) {
+            Literal literal = (Literal) operand;
+            Value value = literal.getLiteralValue();
+            int type = value.getType();
+            if (type == PropertyType.LONG || type == PropertyType.DOUBLE) {
+                return value.getString();
+            } else {
+                return "'" + value.getString() + "'";
+            }
+        } else {
+            throw new RepositoryException("Uknown operand type: " + operand);
+        }
+    }
+
+        StringBuilder builder = new StringBuilder();
+        builder.append("SELECT * FROM ");
+        builder.append(selector.getNodeTypeName());
+        if (constraint != null) {
+            builder.append(" WHERE ");
+            builder.append(toSqlConstraint(constraint));
+        }
+        System.out.println(builder.toString());
+
+        QueryManager manager = session.getWorkspace().getQueryManager();
+        Query query = manager.createQuery(builder.toString(), Query.SQL);
+
-        Iterator<Node> nodes =
-            TreeTraverser.nodeIterator(session.getRootNode());
-        RangeIterator rows = new RangeIteratorAdapter(nodes) {
+//        Iterator<Node> nodes =
+//            TreeTraverser.nodeIterator(session.getRootNode());
+        RangeIterator rows = new RangeIteratorAdapter(query.execute().getNodes()) {
-        RangeIterator filtered = new FilteredRangeIterator(
-                rows, getPredicate(selector, constraint));
+//        RangeIterator filtered = new FilteredRangeIterator(
+//                rows, getPredicate(selector, constraint));
-                columnNames, selectorNames, new RowIteratorAdapter(filtered));
+                columnNames, selectorNames, new RowIteratorAdapter(rows));

MOV26 MOV26 INS26 INS40 UPD40 UPD40 INS31 INS31 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS43 INS42 INS42 INS25 INS42 INS43 INS42 INS42 INS25 INS60 INS21 INS21 INS25 INS21 INS60 INS60 INS42 INS62 INS8 INS25 INS42 INS62 INS8 INS25 INS43 INS59 INS32 INS32 INS27 INS8 INS32 UPD43 MOV43 INS59 INS43 INS59 INS42 INS43 INS60 INS60 INS60 INS41 INS62 INS8 INS25 INS42 INS43 INS60 INS41 INS62 INS8 INS8 UPD42 MOV42 INS42 INS14 INS42 INS42 INS45 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS33 INS21 INS21 INS40 INS42 INS32 UPD42 UPD42 MOV42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS42 INS43 INS60 INS60 INS60 INS41 INS62 INS8 INS25 INS42 INS43 INS59 INS32 INS42 INS43 INS60 INS60 INS60 INS25 INS53 INS43 UPD42 UPD42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 INS32 INS40 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS42 INS43 INS60 INS41 INS62 INS8 INS25 INS42 INS42 INS11 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS39 INS59 INS27 INS8 INS8 INS14 UPD42 MOV42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 UPD42 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS43 INS59 INS27 INS42 INS43 INS60 INS60 INS60 INS25 INS62 INS8 INS8 INS43 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS32 INS27 INS27 INS41 INS41 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS11 INS45 INS32 INS45 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS42 INS43 INS60 INS41 INS53 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS32 INS27 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS41 INS53 INS42 INS43 INS59 INS27 INS14 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS14 INS42 INS42 INS11 INS45 INS32 INS45 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS27 INS43 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 DEL43 DEL43 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL14 DEL59 DEL60