JCR-1181: Use local constants instead of the deprecated (see JCR-1169) QName class

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@587120 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
-
+    /**
+     * The JCR namespace URI.
+     */
+    private static final String JCR = "http://www.jcp.org/jcr/1.0";
+
+    /**
+     * The JCR mix namespace URI.
+     */
+    private static final String MIX = "http://www.jcp.org/jcr/mix/1.0";
+
-            Property property = getProperty(getName(QName.JCR_MIXINTYPES));
+            Property property = getProperty(getName(JCR, "mixinTypes"));
-        Property property = getProperty(getName(QName.JCR_PRIMARYTYPE));
+        Property property = getProperty(getName(JCR, "primaryType"));
-        if (isNodeType(getName(QName.MIX_REFERENCEABLE))) {
-            return getProperty(getName(QName.JCR_UUID)).getString();
+        if (isNodeType(getName(MIX, "referenceable"))) {
+            return getProperty(getName(JCR, "uuid")).getString();
-        if (isNodeType(getName(QName.MIX_VERSIONABLE))) {
+        if (isNodeType(getName(MIX, "versionable"))) {
-            return getProperty(getName(QName.JCR_ISCHECKEDOUT)).getBoolean();
+            return getProperty(getName(JCR, "isCheckedOut")).getBoolean();
-     * Returns the prefixed JCR name for the given {@link QName} using the
-     * current namespace mappings. The given name is assumed <em>not</em>
-     * to be in the default namespace, i.e. there will always be a non-empty
-     * prefix for the name.
+     * Returns the prefixed JCR name for the namespace URI and local name
+     * using the current namespace mappings.
-     * @param name namespaced name
+     * @param uri namespace URI
+     * @param name namespace-local name
-    private String getName(QName name) throws RepositoryException {
-        assert name.getNamespaceURI().length() > 0;
-        String prefix = getSession().getNamespacePrefix(name.getNamespaceURI());
-        return prefix + ":" + name.getLocalName();
+    private String getName(String uri, String name) throws RepositoryException {
+        String prefix = getSession().getNamespacePrefix(uri);
+        if (prefix.length() > 0) {
+            return prefix + ":" + name;
+        } else {
+            return name;
+        }

INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 MOV83 MOV43 MOV42 MOV44 INS44 MOV43 INS8 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS65 MOV65 MOV65 MOV65 UPD43 UPD42 INS43 INS42 MOV60 INS25 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS42 UPD66 MOV66 UPD66 UPD42 INS42 INS27 INS8 INS8 INS32 INS34 MOV41 INS41 INS42 INS45 INS42 INS45 UPD42 MOV42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS45 DEL40 DEL26 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL65 DEL65 DEL29 DEL42 DEL42 DEL32 DEL42 DEL32 DEL34 DEL27 DEL6 DEL8 DEL31