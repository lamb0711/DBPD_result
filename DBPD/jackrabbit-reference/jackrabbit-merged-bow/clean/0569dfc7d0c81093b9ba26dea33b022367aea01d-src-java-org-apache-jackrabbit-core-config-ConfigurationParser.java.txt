- adding better extensibility to configuration parser

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@312844 13f79535-47bb-0310-9956-ffa450edef68

-    private static final String WORKSPACE_NAME_VARIABLE = "wsp.name";
+    public static final String WORKSPACE_NAME_VARIABLE = "wsp.name";
-    private static final String SECURITY_ELEMENT = "Security";
+    public static final String SECURITY_ELEMENT = "Security";
-    private static final String ACCESS_MANAGER_ELEMENT = "AccessManager";
+    public static final String ACCESS_MANAGER_ELEMENT = "AccessManager";
-    private static final String LOGIN_MODULE_ELEMENT = "LoginModule";
+    public static final String LOGIN_MODULE_ELEMENT = "LoginModule";
-    private static final String WORKSPACES_ELEMENT = "Workspaces";
+    public static final String WORKSPACES_ELEMENT = "Workspaces";
-    private static final String WORKSPACE_ELEMENT = "Workspace";
+    public static final String WORKSPACE_ELEMENT = "Workspace";
-    private static final String VERSIONING_ELEMENT = "Versioning";
+    public static final String VERSIONING_ELEMENT = "Versioning";
-    private static final String FILE_SYSTEM_ELEMENT = "FileSystem";
+    public static final String FILE_SYSTEM_ELEMENT = "FileSystem";
-    private static final String PERSISTENCE_MANAGER_ELEMENT =
+    public static final String PERSISTENCE_MANAGER_ELEMENT =
-    private static final String SEARCH_INDEX_ELEMENT = "SearchIndex";
+    public static final String SEARCH_INDEX_ELEMENT = "SearchIndex";
-    private static final String PARAM_ELEMENT = "param";
+    public static final String PARAM_ELEMENT = "param";
-    private static final String APP_NAME_ATTRIBUTE = "appName";
+    public static final String APP_NAME_ATTRIBUTE = "appName";
-    private static final String ROOT_PATH_ATTRIBUTE = "rootPath";
+    public static final String ROOT_PATH_ATTRIBUTE = "rootPath";
-    private static final String DEFAULT_WORKSPACE_ATTRIBUTE =
+    public static final String DEFAULT_WORKSPACE_ATTRIBUTE =
-    private static final String CLASS_ATTRIBUTE = "class";
+    public static final String CLASS_ATTRIBUTE = "class";
-    private static final String NAME_ATTRIBUTE = "name";
+    public static final String NAME_ATTRIBUTE = "name";
-    private static final String VALUE_ATTRIBUTE = "value";
+    public static final String VALUE_ATTRIBUTE = "value";
-    private static final String DEFAULT_QUERY_HANDLER =
+    public static final String DEFAULT_QUERY_HANDLER =
+     * Returns the variables.
+     * @return the variables.
+     */
+    public Properties getVariables() {
+        return variables;
+    }
+
+    /**
-                workspaceDirectory, defaultWorkspace, template, vc);
+                workspaceDirectory, defaultWorkspace, template, vc, this);
-        ConfigurationParser tmpParser = new ConfigurationParser(tmpVariables);
+        ConfigurationParser tmpParser = createSubParser(tmpVariables);
-        PersistenceManagerConfig pmc = new PersistenceManagerConfig(
-            tmpParser.parseBeanConfig(root, PERSISTENCE_MANAGER_ELEMENT));
+        PersistenceManagerConfig pmc = parsePersistenceManagerConfig(root);
-    private SearchConfig parseSearchConfig(Element parent)
+    protected SearchConfig parseSearchConfig(Element parent)
-    private VersioningConfig parseVersioningConfig(Element parent)
+    protected VersioningConfig parseVersioningConfig(Element parent)
-        PersistenceManagerConfig pmc = new PersistenceManagerConfig(
-                parseBeanConfig(element, PERSISTENCE_MANAGER_ELEMENT));
+        PersistenceManagerConfig pmc = parsePersistenceManagerConfig(element);
+     * Parses the PersistenceManager config.
+     *
+     * @param parent
+     * @return
+     * @throws ConfigurationException
+     */
+    protected PersistenceManagerConfig parsePersistenceManagerConfig(Element parent)
+            throws ConfigurationException {
+
+        return new PersistenceManagerConfig(
+                parseBeanConfig(parent, PERSISTENCE_MANAGER_ELEMENT));
+    }
+
+    /**
-    private BeanConfig parseBeanConfig(Element parent, String name)
+    protected BeanConfig parseBeanConfig(Element parent, String name)
-    private Properties parseParameters(Element element)
+    protected Properties parseParameters(Element element)
-    private String replaceVariables(String value)
+    protected String replaceVariables(String value)
-    private Element parseXML(InputSource xml) throws ConfigurationException {
+    protected Element parseXML(InputSource xml) throws ConfigurationException {
-    private Element getElement(Element parent, String name) throws ConfigurationException {
+    protected Element getElement(Element parent, String name) throws ConfigurationException {
-    private Element getElement(Element parent, String name, boolean required)
+    protected Element getElement(Element parent, String name, boolean required)
-    private String getAttribute(Element element, String name)
+    protected String getAttribute(Element element, String name)
-    private String getAttribute(Element element, String name, String def) {
+    protected String getAttribute(Element element, String name, String def) {
+    /**
+     * Creates a new instance of a configuration parser but with overlayed
+     * variables.
+     *
+     * @param variables the variables overlay
+     * @return a new configuration parser instance
+     */
+    protected ConfigurationParser createSubParser(Properties variables) {
+        // overlay the properties
+        Properties props = new Properties(this.variables);
+        props.putAll(variables);
+        return new ConfigurationParser(props);
+    }

INS31 INS31 INS31 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 INS29 INS83 INS43 INS42 INS8 UPD83 UPD83 INS29 INS83 MOV43 INS42 INS44 INS43 INS8 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 INS29 INS83 INS43 INS42 INS44 INS8 INS65 INS65 INS42 INS41 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS21 INS41 INS66 INS66 INS42 MOV43 MOV43 MOV43 INS66 INS42 INS42 INS42 INS14 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS32 INS14 INS52 INS32 INS32 INS32 MOV43 INS32 INS42 INS42 INS14 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS43 INS22 INS42 INS52 INS42 DEL42 DEL14 DEL42 DEL42 DEL32 DEL14 DEL42 DEL32 DEL14