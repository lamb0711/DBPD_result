JCR-2085: test case (TCK) maintenance for JCR 2.0
- more query tests
- storing of JQOM and SQL2 as node

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@786480 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.name.NameConstants;
-     * The query factory which is responsible to create query instances base
-     * on the passed query language.
-     */
-    private final QueryFactory queryFactory;
-
-    /**
-                        session, qomTree, Query.JCR_SQL2);
+                        session, qomTree, Query.JCR_JQOM, null);
-        this.queryFactory = new CompoundQueryFactory(Arrays.asList(
-                new QOMQueryFactory(qomFactory, session.getValueFactory()),
-                new AQTQueryFactory() {
-                    public Query createQuery(String statement, String language)
-                            throws InvalidQueryException, RepositoryException {
-                        return searchMgr.createQuery(session, itemMgr, statement, language);
-                    }
-                }));
-        return queryFactory.createQuery(statement, language);
+        QueryFactory qf = new QueryFactoryImpl(language);
+        return qf.createQuery(statement, language);
-        // TODO: support SQL2 and QOM
-        return searchMgr.createQuery(session, itemMgr, node);
+        if (!node.isNodeType(session.getJCRName(NameConstants.NT_QUERY))) {
+            throw new InvalidQueryException("node is not of type nt:query");
+        }
+        String statement = node.getProperty(session.getJCRName(NameConstants.JCR_STATEMENT)).getString();
+        String language = node.getProperty(session.getJCRName(NameConstants.JCR_LANGUAGE)).getString();
+
+        QueryFactory qf = new QueryFactoryImpl(node, language);
+        return qf.createQuery(statement, language);
-        List<String> languages = queryFactory.getSupportedLanguages();
+        List<String> languages = new QueryFactoryImpl(Query.JCR_JQOM).getSupportedLanguages();
+
+    private class QueryFactoryImpl extends CompoundQueryFactory {
+
+        public QueryFactoryImpl(String language) {
+            this(null, language);
+        }
+
+        public QueryFactoryImpl(final Node node, final String language) {
+            super(Arrays.asList(
+                new QOMQueryFactory(new QueryObjectModelFactoryImpl(
+                        session, session.getValueFactory()) {
+                    protected QueryObjectModel createQuery(QueryObjectModelTree qomTree)
+                            throws InvalidQueryException, RepositoryException {
+                        return searchMgr.createQueryObjectModel(
+                                session, qomTree, language, node);
+                    }
+                }, session.getValueFactory()),
+                new AQTQueryFactory() {
+                    public Query createQuery(String statement,
+                                             String language)
+                            throws InvalidQueryException, RepositoryException {
+                        return searchMgr.createQuery(session, itemMgr, statement, language, node);
+                    }
+                }));
+        }
+    }

INS26 INS40 INS55 INS83 INS42 MOV43 INS31 INS31 MOV21 INS60 MOV21 INS25 INS60 INS60 INS60 INS41 INS83 INS42 INS44 INS8 INS83 INS42 INS44 INS44 INS8 MOV43 INS59 INS38 INS8 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS42 INS17 INS83 INS43 INS42 INS83 INS43 INS42 INS46 INS42 INS42 INS14 UPD42 INS32 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 MOV32 INS43 INS42 INS42 INS42 INS32 INS14 INS32 INS42 INS32 INS42 INS43 INS42 INS42 INS14 INS14 INS42 UPD42 MOV42 INS42 INS40 INS43 INS45 INS42 INS42 INS32 INS42 UPD42 MOV42 INS32 INS42 INS43 INS40 MOV43 INS14 MOV32 INS42 UPD42 MOV42 INS42 INS40 MOV42 UPD42 MOV42 INS40 INS42 INS43 INS42 INS32 INS1 INS42 INS42 INS42 INS31 INS83 INS43 INS42 INS44 INS43 INS43 INS8 UPD40 INS33 INS42 INS43 INS42 INS42 INS42 INS41 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL14 DEL7 DEL21 DEL42 DEL32 DEL41 DEL42 DEL42 DEL14