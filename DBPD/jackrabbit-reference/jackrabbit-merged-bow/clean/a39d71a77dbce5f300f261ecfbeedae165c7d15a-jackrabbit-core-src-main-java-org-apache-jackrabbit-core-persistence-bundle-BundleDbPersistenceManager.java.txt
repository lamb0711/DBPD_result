#0000 - JCR-1232: Merge UUID to NodeId

Replace UUID references with NodeId alternatives from o.a.j.core.persistence.bundle.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@793013 13f79535-47bb-0310-9956-ffa450edef68

-                        Statement bSmt = connectionManager.executeStmt(bundleSelectSQL, getKey(id.getUUID()));
+                        Statement bSmt = connectionManager.executeStmt(bundleSelectSQL, getKey(id));
-            List<UUID> uuidList = new ArrayList<UUID>(uuids.length);
+            List<NodeId> idList = new ArrayList<NodeId>(uuids.length);
-                    uuidList.add(new UUID(uuids[i]));
+                    idList.add(new NodeId(uuids[i]));
-            for (int i = 0; i < uuidList.size(); i++) {
-                final UUID uuid = (UUID) uuidList.get(i);
+            for (int i = 0; i < idList.size(); i++) {
+                NodeId id = idList.get(i);
-                    NodeId id = new NodeId(uuid);
-                        log.error("No bundle found for uuid '" + uuid + "'");
+                        log.error("No bundle found for uuid '" + id + "'");
-                            uuidList.add(entry.getId().getUUID());
+                            idList.add(entry.getId());
-                        log.info(name + ": checked " + count + "/" + uuidList.size() + " bundles...");
+                        log.info(name + ": checked " + count + "/" + idList.size() + " bundles...");
-            total = uuidList.size();
+            total = idList.size();
-     * for the given UUID.
+     * for the given node identifier.
-     * @param uuid the uuid
+     * @param id the node id
-    protected Object[] getKey(UUID uuid) {
+    protected Object[] getKey(NodeId id) {
-            return new Object[]{uuid.getRawBytes()};
+            return new Object[] { id.getRawBytes() };
-            return new Object[]{new Long(uuid.getMostSignificantBits()),
-                    new Long(uuid.getLeastSignificantBits())};
+            return new Object[] {
+                    id.getMostSignificantBits(), id.getLeastSignificantBits() };
-     * (i) a UUID, and (2) another parameter.
+     * (i) a node identifier, and (2) another parameter.
-     * @param uuid the UUID
+     * @param id the node id
-    protected Object[] createParams(UUID uuid, Object p, boolean before) {
+    protected Object[] createParams(NodeId id, Object p, boolean before) {
-            key.add(uuid.getRawBytes());
+            key.add(id.getRawBytes());
-            key.add(new Long(uuid.getMostSignificantBits()));
-            key.add(new Long(uuid.getLeastSignificantBits()));
+            key.add(id.getMostSignificantBits());
+            key.add(id.getLeastSignificantBits());
-            UUID lowUuid;
-            Object[] keys;
-            String sql;
-            if (bigger == null) {
-                sql = bundleSelectAllIdsSQL;
-                lowUuid = null;
-                keys = new Object[0];
-            } else {
+            String sql = bundleSelectAllIdsSQL;
+            NodeId lowId = null;
+            Object[] keys = new Object[0];
+            if (bigger != null) {
-                lowUuid = bigger.getUUID();
-                keys = getKey(lowUuid);
+                lowId = bigger;
+                keys = getKey(bigger);
-                UUID current;
+                NodeId current;
-                    current = new UUID(rs.getBytes(1));
+                    current = new NodeId(rs.getBytes(1));
-                    current = new UUID(high, low);
+                    current = new NodeId(high, low);
-                if (lowUuid != null) {
+                if (lowId != null) {
-                    if (current.compareTo(lowUuid) <= 0) {
+                    if (current.compareTo(lowId) <= 0) {
-                result.add(new NodeId(current));
+                result.add(current);
-            Statement stmt = connectionManager.executeStmt(bundleSelectSQL, getKey(id.getUUID()));
+            Statement stmt = connectionManager.executeStmt(bundleSelectSQL, getKey(id));
-            Statement stmt = connectionManager.executeStmt(bundleSelectSQL, getKey(id.getUUID()));
+            Statement stmt = connectionManager.executeStmt(bundleSelectSQL, getKey(id));
-            Object[] params = createParams(bundle.getId().getUUID(), out.toByteArray(), true);
+            Object[] params = createParams(bundle.getId(), out.toByteArray(), true);
-            connectionManager.executeStmt(bundleDeleteSQL, getKey(bundle.getId().getUUID()));
+            connectionManager.executeStmt(bundleDeleteSQL, getKey(bundle.getId()));
-                    nodeReferenceSelectSQL, getKey(targetId.getTargetId().getUUID()));
+                    nodeReferenceSelectSQL, getKey(targetId.getTargetId()));
-            Object[] params = createParams(refs.getTargetId().getUUID(), out.toByteArray(), true);
+            Object[] params = createParams(refs.getTargetId(), out.toByteArray(), true);
-                    getKey(refs.getTargetId().getUUID()));
+                    getKey(refs.getTargetId()));
-                    getKey(targetId.getTargetId().getUUID()));
+                    getKey(targetId.getTargetId()));

UPD43 UPD42 UPD43 UPD42 UPD66 UPD42 UPD66 UPD42 UPD66 UPD42 UPD66 UPD42 INS60 UPD74 MOV43 INS59 UPD43 UPD27 MOV32 MOV32 UPD43 UPD42 MOV5 MOV5 INS32 INS32 INS42 INS42 UPD42 UPD42 INS33 MOV3 MOV32 UPD42 INS42 INS42 MOV32 MOV32 MOV32 UPD42 INS42 INS42 MOV32 MOV32 UPD42 UPD74 UPD42 MOV43 UPD42 INS32 INS32 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD43 INS42 MOV32 INS9 UPD42 UPD42 INS42 INS42 MOV32 INS42 MOV32 INS9 UPD42 UPD42 INS42 INS42 MOV32 UPD43 UPD42 INS32 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD42 INS42 UPD42 UPD42 INS42 MOV42 MOV42 UPD42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 MOV42 MOV42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 MOV42 UPD42 MOV32 MOV32 MOV42 UPD42 INS42 UPD42 DEL42 DEL32 DEL83 DEL42 DEL43 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL32 DEL14 DEL42 DEL43 DEL32 DEL14 DEL42 DEL43 DEL32 DEL14 DEL42 DEL43 DEL32 DEL14 DEL42 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL14 DEL42 DEL32 DEL42 DEL32 DEL42 DEL9 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32