JCR-1974: JSR 283: Evaluate Capabilities 

> method has been renamed

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@743726 13f79535-47bb-0310-9956-ffa450edef68

-        /**
+    /**
-     * by the repsoitory, including:
+     * by the repository, including:
-     * Target object (reflecting the current selection in the application) and its current state
-     * (locks etc.).
+     * Permissions granted to the current user, including access control privileges.
-     * Current user (the current session).
-     * </li>
-     * <li>
-     * Access control rules (permissions granted to the current user).
+     * Current state of the target object (reflecting locks, checkin/checkout status, retention and hold status etc.).
-     * Schema information (rules embodied in the node type structure or more
-     * repository specific rules).
+     * Node type-enforced restrictions.
+     * </li>
+     * <li>
+     * Repository configuration-specific restrictions.
-     *
+     * <p>
+     * The implementation of this method is best effort: returning false guarantees that the operation cannot be
+     * performed, but returning true does not guarantee the opposite.
+     * <p>
+     * The <code>methodName</code> parameter identifies the method in question by its name
+     * as defined in the Javadoc.
+     * <p>
+     * The <code>target</code> parameter identifies the object on which the specified method is called.
+     * <p>
+     * The <code>arguments</code> parameter contains a <code>Map</code> object consisting of
+     * name/value pairs where the name is a String holding the parameter name of
+     * the method as defined in the Javadoc and the value is an Object holding
+     * the value to be passed. In cases where the value is a Java primitive type
+     * it must be converted to its corresponding Java object form before being passed.
+     * <p>
+     * For example, given a <code>Session</code> <code>S</code> and <code>Node</code>
+     * <code>N</code> then
+     * <p>
+     * <code>
+     * Map p = new HashMap();
+     * p.put("relPath", "foo");
+     * boolean b = S.hasCapability("addNode", N, p);
+     * </code>
+     * <p>
+     * will result in b == false if a child node called foo cannot be added to the node
+     * <code>N</code> within the session <code>S</code>.
-     * The <code>methodType</code> parameter identifies the operation using the method event
-     * constants defined for {@link javax.jcr.observation.Event#getMethod}.
-     *
-     * The <code>target</code> parameter identifies the object on which the specified method is
-     * called. For example, for method <code>Node.addNode</code>, <code>target</code> would identify
-     * the <code>Node</code> object. The <code>target</code> is an optional parameter, but must be
-     * supplied if the specified method is defined on javax.jcr.Item or any of its subtypes.
-     * To not supply a <code>target</code>, a <code>null</code> is passed as the second parameter.
-     *
-     * The <code>arguments</code> parameter contains method arguments as defined for
-     * {@link javax.jcr.observation.Event#getMethodInfo}. The <code>arguments</code> parameter is
-     * optional, and even when specified, not all arguments to the corresponding operation need to
-     * be specified. In such a case, the repository should check whether there exists a
-     * set of arguments for which the operation could succeed. To not supply <code>arguments</code>,
-     * either a <code>null</code> or an empty <code>Map</code> is passed as the third parameter.
-     * @param methodType the operation.
+     * @param methodName the nakme of the method.
-    public boolean checkCapability(String methodType, Object target, Map arguments) throws RepositoryException;
+    public boolean hasCapability(String methodName, Object target, Map arguments) throws RepositoryException;
-            throws UnsupportedRepositoryOperationException, RepositoryException;    
+            throws UnsupportedRepositoryOperationException, RepositoryException;

UPD42 UPD42 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS66 INS66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 INS66 INS66 INS66 UPD66 UPD66 INS66 UPD66 UPD66 INS66 UPD66 INS66 INS66 UPD66 UPD66 UPD42 UPD66 DEL66 DEL66 DEL40 DEL42 DEL67 DEL65 DEL40 DEL42 DEL67 DEL65