JCR-2887 - Split PrivilegeRegistry in a per-session manager instance and a repository level registry  (WIP)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181645 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.value.InternalValue;
+import org.apache.jackrabbit.spi.Name;
-                Value[] privValues = aceNode.getProperty(P_PRIVILEGES).getValues();
-                Privilege[] privs = new Privilege[privValues.length];
+                InternalValue[] privValues = aceNode.getProperty(P_PRIVILEGES).internalGetValues();
+                Name[] privNames = new Name[privValues.length];
-                    privs[i] = acMgr.privilegeFromName(privValues[i].getString());
+                    privNames[i] = privValues[i].getName();
-                Entry ace = createEntry(
-                        princ,
-                        privs,
+                Entry ace = new Entry(princ, privilegeMgr.getBits(privNames),
-                        Set<Privilege> mergedPrivs = privilegeMgr.getPrivileges(mergedBits);
-                        entry = createEntry(entry, mergedPrivs.toArray(new Privilege[mergedPrivs.size()]), entry.isAllow());
+                        entry = new Entry(entry, mergedBits, entry.isAllow());
-                    Set<Privilege> result = privilegeMgr.getPrivileges(diff);
-                    Entry tmpl = createEntry(entry,
-                            result.toArray(new Privilege[result.size()]),
-                            !entry.isAllow());
+                    Entry tmpl = new Entry(entry, diff, !entry.isAllow());
+        private Entry(Principal principal, PrivilegeBits privilegeBits, boolean allow, Map<String,Value> restrictions)
+                throws RepositoryException {
+            super(principal, privilegeBits, allow, restrictions);
+            pattern = calculatePattern();
+        }
+
+        private Entry(Entry base, PrivilegeBits newPrivilegeBits, boolean isAllow) throws RepositoryException {
+            super(base, newPrivilegeBits, isAllow);
+            pattern = calculatePattern();
+        }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS83 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS39 INS42 INS74 INS42 INS42 INS46 INS21 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS46 INS21 INS42 INS42 INS43 INS43 MOV43 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 UPD5 UPD5 INS43 INS43 UPD43 UPD42 INS42 INS14 INS42 UPD42 UPD42 UPD5 MOV43 INS42 INS32 MOV32 INS42 UPD43 MOV32 UPD42 MOV42 INS42 UPD42 MOV42 INS43 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 INS14 INS14 MOV43 INS42 INS42 MOV38 INS43 INS42 INS42 MOV32 INS42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL32 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL32 DEL59 DEL60