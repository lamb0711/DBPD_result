JCR-600: Repository does not release all resources on shutdown
- replaced usage of ThreadLocal with an IdentityHashMap using the current Thread as key to get the ChangeLog.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@469412 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.IdentityHashMap;
+import java.util.Collections;
-     * ThreadLocal that holds the ChangeLog while this state manager is in one
-     * of the {@link #prepare}, {@link #commit}, {@link #rollback}
-     * methods.
+     * This map holds the ChangeLog on a per thread basis while this state
+     * manager is in one of the {@link #prepare}, {@link #commit}, {@link
+     * #rollback} methods.
-    private ThreadLocal commitLog = new ThreadLocal() {
-        protected synchronized Object initialValue() {
-            return new CommitLog();
-        }
-    };
+    private final Map commitLogs = Collections.synchronizedMap(new IdentityHashMap());
-            ((CommitLog) commitLog.get()).setChanges(txLog);
+            commitLogs.put(Thread.currentThread(), txLog);
-        ((CommitLog) commitLog.get()).setChanges(null);
+        commitLogs.remove(Thread.currentThread());
-        ChangeLog changeLog = ((CommitLog) commitLog.get()).getChanges();
+        ChangeLog changeLog = (ChangeLog) commitLogs.get(Thread.currentThread());
-
-    //--------------------------< inner classes >-------------------------------
-
-    /**
-     * Helper class that serves as a container for a ChangeLog in a ThreadLocal.
-     * The <code>CommitLog</code> is associated with a <code>ChangeLog</code>
-     * while the <code>TransactionalItemStateManager</code> is in the commit
-     * method.
-     */
-    private static class CommitLog {
-
-        /**
-         * The changes that are about to be committed
-         */
-        private ChangeLog changes;
-
-        /**
-         * Sets changes that are about to be committed.
-         *
-         * @param changes that are about to be committed, or <code>null</code>
-         *                if changes have been committed and the commit log should be reset.
-         */
-        private void setChanges(ChangeLog changes) {
-            this.changes = changes;
-        }
-
-        /**
-         * The changes that are about to be committed, or <code>null</code> if
-         * the <code>TransactionalItemStateManager</code> is currently not
-         * committing any changes.
-         *
-         * @return the changes about to be committed.
-         */
-        private ChangeLog getChanges() {
-            return changes;
-        }
-    }

INS26 INS26 INS26 INS40 INS40 INS40 INS83 UPD43 UPD42 UPD42 INS32 UPD66 UPD66 UPD66 INS42 INS42 INS14 MOV43 UPD43 MOV43 INS42 INS42 INS32 INS11 UPD42 UPD42 MOV42 UPD42 MOV42 MOV43 MOV32 INS42 INS42 INS32 UPD42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL31 DEL1 DEL14 DEL42 DEL43 DEL32 DEL11 DEL36 DEL42 DEL42 DEL43 DEL32 DEL11 DEL36 DEL42 DEL33 DEL42 DEL43 DEL11 DEL36 DEL42 DEL32 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL55