JCR-1024: Only load root node definition when required

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@555290 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
-import java.util.Collections;
-import java.util.ArrayList;
-    private final QNodeDefinition rootNodeDefintion;
+    private QNodeDefinition rootNodeDefinition;
-    public ItemDefinitionProviderImpl(QNodeDefinition rootNodeDefintion, 
-                                      EffectiveNodeTypeProvider entProvider,
+    public ItemDefinitionProviderImpl(EffectiveNodeTypeProvider entProvider,
-        this.rootNodeDefintion = rootNodeDefintion;
-    public QNodeDefinition getRootNodeDefinition() {
-        return rootNodeDefintion;
+    public QNodeDefinition getRootNodeDefinition() throws RepositoryException {
+        if (rootNodeDefinition == null) {
+            rootNodeDefinition = service.getNodeDefinition(
+                    sessionInfo, service.getRootId(sessionInfo));
+        }
+        return rootNodeDefinition;
+        if (nodeState.getHierarchyEntry().getParent() == null) {
+            return getRootNodeDefinition();
+        }
-    /**
-     * Returns all applicable property definitions for a property with the
-     * specified name, type and multiValued characteristics.
-     *
-     * @param ent
-     * @param name
-     * @param type
-     * @param multiValued
-     * @return
-     * @throws ConstraintViolationException
-     */
-    private static QPropertyDefinition[] getQPropertyDefinitions(EffectiveNodeType ent,
-                                                                 QName name, int type,
-                                                                 boolean multiValued)
-            throws ConstraintViolationException {
-        QPropertyDefinition named[] = ent.getNamedQPropertyDefinitions(name);
-        QPropertyDefinition unnamed[] = ent.getUnnamedQPropertyDefinitions();
-        QPropertyDefinition all[] = new QPropertyDefinition[named.length + unnamed.length];
-        for (int i = 0; i < all.length; i++) {
-            if (i < named.length) {
-                all[i] = named[i];
-            }
-            else {
-                all[i] = unnamed[i - named.length];
-            }
-        }
-
-        QPropertyDefinition result[] = getMatchingPropDefs(all, type, multiValued);
-        if (result.length == 0) {
-            throw new ConstraintViolationException("no matching property definition found for " + name);
-        }
-        else {
-            return result;
-        }
-    }
-
-
-    private static QPropertyDefinition[] getMatchingPropDefs(QPropertyDefinition[] defs, int type, boolean multiValued) {
-        List result = Collections.EMPTY_LIST;
-
-        for (int i = 0; i < defs.length; i++) {
-            QItemDefinition qDef = defs[i];
-            if (!qDef.definesNode()) {
-                QPropertyDefinition pd = (QPropertyDefinition)qDef;
-                int reqType = pd.getRequiredType();
-                // match type
-                if (reqType == PropertyType.UNDEFINED || type == PropertyType.UNDEFINED || reqType == type) {
-                    // match multiValued flag
-                    if (multiValued == pd.isMultiple()) {
-                        // found match
-                        if (result.isEmpty()) {
-                            result = Collections.singletonList(pd);
-                        }
-                        else {
-                            if (result.size() == 1) {
-                                result = new ArrayList(result);
-                            }
-                            result.add(pd);
-                        }
-                    }
-                }
-            }
-        }
-        return (QPropertyDefinition[])result.toArray(QPropertyDefinition.EMPTY_ARRAY);
-    }

MOV23 INS31 MOV29 MOV83 MOV43 MOV42 UPD43 MOV43 MOV8 UPD42 UPD42 MOV25 INS25 INS27 MOV8 INS42 INS27 INS8 UPD42 MOV42 INS33 INS21 INS32 INS33 INS41 INS7 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL32 DEL21 DEL8 DEL25 DEL40 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL42 DEL27 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL25 DEL8 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25 DEL8 DEL24 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL40 DEL32 DEL11 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL65 DEL42 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL85 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL85 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL85 DEL42 DEL43 DEL85 DEL5 DEL40 DEL40 DEL27 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL40 DEL27 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL42 DEL40 DEL27 DEL2 DEL7 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL43 DEL42 DEL85 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL34 DEL27 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL42 DEL41 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL31