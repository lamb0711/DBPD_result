JCR-619 CacheManager (Memory Management in Jackrabbit)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@471800 13f79535-47bb-0310-9956-ffa450edef68

-public class MLRUItemStateCache implements ItemStateCache {
+public class MLRUItemStateCache implements ItemStateCache, Cache {
-    private final long maxMem;
+    private long maxMem;
+    /** the access count */
+    private long accessCount = 0;
+
+        CacheManager.getInstance().add(this);
+            touch();
+            touch();
+            touch();
-            // remove items, if too many
-            while (totalMem > maxMem) {
-                id = (ItemId) cache.firstKey();
-                evict(id);
-            }
+            shrinkIfRequired();
+    private void shrinkIfRequired() {
+        // remove items, if too many
+        while (totalMem > maxMem) {
+            ItemId id = (ItemId) cache.firstKey();
+            evict(id);
+        }
+    }
+
+            touch();
+    private void touch() {
+        accessCount++;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public long getAccessCount() {
+        return accessCount;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public long getMaxMemorySize() {
+        return maxMem;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public long getMemoryUsed() {
+        synchronized (cache) {
+            totalMem = 0;
+            Iterator iter = cache.values().iterator();
+            while (iter.hasNext()) {
+                Entry entry = (Entry) iter.next();
+                entry.recalc();
+                totalMem += entry.size;
+            }
+        }
+        return totalMem;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void resetAccessCount() {
+        synchronized (cache) {
+            accessCount = 0;
+        }
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void setMaxMemorySize(long size) {
+        synchronized (cache) {
+            this.maxMem = size;
+            shrinkIfRequired();
+        }
+    }
+

INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS29 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS34 INS21 MOV61 INS21 INS65 INS41 INS65 INS41 INS65 INS51 INS41 INS65 INS51 INS65 INS39 INS42 INS51 INS66 INS32 INS37 INS65 INS42 INS65 INS42 INS65 INS42 INS8 INS42 INS65 INS42 INS8 INS65 INS42 INS8 INS32 INS42 INS52 INS21 INS21 INS21 INS21 INS60 INS21 INS42 INS21 INS60 INS61 INS21 INS21 INS21 INS42 INS42 INS32 INS32 INS32 INS32 INS43 INS59 INS32 INS7 INS43 INS59 INS32 INS8 INS7 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 MOV11 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS21 INS42 INS34 INS22 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS7 INS52 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS40 INS43 INS32 INS42 INS42 INS42 DEL83 DEL42 DEL7 DEL21