JCR-156: Review test cases and cross check with 1.0 specification
- QueryResult must return jcr:score

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@292664 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.query.AndQueryNode;
-import org.apache.jackrabbit.core.query.NotQueryNode;
-import org.apache.jackrabbit.core.query.OrQueryNode;
-import org.apache.jackrabbit.core.query.TextsearchQueryNode;
-        // add jcr:path
-        selectProps.add(Constants.JCR_PATH);
-
-        // add jcr:score if necessary
-        if (hasTextsearchNode(root.getLocationNode())) {
+        // add jcr:path and jcr:score if not selected already
+        if (!selectProps.contains(Constants.JCR_PATH)) {
+            selectProps.add(Constants.JCR_PATH);
+        }
+        if (!selectProps.contains(Constants.JCR_SCORE)) {
-
-    //-----------------------------< internal >---------------------------------
-
-    /**
-     * Returns <code>true</code> if <code>node</code> has a
-     * {@link org.apache.jackrabbit.core.query.TextsearchQueryNode} somewhere
-     * down the query tree; <code>false</code> otherwise.
-     * @param node the path node.
-     * @return <code>true</code> if the query tree contains a textsearch
-     *  node, <code>false</code> otherwise.
-     */
-    private static boolean hasTextsearchNode(PathQueryNode node) {
-        final boolean[] textsearch = new boolean[1];
-        node.acceptOperands(new DefaultQueryNodeVisitor() {
-            public Object visit(OrQueryNode node, Object data) {
-                return node.acceptOperands(this, data);
-            }
-
-            public Object visit(AndQueryNode node, Object data) {
-                return node.acceptOperands(this, data);
-            }
-
-            public Object visit(NotQueryNode node, Object data) {
-                return node.acceptOperands(this, data);
-            }
-
-            public Object visit(TextsearchQueryNode node, Object data) {
-                textsearch[0] = true;
-                return data;
-            }
-
-            public Object visit(LocationStepQueryNode node, Object data) {
-                return node.acceptOperands(this, data);
-            }
-        }, null);
-        return textsearch[0];
-    }

INS25 INS38 INS8 INS38 INS32 MOV21 INS32 INS42 INS42 INS40 UPD42 MOV42 UPD42 MOV42 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL32 DEL66 DEL40 DEL65 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL83 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL34 DEL3 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL52 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL52 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL52 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL34 DEL2 DEL9 DEL7 DEL21 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL52 DEL42 DEL32 DEL41 DEL8 DEL31 DEL1 DEL14 DEL33 DEL32 DEL21 DEL42 DEL34 DEL2 DEL41 DEL8 DEL31