JCR-3405 : Improvements to user management implementation 

- password utility
- configurable password hashing: algorithm, number of iterations
- improve handling of plaintxt passwords starting with {algorithm}

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1370420 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.security.authentication.CryptedSimpleCredentials;
+import org.apache.jackrabbit.core.security.user.PasswordUtility;
-        validatePassword(password);
+        validatePassword(password, false); // don't force validation of hashed passwords.
-        validatePassword(newPassword);
+        validatePassword(newPassword, true); // force validation of all passwords
+     * @param forceMatch If true the specified password is always validated;
+     * otherwise only if it is a plain text password.
-    private void validatePassword(String password) throws RepositoryException {
-        if (password != null && isPlainText(password)) {
+    private void validatePassword(String password, boolean forceMatch) throws RepositoryException {
+        if (password != null && (forceMatch || PasswordUtility.isPlainTextPassword(password))) {
-
-    private static boolean isPlainText(String password) {
-        try {
-            return !CryptedSimpleCredentials.buildPasswordHash(password).equals(password);
-        } catch (RepositoryException e) {
-            // failed to build hash from pw -> proceed with the validation.
-            return true;
-        }
-    }

UPD40 INS44 INS65 INS39 INS42 INS42 INS66 INS66 INS9 INS9 INS36 INS27 INS42 MOV32 INS42 UPD42 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL54 DEL8 DEL31