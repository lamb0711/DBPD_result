JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 1: jackrabbit-webdav]

in addition:
- fix indention
- minor improvements in comments
- use foreach loops where possible
- introduce PropEntry marker interface as common base for DavProperty and DavPropertyName
- add o.a.j.webdav.lock.Type.hashCode

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915333 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
-import java.util.Iterator;
-public class QueryGrammerSet extends AbstractDavProperty implements SearchConstants {
+public class QueryGrammerSet extends AbstractDavProperty<Set<? extends XmlSerializable>> implements SearchConstants {
-    private final Set queryGrammers = new HashSet();
+    private final Set<Grammer> queryGrammers = new HashSet<Grammer>();
-            Grammer[] grammers = (Grammer[]) queryGrammers.toArray(new Grammer[size]);
+            Grammer[] grammers = queryGrammers.toArray(new Grammer[size]);
+    @Override
-        Iterator qlIter = queryGrammers.iterator();
-        while (qlIter.hasNext()) {
-            Element sqg = DomUtil.addChildElement(elem, XML_QUERY_GRAMMAR, SearchConstants.NAMESPACE);
-            Element grammer = DomUtil.addChildElement(sqg, XML_GRAMMER, SearchConstants.NAMESPACE);
-            Grammer qGrammer = (Grammer)qlIter.next();
-            DomUtil.addChildElement(grammer, qGrammer.localName, qGrammer.namespace);
+        for (Grammer qGrammer : queryGrammers) {
+            elem.appendChild(qGrammer.toXml(document));
-    public Object getValue() {
+    public Set<? extends XmlSerializable> getValue() {
-    private class Grammer {
+    private class Grammer implements XmlSerializable {
+        @Override
+        @Override
+
+        /**
+         * @see XmlSerializable#toXml(org.w3c.dom.Document) 
+         */
+        public Element toXml(Document document) {
+            Element sqg = DomUtil.createElement(document, XML_QUERY_GRAMMAR, SearchConstants.NAMESPACE);
+            Element grammer = DomUtil.addChildElement(sqg, XML_GRAMMER, SearchConstants.NAMESPACE);
+            DomUtil.addChildElement(grammer, localName, namespace);
+            return sqg;
+        }

MOV26 UPD40 INS74 MOV43 INS74 INS74 INS78 INS74 INS43 INS31 MOV43 INS76 INS43 INS43 INS42 INS70 INS43 INS76 INS42 INS78 INS78 INS29 INS83 INS43 INS42 INS44 INS8 INS43 INS42 INS42 INS74 INS44 INS42 INS8 UPD42 MOV42 INS43 INS42 INS42 INS65 INS42 INS43 INS42 INS60 MOV60 INS21 INS41 INS42 MOV43 MOV43 MOV43 INS42 INS21 INS42 INS68 INS66 INS42 MOV43 INS59 INS32 INS42 MOV5 INS32 INS42 INS42 INS69 INS42 INS32 INS42 INS42 INS42 INS42 INS42 MOV32 MOV42 UPD42 MOV42 INS32 INS43 INS42 INS42 INS42 INS42 INS40 INS42 UPD42 MOV42 UPD42 MOV42 INS40 DEL42 DEL43 DEL85 DEL5 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL40 DEL40 DEL32 DEL21 DEL8 DEL61 DEL43