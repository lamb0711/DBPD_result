JCR-1438: Replace Config classes with factories

Revert previous change (r826653) to avoid conflicts with uncommitted changes from Angela.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@826668 13f79535-47bb-0310-9956-ffa450edef68

-                            config.newInstance(QueryHandler.class);
+                            (QueryHandler) config.newInstance();
-                    return parseBeanConfig(element).newInstance(ISMLocking.class);
+                    BeanConfig config = parseBeanConfig(element);
+                    try {
+                        return (ISMLocking) config.newInstance();
+                    } catch (ClassCastException e) {
+                        throw new RepositoryException(
+                                "Invalid ISMLocking class: "
+                                + config.getClassName(), e);
+                    }
-                Journal journal = config.newInstance(Journal.class);
-                if (journal instanceof AbstractJournal) {
-                    ((AbstractJournal) journal).setRepositoryHome(home);
-                }
-                try {
-                    journal.init(id, resolver);
-                } catch (JournalException e) {
-                    // TODO: Should JournalException extend RepositoryException?
+                Object object = config.newInstance();
+                if (object instanceof Journal) {
+                    Journal journal = (Journal) object;
+                    if (journal instanceof AbstractJournal) {
+                        ((AbstractJournal) journal).setRepositoryHome(home);
+                    }
+                    try {
+                        journal.init(id, resolver);
+                    } catch (JournalException e) {
+                        // TODO: Should JournalException extend RepositoryException?
+                        throw new RepositoryException(
+                                "Journal initialization failed: " + journal, e);
+                    }
+                    return journal;
+                } else {
-                            "Journal initialization failed: " + journal, e);
+                            "Invalid Journal implementation class: "
+                            + config.getClassName());
-                return journal;
-                        DataStore store = bc.newInstance(DataStore.class);
+                        DataStore store = (DataStore) bc.newInstance();
+                RepositoryLockMechanism lock = null;
-                        return bc.newInstance(RepositoryLockMechanism.class);
+                        lock = (RepositoryLockMechanism) bc.newInstance();
+                        break;
-                return new RepositoryLock();
+                if (lock == null) {
+                    lock = new RepositoryLock();
+                }
+                return lock;
-                    FileSystem fs = config.newInstance(FileSystem.class);
+                    FileSystem fs = (FileSystem) config.newInstance();
+                } catch (ClassCastException e) {
+                    throw new RepositoryException(
+                            "Invalid file system implementation class: "
+                            + config.getClassName(), e);

INS8 MOV60 INS60 INS25 INS60 INS25 INS8 INS43 INS59 INS62 MOV8 INS8 MOV43 INS59 INS27 INS8 INS42 INS12 INS60 INS54 INS42 INS42 INS32 INS42 INS43 INS53 INS42 INS33 INS42 INS33 INS21 INS44 INS8 INS43 INS59 INS8 INS12 INS42 INS42 INS42 MOV43 INS14 INS7 MOV43 INS43 INS42 INS53 INS42 INS42 MOV32 MOV41 INS44 INS8 INS11 INS43 INS27 INS21 INS10 INS42 MOV14 INS11 INS42 INS14 INS11 INS43 INS42 INS53 MOV43 INS42 INS42 INS45 INS32 MOV43 INS7 MOV43 INS32 INS43 INS27 INS42 INS11 MOV43 INS32 INS42 INS14 INS42 INS42 INS11 INS42 INS11 MOV42 MOV42 INS42 INS45 INS32 MOV43 INS32 INS42 MOV42 INS43 INS27 INS42 MOV43 INS32 INS43 INS32 INS42 INS42 MOV42 MOV42 INS42 INS45 INS32 MOV42 MOV42 INS42 MOV42 MOV42 INS42 INS42 DEL57 DEL32 DEL57 DEL32 DEL8 DEL42 DEL42 DEL57 DEL32 DEL57 DEL32 DEL57 DEL32 DEL41 DEL57 DEL32