JCR-2170: Remove PropDefId and NodeDefId
- merged changes from sandbox branch

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816343 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.nodetype.NodeDef;
-import org.apache.jackrabbit.core.nodetype.PropDef;
+import org.apache.jackrabbit.spi.QPropertyDefinition;
+import org.apache.jackrabbit.spi.QNodeDefinition;
+     * the cached node definition
+     */
+    private QNodeDefinition def;
+
+    /**
-
-            PropDef pd = getEffectiveNodeType().getApplicablePropertyDef(name, type, multiple);
-
-            propState.setDefinitionId(pd.getId());
-        NodeDef cnd =
-                getEffectiveNodeType().getApplicableChildNodeDef(name, nodeTypeName, ntReg);
-        state.setDefinitionId(cnd.getId());
-
+        EffectiveNodeType ent = getEffectiveNodeType();
-        NodeDef def;
+        QNodeDefinition def;
-            def = getEffectiveNodeType().getApplicableChildNodeDef(name, nodeState.getNodeTypeName(), ntReg);
+            def = ent.getApplicableChildNodeDef(name, nodeState.getNodeTypeName(), ntReg);
-            if (!ntReg.getNodeDef(existingChild.getDefinitionId()).allowsSameNameSiblings()) {
+            QNodeDefinition existingChildDef = ent.getApplicableChildNodeDef(
+                    cne.getName(), existingChild.getNodeTypeName(), ntReg);
+            if (!existingChildDef.allowsSameNameSiblings()) {
-            srcState.setDefinitionId(def.getId());
-            
+
-     * Returns the NodeDef for this state
+     * Returns the QNodeDefinition for this state
+     * @throws RepositoryException if an error occurs
-    public NodeDef getDefinition() {
-        return ntReg.getNodeDef(nodeState.getDefinitionId());
+    public QNodeDefinition getDefinition() throws RepositoryException {
+        if (def == null) {
+            EffectiveNodeType ent = getParent().getEffectiveNodeType();
+            def = ent.getApplicableChildNodeDef(getName(),
+                    nodeState.getNodeTypeName(), ntReg);
+        }
+        return def;
+     * @throws RepositoryException if an error occurs
-    public PropDef getDefinition(PropertyState prop) {
-        return ntReg.getPropDef(prop.getDefinitionId());
+    public QPropertyDefinition getDefinition(PropertyState prop)
+            throws RepositoryException {
+        return getEffectiveNodeType().getApplicablePropertyDef(
+                prop.getName(), prop.getType(), prop.isMultiValued());

MOV26 MOV26 UPD40 UPD40 INS23 INS29 INS83 INS43 INS59 UPD43 INS43 INS8 UPD43 INS43 INS65 INS42 INS42 INS60 INS65 UPD42 INS42 INS25 INS41 INS65 UPD42 INS42 INS66 INS43 INS59 UPD43 UPD66 INS42 INS66 INS27 INS8 INS42 INS42 INS66 INS42 INS42 MOV32 UPD42 INS60 INS42 INS33 INS60 INS21 MOV32 UPD42 INS32 INS32 INS43 INS59 INS43 INS59 INS7 INS42 UPD42 MOV42 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS32 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL32 DEL41 DEL8