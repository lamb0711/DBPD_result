JCR-2573 - Performance of AC Evaluation [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@950440 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.security.AccessManager;
+import org.apache.jackrabbit.core.security.authorization.Permission;
+import org.apache.jackrabbit.core.security.AccessManager;
-        if (state.getStatus() == ItemState.STATUS_NEW &&
-                !data.getDefinition().isProtected()) {
-            // NEW items can always be read as long they have been added
-            // through the API and NOT by the system (i.e. protected props).
-            return true;
+        if (state.getStatus() == ItemState.STATUS_NEW) {
+            if (!data.getDefinition().isProtected()) {
+                /*
+                NEW items can always be read as long they have been added through
+                the API and NOT by the system (i.e. protected items).
+                */
+                return true;
+            } else {
+                /*
+                NEW protected (system) item:
+                need use the path to evaluate the effective permissions.
+                */
+                return (path == null) ?
+                        session.getAccessManager().isGranted(data.getId(), AccessManager.READ) :
+                        session.getAccessManager().isGranted(path, Permission.READ);
+            }
-            return (path == null) ?
-                    canRead(data.getId()) :
-                    session.getAccessManager().canRead(path);
+            /* item is not NEW -> save to call acMgr.canRead(Path,ItemId) */
+            return session.getAccessManager().canRead(path, data.getId());
-     * @param id
-     * @return true if the item with the given <code>id</code> can be read;
+     * @param parent The item data of the parent node.
+     * @param childId
+     * @return true if the item with the given <code>childId</code> can be read;
-    private boolean canRead(ItemId id) throws RepositoryException {
-        return session.getAccessManager().isGranted(id, AccessManager.READ);
+    private boolean canRead(ItemData parent, ItemId childId) throws RepositoryException {
+        if (parent.getStatus() == ItemState.STATUS_EXISTING) {
+            /*
+             child item is for sure not NEW (because then the parent was modified).
+             safe to use AccessManager#canRead(Path, ItemId).
+             */
+            return session.getAccessManager().canRead(null, childId);
+        } else {
+            /*
+             child could be NEW -> don't use AccessManager#canRead(Path, ItemId)
+             */
+            return session.getAccessManager().isGranted(childId, AccessManager.READ);
+        }
-            if (canRead(entry.getId())) {
+            if (canRead(data, entry.getId())) {
-            if (canRead(new PropertyId(parentId, propName))) {
+            if (canRead(data, new PropertyId(parentId, propName))) {

MOV26 INS26 INS40 INS44 INS8 INS25 INS65 INS43 INS42 UPD42 INS25 MOV27 INS8 INS8 INS42 INS66 UPD42 UPD66 INS42 INS27 INS8 INS8 MOV25 INS41 INS32 INS40 INS41 MOV41 MOV38 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS33 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS40 UPD42 INS40 INS42 INS42 DEL27 DEL8