JCR-61: Docview import fails, if attribute and childelem have same name

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@190588 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.state.ItemState;
-        this.importTarget = itemOps.getNodeState(parentPath);
+        importTarget = itemOps.getNodeState(parentPath);
+                    if (parent.hasPropertyEntry(nodeName)) {
+                        /**
+                         * a property with the same name already exists; if this property
+                         * has been imported as well (e.g. through document view import
+                         * where an element can have the same name as one of the attributes
+                         * of its parent element) we have to rename the onflicting property;
+                         *
+                         * see http://issues.apache.org/jira/browse/JCR-61
+                         */
+                        PropertyId propId = new PropertyId(parent.getUUID(), nodeName);
+                        PropertyState conflicting = itemOps.getPropertyState(propId);
+                        if (conflicting.getStatus() == ItemState.STATUS_NEW) {
+                            // assume this property has been imported as well;
+                            // rename conflicting property
+                            // @todo use better reversible escaping scheme to create unique name
+                            QName newName = new QName(nodeName.getNamespaceURI(), nodeName.getLocalName() + "_");
+                            if (parent.hasPropertyEntry(newName)) {
+                                newName = new QName(newName.getNamespaceURI(), newName.getLocalName() + "_");
+                            }
+                            PropertyState newProp =
+                                    itemOps.createPropertyState(parent, newName,
+                                            conflicting.getType(), conflicting.getValues().length);
+                            newProp.setValues(conflicting.getValues());
+                            parent.removePropertyEntry(nodeName);
+                            itemOps.store(parent);
+                            itemOps.destroy(conflicting);
+                        }
+                    }
+

INS26 INS40 INS42 INS25 INS32 INS8 INS42 INS42 INS42 INS60 INS60 INS25 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS40 INS60 INS25 INS60 INS21 INS21 INS21 INS21 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS27 INS7 INS42 INS42 INS42 INS42 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS32 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS42 DEL52 DEL42 DEL22