JCR-762: Removed the hardcoded sv: prefix in favor of properly namespaced system view name constants.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@510908 13f79535-47bb-0310-9956-ffa450edef68

-        // check namespace
-        if (!QName.NS_SV_URI.equals(namespaceURI)) {
-            throw new SAXException(new InvalidSerializedDataException("invalid namespace for element in system view xml document: "
-                    + namespaceURI));
-        }
+        QName name = new QName(namespaceURI, localName);
-        if (SysViewSAXEventGenerator.NODE_ELEMENT.equals(localName)) {
+        if (name.equals(QName.SV_NODE)) {
-            String name = atts.getValue(SysViewSAXEventGenerator.PREFIXED_NAME_ATTRIBUTE);
+            String svName = getAttribute(atts, QName.SV_NAME);
-                state.nodeName = NameFormat.parse(name, nsContext);
+                state.nodeName = NameFormat.parse(svName, nsContext);
-        } else if (SysViewSAXEventGenerator.PROPERTY_ELEMENT.equals(localName)) {
+        } else if (name.equals(QName.SV_PROPERTY)) {
-            String name = atts.getValue(SysViewSAXEventGenerator.PREFIXED_NAME_ATTRIBUTE);
+            String svName = getAttribute(atts, QName.SV_NAME);
-                currentPropName = NameFormat.parse(name, nsContext);
+                currentPropName = NameFormat.parse(svName, nsContext);
-            String type = atts.getValue(SysViewSAXEventGenerator.PREFIXED_TYPE_ATTRIBUTE);
+            String type = getAttribute(atts, QName.SV_TYPE);
-            currentPropType = PropertyType.valueFromName(type);
-        } else if (SysViewSAXEventGenerator.VALUE_ELEMENT.equals(localName)) {
+            try {
+                currentPropType = PropertyType.valueFromName(type);
+            } catch (IllegalArgumentException e) {
+                throw new SAXException(new InvalidSerializedDataException(
+                        "Unknown property type: " + type, e));
+            }
+        } else if (name.equals(QName.SV_VALUE)) {
-            throw new SAXException(new InvalidSerializedDataException("unexpected element found in system view xml document: "
-                    + localName));
+            throw new SAXException(new InvalidSerializedDataException(
+                    "Unexpected element in system view xml document: " + name));
+        QName name = new QName(namespaceURI, localName);
-        if (SysViewSAXEventGenerator.NODE_ELEMENT.equals(localName)) {
+        if (name.equals(QName.SV_NODE)) {
-        } else if (SysViewSAXEventGenerator.PROPERTY_ELEMENT.equals(localName)) {
+        } else if (name.equals(QName.SV_PROPERTY)) {
-        } else if (SysViewSAXEventGenerator.VALUE_ELEMENT.equals(localName)) {
+        } else if (name.equals(QName.SV_VALUE)) {
+
+    //-------------------------------------------------------------< private >
+
+    /**
+     * Returns the value of the named XML attribute.
+     *
+     * @param attributes set of XML attributes
+     * @param name attribute name
+     * @return attribute value,
+     *         or <code>null</code> if the named attribute is not found
+     */
+    private static String getAttribute(Attributes attributes, QName name) {
+        return attributes.getValue(name.getNamespaceURI(), name.getLocalName());
+    }
+

INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS60 INS60 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS43 INS59 INS43 INS59 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS40 INS42 INS42 INS14 INS42 INS40 INS42 INS42 INS32 INS32 INS43 INS42 INS42 INS42 INS40 INS54 INS43 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 UPD42 INS8 INS12 INS42 INS40 INS42 INS42 INS40 INS42 UPD40 UPD42 MOV21 INS44 MOV8 INS42 UPD40 INS42 UPD40 INS43 INS42 UPD42 INS42 UPD42 UPD45 UPD42 INS42 UPD45 UPD42 DEL40 DEL42 DEL42 DEL32 DEL38 DEL25 DEL40 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL40 DEL42 DEL40 DEL42 DEL40 DEL42 DEL40 DEL42