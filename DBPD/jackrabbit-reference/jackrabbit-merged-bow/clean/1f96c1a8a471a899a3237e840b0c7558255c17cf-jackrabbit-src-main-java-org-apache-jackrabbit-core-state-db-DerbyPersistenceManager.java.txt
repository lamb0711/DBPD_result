JCR-595 Refactoring of the Persistence Managers (+changing some eol-styles)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@467925 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.sql.Connection;
-import java.sql.DriverManager;
-import java.sql.SQLException;
-
- * <code>DerbyPersistenceManager</code> is a JDBC-based
- * <code>PersistenceManager</code> for Jackrabbit that persists
- * <code>ItemState</code> and <code>NodeReferences</code> objects in an
- * embedded Derby database using a simple custom serialization format and a
- * very basic non-normalized database schema (in essence tables with one 'key'
- * and one 'data' column).
- * <p/>
- * It is configured through the following properties:
- * <ul>
- * <li><code>url</code>: the database url of the form
- * <code>"jdbc:derby:[db];[attributes]"</code></li>
- * <li><code>schemaObjectPrefix</code>: prefix to be prepended to schema objects</li>
- * <li><code>driver</code>: the FQN name of the JDBC driver class
- * (default: <code>"org.apache.derby.jdbc.EmbeddedDriver"</code>)</li>
- * <li><code>schema</code>: type of schema to be used
- * (default: <code>"derby"</code>)</li>
- * <li><code>user</code>: the database user (default: <code>""</code>)</li>
- * <li><code>password</code>: the user's password (default: <code>""</code>)</li>
- * <li><code>externalBLOBs</code>: if <code>true</code> (the default) BINARY
- * values (BLOBs) are stored in the local file system;
- * if <code>false</code> BLOBs are stored in the database</li>
- * </ul>
- * See also {@link SimpleDbPersistenceManager}.
- * <p/>
- * The following is a fragment from a sample configuration:
- * <pre>
- *   &lt;PersistenceManager class="org.apache.jackrabbit.core.state.db.DerbyPersistenceManager"&gt;
- *       &lt;param name="url" value="jdbc:derby:${wsp.home}/db;create=true"/&gt;
- *       &lt;param name="schemaObjectPrefix" value="${wsp.name}_"/&gt;
- *       &lt;param name="externalBLOBs" value="false"/&gt;
- *  &lt;/PersistenceManager&gt;
- * </pre>
- */
-public class DerbyPersistenceManager extends SimpleDbPersistenceManager {
-
-    /**
-     * Logger instance
-     */
-    private static Logger log = LoggerFactory.getLogger(DerbyPersistenceManager.class);
-
-    /**
-     * Creates a new <code>SimpleDbPersistenceManager</code> instance.
-     */
-    public DerbyPersistenceManager() {
-        // preset some attributes to reasonable defaults
-        schema = "derby";
-        driver = "org.apache.derby.jdbc.EmbeddedDriver";
-        schemaObjectPrefix = "";
-        user = "";
-        password = "";
-    }
-
-    //------------------------------------------< DatabasePersistenceManager >
-
-    /**
-     * Closes the given connection by shutting down the embedded Derby
-     * database.
-     *
-     * @param connection database connection
-     * @throws SQLException if an error occurs
-     * @see DatabasePersistenceManager#closeConnection(Connection)
-     */
-    protected void closeConnection(Connection connection) throws SQLException {
-        // prepare connection url for issuing shutdown command
-        String url = connection.getMetaData().getURL();
-        int pos = url.lastIndexOf(';');
-        if (pos != -1) {
-            // strip any attributes from connection url
-            url = url.substring(0, pos);
-        }
-        url += ";shutdown=true";
-
-        // we have to reset the connection to 'autoCommit=true' before closing it;
-        // otherwise Derby would mysteriously complain about some pending uncommitted
-        // changes which can't possibly be true.
-        // @todo further investigate
-        connection.setAutoCommit(true);
-
-        // now it's safe to shutdown the embedded Derby database
-        try {
-            DriverManager.getConnection(url);
-        } catch (SQLException e) {
-            // a shutdown command always raises a SQLException
-            log.info(e.getMessage());
-        }
-    }
-}
+ * Legacy class kept for backward compatibility reasons.
+  * @deprecated use {@link org.apache.jackrabbit.core.persistence.db.DerbyPersistenceManager}
+  *             instead.
+  */
+public class DerbyPersistenceManager
+        extends org.apache.jackrabbit.core.persistence.db.DerbyPersistenceManager {
+}

INS43 INS65 INS65 INS40 UPD66 MOV66 UPD66 MOV66 MOV65 UPD66 MOV66 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL43 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL45 DEL7 DEL21 DEL42 DEL45 DEL7 DEL21 DEL42 DEL45 DEL7 DEL21 DEL42 DEL45 DEL7 DEL21 DEL42 DEL45 DEL7 DEL21 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL13 DEL32 DEL59 DEL60 DEL42 DEL34 DEL38 DEL27 DEL42 DEL42 DEL42 DEL34 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL45 DEL7 DEL21 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL31