optimized LazyItemIterator and made it more forgiving

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@216177 13f79535-47bb-0310-9956-ffa450edef68

-     * Same as <code>{@link Node#getReferences()}</code> except that
-     * this method also filters out the references that appear to be non-existent
-     * in this workspace if <code>skipInexistent</code> is set to <code>true</code>.
-     *
-     * @param skipInexistent if set to <code>true</code> inexistent items are skipped
-     */
-    protected PropertyIterator getReferences(boolean skipInexistent)
-            throws RepositoryException {
-        try {
-            NodeReferencesId targetId = new NodeReferencesId(((NodeId) id).getUUID());
-            NodeReferences refs = getOrCreateNodeReferences(targetId);
-            // refs.getReferences returns a list of PropertyId's
-            List idList = refs.getReferences();
-            return new LazyItemIterator(itemMgr, idList, skipInexistent);
-        } catch (ItemStateException e) {
-            String msg = "Unable to retrieve node references for: " + id;
-            log.debug(msg);
-            throw new RepositoryException(msg, e);
-        }
-    }
-
-    /**
-        return getReferences(false);
+        try {
+            NodeReferencesId targetId = new NodeReferencesId(((NodeId) id).getUUID());
+            NodeReferences refs = getOrCreateNodeReferences(targetId);
+            // refs.getReferences() returns a list of PropertyId's
+            List idList = refs.getReferences();
+            return new LazyItemIterator(itemMgr, idList);
+        } catch (ItemStateException e) {
+            String msg = "Unable to retrieve REFERENCE properties that refer to " + id;
+            log.debug(msg);
+            throw new RepositoryException(msg, e);
+        }

MOV31 UPD83 MOV21 UPD65 UPD45 DEL66 DEL42 DEL42 DEL68 DEL66 DEL66 DEL66 DEL42 DEL66 DEL65 DEL39 DEL42 DEL44 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL9 DEL32 DEL41 DEL8 DEL31