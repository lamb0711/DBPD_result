Refactoring step 7 (JCR-53)
 - Added the new FileSystemConfig object
 - Added an init() step to keep the constructors and parsing code simple
 - Moved file handling and workspace creation back to RepositoryConfig
 - Added and improved lots of javadocs
 - Fixed property problems (new Property(p) != (Property) p.clone())
 - Many minor changes


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156418 13f79535-47bb-0310-9956-ffa450edef68

- * This Class implements the configuration object for the versioning.
+ * Versioning configuration. This configuration class is used to
+ * create configured versioning objects.
+ * <p>
+ * The contained configuration information are: the home directory,
+ * the file system implementation, and the persistence manager
+ * implementation.
+ *
+ * @see RepositoryConfig#getVersioningConfig()
-    /** the homedir for the versioning */
+    /**
+     * Versioning home directory.
+     */
-    /** The <code>FileSystem</code> for the versioing. */
-    private final FileSystem fs;
+    /**
+     * Versioning file system configuration.
+     */
+    private final FileSystemConfig fsc;
-    /** The <code>PersistenceManagerConfig</code> for the versioning */
-    private final BeanConfig pmc;
+    /**
+     * Versioning persistence manager configuration.
+     */
+    private final PersistenceManagerConfig pmc;
-    public VersioningConfig(String home, FileSystem fs, BeanConfig pmc) {
+    /**
+     * Creates a versioning configuration object.
+     *
+     * @param home home directory
+     * @param fsc file system configuration
+     * @param pmc persistence manager configuration
+     */
+    public VersioningConfig(
+            String home, FileSystemConfig fsc, PersistenceManagerConfig pmc) {
-        this.fs = fs;
+        this.fsc = fsc;
+    /**
+     * Initializes the versioning file system.
+     *
+     * @throws ConfigurationException on file system configuration errors
+     */
+    public void init() throws ConfigurationException {
+        fsc.init();
+    }
+
+    /**
+     * Returns the versioning home directory.
+     *
+     * @return versioning home directory
+     */
-     * Returns the virtual file system where the workspace stores global state.
+     * Returns the versioning file system implementation.
-     * @return the virtual file system where the workspace stores global state
+     * @return file system implementation
-        return fs;
+        return fsc.getFileSystem();
-     * Returns the configuration of the persistence manager.
+     * Returns the versioning persistence manager configuration.
-     * @return the <code>PersistenceManagerConfig</code> for this workspace
+     * @return persistence manager configuration
-        return new PersistenceManagerConfig(pmc);
+        return pmc;

INS31 INS65 UPD43 UPD43 INS29 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS66 UPD66 INS66 INS66 INS66 INS66 INS68 UPD42 UPD42 UPD42 INS65 INS65 INS65 INS65 UPD43 UPD42 UPD43 INS65 INS65 INS42 INS21 INS65 INS65 INS42 INS42 UPD66 UPD66 UPD66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD42 UPD42 INS66 INS42 INS66 INS32 INS66 INS66 UPD66 UPD66 INS32 UPD66 UPD66 INS42 UPD42 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL42 DEL14