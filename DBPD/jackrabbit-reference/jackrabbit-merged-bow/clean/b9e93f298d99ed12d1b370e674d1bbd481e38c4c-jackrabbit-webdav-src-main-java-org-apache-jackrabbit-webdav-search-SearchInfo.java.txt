JCR-2107: JSR 283 Query (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@783005 13f79535-47bb-0310-9956-ffa450edef68

+    public static final long NRESULTS_UNDEFINED = -1;
+    public static final long OFFSET_UNDEFINED = -1;
+
+    private static final String LIMIT = "limit";
+    private static final String NRESULTS = "nresults";
+    private static final String OFFSET = "offset";
+
+    private long nresults = NRESULTS_UNDEFINED;
+    private long offset = OFFSET_UNDEFINED;
+
+     * Returns the maximal number of search results that should be returned.
+     *
+     * @return the maximal number of search results that should be returned.
+     */
+    public long getNumberResults() {
+        return nresults;
+    }
+
+    /**
+     * Sets the maximal number of search results that should be returned.
+     *
+     * @param nresults The maximal number of search results
+     */
+    public void setNumberResults(long nresults) {
+        this.nresults = nresults;
+    }
+
+    /**
+     * Returns the desired offset in the total result set.
+     *
+     * @return the desired offset in the total result set.
+     */
+    public long getOffset() {
+        return offset;
+    }
+
+    /**
+     * Sets the desired offset in the total result set.
+     *
+     * @param offset The desired offset in the total result set.
+     */
+    public void setOffset(long offset) {
+        this.offset = offset;
+    }
+
+    /**
+        if (nresults != NRESULTS_UNDEFINED|| offset != OFFSET_UNDEFINED) {
+            Element limitE = DomUtil.addChildElement(sRequestElem, LIMIT, NAMESPACE);
+            if (nresults != NRESULTS_UNDEFINED) {
+                DomUtil.addChildElement(limitE, NRESULTS, NAMESPACE, nresults + "");
+            }
+            if (offset != OFFSET_UNDEFINED) {
+                // TODO define reasonable namespace...
+                DomUtil.addChildElement(limitE, OFFSET, Namespace.EMPTY_NAMESPACE, offset + "");
+            }
+        }
+        SearchInfo sInfo;
-            return new SearchInfo(first.getLocalName(), DomUtil.getNamespace(first), DomUtil.getText(first), namespaces);
+            sInfo = new SearchInfo(first.getLocalName(), DomUtil.getNamespace(first), DomUtil.getText(first), namespaces);
+
+        Element limit = DomUtil.getChildElement(searchRequest, LIMIT, NAMESPACE);
+        if (limit != null) {
+            // try to get the value DAV:nresults element
+            String nresults = DomUtil.getChildTextTrim(limit, NRESULTS, NAMESPACE);
+            if (nresults != null) {
+                try {
+                    sInfo.setNumberResults(Long.valueOf(nresults));
+                } catch (NumberFormatException e) {
+                    log.error("DAV:nresults cannot be parsed into a long -> ignore.");
+                }
+            }
+            // try of an offset is defined within the DAV:limit element.
+            String offset = DomUtil.getChildTextTrim(limit, OFFSET, Namespace.EMPTY_NAMESPACE);
+            if (offset != null) {
+                try {
+                    sInfo.setOffset(Long.valueOf(offset));
+                } catch (NumberFormatException e) {
+                    log.error("'offset' cannot be parsed into a long -> ignore.");
+                }
+            }
+        }
+        return sInfo;

INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS42 INS38 INS42 INS38 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS65 INS65 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS41 INS65 INS65 INS39 INS42 INS21 INS25 INS60 INS60 INS25 INS41 INS34 INS34 INS66 INS66 INS42 INS66 INS42 INS66 INS7 INS66 INS66 INS42 INS66 INS42 INS66 INS7 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS22 INS42 INS22 INS42 INS27 INS27 INS60 INS25 INS25 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS60 INS25 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS7 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS21 INS42 MOV14 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS40 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS40 INS27 INS21 INS44 INS8 INS21 INS44 INS8 INS42 INS45 INS42 INS45 INS32 INS43 INS42 INS21 INS32 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 DEL41