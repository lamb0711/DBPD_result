work in progress

- Restore: pass NodeState(s) and Path instead of NodeId(s)
- LockManager: make sure lockmanager only remembers workspace states
- LockManager: make sure operations are executed using workspace states
- LockManager: improve isLocked/getLock/checkIsLocked and respect locks that
have been accessed before.
- VersionManager: make sure operations are executed using workspace states
- VersionManager: add checkIsCheckedOut
- VersionManager: force manager to have a WorkspaceManager
- NodeReferences:
  > make interface package protected
  > clarify method naming
  > add implementation to WorkspaceItemStateFactory
  > add NodeReferences field to NodeState
  > TO_IMPROVE: references are currently always retrieve from the SPI.
- ItemStateManager + NodeReferences
  > rename interfaces methods
  > change method signature to take NodeState instead of NodeId
  > 'getReferences' returns the property states directly

- remove some JR DIFFs. 

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@432234 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
-     * state manager does not maintain node reference.
-     * @see ItemStateManager#getNodeReferences(NodeId)
+     * state manager cannot not maintain node references.
+     *
+     * @param nodeState
+     * @throws UnsupportedOperationException
+     * @see ItemStateManager#getReferingStates(NodeState)
-    public NodeReferences getNodeReferences(NodeId id) {
+    public Collection getReferingStates(NodeState nodeState) {
-     * state manager does not maintain node reference.
-     * @see ItemStateManager#hasNodeReferences(NodeId)
+     * state manager cannot not maintain node references.
+     *
+     * @param nodeState
+     * @throws UnsupportedOperationException
+     * @see ItemStateManager#hasReferingStates(NodeState)
-    public boolean hasNodeReferences(NodeId id) {
+    public boolean hasReferingStates(NodeState nodeState) {
-         * {@inheritDoc}
+         * Always throws <code>UnsupportedOperationException</code>. Within the
+         * transient space node references cannot be managed.
+         *
+         * @param nodeState
+         * @throws UnsupportedOperationException
+         * @see ItemStateManager#getReferingStates(NodeState)
-        public NodeReferences getNodeReferences(NodeId id)
+        public Collection getReferingStates(NodeState nodeState)
-            throw new ItemStateException("getNodeReferences() not implemented");
+            throw new UnsupportedOperationException("getNodeReferences() not implemented");
-         * {@inheritDoc}
+         * Always throws <code>UnsupportedOperationException</code>. Within the
+         * transient space node references cannot be managed.
+         *
+         * @param nodeState
+         * @throws UnsupportedOperationException
+         * @see ItemStateManager#hasReferingStates(NodeState)
-        public boolean hasNodeReferences(NodeId id) {
+        public boolean hasReferingStates(NodeState nodeState) {
-            return false;
+            throw new UnsupportedOperationException("getNodeReferences() not implemented");

INS26 INS40 UPD43 UPD42 UPD42 INS65 INS65 UPD42 UPD43 UPD42 INS65 INS65 UPD43 UPD42 UPD43 UPD42 UPD42 UPD66 INS42 INS42 UPD42 UPD66 INS42 INS42 UPD42 INS65 INS65 INS65 INS65 UPD42 UPD43 UPD42 INS65 INS65 INS65 INS65 UPD43 UPD42 INS53 UPD42 UPD42 INS66 INS66 INS42 INS42 INS68 UPD42 INS66 INS66 INS42 INS42 INS68 UPD42 INS14 UPD43 UPD43 INS42 INS42 INS69 UPD43 INS42 INS42 INS69 INS43 INS45 UPD42 UPD42 INS43 UPD42 INS43 INS42 INS42 INS42 DEL65 DEL65 DEL65 DEL65 DEL9 DEL41