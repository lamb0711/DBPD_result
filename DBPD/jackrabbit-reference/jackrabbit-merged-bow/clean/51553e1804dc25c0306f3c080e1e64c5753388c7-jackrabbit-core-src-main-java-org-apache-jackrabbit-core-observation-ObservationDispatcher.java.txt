JCR-2746: Sleep in possibly endless loop in ObservationDispatcher

Move the sleep to the end of SessionState.perform() after all the relevant locks have been released

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1000950 13f79535-47bb-0310-9956-ffa450edef68

-        int size = eventQueueSize.addAndGet(events.size());
-        if (size > MAX_QUEUED_EVENTS) {
+        eventQueueSize.addAndGet(events.size());
+    }
+
+    /**
+     * Checks if the observation event queue contains more than the
+     * configured {@link #MAX_QUEUED_EVENTS maximum number of events},
+     * and delays the current thread in such cases. No delay is added
+     * if the current thread is the observation thread, for example if
+     * an observation listener writes to the repository.
+     * <p>
+     * This method should only be called outside the scope of internal
+     * repository access locks.
+     */
+    public void delayIfEventQueueOverloaded() {
+        if (eventQueueSize.get() > MAX_QUEUED_EVENTS) {
-                if (eventQueueSize.get() > MAX_QUEUED_EVENTS) {
-                    // slow down the current session
-                    // but not here, because locks are held
-                    // (that may block an observation listener, which is not what we want)
-                    events.getSession().delayNextOperation(notificationThread, 100);
+                try {
+                    Thread.sleep(100);
+                } catch (InterruptedException e) {
+                    log.warn("Interrupted while rate-limiting writes", e);

INS31 INS29 INS83 INS39 INS42 MOV8 INS21 INS65 INS25 MOV32 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 MOV27 INS8 INS67 INS66 MOV60 MOV60 MOV25 MOV25 INS42 INS54 INS8 INS12 MOV21 INS44 INS8 INS43 INS42 INS21 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS45 INS42 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL27 DEL25 DEL32 DEL42 DEL42 DEL8 DEL25