JCR-2003: JCR2SPI / SPI: Add support for JCR 2.0

- initial implementation for Node.setPrimaryType
   needs more careful testing in case of 
   > changing node definition
   > batch utilities present in spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@779227 13f79535-47bb-0310-9956-ffa450edef68

-    // -----------------------------------------------------< Empty >---
-
+    // -------------------------------------------------------------< Empty >---
-    // -----------------------------------------------------< AddNode >---
-
+    // -----------------------------------------------------------< AddNode >---
-    // -----------------------------------------------------< AddProperty >---
-
+    // -------------------------------------------------------< AddProperty >---
-    // -----------------------------------------------------< Move >---
-
+    // --------------------------------------------------------------< Move >---
-    // -----------------------------------------------------< Remove >---
-
+    // ------------------------------------------------------------< Remove >---
-    // -----------------------------------------------------< ReorderNodes >---
-
+    // ------------------------------------------------------< ReorderNodes >---
-    // -----------------------------------------------------< SetMixins >---
-
+    // ---------------------------------------------------------< SetMixins >---
-    // -----------------------------------------------------< SetValue >---
+    // ----------------------------------------------------< SetPrimaryType >---
+    /**
+     * Representative of a set-mixin {@link Operation} which calls
+     * {@link Batch#setMixins(NodeId, Name[])} when applied to a {@link Batch}.
+     */
+    public static class SetPrimaryType implements Operation {
+        protected final NodeId nodeId;
+        protected final Name primaryTypeName;
+        /**
+         * Create a new set-mixin {@link Operation} for the given arguments.
+         *
+         * @see Batch#setMixins(NodeId, Name[])
+         * @param nodeId
+         * @param primaryTypeName
+         */
+        public SetPrimaryType(NodeId nodeId, Name primaryTypeName) {
+            super();
+            this.nodeId = nodeId;
+            this.primaryTypeName = primaryTypeName;
+        }
+
+        /**
+         * {@inheritDoc}
+         */
+        public void apply(Batch batch) throws RepositoryException {
+            batch.setPrimaryType(nodeId, primaryTypeName);
+        }
+
+        public String toString() {
+            return "SetPrimaryType[" + nodeId + ", " + primaryTypeName + "]";
+        }
+
+        public boolean equals(Object other) {
+            if (null == other) {
+                return false;
+            }
+            if (this == other) {
+                return true;
+            }
+            if (other instanceof SetPrimaryType) {
+                return equals((SetPrimaryType) other);
+            }
+            return false;
+        }
+
+        public boolean equals(SetPrimaryType other) {
+            return Operations.equals(nodeId, other.nodeId)
+                && primaryTypeName.equals(other.primaryTypeName);
+        }
+
+        public int hashCode() {
+            return 41 * (
+                    41 + Operations.hashCode(nodeId))
+                    + Operations.hashCode(primaryTypeName);
+        }
+    }
+
+    /**
+     * Factory method for creating a set-primaryType {@link Operation} for the given arguments.
+     *
+     * @see Batch#setPrimaryType(NodeId, Name)
+     * @param nodeId
+     * @param primaryTypeName
+     * @return
+     */
+    public static Operation setPrimaryType(NodeId nodeId, Name primaryTypeName) {
+        return new SetPrimaryType(nodeId, primaryTypeName);
+    }
+
+    // ----------------------------------------------------------< SetValue >---
-    // -----------------------------------------------------< private >---
+    // -----------------------------------------------------------< private >---

INS83 INS83 INS42 INS55 INS31 INS29 MOV83 INS83 INS42 INS43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS42 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS29 INS83 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS65 INS43 INS42 INS42 INS21 INS42 INS41 INS43 INS42 INS25 INS25 INS25 INS41 INS43 INS42 INS41 INS41 INS66 INS65 INS66 INS68 INS42 INS42 INS42 INS42 INS14 INS42 INS68 INS42 INS66 INS65 INS66 INS68 INS42 INS42 INS42 INS42 INS7 INS7 INS65 INS42 INS32 INS27 INS42 INS27 INS8 INS27 INS8 INS62 INS8 INS9 INS42 INS27 INS27 INS42 INS42 INS42 INS69 INS69 INS43 INS42 INS42 INS42 INS42 INS69 INS69 INS42 INS42 INS42 INS69 INS69 INS22 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS33 INS42 INS41 INS52 INS42 INS41 INS42 INS43 INS41 INS32 INS32 INS27 INS32 INS43 INS43 INS42 INS43 INS5 INS43 INS5 INS52 INS42 INS52 INS42 INS9 INS9 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS34 INS36 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS43 INS85 INS42 INS11 INS27 INS42 INS42 INS43 INS42 INS34 INS32 INS42 INS42 INS42 INS42 DEL83 DEL42