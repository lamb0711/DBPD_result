JCR-1612: Reintroduce NamespaceStorage and namespace-caching

Preparing for NamespaceStorage by simplifying NamespaceRegistryImpl.

The safeRegisterNamespace method was only used by SearchManagerImpl,
so moved it to there as a private utility method.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@681088 13f79535-47bb-0310-9956-ffa450edef68

-     * Returns a prefix that is unique among the already registered prefixes.
-     *
-     * @param uriHint namespace uri that serves as hint for the prefix generation
-     * @return a unique prefix
-     */
-    public String getUniquePrefix(String uriHint) {
-        // @todo smarter unique prefix generation
-/*
-        int number;
-        if (uriHint == null || uriHint.length() == 0) {
-            number = prefixToURI.size() + 1;
-        } else {
-            number = uriHint.hashCode();
-        }
-        return "_pre" + number;
-*/
-        return "_pre" + (prefixToURI.size() + 1);
-    }
-
-    /**
-     * Registers a namespace using the given prefix hint. Does nothing
-     * if the namespace is already registered. If the given prefix hint
-     * is not yet registered as a prefix, then it is used as the prefix
-     * of the registered namespace. Otherwise a unique prefix is generated
-     * based on the given hint.
-     *
-     * @param prefixHint the prefix hint
-     * @param uri the namespace URI
-     * @throws NamespaceException if an illegal attempt is made to register
-     *                            a mapping
-     * @throws RepositoryException if an unexpected error occurs
-     * @see #registerNamespace(String, String)
-     */
-    public synchronized void safeRegisterNamespace(String prefixHint, String uri)
-            throws NamespaceException, RepositoryException {
-        try {
-            // Check if the namespace is already registered
-            getPrefix(uri);
-            // ... it is, so do nothing.
-        } catch (NamespaceException e1) {
-            // ... it is not, try to find a unique prefix.
-
-            // First, check and replace troublesome prefix hints.
-            if (prefixHint.toLowerCase().startsWith(Name.NS_XML_PREFIX)
-                    || !XMLChar.isValidNCName(prefixHint)) {
-                prefixHint = "_pre";
-            }
-
-            // Then, find an appropriate prefix based on the hint
-            String prefix = prefixHint;
-            try {
-                for (int suffix = 2; true; suffix++) {
-                    // Is this prefix already registered?
-                    getURI(prefix);
-                    // ... it is, generate a new prefix and try again.
-                    prefix = prefixHint + suffix;
-                }
-            } catch (NamespaceException e2) {
-                // ... it is not, register the namespace with this prefix.
-                registerNamespace(prefix, uri);
-            }
-        }
-    }
-
-    /**

DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL42 DEL32 DEL34 DEL27 DEL36 DEL27 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL9 DEL42 DEL37 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL27 DEL7 DEL21 DEL8 DEL24 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL12 DEL54 DEL8 DEL31