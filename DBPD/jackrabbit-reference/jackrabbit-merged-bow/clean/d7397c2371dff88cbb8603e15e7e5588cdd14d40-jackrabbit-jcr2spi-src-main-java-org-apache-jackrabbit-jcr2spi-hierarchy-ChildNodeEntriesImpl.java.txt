JCR-1819 : Add specific deep loading of Nodes and Properties
JCR-1843 : wrong status change upon conflicting removal (CacheBehaviour.OBSERVATION)
JCR-1293 : ReorderReferenceableSNSTest failure
JCR-1811 : ExportSysViewTest#testExportSysView_handler_session_saveBinary_occasionally failing


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@709211 13f79535-47bb-0310-9956-ffa450edef68

-import java.lang.ref.WeakReference;
+import java.lang.ref.WeakReference;
+     * @param childEntry
+     * @return The node entry that directly preceeds the given <code>childEntry</code>
+     * or <code>null</code> if the given <code>childEntry</code> is the first
+     * or was not found in this <code>ChildNodeEntries</code>.
+     */
+    NodeEntry getPrevious(NodeEntry childEntry) {
+        LinkedEntries.LinkNode ln = entries.getLinkNode(childEntry);
+        LinkedEntries.LinkNode prevLn = (ln == null) ? null : ln.getPreviousLinkNode();
+        return (prevLn == null) ? null : prevLn.getNodeEntry();
+    }
+
+    /**
-    
+
+     * @see ChildNodeEntries#reorderAfter(NodeEntry, NodeEntry)
+     */
+    public void reorderAfter(NodeEntry insertEntry, NodeEntry afterEntry) {
+        // the link node to move
+        LinkedEntries.LinkNode insertLN = entries.getLinkNode(insertEntry);
+        if (insertLN == null) {
+            throw new NoSuchElementException();
+        }
+        // the link node where insertLN is ordered before
+        LinkedEntries.LinkNode afterLN = (afterEntry != null) ? entries.getLinkNode(afterEntry) : null;
+        if (afterEntry != null && afterLN == null) {
+            throw new NoSuchElementException();
+        }
+
+        LinkedEntries.LinkNode previousLN = insertLN.getPreviousLinkNode();
+        if (previousLN != afterLN) {
+            reorderAfter(insertLN, afterLN);
+        } // else: already in correct position. nothing to do
+    }
+
+    /**
+
+            /**
+             * @return the next LinkNode.
+             */
+            public LinkedEntries.LinkNode getPreviousLinkNode() {
+                return (LinkedEntries.LinkNode) super.getPreviousNode();
+            }

MOV26 INS31 INS31 INS29 INS43 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS42 INS43 INS42 INS60 INS60 INS41 INS65 INS43 INS42 INS43 INS42 INS60 INS25 INS60 INS25 INS60 INS25 INS31 INS42 INS66 INS66 INS66 INS42 INS43 INS59 INS43 INS59 INS16 INS68 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS29 INS83 INS43 INS42 INS8 INS40 INS42 INS32 INS40 INS42 INS16 INS36 INS33 INS32 INS42 INS42 INS69 INS69 INS40 INS42 INS32 INS42 INS33 INS53 INS40 INS42 INS16 INS27 INS27 INS53 INS40 INS42 INS32 INS42 INS42 INS21 INS65 INS40 INS41 INS42 INS42 INS42 INS36 INS33 INS32 INS27 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS14 INS36 INS32 INS33 INS42 INS33 INS42 INS33 INS14 INS42 INS42 INS32 INS66 INS11 INS27 INS42 INS42 INS42 INS33 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS48 INS42 INS33 INS42 INS42 INS33 INS42 INS40 INS42