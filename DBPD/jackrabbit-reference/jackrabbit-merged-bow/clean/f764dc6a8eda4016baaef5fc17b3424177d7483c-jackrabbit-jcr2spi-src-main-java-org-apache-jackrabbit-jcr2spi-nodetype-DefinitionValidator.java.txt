JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816573 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
-    public Map validateNodeTypeDefs(Collection ntDefs, Map validatedDefs)
+    public Map<QNodeTypeDefinition, EffectiveNodeType> validateNodeTypeDefs(Collection<QNodeTypeDefinition> ntDefs,
+    															Map<Name, QNodeTypeDefinition> validatedDefs)
-        Map tmpMap = new HashMap(validatedDefs);
-        for (Iterator it = ntDefs.iterator(); it.hasNext();) {
-            QNodeTypeDefinition ntd = (QNodeTypeDefinition) it.next();
+        Map<Name, QNodeTypeDefinition> tmpMap = new HashMap<Name, QNodeTypeDefinition>(validatedDefs);
+        for (QNodeTypeDefinition ntd : ntDefs) {
-        Map ntMap = new HashMap();
-        ArrayList list = new ArrayList(ntDefs);
+        Map<QNodeTypeDefinition, EffectiveNodeType> ntMap = new HashMap<QNodeTypeDefinition, EffectiveNodeType>();
+        List<QNodeTypeDefinition> list = new ArrayList<QNodeTypeDefinition>(ntDefs);
-            Iterator iterator = list.iterator();
+            Iterator<QNodeTypeDefinition> iterator = list.iterator();
-                QNodeTypeDefinition ntd = (QNodeTypeDefinition) iterator.next();
+                QNodeTypeDefinition ntd = iterator.next();
-                Collection dependencies = ntd.getDependencies();
+                Collection<Name> dependencies = ntd.getDependencies();
-            Iterator iterator = list.iterator();
+            Iterator<QNodeTypeDefinition> iterator = list.iterator();
-                msg.append(((QNodeTypeDefinition) iterator.next()).getName());
+                msg.append(iterator.next().getName());
-    public EffectiveNodeType validateNodeTypeDef(QNodeTypeDefinition ntDef, Map validatedDefs)
+    public EffectiveNodeType validateNodeTypeDef(QNodeTypeDefinition ntDef, Map<Name, QNodeTypeDefinition> validatedDefs)
-            Stack inheritanceChain = new Stack();
+            Stack<Name> inheritanceChain = new Stack<Name>();
-                        Stack definingNTs = new Stack();
+                        Stack<Name> definingNTs = new Stack<Name>();
-    private void checkForCircularInheritance(Name[] supertypes, Stack inheritanceChain, Map ntdMap)
+    private void checkForCircularInheritance(Name[] supertypes, Stack<Name> inheritanceChain, Map<Name, QNodeTypeDefinition> ntdMap)
-                Name[] sta = ((QNodeTypeDefinition)ntdMap.get(stName)).getSupertypes();
+                Name[] sta = ntdMap.get(stName).getSupertypes();
-                                                  Stack definingParentNTs, Map ntdMap)
+                                                  Stack<Name> definingParentNTs, Map<Name, QNodeTypeDefinition> ntdMap)
-     *                             registered or if an unspecified error occured
+     *                             registered or if an unspecified error occurred

INS26 INS40 INS74 MOV43 MOV43 INS43 INS74 INS74 INS70 INS60 INS74 INS74 INS74 INS74 INS74 INS42 MOV43 INS43 MOV43 INS43 INS43 INS74 INS44 INS42 MOV8 INS74 MOV59 INS74 MOV43 INS43 INS43 MOV43 INS43 MOV43 INS43 INS43 MOV43 INS43 MOV43 INS43 INS43 UPD66 INS42 INS42 INS42 MOV43 INS43 INS43 MOV43 INS42 MOV43 MOV43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS74 UPD42 MOV42 INS42 INS74 INS74 INS74 INS74 MOV43 INS43 INS43 MOV43 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 MOV43 MOV43 INS43 INS42 INS42 INS42 INS42 INS42 MOV43 INS74 INS42 INS74 MOV32 MOV43 INS43 MOV43 INS43 INS42 MOV32 INS42 MOV32 INS74 MOV43 INS43 INS42 INS74 MOV43 INS43 INS42 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL60 DEL43 DEL11 DEL11 DEL36 DEL11 DEL36