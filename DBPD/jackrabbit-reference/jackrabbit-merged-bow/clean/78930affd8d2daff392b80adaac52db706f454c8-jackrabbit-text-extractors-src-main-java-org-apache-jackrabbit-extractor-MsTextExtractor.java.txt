JCR-1887: msoffice text extractor for office 2007 files

Replace the implementation with a Apache Tika from TIKA-1878. This way we won't get compile errors due to the Java 5 POI libraries.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@762808 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.poi.extractor.ExtractorFactory;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.Reader;
-import java.io.InputStream;
-import java.io.IOException;
-import java.io.StringReader;
-public class MsTextExtractor extends AbstractTextExtractor {
+public class MsTextExtractor extends TikaTextExtractor {
-    /**
-     * Logger instance.
-     */
-    private static final Logger logger =
-        LoggerFactory.getLogger(MsTextExtractor.class);
+    private static String[] TYPES = new String[] {
+        "application/vnd.ms-word", 
+        "application/msword",
+        "application/vnd.ms-powerpoint",
+        "application/mspowerpoint",
+        "application/vnd.ms-excel",
+        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
+        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
+        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
+    };
-    /**
-     * Force loading of dependent class.
-     */
-    static {
-        ExtractorFactory.class.getName();
-    }
-
-    /**
-     * Creates a new <code>MsWordTextExtractor</code> instance.
-     */
-    public MsTextExtractor() {
-        super(new String[]{"application/vnd.ms-word", 
-                           "application/msword",
-                           "application/vnd.ms-powerpoint",
-                           "application/mspowerpoint",
-                           "application/vnd.ms-excel",
-                           "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
-                           "application/vnd.openxmlformats-officedocument.presentationml.presentation",
-                           "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"});
-    }
-
-    //-------------------------------------------------------< TextExtractor >
-
-    /**
-     * {@inheritDoc}
-     * Returns an empty reader if an error occured extracting text from
-     * the word document.
-     */
-    public Reader extractText(InputStream stream,
-                              String type,
-                              String encoding) throws IOException {
-        try {
-            String text = ExtractorFactory.createExtractor(stream).getText();
-            return new StringReader(text);
-        } catch (Exception e) {
-            logger.warn("Failed to extract Microsoft Document text content", e);
-            return new StringReader("");
-        } finally {
-            stream.close();
-        }
+    public String[] getContentTypes() {
+        return TYPES;

UPD43 UPD42 INS5 INS5 INS42 INS8 MOV43 INS85 UPD42 MOV3 MOV43 INS85 MOV41 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL57 DEL42 DEL32 DEL21 DEL8 DEL28 DEL66 DEL65 DEL29 DEL83 DEL42 DEL46 DEL8 DEL31 DEL65 DEL66 DEL66 DEL65 DEL29 DEL42 DEL43 DEL45 DEL14 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8