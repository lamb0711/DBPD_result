JCR-2918 Avoid unnecessary index reader calls when using aggregate definitions

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1142919 13f79535-47bb-0310-9956-ffa450edef68

-        if (indexingConfig != null) {
-            AggregateRule[] aggregateRules = indexingConfig.getAggregateRules();
-            if (aggregateRules == null) {
-                return;
-            }
-            int found = 0;
-            long time = System.currentTimeMillis();
+        if(removedIds.isEmpty() || indexingConfig == null){
+            return;
+        }
+        AggregateRule[] aggregateRules = indexingConfig.getAggregateRules();
+        if (aggregateRules == null) {
+            return;
+        }
+        int found = 0;
+        long time = System.currentTimeMillis();
+        try {
+            CachingMultiIndexReader reader = index.getIndexReader();
-                CachingMultiIndexReader reader = index.getIndexReader();
+                Term aggregateIds =
+                    new Term(FieldNames.AGGREGATED_NODE_UUID, "");
+                TermDocs tDocs = reader.termDocs();
-                    Term aggregateIds =
-                        new Term(FieldNames.AGGREGATED_NODE_UUID, "");
-                    TermDocs tDocs = reader.termDocs();
-                    try {
-                        ItemStateManager ism = getContext().getItemStateManager();
-                        for (NodeId id : removedIds) {
-                            aggregateIds =
-                                aggregateIds.createTerm(id.toString());
-                            tDocs.seek(aggregateIds);
-                            while (tDocs.next()) {
-                                Document doc = reader.document(
-                                        tDocs.doc(), FieldSelectors.UUID);
-                                NodeId nId = new NodeId(doc.get(FieldNames.UUID));
-                                map.put(nId, (NodeState) ism.getItemState(nId));
-                                found++;
-                            }
+                    ItemStateManager ism = getContext().getItemStateManager();
+                    for (NodeId id : removedIds) {
+                        aggregateIds =
+                            aggregateIds.createTerm(id.toString());
+                        tDocs.seek(aggregateIds);
+                        while (tDocs.next()) {
+                            Document doc = reader.document(
+                                    tDocs.doc(), FieldSelectors.UUID);
+                            NodeId nId = new NodeId(doc.get(FieldNames.UUID));
+                            map.put(nId, (NodeState) ism.getItemState(nId));
+                            found++;
-                    } finally {
-                        tDocs.close();
-                    reader.release();
+                    tDocs.close();
-            } catch (Exception e) {
-                log.warn("Exception while retrieving aggregate roots", e);
+            } finally {
+                reader.release();
-            time = System.currentTimeMillis() - time;
-            log.debug("Retrieved {} aggregate roots in {} ms.", found, time);
+        } catch (Exception e) {
+            log.warn("Exception while retrieving aggregate roots", e);
+        time = System.currentTimeMillis() - time;
+        log.debug("Retrieved {} aggregate roots in {} ms.", found, time);

MOV8 INS25 INS27 INS8 INS32 INS27 INS41 INS42 INS42 INS42 INS33 DEL42 DEL33 DEL27 DEL25 DEL8