Clean up exceptions thrown by a remote repository to avoid deserialization problems.
(applying patch supplied by jukka)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@152652 13f79535-47bb-0310-9956-ffa450edef68

-        return factory.getRemoteSession(session.impersonate(credentials));
+        try {
+            return factory.getRemoteSession(session.impersonate(credentials));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return session.getNamespacePrefix(uri);
+        try {
+            return session.getNamespacePrefix(uri);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return session.getNamespacePrefixes();
+        try {
+            return session.getNamespacePrefixes();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return session.getNamespaceURI(prefix);
+        try {
+            return session.getNamespaceURI(prefix);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        session.setNamespacePrefix(prefix, uri);
+        try {
+            session.setNamespacePrefix(prefix, uri);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteNode(session.getNodeByUUID(uuid));
+        try {
+            return factory.getRemoteNode(session.getNodeByUUID(uuid));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return factory.getRemoteNode(session.getRootNode());
+        try {
+            return factory.getRemoteNode(session.getRootNode());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return getRemoteItem(session.getItem(path));
+        try {
+            return getRemoteItem(session.getItem(path));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        return session.hasPendingChanges();
+        try {
+            return session.hasPendingChanges();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        session.move(from, to);
+        try {
+            session.move(from, to);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        session.save();
+        try {
+            session.save();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        session.refresh(keepChanges);
+        try {
+            session.refresh(keepChanges);
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        session.importXML(path, new ByteArrayInputStream(xml));
+        try {
+            session.importXML(path, new ByteArrayInputStream(xml));
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        ByteArrayOutputStream buffer = new ByteArrayOutputStream();
-        session.exportDocView(path, buffer, binaryAsLink, noRecurse);
-        return buffer.toByteArray();
+        try {
+            ByteArrayOutputStream buffer = new ByteArrayOutputStream();
+            session.exportDocView(path, buffer, binaryAsLink, noRecurse);
+            return buffer.toByteArray();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
-        ByteArrayOutputStream buffer = new ByteArrayOutputStream();
-        session.exportSysView(path, buffer, binaryAsLink, noRecurse);
-        return buffer.toByteArray();
+        try {
+            ByteArrayOutputStream buffer = new ByteArrayOutputStream();
+            session.exportSysView(path, buffer, binaryAsLink, noRecurse);
+            return buffer.toByteArray();
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }

INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS8 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 INS54 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42