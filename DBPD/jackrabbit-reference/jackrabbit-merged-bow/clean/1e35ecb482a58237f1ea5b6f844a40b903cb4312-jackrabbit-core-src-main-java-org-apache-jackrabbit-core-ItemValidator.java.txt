JCR-2714: Selective disabling of checks in ItemValidator

Add ItemValidator.performRelaxed()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@985185 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.session.SessionOperation;
+     * A bit mask of the checks that are currently enabled. All access to
+     * this mask must be synchronized to ensure that only the thread that
+     * uses the {@link #performRelaxed(SessionOperation, int)} method will
+     * experience the effect of the relaxed set of checks.
+     */
+    private int enabledChecks = ~0;
+
+    /**
+     * Performs the given session operation with the specified checks disabled.
+     *
+     * @param operation the session operation to be performed
+     * @param checksToDisable bit mask of checks to be disabled
+     * @return return value of the session operation
+     * @throws RepositoryException if the operation could not be performed
+     */
+    public synchronized <T> T performRelaxed(
+            SessionOperation<T> operation, int checksToDisable)
+            throws RepositoryException {
+        int previousChecks = enabledChecks;
+        try {
+            enabledChecks &= ~checksToDisable;
+            log.debug("Performing {} with checks [{}] disabled",
+                    operation, Integer.toBinaryString(~enabledChecks));
+            return operation.perform(sessionContext);
+        } finally {
+            enabledChecks = previousChecks;
+        }
+    }
+
+    /**
-    public void checkModify(ItemImpl item, int options, int permissions) throws RepositoryException {
-        checkCondition(item, options, permissions, false);
+    public synchronized void checkModify(
+            ItemImpl item, int options, int permissions)
+            throws RepositoryException {
+        checkCondition(item, options & enabledChecks, permissions, false);
-    public void checkRemove(ItemImpl item, int options, int permissions) throws RepositoryException {
-        checkCondition(item, options, permissions, true);
+    public synchronized void checkRemove(
+            ItemImpl item, int options, int permissions)
+            throws RepositoryException {
+        checkCondition(item, options & enabledChecks, permissions, true);
-    public boolean canModify(ItemImpl item, int options, int permissions) throws RepositoryException {
-        return hasCondition(item, options, permissions, false);
+    public synchronized boolean canModify(
+            ItemImpl item, int options, int permissions)
+            throws RepositoryException {
+        return hasCondition(item, options & enabledChecks, permissions, false);

INS26 MOV31 INS40 INS23 INS31 INS29 INS83 INS39 INS59 INS29 INS83 INS83 INS73 INS43 INS42 INS44 INS44 INS43 INS8 INS83 UPD42 INS83 UPD42 INS83 INS65 INS42 INS38 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS74 INS42 INS39 INS42 INS42 INS60 INS54 INS66 INS66 INS66 INS65 INS66 INS66 INS34 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS43 INS43 INS39 INS59 INS8 INS8 INS68 INS42 INS42 INS42 INS42 INS21 INS21 INS41 INS21 INS27 UPD9 INS27 UPD9 INS27 INS42 INS69 INS69 INS7 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS39 INS42 INS38 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS42 DEL42 DEL42 DEL42