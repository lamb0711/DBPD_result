1/ Solve issue JCR-1025 (default namespace should be empty).
2/ Add more methods for removing node types. Unfortunatly Jackrabbit doesn't support it yet. 


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@556151 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
-    public void createNodeTypesFromList(Session session, List nodeTypes)
+    private void createNodeTypesFromList(Session session, List nodeTypes)
-    public void removeNodeTypes(Session session, InputStream[] mappingXmlFiles)
+    public void removeNodeTypesFromConfiguration(Session session, InputStream jcrRepositoryConfigurationFile)
+    	try
+        {
+            NodeTypeDef[] types = NodeTypeReader.read(jcrRepositoryConfigurationFile);
+
+            ArrayList list = new ArrayList();
+            for (int i = 0; i < types.length; i++)
+            {
+                list.add(types[i]);
+            }
+            
+            removeNodeTypesFromList(session, list);
+            log.info("Registered " + list.size() + " nodetypes from xml configuration file.");
+        }
+        catch (Exception e)
+        {
+            log.error("Could not create node types from configuration file.", e);
+            throw new NodeTypeRemovalException(e);
+        }
+    }
+    
+    private void removeNodeTypesFromList(Session session, List nodeTypes)
+    throws NodeTypeRemovalException
+    {
+        for (Iterator nodeTypeIterator = nodeTypes.iterator(); nodeTypeIterator.hasNext();) 
+        {
+			NodeTypeDef nodeTypeDef = (NodeTypeDef) nodeTypeIterator.next();
+			this.removeSingleNodeType(session, nodeTypeDef.getName());
+			
+		}
+    	
+    }
+
+    /**
+     * @see org.apache.jackrabbit.ocm.nodemanagement.NodeTypeManager#createSingleNodeTypeFromMappingFile
+     */     
+    public void removeNodeTypesFromMappingFile(Session session, InputStream[] mappingXmlFile)
+            throws NodeTypeRemovalException
+    {
+    }
+    
+    public void removeSingleNodeType(Session session, QName qName)
+    throws NodeTypeRemovalException
+    {
+        try
+        {
+            getNodeTypeRegistry(session).unregisterNodeType(qName);
+        }
+        catch (Exception e)
+        {
+            throw new NodeTypeRemovalException(e);
+        }      

INS26 INS40 INS31 INS31 INS31 UPD83 MOV29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 UPD42 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS42 INS54 INS43 INS42 INS43 INS42 INS42 INS24 INS65 UPD42 INS43 INS42 INS43 INS42 INS42 INS54 INS42 INS42 INS8 INS12 INS42 INS42 INS58 INS32 INS8 INS67 INS42 INS42 INS8 INS12 INS60 INS60 INS24 INS21 INS21 INS44 INS8 INS43 INS59 INS42 INS42 INS60 INS21 INS40 INS42 INS21 INS44 INS8 INS5 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS32 INS43 INS42 INS21 INS53 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS43 INS42 INS53 INS43 INS85 INS42 INS32 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS11 INS52 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS42 INS34 INS32 INS45 INS32 INS45 INS42 INS42 INS45 INS42 INS43 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42