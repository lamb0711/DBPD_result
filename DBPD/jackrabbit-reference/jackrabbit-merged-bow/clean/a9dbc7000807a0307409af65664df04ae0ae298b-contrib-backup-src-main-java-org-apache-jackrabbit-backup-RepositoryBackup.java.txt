JCR-442: Committed patch-060808-backup.txt from Nicolas.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429606 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayInputStream;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
+import java.io.ObjectInputStream;
+import java.util.HashMap;
+import java.util.zip.ZipException;
+import javax.jcr.NamespaceRegistry;
+import org.apache.jackrabbit.core.config.RepositoryConfig;
+import org.apache.jackrabbit.core.fs.BasedFileSystem;
+import org.apache.jackrabbit.core.fs.FileSystem;
+import org.apache.jackrabbit.core.fs.FileSystemException;
+import org.apache.jackrabbit.core.fs.FileSystemResource;
+import org.apache.jackrabbit.core.nodetype.InvalidNodeTypeDefException;
+import org.apache.jackrabbit.core.nodetype.NodeTypeDefStore;
+import org.apache.jackrabbit.core.nodetype.NodeTypeRegistry;
- 
+    private String repoConfFile;
+    private String home;
+
-     * @throws RepositoryException 
-     * @throws LoginException 
+     * @throws RepositoryException
+     * @throws LoginException
-    public RepositoryBackup(RepositoryImpl repo, BackupConfig conf) throws LoginException, RepositoryException {
-        super(repo, conf);
+    public RepositoryBackup(RepositoryImpl repo, BackupConfig conf, String login, String password) throws LoginException, RepositoryException {
+        super(repo, conf, login, password);
-    
+
+    public RepositoryBackup(String repoConfFile, String home) {
+        super();
+        this.repoConfFile = repoConfFile;
+        this.home = home;
+    }
-     * 
+     *
-     * @throws IOException 
-     * @throws RepositoryException 
-     * 
-     * 
+     * @throws IOException
+     * @throws RepositoryException
+     *
+     *
-        
-        File file = this.conf.getRepoConfFile();
+
+        File file = this.getConf().getRepoConfFile();
-        
-        //Properties
-        Properties p = new Properties();
-        String[] keys = repo.getDescriptorKeys();
-        for (int i = 0; i < keys.length; i++) {
-            p.setProperty(keys[i], repo.getDescriptor(keys[i]));
-        }
-        ByteArrayOutputStream bos = new ByteArrayOutputStream();
-        p.store(bos,"");
-        h.write("repository_properties", bos);
-        
-        // Root node ID
-        NodeImpl nod = (NodeImpl) this.getSession().getRootNode();
-        NodeId n = nod.getNodeId();
-        
-        //We persist the string as a serialized object to avoid compatibility issue
-        String s = n.toString();
-        ByteArrayOutputStream fos = new ByteArrayOutputStream();
-        ObjectOutputStream oos = new ObjectOutputStream(fos);
-        oos.writeObject(s);       
-        h.write("repository_rootNode", fos);
-    public void restore(BackupIOHandler h) {
-        // TODO Auto-generated method stub
-        
+    public void restore(BackupIOHandler h) throws ZipException, IOException, RepositoryException {
+
+       //Restore repository.xml
+       File f = new File(this.repoConfFile);
+       h.read("repository_xml", f);
+
+       // Launch the repository and launch it.
+       RepositoryConfig repoConf = RepositoryConfig.create(this.repoConfFile, this.home);
+       this.setRepo(RepositoryImpl.create(repoConf));
+       
+       
+//       this.getRepo().setNodeTypeRegistry(createNodeTypeRegistry(nsReg, new BasedFileSystem(this.getRepo().getStore()), "/nodetypes"));
+          /*
+           * 1. Create a NodeTypeRegistry specific for the restore (redefines only the load built in types path)
+           * 2. Update the NodeTypeRegistry in repo
+           */
+  
+       
-}
+
+}

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS44 INS44 INS83 INS42 INS44 INS44 INS8 MOV29 MOV83 MOV39 MOV42 MOV44 MOV43 MOV43 INS8 INS83 INS39 INS42 MOV44 INS43 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 MOV43 INS42 MOV43 INS42 INS46 INS21 INS21 MOV60 MOV21 INS42 INS42 INS42 MOV60 MOV21 MOV60 INS21 INS42 INS42 INS42 INS42 INS7 INS7 UPD43 UPD43 INS32 INS22 INS42 INS22 INS42 UPD42 UPD42 UPD42 UPD45 UPD42 UPD42 UPD42 INS32 INS52 INS42 INS32 INS52 INS42 INS52 INS42 INS32 UPD43 INS22 INS42 INS42 INS22 INS22 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS52 INS42 UPD42 INS52 INS42 INS52 INS42 INS52 INS42 DEL66 DEL66 DEL66 DEL66 DEL52 DEL42 DEL22 DEL42 DEL43 DEL52 DEL42 DEL32 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL45 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL8 DEL31