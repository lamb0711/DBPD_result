JCR-445: repository is locked by WorkspaceJanitor when another workspace is reindexing

adding some minor corrections

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@412769 13f79535-47bb-0310-9956-ffa450edef68

+            // workspace has already been initialized, we're done
-        // reset idle timestamp
-        wspInfo.setIdleTimestamp(0);
-                                                InputSource configTemplate)
+                                   InputSource configTemplate)
-                                                           String workspaceName)
+                                              String workspaceName)
-        markActive(ses);
+        onSessionCreated(ses);
+        // reset idle timestamp
+        wspInfo.setIdleTimestamp(0);
-                                                           String workspaceName)
+                                              String workspaceName)
-        markActive(ses);
+        onSessionCreated(ses);
+        // reset idle timestamp
+        wspInfo.setIdleTimestamp(0);
-     * Puts the given session to the list of active sessions and registers this
+     * Adds the given session to the list of active sessions and registers this
-    protected void markActive(SessionImpl session) {
+    protected void onSessionCreated(SessionImpl session) {
-        // wakeup eventual waiters
+
+        // wake up threads waiting on this instance's monitor (e.g. workspace janitor)
-         * lock that guards the init sequence
+         * lock that guards the initialization of this instance
-         * @return <code>true</code> if this info was initialized.
+         * @return <code>true</code> if this instance has been successfully
+         *         initialized, <code>false</code> if it is already initialized.
+         * @throws RepositoryException if an error occured during the initialization
+                    // already initialized, we're done
-                idleTimestamp = 0;
-         * disposes this workspaceinfo if it has been idle for more than
-         * <code>maxIdleTime</code> milliseconds.
+         * Disposes this <code>WorkspaceInfo</code> if it has been idle for more
+         * than <code>maxIdleTime</code> milliseconds.
-         * @param maxIdleTime
+         * @param maxIdleTime amount of time in mmilliseconds before an idle
+         *                    workspace is automatically shutdown.
-                if (getIdleTimestamp() == 0) {
+                if (idleTimestamp == 0) {
-                    if ((currentTS - getIdleTimestamp()) > maxIdleTime) {
+                    if ((currentTS - idleTimestamp) > maxIdleTime) {
-                        log.info("disposing workspace '" + getName() + "' that is idle for " + (currentTS - idleTimestamp));
+                        log.info("disposing workspace '" + getName()
+                                + "' which has been idle for "
+                                + (currentTS - idleTimestamp) + " ms");
+                    // nothing to dispose of, we're already done
+

UPD42 MOV21 INS21 INS32 UPD66 INS65 UPD42 UPD42 INS42 INS42 INS34 UPD66 UPD66 INS66 INS42 INS66 UPD66 UPD66 INS66 INS66 INS42 INS42 UPD45 INS45 DEL42 DEL34 DEL7 DEL21 DEL42 DEL32 DEL42 DEL32