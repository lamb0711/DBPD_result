JCR-442: Committed Nicolas' latest contrib/backup changes (patch-backup-060719.txt)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@423575 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.util.Collection;
-import org.apache.jackrabbit.core.RepositoryImpl;
-import org.apache.jackrabbit.core.config.ConfigurationParser;
-import org.apache.jackrabbit.core.config.RepositoryConfig;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import org.apache.jackrabbit.core.config.PersistenceManagerConfig;
- * The contained configuration information are: the home directory and name
- * of the repository, the access manager, file system and versioning
- * configuration, repository index configuration, the workspace directory,
- * the default workspace name, and the workspace configuration template. In
- * addition the workspace configuration object keeps track of all configured
- * workspaces.
+ * It will send different backup object, according to the expected type
+ * (ManagerBackup or WorkspaceBackup for instance).
+ *
-	
-	/** the default logger */
-    private static Logger log = LoggerFactory.getLogger(BackupConfig.class);
+    
+    private PersistenceManagerConfig pmc;
+    private File workFolder;
+    private Collection allResources;
+    private String xml;
+     * @throws IllegalAccessException 
+     * @throws InstantiationException 
+     * @throws ClassNotFoundException 
+     * @throws SizeException 
+     * @throws IOException 
-    public static BackupConfig create(String file, String home)
-            throws ConfigurationException {
+    public static BackupConfig create(String file)
+            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
-        return create(new InputSource(uri.toString()), home);
+        return create(new InputSource(uri.toString()));
+     * @throws IllegalAccessException 
+     * @throws InstantiationException 
+     * @throws ClassNotFoundException 
+     * @throws SizeException 
+     * @throws IOException 
-    public static BackupConfig create(URI uri, String home)
-            throws ConfigurationException {
-        return create(new InputSource(uri.toString()), home);
+    public static BackupConfig create(URI uri)
+            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
+        return create(new InputSource(uri.toString()));
+     * @throws IllegalAccessException 
+     * @throws InstantiationException 
+     * @throws ClassNotFoundException 
+     * @throws SizeException 
+     * @throws IOException 
-            throws ConfigurationException {
-        return create(new InputSource(input), home);
+            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
+        return create(new InputSource(input));
-     * home directory path will be used as the ${rep.home} parser variable.
+     * home directory workFolder will be used as the ${rep.home} parser variable.
-     * directories, etc.). The {@link ConfigurationParser} class should be
+     * directories, etc.). The {@link RepositoryConfigurationParser} class should be
+     * @throws IllegalAccessException 
+     * @throws InstantiationException 
+     * @throws ClassNotFoundException 
+     * @throws SizeException 
+     * @throws IOException 
-    public static BackupConfig create(InputSource xml, String home)
-            throws ConfigurationException {
-        Properties variables = new Properties();
-        variables.setProperty(
-                ConfigurationParser.REPOSITORY_HOME_VARIABLE, home);
-        ConfigurationParser parser = new ConfigurationParser(variables);
+    public static BackupConfig create(InputSource xml)
+            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
+        BackupConfigurationParser parser = new BackupConfigurationParser(new Properties());
-        // TODO: Fix this
-        // BackupConfig config = parser.parseBackupConfig(xml);
-        // config.init();
-        // return config;
-        return null;
+        BackupConfig config = parser.parseBackupConfig(xml);
+        
+        return config;
+    }
+    
+ 
+
+    //TODO see if path is really useful?
+    public BackupConfig(PersistenceManagerConfig pmc, File path, Collection allResources) throws IOException {
+        
+        //Logic application: not in the parser: this code has to be here
+        if (!(path.isDirectory() && path.canWrite())) {
+            throw new IOException();
+        }     
+        
+        this.pmc = pmc;
+        this.workFolder = path;
+        this.allResources = allResources;
-
-    public BackupConfig() {
-        // TODO Auto-generated constructor stub
+    public Collection getAllResources() {
+        return allResources;
+    public File getWorkFolder() {
+        return workFolder;
+    }
+
+    public PersistenceManagerConfig getPmc() {
+        return pmc;
+    }
+
+    /*
+     * Useful?
+     */
-    public void setRepo(RepositoryImpl impl) {
-        // TODO Auto-generated method stub
+    public String getXml() {
+        return xml;
+

MOV26 MOV26 UPD40 UPD40 UPD40 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 MOV83 INS43 INS59 UPD83 MOV83 UPD43 MOV43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 MOV29 MOV83 MOV83 MOV43 MOV42 MOV44 MOV43 INS43 INS43 INS43 INS43 INS43 INS8 INS83 INS42 MOV44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS43 INS42 INS43 INS42 UPD66 UPD66 INS42 INS42 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS42 UPD42 MOV42 INS42 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS42 UPD42 MOV42 INS42 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS42 INS42 MOV60 INS60 INS41 UPD43 UPD42 INS43 INS42 INS43 INS42 INS42 INS25 INS21 INS21 INS21 UPD42 MOV42 INS41 INS42 MOV41 INS42 INS41 UPD42 MOV42 INS41 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD43 MOV43 INS59 INS42 UPD42 INS42 INS42 INS38 INS8 INS7 INS7 INS7 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS14 INS42 INS32 INS36 INS53 INS22 INS42 INS22 INS42 INS22 INS42 INS43 MOV14 INS42 INS42 INS42 INS27 INS14 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS32 INS32 INS43 INS42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL42 DEL42 DEL57 DEL32 DEL59 DEL23 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL33 DEL42 DEL40 DEL32 DEL21 DEL43 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL8 DEL31 DEL42 DEL39 DEL42 DEL43 DEL42 DEL44