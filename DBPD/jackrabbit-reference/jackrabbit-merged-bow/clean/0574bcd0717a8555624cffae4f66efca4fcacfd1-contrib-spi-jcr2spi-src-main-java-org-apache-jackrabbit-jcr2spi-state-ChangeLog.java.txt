work in progress

- remove DIFF comment
- SessionISM should not handle workspace operations.
- SessionISM.getReferingStates not correct. add TODO
- fix ChangeLog.isSelfContained: retrieve list of all affected states
  from the list of operations and compare to states collected before.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@452512 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
-     */  
+     */
-        Iterator it = new IteratorChain(modifiedStates(), deletedStates());
-        while (it.hasNext()) {
-            ItemState transientState = (ItemState) it.next();
-            if (transientState.isNode()) {
-                NodeState nodeState = (NodeState) transientState;
-                Set dependentStates = new HashSet();
-                if (nodeState.hasOverlayedState()) {
-                    // TODO: oldParentState is overlayed state from workspace. do not use!
-                    NodeState oldParentState = nodeState.getOverlayedState().getParent();
-                    NodeState newParentState = nodeState.getParent();
-                    if (oldParentState != null) {
-                        if (newParentState == null) {
-                            // node has been removed, add old parent
-                            // to dependencies
-                            dependentStates.add(oldParentState);
-                        } else {
-                            if (!oldParentState.equals(newParentState)) {
-                                // node has been moved, add old and new parent
-                                // to dependencies
-                                dependentStates.add(oldParentState);
-                                dependentStates.add(newParentState);
-                            }
-                        }
-                    }
-                }
-                // removed child node entries
-                Iterator cneIt = nodeState.getRemovedChildNodeEntries().iterator();
-                while (cneIt.hasNext()) {
-                    ChildNodeEntry cne = (ChildNodeEntry) cneIt.next();
-                    dependentStates.add(cne.getNodeState());
-                }
-                // added child node entries
-                cneIt = nodeState.getAddedChildNodeEntries().iterator();
-                while (cneIt.hasNext()) {
-                    ChildNodeEntry cne = (ChildNodeEntry) cneIt.next();
-                    dependentStates.add(cne.getNodeState());
-                }
-                // now walk through dependencies and check whether they
-                // are within the scope of this save operation
-                Iterator depIt = dependentStates.iterator();
-                while (depIt.hasNext()) {
-                    NodeState dependantState = (NodeState) depIt.next();
-                    if (!affectedStates.contains(dependantState)) {
-                        // need to save the parent as well
-                        String msg = dependantState.getNodeId().toString() + " needs to be saved as well.";
-                        throw new ItemStateException(msg);
-                    }
-                }
+        // check if the affected states listed by the operations are all
+        // listed in the modified,deleted or added states collected by this
+        // changelog.
+        Iterator it = getOperations();
+        while (it.hasNext()) {
+            Operation op = (Operation) it.next();
+            Collection opStates = op.getAffectedItemStates();
+            if (!affectedStates.containsAll(opStates)) {
+                // need to save the parent as well
+                String msg = "ChangeLog is not self contained.";
+                throw new ItemStateException(msg);

INS26 INS40 MOV61 MOV32 INS32 MOV60 UPD42 MOV42 UPD43 UPD43 UPD42 UPD42 UPD42 INS42 INS32 UPD43 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 INS45 DEL42 DEL43 DEL42 DEL32 DEL32 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL27 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL61 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL61 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25 DEL8 DEL61