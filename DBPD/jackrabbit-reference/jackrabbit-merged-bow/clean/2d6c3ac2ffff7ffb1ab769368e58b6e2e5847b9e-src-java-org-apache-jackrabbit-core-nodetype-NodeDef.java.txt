- PropDef and NodeDef adaptions
- adjusting to 0.16.4

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@161308 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.Constants;
-import java.util.Arrays;
-
- * A <code>NodeDef</code> ...
+ * This interface define a ChilsNodeDefinition
-public class NodeDef extends ItemDef {
-
-    private QName defaultPrimaryType = null;
-    private QName[] requiredPrimaryTypes = new QName[]{Constants.NT_BASE};
-    private boolean allowsSameNameSiblings = false;
+public interface NodeDef extends ItemDef {
-     * Default constructor.
+     * Returns the nodedef id of this node def.
+     * @return the node def id.
-    public NodeDef() {
-    }
-
-    public boolean equals(Object obj) {
-        if (this == obj) {
-            return true;
-        }
-        if (obj instanceof NodeDef) {
-            NodeDef other = (NodeDef) obj;
-            return super.equals(obj)
-                    && Arrays.equals(requiredPrimaryTypes, other.requiredPrimaryTypes)
-                    && (defaultPrimaryType == null ? other.defaultPrimaryType == null : defaultPrimaryType.equals(other.defaultPrimaryType))
-                    && allowsSameNameSiblings == other.allowsSameNameSiblings;
-        }
-        return false;
-    }
+    public NodeDefId getId();
-     * @param defaultNodeType
+     * Returns the name of the default primary type.
+     * @return the name of the default primary type.
-    public void setDefaultPrimaryType(QName defaultNodeType) {
-        this.defaultPrimaryType = defaultNodeType;
-    }
+    public QName getDefaultPrimaryType();
-     * @param requiredPrimaryTypes
+     * Returns the array of names of the required primary types.
+     * @return the array of names of the required primary types.
-    public void setRequiredPrimaryTypes(QName[] requiredPrimaryTypes) {
-        if (requiredPrimaryTypes == null) {
-            throw new IllegalArgumentException("requiredPrimaryTypes can not be null");
-        }
-        this.requiredPrimaryTypes = requiredPrimaryTypes;
-    }
+    public QName[] getRequiredPrimaryTypes();
-     * @param allowsSameNameSiblings
+     * Returns the 'allowSameNameSiblings' flag.
+     * @return the 'allowSameNameSiblings' flag.
-    public void setAllowsSameNameSiblings(boolean allowsSameNameSiblings) {
-        this.allowsSameNameSiblings = allowsSameNameSiblings;
-    }
+    public boolean allowsSameNameSiblings();
-    /**
-     * @return
-     */
-    public QName getDefaultPrimaryType() {
-        return defaultPrimaryType;
-    }
-
-    /**
-     * @return
-     */
-    public QName[] getRequiredPrimaryTypes() {
-        return requiredPrimaryTypes;
-    }
-
-    /**
-     * @return
-     */
-    public boolean allowsSameNameSiblings() {
-        return allowsSameNameSiblings;
-    }
-
-    /**
-     * @return
-     */
-    public boolean definesNode() {
-        return true;
-    }

INS31 MOV29 MOV83 INS43 INS42 UPD66 INS65 UPD65 UPD42 MOV42 INS65 INS65 INS65 INS66 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL4 DEL3 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL42 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL48 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL33 DEL27 DEL40 DEL33 DEL27 DEL42 DEL42 DEL40 DEL32 DEL16 DEL36 DEL42 DEL40 DEL27 DEL27 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL41 DEL8 DEL42 DEL41 DEL8 DEL42 DEL41 DEL8 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31