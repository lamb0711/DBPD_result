JCR-2621 -  principalbased ACL editing fails if principalName differs from the authorizableID

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@941358 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.api.security.principal.PrincipalManager;
+import org.apache.jackrabbit.api.security.user.Authorizable;
+import org.apache.jackrabbit.api.security.user.UserManager;
- * <code>CombinedEditor</code>...
+ * <code>ACLEditor</code>...
-    private Principal getPrincipal(String pathToACNode) throws RepositoryException {
-        String name = getPrincipalName(pathToACNode);
-        PrincipalManager pMgr = session.getPrincipalManager();
-        return pMgr.getPrincipal(name);
+    /**
+     * Returns the principal for the given path or null.
+     *
+     * @param pathToACNode
+     * @return
+     * @throws RepositoryException
+     */
+    private Principal getPrincipal(final String pathToACNode) throws RepositoryException {
+        final String id = getPathName(pathToACNode);
+        UserManager uMgr = session.getUserManager();
+        Authorizable authorizable = uMgr.getAuthorizable(id);
+        if (authorizable == null) {
+            // human readable id in node name is different from the hashed id
+            // use workaround to retrieve the principal
+            if (pathToACNode.startsWith(acRootPath)) {
+                final String principalPath = pathToACNode.substring(acRootPath.length());
+                if (principalPath.indexOf('/', 1) > 0) {
+                    // safe to build an item based principal
+                    authorizable = uMgr.getAuthorizable(new ItemBasedPrincipal() {
+                        public String getPath() throws RepositoryException {
+                            return principalPath;
+                        }
+                        public String getName() {
+                            return Text.getName(principalPath);
+                        }
+                    });
+                } else {
+                    // principal name was just appended to the acRootPath prefix
+                    // see getPathToAcNode above -> try to retrieve principal by name.
+                    return session.getPrincipalManager().getPrincipal(Text.getName(principalPath));
+                }
+            } // else: path doesn't start with acRootPath -> return null.
+        }
+
+        return (authorizable == null) ? null : authorizable.getPrincipal();
-    private static String getPrincipalName(String pathToACNode) {
+    private static String getPathName(String pathToACNode) {
-            String principalName = getPrincipalName(acNode.getPath());
+            String principalName = getPathName(acNode.getPath());

MOV26 INS26 INS40 UPD40 INS29 UPD42 UPD66 INS65 INS65 INS65 INS65 INS83 INS60 INS25 INS41 INS66 INS42 INS42 INS83 INS43 UPD43 INS43 INS59 INS27 INS8 INS16 INS42 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS32 INS42 INS33 INS25 INS36 INS33 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS27 INS42 INS42 INS42 INS42 INS42 INS60 INS25 INS42 INS33 INS83 INS43 INS59 INS27 INS8 INS8 UPD42 INS42 INS42 INS32 INS32 INS34 INS21 INS41 INS42 INS42 INS32 INS42 INS42 INS13 INS34 INS7 INS32 INS42 INS42 INS42 INS32 MOV32 INS42 INS32 UPD42 MOV42 INS42 INS14 INS42 INS42 INS42 INS43 INS1 INS42 INS31 INS31 INS83 MOV43 INS42 INS43 INS8 INS83 INS43 INS42 INS8 INS42 INS41 INS42 INS41 INS42 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL41