JCR-EXT: Cleaning up and upgrading to 0.16.4.1 (work in progress, does not compile!)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@169146 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.ValueFactory;
- * General base class for implementing the JCR Session interface.
+ * Session base class.
-    /**
-     * The default constructor is protected to signify that this
-     * class needs to be subclassed to be of any real use.
-     */
+    /** Protected constructor. This class is only useful when extended. */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
-    public String getUserId() {
+    /** Not implemented. {@inheritDoc} */
+    public String getUserID() {
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-     * Calls
+     * Implemented by calling
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** {@inheritDoc} */
+    /**
+     * Implemented by calling <code>getRootNode()</code> or
+     * <code>getRootNode().getNode(absPath.substring(1))</code> depending
+     * on the given absolute path.
+     * {@inheritDoc}
+     */
-        throw new UnsupportedRepositoryOperationException();
+        if (absPath == null || !absPath.startsWith("/")) {
+            throw new IllegalArgumentException("Invalid path: " + absPath);
+        } else if (absPath.equals("/")) {
+            return getRootNode();
+        } else {
+            return getRootNode().getNode(absPath.substring(1));
+        }
-     * Calls <code>getItem(absPath)</code> and returns <code>true</code>
-     * if a {@link PathNotFoundException PathNotFoundException} is not thrown.
-     * Throws a {@link RuntimeException RuntimeException} if a general
-     * {@link RepositoryException RepositoryException} is thrown by getItem().
+     * Implemented by calling <code>getItem(absPath)</code> and returning
+     * <code>true</code> unless a
+     * {@link PathNotFoundException PathNotFoundException} is thrown.
-    public boolean itemExists(String absPath) {
+    public boolean itemExists(String absPath) throws RepositoryException {
-        } catch (RepositoryException e) {
-            throw new RuntimeException(e);
-    /** Unsupported repository operation.{@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
-    public ContentHandler getImportContentHandler(String parentAbsPath)
+    /** Not implemented. {@inheritDoc} */
+    public ContentHandler getImportContentHandler(
+            String parentAbsPath, int uuidBehaviour)
-     * Calls
+     * Implemented by calling
-    public void importXML(String parentAbsPath, InputStream in)
+    public void importXML(
+            String parentAbsPath, InputStream in, int uuidBehaviour)
-            ContentHandler handler = getImportContentHandler(parentAbsPath);
+            ContentHandler handler =
+                getImportContentHandler(parentAbsPath, uuidBehaviour);
-                    "Unable to deserialize a SAX stream: " + e.getMessage());
+                    "Unable to configure a SAX transformer: " + e.getMessage());
-    /** Unsupported repository operation. {@inheritDoc} */
-    public void exportSysView(String absPath, ContentHandler contentHandler,
+    /** Not implemented. {@inheritDoc} */
+    public void exportSystemView(
+            String absPath, ContentHandler contentHandler,
-     * Calls
+     * Implemented by calling
-    public void exportSysView(String absPath, OutputStream out,
+    public void exportSystemView(String absPath, OutputStream out,
-            exportDocView(absPath, serializer.asContentHandler(),
+            exportSystemView(
+                    absPath, serializer.asContentHandler(),
-                    "Unable to serialize a system view SAX stream: "
-                    + e.getMessage());
+                    "Unable to serialize a SAX stream: " + e.getMessage());
-    /** Unsupported repository operation. {@inheritDoc} */
-    public void exportDocView(String absPath, ContentHandler contentHandler,
+    /** Not implemented. {@inheritDoc} */
+    public void exportDocumentView(
+            String absPath, ContentHandler contentHandler,
-     * Calls
+     * Implemented by calling
-    public void exportDocView(String absPath, OutputStream out,
+    public void exportDocumentView(
+            String absPath, OutputStream out,
-            exportDocView(absPath, serializer.asContentHandler(),
+            exportDocumentView(
+                    absPath, serializer.asContentHandler(),
-                    "Unable to serialize a document view SAX stream: "
-                    + e.getMessage());
+                    "Unable to serialize a SAX stream: " + e.getMessage());
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported repository operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
-    /** Unsupported operation. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
+    /** Not implemented. {@inheritDoc} */
+    public ValueFactory getValueFactory()
+            throws UnsupportedRepositoryOperationException, RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    /** Always returns <code>true</code>. {@inheritDoc} */
+    public boolean isLive() {
+        return true;
+    }

INS26 MOV31 MOV31 MOV31 INS40 INS31 INS31 UPD42 INS29 INS83 MOV43 INS42 MOV44 MOV43 MOV43 INS8 MOV43 INS44 INS44 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 UPD42 INS43 INS43 INS29 INS83 INS39 INS42 INS8 UPD66 INS65 INS25 INS39 INS42 INS39 INS42 INS42 INS42 INS42 INS65 INS41 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS66 INS66 INS65 INS27 INS8 INS25 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS66 INS65 INS66 INS9 INS27 INS38 INS53 INS32 INS8 INS8 INS42 INS33 INS32 INS14 INS42 INS42 INS45 INS41 INS41 INS42 INS42 INS45 INS43 INS27 INS32 INS32 UPD42 UPD42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS34 UPD45 UPD45 UPD45 DEL66 DEL66 DEL42 DEL66 DEL65 DEL66 DEL42 DEL66 DEL65 DEL66 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12