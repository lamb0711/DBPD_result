JCR-1576  Remove RepositoryService exists()  
JCR-1577  Remove RepositoryService.getRootId()  
JCR-1405  SPI: Introduce NodeInfo.getChildInfos()  

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@654826 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.lock.LockException;
-import javax.jcr.version.VersionException;
-import javax.jcr.version.Version;
-import javax.jcr.nodetype.NoSuchNodeTypeException;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.RepositoryException;
-import javax.jcr.Credentials;
-import javax.jcr.UnsupportedRepositoryOperationException;
+import java.io.InputStream;
+import java.util.Iterator;
+import java.util.Map;
+
+import javax.jcr.Credentials;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.NoSuchWorkspaceException;
+import javax.jcr.ItemNotFoundException;
+import javax.jcr.LoginException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.ValueFormatException;
+import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.LoginException;
+import javax.jcr.PathNotFoundException;
+import javax.jcr.RepositoryException;
+import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.ValueFormatException;
+import javax.jcr.lock.LockException;
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.nodetype.NoSuchNodeTypeException;
-import java.util.Map;
-import java.util.Iterator;
-import java.io.InputStream;
+import javax.jcr.version.Version;
+import javax.jcr.version.VersionException;
-     * The <code>NodeId</code> of the root node may basically have two
-     * characteristics. If the root node can be identified with a unique ID the
-     * returned <code>NodeId</code> simply has a uniqueID part and the path
-     * part is <code>null</code>. If the root node cannot be identified with a
-     * unique ID the uniqueID part is <code>null</code> and the path part will be set
-     * to "/".
-     *
-     * @param sessionInfo
-     * @return The <code>NodeId</code> of the root <code>Node</code>.
-     * @throws javax.jcr.RepositoryException
-     */
-    public NodeId getRootId(SessionInfo sessionInfo) throws RepositoryException;
-
-    /**
-     * Returns <code>true</code> if an <code>Item</code> with the given
-     * <code>ItemId</code> exists. Note, that the implementation must be able to
-     * deal with the various formats of an <code>ItemId</code>. The caller might
-     * not be aware of the uniqueID part the ItemId may have.
-     *
-     * @param sessionInfo
-     * @param itemId
-     * @return true if the item with the given id exists.
-     * @throws javax.jcr.RepositoryException
-     * @see javax.jcr.Session#itemExists(String)
-     */
-    public boolean exists(SessionInfo sessionInfo, ItemId itemId) throws RepositoryException;
-
-    /**

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL66 DEL65 DEL40 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL66 DEL65 DEL40 DEL65 DEL40 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31