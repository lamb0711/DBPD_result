JCR-3282 Optimize usage of norms

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1308833 13f79535-47bb-0310-9956-ffa450edef68

-    protected static final float DEFAULT_BOOST = 1.0f;
+    protected static final float DEFAULT_BOOST = IndexingConfiguration.DEFAULT_BOOST;
+            boolean hasNorms = boost != DEFAULT_BOOST;
+            Field.Index indexType = hasNorms ? Field.Index.ANALYZED
+                    : Field.Index.ANALYZED_NO_NORMS;
-                    Field.Index.ANALYZED, Field.TermVector.NO);
+                    indexType, Field.TermVector.NO);
-                f = createFulltextField(internalValue, store, supportHighlighting);
+                f = createFulltextField(internalValue, store, supportHighlighting, hasNorms);
-     * @deprecated use {@link #createFulltextField(String, boolean, boolean)} instead.
+     * @deprecated use {@link #createFulltextField(String, boolean, boolean, boolean)} instead.
+     * 
+     * @param value the string value.
+     * @param store if the value of the field should be stored.
+     * @param withOffsets if a term vector with offsets should be stored.
+     * @return a lucene field.
+     * @deprecated use {@link #createFulltextField(String, boolean, boolean, boolean)} instead.
+     */
+    protected Field createFulltextField(String value,
+                                        boolean store,
+                                        boolean withOffsets) {
+        return createFulltextField(value, store, withOffsets, true);
+    }
+
+    /**
+     * Creates a fulltext field for the string <code>value</code>.
+     * @param withNorms if norm information should be added for this value
-                                        boolean withOffsets) {
+                                        boolean withOffsets,
+                                        boolean withNorms) {
+        Field.Index index;
+        if (withNorms) {
+            index = Field.Index.ANALYZED;
+        } else {
+            index = Field.Index.ANALYZED_NO_NORMS;
+        }
-                    Field.Index.ANALYZED, tv);
+                    index, tv);
-                    Field.Store.NO, Field.Index.ANALYZED, tv);
+                    Field.Store.NO, index, tv);

INS31 MOV29 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS29 INS44 INS40 INS65 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS60 INS25 INS66 INS65 INS66 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS43 INS59 INS42 INS8 INS8 INS60 INS60 INS68 INS42 INS42 INS42 INS42 INS9 INS40 INS42 INS21 INS21 INS39 INS59 INS43 INS59 MOV43 INS69 INS42 INS69 INS69 INS69 INS69 INS7 INS7 INS42 INS27 INS40 INS42 INS16 INS39 INS43 INS39 INS39 INS39 INS42 INS40 INS42 INS40 MOV43 INS42 MOV43 INS42 INS42 INS42 INS42 INS40 INS40 MOV43 INS42 INS42 INS42 DEL34 DEL40 DEL40 DEL40