JCR-3029: JcrRemotingServlet should interpolate system properties in the home init-param

Use the standard java.io.tmpdir location for temporary files when no explicit configuration is present.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1155403 13f79535-47bb-0310-9956-ffa450edef68

+import javax.servlet.ServletConfig;
-        // setup home directory
-        String paramHome = getServletConfig().getInitParameter(INIT_PARAM_HOME);
-        if (paramHome == null) {
-            log.debug("missing init-param " + INIT_PARAM_HOME + ". using default: 'jackrabbit'");
-            paramHome = "jackrabbit";
-        }
-        File home;
-        try {
-            home = new File(paramHome).getCanonicalFile();
-        } catch (IOException e) {
-            throw new ServletException(INIT_PARAM_HOME + " invalid." + e.toString());
-        }
-        home.mkdirs();
+        // Determine the configured location for temporary files used when
+        // processing file uploads. Since JCR-3029 the default is the
+        // standard java.io.tmpdir location, but the presence of explicit
+        // configuration parameters restores the original behavior.
+        File tmp = null;
+        ServletConfig config = getServletConfig();
+        String paramHome = config.getInitParameter(INIT_PARAM_HOME);
+        String paramTemp = config.getInitParameter(INIT_PARAM_TMP_DIRECTORY);
+        if (paramHome != null || paramTemp != null) {
+            if (paramHome == null) {
+                log.debug("Missing init-param " + INIT_PARAM_HOME
+                        + ". Using default: 'jackrabbit'");
+                paramHome = "jackrabbit";
+            } else if (paramTemp == null) {
+                log.debug("Missing init-param " + INIT_PARAM_TMP_DIRECTORY
+                        + ". Using default: 'tmp'");
+                paramTemp = "tmp";
+            }
-        String tmp = getServletConfig().getInitParameter(INIT_PARAM_TMP_DIRECTORY);
-        if (tmp == null) {
-            log.debug("No " + INIT_PARAM_TMP_DIRECTORY + " specified. using 'tmp'");
-            tmp = "tmp";
+            tmp = new File(paramHome, paramTemp);
+            try {
+                tmp = tmp.getCanonicalFile();
+                tmp.mkdirs();
+                log.debug("  temp-directory = " + tmp.getPath());
+            } catch (IOException e) {
+                log.warn("Invalid temporary directory " + tmp.getPath()
+                        + ", using system default instead", e);
+                tmp = null;
+            }
-        File tmpDirectory = new File(home, tmp);
-        tmpDirectory.mkdirs();
-        log.debug("  temp-directory = " + tmpDirectory.getPath());
-        getServletContext().setAttribute(ATTR_TMP_DIRECTORY, tmpDirectory);
+        getServletContext().setAttribute(ATTR_TMP_DIRECTORY, tmp);

INS26 INS40 INS60 INS60 INS60 INS25 MOV43 INS59 INS43 INS59 MOV43 INS59 INS27 INS8 INS42 INS33 INS42 INS42 MOV32 INS42 INS32 INS27 INS27 INS25 INS21 INS54 UPD42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS33 MOV27 MOV8 INS25 INS7 INS8 INS12 MOV27 MOV8 INS42 INS14 INS21 MOV21 MOV21 MOV44 INS8 UPD42 MOV43 INS42 UPD42 MOV42 INS7 INS21 INS21 INS42 INS32 UPD42 INS32 INS7 UPD45 UPD45 UPD42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS33 UPD45 UPD45 UPD42 INS45 INS32 INS45 INS42 INS42 DEL25 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL25 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60