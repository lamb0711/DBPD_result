JCR-3213: Speed up NodeIndexer.isIndexed() check

Simplify code by moving the isIndexed() check up the call chain.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1241418 13f79535-47bb-0310-9956-ffa450edef68

-            PropertyId id = new PropertyId(node.getNodeId(), propName);
-            try {
-                PropertyState propState = (PropertyState) stateProvider.getItemState(id);
+            if (isIndexed(propName)) {
+                PropertyId id = new PropertyId(node.getNodeId(), propName);
+                try {
+                    PropertyState propState =
+                            (PropertyState) stateProvider.getItemState(id);
-                // add each property to the _PROPERTIES_SET for searching
-                // beginning with V2
-                if (indexFormatVersion.getVersion() >= IndexFormatVersion.V2.getVersion()) {
-                    addPropertyName(doc, propState.getName());
-                }
+                    // add each property to the _PROPERTIES_SET for searching
+                    // beginning with V2
+                    if (indexFormatVersion.getVersion() >= IndexFormatVersion.V2.getVersion()) {
+                        addPropertyName(doc, propState.getName());
+                    }
-                InternalValue[] values = propState.getValues();
-                boolean isIndexed = isIndexed(propState.getName());
-                for (InternalValue value : values) {
-                    addValue(doc, value, propState.getName(), isIndexed);
+                    InternalValue[] values = propState.getValues();
+                    for (InternalValue value : values) {
+                        addValue(doc, value, propState.getName());
+                    }
+
+                    if (values.length > 1) {
+                        // real multi-valued
+                        addMVPName(doc, propState.getName());
+                    }
+                } catch (NoSuchItemStateException e) {
+                    throwRepositoryException(e);
+                } catch (ItemStateException e) {
+                    throwRepositoryException(e);
-                if (values.length > 1) {
-                    // real multi-valued
-                    addMVPName(doc, propState.getName());
-                }
-            } catch (NoSuchItemStateException e) {
-                throwRepositoryException(e);
-            } catch (ItemStateException e) {
-                throwRepositoryException(e);
-     * @param isIndexed  if the property should be added to the index
-    protected void addValue(Document doc, InternalValue value, Name name, boolean isIndexed) throws RepositoryException {
+    protected void addValue(Document doc, InternalValue value, Name name) throws RepositoryException {
-                if (isIndexed) {
-                    addBinaryValue(doc, fieldName, value);
-                }
+                addBinaryValue(doc, fieldName, value);
-                if (isIndexed) {
-                    addBooleanValue(doc, fieldName, value.getBoolean());
-                }
+                addBooleanValue(doc, fieldName, value.getBoolean());
-                if (isIndexed) {
-                    addCalendarValue(doc, fieldName, value.getDate());
-                }
+                addCalendarValue(doc, fieldName, value.getDate());
-                if (isIndexed) {
-                    addDoubleValue(doc, fieldName, value.getDouble());
-                }
+                addDoubleValue(doc, fieldName, value.getDouble());
-                if (isIndexed) {
-                    addLongValue(doc, fieldName, value.getLong());
-                }
+                addLongValue(doc, fieldName, value.getLong());
-                if (isIndexed) {
-                    addReferenceValue(doc, fieldName, value.getNodeId(), false);
-                }
+                addReferenceValue(doc, fieldName, value.getNodeId(), false);
-                if (isIndexed) {
-                    addReferenceValue(doc, fieldName, value.getNodeId(), true);
-                }
+                addReferenceValue(doc, fieldName, value.getNodeId(), true);
-                if (isIndexed) {
-                    addPathValue(doc, fieldName, value.getPath());
-                }
+                addPathValue(doc, fieldName, value.getPath());
-                if (isIndexed) {
-                    addURIValue(doc, fieldName, value.getURI());
-                }
+                addURIValue(doc, fieldName, value.getURI());
-                if (isIndexed) {
-                    // never fulltext index jcr:uuid String
-                    if (name.equals(NameConstants.JCR_UUID)) {
-                        addStringValue(doc, fieldName, value.getString(),
-                                false, false, DEFAULT_BOOST, true);
-                    } else {
-                        addStringValue(doc, fieldName, value.getString(),
-                                true, isIncludedInNodeIndex(name),
-                                getPropertyBoost(name), useInExcerpt(name));
-                    }
+                // never fulltext index jcr:uuid String
+                if (name.equals(NameConstants.JCR_UUID)) {
+                    addStringValue(doc, fieldName, value.getString(),
+                            false, false, DEFAULT_BOOST, true);
+                } else {
+                    addStringValue(doc, fieldName, value.getString(),
+                            true, isIncludedInNodeIndex(name),
+                            getPropertyBoost(name), useInExcerpt(name));
-                // jcr:primaryType and jcr:mixinTypes are required for correct
-                // node type resolution in queries
-                if (name.equals(NameConstants.JCR_PRIMARYTYPE)
-                        || name.equals(NameConstants.JCR_MIXINTYPES)
-                        || isIndexed) {
-                    addNameValue(doc, fieldName, value.getName());
-                }
+                addNameValue(doc, fieldName, value.getName());
-                if (isIndexed) {
-                    addDecimalValue(doc, fieldName, value.getDecimal());
-                }
+                addDecimalValue(doc, fieldName, value.getDecimal());
-        addValueProperty(doc, value, name, fieldName, isIndexed);
+        addValueProperty(doc, value, name, fieldName);
-     * @param isIndexed  
-     *            if the property should added to the index
-            Name name, String fieldName, boolean isIndexed) throws RepositoryException {
-
-        // skip this method if field is not indexed
-        if (!isIndexed) {
-            return;
-        }
-
+            Name name, String fieldName) throws RepositoryException {
-     * Returns <code>true</code> if the property with the given name should be
-     * indexed.
+     * Returns <code>true</code> if the property with the given name should
+     * be indexed. The default is to index all properties unless explicit
+     * indexing configuration is specified. The <code>jcr:primaryType</code>
+     * and <code>jcr:mixinTypes</code> properties are always indexed for
+     * correct node type resolution in queries.
-     * @return <code>true</code> if the property should be fulltext indexed;
+     * @return <code>true</code> if the property should be indexed;
-        if (indexingConfig == null) {
-            return true;
-        } else {
-            return indexingConfig.isIndexed(node, propertyName);
-        }
+        return indexingConfig == null
+                || propertyName.equals(NameConstants.JCR_PRIMARYTYPE)
+                || propertyName.equals(NameConstants.JCR_MIXINTYPES)
+                || indexingConfig.isIndexed(node, propertyName);

MOV41 INS8 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV25 MOV21 MOV21 UPD66 UPD66 INS66 INS66 INS66 UPD66 INS27 INS25 INS27 MOV32 INS32 MOV8 INS27 INS32 INS42 INS42 MOV27 INS32 INS42 INS42 INS40 INS42 INS42 INS40 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL66 DEL65 DEL39 DEL42 DEL44 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL27 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL42 DEL66 DEL66 DEL65 DEL39 DEL42 DEL44 DEL42 DEL38 DEL41 DEL8 DEL25 DEL9 DEL8 DEL41 DEL8 DEL25