Use namespace prefixes supplied with request to execute the query.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@483369 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.DavConstants;
+import org.w3c.dom.Attr;
+
+import java.util.Map;
+import java.util.HashMap;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.Set;
+import java.util.HashSet;
+    /**
+     * Set of namespace uri String which are ignored in the search request.
+     */
+    private static final Set IGNORED_NAMESPACES;
+
+    static {
+        Set s = new HashSet();
+        s.add(Namespace.XMLNS_NAMESPACE.getURI());
+        s.add(Namespace.XML_NAMESPACE.getURI());
+        s.add(DavConstants.NAMESPACE.getURI());
+        IGNORED_NAMESPACES = Collections.unmodifiableSet(s);
+    }
+
+    private final Map namespaces;
+
+    /**
+     * Create a new <code>SearchInfo</code> instance.
+     *
+     * @param language
+     * @param languageNamespace
+     * @param query
+     * @param namespaces the re-mapped namespaces. Key=prefix, value=uri.
+     */
+    public SearchInfo(String language, Namespace languageNamespace, String query, Map namespaces) {
+        this.language = language;
+        this.languageNamespace = languageNamespace;
+        this.query = query;
+        this.namespaces = Collections.unmodifiableMap(new HashMap(namespaces));
+    }
-        this.language = language;
-        this.languageNamespace = languageNamespace;
-        this.query = query;
+        this(language,  languageNamespace, query, Collections.EMPTY_MAP);
+     * Returns the namespaces that have been re-mapped by the user.
+     *
+     * @return map of namespace to prefix mappings. Key=prefix, value=uri.
+     */
+    public Map getNamespaces() {
+        return namespaces;
+    }
+
+    /**
+        for (Iterator it = namespaces.keySet().iterator(); it.hasNext(); ) {
+            String prefix = (String) it.next();
+            String uri = (String) namespaces.get(prefix);
+            DomUtil.setNamespaceAttribute(sRequestElem, prefix, uri);
+        }
+        Attr[] nsAttributes = DomUtil.getNamespaceAttributes(searchRequest);
+        Map namespaces = new HashMap();
+        for (int i = 0; i < nsAttributes.length; i++) {
+            // filter out xmlns namespace and DAV namespace
+            if (!IGNORED_NAMESPACES.contains(nsAttributes[i].getValue())) {
+                namespaces.put(nsAttributes[i].getLocalName(), nsAttributes[i].getValue());
+            }
+        }
-            return new SearchInfo(first.getLocalName(), DomUtil.getNamespace(first), DomUtil.getText(first));
+            return new SearchInfo(first.getLocalName(), DomUtil.getNamespace(first), DomUtil.getText(first), namespaces);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS28 INS23 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS8 INS83 INS83 INS43 INS59 INS29 INS44 MOV29 INS83 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS17 INS65 INS65 INS42 INS41 INS24 INS60 INS60 INS24 INS66 INS43 INS59 INS32 INS32 INS32 INS7 INS66 INS42 INS42 INS42 INS42 INS66 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS66 INS66 INS42 INS58 INS32 INS8 INS5 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS22 INS32 INS43 INS59 INS42 INS42 INS60 INS60 INS21 INS43 INS85 INS42 INS32 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS25 INS43 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS34 INS38 INS8 INS42 INS43 INS42 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS43 INS32 INS43 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS2 INS42 INS2 INS42 INS42 INS42 INS42 INS42