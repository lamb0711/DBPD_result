JCR-3005: Make it possible to get multiple nodes in one call via davex

Collect all results to a Map before serializing the JSON result inside the JsonWriter class

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1179541 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.Repository;
+import java.util.HashMap;
+import java.util.Map;
-    private boolean getSingle(Session session, String path, DavResourceLocator locator, PrintWriter webdavWriter, boolean isFirst, boolean withPath) throws IOException, RepositoryException {
-        try {
-            Item item = session.getItem(path);
-            JsonWriter writer = new JsonWriter(webdavWriter);
-            if (item.isNode()) {
-                if (!isFirst) {
-                    webdavWriter.write(',');
-                }
-                if (withPath) {
-                    webdavWriter.write("\"" + path + "\":");
-                }
-                int depth = ((WrappingLocator) locator).getDepth();
-                if (depth < BatchReadConfig.DEPTH_INFINITE) {
-                    depth = getDepth((Node) item);
-                }
-                writer.write((Node) item, depth);
-
-                return true;
-            } else {
-                return false;
-            }
-        } catch (PathNotFoundException ex) {
-            return false;
-        } 
-    }
-
-    
-            Session session, String[] getArgs, DavResourceLocator locator,
+            Session session, String[] paths, DavResourceLocator locator,
-        webdavResponse.setContentType("text/plain;charset=utf-8");
-        webdavResponse.setStatus(DavServletResponse.SC_OK);
-        PrintWriter webdavWriter = webdavResponse.getWriter();
-        Boolean isFirst = true;
-        webdavWriter.write("{\"nodes\": {");
-        String path = locator.getRepositoryPath();
-        if (getSingle(session, path, locator, webdavWriter, isFirst, true)) {
-            isFirst = false;
-        }
-
-        for (String getArg : getArgs) {
+        // Collect all requested nodes
+        Map<String, Node> nodes = new HashMap<String, Node>();
+        Node node = session.getNode(locator.getRepositoryPath());
+        nodes.put(node.getPath(), node);
+        for (String path : paths) {
-                if (!getArg.equals(path) && getSingle(session, getArg, locator, webdavWriter, isFirst, true)) {
-                    isFirst = false;
-                }
-            } catch (RepositoryException ex) {
-
+                nodes.put(path, session.getNode(path));
+            } catch (PathNotFoundException ignore) {
+                // skip a missing node
-        webdavWriter.write("}}");
+
+        int depth = ((WrappingLocator) locator).getDepth();
+        if (depth < BatchReadConfig.DEPTH_INFINITE) {
+            depth = getDepth(node);
+        }
+
+        webdavResponse.setContentType("text/plain;charset=utf-8");
+        webdavResponse.setStatus(DavServletResponse.SC_OK);
+        new JsonWriter(webdavResponse.getWriter()).write(nodes, depth);

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 UPD83 UPD39 UPD42 MOV44 MOV44 MOV44 MOV44 MOV43 MOV43 INS8 UPD42 INS60 MOV60 INS21 INS70 MOV60 MOV25 MOV21 MOV21 MOV21 INS74 INS59 MOV43 INS32 MOV44 INS42 INS8 INS43 MOV43 MOV43 INS42 INS14 UPD42 INS32 INS42 INS42 INS32 UPD42 MOV42 INS54 MOV14 INS42 UPD42 MOV42 INS74 INS42 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 INS8 MOV12 MOV32 INS43 MOV43 INS43 INS21 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 DEL9 DEL41 DEL42 DEL11 DEL42 DEL42 DEL42 DEL11 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL42 DEL38 DEL13 DEL32 DEL21 DEL8 DEL25 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL9 DEL41 DEL8 DEL9 DEL41 DEL8 DEL25 DEL8 DEL54 DEL8 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL70 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL31