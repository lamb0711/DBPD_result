JCR-3206 JSR-283 support for RMI / Implementation of the missing versioning parts

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1377571 13f79535-47bb-0310-9956-ffa450edef68

-//    void cancelMerge(String absPath, Version version)
-//        throws RepositoryException, RemoteException;
+    /**
+     * Remote version of the
+     * {@link javax.jcr.version.VersionManager#checkin(String) VersionManager.checkin(String)}
+     * method.
+     *
+     * @param absPath an absolute path.
+     * @return the created version.
+     * @throws RepositoryException on repository errors
+     * @throws RemoteException on RMI errors
+     */
+    RemoteVersion checkin(String absPath) throws RepositoryException, RemoteException;
-    RemoteVersion checkin(String absPath)
-        throws RepositoryException, RemoteException;
-
+    /**
+     * Remote version of the
+     * {@link javax.jcr.version.VersionManager#checkout(String) VersionManager.checkout(String)}
+     * method.
+     *
+     * @param absPath an absolute path.
+     * @throws RepositoryException on repository errors
+     * @throws RemoteException on RMI errors
+     */
-    RemoteVersion checkpoint(String absPath)
-        throws RepositoryException, RemoteException;
+    /**
+     * Remote version of the
+     * {@link javax.jcr.version.VersionManager#checkpoint(String) VersionManager.checkpoint(String)}
+     * method.
+     *
+     * @param absPath an absolute path.
+     * @return the created version.
+     * @throws RepositoryException on repository errors
+     * @throws RemoteException on RMI errors
+     */
+    RemoteVersion checkpoint(String absPath) throws RepositoryException, RemoteException;
-    RemoteNode createActivity(String title)
-        throws RepositoryException, RemoteException;
+    /**
+     * Remote version of the
+     * {@link javax.jcr.version.VersionManager#isCheckedOut(String) VersionManager.isCheckedOut(String)}
+     * method.
+     *
+     * @param absPath an absolute path.
+     * @return a boolean
+     * @throws RepositoryException on repository errors
+     * @throws RemoteException on RMI errors
+     */
+    boolean isCheckedOut(String absPath) throws RepositoryException, RemoteException;
-    RemoteNode createConfiguration(String absPath)
-        throws RepositoryException, RemoteException;
+    RemoteVersionHistory getVersionHistory(String absPath) throws RepositoryException, RemoteException;
-//    void doneMerge(String absPath, Version version)
-//        throws RepositoryException, RemoteException;
+    RemoteVersion getBaseVersion(String absPath) throws RepositoryException, RemoteException;
+
+    void restore(String[] versionIdentifiers, boolean removeExisting) throws RepositoryException, RemoteException;
+
+    void restore(String absPath, String versionName, boolean removeExisting) throws RepositoryException, RemoteException;
+
+    void restore(String versionIdentifier, boolean removeExisting) throws RepositoryException, RemoteException;
+
+    void restoreVI(String absPath, String versionIdentifier, boolean removeExisting) throws RepositoryException, RemoteException;
+
+    void restoreByLabel(String absPath, String versionLabel, boolean removeExisting) throws RepositoryException, RemoteException;
+
+    RemoteIterator merge(String absPath, String srcWorkspace, boolean bestEffort)
+            throws RepositoryException, RemoteException;
+
+    RemoteIterator merge(String absPath, String srcWorkspace, boolean bestEffort, boolean isShallow)
+            throws RepositoryException, RemoteException;
+
+    void doneMerge(String absPath, String versionIdentifier) throws RepositoryException, RemoteException;
+    
+    void cancelMerge(String absPath, String versionIdentifier) throws RepositoryException, RemoteException;
+
+    RemoteNode createConfiguration(String absPath) throws RepositoryException, RemoteException;
+
+    RemoteNode setActivity(String activityNodeIdentifier) throws RepositoryException, RemoteException;
-    RemoteVersion getBaseVersion(String absPath)
-        throws RepositoryException, RemoteException;
+    RemoteNode createActivity(String title) throws RepositoryException, RemoteException;
-    RemoteVersionHistory getVersionHistory(String absPath)
-        throws RepositoryException, RemoteException;
+    void removeActivity(String activityNodeIdentifier) throws RepositoryException, RemoteException;
-    boolean isCheckedOut(String absPath)
-        throws RepositoryException, RemoteException;
-
-//    NodeIterator merge(Node activityNode)
-//        throws RepositoryException, RemoteException;
-
-    RemoteIterator merge(
-        String absPath, String srcWorkspace, boolean bestEffort)
-        throws RepositoryException, RemoteException;
-
-    RemoteIterator merge(
-        String absPath, String srcWorkspace, boolean bestEffort,
-        boolean isShallow)
-        throws RepositoryException, RemoteException;
-
-//    void removeActivity(Node activityNode)
-//        throws RepositoryException, RemoteException;
-
-//    void restore(Version[] versions, boolean removeExisting)
-//        throws RepositoryException, RemoteException;
-
-//    void restore(Version version, boolean removeExisting)
-//        throws RepositoryException, RemoteException;
-
-    void restore(
-        String absPath, String versionName, boolean removeExisting)
-        throws RepositoryException, RemoteException;
-
-//    void restore(String absPath, Version version, boolean removeExisting)
-//        throws RepositoryException, RemoteException;
-
-    void restoreByLabel(
-        String absPath, String versionLabel, boolean removeExisting)
-        throws RepositoryException, RemoteException;
-
-//    Node setActivity(Node activity) throws RepositoryException, RemoteException;
+    RemoteIterator merge(String activityNodeIdentifier) throws RepositoryException, RemoteException;

MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS29 MOV43 INS42 INS29 INS44 INS43 INS43 INS29 MOV43 INS42 INS44 INS43 INS43 INS29 INS44 INS43 INS43 INS39 INS42 INS44 INS44 INS43 INS43 INS39 INS42 INS44 INS44 INS43 INS43 INS39 INS42 MOV44 INS44 INS44 INS43 INS43 INS39 INS42 MOV44 INS44 INS43 INS43 INS39 INS42 MOV44 INS44 INS43 INS43 INS43 INS42 INS44 MOV43 MOV43 INS39 INS42 INS44 MOV43 MOV43 INS43 INS42 INS44 MOV43 MOV43 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS5 INS42 INS39 INS42 INS42 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS66 INS65 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS68 INS66 INS68 INS66 INS68 INS66 INS68 INS66 INS42 INS40 INS42 INS69 INS40 INS42 INS69 INS40 INS42 INS69 INS40 INS42 INS69 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 DEL42 DEL42