JCR-1591: JSR 283: NodeType Management (WIP...)
JCR-2091: Searchability settings in PropertyDefinition (WIP...)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774397 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.query.qom.QueryObjectModelConstants;
+import java.util.ArrayList;
+import java.util.Arrays;
+    public static final String[] QUERYOPS = new String[]{"queryops", "qop"};
+    public static final String[] NOFULLTEXT = new String[]{"nofulltext", "nof"};
+    public static final String[] NOQUERYORDER = new String[]{"noqueryorder", "nqord"};
-    public static final String[] ATTRIBUTE = new String[]{"primary", "pri", "!",
-                                                          "autocreated", "aut", "a",
-                                                          "mandatory", "man", "m",
-                                                          "protected", "pro", "p",
-                                                          "multiple", "mul", "*",
-                                                          "copy", "Copy", "COPY",
-                                                          "version", "Version", "VERSION",
-                                                          "initialize", "Initialize", "INITIALIZE",
-                                                          "compute", "Compute", "COMPUTE",
-                                                          "ignore", "Ignore", "IGNORE",
-                                                          "abort", "Abort", "ABORT"};
+    public static final String[] ATTRIBUTE;
+    static {
+        ArrayList<String> attr = new ArrayList<String>();
+        attr.addAll(Arrays.asList(PRIMARY));
+        attr.addAll(Arrays.asList(AUTOCREATED));
+        attr.addAll(Arrays.asList(MANDATORY));
+        attr.addAll(Arrays.asList(PROTECTED));
+        attr.addAll(Arrays.asList(MULTIPLE));
+        attr.addAll(Arrays.asList(QUERYOPS));
+        attr.addAll(Arrays.asList(NOFULLTEXT));
+        attr.addAll(Arrays.asList(NOQUERYORDER));
+        attr.addAll(Arrays.asList(COPY));
+        attr.addAll(Arrays.asList(VERSION));
+        attr.addAll(Arrays.asList(INITIALIZE));
+        attr.addAll(Arrays.asList(COMPUTE));
+        attr.addAll(Arrays.asList(IGNORE));
+        attr.addAll(Arrays.asList(ABORT));
+        ATTRIBUTE = attr.toArray(new String[attr.size()]);
+    }
+
+    public static final String QUEROPS_EQUAL = "=";
+    public static final String QUEROPS_NOTEQUAL = "<>";
+    public static final String QUEROPS_LESSTHAN = "<";
+    public static final String QUEROPS_LESSTHANOREQUAL = "<=";
+    public static final String QUEROPS_GREATERTHAN = ">";
+    public static final String QUEROPS_GREATERTHANOREQUAL = ">=";
+    public static final String QUEROPS_LIKE = "LIKE";
+    public static final String[] WEAKREFERENCE = {"weakreference", "WeakReference", "WEAKREFERENCE"};
+    public static final String[] URI = {"uri", "Uri", "URI"};
+    public static final String[] DECIMAL = {"decimal", "Decimal", "DECIMAL"};

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS28 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 MOV83 MOV83 MOV83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 MOV5 INS59 INS83 INS8 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS43 INS85 INS42 INS3 INS43 INS85 INS42 INS3 INS43 INS85 INS42 INS3 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS42 INS5 INS4 INS42 INS5 INS4 INS42 MOV5 INS4 INS74 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS7 INS42 UPD45 MOV45 UPD45 MOV45 UPD45 MOV45 INS42 UPD45 MOV45 UPD45 MOV45 UPD45 MOV45 INS42 UPD45 MOV45 UPD45 MOV45 UPD45 MOV45 INS43 INS85 UPD45 MOV45 UPD45 MOV45 INS43 INS85 UPD45 MOV45 UPD45 MOV45 UPD45 MOV45 UPD45 MOV45 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS3 INS43 INS43 INS5 INS32 INS42 INS42 INS43 INS85 INS42 INS42 INS42 DEL42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL59 DEL23