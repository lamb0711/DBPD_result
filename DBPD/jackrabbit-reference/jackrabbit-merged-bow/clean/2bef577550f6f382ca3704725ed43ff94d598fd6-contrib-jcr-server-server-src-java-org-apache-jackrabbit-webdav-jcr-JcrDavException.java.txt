JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
+import org.apache.jackrabbit.webdav.DavConstants;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
-import javax.jcr.*;
-import javax.jcr.nodetype.*;
+import javax.jcr.AccessDeniedException;
+import javax.jcr.InvalidItemStateException;
+import javax.jcr.InvalidSerializedDataException;
+import javax.jcr.ItemExistsException;
+import javax.jcr.ItemNotFoundException;
+import javax.jcr.MergeException;
+import javax.jcr.NamespaceException;
+import javax.jcr.RepositoryException;
+import javax.jcr.ReferentialIntegrityException;
+import javax.jcr.NoSuchWorkspaceException;
+import javax.jcr.PathNotFoundException;
+import javax.jcr.LoginException;
+import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.ValueFormatException;
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.nodetype.NoSuchNodeTypeException;
+     * @return true
+     */
+    public boolean hasErrorCondition() {
+        return true;
+    }
+
+    /**
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
-    public Element getError() {
-        Element error = super.getError();
-        Element excep = new Element("exception", ItemResourceConstants.NAMESPACE);
-        excep.addContent(new Element("class", ItemResourceConstants.NAMESPACE).setText(exceptionClass.getName()));
-        excep.addContent(new Element("message", ItemResourceConstants.NAMESPACE).setText(getMessage()));
-        error.addContent(excep);
+    public Element toXml(Document document) {
+        Element error = DomUtil.createElement(document, XML_ERROR, DavConstants.NAMESPACE);
+        Element excep = DomUtil.createElement(document, "exception", ItemResourceConstants.NAMESPACE);
+        DomUtil.addChildElement(excep, "class", ItemResourceConstants.NAMESPACE, exceptionClass.getName());
+        DomUtil.addChildElement(excep, "message", ItemResourceConstants.NAMESPACE, getMessage());
+        error.appendChild(excep);
+

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS31 INS29 INS83 INS39 INS42 INS8 UPD42 INS44 INS8 INS65 INS41 INS65 INS65 INS43 INS42 INS60 MOV60 MOV21 MOV21 MOV21 MOV41 INS66 INS9 INS68 INS42 UPD42 MOV42 MOV43 MOV59 MOV43 INS40 INS42 INS69 INS32 INS32 UPD42 UPD42 INS42 INS45 INS40 MOV32 UPD42 UPD42 INS42 INS45 INS40 MOV32 UPD42 INS43 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS45 INS40 INS42 DEL42 DEL48 DEL42 DEL43 DEL42 DEL43 DEL45 DEL40 DEL14 DEL45 DEL40 DEL14 DEL42 DEL32 DEL45 DEL40 DEL14 DEL42 DEL32 DEL43 DEL60 DEL8