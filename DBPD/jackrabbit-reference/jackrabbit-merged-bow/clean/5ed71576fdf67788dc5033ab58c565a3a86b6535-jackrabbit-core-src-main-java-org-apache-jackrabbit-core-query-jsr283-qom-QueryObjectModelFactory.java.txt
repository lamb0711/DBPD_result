JCR-97: Improve Checkstyle conformance
    - Removed redundant access modifiers

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@615661 13f79535-47bb-0310-9956-ffa450edef68

-public interface QueryObjectModelFactory
-        extends QueryObjectModelConstants {
+public interface QueryObjectModelFactory extends QueryObjectModelConstants {
+
-    public QueryObjectModel createQuery
-            (Selector selector,
-             Constraint constraint,
-             Ordering[] orderings,
-             Column[] columns) throws InvalidQueryException, RepositoryException;
+    QueryObjectModel createQuery(
+            Selector selector, Constraint constraint,
+            Ordering[] orderings, Column[] columns)
+        throws InvalidQueryException, RepositoryException;
-    public QueryObjectModel createQuery
-            (Source source,
-             Constraint constraint,
-             Ordering[] orderings,
-             Column[] columns) throws InvalidQueryException, RepositoryException;
+    QueryObjectModel createQuery(
+            Source source, Constraint constraint,
+            Ordering[] orderings, Column[] columns)
+        throws InvalidQueryException, RepositoryException;
-    public Selector selector(String nodeTypeName)
-            throws InvalidQueryException, RepositoryException;
+    Selector selector(String nodeTypeName)
+        throws InvalidQueryException, RepositoryException;
-    public Selector selector(String nodeTypeName, String selectorName)
-            throws InvalidQueryException, RepositoryException;
+    Selector selector(String nodeTypeName, String selectorName)
+        throws InvalidQueryException, RepositoryException;
-     *                      <li>{@link org.apache.jackrabbit.core.query.jsr283.qom.QueryObjectModelConstants#JOIN_TYPE_INNER},</li>
-     *                      <li>{@link org.apache.jackrabbit.core.query.jsr283.qom.QueryObjectModelConstants#JOIN_TYPE_LEFT_OUTER},</li>
-     *                      <li>{@link org.apache.jackrabbit.core.query.jsr283.qom.QueryObjectModelConstants#JOIN_TYPE_RIGHT_OUTER}</li>
+     *                      <li>{@link QueryObjectModelConstants#JOIN_TYPE_INNER},</li>
+     *                      <li>{@link QueryObjectModelConstants#JOIN_TYPE_LEFT_OUTER},</li>
+     *                      <li>{@link QueryObjectModelConstants#JOIN_TYPE_RIGHT_OUTER}</li>
-    public Join join
-            (Source left,
-             Source right,
-             int joinType,
-             JoinCondition joinCondition) throws InvalidQueryException, RepositoryException;
+    Join join(
+            Source left, Source right,
+            int joinType, JoinCondition joinCondition)
+        throws InvalidQueryException, RepositoryException;
-    public EquiJoinCondition equiJoinCondition
-            (String selector1Name,
-             String property1Name,
-             String selector2Name,
-             String property2Name) throws InvalidQueryException, RepositoryException;
+    EquiJoinCondition equiJoinCondition(
+            String selector1Name, String property1Name,
+            String selector2Name, String property2Name)
+        throws InvalidQueryException, RepositoryException;
-    public SameNodeJoinCondition sameNodeJoinCondition
-            (String selector1Name,
-             String selector2Name) throws InvalidQueryException, RepositoryException;
+    SameNodeJoinCondition sameNodeJoinCondition(
+            String selector1Name, String selector2Name)
+        throws InvalidQueryException, RepositoryException;
-    public SameNodeJoinCondition sameNodeJoinCondition
-            (String selector1Name,
-             String selector2Name,
-             String selector2Path) throws InvalidQueryException, RepositoryException;
+    SameNodeJoinCondition sameNodeJoinCondition(
+            String selector1Name, String selector2Name, String selector2Path)
+        throws InvalidQueryException, RepositoryException;
-    public ChildNodeJoinCondition childNodeJoinCondition
-            (String childSelectorName,
-             String parentSelectorName) throws InvalidQueryException, RepositoryException;
+    ChildNodeJoinCondition childNodeJoinCondition(
+            String childSelectorName, String parentSelectorName)
+        throws InvalidQueryException, RepositoryException;
-    public DescendantNodeJoinCondition descendantNodeJoinCondition
-            (String descendantSelectorName,
-             String ancestorSelectorName) throws InvalidQueryException, RepositoryException;
+    DescendantNodeJoinCondition descendantNodeJoinCondition(
+            String descendantSelectorName, String ancestorSelectorName)
+        throws InvalidQueryException, RepositoryException;
-    public And and(Constraint constraint1, Constraint constraint2)
-            throws InvalidQueryException, RepositoryException;
+    And and(Constraint constraint1, Constraint constraint2)
+        throws InvalidQueryException, RepositoryException;
-    public Or or(Constraint constraint1, Constraint constraint2)
-            throws InvalidQueryException, RepositoryException;
+    Or or(Constraint constraint1, Constraint constraint2)
+        throws InvalidQueryException, RepositoryException;
-    public Not not(Constraint constraint)
-            throws InvalidQueryException, RepositoryException;
+    Not not(Constraint constraint)
+        throws InvalidQueryException, RepositoryException;
-    public Comparison comparison
-            (DynamicOperand operand1,
-             int operator,
-             StaticOperand operand2) throws InvalidQueryException, RepositoryException;
+    Comparison comparison(
+            DynamicOperand operand1, int operator, StaticOperand operand2)
+        throws InvalidQueryException, RepositoryException;
-    public PropertyExistence propertyExistence(String propertyName)
-            throws InvalidQueryException, RepositoryException;
+    PropertyExistence propertyExistence(String propertyName)
+        throws InvalidQueryException, RepositoryException;
-    public PropertyExistence propertyExistence
-            (String selectorName,
-             String propertyName) throws InvalidQueryException, RepositoryException;
+    PropertyExistence propertyExistence(
+            String selectorName, String propertyName)
+        throws InvalidQueryException, RepositoryException;
-    public FullTextSearch fullTextSearch
-            (String propertyName,
-             String fullTextSearchExpression) throws InvalidQueryException, RepositoryException;
+    FullTextSearch fullTextSearch(
+            String propertyName, String fullTextSearchExpression)
+        throws InvalidQueryException, RepositoryException;
-    public FullTextSearch fullTextSearch
-            (String selectorName,
-             String propertyName,
-             String fullTextSearchExpression) throws InvalidQueryException, RepositoryException;
+    FullTextSearch fullTextSearch(
+            String selectorName, String propertyName,
+            String fullTextSearchExpression)
+        throws InvalidQueryException, RepositoryException;
-    public SameNode sameNode(String path)
-            throws InvalidQueryException, RepositoryException;
+    SameNode sameNode(String path)
+        throws InvalidQueryException, RepositoryException;
-    public SameNode sameNode(String selectorName, String path)
-            throws InvalidQueryException, RepositoryException;
+    SameNode sameNode(String selectorName, String path)
+        throws InvalidQueryException, RepositoryException;
-    public ChildNode childNode(String path)
-            throws InvalidQueryException, RepositoryException;
+    ChildNode childNode(String path)
+        throws InvalidQueryException, RepositoryException;
-    public ChildNode childNode(String selectorName, String path)
-            throws InvalidQueryException, RepositoryException;
+    ChildNode childNode(String selectorName, String path)
+        throws InvalidQueryException, RepositoryException;
-    public DescendantNode descendantNode(String path)
-            throws InvalidQueryException, RepositoryException;
+    DescendantNode descendantNode(String path)
+        throws InvalidQueryException, RepositoryException;
-    public DescendantNode descendantNode(String selectorName, String path)
-            throws InvalidQueryException, RepositoryException;
+    DescendantNode descendantNode(String selectorName, String path)
+        throws InvalidQueryException, RepositoryException;
-    public PropertyValue propertyValue(String propertyName)
-            throws InvalidQueryException, RepositoryException;
+    PropertyValue propertyValue(String propertyName)
+        throws InvalidQueryException, RepositoryException;
-    public PropertyValue propertyValue(String selectorName, String propertyName)
-            throws InvalidQueryException, RepositoryException;
+    PropertyValue propertyValue(String selectorName, String propertyName)
+        throws InvalidQueryException, RepositoryException;
-    public Length length(PropertyValue propertyValue)
-            throws InvalidQueryException, RepositoryException;
+    Length length(PropertyValue propertyValue)
+        throws InvalidQueryException, RepositoryException;
-    public NodeName nodeName()
-            throws InvalidQueryException, RepositoryException;
+    NodeName nodeName() throws InvalidQueryException, RepositoryException;
-    public NodeName nodeName(String selectorName)
-            throws InvalidQueryException, RepositoryException;
+    NodeName nodeName(String selectorName)
+        throws InvalidQueryException, RepositoryException;
-    public NodeLocalName nodeLocalName()
-            throws InvalidQueryException, RepositoryException;
+    NodeLocalName nodeLocalName()
+        throws InvalidQueryException, RepositoryException;
-    public NodeLocalName nodeLocalName(String selectorName)
-            throws InvalidQueryException, RepositoryException;
+    NodeLocalName nodeLocalName(String selectorName)
+        throws InvalidQueryException, RepositoryException;
-    public FullTextSearchScore fullTextSearchScore()
-            throws InvalidQueryException, RepositoryException;
+    FullTextSearchScore fullTextSearchScore()
+        throws InvalidQueryException, RepositoryException;
-    public FullTextSearchScore fullTextSearchScore(String selectorName)
-            throws InvalidQueryException, RepositoryException;
+    FullTextSearchScore fullTextSearchScore(String selectorName)
+        throws InvalidQueryException, RepositoryException;
-    public LowerCase lowerCase(DynamicOperand operand)
-            throws InvalidQueryException, RepositoryException;
+    LowerCase lowerCase(DynamicOperand operand)
+        throws InvalidQueryException, RepositoryException;
-    public UpperCase upperCase(DynamicOperand operand)
-            throws InvalidQueryException, RepositoryException;
+    UpperCase upperCase(DynamicOperand operand)
+        throws InvalidQueryException, RepositoryException;
-    public BindVariableValue bindVariable(String bindVariableName)
-            throws InvalidQueryException, RepositoryException;
+    BindVariableValue bindVariable(String bindVariableName)
+        throws InvalidQueryException, RepositoryException;
-    public Literal literal(Value value)
-            throws InvalidQueryException, RepositoryException;
+    Literal literal(Value value)
+        throws InvalidQueryException, RepositoryException;
-    public Ordering ascending(DynamicOperand operand)
-            throws InvalidQueryException, RepositoryException;
+    Ordering ascending(DynamicOperand operand)
+        throws InvalidQueryException, RepositoryException;
-    public Ordering descending(DynamicOperand operand)
-            throws InvalidQueryException, RepositoryException;
+    Ordering descending(DynamicOperand operand)
+        throws InvalidQueryException, RepositoryException;
-    public Column column(String propertyName)
-            throws InvalidQueryException, RepositoryException;
+    Column column(String propertyName)
+        throws InvalidQueryException, RepositoryException;
-    public Column column(String propertyName, String columnName)
-            throws InvalidQueryException, RepositoryException;
+    Column column(String propertyName, String columnName)
+        throws InvalidQueryException, RepositoryException;
-    public Column column
-            (String selectorName,
-             String propertyName,
-             String columnName) throws InvalidQueryException, RepositoryException;
+    Column column(String selectorName, String propertyName, String columnName)
+        throws InvalidQueryException, RepositoryException;

INS42 INS42 INS42 DEL83 DEL83 DEL83 DEL83 DEL40 DEL40 DEL40 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83