JCR-2028: JSR 283 JCR Path

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@772659 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.conversion.IdentifierResolver;
-
+    //----------------------------------------------< NamespaceResolverImpl >---
+    /**
+     * NamespaceResolver implementation that uses a sessionInfo to determine
+     * namespace mappings either from cache or from the server.
+     */
+    //---------------------------------------------< IdentifierResolverImpl >---
+    private class IdentifierResolverImpl implements IdentifierResolver {
+
+        private final SessionInfo sessionInfo;
+        
+        private IdentifierResolverImpl(SessionInfo sessionInfo) {
+            this.sessionInfo = sessionInfo;
+        }
+
+        private Path buildPath(String uniqueID) throws RepositoryException {
+            String uri = uriResolver.getItemUri(getIdFactory().createNodeId(uniqueID), sessionInfo.getWorkspaceName(), sessionInfo);
+            return uriResolver.getQPath(uri, sessionInfo);
+        }
+
+        private Path resolvePath(String jcrPath) throws RepositoryException {
+            return ((SessionInfoImpl) sessionInfo).getNamePathResolver().getQPath(jcrPath);
+        }
+        
+        /**
+         * @inheritDoc
+         */
+        public Path getPath(String identifier) throws MalformedPathException {
+            try {
+                int pos = identifier.indexOf('/');
+                if (pos == -1) {
+                    // unique id identifier
+                    return buildPath(identifier);
+                } else if (pos == 0) {
+                    // jcr-path identifier
+                    return resolvePath(identifier);
+                } else {
+                    Path p1 = buildPath(identifier.substring(0, pos));
+                    Path p2 = resolvePath(identifier.substring(pos));
+                    return getPathFactory().create(p1, p2, true);
+                }
+            } catch (RepositoryException e) {
+                throw new MalformedPathException(identifier);
+            }
+        }
+
+        /**
+         * @inheritDoc
+         */
+        public void checkFormat(String identifier) throws MalformedPathException {
+            // cannot be determined. assume ok.
+        }
+    }
-            pResolver = new ParsingPathResolver(getPathFactory(), nResolver);
+            IdentifierResolver idResolver = new IdentifierResolverImpl(sessionInfo);
+            pResolver = new ParsingPathResolver(getPathFactory(), nResolver, idResolver);
+        public Path getQPath(String path, boolean normalizeIdentifier) throws MalformedPathException, IllegalNameException, NamespaceException {
+            return pResolver.getQPath(path, normalizeIdentifier);
+        }
+
+        /**
+         * @inheritDoc
+         */
+    /**
+     * Namespace Cache
+     */

INS26 INS40 INS55 INS29 INS83 INS42 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS65 INS42 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS43 INS8 INS65 INS66 INS66 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS42 INS60 INS41 INS42 INS43 INS42 INS42 INS41 INS65 INS42 INS43 INS42 INS42 INS54 INS65 INS43 INS42 INS42 INS60 INS65 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS42 INS41 INS66 INS42 INS7 INS42 INS43 INS59 INS32 INS42 INS32 INS42 INS8 INS12 INS42 INS43 INS59 INS42 INS32 INS22 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS60 INS25 INS44 INS8 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 INS32 INS42 INS36 INS42 INS39 INS59 INS27 INS8 INS25 INS43 INS42 INS53 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS11 INS42 INS32 INS42 INS38 INS41 INS27 INS8 INS8 INS42 INS14 INS42 INS42 INS43 INS42 INS42 INS42 INS13 INS34 INS32 INS42 INS34 INS41 INS60 INS60 INS41 INS43 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS9 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42