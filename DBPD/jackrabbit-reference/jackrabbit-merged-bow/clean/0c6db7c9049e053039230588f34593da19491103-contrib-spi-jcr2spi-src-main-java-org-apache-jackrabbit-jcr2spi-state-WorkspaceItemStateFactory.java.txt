work in progress

- remove 'add' and 'set' methods on NodeState/PropertyState, that were
  used for initialization and did not mark the state modified. this
  was confusing, since similar methods called 'markmodified'.
  replaced by an 'init' method.
- SessionISM: fix options for addMixin (should not check for protected)
- move validation of PropertyState from ItemStateValidator to state.
- add TODO: TransientISM must clean up operations upon status changes.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@453120 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.name.QName;
+import javax.jcr.ItemNotFoundException;
-        } catch (PathNotFoundException e) {
+        } catch (ItemNotFoundException e) {
-            // set mixin nodetypes
-            state.setMixinTypeNames(info.getMixins());
-
-            // references to child items
+            // child node entries
+            Set childNodeEntries = new HashSet();
-                state.addChildNodeEntry(childInfo.getQName(), childUUID);
+                childNodeEntries.add(new CNE(childInfo.getQName(), childUUID));
-            // references to properties
+            // names of child property entries
+            Set propNames = new HashSet();
-                state.addPropertyName(pId.getQName());
+                propNames.add(pId.getQName());
+            NodeReferences nodeRefs = null;
-                state.setNodeReferences(new NodeReferencesImpl(info.getId(), references));
+                nodeRefs = new NodeReferencesImpl(info.getId(), references);
+            state.init(info.getMixins(), childNodeEntries, propNames, nodeRefs);
+
-            state.setType(info.getType());
+
-            state.internalSetValues(qValues);
+            state.init(info.getType(), qValues);
+
+    //------------------------------------------------------< ChildNodeEntry >---
+    private class CNE implements ChildNodeEntry {
+
+        private final QName name;
+        private final String uuid;
+
+        private CNE(QName name, String uuid) {
+            this.name = name;
+            this.uuid = uuid;
+        }
+
+        public NodeId getId() {
+            throw new UnsupportedOperationException();
+        }
+
+        public QName getName() {
+            return name;
+        }
+
+        public String getUUID() {
+            return uuid;
+        }
+
+        public int getIndex() {
+            throw new UnsupportedOperationException();
+        }
+
+        public NodeState getNodeState() throws NoSuchItemStateException, ItemStateException {
+            throw new UnsupportedOperationException();
+        }
+
+        public boolean isAvailable() {
+            throw new UnsupportedOperationException();
+        }
+    }
+

INS26 INS26 INS40 INS40 INS55 INS83 INS42 INS43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS43 INS43 INS8 INS83 INS39 INS42 INS8 MOV21 MOV21 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS42 INS53 INS42 INS41 INS42 INS41 INS53 INS42 INS42 INS42 INS53 INS53 INS60 INS60 INS60 INS42 INS42 INS7 INS7 INS14 INS42 INS42 INS14 INS14 INS14 UPD43 INS43 INS59 INS43 INS59 INS43 INS59 MOV42 INS22 INS42 INS22 INS42 INS43 INS43 INS43 INS43 UPD42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS33 INS42 INS42 UPD42 INS42 UPD42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS7 INS42 UPD42 UPD42 INS14 INS42 UPD42 UPD42 INS42 MOV14 INS43 MOV32 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21