JCR-569: Added a few new methods in WorkspaceImporter to reduce duplication and to simplify too large/deep methods.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@477142 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.version.Version;
+    private final SessionImpl session;
+    private final VersionManager versionManager;
+        this.wsp = wsp;
+        this.session = (SessionImpl) wsp.getSession();
+        this.versionManager = session.getVersionManager();
+        this.ntReg = ntReg;
+        this.uuidBehavior = uuidBehavior;
-        SessionImpl ses = (SessionImpl) wsp.getSession();
-        itemOps = new BatchedItemOperations(wsp.getItemStateManager(),
-                ntReg, ses.getLockManager(), ses, wsp.getHierarchyManager(),
-                ses.getNamespaceResolver());
+        itemOps = new BatchedItemOperations(
+                wsp.getItemStateManager(), ntReg, session.getLockManager(),
+                session, wsp.getHierarchyManager(), session.getNamespaceResolver());
-        this.wsp = wsp;
-        this.ntReg = ntReg;
-        this.uuidBehavior = uuidBehavior;
-
-            PropDef def;
-            PropertyState prop;
-            SessionImpl session = (SessionImpl) wsp.getSession();
-            VersionManager vMgr = session.getVersionManager();
-            VersionHistory vh = vMgr.getVersionHistory(session, node);
-            if (vh == null) {
-                vh = vMgr.createVersionHistory(session, node);
+            VersionHistory history = versionManager.getVersionHistory(session, node);
+            if (history == null) {
+                history = versionManager.createVersionHistory(session, node);
+            Version rootVersion = history.getRootVersion();
-            if (!node.hasPropertyName(QName.JCR_VERSIONHISTORY)) {
-                def = itemOps.findApplicablePropertyDefinition(QName.JCR_VERSIONHISTORY,
-                        PropertyType.REFERENCE, false, node);
-                prop = itemOps.createPropertyState(node, QName.JCR_VERSIONHISTORY,
-                        PropertyType.REFERENCE, def);
-                prop.setValues(new InternalValue[]{InternalValue.create(new UUID(vh.getUUID()))});
-            }
+            conditionalAddProperty(
+                    node, QName.JCR_VERSIONHISTORY, PropertyType.REFERENCE, false,
+                    InternalValue.create(new UUID(history.getUUID())));
-            if (!node.hasPropertyName(QName.JCR_BASEVERSION)) {
-                def = itemOps.findApplicablePropertyDefinition(QName.JCR_BASEVERSION,
-                        PropertyType.REFERENCE, false, node);
-                prop = itemOps.createPropertyState(node, QName.JCR_BASEVERSION,
-                        PropertyType.REFERENCE, def);
-                prop.setValues(new InternalValue[]{InternalValue.create(new UUID(vh.getRootVersion().getUUID()))});
-            }
+            conditionalAddProperty(
+                    node, QName.JCR_BASEVERSION, PropertyType.REFERENCE, false,
+                    InternalValue.create(new UUID(rootVersion.getUUID())));
-            if (!node.hasPropertyName(QName.JCR_PREDECESSORS)) {
-                def = itemOps.findApplicablePropertyDefinition(QName.JCR_PREDECESSORS,
-                        PropertyType.REFERENCE, true, node);
-                prop = itemOps.createPropertyState(node, QName.JCR_PREDECESSORS,
-                        PropertyType.REFERENCE, def);
-                prop.setValues(new InternalValue[]{InternalValue.create(new UUID(vh.getRootVersion().getUUID()))});
-            }
+            conditionalAddProperty(
+                    node, QName.JCR_PREDECESSORS, PropertyType.REFERENCE, true,
+                    InternalValue.create(new UUID(rootVersion.getUUID())));
-            if (!node.hasPropertyName(QName.JCR_ISCHECKEDOUT)) {
-                def = itemOps.findApplicablePropertyDefinition(QName.JCR_ISCHECKEDOUT,
-                        PropertyType.BOOLEAN, false, node);
-                prop = itemOps.createPropertyState(node, QName.JCR_ISCHECKEDOUT,
-                        PropertyType.BOOLEAN, def);
-                prop.setValues(new InternalValue[]{InternalValue.create(true)});
-            }
+            conditionalAddProperty(
+                    node, QName.JCR_ISCHECKEDOUT, PropertyType.BOOLEAN, false,
+                    InternalValue.create(true));
+        }
+    }
+
+    /**
+     * Adds the the given property to a node unless the property already
+     * exists.
+     *
+     * @param node the node to which the property is added
+     * @param name name of the property
+     * @param type property type (see {@link PropertyType})
+     * @param multiple whether the property is multivalued
+     * @param value initial value of the property, if it needs to be added
+     * @throws RepositoryException if the property could not be added
+     */
+    private void conditionalAddProperty(
+            NodeState node, QName name, int type, boolean multiple,
+            InternalValue value)
+            throws RepositoryException {
+        if (!node.hasPropertyName(name)) {
+            PropDef def = itemOps.findApplicablePropertyDefinition(
+                    name, type, multiple, node);
+            PropertyState prop = itemOps.createPropertyState(
+                    node, name, type, def);
+            prop.setValues(new InternalValue[] { value });
-
-                    NodeDef def =
-                            itemOps.findApplicableNodeDefinition(nodeName, ntName, parent);
+                    NodeDef def = itemOps.findApplicableNodeDefinition(
+                            nodeName, ntName, parent);
-                        /**
-                         * a property with the same name already exists; if this property
-                         * has been imported as well (e.g. through document view import
-                         * where an element can have the same name as one of the attributes
-                         * of its parent element) we have to rename the onflicting property;
-                         *
-                         * see http://issues.apache.org/jira/browse/JCR-61
-                         */
-                        PropertyId propId = new PropertyId(parent.getNodeId(), nodeName);
-                        PropertyState conflicting = itemOps.getPropertyState(propId);
-                        if (conflicting.getStatus() == ItemState.STATUS_NEW) {
-                            // assume this property has been imported as well;
-                            // rename conflicting property
-                            // @todo use better reversible escaping scheme to create unique name
-                            QName newName = new QName(nodeName.getNamespaceURI(), nodeName.getLocalName() + "_");
-                            if (parent.hasPropertyName(newName)) {
-                                newName = new QName(newName.getNamespaceURI(), newName.getLocalName() + "_");
-                            }
-                            PropertyState newProp =
-                                    itemOps.createPropertyState(parent, newName,
-                                            conflicting.getType(), conflicting.getValues().length);
-                            newProp.setValues(conflicting.getValues());
-                            parent.removePropertyName(nodeName);
-                            itemOps.store(parent);
-                            itemOps.destroy(conflicting);
-                        }
+                        resolvePropertyNameConflict(parent, nodeName);
-                    NodeState conflicting;
-
-                        conflicting = itemOps.getNodeState(id);
-                    } catch (ItemNotFoundException infe) {
-                        conflicting = null;
-                    }
-                    if (conflicting != null) {
+                        NodeState conflicting = itemOps.getNodeState(id);
-                    } else {
+                    } catch (ItemNotFoundException e) {
-
-                        NodeDef def =
-                                itemOps.findApplicableNodeDefinition(nodeName, ntName, parent);
+                        NodeDef def = itemOps.findApplicableNodeDefinition(
+                                nodeName, ntName, parent);
+     * Resolves a conflict where a property with the same name as a node
+     * being imported already exists; if this property has been imported
+     * as well (e.g. through document view import where an element can have
+     * the same name as one of the attributes of its parent element) we have
+     * to rename the onflicting property.
+     *
+     * @see http://issues.apache.org/jira/browse/JCR-61
+     * @param parent parent node
+     * @param name name of the node being imported
+     * @throws RepositoryException
+     */
+    private void resolvePropertyNameConflict(NodeState parent, QName name)
+            throws RepositoryException {
+        PropertyId propId = new PropertyId(parent.getNodeId(), name);
+        PropertyState conflicting = itemOps.getPropertyState(propId);
+        if (conflicting.getStatus() == ItemState.STATUS_NEW) {
+            // assume this property has been imported as well;
+            // rename conflicting property
+            // @todo use better reversible escaping scheme to create unique name
+            QName newName = new QName(name.getNamespaceURI(), name.getLocalName() + "_");
+            while (parent.hasPropertyName(newName)) {
+                newName = new QName(newName.getNamespaceURI(), newName.getLocalName() + "_");
+            }
+            InternalValue[] values = conflicting.getValues();
+            PropertyState newProp = itemOps.createPropertyState(
+                    parent, newName, conflicting.getType(), values.length);
+            newProp.setValues(values);
+            parent.removePropertyName(name);
+            itemOps.store(parent);
+            itemOps.destroy(conflicting);
+        }
+    }
+
+    /**
+

INS26 INS40 INS23 INS23 INS31 INS31 INS31 INS83 INS83 MOV43 INS59 INS83 INS83 MOV43 INS59 MOV21 MOV21 MOV21 MOV29 INS83 INS39 INS42 MOV44 MOV43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 MOV8 MOV42 INS42 INS21 INS21 MOV60 INS25 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS42 MOV25 INS65 INS65 INS65 INS65 INS65 MOV43 INS42 MOV43 INS42 INS42 INS7 INS7 MOV32 INS8 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS22 MOV11 INS22 MOV32 MOV60 MOV25 INS60 INS21 INS21 INS21 INS21 INS42 INS60 INS60 MOV25 INS61 INS60 INS52 INS42 INS52 INS42 UPD42 INS43 INS59 INS32 INS32 INS32 INS32 INS42 MOV43 INS59 MOV43 INS59 MOV27 UPD42 MOV32 MOV8 MOV5 INS59 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 UPD42 MOV42 MOV42 MOV40 MOV40 INS9 INS32 UPD42 MOV42 INS42 MOV40 MOV40 MOV9 INS32 UPD42 MOV42 MOV42 UPD40 MOV40 MOV40 INS9 INS32 UPD42 MOV42 UPD42 MOV42 UPD40 MOV40 INS40 INS9 MOV32 INS42 INS32 INS42 INS32 INS42 MOV32 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV14 INS42 UPD42 MOV42 INS14 MOV42 MOV42 MOV14 MOV42 MOV42 INS42 INS42 INS42 MOV42 MOV42 MOV42 MOV42 INS42 INS42 MOV42 MOV5 MOV27 MOV8 INS8 INS43 INS40 UPD42 MOV43 MOV43 INS32 INS42 INS54 INS42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 INS8 MOV8 INS12 UPD42 INS21 INS60 MOV44 MOV8 INS32 INS43 INS59 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 DEL42 DEL59 DEL60 DEL42 DEL32 DEL40 DEL42 DEL40 DEL40 DEL9 DEL32 DEL7 DEL21 DEL42 DEL40 DEL40 DEL32 DEL7 DEL21 DEL83 DEL39 DEL42 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL40 DEL40 DEL9 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL32 DEL4 DEL3 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL32 DEL4 DEL3 DEL32 DEL21 DEL8 DEL25 DEL32 DEL38 DEL42 DEL42 DEL42 DEL40 DEL40 DEL9 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL32 DEL4 DEL3 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL8 DEL42 DEL33 DEL7 DEL21 DEL8 DEL12 DEL54 DEL42 DEL33 DEL27 DEL8 DEL25 DEL25 DEL42 DEL42 DEL32 DEL42 DEL22