JCR-193, JCR-216, JCR-203, JCR 184 + various minor fixes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@293331 13f79535-47bb-0310-9956-ffa450edef68

+     * Retrieves the last segment of the item path (or the resource path if
+     * this resource does not exist). An item path is in addition first translated
+     * to the corresponding resource path.<br>
+     * NOTE: the displayname is not equivalent to {@link Item#getName() item name}
+     * which is exposed with the {@link #JCR_NAME &#123;http://www.day.com/jcr/webdav/1.0&#125;name}
+     * property.
+     *
-        String name = null;
-        if (exists()) {
-            try {
-                name = item.getName();
-            } catch (RepositoryException e) {
-                // ignore: should not occure
-                log.warn(e.getMessage());
-            }
-        }
-        if (name == null && resPath != null) {
-            int pos = resPath.lastIndexOf('/');
-            if (pos>=0) {
-                name = resPath.substring(pos+1);
-            } else {
-                name = resPath;
-            }
-            // note: since index info is present only with existing resources
-            // there is no need to check for any '[index]' suffix.
-        }
-        return name;
+        return (resPath != null) ? Text.getName(resPath) : resPath;
+            String itemPath = getLocator().getJcrPath();
+            String destItemPath = destination.getLocator().getJcrPath();
-                getRepositorySession().getWorkspace().move(getResourcePath(), destination.getResourcePath());
+                getRepositorySession().getWorkspace().move(itemPath, destItemPath);
-                getRepositorySession().move(getResourcePath(), destination.getResourcePath());
+                getRepositorySession().move(itemPath, destItemPath);
+            String itemPath = getLocator().getJcrPath();
+            String destItemPath = destination.getLocator().getJcrPath();
-                workspace.copy(getResourcePath(), destination.getResourcePath());
+                workspace.copy(itemPath, destItemPath);
-                    String parentHref = getLocatorFromResourcePath(item.getParent().getPath()).getHref(true);
+                    String parentHref = getLocatorFromItem(item.getParent()).getHref(true);
-            workspaceHref = locator.getHref(isCollection());
-            if (locator.getResourcePath() != null) {
-                workspaceHref = workspaceHref.substring(workspaceHref.indexOf(locator.getResourcePath()));
-            }
+            DavResourceLocator wspLocator = locator.getFactory().createResourceLocator(locator.getPrefix(), locator.getWorkspacePath(), ItemResourceConstants.ROOT_ITEM_PATH);
+            workspaceHref = wspLocator.getHref(true);
-     * will try to persist any modifications prsent on the underlaying repository
-     * item.
+     * will try to persist any modifications present on the underlaying
+     * repository item.
-     * Build a new {@link DavResourceLocator} from the given repository item.
+     * Retrieves the last segment of the given path and removes the index if
+     * present.
-     * @param repositoryItem
-     * @return a new locator for the specified item.
-     * @see #getLocatorFromResourcePath(String)
+     * @param itemPath
+     * @return valid jcr item name
-    protected DavResourceLocator getLocatorFromItem(Item repositoryItem) {
-        String itemPath = null;
-        try {
-            if (repositoryItem != null) {
-                itemPath = repositoryItem.getPath();
-            }
-        } catch (RepositoryException e) {
-            // ignore: should not occur
-            log.warn(e.getMessage());
+    protected static String getItemName(String itemPath) {
+        if (itemPath == null) {
+            throw new IllegalArgumentException("Cannot retrieve name from a 'null' item path.");
-        return getLocatorFromResourcePath(itemPath);
+        // retrieve the last part of the path
+        String name = Text.getName(itemPath);
+        // remove index
+        if (name.endsWith("]")) {
+            name = name.substring(0, name.lastIndexOf('['));
+        }
+        return name;

INS29 INS83 INS42 INS8 INS83 UPD43 UPD42 INS65 MOV65 MOV60 INS41 UPD42 MOV43 INS42 INS25 INS60 INS25 MOV41 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS16 UPD66 UPD66 UPD66 UPD66 UPD42 UPD66 INS27 INS8 MOV43 INS59 INS32 INS8 INS68 INS66 INS67 INS66 INS36 INS32 INS42 INS60 INS60 INS60 INS60 INS60 MOV21 INS42 INS33 INS53 INS42 INS32 INS42 INS42 INS45 MOV21 INS42 INS42 INS42 MOV27 INS42 INS42 MOV42 MOV43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS14 UPD42 MOV42 INS42 UPD42 MOV42 INS7 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS43 INS45 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 MOV32 INS32 INS40 UPD42 MOV42 UPD42 MOV42 INS9 INS42 UPD42 MOV42 UPD42 MOV42 INS34 MOV32 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 INS42 MOV42 UPD42 MOV42 UPD42 UPD42 INS13 MOV32 MOV42 MOV32 UPD42 INS9 UPD42 DEL29 DEL83 DEL42 DEL42 DEL33 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL33 DEL27 DEL27 DEL39 DEL42 DEL42 DEL42 DEL13 DEL32 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL42 DEL34 DEL27 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL9 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL42 DEL32 DEL7 DEL21 DEL32 DEL33 DEL27 DEL8 DEL25 DEL42 DEL65 DEL42 DEL69 DEL68 DEL65 DEL42 DEL43 DEL42 DEL32 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL41