work in progress

- simplify mixin-validation
- throw exception if mixin to be added is not valid.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@453118 13f79535-47bb-0310-9956-ffa450edef68

-        QName[] mixinQNames = new QName[] {getQName(mixinName)};
+        QName mixinQName = getQName(mixinName);
-            isValidMixin(mixinQNames);
+            if (!isValidMixin(mixinQName)) {
+                throw new ConstraintViolationException("Cannot add '" + mixinName + "' mixin type.");
+            }
-        QName[] allMixins = new QName[currentMixins.length + mixinQNames.length];
+        QName[] allMixins = new QName[currentMixins.length + 1];
-        for (int i = 0; i < mixinQNames.length; i++) {
-            allMixins[currentMixins.length + i] = mixinQNames[i];
-        }
+        allMixins[currentMixins.length] = mixinQName;
-            return isValidMixin(new QName[] {getQName(mixinName)});
-        } catch (RepositoryException e) {
+            return isValidMixin(getQName(mixinName));
+        } catch (NoSuchNodeTypeException e) {
-    private boolean isValidMixin(QName[] mixinNames) throws RepositoryException, NodeTypeConflictException {
+    private boolean isValidMixin(QName mixinName) throws NoSuchNodeTypeException, NodeTypeConflictException {
-        for (int i = 0; i < mixinNames.length; i++) {
-            QName mixinName = mixinNames[i];
-            NodeType mixin = ntMgr.getNodeType(mixinName);
-            if (!mixin.isMixin()) {
-                log.error(mixin.getName() + ": not a mixin node type");
-                return false;
-            }
-            NodeTypeImpl primaryType = ntMgr.getNodeType(primaryTypeName);
-            if (primaryType.isNodeType(mixinName)) {
-                log.error(mixin.getName() + ": already contained in primary node type");
-                return false;
-            }
-            // check if adding new mixin conflicts with existing nodetypes
-            if (entExisting.includesNodeType(mixinName)) {
-                log.error(mixin.getName() + ": already contained in mixin types");
-                return false;
-            }
+        NodeType mixin = ntMgr.getNodeType(mixinName);
+        if (!mixin.isMixin()) {
+            log.error(mixin.getName() + ": not a mixin node type");
+            return false;
+        }
+        NodeTypeImpl primaryType = ntMgr.getNodeType(primaryTypeName);
+        if (primaryType.isNodeType(mixinName)) {
+            log.error(mixin.getName() + ": already contained in primary node type");
+            return false;
+        }
+        // check if adding new mixin conflicts with existing nodetypes
+        if (entExisting.includesNodeType(mixinName)) {
+            log.error(mixin.getName() + ": already contained in mixin types");
+            return false;
-        QName[] resultingNts = new QName[existingNts.length + mixinNames.length];
+        QName[] resultingNts = new QName[existingNts.length + 1];
-        System.arraycopy(mixinNames, 0, resultingNts, existingNts.length, mixinNames.length);
+        resultingNts[existingNts.length] = mixinName;

UPD43 MOV8 MOV60 MOV21 MOV43 UPD42 UPD42 MOV60 MOV60 MOV60 MOV21 INS21 MOV21 MOV41 INS43 MOV5 INS59 INS7 MOV42 UPD42 MOV32 INS25 INS42 INS42 INS3 INS2 INS42 INS38 INS8 INS40 UPD43 MOV5 INS27 INS42 INS40 INS32 INS53 INS34 MOV32 UPD42 INS40 INS34 MOV42 UPD42 MOV42 INS14 INS43 INS27 INS42 INS45 INS42 INS45 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3 DEL32 DEL21 DEL40 DEL40 DEL42 DEL27 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL2 DEL59 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL42 DEL40 DEL40 DEL27 DEL3 DEL59 DEL60 DEL42 DEL42 DEL42 DEL34 DEL42 DEL40 DEL40 DEL32 DEL21 DEL8