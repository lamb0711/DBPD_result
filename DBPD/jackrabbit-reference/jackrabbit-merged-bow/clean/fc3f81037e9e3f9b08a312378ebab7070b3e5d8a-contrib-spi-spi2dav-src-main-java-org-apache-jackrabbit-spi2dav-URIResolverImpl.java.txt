work in progress

- replace usage of UUID by uniqueID unless refering to 'jcr:uuid'
- PropertyImpl.checkValidReference: don't rely on Node-value to be NodeImpl
- spi.Event: getUUID() not used -> remove


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@483477 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.property.DavProperty;
-            String uuid = itemId.getUUID();
+            String uniqueID = itemId.getUniqueID();
-            if (uuid != null) {
-                ItemId uuidId = (path == null) ? itemId : service.getIdFactory().createNodeId(uuid);
+            if (uniqueID != null) {
+                ItemId uuidId = (path == null) ? itemId : service.getIdFactory().createNodeId(uniqueID);
-                    rInfo.setContentElement(DomUtil.hrefToXml(uuid, domFactory));
+                    rInfo.setContentElement(DomUtil.hrefToXml(uniqueID, domFactory));
-                            throw new ItemNotFoundException("Cannot identify item with uuid " + uuid);
+                            throw new ItemNotFoundException("Cannot identify item with uniqueID " + uniqueID);
-        String uuid = getUUID(propSet);
-        if (uuid != null) {
-            nodeId = service.getIdFactory().createNodeId(uuid);
+        String uniqueID = service.getUniqueID(propSet);
+        if (uniqueID != null) {
+            nodeId = service.getIdFactory().createNodeId(uniqueID);
-            QName qName = getQName(propSet);
+            QName qName = service.getQName(propSet);
-                int index = getIndex(propSet);
+                int index = service.getIndex(propSet);
-    String getUUID(DavPropertySet propSet) {
-        if (propSet.contains(ItemResourceConstants.JCR_UUID)) {
-            return propSet.get(ItemResourceConstants.JCR_UUID).getValue().toString();
-        } else {
-            return null;
-        }
-    }
-
-    QName getQName(DavPropertySet propSet) throws RepositoryException {
-        DavProperty nameProp = propSet.get(ItemResourceConstants.JCR_NAME);
-        if (nameProp != null && nameProp.getValue() != null) {
-            // not root node. Note that 'unespacing' is not required since
-            // the jcr:name property does not provide the value in escaped form.
-            String jcrName = nameProp.getValue().toString();
-            try {
-                return NameFormat.parse(jcrName, nsResolver);
-            } catch (NameException e) {
-                throw new RepositoryException(e);
-            }
-        } else {
-            return QName.ROOT;
-        }
-    }
-
-    int getIndex(DavPropertySet propSet) {
-        int index = Path.INDEX_UNDEFINED;
-        DavProperty indexProp = propSet.get(ItemResourceConstants.JCR_INDEX);
-        if (indexProp != null && indexProp.getValue() != null) {
-            index = Integer.parseInt(indexProp.getValue().toString());
-        }
-        return index;
-    }
-

UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD45 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL33 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL40 DEL41 DEL8 DEL25 DEL8 DEL31 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL40 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31