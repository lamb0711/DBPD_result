JCR-3115: Versioning fixup leaves persistence in a state where the node can't be made versionable again

Modify checker to also inspect "candidate" version histories (additional test case)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1187345 13f79535-47bb-0310-9956-ffa450edef68

-            // add nodes /test and /test/missing
-            
+            // get a fresh session
+            s.logout();
+            s = openSession(rep, false);
+
+    // similar to above, but disconnects version history before damaging the repository
+    public void testMissingRootVersion2() throws Exception {
+
+        // new repository
+        TransientRepository rep = new TransientRepository(new File(TEST_DIR));
+        Session s = openSession(rep, false);
+
+        String oldVersionRecoveryProp = System
+                .getProperty("org.apache.jackrabbit.version.recovery");
+
+        try {
+            Node root = s.getRootNode();
+
+            // add nodes /test and /test/missing
+            Node test = root.addNode("test");
+            test.addMixin("mix:versionable");
+
+            s.save();
+
+            Node vhr = s.getWorkspace().getVersionManager()
+                    .getVersionHistory(test.getPath());
+
+            assertNotNull(vhr);
+
+            Node brokenNode = vhr.getNode("jcr:rootVersion");
+            String vhrId = vhr.getIdentifier();
+            
+            UUID destroy = UUID.fromString(brokenNode.getIdentifier());
+
+            // disable versioning
+            test.removeMixin("mix:versionable");
+            s.save();
+            
+            s.logout();
+            
+            
+            destroyBundle(destroy, "version");
+
+            s = openSession(rep, false);
+
+            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false);
+            assertTrue("Report should have reported broken nodes", !report.getItems().isEmpty());
+            
+            s.logout();
+
+            System.setProperty("org.apache.jackrabbit.version.recovery", "true");
+
+            s = openSession(rep, false);
+            s.logout();
+
+            s = openSession(rep, false);
+
+            test = s.getRootNode().getNode("test");
+            // versioning should still be disabled
+            assertFalse(test.isNodeType("mix:versionable"));
+            
+            // try to enable versioning again
+            test.addMixin("mix:versionable");
+            s.save();
+
+            Node oldVHR = s.getNodeByIdentifier(vhrId);
+            Node newVHR = s.getWorkspace().getVersionManager().getVersionHistory(test.getPath());
+
+            assertTrue("old and new version history path should be different: "
+                    + oldVHR.getPath() + " vs " + newVHR.getPath(), !oldVHR
+                    .getPath().equals(newVHR.getPath()));
+
+            // name should be same plus suffix
+            assertTrue(oldVHR.getName().startsWith(newVHR.getName()));
+            
+            // try a checkout / checkin
+            s.getWorkspace().getVersionManager().checkout(test.getPath());
+            s.getWorkspace().getVersionManager().checkin(test.getPath());
+        } finally {
+            s.logout();
+            System.setProperty("org.apache.jackrabbit.version.recovery",
+                    oldVersionRecoveryProp == null ? ""
+                            : oldVersionRecoveryProp);
+        }
+    }
+

INS31 INS83 INS39 INS42 INS43 INS8 INS42 INS60 INS60 INS60 INS54 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS8 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS60 INS60 INS21 INS21 INS60 INS21 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS32 INS7 INS43 INS14 INS42 INS42 INS9 INS42 INS42 INS45 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS7 INS43 INS59 INS32 INS32 INS32 INS7 INS32 INS7 INS7 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS38 INS42 INS42 INS42 INS42 INS45 INS45 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS27 INS38 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS16 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS9 INS32 INS42 INS42 INS9 INS42 INS42 INS9 INS32 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS32 INS45 INS32 INS45 INS32 INS32 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42