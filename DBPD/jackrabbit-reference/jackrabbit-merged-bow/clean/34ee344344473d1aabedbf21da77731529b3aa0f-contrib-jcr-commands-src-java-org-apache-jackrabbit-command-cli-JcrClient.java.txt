JCR-750: Applied the patch from Alexander Klimetschek. Thanks!

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@511907 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import javax.jcr.Item;
+import jline.ArgumentCompletor;
+import jline.Completor;
+import jline.ConsoleReader;
+import jline.History;
+import jline.SimpleCompletor;
+
+import org.apache.jackrabbit.util.ChildrenCollectorFilter;
+    
+    /**
+     * jline ConsoleReader tab completor that completes on the children of the
+     * current jcr node (both nodes and properties).
+     * 
+     * @author <a href="mailto:alexander(dot)klimetschek(at)mindquarry(dot)com">
+     *         Alexander Klimetschek</a>
+     *
+     */
+    private class JcrChildrenCompletor implements Completor {
+
+        public int complete(String buffer, int cursor, List clist) {
+            String start = (buffer == null) ? "" : buffer;
+            
+            Node node;
+            try {
+                node = CommandHelper.getNode(ctx, ".");
+                Collection items = new ArrayList();
+                ChildrenCollectorFilter collector = new ChildrenCollectorFilter(
+                    "*", items, true, true, 1);
+                collector.visit(node);
+                for (Object item : items) {
+                    String can = ((Item) item).getName();
+                    if (can.startsWith(start)) {
+                        clist.add(can);
+                    }
+                }
+                
+                return 0;
+            } catch (CommandException e) {
+                e.printStackTrace();
+            } catch (RepositoryException e) {
+                e.printStackTrace();
+            }
+            
+            return -1;
+        }
+        
+    }
-        // Prompt command
+        // built jline console reader with history + tab completion
+        ConsoleReader reader = new ConsoleReader();
+        reader.setHistory(new History());
+        reader.setUseHistory(true);
+        
+        // get all available commands for command tab completion
+        Collection<org.apache.jackrabbit.command.cli.CommandLine> commands =
+            CommandLineFactory.getInstance().getCommandLines();
+        List<String> commandNames = new ArrayList<String>();
+        for (org.apache.jackrabbit.command.cli.CommandLine c : commands) {
+            commandNames.add(c.getName());
+            for (Object alias : c.getAlias()) {
+                commandNames.add((String) alias);
+            }
+        }
+        commandNames.add("exit");
+        commandNames.add("quit");
+        
+        // first part is the command, then all arguments will get children tab completion
+        reader.addCompletor(new ArgumentCompletor( new Completor[] {
+                new SimpleCompletor(commandNames.toArray(new String[] {} )),
+                new JcrChildrenCompletor()
+        }));
+        
-                System.out.print(this.getPrompt() + ">");
-                // Read input
-                BufferedReader br = new BufferedReader(new InputStreamReader(
-                    System.in));
-                String input = br.readLine();
+                String input = reader.readLine("[" + this.getPrompt() + "] > ");
+                
-                    System.out.println("Good bye..");
+                    System.out.println("Good bye...");
-                handleException(e);
+                handleException(reader, e);
-    private void handleException(Exception ex) {
+    private void handleException(ConsoleReader cr, Exception ex) {
-        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
-            System.out.print(prompt);
+
-                str = in.readLine();
+                str = cr.readLine(prompt);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS55 INS29 INS83 INS42 INS43 INS31 INS44 INS65 INS65 INS42 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS60 INS21 INS21 INS60 INS60 INS70 INS21 INS21 INS21 INS43 INS42 INS66 INS66 INS66 INS66 INS43 INS42 INS39 INS42 INS43 INS42 INS60 INS60 INS54 INS41 INS43 INS59 INS32 INS32 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS32 INS32 INS32 INS42 INS42 INS42 MOV43 INS59 INS43 INS59 INS8 INS12 INS12 INS38 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS9 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS21 INS70 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS14 INS42 INS16 INS42 INS42 INS21 INS60 INS60 INS21 INS70 INS41 INS44 INS8 INS44 INS8 INS34 INS43 INS43 INS42 INS40 INS32 INS42 INS42 INS42 INS74 INS40 INS32 INS44 INS32 INS8 INS43 INS3 INS36 INS45 INS42 INS7 INS43 INS59 INS43 INS59 INS32 INS44 INS42 INS8 INS34 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS42 INS5 INS4 INS27 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS42 INS60 INS25 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS85 INS14 INS14 UPD43 INS42 INS33 INS42 INS42 INS42 INS45 INS43 INS43 INS45 INS42 INS9 INS9 INS34 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS43 INS32 INS43 UPD42 INS42 MOV32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS43 INS42 INS42 INS42 INS42 INS3 INS42 UPD42 INS42 MOV32 INS42 UPD42 INS42 INS36 INS42 INS32 INS42 INS5 INS4 UPD45 INS45 UPD45 INS11 INS42 INS42 INS42 INS43 INS85 INS43 INS42 INS42 INS42 DEL21 DEL40 DEL42 DEL42 DEL43 DEL42 DEL43 DEL40 DEL14 DEL14 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL40 DEL14 DEL14 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL21