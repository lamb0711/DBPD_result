- comitting latest changes from angela
- adding configuration for authorization header behaviour

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159798 13f79535-47bb-0310-9956-ffa450edef68

-    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory, DavSession session) {
+    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory,
+                           DavSession session)
+        throws RepositoryException {
-            } catch (RepositoryException e) {
+            } catch (PathNotFoundException e) {
+     * Adds a new non-collection member to this resource.
+     *
-        } catch (ItemExistsException e) {
-            // according to RFC 2518: MKCOL only possible on non-existing/deleted resource
-            throw new JcrDavException(e, DavServletResponse.SC_METHOD_NOT_ALLOWED);
+     *
+     *
+     * Creates a new collection as member of this resource.
+     *
+        } catch (ItemExistsException e) {
+            throw new DavException(DavServletResponse.SC_METHOD_NOT_ALLOWED);
-        return a lockdiscovery with the lock-info and the default scope and type */
-        ActiveLock lock = getLock(lockInfo.getType(), lockInfo.getScope());
+           return a lockdiscovery with the lock-info and the default scope and type */
+        ActiveLock lock = getLock(Type.WRITE, Scope.EXCLUSIVE);
-        } else if (lock.isLockedByToken(lockToken)) {
-            if (lock instanceof JcrActiveLock) {
-                try {
-                    // refresh JCR lock and return the original lock object.
-                    node.getLock().refresh();
-                } catch (RepositoryException e) {
-                    throw new JcrDavException(e);
-                }
-            } else {
-                lock = lockManager.refreshLock(lockInfo, lockToken, this);
+        }
+        
+        if (lock instanceof JcrActiveLock) {
+            try {
+                // refresh JCR lock and return the original lock object.
+                node.getLock().refresh();
+            } catch (RepositoryException e) {
+                throw new JcrDavException(e);
-            throw new DavException(DavServletResponse.SC_LOCKED);
+            lock = lockManager.refreshLock(lockInfo, lockToken, this);

MOV43 MOV8 INS65 INS65 MOV25 INS60 INS25 MOV41 INS66 INS66 INS12 MOV43 INS59 MOV27 MOV8 MOV44 INS8 INS42 INS32 INS53 INS42 INS40 INS40 INS14 INS43 MOV43 INS40 INS42 DEL42 DEL43 DEL42 DEL40 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL40 DEL14 DEL53 DEL8 DEL25 DEL25 DEL8