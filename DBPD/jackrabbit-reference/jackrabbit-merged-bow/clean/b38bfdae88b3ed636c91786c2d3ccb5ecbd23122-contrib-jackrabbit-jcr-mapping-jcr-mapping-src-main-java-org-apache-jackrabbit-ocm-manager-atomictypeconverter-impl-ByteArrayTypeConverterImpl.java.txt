review the implementation. Use inputstream instead of String

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@575089 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
-		String value = new String((byte[]) propValue);
-		return valueFactory.createValue(value);
+		  InputStream ins = new ByteArrayInputStream((byte[]) propValue);
+		  return valueFactory.createValue(ins);
-			return value.getString().getBytes();
+			return inputStreamToBytes(value.getStream());
-		catch (RepositoryException e)
+		catch (Exception e)
-			throw new IncorrectAtomicTypeException("Impossible to convert the value : " + value.toString() , e);
+			throw new IncorrectAtomicTypeException("Impossible to convert a binary value." , e);
-		return  "'" + object.toString() + "'";
+		throw new IncorrectAtomicTypeException("Binary cannot be used in queries");
+	
+	private byte[] inputStreamToBytes(InputStream in) throws IOException {
+
+		ByteArrayOutputStream out = new ByteArrayOutputStream(1024);
+		byte[] buffer = new byte[1024];
+		int len;
+
+		while((len = in.read(buffer)) >= 0)
+		out.write(buffer, 0, len);
+
+		in.close();
+		out.close();
+		return out.toByteArray();
+		}

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS83 INS5 INS42 INS44 INS43 INS8 INS53 INS39 INS85 INS43 INS42 INS42 INS60 INS60 INS60 INS61 INS21 INS21 INS41 UPD43 INS14 INS42 INS43 INS59 INS5 INS59 INS39 INS59 INS27 INS21 INS32 INS32 INS32 UPD42 UPD42 UPD42 INS43 INS45 INS42 INS42 INS14 INS39 INS85 INS42 INS3 INS42 INS36 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD43 UPD43 INS42 INS43 INS34 INS5 INS34 INS7 INS42 INS42 INS42 INS34 INS42 UPD42 INS42 UPD42 INS42 INS39 INS85 INS42 INS32 UPD42 INS45 INS42 INS42 INS42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL41