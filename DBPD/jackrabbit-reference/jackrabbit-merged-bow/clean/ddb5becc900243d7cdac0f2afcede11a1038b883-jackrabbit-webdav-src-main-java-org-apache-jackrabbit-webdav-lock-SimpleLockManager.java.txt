JCR-2897 - Remove jcr-commons dependency from jackrabbit-webdav

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1071660 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.util.Text;
-                ActiveLock parentLock = getLock(Text.getRelativeParent(path, 1));
+                ActiveLock parentLock = getLock(getParentPath(path));
-            if (Text.isDescendant(key, resourcePath)) {
+            if (isDescendant(key, resourcePath)) {
-                if (l.isDeep() || (key.equals(Text.getRelativeParent(resourcePath, 1)) && !resource.isCollection())) {
+                if (l.isDeep() || (key.equals(getParentPath(resourcePath)) && !resource.isCollection())) {
-            } else if (Text.isDescendant(resourcePath, key)) {
+            } else if (isDescendant(resourcePath, key)) {
-        if (resource.getResourcePath().equals(Text.getRelativeParent(memberPath, 1))) {
+        if (resource.getResourcePath().equals(getParentPath(memberPath))) {
+
+    /**
+     * @param path Path to retrieve the parent path for.
+     * @return empty string if the specified path contains no '/', "/" if the
+     * last index of '/' is zero. Otherwise the last segment is cut off the
+     * specified path.
+     */
+    private static String getParentPath(String path) {
+        int idx = path.lastIndexOf('/');
+        switch (idx) {
+            case -1:
+                return "";
+            case 0:
+                return "/";
+            default:
+                return path.substring(0, idx);
+        }
+    }
+
+    /**
+     * Determines if the <code>descendant</code> path is hierarchical a
+     * descendant of <code>path</code>.
+     *
+     * @param path     the current path
+     * @param descendant the potential descendant
+     * @return <code>true</code> if the <code>descendant</code> is a descendant;
+     *         <code>false</code> otherwise.
+     */
+    private static boolean isDescendant(String path, String descendant) {
+        String pattern = path.endsWith("/") ? path : path + "/";
+        return !pattern.equals(descendant) && descendant.startsWith(pattern);
+    }

INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS42 INS43 INS42 INS60 INS50 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS60 INS41 INS42 INS66 INS66 INS66 INS66 INS42 INS39 INS59 INS42 INS49 INS41 INS49 INS41 INS49 INS41 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS43 INS59 INS27 INS42 INS32 INS38 INS45 INS34 INS45 INS32 INS42 INS42 INS16 INS38 INS32 UPD42 INS42 INS42 INS13 INS34 INS42 INS42 INS34 INS42 INS32 INS42 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 UPD42 UPD42 DEL40 DEL26 DEL42 DEL34 DEL42 DEL42 DEL34 DEL42 DEL42 DEL34