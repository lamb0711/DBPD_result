Checkstyle conformance:
- removed unneeded public modifiers from interface methods
- removed extra exception declarations
- improved some javadocs

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155797 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.AccessDeniedException;
-import javax.jcr.InvalidItemStateException;
-import javax.jcr.ItemExistsException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.MergeException;
-import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.UnsupportedRepositoryOperationException;
-import javax.jcr.ValueFormatException;
-import javax.jcr.lock.LockException;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.nodetype.NoSuchNodeTypeException;
-import javax.jcr.version.VersionException;
-    public RemoteNode addNode(String path) throws ItemExistsException,
-        PathNotFoundException, ConstraintViolationException,
-        RepositoryException, RemoteException;
+    RemoteNode addNode(String path) throws RepositoryException, RemoteException;
-    public RemoteNode addNode(String path, String type) throws
-        ItemExistsException, PathNotFoundException, NoSuchNodeTypeException,
-        ConstraintViolationException, RepositoryException, RemoteException;
+    RemoteNode addNode(String path, String type)
+            throws RepositoryException, RemoteException;
-    public RemoteProperty getProperty(String path) throws PathNotFoundException,
-        RepositoryException, RemoteException;
+    RemoteProperty getProperty(String path)
+            throws RepositoryException, RemoteException;
-    public RemoteProperty[] getProperties() throws RepositoryException,
-        RemoteException;
+    RemoteProperty[] getProperties()
+            throws RepositoryException, RemoteException;
-    public RemoteProperty[] getProperties(String pattern) throws
-        RepositoryException, RemoteException;
+    RemoteProperty[] getProperties(String pattern)
+            throws RepositoryException, RemoteException;
-    public RemoteItem getPrimaryItem() throws ItemNotFoundException,
-        RepositoryException, RemoteException;
+    RemoteItem getPrimaryItem() throws RepositoryException, RemoteException;
-    public String getUUID() throws UnsupportedRepositoryOperationException,
-        RepositoryException, RemoteException;
+    String getUUID() throws RepositoryException, RemoteException;
-    public RemoteProperty[] getReferences() throws RepositoryException,
-        RemoteException;
+    RemoteProperty[] getReferences()
+            throws RepositoryException, RemoteException;
-    public RemoteNode[] getNodes() throws RepositoryException, RemoteException;
+    RemoteNode[] getNodes() throws RepositoryException, RemoteException;
-    public RemoteNode[] getNodes(String pattern) throws RepositoryException,
-        RemoteException;
+    RemoteNode[] getNodes(String pattern)
+            throws RepositoryException, RemoteException;
-    public boolean hasNode(String path) throws RepositoryException,
-        RemoteException;
+    boolean hasNode(String path) throws RepositoryException, RemoteException;
-    public boolean hasProperty(String path) throws RepositoryException,
-        RemoteException;
+    boolean hasProperty(String path)
+            throws RepositoryException, RemoteException;
-    public boolean hasNodes() throws RepositoryException, RemoteException;
+    boolean hasNodes() throws RepositoryException, RemoteException;
-    public boolean hasProperties() throws RepositoryException, RemoteException;
+    boolean hasProperties() throws RepositoryException, RemoteException;
-    public RemoteNodeType getPrimaryNodeType()
-        throws RepositoryException, RemoteException;
+    RemoteNodeType getPrimaryNodeType()
+            throws RepositoryException, RemoteException;
-    public RemoteNodeType[] getMixinNodeTypes()
-        throws RepositoryException, RemoteException;
+    RemoteNodeType[] getMixinNodeTypes()
+            throws RepositoryException, RemoteException;
-    public boolean isNodeType(String type)
-        throws RepositoryException, RemoteException;
+    boolean isNodeType(String type) throws RepositoryException, RemoteException;
-    public RemoteNode getNode(String path) throws PathNotFoundException,
-        RepositoryException, RemoteException;
+    RemoteNode getNode(String path) throws RepositoryException, RemoteException;
-    public void orderBefore(String src, String dst) throws
-        UnsupportedRepositoryOperationException,
-        ConstraintViolationException, ItemNotFoundException,
-        RepositoryException, RemoteException;
+    void orderBefore(String src, String dst)
+            throws RepositoryException, RemoteException;
-    public RemoteProperty setProperty(String name, Value value) throws
-        ValueFormatException, RepositoryException, RemoteException;
+    RemoteProperty setProperty(String name, Value value)
+            throws RepositoryException, RemoteException;
-    public RemoteProperty setProperty(String name, Value[] value) throws
-        ValueFormatException, RepositoryException, RemoteException;
+    RemoteProperty setProperty(String name, Value[] value)
+            throws RepositoryException, RemoteException;
-    public void addMixin(String name) throws NoSuchNodeTypeException,
-        ConstraintViolationException, RepositoryException, RemoteException;
+    void addMixin(String name) throws RepositoryException, RemoteException;
-    public void removeMixin(String name) throws NoSuchNodeTypeException,
-        ConstraintViolationException, RepositoryException, RemoteException;
+    void removeMixin(String name) throws RepositoryException, RemoteException;
-    public boolean canAddMixin(String name) throws RepositoryException,
-        RemoteException;
+    boolean canAddMixin(String name)
+            throws RepositoryException, RemoteException;
-    public RemoteNodeDef getDefinition() throws RepositoryException,
-        RemoteException;
+    RemoteNodeDef getDefinition() throws RepositoryException, RemoteException;
-    public void checkout() throws UnsupportedRepositoryOperationException,
-        RepositoryException, RemoteException;
+    void checkout() throws RepositoryException, RemoteException;
-    public void update(String workspace) throws NoSuchWorkspaceException,
-        AccessDeniedException, RepositoryException, RemoteException;
+    void update(String workspace) throws RepositoryException, RemoteException;
-    public void merge(String workspace, boolean bestEffort) throws
-        UnsupportedRepositoryOperationException, NoSuchWorkspaceException,
-        AccessDeniedException, MergeException, RepositoryException,
-        RemoteException;
+    void merge(String workspace, boolean bestEffort)
+            throws RepositoryException, RemoteException;
-    public String getCorrespondingNodePath(String workspace) throws
-        ItemNotFoundException, NoSuchWorkspaceException, AccessDeniedException,
-        RepositoryException, RemoteException;
+    String getCorrespondingNodePath(String workspace)
+            throws RepositoryException, RemoteException;
-    public int getIndex() throws RepositoryException, RemoteException;
+    int getIndex() throws RepositoryException, RemoteException;
-    public void restore(String version, boolean removeExisting) throws
-        VersionException, ItemExistsException,
-        UnsupportedRepositoryOperationException, LockException,
-        InvalidItemStateException, RepositoryException, RemoteException;
+    void restore(String version, boolean removeExisting)
+            throws RepositoryException, RemoteException;
-    public void restoreByLabel(String label, boolean removeExisting) throws
-        VersionException, ItemExistsException,
-        UnsupportedRepositoryOperationException, LockException,
-        InvalidItemStateException, RepositoryException, RemoteException;
+    void restoreByLabel(String label, boolean removeExisting)
+            throws RepositoryException, RemoteException;
-    public void unlock() throws UnsupportedRepositoryOperationException,
-        LockException, AccessDeniedException, RepositoryException,
-        RemoteException;
+    void unlock() throws RepositoryException, RemoteException;
-    public boolean holdsLock() throws RepositoryException, RemoteException;
+    boolean holdsLock() throws RepositoryException, RemoteException;
-    public boolean isLocked() throws RepositoryException, RemoteException;
+    boolean isLocked() throws RepositoryException, RemoteException;
-    public boolean isCheckedOut() throws
-        UnsupportedRepositoryOperationException, RepositoryException,
-        RemoteException;
+    boolean isCheckedOut() throws RepositoryException, RemoteException;
-    public RemoteProperty setProperty(String name, Value[] values, int type)
-        throws ValueFormatException, VersionException, LockException,
-        RepositoryException, RemoteException;
+    RemoteProperty setProperty(String name, Value[] values, int type)
+            throws RepositoryException, RemoteException;
-    public RemoteLock lock(boolean isDeep, boolean isSessionScoped) throws
-        UnsupportedRepositoryOperationException, LockException,
-        AccessDeniedException, RepositoryException, RemoteException;
+    RemoteLock lock(boolean isDeep, boolean isSessionScoped)
+            throws RepositoryException, RemoteException;
-    public RemoteLock getLock() throws UnsupportedRepositoryOperationException,
-        LockException, AccessDeniedException, RepositoryException,
-        RemoteException;
+    RemoteLock getLock() throws RepositoryException, RemoteException;

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43