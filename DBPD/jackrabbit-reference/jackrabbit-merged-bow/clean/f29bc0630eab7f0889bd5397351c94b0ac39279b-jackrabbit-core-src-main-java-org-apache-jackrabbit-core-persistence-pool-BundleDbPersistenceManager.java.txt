JCR-3185: refactor consistency checks in BundleDBPersistenceManager into a standalone class that could be re-used for other PMs

use internal getAllIds() method (work-in-progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1220800 13f79535-47bb-0310-9956-ffa450edef68

-        
+
-            // get all node bundles in the database with a single SQL statement,
-            // which is (probably) faster than loading each bundle and traversing the tree              
-            ResultSet rs = null;
-            try {               
-                String sql = "select count(*) from " + schemaObjectPrefix + "BUNDLE";
-                rs = conHelper.exec(sql, new Object[0], false, 0);
-                try {
-                    if (!rs.next()) {
-                        String message = "Could not retrieve total number of bundles. empty result set.";
-                        log.error(message);
-                        throw new RepositoryException(message);
-                    }
-                    total = rs.getInt(1);
-                } finally {
-                    DbUtility.close(rs);
-                }
-                if (getStorageModel() == SM_BINARY_KEYS) {
-                    sql = "select NODE_ID from " + schemaObjectPrefix + "BUNDLE";
-                } else {
-                    sql = "select NODE_ID_HI, NODE_ID_LO from " + schemaObjectPrefix + "BUNDLE";
-                }
-                rs = conHelper.exec(sql, new Object[0], false, 0);
+            total = getNumberOfNodeIds();
+            
+            try {
+                Iterable<NodeId> allIds = getAllNodeIds(null, 0);
-                // iterate over all node bundles in the db
-                while (rs.next()) {
-                    NodeId id;
-                    if (getStorageModel() == SM_BINARY_KEYS) {
-                        id = new NodeId(rs.getBytes(1));
-                    } else {
-                        id = new NodeId(rs.getLong(1), rs.getLong(2));
-                    }
-
-                    // issuing 2nd statement to circumvent issue JCR-1474
-                    ResultSet bRs = null;
+                for (NodeId id : allIds) {
+                    ResultSet rs = null;
-                        bRs = conHelper.exec(bundleSelectSQL, getKey(id), false, 0);
-                        if (!bRs.next()) {
+                        rs = conHelper.exec(bundleSelectSQL, getKey(id), false, 0);
+                        if (!rs.next()) {
-                        NodePropBundle bundle = readBundle(id, bRs, 1);
+                        NodePropBundle bundle = readBundle(id, rs, 1);
-                        DbUtility.close(bRs);
+                        DbUtility.close(rs);
-            } catch (Exception e) {
-                log.error("Error loading bundle", e);
-            } finally {                 
-                DbUtility.close(rs);
+            } catch (ItemStateException ex) {
+                throw new RepositoryException("getting nodeIds", ex);
+            } finally {
+    private synchronized int getNumberOfNodeIds() throws RepositoryException {
+        ResultSet rs = null;
+        try {
+            String sql = "select count(*) from " + schemaObjectPrefix + "BUNDLE";
+            rs = conHelper.exec(sql, new Object[0], false, 0);
+
+            if (!rs.next()) {
+                String message = "Could not retrieve total number of bundles: empty result set.";
+                log.error(message);
+                throw new RepositoryException(message);
+            }
+            return rs.getInt(1);
+        } catch (SQLException ex) {
+            throw new RepositoryException("Could not retrieve total number of bundles", ex);
+        } finally {
+            DbUtility.close(rs);
+        }
+    }
+

INS31 INS83 INS83 INS39 INS42 INS43 INS8 INS42 INS60 MOV54 INS43 INS59 INS12 INS21 INS42 INS42 INS33 MOV60 MOV21 INS41 INS44 INS8 INS7 MOV32 INS43 INS42 INS53 INS42 INS32 INS60 INS70 INS42 INS14 INS42 INS74 INS59 INS44 INS42 MOV8 UPD43 UPD42 INS53 INS43 INS45 INS42 INS43 MOV43 INS42 INS32 MOV43 INS42 MOV60 UPD42 INS14 UPD45 INS42 INS42 UPD42 MOV42 INS33 INS34 INS43 INS45 INS42 INS42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL59 DEL60 DEL42 DEL32 DEL42 DEL27 DEL42 DEL42 DEL43 DEL42 DEL42 DEL34 DEL32 DEL14 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL32 DEL42 DEL27 DEL42 DEL45 DEL42 DEL45 DEL27 DEL7 DEL21 DEL8 DEL42 DEL45 DEL42 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL9 DEL34 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL61 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL7 DEL21