JCR-2087: Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@801565 13f79535-47bb-0310-9956-ffa450edef68

-    private final Map typeMapping = new HashMap();
+    private final Map<Name, TypeMapping[]> typeMapping = new HashMap<Name, TypeMapping[]>();
-            TypeMapping[] types = (TypeMapping[]) typeMapping.get(propName);
+            TypeMapping[] types = typeMapping.get(propName);
-                for (int i = 0; i < propDefs.length; i++) {
-                    int type = propDefs[i].getRequiredType();
-                    if (!propDefs[i].definesResidual() && type != PropertyType.UNDEFINED) {
-                        Name name = propDefs[i].getName();
+                for (PropDef propDef : propDefs) {
+                    int type = propDef.getRequiredType();
+                    if (!propDef.definesResidual() && type != PropertyType.UNDEFINED) {
+                        Name name = propDef.getName();
-                        TypeMapping[] types = (TypeMapping[]) typeMapping.get(name);
+                        TypeMapping[] types = typeMapping.get(name);
-                        types[types.length - 1] = new TypeMapping(ntName, type, propDefs[i].isMultiple());
+                        types[types.length - 1] = new TypeMapping(ntName, type, propDef.isMultiple());
-            Map modified = new HashMap();
+            Map<Name, TypeMapping[]> modified = new HashMap<Name, TypeMapping[]>();
-                TypeMapping[] mapping = (TypeMapping[]) typeMapping.get(propName);
-                List remove = null;
-                for (int i = 0; i < mapping.length; i++) {
-                    if (mapping[i].ntName.equals(ntName)) {
+                TypeMapping[] mapping = typeMapping.get(propName);
+                List<TypeMapping> remove = null;
+                for (TypeMapping tm : mapping) {
+                    if (tm.ntName.equals(ntName)) {
-                            remove = new ArrayList(mapping.length);
+                            remove = new ArrayList<TypeMapping>(mapping.length);
-                        remove.add(mapping[i]);
+                        remove.add(tm);
-                        List remaining = new ArrayList(Arrays.asList(mapping));
+                        List<TypeMapping> remaining = new ArrayList<TypeMapping>(Arrays.asList(mapping));
-        Name[] ntNames = registry.getRegisteredNodeTypes();
-        for (int i = 0; i < ntNames.length; i++) {
-            nodeTypeRegistered(ntNames[i]);
+        for (Name ntName : registry.getRegisteredNodeTypes()) {
+            nodeTypeRegistered(ntName);

INS74 MOV43 INS43 INS5 INS70 INS42 INS43 INS85 INS74 INS44 MOV32 INS8 INS42 MOV43 INS43 MOV5 INS43 INS42 MOV21 INS42 MOV5 INS74 MOV42 MOV32 INS70 MOV43 INS43 MOV5 INS70 INS42 INS44 INS42 MOV8 INS42 INS74 MOV5 INS74 INS44 INS42 INS8 INS43 INS42 MOV43 MOV43 MOV5 MOV32 MOV43 INS43 INS43 INS42 MOV25 INS42 INS42 INS42 INS42 INS40 INS42 MOV5 INS74 INS42 MOV32 INS42 MOV43 INS43 INS42 INS42 INS74 INS42 MOV43 INS43 INS74 INS42 MOV43 INS43 INS42 DEL11 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL11 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL11 DEL42 DEL42 DEL2 DEL42 DEL22 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL42 DEL2 DEL85 DEL5 DEL42 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24