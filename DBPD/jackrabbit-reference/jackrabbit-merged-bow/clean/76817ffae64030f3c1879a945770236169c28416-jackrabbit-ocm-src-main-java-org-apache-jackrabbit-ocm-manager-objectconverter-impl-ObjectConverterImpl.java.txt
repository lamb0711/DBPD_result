Fix for JCR-1325 and review support for Collection & Map. 
The mapping definition can be simplified with parameterized collections and maps. In this case the ElementClass setting is not necessary.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@650283 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableCollectionImpl;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableMapImpl;
-			objects = (ManageableCollection) proxyManager.createCollectionProxy(session, collectionConverter, parentNode,
+			Object proxy = proxyManager.createCollectionProxy(session, collectionConverter, parentNode,
-
-		} else {
+			ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), proxy);
+		}
+		else
+		{
+			if (objects==null)
+			{
+			  ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), null);
+			}
+			else
+			{
+				// TODO: find another for managing custom ManageableObjects classes
+			    if ( ! objects.getClass().equals(ManageableCollectionImpl.class) &&
+			    	 ! objects.getClass().equals(ManageableMapImpl.class))
+			    {
+			    	ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects);
+			    }
+			    else
+			    {
+				    ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects.getObjects());
+			    }
+			}
+
-		ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects);
+

INS26 INS26 INS40 INS40 INS25 MOV32 INS8 INS8 INS60 INS21 MOV21 INS25 INS43 INS59 INS32 INS27 INS8 INS8 INS42 INS42 MOV32 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS21 MOV25 INS42 INS42 INS32 INS27 INS8 INS42 INS42 INS42 INS32 INS33 INS38 INS38 MOV21 INS21 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS57 INS32 INS42 INS57 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 DEL42 DEL43 DEL11 DEL7 DEL21 DEL8