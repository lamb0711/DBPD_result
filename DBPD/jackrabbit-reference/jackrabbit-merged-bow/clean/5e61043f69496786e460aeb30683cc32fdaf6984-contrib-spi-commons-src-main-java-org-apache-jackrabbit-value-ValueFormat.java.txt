work in progress

- SPI: replace String/Stream for values by QValue interface
- SPI: add factory for QValue
  > adjust commons and add implementation
  > adjust usages of former QValue object with jcr2spi, spi2dav
- RepositoryService.getChildInfos returns Iterator instead of Collection
- spi2dav: add implementation for new query interfaces

- TODO: 
  improve conversion of jcr-value to q-value and vice-versa




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497885 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.QValue;
+import org.apache.jackrabbit.spi.QValueFactory;
-    public static QValue getQValue(Value jcrValue, NamespaceResolver nsResolver) throws RepositoryException {
+    /**
+     *
+     * @param jcrValue
+     * @param nsResolver
+     * @param factory
+     * @return
+     * @throws RepositoryException
+     */
+    public static QValue getQValue(Value jcrValue, NamespaceResolver nsResolver,
+                                   QValueFactory factory) throws RepositoryException {
-                return QValue.create(jcrValue.getStream());
+                return factory.create(jcrValue.getStream());
-            return getQValue(jcrValue.getString(), jcrValue.getType(), nsResolver);
+            return getQValue(jcrValue.getString(), jcrValue.getType(), nsResolver, factory);
-    public static QValue[] getQValues(Value[] jcrValues, NamespaceResolver nsResolver) throws RepositoryException {
+    /**
+     *
+     * @param jcrValues
+     * @param nsResolver
+     * @param factory
+     * @return
+     * @throws RepositoryException
+     */
+    public static QValue[] getQValues(Value[] jcrValues,
+                                      NamespaceResolver nsResolver,
+                                      QValueFactory factory) throws RepositoryException {
-                qValues.add(getQValue(jcrValues[i], nsResolver));
+                qValues.add(getQValue(jcrValues[i], nsResolver, factory));
-    public static QValue getQValue(String jcrValue, int propertyType, NamespaceResolver nsResolver) throws RepositoryException {
+    /**
+     * 
+     * @param jcrValue
+     * @param propertyType
+     * @param nsResolver
+     * @param factory
+     * @return
+     * @throws RepositoryException
+     */
+    public static QValue getQValue(String jcrValue, int propertyType,
+                                   NamespaceResolver nsResolver,
+                                   QValueFactory factory) throws RepositoryException {
-                qValue = QValue.create(jcrValue, propertyType);
+                qValue = factory.create(jcrValue, propertyType);
-                qValue = QValue.create(jcrValue.getBytes());
+                qValue = factory.create(jcrValue.getBytes());
-                    qValue = QValue.create(qName);
+                    qValue = factory.create(qName);
-                    qValue = QValue.create(qPath);
+                    qValue = factory.create(qPath);
-                                    ValueFactory factory)
-        throws RepositoryException {
+                                    ValueFactory factory) throws RepositoryException {

INS26 INS26 INS40 INS40 INS29 INS44 INS29 INS44 INS29 INS44 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42