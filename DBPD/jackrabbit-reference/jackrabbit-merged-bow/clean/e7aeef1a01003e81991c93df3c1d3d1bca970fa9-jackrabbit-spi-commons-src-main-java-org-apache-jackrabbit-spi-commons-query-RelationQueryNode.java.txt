JCR-977: jcr:deref in xpath predicates

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@791737 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.commons.conversion.MalformedPathException;
+import org.apache.jackrabbit.spi.Path.Element;
-import org.apache.jackrabbit.spi.commons.name.PathBuilder;
-
-public class RelationQueryNode extends NAryQueryNode implements QueryConstants {
+public class RelationQueryNode extends NAryQueryNode<QueryNode> implements QueryConstants {
-    private Path relPath;
+    private PathQueryNode relPath;
+    private final QueryNodeFactory factory;
+
-     * @param parent the parent node for this query node.
+     * @param parent    the parent node for this query node.
+     * @param operation the operation.
+     * @param factory   the query node factory.
-    protected RelationQueryNode(QueryNode parent, int operation) {
+    protected RelationQueryNode(QueryNode parent,
+                                int operation,
+                                QueryNodeFactory factory) {
+        this.factory = factory;
+        this.relPath = factory.createPathQueryNode(this);
-     * Returns the name of the property in this relation query node. Please
-     * note that this method does not return the full relative path that
-     * reference the property to match, but only the name of the final name
-     * element of the path returned by {@link #getRelativePath()}.
-     *
-     * @return the name of the property in this relation query node.
-     * @deprecated Use {@link #getRelativePath()} instead.
-     */
-    public Name getProperty() {
-        return relPath == null ? null : relPath.getNameElement().getName();
-    }
-
-    /**
-     * Sets a new property name for this relation query node.
-     *
-     * @param name the new property name.
-     * @deprecated Use {@link #setRelativePath(Path)} instead.
-     */
-    public void setProperty(Name name) {
-        PathBuilder builder = new PathBuilder();
-        builder.addLast(name);
-        try {
-            this.relPath = builder.getPath();
-        } catch (MalformedPathException e) {
-            // path is always valid
-        }
-    }
-
-    /**
-    public Path getRelativePath() {
+    public PathQueryNode getRelativePath() {
-        if (relPath != null && relPath.isAbsolute()) {
+        if (relPath.isAbsolute()) {
-        this.relPath = relPath;
+        
+        Element[] elements = relPath.getElements();
+        for (Element element : elements) {
+            addPathElement(element);
+        }
-        PathBuilder builder = new PathBuilder();
-        if (relPath != null) {
-            builder.addAll(relPath.getElements());
-        }
-        builder.addLast(element);
-        try {
-            relPath = builder.getPath();
-        }
-        catch (MalformedPathException e) {
-            // path is always valid
-        }
-        // try to normalize the path
-        try {
-          relPath = relPath.getNormalizedPath();
-        } catch (RepositoryException e) {
-            // just keep the original in that case
-        }
+        LocationStepQueryNode step = factory.createLocationStepQueryNode(relPath);
+        step.setNameTest(element.getName());
+        relPath.addPathStep(step);

MOV26 UPD40 INS74 INS23 MOV43 INS43 UPD43 INS83 INS83 INS43 INS59 INS44 UPD43 INS8 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV42 INS65 INS65 INS43 INS42 INS21 INS21 UPD42 MOV25 INS60 INS70 INS60 MOV21 UPD66 INS42 INS66 INS42 INS66 INS42 INS7 INS7 MOV32 INS5 INS59 INS44 INS42 INS8 UPD43 MOV43 INS59 INS32 INS22 INS42 MOV22 INS32 INS43 INS85 INS42 MOV32 INS43 INS42 MOV21 UPD42 UPD42 MOV42 INS32 UPD42 UPD42 INS32 MOV42 UPD42 MOV42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 INS42 INS42 INS42 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL42 DEL68 DEL65 DEL66 DEL65 DEL66 DEL65 DEL66 DEL42 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL43 DEL42 DEL42 DEL33 DEL27 DEL33 DEL42 DEL42 DEL32 DEL42 DEL32 DEL16 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL33 DEL27 DEL27 DEL52 DEL42 DEL22 DEL42 DEL7 DEL8 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL33 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL7 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54