JCR-1588 - JSR 283: Access Control (work in progress)
JCR-1590 - JSR 283: Locking
JCR-1915 - Node.setPrimaryNodeType should only redefine child-definitions that are not covered by the new effective nt
JCR-1875 - Failing Node.unlock() might leave inconsistent transient state
JCR-538 - Failing Node.checkin() or Node.checkout() might leave inconsistent transient state

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@732693 13f79535-47bb-0310-9956-ffa450edef68

+        super(true);
+        ACLTemplate acl = null;
-            return (ACLTemplate) getPolicies(nPath)[0];
-        } else {
-            // no policy for the given principal
-            log.debug("No combined policy template for Principal " + principal.getName());
-            return null;
+            AccessControlPolicy[] plcs = getPolicies(nPath);
+            if (plcs.length > 0) {
+                acl = (ACLTemplate) plcs[0];
+            }
+        if (acl == null) {
+            // no policy for the given principal
+            log.debug("No policy template for Principal " + principal.getName());
+        }
+        return acl;
-        if (acNode != null) {
+        if (isAccessControlled(acNode)) {
+        NodeImpl acNode;
-            createAcNode(nPath);
+            acNode = createAcNode(nPath);
+        } else {
+            acNode = (NodeImpl) session.getNode(nPath);
-        return getPolicies(nPath);
+        return new AccessControlPolicy[] {createTemplate(acNode)};
-        if (acNode != null) {
-            if (isAccessControlled(acNode)) {
-                // build the template in order to have a return value
-                AccessControlPolicy tmpl = createTemplate(acNode);
-                if (tmpl.equals(policy)) {
-                    removeSecurityItem(acNode.getNode(N_POLICY));
-                    return;
-                }
+        if (isAccessControlled(acNode)) {
+            // build the template in order to have a return value
+            AccessControlPolicy tmpl = createTemplate(acNode);
+            if (tmpl.equals(policy)) {
+                removeSecurityItem(acNode.getNode(N_POLICY));
+                return;
-        // to the node at 'nodePath' -> throw exception.no policy was removed
+        // to the node at 'nodePath' -> throw exception. no policy was removed
-    private boolean isAccessControlled(NodeImpl node) throws RepositoryException {
-        return node.isNodeType(NT_REP_ACCESS_CONTROL) && node.hasNode(N_POLICY);
+    private static boolean isAccessControlled(NodeImpl node) throws RepositoryException {
+        return node != null && node.isNodeType(NT_REP_ACCESS_CONTROL) && node.hasNode(N_POLICY);
-    private AccessControlPolicy createTemplate(NodeImpl acNode) throws RepositoryException {
+    private static AccessControlPolicy createTemplate(NodeImpl acNode) throws RepositoryException {

MOV8 INS83 INS83 INS46 INS60 INS25 INS41 INS60 MOV21 MOV21 MOV60 MOV53 INS9 MOV43 INS59 MOV32 INS8 INS27 INS42 INS32 INS43 INS59 INS8 INS3 INS42 INS33 INS60 INS25 INS42 INS33 INS42 INS42 INS42 INS42 INS21 INS5 INS4 INS27 INS5 INS59 INS27 INS8 INS7 INS7 INS43 INS85 INS32 INS27 MOV32 INS43 INS85 INS42 MOV32 INS40 INS34 INS21 INS42 MOV32 INS42 INS11 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS33 INS42 INS7 UPD45 INS43 INS32 INS42 INS11 INS42 INS42 INS42 INS42 INS43 INS2 INS42 INS42 INS34 DEL34 DEL2 DEL11 DEL41 DEL8 DEL33 DEL41 DEL42 DEL33 DEL27 DEL32 DEL42 DEL33 DEL27 DEL25 DEL8