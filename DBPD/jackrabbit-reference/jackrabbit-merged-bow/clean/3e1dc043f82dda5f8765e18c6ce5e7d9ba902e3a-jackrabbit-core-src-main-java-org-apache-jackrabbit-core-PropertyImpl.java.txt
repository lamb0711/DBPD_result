JCR-1389: setProperty("name", new Value[0], PropertyType.LONG) loses property type

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@628156 13f79535-47bb-0310-9956-ffa450edef68

+        setValue(values, PropertyType.UNDEFINED);
+    }
+
+    /**
+     * Sets the values of this property.
+     *
+     * @param values property values (possibly <code>null</code>)
+     * @param valueType default value type if not set in the node type,
+     *                  may be {@link PropertyType#UNDEFINED}
+     * @throws RepositoryException if the property values could not be set
+     */
+    public void setValue(Value[] values, int valueType)
+            throws RepositoryException {
-            int valueType = PropertyType.UNDEFINED;
+            int firstValueType = PropertyType.UNDEFINED;
-                if (values[i] == null) {
-                    // skip null values as those will be purged later
-                    continue;
-                }
-                if (valueType == PropertyType.UNDEFINED) {
-                    valueType = values[i].getType();
-                } else if (valueType != values[i].getType()) {
-                    // inhomogeneous types
-                    String msg = "inhomogeneous type of values";
-                    log.debug(msg);
-                    throw new ValueFormatException(msg);
+                if (values[i] != null) {
+                    if (firstValueType == PropertyType.UNDEFINED) {
+                        firstValueType = values[i].getType();
+                    } else if (firstValueType != values[i].getType()) {
+                        throw new ValueFormatException(
+                                "inhomogeneous type of values");
+                    }
+        if (reqType == PropertyType.UNDEFINED) {
+            reqType = valueType; // use the given type as property type
+        }
+
+            // check type of values
-                InternalValue internalValue = null;
-                    // check type according to definition of this property
-                        // use the value's type as property type
+                        // Use the type of the fist value as the type
-                        // type conversion required
-                        Value targetVal = ValueHelper.convert(
-                                value, reqType,
-                                ValueFactoryImpl.getInstance());
-                        internalValue = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-                    } else {
-                        // no type conversion required
-                        internalValue = InternalValue.create(value, session.getNamePathResolver(), rep.getDataStore());
+                        value = ValueHelper.convert(
+                                value, reqType, session.getValueFactory());
+                    internalValues[i] = InternalValue.create(
+                            value, session, rep.getDataStore());
+                } else {
+                    internalValues[i] = null;
-                internalValues[i] = internalValue;

INS31 MOV29 INS83 INS39 INS42 INS44 MOV43 MOV43 MOV43 MOV43 INS43 INS8 INS29 INS44 INS5 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS39 INS42 INS25 INS43 INS85 INS32 INS66 INS42 INS66 INS42 INS66 INS66 INS65 INS42 INS66 INS27 INS8 INS42 INS42 INS42 INS40 INS67 INS42 INS40 INS21 INS42 INS42 INS7 INS8 UPD42 INS25 INS42 INS42 MOV60 MOV25 UPD27 MOV27 INS8 MOV27 MOV25 MOV25 INS25 MOV27 INS8 UPD42 INS21 MOV2 INS2 INS33 UPD42 MOV32 INS7 UPD42 MOV42 MOV32 INS42 INS42 UPD42 MOV32 INS42 INS32 INS45 MOV42 MOV42 MOV42 MOV42 MOV32 UPD42 UPD42 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL18 DEL8 DEL25 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL8 DEL25 DEL42 DEL7 DEL21 DEL8