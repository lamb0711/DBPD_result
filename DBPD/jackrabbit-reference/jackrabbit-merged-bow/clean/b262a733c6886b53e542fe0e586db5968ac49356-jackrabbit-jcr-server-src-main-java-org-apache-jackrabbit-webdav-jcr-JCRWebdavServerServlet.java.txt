JCR-2536: spi2davex: InvalidItemStateException not properly extracted from ambiguous response error
JCR-2565: spi2dav: Overwrite header T specified for MOVE and COPY causes failure if some API tests [+ adding test for copy with snsiblings allowed]


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@921991 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.DavServletResponse;
+     * Modified variant needed for JCR move and copy that isn't compliant to
+     * WebDAV. The latter requires both methods to fail if the destination already
+     * exists and Overwrite is set to F (false); in JCR however this depends on
+     * the node type characteristics of the parent (SNSiblings allowed or not).
+     *
+     * @param destResource destination resource to be validated.
+     * @param request
+     * @param checkHeader flag indicating if the destination header must be present.
+     * @return status code indicating whether the destination is valid.
+     */
+    @Override
+    protected int validateDestination(DavResource destResource, WebdavRequest request, boolean checkHeader)
+            throws DavException {
+
+        if (checkHeader) {
+            String destHeader = request.getHeader(HEADER_DESTINATION);
+            if (destHeader == null || "".equals(destHeader)) {
+                return DavServletResponse.SC_BAD_REQUEST;
+            }
+        }
+        if (destResource.getLocator().equals(request.getRequestLocator())) {
+            return DavServletResponse.SC_FORBIDDEN;
+        }
+
+        int status;
+        if (destResource.exists()) {
+            if (request.isOverwrite()) {
+                // matching if-header required for existing resources
+                if (!request.matchesIfHeader(destResource)) {
+                    return DavServletResponse.SC_PRECONDITION_FAILED;
+                } else {
+                    // overwrite existing resource
+                    destResource.getCollection().removeMember(destResource);
+                    status = DavServletResponse.SC_NO_CONTENT;
+                }
+            } else {
+              /* NO overwrite header:
+
+                 but, instead of return the 412 Precondition-Failed code required
+                 by the WebDAV specification(s) leave the validation to the
+                 JCR repository.
+               */
+                status = DavServletResponse.SC_CREATED;
+            }
+
+        } else {
+            // destination does not exist >> copy/move can be performed
+            status = DavServletResponse.SC_CREATED;
+        }
+        return status;
+    }
+
+    /**

INS26 INS40 INS31 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS25 INS25 INS60 INS25 INS41 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS42 INS66 INS66 INS42 INS42 INS42 INS8 INS32 INS8 INS39 INS59 INS32 INS8 INS8 INS42 INS60 INS25 INS32 INS42 INS32 INS41 INS42 INS42 INS42 INS25 INS21 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS40 INS32 INS8 INS8 INS7 INS42 INS42 INS32 INS27 INS32 INS41 INS42 INS42 INS25 INS21 INS42 INS40 INS42 INS42 INS42 INS42 INS33 INS45 INS42 INS42 INS40 INS38 INS8 INS8 INS7 INS32 INS41 INS21 INS21 INS42 INS40 INS42 INS42 INS42 INS40 INS32 INS7 INS32 INS42 INS42 INS42 INS40 INS42 INS42