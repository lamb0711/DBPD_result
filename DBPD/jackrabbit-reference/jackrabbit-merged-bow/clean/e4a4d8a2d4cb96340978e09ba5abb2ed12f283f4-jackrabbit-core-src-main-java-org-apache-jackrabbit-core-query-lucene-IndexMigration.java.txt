JCR-3242 Update to Lucene 3.6

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1362178 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.lucene.index.FieldInfos;
+import org.apache.lucene.index.IndexWriterConfig;
+import org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy;
+import org.apache.lucene.index.LogByteSizeMergePolicy;
+import org.apache.lucene.index.UpgradeIndexMergePolicy;
+import org.apache.lucene.util.ReaderUtil;
+import org.apache.lucene.util.Version;
-        String migrationName = index.getName() + "_v2.3";
+        String migrationName = index.getName() + "_v36";
+        final IndexWriterConfig c = new IndexWriterConfig(Version.LUCENE_36, new JackrabbitAnalyzer());
+        c.setMergePolicy(new UpgradeIndexMergePolicy(new LogByteSizeMergePolicy()));
+        c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()); 
-            IndexWriter writer = new IndexWriter(migrationDir, new JackrabbitAnalyzer(),
-                    IndexWriter.MaxFieldLength.UNLIMITED);
+            IndexWriter writer = new IndexWriter(migrationDir, c);
-                IndexReader r = new MigrationIndexReader(
-                        IndexReader.open(index.getDirectory(), true),
+                IndexReader r = new MigrationIndexReader(IndexReader.open(index.getDirectory()),
-                    writer.addIndexes(new IndexReader[]{r});
+                    writer.addIndexes(r);
+                    writer.forceMerge(1);
-            throw new IOException("failed to move migrated directory " +
-                    migrationDir);
+            throw new IOException("failed to move migrated directory " + migrationDir);
+        @Override
+        public IndexReader[] getSequentialSubReaders() {
+            return null;
+        }
+
+        @Override
+        public FieldInfos getFieldInfos() {
+            return ReaderUtil.getMergedFieldInfos(in);
+        }
+
+        @Override
+        @Override
-            List<String> fieldNames = new ArrayList<String>();
-            for (Object obj : in.getFieldNames(FieldOption.ALL)) {
-                fieldNames.add((String) obj);
-            }
+            List<String> fieldNames = new ArrayList<String>(ReaderUtil.getIndexedFields(in));
+        @Override

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 MOV60 INS21 INS21 INS78 INS83 MOV5 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS78 INS78 INS83 INS43 INS32 INS32 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS42 INS42 UPD42 MOV14 INS42 INS42 INS14 INS42 INS42 INS14 INS60 INS33 INS32 UPD45 INS43 UPD40 INS43 INS14 INS43 MOV43 INS59 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS14 INS32 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS21 INS32 INS42 INS42 INS42 INS34 DEL42 DEL9 DEL42 DEL4 DEL3 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL21 DEL8 DEL70