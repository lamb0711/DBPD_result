JCR-1438: Replace Config classes with factories

Replace JournalConfig with a JournalFactory.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816237 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.io.IOException;
-import java.util.UUID;
-import org.apache.commons.io.FileUtils;
-import org.apache.jackrabbit.core.id.NodeId;
-import org.apache.jackrabbit.core.config.ConfigurationException;
-import org.apache.jackrabbit.core.config.JournalConfig;
-import org.apache.jackrabbit.core.journal.AbstractJournal;
+import org.apache.jackrabbit.core.id.NodeId;
-     * Cluster node id file.
-     */
-    private static final String CLUSTER_NODE_ID_FILE = "cluster_node.id";
-
-    /**
-        clusterNodeId = getClusterNodeId(cc.getId());
+        clusterNodeId = cc.getId();
-            JournalConfig jc = cc.getJournalConfig();
-            journal = (Journal) jc.newInstance();
-            setRepositoryHome(journal, clusterContext.getRepositoryHome());
-            journal.init(clusterNodeId, clusterContext.getNamespaceResolver());
+            journal = cc.getJournal(clusterContext.getNamespaceResolver());
-        } catch (ConfigurationException e) {
-            throw new ClusterException(e.getMessage(), e.getCause());
+        } catch (RepositoryException e) {
+            throw new ClusterException(
+                    "Cluster initialization failed: " + this, e);
-            throw new ClusterException(e.getMessage(), e.getCause());
-        }
-    }
-
-    /**
-     * Set a journal's repository home, if possible, i.e. if it is an
-     * <code>AbstractJournal</code>
-     *
-     * @param journal journal instance
-     * @param repHome repository home
-     */
-    private void setRepositoryHome(Journal journal, File repHome) {
-        if (journal instanceof AbstractJournal) {
-            AbstractJournal aj = (AbstractJournal) journal;
-            aj.setRepositoryHome(repHome);
+            throw new ClusterException(
+                    "Journal initialization failed: " + this, e);
-    /**
-     * Return the instance id to be used for this node in the cluster.
-     * @param id configured id, <code>null</code> to generate a unique id
-     */
-    private String getClusterNodeId(String id) throws ClusterException {
-        if (id == null) {
-            id = System.getProperty(SYSTEM_PROPERTY_NODE_ID);
-            if (id == null) {
-                try {
-                    id = getClusterNodeIdFromFile();
-                } catch (IOException e) {
-                    throw new ClusterException(e.getMessage(), e.getCause());
-                }
-            }
-        }
-        return id;
-    }
-
-    /**
-     * Return a cluster node from a file, creating it if necessary.
-     *
-     * @return stored or generated cluster id
-     * @throws IOException if an I/O error occurs
-     */
-    protected String getClusterNodeIdFromFile() throws IOException {
-        String filename = clusterContext.getRepositoryHome() + File.separator + CLUSTER_NODE_ID_FILE;
-        File f = new File(filename);
-
-        if (f.exists() && f.canRead()) {
-            return FileUtils.readFileToString(f);
-        }
-
-        String id = UUID.randomUUID().toString();
-        FileUtils.writeStringToFile(f, id);
-        return id;
-
-    }
-

MOV26 MOV32 INS7 UPD43 INS42 MOV32 UPD42 UPD42 UPD42 MOV43 INS27 INS42 MOV43 INS27 INS42 INS45 INS52 INS45 INS52 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL40 DEL42 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31