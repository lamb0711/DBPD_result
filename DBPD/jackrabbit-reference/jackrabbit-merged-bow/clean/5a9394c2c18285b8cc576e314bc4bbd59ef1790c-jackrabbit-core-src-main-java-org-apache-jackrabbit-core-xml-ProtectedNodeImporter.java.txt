JCR-2313 - Improvements to user management (2) [work in progress] 
-> see issue for details

JCR-2333 - ItemImpl#validateTransientItems: Incomplete validation of mandatory child item
-> patch2

JCR-2195 - Provide possibility to import protected items using Session/Workspace import functionality
-> deal with reference properties
-> make import handlers configurable
-> add userimporter

JCR-171 - Make the extraction of Session UserIDs from Subjects configurable
-> extend SecurityManagerConfig and retrieve uid from principal name if configured
     class is present in the subject

JCR-2351 - Make Authorizable.setProperty more noisy in case of failure

JCR-2331 - Configurable DefaultPolicy replacing Initialization within the ACProvider
-> initial steps. remove code that relies on the default-init
-> add TODOs

JCR-2291 - Issues with compiled permissions of ACL provider
-> remove code searching for DENY-read entries in case of default initialization of ac entries

and here and there minor improvement, usage of generics etc....

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@828791 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.util.ReferenceChangeTracker;
+import org.apache.jackrabbit.api.JackrabbitSession;
+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
- *
- * TODO: check if references properties can be handled with the info present
+     * 
+     * @param session
+     * @param resolver
+     * @param isWorkspaceImport
+     * @param uuidBehavior
+     * @param referenceTracker
+     * @return
+     */
+    boolean init(JackrabbitSession session, NamePathResolver resolver,
+                 boolean isWorkspaceImport, int uuidBehavior,
+                 ReferenceChangeTracker referenceTracker);
+
+    /**
+    /**
+     * Post processing protected reference properties underneith a parent
+     * node that has been handled by this importer.
+     * This method is called
+     * from {@link org.apache.jackrabbit.core.xml.Importer#end()}.
+     * 
+     * @throws RepositoryException If an error occurs.
+     */
+    void processReferences() throws RepositoryException;

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS29 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS29 INS39 INS42 INS43 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS66 INS66 INS66 INS66 INS65 INS66 INS42 INS66 INS68 INS40 INS42 DEL66