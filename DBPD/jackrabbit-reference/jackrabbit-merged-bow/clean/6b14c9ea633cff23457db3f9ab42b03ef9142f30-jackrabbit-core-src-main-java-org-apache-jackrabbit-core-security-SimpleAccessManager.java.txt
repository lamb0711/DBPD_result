JCR-1104 : JSR 283 support
JCR-1171 : Contribute Pluggable Permission and User Management to Jackrabbit

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638834 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.HierarchyManager;
-import org.apache.jackrabbit.core.ItemId;
-
-import javax.jcr.AccessDeniedException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.RepositoryException;
-import javax.security.auth.Subject;
-
+ *
+ * @deprecated Use {@link org.apache.jackrabbit.core.security.simple.SimpleAccessManager} instead.
-public class SimpleAccessManager implements AccessManager {
+public class SimpleAccessManager extends org.apache.jackrabbit.core.security.simple.SimpleAccessManager {
-    /**
-     * Subject whose access rights this AccessManager should reflect
-     */
-    protected Subject subject;
-
-    /**
-     * hierarchy manager used for ACL-based access control model
-     */
-    protected HierarchyManager hierMgr;
-
-    private boolean initialized;
-
-    protected boolean system;
-    protected boolean anonymous;
-
-    /**
-     * Empty constructor
-     */
-    public SimpleAccessManager() {
-        initialized = false;
-        anonymous = false;
-        system = false;
-    }
-
-    //--------------------------------------------------------< AccessManager >
-    /**
-     * {@inheritDoc}
-     */
-    public void init(AMContext context)
-            throws AccessDeniedException, Exception {
-        if (initialized) {
-            throw new IllegalStateException("already initialized");
-        }
-
-        subject = context.getSubject();
-        hierMgr = context.getHierarchyManager();
-        anonymous = !subject.getPrincipals(AnonymousPrincipal.class).isEmpty();
-        system = !subject.getPrincipals(SystemPrincipal.class).isEmpty();
-
-        // @todo check permission to access given workspace based on principals
-        initialized = true;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public synchronized void close() throws Exception {
-        if (!initialized) {
-            throw new IllegalStateException("not initialized");
-        }
-
-        initialized = false;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public void checkPermission(ItemId id, int permissions)
-            throws AccessDeniedException, ItemNotFoundException,
-            RepositoryException {
-        if (!initialized) {
-            throw new IllegalStateException("not initialized");
-        }
-
-        if (system) {
-            // system has always all permissions
-            return;
-        } else if (anonymous) {
-            // anonymous is always denied WRITE & REMOVE permissions
-            if ((permissions & WRITE) == WRITE
-                    || (permissions & REMOVE) == REMOVE) {
-                throw new AccessDeniedException();
-            }
-        }
-        // @todo check permission based on principals
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public boolean isGranted(ItemId id, int permissions)
-            throws ItemNotFoundException, RepositoryException {
-        if (!initialized) {
-            throw new IllegalStateException("not initialized");
-        }
-
-        if (system) {
-            // system has always all permissions
-            return true;
-        } else if (anonymous) {
-            // anonymous is always denied WRITE & REMOVE premissions
-            if ((permissions & WRITE) == WRITE
-                    || (permissions & REMOVE) == REMOVE) {
-                return false;
-            }
-        }
-
-        // @todo check permission based on principals
-        return true;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public boolean canAccess(String workspaceName)
-            throws NoSuchWorkspaceException, RepositoryException {
-        // @todo check permission to access given workspace based on principals
-        return true;
-    }

INS29 INS83 INS42 INS43 MOV65 INS65 INS40 UPD66 MOV66 INS65 UPD66 MOV66 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL29 DEL83 DEL42 DEL42 DEL43 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL65 DEL29 DEL83 DEL42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL32 DEL38 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL32 DEL38 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL9 DEL7 DEL21 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL41 DEL8 DEL42 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL27 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL25 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL9 DEL41 DEL8 DEL42 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL27 DEL9 DEL41 DEL8 DEL25 DEL8 DEL25 DEL25 DEL9 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL9 DEL41 DEL8 DEL31