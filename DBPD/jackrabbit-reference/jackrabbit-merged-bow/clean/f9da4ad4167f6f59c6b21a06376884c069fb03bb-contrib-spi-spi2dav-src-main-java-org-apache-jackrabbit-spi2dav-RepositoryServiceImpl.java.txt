work in progress

- missing release of HTTP methods
- unsubscribe in order to retrieve batch events must be performed before the batch lock is released.
- getItemInfo should rather throw ItemNotFound instead of PathNotFound

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@452806 13f79535-47bb-0310-9956-ffa450edef68

-    private static long POLL_INTERVAL = 30000;  // TODO: make configurable
+    private static long POLL_INTERVAL = 300000000;  // TODO: make configurable
-    public NodeInfo getNodeInfo(SessionInfo sessionInfo, NodeId nodeId) throws PathNotFoundException, RepositoryException {
+    public NodeInfo getNodeInfo(SessionInfo sessionInfo, NodeId nodeId) throws ItemNotFoundException, RepositoryException {
-    public PropertyInfo getPropertyInfo(SessionInfo sessionInfo, PropertyId propertyId) throws PathNotFoundException, RepositoryException {
+    public PropertyInfo getPropertyInfo(SessionInfo sessionInfo, PropertyId propertyId) throws ItemNotFoundException, RepositoryException {
+                    method.releaseConnection();
+
+            String uri = getItemUri(targetId, sessionInfo);
-                String uri = getItemUri(targetId, sessionInfo);
+                // first unsubscribe in order to retrieve the events
+                String subscrUri = (targetId.denotesNode() ? uri : getItemUri(((PropertyId) targetId).getParentId(), sessionInfo));
+                EventIterator events = poll(subscrUri, subscriptionId, sessionInfo);
+                unsubscribe(subscrUri, subscriptionId, sessionInfo);
+                return events;
+
+            } finally {
+                // make sure the lock initially created is removed again on the
+                // server.
-                method.setRequestBody(new TransactionInfo(commit));
-
-                client.executeMethod(method);
-                method.checkSuccess();
-
-                // retrieve events && unsubscribe
-                String subscrUri = (targetId.denotesNode() ? uri : getItemUri(((PropertyId) targetId).getParentId(), sessionInfo));
-                EventIterator events = poll(subscrUri, subscriptionId, sessionInfo);
-                unsubscribe(subscrUri, subscriptionId, sessionInfo);
-
-                return events;
-            } catch (IOException e) {
-                throw new RepositoryException(e);
-            } catch (DavException e) {
-                throw ExceptionConverter.generate(e);
+                try {
+                    method.setRequestBody(new TransactionInfo(commit));
+                    client.executeMethod(method);
+                    method.checkSuccess();
+                } catch (IOException e) {
+                    throw new RepositoryException(e);
+                } catch (DavException e) {
+                    throw ExceptionConverter.generate(e);
+                } finally {
+                    // release UNLOCK method
+                    method.releaseConnection();
+                }

UPD43 UPD43 UPD34 UPD42 UPD42 MOV8 MOV21 INS54 INS8 INS8 MOV60 MOV60 MOV21 MOV41 MOV60 MOV60 MOV25 INS54 INS8 MOV12 MOV12 INS8 MOV21 MOV21 MOV21 INS21 INS21 INS32 INS32 INS42 INS42 INS42 INS42 DEL54 DEL8