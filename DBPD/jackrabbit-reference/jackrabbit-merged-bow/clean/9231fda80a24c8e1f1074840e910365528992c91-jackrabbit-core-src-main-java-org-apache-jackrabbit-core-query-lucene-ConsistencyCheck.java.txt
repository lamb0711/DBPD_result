JCR-3691: Search index consistency check logs unnecessary warnings for repairable errors

Don't throw away exception stack traces

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1539050 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.io.IOExceptionWithCause;
-                } else {
-                    if (!(e instanceof IOException)) {
-                        e = new IOException(e.getMessage());
-                    }
+                } else if (e instanceof IOException) {
+                } else {
+                    throw new IOExceptionWithCause(e);
-         * @throws IOException if an error occurs while repairing.
+         * @throws Exception if an error occurs while repairing.
-        public void repair() throws IOException {
+        public void repair() throws Exception {
-                try {
-                    NodeState n = (NodeState) stateMgr.getItemState(ancestorId);
-                    log.info("Repairing missing node " + getPath(n) + " (" + ancestorId + ")");
-                    Document d = index.createDocument(n);
-                    index.addDocument(d);
-                    nodeIds.put(n.getNodeId(), Boolean.TRUE);
-                    ancestorId = n.getParentId();
-                } catch (ItemStateException e) {
-                    throw new IOException(e.toString());
-                } catch (RepositoryException e) {
-                    throw new IOException(e.toString());
-                }
+                NodeState n = (NodeState) stateMgr.getItemState(ancestorId);
+                log.info("Repairing missing node " + getPath(n) + " (" + ancestorId + ")");
+                Document d = index.createDocument(n);
+                index.addDocument(d);
+                nodeIds.put(n.getNodeId(), Boolean.TRUE);
+                ancestorId = n.getParentId();
-        public void repair() throws IOException {
+        public void repair() {
-        void repair() throws IOException {
+        void repair() throws Exception {
-            } catch (ItemStateException e) {
-                throw new IOException(e.toString());
-            } catch (RepositoryException e) {
-                throw new IOException(e.toString());
-        public void repair() throws IOException {
+        public void repair() throws Exception {
-            } catch (ItemStateException e) {
-                throw new IOException(e.toString());
-            } catch (RepositoryException e) {
-                throw new IOException(e.toString());
-        void repair() throws IOException {
+        void repair() throws Exception {
-            } catch (RepositoryException e) {
-                throw new IOException(e.toString());
-            } catch (ItemStateException e) {
-                throw new IOException(e.toString());

INS26 INS40 UPD43 MOV8 UPD43 UPD43 UPD43 UPD42 MOV60 INS61 UPD42 UPD42 UPD42 UPD42 MOV27 MOV8 INS25 MOV62 INS8 MOV8 MOV53 INS53 INS14 UPD43 MOV43 INS42 UPD42 DEL42 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL36 DEL38 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL61 DEL8 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12