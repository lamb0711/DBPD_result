JCR-2272: Errors during concurrent session import of nodes with same UUIDs

Merge changes back to trunk.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1176546 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.id.NodeIdFactory;
-    private final UpdatableItemStateManager stateMgr;
+    private final LocalItemStateManager stateMgr;
-    public NodeState createNew(NodeId id, Name nodeTypeName,
-                               NodeId parentId)
-            throws IllegalStateException {
+    public NodeState createNew(
+            NodeId id, Name nodeTypeName, NodeId parentId)
+            throws RepositoryException {
-     * Customized variant of {@link #createNew(NodeId, Name, NodeId)} that
-     * connects the newly created persistent state with the transient state.
-     */
-    public NodeState createNew(NodeState transientState)
-            throws IllegalStateException {
-
-        NodeState persistentState = createNew(transientState.getNodeId(),
-                transientState.getNodeTypeName(),
-                transientState.getParentId());
-        transientState.connect(persistentState);
-        return persistentState;
-    }
-
-    /**
-            throws IllegalStateException {
-
+            throws ItemStateException {
-     * @throws ItemStateException
+     * @throws RepositoryException
-            throws ItemStateException {
+            throws RepositoryException {
+        if (initialStatus == ItemState.STATUS_NEW && id != null
+                && hasItemState(id)) {
+            throw new InvalidItemStateException(
+                    "Node " + id + " already exists");
+        }
+
-            if (transientStore.containsKey(id)) {
-                String msg = "there's already a node state instance with id " + id;
-                log.debug(msg);
-                throw new ItemStateException(msg);
+            if (id == null) {
+                id = stateMgr.getNodeIdFactory().newNodeId();
+            } else if (transientStore.containsKey(id)) {
+                throw new RepositoryException(
+                        "There is already a transient state for node " + id);
-            NodeState state = new NodeState(id, nodeTypeName, parentId,
-                    initialStatus, true);
+            NodeState state = new NodeState(
+                    id, nodeTypeName, parentId, initialStatus, true);
-    public NodeIdFactory getNodeIdFactory() {
-        return stateMgr.getNodeIdFactory();
+    /**
+     * Pushes the given transient state to the change log so it'll be
+     * persisted when the change log is committed. The transient state
+     * is replaced with the local state that has been pushed to the
+     * change log.
+     *
+     * @param transientState transient state
+     * @return the local state to be persisted
+     * @throws RepositoryException if the transiet state can not be persisted
+     */
+    public NodeState makePersistent(NodeState transientState)
+            throws RepositoryException {
+        NodeState localState = stateMgr.getOrCreateLocalState(transientState);
+
+        synchronized (localState) {
+            // copy state from transient state:
+            localState.copy(transientState, true);
+            // make state persistent
+            store(localState);
+        }
+
+        // disconnect the transient item state
+        disconnectTransientItemState(transientState);
+
+        return localState;

MOV31 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 INS25 INS65 INS65 INS65 INS65 UPD42 INS60 INS51 UPD42 INS27 INS8 INS66 UPD66 MOV66 INS66 INS66 INS42 INS66 UPD66 MOV66 INS42 UPD66 MOV66 MOV43 INS59 INS42 INS8 UPD42 INS27 INS32 INS53 UPD42 MOV42 INS32 INS21 INS21 UPD42 UPD42 INS27 INS27 INS42 INS42 INS14 INS27 INS8 INS25 INS42 UPD42 MOV42 MOV42 INS32 INS32 INS42 INS40 INS42 INS33 INS43 INS27 MOV42 INS33 MOV21 MOV32 INS8 UPD42 MOV42 INS42 UPD42 MOV42 INS9 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS42 INS45 INS7 MOV53 INS42 INS32 MOV32 UPD42 MOV42 UPD43 INS27 UPD42 MOV42 UPD42 MOV42 UPD42 INS45 INS42 DEL40 DEL26 DEL32 DEL42 DEL42 DEL43 DEL42 DEL45 DEL27 DEL59 DEL60 DEL8 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL65 DEL42 DEL32 DEL32 DEL32 DEL32 DEL59 DEL60 DEL42 DEL83 DEL42 DEL43 DEL42 DEL41 DEL8 DEL31