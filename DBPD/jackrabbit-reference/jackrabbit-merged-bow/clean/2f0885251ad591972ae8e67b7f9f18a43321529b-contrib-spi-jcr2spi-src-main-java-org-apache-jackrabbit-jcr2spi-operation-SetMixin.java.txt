Refactoring

- separate hierarchy from ItemStates
- remove ItemStateManager
- move all hierarchy related classes to a separate package ('hierarchy')
- allow loading of deep Item without loading ancestors
- consequently item definition is only built upon usage, since parent is needed.
- minor fixes with adding/removing mixin-nodetypes

Consequences for SPI interfaces:

- SPI impl must be able to deal with both proper itemID and path, since jcr2spi
  might not be aware of a uniqueID defined with a parent node.

- ItemInfo.getPath added, in order to be able to built the missing hierarchy
  entries if a deep Item identified by uniqueID (plus ev. path) is loaded

- LockInfo.getNodeId added, in order to be able to determine the lock-holding node.




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@506927 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.hierarchy.PropertyEntry;
+import org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntry;
+import org.apache.jackrabbit.jcr2spi.config.CacheBehaviour;
-        if (nodeState.hasPropertyName(QName.JCR_MIXINTYPES)) {
+        PropertyEntry pe = ((NodeEntry) nodeState.getHierarchyEntry()).getPropertyEntry(QName.JCR_MIXINTYPES);
+        if (pe != null) {
-                addAffectedItemState(nodeState.getPropertyState(QName.JCR_MIXINTYPES));
+                addAffectedItemState(pe.getPropertyState());
-     * @see Operation#persisted()
+     * @see Operation#persisted(CacheBehaviour)
+     * @param cacheBehaviour
-    public void persisted() {
+    public void persisted(CacheBehaviour cacheBehaviour) {

INS26 INS26 INS26 INS40 INS40 INS40 INS44 INS60 INS25 INS65 INS43 INS42 INS43 INS59 INS27 MOV8 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS69 INS36 UPD42 MOV42 MOV40 INS43 INS11 INS42 INS43 INS32 INS42 MOV42 INS42 UPD42 DEL40 DEL32 DEL25