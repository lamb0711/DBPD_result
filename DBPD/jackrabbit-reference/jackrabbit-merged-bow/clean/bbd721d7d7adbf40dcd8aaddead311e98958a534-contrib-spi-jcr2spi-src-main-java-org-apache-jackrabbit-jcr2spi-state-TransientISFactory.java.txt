JCR-999  SPI: provide batch read functionality
JCR-1000 JCR2SPI: remove duplicate item states

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@552873 13f79535-47bb-0310-9956-ffa450edef68

-        NodeState nodeState = new NodeState(entry, nodetypeName, QName.EMPTY_ARRAY, definition, Status.NEW, false, this, defProvider);
+        NodeState nodeState = new NodeState(entry, nodetypeName, QName.EMPTY_ARRAY, this, definition, defProvider);
-        PropertyState propState = new PropertyState(entry, definition.isMultiple(), definition, Status.NEW, false, this, defProvider);
+        PropertyState propState = new PropertyState(entry, this, definition, defProvider);
-        // retrieve state to overlay
-        NodeState overlayedState = workspaceStateFactory.createRootState(entry);
-        return buildNodeState(overlayedState, Status.EXISTING);
+        NodeState state = workspaceStateFactory.createRootState(entry);
+        notifyCreated(state);
+
+        return state;
-        // retrieve state to overlay
-        NodeState overlayedState = workspaceStateFactory.createNodeState(nodeId, entry);
-        return buildNodeState(overlayedState, getInitialStatus(entry.getParent()));
+        NodeState state = workspaceStateFactory.createNodeState(nodeId, entry);
+        notifyCreated(state);
+
+        return state;
-        NodeState overlayedState = workspaceStateFactory.createDeepNodeState(nodeId, anyParent);
-        return buildNodeState(overlayedState, getInitialStatus(anyParent));
+        NodeState state = workspaceStateFactory.createDeepNodeState(nodeId, anyParent);
+        notifyCreated(state);
+
+        return state;
-        // retrieve state to overlay
-        PropertyState overlayedState = workspaceStateFactory.createPropertyState(propertyId, entry);
-        return buildPropertyState(overlayedState, getInitialStatus(entry.getParent()));
+
+        PropertyState state = workspaceStateFactory.createPropertyState(propertyId, entry);
+        notifyCreated(state);
+
+        return state;
+
-        PropertyState overlayedState = workspaceStateFactory.createDeepPropertyState(propertyId, anyParent);
-        return buildPropertyState(overlayedState, getInitialStatus(anyParent));
+        PropertyState state = workspaceStateFactory.createDeepPropertyState(propertyId, anyParent);
+        notifyCreated(state);
+
+        return state;
-
-        NodeState workspaceState = (NodeState) nodeState.getWorkspaceState();
-        return workspaceStateFactory.getNodeReferences(workspaceState);
-    }
-
-    //------------------------------------------------------------< private >---
-    /**
-     *
-     * @param overlayed
-     * @return
-     */
-    private NodeState buildNodeState(NodeState overlayed, int initialStatus) {
-        NodeState nodeState = new NodeState(overlayed, initialStatus, this);
-
-        notifyCreated(nodeState);
-        return nodeState;
-    }
-
-
-    /**
-     *
-     * @param overlayed
-     * @return
-     */
-    private PropertyState buildPropertyState(PropertyState overlayed, int initialStatus) {
-        PropertyState propState = new PropertyState(overlayed, initialStatus, this);
-
-        notifyCreated(propState);
-        return propState;
-    }
-
-    /**
-     *
-     * @param parent
-     * @return
-     */
-    private static int getInitialStatus(NodeEntry parent) {
-        int status = Status.EXISTING;
-        // walk up hiearchy and check if any of the parents is transiently
-        // removed, in which case the status must be set to EXISTING_REMOVED.
-        while (parent != null) {
-            if (parent.getStatus() == Status.EXISTING_REMOVED) {
-                status = Status.EXISTING_REMOVED;
-                break;
-            }
-            parent = parent.getParent();
-        }
-        return status;
+        return workspaceStateFactory.getNodeReferences(nodeState);

INS21 INS41 INS21 INS41 INS21 INS41 INS21 INS41 INS21 INS41 MOV43 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 INS52 MOV43 INS52 INS42 DEL40 DEL9 DEL52 DEL42 DEL42 DEL32 DEL42 DEL40 DEL9 DEL52 DEL40 DEL32 DEL41 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL42 DEL42 DEL32 DEL32 DEL41 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL42 DEL42 DEL32 DEL32 DEL41 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL52 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL42 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL52 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL42 DEL65 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL40 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL40 DEL27 DEL42 DEL40 DEL7 DEL21 DEL10 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL61 DEL42 DEL41 DEL8 DEL31