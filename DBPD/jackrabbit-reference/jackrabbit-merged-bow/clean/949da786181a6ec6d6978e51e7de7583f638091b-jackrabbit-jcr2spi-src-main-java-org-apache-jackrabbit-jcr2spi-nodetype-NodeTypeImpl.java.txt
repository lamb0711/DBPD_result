JCR-2156: Usage of "qualified name" in JavaDoc and Comments



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785631 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.QValueFactory;
-import javax.jcr.ValueFactory;
-     * ValueFactory used to convert JCR values from one type to another in order
-     * to determine whether a property specified by name and value(s) would be
-     * allowed.
-     *
-     * @see NodeType#canSetProperty(String, Value)
-     * @see NodeType#canSetProperty(String, Value[])
-     * @return ValueFactory used to convert JCR values.
-     * @throws javax.jcr.RepositoryException If an error occurs.
-     */
-    private ValueFactory valueFactory() throws RepositoryException {
-        return mgrProvider.getJcrValueFactory();
-    }
-
-    /**
-     * ValueFactory used to convert JCR values to qualified ones in order to
-     * determine value constraints within the NodeType interface.
-     *
-     * @return ValueFactory used to convert JCR values to qualified ones.
-     * @throws javax.jcr.RepositoryException If an error occurs.
-     */
-    private QValueFactory qValueFactory() throws RepositoryException {
-        return mgrProvider.getQValueFactory();
-    }
-
-    /**
-     * @return the qualified definition
+     * @return the internal node type definition.
-                v =  ValueHelper.convert(value, def.getRequiredType(), valueFactory());
+                v =  ValueHelper.convert(value, def.getRequiredType(), mgrProvider.getJcrValueFactory());
-            QValue qValue = ValueFormat.getQValue(v, resolver(), qValueFactory());
+            QValue qValue = ValueFormat.getQValue(v, resolver(), mgrProvider.getQValueFactory());
-                    Value v = ValueHelper.convert(values[i], targetType, valueFactory());
-                    QValue qValue = ValueFormat.getQValue(v, resolver(), qValueFactory());
+                    Value v = ValueHelper.convert(values[i], targetType, mgrProvider.getJcrValueFactory());
+                    QValue qValue = ValueFormat.getQValue(v, resolver(), mgrProvider.getQValueFactory());

UPD66 MOV32 MOV32 INS42 UPD42 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL66 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL65 DEL66 DEL65 DEL40 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL40 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL41 DEL8 DEL31 DEL42 DEL32 DEL42 DEL32