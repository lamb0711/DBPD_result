JCR-2836: Unclosed threads in Jackrabbit

Remove the use of ThreadLocal variables in PerQueryCache to avoid leaking memory in container environments.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1055117 13f79535-47bb-0310-9956-ffa450edef68

+    private final PerQueryCache cache = new PerQueryCache();
+
-            PerQueryCache.getInstance().dispose();
-                fieldname, index.getTextAnalyzer(), index.getSynonymProvider());
+                fieldname, index.getTextAnalyzer(),
+                index.getSynonymProvider(), cache);
-        return Util.createMatchAllQuery(propName, index.getIndexFormatVersion());
+        return Util.createMatchAllQuery(
+                propName, index.getIndexFormatVersion(), cache);
-                    field, index.getTextAnalyzer(), index.getSynonymProvider());
+                    field, index.getTextAnalyzer(),
+                    index.getSynonymProvider(), cache);
-        return Util.createMatchAllQuery(name, index.getIndexFormatVersion());
+        return Util.createMatchAllQuery(
+                name, index.getIndexFormatVersion(), cache);
-            return new WildcardQuery(PROPERTIES, field, string, transform);
+            return new WildcardQuery(PROPERTIES, field, string, transform, cache);
-            return new RangeQuery(term, getTerm(field, "\uFFFF"), false, transform);
+            return new RangeQuery(term, getTerm(field, "\uFFFF"), false, transform, cache);
-            return new RangeQuery(term, getTerm(field, "\uFFFF"), true, transform);
+            return new RangeQuery(term, getTerm(field, "\uFFFF"), true, transform, cache);
-            return new RangeQuery(getTerm(field, ""), term, false, transform);
+            return new RangeQuery(getTerm(field, ""), term, false, transform, cache);
-            return new RangeQuery(getTerm(field, ""), term, true, transform);
+            return new RangeQuery(getTerm(field, ""), term, true, transform, cache);
-                    field, index.getIndexFormatVersion()), SHOULD);
+                    field, index.getIndexFormatVersion(), cache), SHOULD);

INS23 INS83 INS83 INS43 INS59 INS42 INS42 INS14 MOV25 INS43 MOV32 MOV8 INS42 INS42 INS42 MOV32 INS42 MOV32 INS42 MOV32 INS25 INS42 UPD9 INS42 MOV32 INS8 MOV25 MOV32 UPD9 INS42 INS41 UPD9 INS42 INS14 MOV43 MOV32 INS42 INS9 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL9 DEL42 DEL14 DEL41 DEL8 DEL25