jcr-97: Improve Checkstyle conformance

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@312896 13f79535-47bb-0310-9956-ffa450edef68

- * Set a property value with the content of the given files. The PropertyType
- * may be specified.
+ * Set a <code>Property</code> <code>Value</code> with the content of the
+ * given file.
-public class SetPropertyFromFile extends AbstractSetProperty
-{
-	/** logger */
-	private static Log log = LogFactory.getLog(SetPropertyFromFile.class);
+public class SetPropertyFromFile extends AbstractSetProperty {
+    /** logger */
+    private static Log log = LogFactory.getLog(SetPropertyFromFile.class);
-	/**
-	 * @inheritDoc
-	 */
-	public boolean execute(Context ctx) throws Exception
-	{
-		String value = (String) ctx.get(this.valueKey);
-		String name = (String) ctx.get(this.nameKey);
-		String propertyType = (String) ctx.get(this.typeKey);
-		String parent = (String) ctx.get(this.parentPathKey);
+    /**
+     * {@inheritDoc}
+     */
+    public boolean execute(Context ctx) throws Exception {
+        String value = (String) ctx.get(this.valueKey);
+        String name = (String) ctx.get(this.nameKey);
+        String propertyType = (String) ctx.get(this.typeKey);
+        String parent = (String) ctx.get(this.parentPathKey);
-		Node node = CommandHelper.getNode(ctx, parent);
+        Node node = CommandHelper.getNode(ctx, parent);
-		if (log.isDebugEnabled())
-		{
-			log.debug("setting property " + node.getPath() + "/" + name
-					+ " with content of file " + value);
-		}
+        if (log.isDebugEnabled()) {
+            log.debug("setting property " + node.getPath() + "/" + name
+                    + " with content of file " + value);
+        }
-		File f = new File(value);
-		if (!f.exists())
-		{
-			throw new CommandException("exception.file.not.found", new String[]
-			{ value });
-		}
-		if (propertyType.equals(PropertyType.TYPENAME_BINARY))
-		{
-			node.setProperty(name, new FileInputStream(f));
-		} else
-		{
-			CharArrayWriter cw = new CharArrayWriter();
-			PrintWriter out = new PrintWriter(cw);
-			BufferedReader in = new BufferedReader(new FileReader(f));
-			String str;
-			while ((str = in.readLine()) != null)
-			{
-				out.println(str);
-			}
-			in.close();
-			node.setProperty(name, cw.toString(), PropertyType
-					.valueFromName(propertyType));
-		}
-		return false;
-	}
+        File f = new File(value);
+        if (!f.exists()) {
+            throw new CommandException("exception.file.not.found",
+                new String[] {
+                    value
+                });
+        }
+        if (propertyType.equals(PropertyType.TYPENAME_BINARY)) {
+            node.setProperty(name, new FileInputStream(f));
+        } else {
+            CharArrayWriter cw = new CharArrayWriter();
+            PrintWriter out = new PrintWriter(cw);
+            BufferedReader in = new BufferedReader(new FileReader(f));
+            String str;
+            while ((str = in.readLine()) != null) {
+                out.println(str);
+            }
+            in.close();
+            node.setProperty(name, cw.toString(), PropertyType
+                .valueFromName(propertyType));
+        }
+        return false;
+    }

UPD66 UPD66 INS65 INS65 DEL65