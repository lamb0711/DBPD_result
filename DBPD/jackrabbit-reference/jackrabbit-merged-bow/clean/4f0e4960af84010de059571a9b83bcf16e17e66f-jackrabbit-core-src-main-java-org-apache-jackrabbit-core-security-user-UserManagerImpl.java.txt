JCR-3118 : Configurable actions upon authorizable creation and removal

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1187257 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.user.action.AuthorizableAction;
+    /**
+     * The membership cache.
+     */
+     * Authorizable actions that will all be executed upon creation and removal
+     * of authorizables in the order they are contained in the array.<p/>
+     * Note, that if {@link #isAutoSave() autosave} is turned on, the configured
+     * actions are executed before persisting the creation or removal.
+     */
+    private AuthorizableAction[] authorizableActions = new AuthorizableAction[0];
+
+    /**
+    /**
+     * Set the authorizable actions that will be invoked upon authorizable
+     * creation and removal.
+     *
+     * @param authorizableActions An array of authorizable actions.
+     */
+    public void setAuthorizableActions(AuthorizableAction[] authorizableActions) {
+        if (authorizableActions != null) {
+            this.authorizableActions = authorizableActions;
+        }
+    }
+
+            onCreate(user);
+            onCreate(group);
+    //--------------------------------------------------------------------------
+    /**
+     * Let the configured <code>AuthorizableAction</code>s perform additional
+     * tasks associated with the creation of the new authorizable before the
+     * corresponding new node is persisted.
+     *
+     * @param authorizable The new authorizable.
+     * @throws RepositoryException If an exception occurs.
+     */
+    void onCreate(Authorizable authorizable) throws RepositoryException {
+        for (AuthorizableAction action : authorizableActions) {
+            action.onCreate(authorizable, session);
+        }
+    }
+
+    /**
+     * Let the configured <code>AuthorizableAction</code>s perform any clean
+     * up tasks related to the authorizable removal (before the corresponding
+     * node gets removed).
+     *
+     * @param authorizable The authorizable to be removed.
+     * @throws RepositoryException If an exception occurs.
+     */
+    void onRemove(Authorizable authorizable) throws RepositoryException {
+        for (AuthorizableAction action : authorizableActions) {
+            action.onRemove(authorizable, session);
+        }
+    }
+

INS26 INS40 INS23 INS31 INS31 INS31 INS29 INS29 INS83 INS5 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS39 INS42 INS44 INS43 INS8 INS29 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS43 INS85 INS42 INS3 INS65 INS65 INS5 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS42 INS70 INS65 INS65 INS65 INS43 INS42 INS42 INS70 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS5 INS34 INS66 INS66 INS42 INS66 INS43 INS85 INS27 INS8 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS44 INS42 INS8 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS44 INS42 INS8 INS68 INS66 INS43 INS85 INS42 INS42 INS33 INS21 INS21 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS7 INS32 INS32 INS42 INS32 INS42 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42