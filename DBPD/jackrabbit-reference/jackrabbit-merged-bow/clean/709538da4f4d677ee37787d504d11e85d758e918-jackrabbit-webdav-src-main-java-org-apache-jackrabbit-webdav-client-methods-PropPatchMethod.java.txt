JCR-4064: Refactor WebDAV related code out of HttpClient3-specific classes for better future re-use

move PROPPATCH request building into separate *Info class

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1772049 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.util.List;
+
+import org.apache.commons.httpclient.HttpConnection;
+import org.apache.commons.httpclient.HttpState;
+import org.apache.jackrabbit.webdav.DavException;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameSet;
-import org.apache.jackrabbit.webdav.property.DavPropertySet;
-import org.apache.jackrabbit.webdav.property.DavPropertyName;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameIterator;
-import org.apache.jackrabbit.webdav.property.DavProperty;
-import org.apache.jackrabbit.webdav.property.PropEntry;
-import org.apache.jackrabbit.webdav.DavException;
-import org.apache.jackrabbit.webdav.xml.DomUtil;
-import org.apache.commons.httpclient.HttpState;
-import org.apache.commons.httpclient.HttpConnection;
+import org.apache.jackrabbit.webdav.property.DavPropertyName;
+import org.apache.jackrabbit.webdav.property.DavPropertyNameIterator;
+import org.apache.jackrabbit.webdav.property.DavPropertyNameSet;
+import org.apache.jackrabbit.webdav.property.DavPropertySet;
+import org.apache.jackrabbit.webdav.property.PropEntry;
+import org.apache.jackrabbit.webdav.property.ProppatchInfo;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-
-import javax.xml.parsers.ParserConfigurationException;
-import java.io.IOException;
-import java.util.List;
-    private final DavPropertyNameSet propertyNames = new DavPropertyNameSet();
-
+    private DavPropertyNameSet propertyNames;
-        if (changeList == null || changeList.isEmpty()) {
-            throw new IllegalArgumentException("PROPPATCH cannot be executed without properties to be set or removed.");
-        }
-        try {
-            Document document = DomUtil.createDocument();
-            Element propUpdateElement = DomUtil.addChildElement(document, XML_PROPERTYUPDATE, NAMESPACE);
-
-            Element propElement = null;
-            boolean isSet = false;
-            for (Object entry : changeList) {
-                if (entry instanceof DavPropertyName) {
-                    // DAV:remove
-                    DavPropertyName removeName = (DavPropertyName) entry;
-                    if (propElement == null || isSet) {
-                        isSet = false;
-                        propElement = getPropElement(propUpdateElement, isSet);
-                    }
-                    propElement.appendChild(removeName.toXml(document));
-                    propertyNames.add(removeName);
-                } else if (entry instanceof DavProperty) {
-                    // DAV:set
-                    DavProperty<?> setProperty = (DavProperty<?>) entry;
-                    if (propElement == null || !isSet) {
-                        isSet = true;
-                        propElement = getPropElement(propUpdateElement, isSet);
-                    }
-                    propElement.appendChild(setProperty.toXml(document));
-                    propertyNames.add(setProperty.getName());
-                } else {
-                    throw new IllegalArgumentException("ChangeList may only contain DavPropertyName and DavProperty elements.");
-                }
-            }
-            setRequestBody(document);
-        } catch (ParserConfigurationException e) {
-            throw new IOException(e.getMessage());
-        }
+        ProppatchInfo info = new ProppatchInfo(changeList);
+        setRequestBody(info);
+        this.propertyNames = info.getAffectedProperties();
-        if (setProperties == null || removeProperties == null) {
-            throw new IllegalArgumentException("Neither setProperties nor removeProperties must be null.");
-        }
-        if (setProperties.isEmpty() && removeProperties.isEmpty()) {
-            throw new IllegalArgumentException("Either setProperties or removeProperties can be empty; not both of them.");
-        }
-
-        propertyNames.addAll(removeProperties);
-        for (DavPropertyName setName : setProperties.getPropertyNames()) {
-            propertyNames.add(setName);
-        }
-
-        try {
-            Document document = DomUtil.createDocument();
-            Element propupdate = DomUtil.addChildElement(document, XML_PROPERTYUPDATE, NAMESPACE);
-            // DAV:set
-            if (!setProperties.isEmpty()) {
-                Element set = DomUtil.addChildElement(propupdate, XML_SET, NAMESPACE);
-                set.appendChild(setProperties.toXml(document));
-            }
-            // DAV:remove
-            if (!removeProperties.isEmpty()) {
-                Element remove = DomUtil.addChildElement(propupdate, XML_REMOVE, NAMESPACE);
-                remove.appendChild(removeProperties.toXml(document));
-            }
-            setRequestBody(document);
-        } catch (ParserConfigurationException e) {
-            throw new IOException(e.getMessage());
-        }
-    }
-
-    private Element getPropElement(Element propUpdate, boolean isSet) {
-        Element updateEntry = DomUtil.addChildElement(propUpdate, (isSet) ? XML_SET : XML_REMOVE , NAMESPACE);
-        return DomUtil.addChildElement(updateEntry, XML_PROP, NAMESPACE);
+        ProppatchInfo info = new ProppatchInfo(setProperties, removeProperties);
+        setRequestBody(info);
+        this.propertyNames = info.getAffectedProperties();

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV23 UPD40 INS8 MOV46 MOV60 MOV21 MOV21 INS60 MOV21 INS21 UPD43 INS32 INS43 INS59 INS7 UPD42 UPD42 INS14 UPD42 MOV42 UPD42 MOV42 INS22 UPD42 MOV42 INS42 INS14 UPD42 INS22 INS32 INS43 INS42 INS52 INS42 UPD42 UPD42 INS43 INS42 INS42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL14 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL7 DEL42 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL62 DEL42 DEL33 DEL27 DEL42 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL43 DEL76 DEL74 DEL42 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL38 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL25 DEL8 DEL70 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL36 DEL42 DEL42 DEL16 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31