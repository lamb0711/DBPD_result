JCR-1104 - JSR 283 support
- shareble nodes (work in progress)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638398 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.UnsupportedRepositoryOperationException;
-public abstract class ItemImpl implements Item, ItemStateListener {
+public abstract class ItemImpl implements Item {
+    
+    /**
+     * Process all items given in iterator and check whether <code>mix:shareable</code>
+     * or (some derived node type) has been added or removed:
+     * <ul>
+     * <li>If the mixin <code>mix:shareable</code> (or some derived node type),
+     * then initialize the shared set inside the state.</li>
+     * <li>If the mixin <code>mix:shareable</code> (or some derived node type)
+     * has been removed, throw.</li>
+     * </ul>
+     */
+    private void processShareableNodes(Iterator iter) throws RepositoryException {
+        NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+        ItemValidator validator = new ItemValidator(ntMgr.getNodeTypeRegistry(),
+                session.getHierarchyManager(), session);
+        while (iter.hasNext()) {
+            ItemState is = (ItemState) iter.next();
+            if (is.isNode()) {
+                NodeState ns = (NodeState) is;
+                boolean wasShareable = false;
+                if (ns.hasOverlayedState()) {
+                    NodeState old = (NodeState) ns.getOverlayedState();
+                    EffectiveNodeType ntOld = validator.getEffectiveNodeType(old);
+                    wasShareable = ntOld.includesNodeType(NameConstants.MIX_SHAREABLE);
+                }
+                EffectiveNodeType ntNew = validator.getEffectiveNodeType(ns);
+                boolean isShareable = ntNew.includesNodeType(NameConstants.MIX_SHAREABLE);
+
+                if (!wasShareable && isShareable) {
+                    // mix:shareable has been added
+                    ns.addShare(ns.getParentId());
+                    
+                } else if (wasShareable && !isShareable) {
+                    // mix:shareable has been removed: not supported
+                    String msg = "Removing mix:shareable is not supported.";
+                    log.debug(msg);
+                    throw new UnsupportedRepositoryOperationException(msg);
+                }
+            }
+        }
+    }
-                                dependentIDs.add(oldParentId);
+                                if (overlayedState.isShareable()) {
+                                    dependentIDs.addAll(overlayedState.getSharedSet());
+                                } else {
+                                    dependentIDs.add(oldParentId);
+                                }
+                
+                // process transient items that have change in mixins
+                processShareableNodes(dirty.iterator());

INS26 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS43 INS42 INS42 INS60 INS60 INS61 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS60 INS25 INS42 INS42 INS43 INS32 INS32 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS11 INS42 INS42 INS60 INS60 INS25 INS60 INS60 INS25 INS21 INS43 INS32 INS43 INS59 INS39 INS59 INS32 INS8 INS43 INS59 INS39 INS59 INS27 INS8 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS9 INS42 INS42 INS60 INS60 INS21 INS42 INS42 INS32 INS42 INS32 INS38 INS42 INS21 INS27 INS8 INS42 INS32 INS43 INS42 INS43 INS59 INS43 INS59 INS7 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS38 INS60 INS21 INS53 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS14 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS8 INS25 INS32 INS8 MOV8 INS42 INS42 INS21 INS32 INS42 INS42 INS32 INS42 INS42 DEL43