FELIX-1107 ObjectIterator may return null, which is not readily expected from an Iterator

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@572347 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.NoSuchElementException;
+import javax.jcr.RepositoryException;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.jackrabbit.ocm.exception.ObjectContentManagerException;
- * ObjectIterator is a wrapper class for JCR NodeIterator
+ * ObjectIterator is a wrapper class for JCR NodeIterator, which returns
+ * mapped objects. Note, though, that this iterator may not return the same
+ * number of objects as the underlying node iterator as not all nodes may
+ * successfully be mapped to objects. Any problems mapping nodes to objects are
+ * logged at INFO level.
+ * <p>
+ * This Iterator implementation does not support removing elements, therefore
+ * the {@link #remove()} method throws a <code>UnsupportOperationException</code>.
+    private static final Log log = LogFactory.getLog(ObjectIterator.class);
+    
-	private Class objectClass;
-
+    private Object nextResult;
-	 * @param objectClass the object class used to instantiate the objects
-	public ObjectIterator(NodeIterator iterator, Class objectClass, ObjectConverter converter, Session session)
+	public ObjectIterator(NodeIterator iterator, ObjectConverter converter, Session session)
-		this.objectClass = objectClass;
+		
+		// get first result
+        seek();
-	/**
-	 * 
-	 * @see java.util.Iterator#hasNext()
-	 */
-	public boolean hasNext()
-	{
-		return nodeIterator.hasNext();
-	}
-	/**
-	 * 
-	 * @see java.util.Iterator#next()
-	 */
-	public Object next() 
-	{
+	public boolean hasNext() {
+        return nextResult != null;
+    }
+    
+	
+    public Object next() {
+        if (nextResult == null) {
+            throw new NoSuchElementException();
+        }
+        
+        Object result = nextResult;
+        seek();
+        return result;
+    }
-		try
-		{
-			Node node = nodeIterator.nextNode();
-			return objectConverter.getObject(session, node.getPath());
-		}
-		catch (Exception e)
-		{
-           return null;			
-		}
-
-	}
-
-	/**
-	 * 
-	 * @see java.util.Iterator#remove()
-	 */
-	public void remove()
-	{
-		nodeIterator.remove();
-	}
-
+    
+    public void remove() {
+        throw new UnsupportedOperationException();
+    }
+    
+    
+    private void seek() {
+        while (nodeIterator.hasNext()) {
+            try {
+                Node node = nodeIterator.nextNode();
+                Object value = objectConverter.getObject(session, node.getPath());
+                if (value != null) {
+                    nextResult = value;
+                    return;
+                }
+            } catch (RepositoryException re) {
+                log.info("Repository access issue trying to map node to an object", re);
+            } catch (ObjectContentManagerException ocme) {
+                log.info("Mapping Failure", ocme);
+            } catch (Throwable t) {
+                log.info("Unexpected Problem while trying to map a node to an object", t);
+            }
+        }
+        
+        // no more results
+        nextResult = null;
+    }

INS26 INS26 INS26 INS26 INS26 MOV23 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS83 UPD43 INS83 INS43 INS59 MOV21 MOV83 MOV39 MOV42 MOV8 INS43 INS83 INS39 INS42 INS8 UPD83 MOV83 MOV39 INS42 INS8 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS65 INS66 UPD42 INS42 INS32 INS42 INS42 INS42 INS25 INS60 INS21 MOV41 INS53 INS61 INS21 INS68 INS42 INS42 INS57 INS32 INS27 INS27 INS8 INS43 INS59 INS32 INS42 INS14 MOV32 INS8 INS7 INS42 INS43 INS42 INS42 INS33 INS42 INS33 INS53 INS42 INS42 INS42 INS42 INS43 INS54 INS42 INS33 INS42 INS14 INS42 MOV8 INS12 INS12 INS12 INS43 INS60 INS25 INS44 INS8 INS44 INS8 INS44 INS8 UPD42 MOV42 MOV43 INS59 INS27 INS8 INS43 INS42 MOV21 INS43 INS42 INS21 INS43 INS42 INS21 INS42 MOV32 INS42 INS33 INS21 MOV41 INS42 INS42 INS32 INS42 INS32 INS7 UPD42 INS42 INS45 UPD42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 DEL42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL40 DEL42 DEL68 DEL65 DEL29 DEL31 DEL40 DEL42 DEL68 DEL65 DEL29 DEL33 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL40 DEL42 DEL68 DEL65 DEL29 DEL42 DEL8 DEL31