refactor the version of createResource() which calls
resource.setIsCollection() so that the decision when to call that
method and the calculation of the value passed to it are delegated to
helper methods.

isCreateRequest() returns true if the request method signifies that a
resource needs to be created. this is the circumstance in which
resource.setIsCollection() needs to be called. the default
implementation of isCreateRequest() returns true when the method is
MKCOL, PUT or POST.

isCreateCollectionRequest() erturns true if the request method
signifies that a *collection* resource needs to be created. it is used
to decide whether to pass true or false to
resource.setIsCollection(). the default implementation returns true
when the method is MKCOL.

this refactoring allows subclasses to override/extend the logic used
for making these choices. for example, cosmo's
CosmoResourceFactoryImpl extends the methods to return true when the
http request method is MKCALENDAR.

we also add accessors for the lockManager and resourceConfig
attributes and make them non-final so that other objects can modify
them.


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@354822 13f79535-47bb-0310-9956-ffa450edef68

-    private final LockManager lockMgr;
-    private final ResourceConfig resourceConfig;
+    private LockManager lockMgr;
+    private ResourceConfig resourceConfig;
-     * manager and the default {@link DefaultResourceFilter resource filter}.
+     * manager and the default {@link ResourceConfig resource config}.
-        int methodCode = DavMethods.getMethodCode(request.getMethod());
-        if (methodCode == DavMethods.DAV_MKCOL || methodCode == DavMethods.DAV_PUT || methodCode == DavMethods.DAV_POST) {
-            if (!resource.exists()) {
-                boolean isCollection = DavMethods.getMethodCode(request.getMethod()) == DavMethods.DAV_MKCOL;
-                resource.setIsCollection(isCollection);
-            }
+        if (isCreateRequest(request) && ! resource.exists()) {
+            resource.setIsCollection(isCreateCollectionRequest(request));
+ 
+    /**
+     * Returns <code>true</code> if the request is to create a
+     * resource. True for <code>MKCOL</code>, <code>PUT</code> and
+     * <code>POST</code> requests.
+     */
+    protected boolean isCreateRequest(DavServletRequest request) {
+        int methodCode = DavMethods.getMethodCode(request.getMethod());
+        return (methodCode == DavMethods.DAV_MKCOL ||
+                methodCode == DavMethods.DAV_PUT ||
+                methodCode == DavMethods.DAV_POST);
+    }
+ 
+    /**
+     * Returns <code>true</code> if the request is to create a
+     * collection resource. True for <code>MKCOL</code> requests.
+     */
+    protected boolean isCreateCollectionRequest(DavServletRequest request) {
+        return (DavMethods.getMethodCode(request.getMethod()) ==
+                DavMethods.DAV_MKCOL);
+    }
+ 
+    /**
+     */
+    public LockManager getLockManager() {
+        return lockMgr;
+    }
+ 
+    /**
+     */
+    public void setLockManager(LockManager lockMgr) {
+        this.lockMgr = lockMgr;
+    }
+ 
+    /**
+     */
+    public ResourceConfig getResourceConfig() {
+        return resourceConfig;
+    }
+ 
+    /**
+     */
+    public void setResourceConfig(ResourceConfig resourceConfig) {
+        this.resourceConfig = resourceConfig;
+    }

INS31 INS31 INS31 INS31 INS31 INS31 INS8 INS29 INS83 INS39 INS42 INS44 MOV8 INS29 INS83 INS39 INS42 INS44 MOV8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 MOV60 INS25 MOV41 INS65 INS43 INS42 INS41 INS65 INS43 INS42 INS41 INS42 INS41 INS43 INS42 INS21 INS42 INS41 INS43 INS42 INS21 INS27 INS8 INS66 INS66 INS66 INS42 INS36 INS66 INS66 INS42 INS36 INS42 INS42 INS7 INS42 INS42 INS7 UPD42 UPD66 INS32 MOV38 INS21 MOV27 MOV27 INS22 INS42 INS22 INS42 INS42 INS42 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS42 DEL83 DEL83 DEL25 DEL8 DEL25 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21