JCR-2887 - Split PrivilegeRegistry in a per-session manager instance and a repository level registry  (WIP)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181645 13f79535-47bb-0310-9956-ffa450edef68

-        PrivilegeBits bts = PrivilegeBits.getInstance();
-        for (PrivilegeDefinition d : definitions) {
-            if (d instanceof Definition) {
-                bts.add(((Definition) d).bits);
-            }
+        switch (definitions.length) {
+            case 0:
+                return PrivilegeBits.EMPTY;
+
+            case 1:
+                if (definitions[0] instanceof Definition) {
+                    return ((Definition) definitions[0]).bits;
+                } else {
+                    return PrivilegeBits.EMPTY;
+                }
+
+            default:
+                PrivilegeBits bts = PrivilegeBits.getInstance();
+                for (PrivilegeDefinition d : definitions) {
+                    if (d instanceof Definition) {
+                        bts.add(((Definition) d).bits);
+                    }
+                }
+                return bts;
-        return bts;
+    }
+
+    /**
+     * Return the privilege bits for the specified privilege names.
+     *
+     * @param privilegeNames
+     * @return privilege bits.
+     */
+    PrivilegeBits getBits(Name... privilegeNames) {
+        switch (privilegeNames.length) {
+            case 0:
+                return PrivilegeBits.EMPTY;
+
+            case 1:
+                return getBits(privilegeNames[0]);
+
+            default:
+                PrivilegeBits bts = PrivilegeBits.getInstance();
+                for (Name privName : privilegeNames) {
+                    bts.add(getBits(privName));
+                }
+                return bts;
+        }
+    }
+
+    /**
+     * Return the privilege bits for the specified privilege name.
+     *
+     * @param privilegeName
+     * @return privilege bits.
+     */
+    PrivilegeBits getBits(Name privilegeName) {
+        Definition def = registeredPrivileges.get(privilegeName);
+        return (def == null) ? PrivilegeBits.EMPTY : def.bits;
-            Definition newAll = new Definition(NameConstants.JCR_ALL, false, allAggrNames, allbits.unmodifiable(), false);
+            Definition newAll = new Definition(NameConstants.JCR_ALL, false, allAggrNames, allbits, false);
-                this.bits = bits;
+                this.bits = bits.unmodifiable();

INS31 INS31 INS29 INS43 INS42 INS44 INS8 INS29 INS43 INS42 INS44 INS8 INS50 INS65 INS65 INS65 INS42 INS43 INS42 INS50 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS41 INS40 INS49 INS41 INS49 INS25 INS49 MOV60 MOV70 MOV41 INS66 INS42 INS66 INS42 INS40 INS49 INS41 INS49 INS41 INS49 INS60 INS70 INS41 INS66 INS42 INS66 INS42 INS43 INS59 INS16 INS34 INS40 INS34 INS62 INS8 INS8 INS34 INS40 INS34 INS32 INS43 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS32 INS36 INS40 INS40 INS2 INS43 INS41 INS41 INS42 INS2 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS27 MOV43 INS42 INS34 INS42 INS22 INS40 INS42 INS34 INS42 INS42 INS42 INS32 INS42 INS33 INS36 INS42 INS42 INS42 INS32 MOV43 INS42 INS32 INS11 INS42 INS42 INS42 INS42 INS43 INS2 INS42 INS42 INS34 DEL42 DEL42 DEL32 DEL42