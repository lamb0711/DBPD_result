JCR-4008: Restore TestCachingFDS.testDeleteRecord() to fix it with disabling AsyncUpload in unit tests

Patch from Woonsan Ko

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1759933 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.Executor;
+import java.util.concurrent.ExecutorService;
-    private ThreadPoolExecutor asyncWriteExecuter;
+    private Executor asyncWriteExecuter;
-        asyncWriteExecuter = (ThreadPoolExecutor) Executors.newFixedThreadPool(
-            10, new NamedThreadFactory("fs-write-worker"));
+        asyncWriteExecuter = createAsyncWriteExecutor();
-        asyncWriteExecuter.shutdownNow();
+        Executor asyncExecutor = getAsyncWriteExecutor();
+        if (asyncExecutor != null && asyncExecutor instanceof ExecutorService) {
+            ((ExecutorService) asyncExecutor).shutdownNow();
+        }
+     * Creates a {@link Executor}.
+     * This method is invoked during the initialization for asynchronous write/touch job executions.
+     * @return a {@link Executor}
+     */
+    protected Executor createAsyncWriteExecutor() {
+        Executor asyncExecutor;
+
+        if (store.getAsyncUploadLimit() > 0) {
+            asyncExecutor = Executors.newFixedThreadPool(10,
+                    new NamedThreadFactory("fs-write-worker"));
+        } else {
+            asyncExecutor = new ImmediateExecutor();
+        }
+
+        return asyncExecutor;
+    }
+
+    /**
+     * Returns ThreadPoolExecutor used to execute asynchronous write or touch jobs.
+     * @return ThreadPoolExecutor used to execute asynchronous write or touch jobs
+     */
+    protected Executor getAsyncWriteExecutor() {
+        return asyncWriteExecuter;
+    }
+
+    /**
+    /**
+     * This class implements {@link Executor} interface to run {@code command} right away,
+     * resulting in non-asynchronous mode executions.
+     */
+    private class ImmediateExecutor implements Executor {
+        @Override
+        public void execute(Runnable command) {
+            command.run();
+        }
+    }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS55 UPD43 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS42 INS43 INS31 UPD42 INS21 INS60 INS25 INS65 INS65 INS42 INS60 INS25 INS41 INS65 INS65 INS42 INS41 INS65 INS42 INS78 INS83 INS39 INS42 INS44 INS8 INS7 INS43 INS59 INS27 INS8 INS66 INS65 INS66 INS66 INS66 INS65 INS43 INS59 INS27 INS8 INS8 INS42 INS66 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS66 INS42 INS43 INS42 INS21 INS42 INS32 INS42 INS42 INS32 INS27 INS62 MOV21 INS42 INS42 INS42 INS42 INS32 INS34 MOV21 INS21 INS42 INS66 INS42 INS32 INS42 INS42 INS42 INS33 INS42 INS43 INS42 INS42 INS7 INS42 INS42 INS42 INS36 UPD42 MOV32 INS42 INS14 INS11 INS43 INS43 INS42 INS42 INS42 DEL42 DEL8 DEL42 DEL43 DEL11