JCR-2048: Workspace is shut down while creating initial index

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@761634 13f79535-47bb-0310-9956-ffa450edef68

-            initWorkspace((WorkspaceInfo) wspInfos.get(wspName));
+            ((WorkspaceInfo) wspInfos.get(wspName)).initialize();
-    private void initWorkspace(WorkspaceInfo wspInfo) throws RepositoryException {
-        // first initialize workspace info
-        if (!wspInfo.initialize()) {
-            // workspace has already been initialized, we're done
-            return;
-        }
-
-        // get system session and Workspace instance
-        SessionImpl sysSession = wspInfo.getSystemSession();
-        WorkspaceImpl wsp = (WorkspaceImpl) sysSession.getWorkspace();
-
-        /**
-         * todo implement 'System' workspace
-         * FIXME
-         * - there should be one 'System' workspace per repository
-         * - the 'System' workspace should have the /jcr:system node
-         * - versions, version history and node types should be reflected in
-         *   this system workspace as content under /jcr:system
-         * - all other workspaces should be dynamic workspaces based on
-         *   this 'read-only' system workspace
-         *
-         * for now, the jcr:system node is created in
-         * {@link org.apache.jackrabbit.core.state.SharedItemStateManager#createRootNodeState}
-         */
-
-        // register the repository as event listener for keeping repository statistics
-        wsp.getObservationManager().addEventListener(this,
-                Event.NODE_ADDED | Event.NODE_REMOVED
-                | Event.PROPERTY_ADDED | Event.PROPERTY_REMOVED,
-                "/", true, null, null, false);
-
-        // register SearchManager as event listener
-        SearchManager searchMgr = wspInfo.getSearchManager();
-        if (searchMgr != null) {
-            wsp.getObservationManager().addEventListener(searchMgr,
-                    Event.NODE_ADDED | Event.NODE_REMOVED
-                    | Event.PROPERTY_ADDED | Event.PROPERTY_REMOVED
-                    | Event.PROPERTY_CHANGED,
-                    "/", true, null, null, false);
-        }
-    }
-
-            initWorkspace(wspInfo);
+            wspInfo.initialize();
+                doPostInitialize();
+         * Initializes the search manager of this workspace info. This method
+         * is called while still holding the write lock on this workspace
+         * info, but {@link #initialized} is already set to <code>true</code>.
+         *
+         * @throws RepositoryException if the search manager could not be created
+         */
+        protected void doPostInitialize()
+                throws RepositoryException {
+            // get system Workspace instance
+            WorkspaceImpl wsp = (WorkspaceImpl) getSystemSession().getWorkspace();
+
+            /**
+             * todo implement 'System' workspace
+             * FIXME
+             * - there should be one 'System' workspace per repository
+             * - the 'System' workspace should have the /jcr:system node
+             * - versions, version history and node types should be reflected in
+             *   this system workspace as content under /jcr:system
+             * - all other workspaces should be dynamic workspaces based on
+             *   this 'read-only' system workspace
+             *
+             * for now, the jcr:system node is created in
+             * {@link org.apache.jackrabbit.core.state.SharedItemStateManager#createRootNodeState}
+             */
+
+            // register the repository as event listener for keeping repository statistics
+            wsp.getObservationManager().addEventListener(RepositoryImpl.this,
+                    Event.NODE_ADDED | Event.NODE_REMOVED
+                    | Event.PROPERTY_ADDED | Event.PROPERTY_REMOVED,
+                    "/", true, null, null, false);
+
+            // register SearchManager as event listener
+            SearchManager searchMgr = getSearchManager();
+            if (searchMgr != null) {
+                wsp.getObservationManager().addEventListener(searchMgr,
+                        Event.NODE_ADDED | Event.NODE_REMOVED
+                                | Event.PROPERTY_ADDED | Event.PROPERTY_REMOVED
+                                | Event.PROPERTY_CHANGED,
+                        "/", true, null, null, false);
+            }
+        }
+
+        /**

MOV31 INS29 UPD83 UPD42 INS65 INS65 INS66 INS66 INS66 INS65 INS66 INS42 INS66 MOV43 MOV32 INS21 INS67 INS36 UPD42 INS32 INS42 MOV43 INS42 MOV11 INS42 INS32 UPD42 MOV42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL38 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42