JCR-4001: When using Node.getProperties(String namePattern) also child nodes are processed

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1821597 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
-        nameGlobs = null;
+        this.nameGlobs = null;
-        namePattern = null;
+        this.namePattern = null;
-        Collection<Item> properties = new ArrayList<Item>();
-        node.accept(new ChildrenCollectorFilter(
-                namePattern, properties, false, true, 1));
+        Collection<Item> properties = Collections.emptySet();
+        PropertyIterator pit = node.getProperties();
+        while (pit.hasNext()) {
+            Property p = pit.nextProperty();
+            if (matches(p.getName(), namePattern)) {
+                properties = addToCollection(properties, p);
+            }
+        }
-    public static PropertyIterator collectProperties(
-            Node node, String[] nameGlobs) throws RepositoryException {
-        Collection<Item> properties = new ArrayList<Item>();
-        node.accept(new ChildrenCollectorFilter(
-                nameGlobs, properties, false, true, 1));
+    public static PropertyIterator collectProperties(Node node, String[] nameGlobs) throws RepositoryException {
+        Collection<Item> properties = Collections.emptySet();
+        PropertyIterator pit = node.getProperties();
+        while (pit.hasNext()) {
+            Property p = pit.nextProperty();
+            if (matches(p.getName(), nameGlobs)) {
+                properties = addToCollection(properties, p);
+            }
+        }
+    
+    private static Collection<Item> addToCollection(Collection<Item> c, Item p) {
+        Collection<Item> nc = c;
+        if (c.isEmpty()) {
+            nc = Collections.singleton(p);
+        } else if (c.size() == 1) {
+            nc = new ArrayList<Item>(c);
+            nc.add(p);
+        } else {
+            nc.add(p);
+        }
+
+        return nc;
+    }

INS26 INS40 INS31 INS31 MOV83 MOV83 MOV43 MOV42 MOV44 MOV44 MOV43 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS8 INS60 INS61 MOV41 MOV60 INS60 INS61 MOV41 INS43 INS43 INS74 INS42 INS43 INS42 INS60 INS25 INS41 INS43 INS59 INS32 INS8 INS43 INS59 INS32 INS8 INS42 INS42 INS43 INS43 INS42 INS74 INS59 INS32 INS8 INS25 INS42 INS22 INS22 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS60 INS25 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS60 INS25 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS21 INS27 INS8 INS8 INS52 INS42 INS52 INS42 INS42 INS42 MOV42 INS42 INS43 INS59 INS32 INS8 INS42 INS42 MOV42 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS7 INS32 INS34 INS21 INS21 INS21 UPD42 MOV42 INS42 INS32 INS42 INS32 INS42 INS21 UPD42 MOV42 INS42 INS32 INS42 INS32 INS42 INS21 INS42 INS32 INS42 INS42 INS7 INS32 INS32 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL43 DEL42 DEL42 DEL9 DEL9 DEL34 DEL14 DEL32 DEL21 DEL43 DEL42 DEL42 DEL9 DEL9 DEL34 DEL14 DEL32 DEL21 DEL8 DEL31