Extend from JackrabbitAccessControlList


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@810940 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.Value;
+import javax.jcr.PropertyType;
+
+import java.util.Map;
+import java.util.Collections;
+import java.util.HashMap;
+
+import org.apache.jackrabbit.api.security.JackrabbitAccessControlList;
-public class UnmodifiableAccessControlList implements AccessControlList {
+public class UnmodifiableAccessControlList implements JackrabbitAccessControlList {
+    private final Map<String, Integer> restrictions;
+
+    private final String path;
+
-        accessControlEntries = acl.getAccessControlEntries();
+        if (acl instanceof JackrabbitAccessControlList) {
+            JackrabbitAccessControlList jAcl = (JackrabbitAccessControlList) acl;
+            accessControlEntries = acl.getAccessControlEntries();
+            path = jAcl.getPath();
+            Map<String, Integer> r = new HashMap<String, Integer>();
+            for (String name: jAcl.getRestrictionNames()) {
+                r.put(name, jAcl.getRestrictionType(name));
+            }
+            restrictions = Collections.unmodifiableMap(r);
+        } else {
+            accessControlEntries = acl.getAccessControlEntries();
+            path = null;
+            restrictions = Collections.emptyMap();
+        }
+        path = null;
+        restrictions = Collections.emptyMap();
+
+    public String[] getRestrictionNames() {
+        return restrictions.keySet().toArray(new String[restrictions.size()]);
+    }
+
+    public int getRestrictionType(String restrictionName) {
+        if (restrictions.containsKey(restrictionName)) {
+            return restrictions.get(restrictionName);
+        } else {
+            return PropertyType.UNDEFINED;
+        }
+    }
+
+    public boolean isEmpty() {
+        return accessControlEntries.length == 0;
+    }
+
+    public int size() {
+        return accessControlEntries.length;
+    }
+
+    public boolean addEntry(Principal principal, Privilege[] privileges, boolean isAllow) throws AccessControlException, RepositoryException {
+        throw new AccessControlException("Unmodifiable ACL. Use AccessControlManager#getApplicablePolicies in order to obtain an modifiable ACL.");
+    }
+
+    public boolean addEntry(Principal principal, Privilege[] privileges, boolean isAllow, Map<String, Value> restrictions) throws AccessControlException, RepositoryException {
+        throw new AccessControlException("Unmodifiable ACL. Use AccessControlManager#getApplicablePolicies in order to obtain an modifiable ACL.");
+    }
+
+    public String getPath() {
+        return path;
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 UPD43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD42 INS83 INS83 INS74 INS59 INS83 INS83 INS43 INS59 INS8 INS83 INS5 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS8 INS43 INS43 INS43 INS42 INS42 INS42 INS25 INS21 INS21 INS43 INS85 INS41 INS43 INS42 INS25 INS41 INS41 INS43 INS42 INS5 INS42 INS39 INS42 INS42 INS42 INS53 INS43 INS42 INS5 INS42 INS39 INS42 INS74 INS42 INS42 INS42 INS53 INS42 INS41 INS42 INS42 INS42 INS62 INS8 MOV8 INS7 INS7 INS42 INS32 INS42 INS32 INS8 INS8 INS27 INS40 INS42 INS43 INS85 INS14 INS42 INS43 INS85 INS43 INS43 INS43 INS14 INS42 INS42 INS43 INS60 INS21 INS21 INS60 INS70 INS21 INS21 INS21 INS42 INS33 INS42 INS32 INS32 INS42 INS3 INS42 INS42 INS42 INS41 INS41 INS40 INS34 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS43 INS59 INS7 INS7 INS74 INS59 INS44 INS32 INS8 INS7 INS7 INS7 INS42 INS42 INS42 INS42 INS5 INS32 INS32 INS40 INS42 INS42 INS42 INS42 INS11 INS42 INS32 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS21 INS42 INS32 INS42 INS33 INS42 INS32 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42