JCR-314: Fine grained locking in SharedItemStateManager

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@605173 13f79535-47bb-0310-9956-ffa450edef68

+    /** Name of the ism locking configuration element. */
+    public static final String ISM_LOCKING_ELEMENT = "ISMLocking";
+
+     *     &lt;ISMLocking ...&gt;
+     * The ism locking configuration element is optional. If it is not given,
+     * then a default implementation is used.
+     * <p>
-        return new WorkspaceConfig(home, name, clustered, fsc, pmc, sc);
+        // Item state manager locking configuration (optional)
+        ISMLockingConfig ismLockingConfig = tmpParser.parseISMLockingConfig(root);
+
+        return new WorkspaceConfig(home, name, clustered, fsc, pmc, sc, ismLockingConfig);
+     * Parses ism locking configuration. ism locking configuration  uses the
+     * following format:
+     * <pre>
+     *   &lt;ISMLocking class="..."&gt;
+     *     &lt;param name="..." value="..."&gt;
+     *     ...
+     *   &lt;/ISMLocking&gt;
+     * </pre>
+     * <p/>
+     * The <code>ISMLocking</code> is a
+     * {@link #parseBeanConfig(Element,String) bean configuration} element.
+     * <p/>
+     * The ism locking is an optional part of the  workspace configuration. If
+     * the ism locking element is not found, then this method returns
+     * <code>null</code>.
+     *
+     * @param parent parent of the <code>ISMLocking</code> element
+     * @return search configuration, or <code>null</code>
+     * @throws ConfigurationException if the configuration is broken
+     */
+    protected ISMLockingConfig parseISMLockingConfig(Element parent)
+            throws ConfigurationException {
+        NodeList children = parent.getChildNodes();
+        for (int i = 0; i < children.getLength(); i++) {
+            Node child = children.item(i);
+            if (child.getNodeType() == Node.ELEMENT_NODE
+                    && ISM_LOCKING_ELEMENT.equals(child.getNodeName())) {
+                Element element = (Element) child;
+
+                // ism locking implementation class
+                String className = getAttribute(element, CLASS_ATTRIBUTE);
+
+                // ism locking parameters
+                Properties parameters = parseParameters(element);
+
+                return new ISMLockingConfig(className, parameters);
+            }
+        }
+        return null;
+    }
+
+    /**
-        return new VersioningConfig(home, fsc, pmc);
+        // Item state manager locking configuration (optional)
+        ISMLockingConfig ismLockingConfig = parseISMLockingConfig(element);
+
+        return new VersioningConfig(home, fsc, pmc, ismLockingConfig);

INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS65 INS42 INS42 INS45 INS60 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 INS24 INS41 INS60 INS66 INS66 INS66 INS66 INS66 INS43 INS59 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS59 INS58 INS27 INS37 INS8 INS33 INS43 INS59 INS42 INS42 INS32 INS42 INS68 INS66 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS60 INS25 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS69 INS69 INS42 INS42 INS42 INS34 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS27 INS32 INS60 INS60 INS60 INS41 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42