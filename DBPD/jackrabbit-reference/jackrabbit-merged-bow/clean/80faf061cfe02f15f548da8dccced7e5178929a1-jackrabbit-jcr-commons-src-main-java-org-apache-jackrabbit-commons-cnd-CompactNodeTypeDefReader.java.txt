JCR-2723: Exception when missing namespace in CND file should have clearer message

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@995454 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.Reader;
-import java.util.LinkedList;
-import java.util.List;
+import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractNodeDefinitionBuilder;
+import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractNodeTypeDefinitionBuilder;
+import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractPropertyDefinitionBuilder;
-
-import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractNodeDefinitionBuilder;
-import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractNodeTypeDefinitionBuilder;
-import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractPropertyDefinitionBuilder;
+import java.io.Reader;
+import java.util.LinkedList;
+import java.util.List;
- *
+ * <p/>
- *
+ * <p/>
-     * @param r a reader to the CND
+     * @param r        a reader to the CND
-     * @param factory builder for creating new definitions and handling namespaces
+     * @param factory  builder for creating new definitions and handling namespaces
-            DefinitionBuilderFactory<T, N> factory) throws ParseException {
+                                    DefinitionBuilderFactory<T, N> factory) throws ParseException {
-     * @param r a reader to the CND
-     * @param systemId a informative id of the given stream
+     * @param r         a reader to the CND
+     * @param systemId  a informative id of the given stream
-     * @param factory builder for creating new definitions and handling namespaces
+     * @param factory   builder for creating new definitions and handling namespaces
-            DefinitionBuilderFactory<T, N> factory) throws ParseException {
+                                    DefinitionBuilderFactory<T, N> factory) throws ParseException {
+     *
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-
+     *
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-    private void doSuperTypes(AbstractNodeTypeDefinitionBuilder<T> ntd) throws ParseException  {
+    private void doSuperTypes(AbstractNodeTypeDefinitionBuilder<T> ntd) throws ParseException {
-                }
-                catch (RepositoryException e) {
+                } catch (RepositoryException e) {
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-                    }
-                    catch (RepositoryException e) {
+                    } catch (RepositoryException e) {
-                }
-                catch (RepositoryException e) {
+                } catch (RepositoryException e) {
-                    }
-                    catch (RepositoryException e) {
+                    } catch (RepositoryException e) {
-                }
-                catch (RepositoryException e) {
+                } catch (RepositoryException e) {
-     * @param pd property definition builder
+     * @param pd  property definition builder
-        }
-        catch (RepositoryException e) {
-            lexer.fail("Error setting name of " + pd.getName() + " to " + currentToken);
+        } catch (RepositoryException e) {
+            lexer.fail("Invalid property name '" + currentToken + "': " + e.getMessage());
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-     * @param pd property definition builder
+     * @param pd  property definition builder
-            AbstractNodeTypeDefinitionBuilder<T> ntd) throws ParseException {
+                                      AbstractNodeTypeDefinitionBuilder<T> ntd) throws ParseException {
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-            }
-            catch (RepositoryException e) {
-                lexer.fail("Error adding default value for " + pd.getName() + " to " + currentToken);
+            } catch (RepositoryException e) {
+                lexer.fail("Error adding default value for " + pd.getName() + " to " + currentToken + ": " + e.getMessage());
-            }
-            catch (RepositoryException e) {
-                lexer.fail("Error adding value constraint for " + pd.getName() + " to " + currentToken);
+            } catch (RepositoryException e) {
+                lexer.fail("Error adding value constraint for " + pd.getName() + " to " + currentToken + ": " + e.getMessage());
-     * @param nd node definition builder
+     * @param nd  node definition builder
-        }
-        catch (RepositoryException e) {
-            lexer.fail("Error setting child name of " + nd.getName() + " to " + currentToken);
+        } catch (RepositoryException e) {
+            lexer.fail("Invalid child node name '" + currentToken + "': " + e.getMessage());
-            }
-            catch (RepositoryException e) {
-                lexer.fail("Error setting required primary type of " + nd.getName() + " to " + currentToken);
+            } catch (RepositoryException e) {
+                lexer.fail("Error setting required primary type of " + nd.getName() + " to " + currentToken + ": " + e.getMessage());
-        }
-        catch (RepositoryException e) {
-            lexer.fail("Error setting default primary type of " + nd.getName() + " to " + currentToken);
+        } catch (RepositoryException e) {
+            lexer.fail("Error setting default primary type of " + nd.getName() + " to " + currentToken + ": " + e.getMessage());
-     * @param nd node definition builder
+     * @param nd  node definition builder
-        }
-        catch (RepositoryException e) {
+        } catch (RepositoryException e) {
-     * @see Lexer#getNextToken()
+     * @see Lexer#getNextToken()

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV65 INS66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD45 INS42 UPD45 INS32 UPD45 INS42 UPD45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42