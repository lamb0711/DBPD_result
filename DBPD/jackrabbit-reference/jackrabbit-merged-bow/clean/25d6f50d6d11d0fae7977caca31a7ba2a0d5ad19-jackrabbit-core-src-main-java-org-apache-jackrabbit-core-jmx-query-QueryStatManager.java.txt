JCR-3040 JMX Stats for the Session

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1153868 13f79535-47bb-0310-9956-ffa450edef68

-/**
- * 
- * Extends QueryStatManagerBase with write access to the query log. <br>
- * 
- */
-public interface QueryStatManager extends QueryStatManagerBase {
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.Comparator;
-    /**
-     * log a {@link QueryStat} to the service if it is enabled
-     * 
-     * @param query
-     */
-    void logQuery(QueryStat query);
+import javax.management.openmbean.CompositeDataSupport;
+import javax.management.openmbean.CompositeType;
+import javax.management.openmbean.OpenDataException;
+import javax.management.openmbean.OpenType;
+import javax.management.openmbean.SimpleType;
+import javax.management.openmbean.TabularData;
+import javax.management.openmbean.TabularDataSupport;
+import javax.management.openmbean.TabularType;
-    QueryStat[] getTopQueries();
+public class QueryStatManager implements QueryStatManagerMBean {
+    private final QueryStat queryStat;
+
+    private final static Comparator<QueryStatDto> comparatorRev = Collections
+            .reverseOrder(new QueryStatDtoComparator());
+
+    public QueryStatManager(final QueryStat queryStat) {
+        this.queryStat = queryStat;
+    }
+
+    public boolean isEnabled() {
+        return queryStat.isEnabled();
+    }
+
+    public void setEnabled(boolean enabled) {
+        queryStat.setEnabled(enabled);
+    }
+
+    public void reset() {
+        queryStat.reset();
+    }
+
+    public int getQueueSize() {
+        return queryStat.getSlowQueriesQueueSize();
+    }
+
+    public void setQueueSize(int size) {
+        queryStat.setSlowQueriesQueueSize(size);
+    }
+
+    public void clearQueue() {
+        queryStat.clearSlowQueriesQueue();
+    }
+
+    public QueryStatDto[] getTopQueries() {
+        QueryStatDto[] top = queryStat.getSlowQueries();
+        Arrays.sort(top, comparatorRev);
+        for (int i = 0; i < top.length; i++) {
+            top[i].setPosition(i + 1);
+        }
+        return top;
+    }
+
+    public TabularData getQueries() {
+        TabularDataSupport tds = null;
+        try {
+            CompositeType ct = QueryStatCompositeTypeFactory.getCompositeType();
+
+            TabularType tt = new TabularType(QueryStatDto.class.getName(),
+                    "Query History", ct, QueryStatCompositeTypeFactory.index);
+            tds = new TabularDataSupport(tt);
+
+            for (QueryStatDto q : getTopQueries()) {
+                tds.put(new CompositeDataSupport(ct,
+                        QueryStatCompositeTypeFactory.names,
+                        QueryStatCompositeTypeFactory.getValues(q)));
+            }
+            return tds;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    private static class QueryStatCompositeTypeFactory {
+
+        private final static String[] index = { "position" };
+
+        private final static String[] names = { "position", "duration",
+                "language", "statement", "creationTime" };
+
+        private final static String[] descriptions = { "position", "duration",
+                "language", "statement", "creationTime" };
+
+        private final static OpenType<?>[] types = { SimpleType.LONG,
+                SimpleType.LONG, SimpleType.STRING, SimpleType.STRING,
+                SimpleType.STRING };
+
+        public static CompositeType getCompositeType() throws OpenDataException {
+            return new CompositeType(QueryStat.class.getName(),
+                    QueryStat.class.getName(), names, descriptions, types);
+        }
+
+        public static Object[] getValues(QueryStatDto q) {
+            return new Object[] { q.getPosition(), q.getDuration(),
+                    q.getLanguage(), q.getStatement(), q.getCreationTime() };
+        }
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS55 UPD42 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS74 INS59 INS83 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 MOV39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 MOV44 INS8 INS83 INS39 INS42 INS8 INS83 UPD5 INS8 INS83 INS43 INS42 INS8 INS83 INS83 INS42 INS23 INS23 INS23 INS23 INS31 INS31 INS42 INS42 INS43 INS43 INS42 INS32 INS83 INS43 INS42 INS21 INS41 INS39 INS42 INS21 INS21 INS41 INS39 UPD42 INS21 INS21 INS43 INS60 INS21 INS24 INS41 INS42 INS60 INS54 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS43 INS42 INS43 INS8 INS83 INS83 INS5 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS14 INS42 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS5 INS59 INS32 INS58 INS27 INS37 INS8 INS42 INS43 INS59 INS8 INS12 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS74 INS85 INS42 INS4 INS42 INS42 INS41 INS43 INS85 INS43 INS42 INS41 INS43 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS42 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS33 INS60 INS60 INS21 INS70 INS41 INS44 INS8 INS42 INS45 INS42 INS45 INS45 INS45 INS45 INS45 INS42 INS45 INS45 INS45 INS45 INS45 INS43 INS76 INS40 INS40 INS40 INS40 INS40 INS14 INS42 INS42 INS3 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS34 INS32 INS43 INS59 INS43 INS59 INS7 INS44 INS32 INS8 INS42 INS43 INS42 INS21 INS41 INS42 INS43 INS32 INS32 INS42 INS42 INS42 INS5 INS4 INS2 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS14 INS43 INS42 INS42 INS21 INS42 INS32 INS33 INS42 INS57 INS42 INS57 INS42 INS43 INS85 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS43 INS32 INS45 INS42 INS40 INS43 INS42 INS42 INS32 INS42 INS42 MOV43 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 DEL66 DEL65 DEL29 DEL66 DEL42 DEL65 DEL66 DEL65 DEL42 DEL65 DEL29 DEL42 DEL31