JCR-2313 - Improvements to user management (2) [work in progress] 
-> see issue for details

JCR-2333 - ItemImpl#validateTransientItems: Incomplete validation of mandatory child item
-> patch2

JCR-2195 - Provide possibility to import protected items using Session/Workspace import functionality
-> deal with reference properties
-> make import handlers configurable
-> add userimporter

JCR-171 - Make the extraction of Session UserIDs from Subjects configurable
-> extend SecurityManagerConfig and retrieve uid from principal name if configured
     class is present in the subject

JCR-2351 - Make Authorizable.setProperty more noisy in case of failure

JCR-2331 - Configurable DefaultPolicy replacing Initialization within the ACProvider
-> initial steps. remove code that relies on the default-init
-> add TODOs

JCR-2291 - Issues with compiled permissions of ACL provider
-> remove code searching for DENY-read entries in case of default initialization of ac entries

and here and there minor improvement, usage of generics etc....

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@828791 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.util.ReferenceChangeTracker;
-    protected final JackrabbitSession session;
+    protected JackrabbitSession session;
+    protected NamePathResolver resolver;
+    protected boolean isWorkspaceImport;
+    protected int uuidBehavior;
+    protected ReferenceChangeTracker referenceTracker;
-    protected final NamePathResolver resolver;
+    public DefaultProtectedNodeImporter() {
+    }
-    protected final boolean isWorkspaceImport;
-
-    protected final int uuidBehavior;
-
-    public DefaultProtectedNodeImporter(JackrabbitSession session,
-                                 NamePathResolver resolver,
-                                 boolean isWorkspaceImport,
-                                 int uuidBehavior) {
+    public boolean init(JackrabbitSession session, NamePathResolver resolver, boolean isWorkspaceImport, int uuidBehavior, ReferenceChangeTracker referenceTracker) {
+        this.referenceTracker = referenceTracker;
+        return true;
-
+
+    /**
+     * Does nothing.
+     *
+     * @see ProtectedNodeImporter#processReferences()
+     */
+    public void processReferences() throws RepositoryException {
+    }

INS26 INS40 INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS42 INS8 INS39 INS42 INS44 INS29 INS83 INS39 INS42 INS43 INS8 INS42 INS42 INS43 INS42 INS21 INS41 INS65 INS65 INS42 INS42 INS7 INS9 INS66 INS68 INS22 INS42 INS42 INS42 INS52 INS42 DEL83 DEL83 DEL83 DEL83 DEL42