JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
-
-import java.util.Iterator;
+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.DavConstants;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
+ * Please note, that the given implementation only recognizes the predefined elements 'add',
+ * 'set' and 'remove'.
-public class LabelInfo implements DeltaVConstants {
+public class LabelInfo implements DeltaVConstants, XmlSerializable {
-    private final Element labelElement;
-    private final int depth;
+    public static String[] typeNames = new String[] { XML_LABEL_SET , XML_LABEL_REMOVE, XML_LABEL_ADD};
-    private int type;
-    private String labelName;
+    private final int depth;
+    private final int type;
+    private final String labelName;
+
+    public LabelInfo(String labelName, String type) {
+        if (labelName == null) {
+            throw new IllegalArgumentException("Label name must not be null.");
+        }
+        boolean validType = false;
+        int i = 0;
+        while (i < typeNames.length) {
+            if (typeNames[i].equals(type)) {
+                validType = true;
+                break;
+            }
+            i++;
+        }
+        if (!validType) {
+            throw new IllegalArgumentException("Invalid type: " + type);
+        }
+        this.type = i;
+        this.labelName = labelName;
+        this.depth = DavConstants.DEPTH_0;
+    }
+
+    public LabelInfo(String labelName, int type) {
+        this(labelName, type, DavConstants.DEPTH_0);
+    }
+
+    public LabelInfo(String labelName, int type, int depth) {
+        if (labelName == null) {
+            throw new IllegalArgumentException("Label name must not be null.");
+        }
+        if (type < TYPE_SET || type > TYPE_ADD) {
+            throw new IllegalArgumentException("Invalid type: " + type);
+        }
+        this.labelName = labelName;
+        this.type = type;
+        this.depth = depth;
+    }
-        if (labelElement == null || !labelElement.getName().equals(DeltaVConstants.XML_LABEL)) {
-            throw new IllegalArgumentException("label element expected");
+        if (!DomUtil.matches(labelElement, DeltaVConstants.XML_LABEL, DeltaVConstants.NAMESPACE)) {
+            throw new IllegalArgumentException("DAV:label element expected");
-        this.labelElement = (Element) labelElement.detach();
-
-        Iterator childrenIter = labelElement.getChildren().iterator();
-        while (childrenIter.hasNext()) {
-            Element child = (Element) childrenIter.next();
-            if (!NAMESPACE.equals(child.getNamespace())) {
-                continue;
+        String label = null;
+        int type = -1;
+        for (int i = 0; i < typeNames.length && type == -1; i++) {
+            if (DomUtil.hasChildElement(labelElement, typeNames[i], NAMESPACE)) {
+                type = i;
+                Element el = DomUtil.getChildElement(labelElement, typeNames[i], NAMESPACE);
+                label = DomUtil.getChildText(el, XML_LABEL_NAME, NAMESPACE);
-            String name = child.getName();
-            if (XML_LABEL_ADD.equals(name)) {
-                type = TYPE_ADD;
-                setLabelName(child);
-            } else if (XML_LABEL_REMOVE.equals(name)) {
-                type = TYPE_REMOVE;
-                setLabelName(child);
-            } else if (XML_LABEL_SET.equals(name)) {
-                type = TYPE_SET;
-                setLabelName(child);
+        if (label == null) {
+            throw new IllegalArgumentException("DAV:label element must contain at least one set, add or remove element defining a label-name.");
+        this.labelName = label;
+        this.type = type;
-     * @see #LabelInfo(org.jdom.Element, int)
+     * @see #LabelInfo(org.w3c.dom.Element;, int)
-     * Return the 'label-name' or <code>null</code>
+     * Return the text present inside the 'DAV:label-name' element or <code>null</code>
-     * Retrieve the text of the 'label-name' child element of the specified
-     * parent element.
-     *
-     * @param parent the is intended to contain a valid 'label-name' child.
-     * @throws IllegalArgumentException if the labelName has been set before.
-     */
-    private void setLabelName(Element parent) {
-        // test if any label name is present
-        if (labelName != null) {
-            throw new IllegalArgumentException("The DAV:label element may contain at most one DAV:add, DAV:set, or DAV:remove element");
-        }
-        labelName = parent.getChildText(XML_LABEL_NAME, NAMESPACE);
-    }
-
-    /**
-     * Return the DAV:label element
-     *
-     * @return the DAV:label element
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
-    public Element getLabelElement() {
-        return labelElement;
+    public Element toXml(Document document) {
+        Element label = DomUtil.createElement(document, XML_LABEL, NAMESPACE);
+        Element typeElem = DomUtil.addChildElement(label, typeNames[type], NAMESPACE);
+        DomUtil.addChildElement(typeElem, XML_LABEL_NAME, NAMESPACE, labelName);
+        return label;
+

INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 INS43 INS31 INS31 INS31 INS31 INS31 INS42 UPD83 UPD83 INS5 INS83 INS83 MOV83 MOV42 INS44 INS44 INS8 INS83 INS42 INS44 INS44 INS8 INS83 INS42 INS44 INS44 INS44 INS8 MOV29 INS83 INS42 MOV44 MOV44 INS8 MOV29 UPD83 MOV83 MOV43 UPD42 MOV42 MOV44 INS8 INS66 INS66 INS43 INS85 UPD42 INS3 INS43 INS42 INS43 INS42 MOV25 INS60 INS60 INS61 INS25 INS21 INS21 INS21 MOV43 INS42 INS39 INS42 INS17 INS43 INS42 INS39 INS42 INS39 INS42 INS25 INS25 INS21 MOV21 MOV21 MOV25 INS60 INS60 INS24 INS25 INS21 MOV21 MOV21 UPD65 UPD65 INS43 INS42 INS60 INS60 INS21 MOV41 UPD42 MOV42 INS5 INS4 INS42 UPD42 MOV42 INS27 INS39 INS59 INS39 INS59 INS27 INS8 INS38 INS8 INS7 INS7 INS7 INS42 INS42 INS40 INS42 INS27 MOV8 INS27 INS8 INS7 INS38 INS43 INS59 INS39 INS59 INS58 INS27 INS37 INS8 INS27 INS8 INS7 INS7 INS66 UPD66 INS68 UPD42 INS42 MOV43 INS59 MOV43 INS59 INS32 UPD42 INS43 INS85 INS42 INS42 INS42 UPD42 MOV42 MOV33 INS42 INS9 INS42 INS34 INS42 INS40 INS25 INS21 INS42 INS53 INS22 INS42 INS22 INS42 INS22 INS40 INS42 INS33 INS53 INS27 INS27 INS53 INS22 INS42 INS22 UPD42 INS32 INS42 INS42 INS33 INS42 INS38 INS39 INS59 INS27 INS27 INS42 INS25 INS42 INS33 INS53 INS22 INS42 INS22 UPD42 INS22 INS42 INS40 INS42 INS69 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS37 INS14 INS52 INS42 INS52 INS42 INS52 INS42 INS14 INS42 INS42 INS42 INS42 INS14 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS40 INS40 INS34 INS42 INS34 INS42 INS40 INS42 INS38 MOV32 MOV8 INS14 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS2 INS42 UPD45 INS2 INS42 INS42 INS21 INS10 INS42 INS43 INS27 INS43 INS45 INS43 INS27 UPD45 INS34 UPD42 UPD42 INS42 INS2 INS42 INS60 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS7 UPD42 MOV42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 MOV43 INS59 INS7 INS42 INS42 INS9 UPD42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS2 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 DEL43 DEL27 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL38 DEL27 DEL18 DEL42 DEL42 DEL33 DEL27 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL25 DEL25 DEL8 DEL61 DEL8 DEL31 DEL42 DEL40 DEL43 DEL69 DEL39 DEL69 DEL68 DEL39 DEL42 DEL32 DEL7 DEL21 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL66 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31