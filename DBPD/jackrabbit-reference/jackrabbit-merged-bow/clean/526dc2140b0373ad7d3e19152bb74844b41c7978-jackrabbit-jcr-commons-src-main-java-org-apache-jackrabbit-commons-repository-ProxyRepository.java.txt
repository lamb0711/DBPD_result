JCR-2360: JcrUtils.getRepository(...) for simple repository access

Extend ProxyRepository with JcrUtils.getRepository() support. Keep backwards-compatibility.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@900763 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.Map;
+
+import javax.jcr.Repository;
+import org.apache.jackrabbit.commons.JcrUtils;
+     * Repository access parameters. Used if an explicit repository
+     * factory has not been configured.
+     */
+    private final Map<String, String> parameters =
+        new HashMap<String, String>();
+
+    /**
+     * Creates a proxy for the repository (or repositories) accessible
+     * using the given repository parameters.
+     *
+     * @param parameters repository parameters
+     */
+    public ProxyRepository(Map<String, String> parameters) {
+        this.factory = null;
+        this.parameters.putAll(parameters);
+    }
+
+    /**
+     * Creates a proxy for the repository accessible using the given
+     * repository URI.
+     *
+     * @param uri repository URI
+     */
+    public ProxyRepository(String uri) {
+        this.factory = null;
+        this.parameters.put(JcrUtils.REPOSITORY_URI, uri);
+    }
+
+    /**
+     * Returns the proxied repository. Subclasses can override this
+     * method to implement custom repository access mechanisms.
+     *
+     * @return repository
+     * @throws RepositoryException if the repository can not be accessed
+     */
+    protected Repository getRepository() throws RepositoryException {
+        if (factory != null) {
+            return factory.getRepository();
+        } else {
+            return JcrUtils.getRepository(parameters);
+        }
+    }
+
+    /**
-            return factory.getRepository().getDescriptorKeys();
+            return getRepository().getDescriptorKeys();
-            return factory.getRepository().isSingleValueDescriptor(key);
+            return getRepository().isSingleValueDescriptor(key);
-            return factory.getRepository().getDescriptor(key);
+            return getRepository().getDescriptor(key);
-            return factory.getRepository().getDescriptorValue(key);
+            return getRepository().getDescriptorValue(key);
-            return factory.getRepository().getDescriptorValues(key);
+            return getRepository().getDescriptorValues(key);
-        return factory.getRepository().login(credentials, workspace);
+        return getRepository().login(credentials, workspace);

INS26 INS26 INS26 INS26 MOV31 MOV31 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS74 INS59 INS29 INS83 INS42 INS44 INS8 INS29 INS83 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS43 INS8 MOV29 MOV43 UPD42 MOV44 MOV29 MOV5 UPD42 MOV44 INS65 INS43 INS43 INS43 INS42 INS14 INS65 INS65 INS74 INS42 INS21 INS21 INS65 INS65 INS43 INS42 INS21 INS21 INS65 INS65 INS65 INS42 INS42 INS25 INS66 INS66 INS42 INS42 INS42 INS74 INS66 INS66 INS42 INS66 INS43 INS43 INS43 INS7 INS32 INS66 INS66 INS42 INS66 INS42 INS7 INS32 INS66 INS66 INS66 INS42 INS66 INS27 MOV8 INS8 INS8 INS43 INS43 INS43 INS42 INS42 INS42 INS22 INS33 INS22 INS42 INS42 INS22 INS33 INS22 INS42 INS40 INS42 INS42 INS33 INS41 INS41 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 MOV32 INS32 INS32 INS42 INS42 INS42 UPD42 INS32 INS42 INS42 UPD42 INS42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42