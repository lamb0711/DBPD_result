Extended RepositoryHelper to retrieve sessions for a specific named workspace

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125412 13f79535-47bb-0310-9956-ffa450edef68

- *
+ * Utility class to get access to {@link javax.jcr.Session} instances.
+    /**
+     * Returns the repository instance to test.
+     * @return the repository instance to test.
+     * @throws RepositoryException if the repository could not be obtained.
+     */
+    /**
+     * Returns a superuser <code>Session</code> of the default workspace. The
+     * returned <code>Session</code> has read and write access to the whole
+     * workspace.
+     * @return a superuser <code>Session</code>.
+     * @throws RepositoryException if login to the repository failed.
+     */
+        return getSuperuserSession(null);
+    }
+
+    /**
+     * Returns a superuser <code>Session</code> of the workspace with name
+     * <code>workspaceName</code>. The returned <code>Session</code> has read
+     * and write access to the whole workspace.
+     * @return a superuser <code>Session</code>.
+     * @throws RepositoryException if login to the repository failed.
+     */
+    public Session getSuperuserSession(String workspaceName) throws RepositoryException {
-            return repStub.getRepository().login(repStub.getSuperuserCredentials(), null);
+            return repStub.getRepository().login(repStub.getSuperuserCredentials(), workspaceName);
+    /**
+     * Returns a <code>Session</code> of the default workspace with read and
+     * write access to the workspace.
+     * @return a <code>Session</code> with read and write access.
+     * @throws RepositoryException if login to the repository failed.
+     */
+        return getReadWriteSession(null);
+    }
+
+    /**
+     * Returns a <code>Session</code> of the workspace with name
+     * <code>workspaceName</code> with read and write access to the workspace.
+     * @return a <code>Session</code> with read and write access.
+     * @throws RepositoryException if login to the repository failed.
+     */
+    public Session getReadWriteSession(String workspaceName) throws RepositoryException {
-            return repStub.getRepository().login(repStub.getReadWriteCredentials(), null);
+            return repStub.getRepository().login(repStub.getReadWriteCredentials(), workspaceName);
+    /**
+     * Returns a <code>Session</code> of the default workspace with read only
+     * access to the workspace.
+     * @return a <code>Session</code> with read only.
+     * @throws RepositoryException if login to the repository failed.
+     */
+        return getReadOnlySession(null);
+    }
+
+    /**
+     * Returns a <code>Session</code> of the workspace with name
+     * <code>workspaceName</code> with read only access to the workspace.
+     * @return a <code>Session</code> with read only access.
+     * @throws RepositoryException if login to the repository failed.
+     */
+    public Session getReadOnlySession(String workspaceName) throws RepositoryException {
-            return repStub.getRepository().login(repStub.getReadOnlyCredentials(), null);
+            return repStub.getRepository().login(repStub.getReadOnlyCredentials(), workspaceName);
+    /**
+     * Returns the value of the configuration property with specified
+     * <code>name</code>. If the property does not exist <code>null</code> is
+     * returned.
+     * <p/>
+     * Configuration properties are defined in the file:
+     * <code>repositoryStubImpl.properties</code>.
+     *
+     * @param name the name of the property to retrieve.
+     * @return the value of the property or <code>null</code> if non existent.
+     * @throws RepositoryException if the configuration file cannot be found.
+     */

INS31 INS31 INS31 INS65 INS29 INS29 INS83 INS43 INS42 INS43 INS8 INS29 INS44 INS29 INS83 INS43 INS42 INS43 INS8 INS29 INS44 INS29 INS83 INS43 INS42 INS43 INS8 INS29 INS44 INS29 INS66 INS65 INS66 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS41 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS42 INS42 INS41 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS42 INS42 INS41 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS40 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS32 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS42 INS42 DEL33 DEL33 DEL33