Changed semantics of SQL operators: <, >, <=, >=, <>, = to general comparison.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159585 13f79535-47bb-0310-9956-ffa450edef68

-            // the default lucene query parser recognizes 'AND', 'OR' and
-            // 'NOT' as keywords. when the whole statement is lowercased, this
-            // will not happen ;)
-            textsearch = textsearch.toLowerCase();
+            // the default lucene query parser recognizes 'AND' and 'NOT' as
+            // keywords.
+            textsearch = textsearch.replaceAll("AND", "and");
+            textsearch = textsearch.replaceAll("NOT", "not");
+            case QueryConstants.OPERATION_GE_GENERAL:   // >=
+                // search in single and multi valued properties
+                or = new BooleanQuery();
+                for (int i = 0; i < stringValues.length; i++) {
+                    or.add(new RangeQuery(new Term(field, stringValues[i]), null, true), false, false);
+                    or.add(new RangeQuery(new Term(mvpField, stringValues[i]), null, true), false, false);
+                }
+                query = or;
+                break;
+            case QueryConstants.OPERATION_GT_GENERAL:      // >
+                or = new BooleanQuery();
+                for (int i = 0; i < stringValues.length; i++) {
+                    or.add(new RangeQuery(new Term(field, stringValues[i]), null, false), false, false);
+                    or.add(new RangeQuery(new Term(mvpField, stringValues[i]), null, false), false, false);
+                }
+                query = or;
+                break;
+            case QueryConstants.OPERATION_LE_GENERAL:      // <=
+                or = new BooleanQuery();
+                for (int i = 0; i < stringValues.length; i++) {
+                    or.add(new RangeQuery(null, new Term(field, stringValues[i]), true), false, false);
+                    or.add(new RangeQuery(null, new Term(mvpField, stringValues[i]), true), false, false);
+                }
+                query = or;
+                break;
+            case QueryConstants.OPERATION_LT_GENERAL:      // <
+                or = new BooleanQuery();
+                for (int i = 0; i < stringValues.length; i++) {
+                    or.add(new RangeQuery(null, new Term(field, stringValues[i]), false), false, false);
+                    or.add(new RangeQuery(null, new Term(mvpField, stringValues[i]), false), false, false);
+                }
+                query = or;
+                break;

MOV10 MOV10 MOV10 MOV10 MOV21 MOV21 MOV10 MOV21 MOV21 MOV10 MOV21 MOV21 MOV10 MOV10 INS49 INS21 INS24 INS21 INS49 INS21 INS24 INS21 INS49 INS21 INS24 INS21 INS49 INS21 INS24 INS21 INS10 INS10 INS10 INS10 INS21 INS40 INS7 INS58 INS27 INS37 INS8 INS7 INS40 INS7 INS58 INS27 INS37 INS8 INS7 INS40 INS7 INS58 INS27 INS37 INS8 INS7 INS40 INS7 INS58 INS27 INS37 INS8 INS7 INS7 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS21 INS42 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS21 INS42 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS21 INS42 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS21 INS42 INS42 INS42 INS32 INS43 INS42 INS34 INS32 INS32 INS43 INS42 INS34 INS32 INS32 INS43 INS42 INS34 INS32 INS32 INS43 INS42 INS34 INS32 INS32 UPD42 INS45 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS43 INS14 INS33 INS9 INS43 INS14 INS33 INS9 INS43 INS14 INS33 INS9 INS43 INS14 INS33 INS9 INS43 INS33 INS14 INS9 INS43 INS33 INS14 INS9 INS43 INS33 INS14 INS9 INS43 INS33 INS14 INS9 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS43 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42