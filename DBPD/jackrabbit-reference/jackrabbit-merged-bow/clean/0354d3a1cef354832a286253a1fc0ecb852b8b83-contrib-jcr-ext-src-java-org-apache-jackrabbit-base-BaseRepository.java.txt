JCR-EXT: Various improvements and documentation for the JCR base classes.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@328807 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.UnsupportedRepositoryOperationException;
- * Repository base class.
+ * Repository base class. The dummy repository implemented by this class
+ * contains no descriptors and forwards all login requests to the
+ * canonical {@link #login(Credentials, String)} method.
-    /** Protected constructor. This class is only useful when extended. */
-    protected BaseRepository() {
-    }
-
-    /** Not implemented. {@inheritDoc} */
+    /**
+     * Returns an empty to indicate that no descriptor keys are available.
+     * Subclasses should override this method to return the available
+     * descriptor keys.
+     *
+     * @return empty array
+     * @see Repository#getDescriptorKeys()
+     */
-        throw new UnsupportedOperationException();
-    }
-
-    /** Not implemented. {@inheritDoc} */
-    public String getDescriptor(String key) {
-        throw new UnsupportedOperationException();
-    }
-
-    /** Not implemented. {@inheritDoc} */
-    public Session login(Credentials credentials, String workspaceName)
-            throws LoginException, NoSuchWorkspaceException,
-            RepositoryException {
-        throw new UnsupportedRepositoryOperationException();
+        return new String[0];
-     * Implemented by calling
-     * <code>login(credentials, null)</code>
-     * as suggested by the JCR specification.
-     * {@inheritDoc}
+     * Returns <code>null</code> to indicate that the requested descriptor
+     * does not exist. Subclasses should override this method to return the
+     * actual repository descriptor values.
+     *
+     * @param key descriptor key
+     * @return always <code>null</code>
+     * @see Repository#getDescriptor(String)
-    public Session login(Credentials credentials) throws LoginException,
-            NoSuchWorkspaceException, RepositoryException {
+    public String getDescriptor(String key) {
+        return null;
+    }
+
+    /**
+     * Throws a {@link LoginException} to indicate that logins are
+     * not available. Subclasses should override this method to allow
+     * repository logins. Note that by default the other login methods
+     * invoke this method, so all the login methods can be made to work
+     * by overriding just this method. 
+     *
+     * @param credentials login credentials
+     * @param workspaceName workspace name
+     * @return nothing (throws a LoginException)
+     * @see Repository#login(Credentials, String)
+     */
+    public Session login(Credentials credentials, String workspaceName)
+            throws RepositoryException {
+        throw new LoginException();
+    }
+
+    /**
+     * Implemented by calling {@link #login(Credentials, String)} with a
+     * <code>null</code> workspace name. This default implementation
+     * follows the JCR specification, so there should be little
+     * reason for subclasses to override this method.
+     *
+     * @param credentials login credentials
+     * @return repository session
+     * @see Repository#login(Credentials)
+     */
+    public Session login(Credentials credentials) throws RepositoryException {
-     * Implemented by calling
-     * <code>login(null, workspaceName)</code>
-     * as suggested by the JCR specification.
-     * {@inheritDoc}
+     * Implemented by calling {@link #login(Credentials, String)} with
+     * <code>null</code> credentials. This default implementation
+     * follows the JCR specification, so there should be little
+     * reason for subclasses to override this method.
+     *
+     * @param workspaceName workspace name
+     * @return repository session
+     * @see Repository#login(String)
-    public Session login(String workspaceName) throws LoginException,
-            NoSuchWorkspaceException, RepositoryException {
+    public Session login(String workspaceName) throws RepositoryException {
-     * Implemented by calling
-     * <code>login(null, null)</code>
-     * as suggested by the JCR specification.
-     * {@inheritDoc}
+     * Implemented by calling {@link #login(Credentials, String)} with a
+     * <code>null</code> workspace name and <code>null</code> credentials.
+     * This default implementation follows the JCR specification, so there
+     * should be little reason for subclasses to override this method.
+     *
+     * @return repository session
+     * @see Repository#login()
-    public Session login() throws LoginException, NoSuchWorkspaceException,
-            RepositoryException {
+    public Session login() throws RepositoryException {

INS31 INS31 INS31 INS29 INS83 INS42 MOV29 MOV83 MOV43 MOV42 MOV44 MOV43 MOV8 INS29 MOV83 MOV43 MOV42 MOV44 MOV43 MOV8 INS29 MOV83 MOV43 MOV42 MOV43 MOV8 UPD66 INS66 INS66 INS65 INS66 INS65 INS65 INS41 INS65 INS65 INS65 INS65 INS41 MOV65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS68 UPD66 UPD66 INS66 INS66 INS68 INS3 UPD66 MOV66 INS66 INS66 INS42 INS66 UPD66 MOV66 INS68 INS33 UPD66 UPD65 UPD66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS68 UPD66 MOV66 INS65 INS66 UPD66 MOV66 UPD66 MOV66 INS66 INS42 INS66 INS66 INS68 INS66 INS65 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS66 INS42 INS66 INS66 INS68 INS66 INS65 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS66 INS66 INS68 INS42 INS69 INS69 INS42 INS42 INS5 INS34 INS42 INS42 INS69 INS42 INS42 INS42 INS69 INS69 MOV43 INS68 INS42 INS42 INS69 INS68 INS42 INS42 INS69 INS68 INS42 INS42 INS43 INS43 INS43 INS85 INS43 INS43 INS43 INS42 INS69 INS69 INS43 INS42 INS69 INS69 INS43 INS42 INS69 INS69 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS43 INS43 INS42 INS43 INS43 INS42 INS43 INS43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31 DEL65 DEL43 DEL14 DEL53 DEL65 DEL65 DEL42 DEL43 DEL14 DEL53 DEL29 DEL83 DEL42 DEL43 DEL43 DEL42 DEL43 DEL65 DEL65 DEL43 DEL43 DEL31 DEL65 DEL65 DEL29 DEL43 DEL43 DEL31 DEL65 DEL65 DEL29 DEL42 DEL43 DEL31