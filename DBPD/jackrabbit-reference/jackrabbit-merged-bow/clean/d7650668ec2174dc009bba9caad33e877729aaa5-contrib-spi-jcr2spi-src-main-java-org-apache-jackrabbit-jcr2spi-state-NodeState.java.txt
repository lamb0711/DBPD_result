work in progress

- index if unresolved cne was always 1
- add NodeState.getIndex() and simplify Node.getIndex() and ItemState.getPath()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@470475 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.ItemNotFoundException;
+     * Returns the index of this node state.
+     *
+     * @return the index.
+     */
+    public int getIndex() throws ItemNotFoundException {
+        if (parent == null) {
+            // the root state may never have siblings
+            return Path.INDEX_DEFAULT;
+        }
+
+        if (getDefinition().allowsSameNameSiblings()) {
+            ChildNodeEntry entry = getParent().getChildNodeEntry(this);
+            if (entry == null) {
+                String msg = "Unable to retrieve index for: " + this;
+                throw new ItemNotFoundException(msg);
+            }
+            return entry.getIndex();
+        } else {
+            return Path.INDEX_DEFAULT;
+        }
+    }
+
+    /**
-    public synchronized ChildNodeEntry getChildNodeEntry(NodeState nodeState) {
+    private synchronized ChildNodeEntry getChildNodeEntry(NodeState nodeState) {
-     * @param name the name of the child node.
-    public int getChildNodeIndex(QName name, ChildNodeEntry cne) {
-        List sns = childNodeEntries.get(name);
+    public int getChildNodeIndex(ChildNodeEntry cne) {
+        List sns = childNodeEntries.get(cne.getName());
-            ChildNodeEntry e = (ChildNodeEntry) it.next();
-            if (e == cne) {
+            ChildNodeEntry entry = (ChildNodeEntry) it.next();
+            if (entry == cne) {
-            // skip removed entries
-            try {
-                if (e.isAvailable() && e.getNodeState().isValid()) {
-                    index++;
+            // skip entries that belong to removed or invalidated states.
+            // NOTE, that in this case the nodestate must be available from the cne.
+            if (entry.isAvailable()) {
+                try {
+                    if (entry.getNodeState().isValid()) {
+                        index++;
+                    }
+                } catch (ItemStateException e) {
+                    // probably removed or stale
-            } catch (ItemStateException ex) {
-                // probably removed or stale
+            } else {
+                // cne has not been resolved yet -> increase counter.
+                index++;

INS26 INS40 INS31 INS29 INS83 INS39 INS42 INS43 INS8 UPD83 INS65 INS65 INS42 INS25 INS25 INS66 INS66 INS27 INS8 INS32 INS8 INS8 INS42 INS33 INS41 INS32 INS42 INS60 INS25 INS41 INS41 INS25 INS40 INS42 INS43 INS59 INS27 INS8 INS32 INS40 INS32 INS32 INS8 INS8 INS42 INS42 INS32 INS42 INS33 INS60 INS53 INS42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS42 INS42 MOV54 INS21 INS32 INS42 INS52 INS43 INS59 INS14 INS37 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS45 INS52 INS42 INS32 UPD42 MOV32 MOV42 UPD42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL32 DEL27