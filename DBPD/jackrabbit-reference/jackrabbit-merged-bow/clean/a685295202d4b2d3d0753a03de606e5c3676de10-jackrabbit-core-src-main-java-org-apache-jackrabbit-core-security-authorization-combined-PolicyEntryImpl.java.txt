security: work in progress

- change ACEditor to take jcr path
- extract common, abstract policy entry impl
- add more tests
- add JackrabbitAccessControlManager for policy editing
- various minor changes, fixes, improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@644215 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.security.authorization.PolicyEntry;
-import org.apache.jackrabbit.core.security.authorization.PrivilegeRegistry;
-import org.apache.jackrabbit.core.security.authorization.GlobPattern;
-import org.apache.jackrabbit.core.security.jsr283.security.Privilege;
-import org.apache.jackrabbit.core.security.jsr283.security.AccessControlEntry;
+import org.apache.jackrabbit.core.security.authorization.AbstractPolicyEntry;
-import javax.jcr.RepositoryException;
+import javax.jcr.RepositoryException;
-class PolicyEntryImpl implements PolicyEntry {
+class PolicyEntryImpl extends AbstractPolicyEntry {
-    /**
-     * Privileges defined for this entry.
-     */
-    private final int privileges;
-
-    /**
-     * If the actions contained are allowed or denied
-     */
-    private final boolean allow;
-
-    /**
-     * The Principal of this entry
-     */
-    private final Principal principal;
-
-     * Hash code being calculated on demand.
-     */
-    private int hashCode = -1;
-
-    /**
+        super(principal, privileges, allow);
+
-        this.principal = principal;
-        this.privileges = privileges;
-        this.allow = allow;
-        this.glob = (glob == null) ? GlobPattern.WILDCARD_ALL : glob;
+        this.glob = glob;
-        pattern = GlobPattern.create(nodePath + "/" +glob);
-    }
-
-    int getPrivilegeBits() {
-        return privileges;
+        // TODO: review again
+        if (glob != null && glob.length() > 0) {
+            StringBuffer b = new StringBuffer(nodePath);
+            b.append(glob);
+            pattern = GlobPattern.create(b.toString());
+        } else {
+            pattern = GlobPattern.create(nodePath);
+        }
-    //-------------------------------------------------< AccessControlEntry >---
-    /**
-     * @see AccessControlEntry#getPrincipal()
-     */
-    public Principal getPrincipal() {
-        return principal;
-    }
-
-    /**
-     * @see AccessControlEntry#getPrivileges()
-     */
-    public Privilege[] getPrivileges() {
-        return PrivilegeRegistry.getPrivileges(privileges);
-    }
-
-    //--------------------------------------------------------< PolicyEntry >---
-    /**
-     * @return true if all actions contained in this Entry are allowed
-     * @see PolicyEntry#isAllow()
-     */
-    public boolean isAllow() {
-        return allow;
+    protected int buildHashCode() {
+        int h = super.buildHashCode();
+        h = 37 * h + nodePath.hashCode();
+        h = 37 * h + glob.hashCode();
+        return h;
-     * @see Object#hashCode()
-     */
-    public int hashCode() {
-        if (hashCode == -1) {
-            int h = 17;
-            h = 37 * h + principal.getName().hashCode();
-            h = 37 * h + privileges;
-            h = 37 * h + Boolean.valueOf(allow).hashCode();
-            h = 37 * h + nodePath.hashCode();
-            h = 37 * h + glob.hashCode();
-            hashCode = h;
-        }
-        return hashCode;
-    }
-
-    /**
-            // TODO: check again if comparing principal-name is sufficient
-            return principal.getName().equals(tmpl.principal.getName()) &&
-                   allow == tmpl.allow &&
-                   privileges == tmpl.privileges &&
+            return super.equals(obj) &&
+                   nodePath.equals(tmpl.nodePath) &&
-

MOV26 UPD40 UPD43 UPD42 MOV21 UPD83 UPD42 INS46 INS25 MOV60 MOV21 MOV21 INS42 INS42 INS42 INS27 INS8 INS8 UPD42 MOV22 INS42 INS27 INS27 INS60 MOV21 MOV21 MOV21 INS48 INS42 INS33 INS32 INS34 INS43 INS59 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS48 INS32 MOV32 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL34 DEL38 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL42 DEL33 DEL27 DEL36 DEL40 DEL42 DEL16 DEL42 DEL45 DEL42 DEL27 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL68 DEL65 DEL29 DEL34 DEL42 DEL34 DEL38 DEL27 DEL42 DEL34 DEL42 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL7 DEL21 DEL42 DEL34 DEL42 DEL27 DEL42 DEL27 DEL7 DEL21 DEL42 DEL34 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL40 DEL42 DEL32 DEL32 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL27