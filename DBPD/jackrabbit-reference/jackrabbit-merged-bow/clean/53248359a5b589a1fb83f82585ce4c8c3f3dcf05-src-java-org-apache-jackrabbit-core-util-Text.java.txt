fixed bug in XML PM: '&' etc. in attribute values were not replaced by entity references

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@170721 13f79535-47bb-0310-9956-ffa450edef68

-    /** Hidden constructor. */
-    private Text() { }
+    /**
+     * Hidden constructor.
+     */
+    private Text() {
+    }
-        int pos = 0;
+        int pos;
+    /**
+     * Replaces illegal XML characters in the given string by their corresponding
+     * predefined entity references.
+     *
+     * @param text text to be escaped
+     * @return a string
+     */
+    public static String encodeIllegalXMLCharacters(String text) {
+        if (text == null) {
+            throw new IllegalArgumentException("null argument");
+        }
+        StringBuffer buf = null;
+        int length = text.length();
+        int pos = 0;
+        for (int i = 0; i < length; i++) {
+            int ch = text.charAt(i);
+            switch (ch) {
+                case '<':
+                case '>':
+                case '&':
+                case '"':
+                case '\'':
+                    if (buf == null) {
+                        buf = new StringBuffer();
+                    }
+                    if (i > 0) {
+                        buf.append(text.substring(pos, i));
+                    }
+                    pos = i + 1;
+                    break;
+                default:
+                    continue;
+            }
+            if (ch == '<') {
+                buf.append("&lt;");
+            } else if (ch == '>') {
+                buf.append("&gt;");
+            } else if (ch == '&') {
+                buf.append("&amp;");
+            } else if (ch == '"') {
+                buf.append("&quot;");
+            } else if (ch == '\'') {
+                buf.append("&apos;");
+            }
+        }
+        if (buf == null) {
+            return text;
+        } else {
+            if (pos < length) {
+                buf.append(text.substring(pos));
+            }
+            return buf.toString();
+        }
+    }

INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS60 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS60 INS60 MOV60 INS24 INS25 UPD66 INS39 INS59 INS66 INS66 INS42 INS66 INS66 INS42 INS27 INS8 INS43 INS59 INS39 INS59 INS58 INS27 INS37 INS8 INS27 INS8 INS8 INS42 INS42 INS33 INS53 INS42 INS42 INS33 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS60 INS50 INS25 INS42 INS33 INS41 INS25 INS41 INS14 INS42 INS42 INS42 INS34 INS39 INS59 INS42 INS49 INS49 INS49 INS49 INS49 INS25 INS25 INS21 INS10 INS49 INS18 INS27 INS8 INS25 INS42 INS27 INS8 INS32 INS43 INS45 INS42 INS32 INS13 INS13 INS13 INS13 INS13 INS27 INS8 INS27 INS8 INS7 INS42 INS13 INS21 INS27 INS8 INS25 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS34 INS21 INS42 INS27 INS32 INS42 INS13 INS21 INS27 INS8 INS25 INS32 INS7 INS32 INS42 INS34 INS42 INS42 INS45 INS32 INS42 INS13 INS21 INS27 INS8 INS25 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS42 INS13 INS21 INS27 INS8 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS13 INS21 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS45