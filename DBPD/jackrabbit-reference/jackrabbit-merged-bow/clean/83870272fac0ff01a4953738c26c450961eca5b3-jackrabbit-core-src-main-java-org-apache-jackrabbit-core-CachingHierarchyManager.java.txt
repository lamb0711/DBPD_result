JCR-3972 - Make size of ID-cache in CachingHierarchyManager configurable

- original patch by Manfred Baedke

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1740815 13f79535-47bb-0310-9956-ffa450edef68

+    private static final int MAX_UPPER_LIMIT =
+            Integer.getInteger("org.apache.jackrabbit.core.CachingHierarchyManager.cacheSize", DEFAULT_UPPER_LIMIT);
+
+    private static final int CACHE_STATISTICS_LOG_INTERVAL_MILLIS =
+            Integer.getInteger("org.apache.jackrabbit.core.CachingHierarchyManager.logInterval", 60000);
+
+     * Object collecting and logging statistics about the idCache
+     */
+    private final CacheStatistics idCacheStatistics;
+
+    /**
-        upperLimit = DEFAULT_UPPER_LIMIT;
+        upperLimit = MAX_UPPER_LIMIT;
+        idCacheStatistics = new CacheStatistics();
+        if (log.isTraceEnabled()) {
+            log.trace("CachingHierarchyManager initialized. Max cache size = {}", upperLimit, new Exception());
+        } else {
+            log.debug("CachingHierarchyManager initialized. Max cache size = {}", upperLimit);
+        }
+
+                idCacheStatistics.log();
+
+
+    private final class CacheStatistics {
+
+        private final String id;
+
+        private final ReferenceMap cache;
+
+        private long timeStamp = 0;
+
+        public CacheStatistics() {
+            this.id = cacheMonitor.toString();
+            this.cache = idCache;
+        }
+
+        public void log() {
+            if (log.isDebugEnabled()) {
+                long now = System.currentTimeMillis();
+                final String msg = "Cache id = {};size = {};max = {}";
+                if (log.isTraceEnabled()) {
+                    log.trace(msg, new Object[]{id, this.cache.size(), upperLimit}, new Exception());
+                } else if (now > timeStamp + CACHE_STATISTICS_LOG_INTERVAL_MILLIS) {
+                    timeStamp = now;
+                    log.debug(msg, new Object[]{id, this.cache.size(), upperLimit}, new Exception());
+                }
+            }
+        }
+    }
+

INS23 INS23 INS23 INS55 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS43 INS59 INS83 INS83 INS42 INS23 INS23 INS23 INS31 INS31 INS42 INS32 INS42 INS32 INS65 INS42 INS42 INS21 INS25 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS42 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS34 INS66 INS7 INS32 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS34 INS21 INS21 INS25 UPD42 INS42 INS14 INS42 INS42 INS21 INS21 INS7 INS7 INS32 INS8 INS43 INS32 INS32 INS22 INS32 INS22 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS42 INS45 INS42 INS14 INS42 INS42 INS45 INS42 INS21 INS52 INS42 INS42 INS42 INS52 INS42 INS39 INS59 INS83 INS43 INS59 INS32 INS8 INS25 INS43 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS21 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS21 INS21 INS42 INS42 INS42 INS3 INS14 INS42 INS42 INS7 INS32 INS5 INS4 INS43 INS42 INS42 INS42 INS42 INS42 INS3 INS14 INS43 INS85 INS42 INS32 INS42 INS42 INS5 INS4 INS43 INS42 INS22 INS42 INS43 INS85 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS22 INS42 INS52 INS42