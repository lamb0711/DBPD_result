work in progress

- event processing upon saving transient modifications
- extend ItemState.refresh: add Event and ev. ChangeLog as param
- EventImpl: parentId missing
- remove ItemStateListener
- all state changes are covered by ItemStateLifeCycleListener.statusChanged(ItemState, int)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@453514 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Event;
+                log.error("Internal error: Invalid state " + getStatus());
-    protected synchronized void copyFrom(ItemState state) {
-        synchronized (state) {
-            PropertyState propState = (PropertyState) state;
-            name = propState.name;
-            //parent = propState.parent; // TODO: parent from wrong layer
-            type = propState.type;
-            def = propState.def;
-            values = propState.values;
+    protected synchronized void pull() {
+        if (overlayedState != null) {
+            synchronized (overlayedState) {
+                PropertyState propState = (PropertyState) overlayedState;
+                name = propState.name;
+                type = propState.type;
+                def = propState.def;
+                values = propState.values;
+            }
+        }
+    }
+
+    protected synchronized void refresh(Event event, ChangeLog changeLog) {
+        switch (event.getType()) {
+            case Event.PROPERTY_REMOVED:
+                if (event.getItemId().equals(getId())) {
+                    setStatus(STATUS_REMOVED);
+                } else {
+                    // ILLEGAL
+                    throw new IllegalArgumentException("EventId " + event.getItemId() + " does not match id of this property state.");
+                }
+                break;
+
+            case Event.PROPERTY_CHANGED:
+                if (event.getItemId().equals(getId())) {
+                    setStatus(STATUS_MODIFIED);
+                } else {
+                    // ILLEGAL
+                    throw new IllegalArgumentException("EventId " + event.getItemId() + " does not match id of this property state.");
+                }
+                break;
+
+            case Event.PROPERTY_ADDED:
+            case Event.NODE_ADDED:
+            case Event.NODE_REMOVED:
+            default:
+                throw new IllegalArgumentException("Event type " + event.getType() + " cannot be applied to a PropertyState");

INS26 INS40 INS31 UPD42 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS25 INS43 INS42 INS43 INS42 INS50 INS21 INS27 MOV8 INS42 INS42 INS32 INS49 INS25 INS10 INS49 INS25 INS10 INS49 INS49 INS49 INS49 INS53 INS32 INS42 INS33 INS42 INS42 INS40 INS32 INS8 INS8 INS40 INS32 INS8 INS8 INS40 INS40 INS40 INS14 INS42 INS42 INS27 UPD42 INS32 INS42 INS32 INS21 INS53 INS32 INS42 INS32 INS21 INS53 INS43 INS27 INS45 INS32 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS32 INS14 INS42 INS45 INS32 INS45 INS42 MOV43 INS42 INS42 INS43 INS27 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS45 MOV43 UPD42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL44