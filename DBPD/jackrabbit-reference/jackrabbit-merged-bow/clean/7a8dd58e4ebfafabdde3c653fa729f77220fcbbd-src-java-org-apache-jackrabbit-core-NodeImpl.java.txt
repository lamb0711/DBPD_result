- fixing tests

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158101 13f79535-47bb-0310-9956-ffa450edef68

-        // check state of this instance
+        // checks
-
-        // check for pending changes
-        if (session.hasPendingChanges()) {
-            String msg = "Unable to restore version. Session has pending changes.";
-            log.debug(msg);
-            throw new InvalidItemStateException(msg);
-        }
-
-        // check lock status
+        checkSessionHasPending();
-        // check state of this instance
+
+        // do checks
-
-        // check for pending changes
-        if (session.hasPendingChanges()) {
-            String msg = "Unable to restore version. Session has pending changes.";
-            log.debug(msg);
-            throw new InvalidItemStateException(msg);
-        }
-
-        // check lock status
+        checkSessionHasPending();
+        checkVersionable();
-        // check state of this instance
+
+        // do checks
-
-        // check for pending changes
-        if (session.hasPendingChanges()) {
-            String msg = "Unable to restore version. Session has pending changes.";
-            log.debug(msg);
-            throw new InvalidItemStateException(msg);
-        }
-
-        // check lock status
+        checkSessionHasPending();
-        // check state of this instance
+
+        // do checks
-
-        // check for pending changes
-        if (session.hasPendingChanges()) {
-            String msg = "Unable to restore version. Session has pending changes.";
-            log.debug(msg);
-            throw new InvalidItemStateException(msg);
-        }
-
-        // check lock status
+        checkSessionHasPending();
+     * Checks if this nodes session has pending changes.
+     *
+     * @throws InvalidItemStateException if this nodes session has pending changes
+     * @throws RepositoryException
+     */
+    private void checkSessionHasPending() throws RepositoryException {
+        // check for pending changes
+        if (session.hasPendingChanges()) {
+            String msg = "Unable to perform operation. Session has pending changes.";
+            log.debug(msg);
+            throw new InvalidItemStateException(msg);
+        }
+
+
+    }
+
+    /**
-        while (m1.getDepth() != 0 && !m1.isNodeType(MIX_REFERENCEABLE)) {
+        while (!m1.isNodeType(MIX_REFERENCEABLE)) {
+            if (m1.getDepth() == 0) {
+                // root node
+                try {
+                    return (NodeImpl) srcSession.getItem(getPath());
+                } catch (PathNotFoundException e) {
+                    return null;
+                }
+            }
-        // check state of this instance
+        // do checks
-
-        // check for pending changes
-        if (session.hasPendingChanges()) {
-            String msg = "Unable to " + (update ? "update" : "merge") + " node. Session has pending changes.";
-            log.debug(msg);
-            throw new InvalidItemStateException(msg);
-        }
+        checkSessionHasPending();

INS31 INS29 INS83 INS39 INS42 INS43 INS8 MOV21 INS21 MOV21 MOV21 INS21 INS65 INS65 INS65 INS42 MOV25 MOV21 INS32 INS32 INS66 INS42 INS66 INS42 MOV38 INS8 UPD42 UPD42 MOV42 UPD42 UPD42 INS42 INS25 MOV21 UPD42 UPD27 MOV27 INS8 UPD45 INS54 INS8 INS12 INS41 INS44 INS8 INS11 INS43 INS42 INS41 INS43 INS32 INS42 INS33 INS42 INS42 INS42 INS32 INS42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL27 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL45 DEL16 DEL36 DEL45 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25