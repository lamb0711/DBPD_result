JCR-97: Improved Checkstyle conformance in various ways.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@164552 13f79535-47bb-0310-9956-ffa450edef68

-  *                     as applicable.
-  *
+ *                     as applicable.
+ *
-	todo consolidate version history creation code (currently in ItemImpl.initVersionHistories)
-	} else if (nt.getQName().equals(MIX_VERSIONABLE)) {
-	    // mix:versionable node type
-	    VersionHistory hist = session.getVersionManager().getOrCreateVersionHistory(this);
-	    if (name.equals(JCR_VERSIONHISTORY)) {
-		// jcr:versionHistory property
-		genValues = new InternalValue[]{InternalValue.create(new UUID(hist.getUUID()))};
-	    } else if (name.equals(JCR_BASEVERSION)) {
-		// jcr:baseVersion property
-		genValues = new InternalValue[]{InternalValue.create(new UUID(hist.getRootVersion().getUUID()))};
-	    } else if (name.equals(JCR_ISCHECKEDOUT)) {
-		// jcr:isCheckedOut property
-		genValues = new InternalValue[]{InternalValue.create(true)};
-	    } else if (name.equals(JCR_PREDECESSORS)) {
-		// jcr:predecessors property
-		genValues = new InternalValue[]{InternalValue.create(new UUID(hist.getRootVersion().getUUID()))};
-	    }
+    todo consolidate version history creation code (currently in ItemImpl.initVersionHistories)
+    } else if (nt.getQName().equals(MIX_VERSIONABLE)) {
+        // mix:versionable node type
+        VersionHistory hist = session.getVersionManager().getOrCreateVersionHistory(this);
+        if (name.equals(JCR_VERSIONHISTORY)) {
+        // jcr:versionHistory property
+        genValues = new InternalValue[]{InternalValue.create(new UUID(hist.getUUID()))};
+        } else if (name.equals(JCR_BASEVERSION)) {
+        // jcr:baseVersion property
+        genValues = new InternalValue[]{InternalValue.create(new UUID(hist.getRootVersion().getUUID()))};
+        } else if (name.equals(JCR_ISCHECKEDOUT)) {
+        // jcr:isCheckedOut property
+        genValues = new InternalValue[]{InternalValue.create(true)};
+        } else if (name.equals(JCR_PREDECESSORS)) {
+        // jcr:predecessors property
+        genValues = new InternalValue[]{InternalValue.create(new UUID(hist.getRootVersion().getUUID()))};
+        }
-                uuid = UUID.randomUUID().toString();	// version 4 uuid
+                uuid = UUID.randomUUID().toString();    // version 4 uuid
-                        mixinName + " can not be removed: the node is being referenced through at least one property of type REFERENCE");
+                        mixinName + " can not be removed: the node is being referenced"
+                        + " through at least one property of type REFERENCE");
-     * <code>Property.setValue()</code> methods. 
+     * <code>Property.setValue()</code> methods.
-    private void checkSessionHasPending() throws RepositoryException {
+    private void checkSessionHasPending()
+            throws InvalidItemStateException, RepositoryException {
-         * try shortcut first: 
+         * try shortcut first:
-    private void internalMerge(SessionImpl srcSession, List failedIds, boolean bestEffort, boolean removeExisting, boolean replaceExisting)
+    private void internalMerge(
+            SessionImpl srcSession, List failedIds,
+            boolean bestEffort, boolean removeExisting, boolean replaceExisting)
-                            throw new ItemExistsException("Unable to restore node, item already exists outside of restored tree: " + existing.safeGetJCRPath());
+                            throw new ItemExistsException(
+                                    "Unable to restore node, item already exists outside of restored tree: "
+                                    + existing.safeGetJCRPath());
-                        throw new ItemExistsException("Unable to restore node, item already exists outside of restored tree: " + n.safeGetJCRPath());
+                        throw new ItemExistsException(
+                                "Unable to restore node, item already exists outside of restored tree: "
+                                + n.safeGetJCRPath());

INS43 INS42 UPD66 INS45 UPD45