JCR-1715: Prevent excessive Path.Element instances

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@691606 13f79535-47bb-0310-9956-ffa450edef68

-    public static class Element {
+    public final static class Element {
-         * Name associated with this element
+         * Path.Element suitable for path construction associated with this
+         * element. The path element will never have a default index. Instead an
+         * undefined index value is set in that case.
-        private Name name;
+        private Path.Element pathElement;
-            this.name = nameIndex.getName();
+            if (nameIndex.denotesName()) {
+                updatePathElement(nameIndex.getName(), index);
+            } else {
+                // root, current or parent
+                this.pathElement = nameIndex;
+            }
+         * Updates the {@link #pathElement} with a new name and index value.
+         *
+         * @param name the new name.
+         * @param index the new index.
+         */
+        private void updatePathElement(Name name, int index) {
+            if (index == Path.INDEX_DEFAULT) {
+                pathElement = PATH_FACTORY.createElement(name);
+            } else {
+                pathElement = PATH_FACTORY.createElement(name, index);
+            }
+        }
+
+        /**
+                            element.updatePathElement(element.getName(), element.index);
-            element.name = nameIndex.getName();
+            element.updatePathElement(nameIndex.getName(), element.index);
+                        sibling.updatePathElement(sibling.getName(), sibling.index);
-            return name;
+            return pathElement.getName();
-            if (index == Path.INDEX_UNDEFINED) {
-                return Path.INDEX_DEFAULT;
-            } else {
-                return index;
-            }
+            return pathElement.getNormalizedIndex();
-                return PATH_FACTORY.create(name).getNameElement();
+                return PATH_FACTORY.create(getName()).getNameElement();
-                return PATH_FACTORY.create(name, index).getNameElement();
+                return PATH_FACTORY.create(getName(), index).getNameElement();
-            if (index == Path.INDEX_UNDEFINED || index == Path.INDEX_DEFAULT) {
-                builder.addLast(name);
-            } else {
-                builder.addLast(name, index);
-            }
+            builder.addLast(pathElement);

INS83 INS31 INS43 INS29 INS83 INS39 INS42 INS44 INS44 INS8 MOV21 INS8 INS40 UPD42 INS25 INS65 INS65 INS65 MOV43 INS42 INS39 INS42 INS25 MOV41 MOV21 UPD66 INS66 INS66 INS32 INS8 INS8 INS66 INS65 INS66 INS42 INS66 INS42 INS66 MOV27 INS8 INS8 INS32 INS32 INS32 INS42 INS42 MOV21 INS21 INS67 INS21 INS21 INS42 INS42 MOV32 INS40 INS42 INS42 INS42 INS42 UPD42 INS32 INS7 INS42 INS7 INS7 INS42 MOV32 INS42 INS22 INS42 INS42 INS32 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 UPD42 MOV42 UPD42 MOV42 INS32 INS21 INS42 INS42 INS32 INS40 INS32 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS42 DEL52 DEL42 DEL22 DEL7 DEL40 DEL7 DEL42 DEL42 DEL42 DEL40 DEL27 DEL40 DEL41 DEL8 DEL8 DEL25 DEL8 DEL42 DEL40 DEL27 DEL27 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25