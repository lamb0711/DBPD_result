work in progress

JCR2SPI
--------------------------------------------------------------

- reorder ItemState/NodeState/PropertyState in order to group
  methods by state types (overlayed workspace state vs. session/transient states)
- add utility methods that allow to determine and validate the
  type of ItemState.
- move childitementry classes to separate package and force usage
  of interface methods
- add checks for state type to ItemManager implementation
- add checks for state type to LockManager
- fix Node.getMixinTypes()
- rename ItemState.pull to 'reset'. remove todo asking for a careful
  merging of wsp-State and introduce a new method 'merge'.

SPI
--------------------------------------------------------------------

- rename login as suggested by julian
- add method dispose(SessionInfo) 
- rename ItemId.getRelativePath to getPath

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@454423 13f79535-47bb-0310-9956-ffa450edef68

-    //------------------------------------------------------< Initial login >---
-
+    //-----------------------------------< SessionInfo creation and release >---
-     * Authenticates the user using the supplied <code>credentials</code>. If
-     * <code>credentials</code> is <code>null</code> an implementation will use
-     * the current security context to obtain the {@link
-     * javax.security.auth.Subject}. If <code>credentials</code> is
-     * <code>null</code> and there is no <code>Subject</code> present in the
-     * current security context a <code>RepositoryException</code> is thrown.
+     * Returns a <code>SessionInfo</code> that will be used by other methods
+     * on the <code>RepositoryService</code>.
+     * An implementation may choose to authenticate the user using the supplied
+     * <code>credentials</code>.
-    public SessionInfo login(Credentials credentials, String workspaceName)
+    public SessionInfo obtain(Credentials credentials, String workspaceName)
+    /**
+     * Indicates to the <code>RepositoryService</code>, that the given SessionInfo
+     * will not be used any more.
+     *
+     * @param sessionInfo
+     */
+    public void dispose(SessionInfo sessionInfo) throws RepositoryException;
+
-     * returned <code>NodeId</code> simply has a UUID part and the relative path
+     * returned <code>NodeId</code> simply has a UUID part and the path
-     * UUID the UUID part is <code>null</code> and the relative path will be set
-     * to '.' (current element).
+     * UUID the UUID part is <code>null</code> and the path part will be set
+     * to "/".

INS31 UPD42 INS29 INS83 INS39 INS42 INS44 INS43 INS65 INS65 INS43 INS42 INS42 UPD66 UPD66 UPD66 UPD66 INS66 INS66 INS42 INS42 UPD66 UPD66 UPD66 DEL40 DEL65 DEL66 DEL66