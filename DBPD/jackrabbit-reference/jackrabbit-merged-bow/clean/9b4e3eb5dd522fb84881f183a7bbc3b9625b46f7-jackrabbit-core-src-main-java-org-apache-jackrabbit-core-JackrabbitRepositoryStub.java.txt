JCR-2185: Encapsulate RepositoryHelper field

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@791180 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.HashMap;
-     * The repository instance.
+     * Map of repository instances. Key = repository home, value = repository
+     * instance.
-    private Repository repository;
+    private static final Map<String, Repository> REPOSITORY_INSTANCES = new HashMap<String, Repository>();
+
+    static {
+        Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
+            public void run() {
+                synchronized (REPOSITORY_INSTANCES) {
+                    for (Repository repo : REPOSITORY_INSTANCES.values()) {
+                        if (repo instanceof RepositoryImpl) {
+                            ((RepositoryImpl) repo).shutdown();
+                        }
+                    }
+                }
+            }
+        }));
+    }
-        if (repository == null) {
-            try {
-                String dir = settings.getProperty(PROP_REPOSITORY_HOME);
-                if (dir == null) {
-                    dir = new File("target", "repository").getPath();
-                }
-
-                String xml = settings.getProperty(PROP_REPOSITORY_CONFIG);
-                if (xml == null) {
-                    xml = new File(dir, "repository.xml").getPath();
-                }
-
-                repository = createRepository(dir, xml);
-                Session session = repository.login(superuser);
-                try {
-                    prepareTestContent(session);
-                } finally {
-                    session.logout();
-                }
-            } catch (Exception e) {
-                RepositoryStubException exception =
-                    new RepositoryStubException("Failed to start repository");
-                exception.initCause(e);
-                throw exception;
+        try {
+            String dir = settings.getProperty(PROP_REPOSITORY_HOME);
+            if (dir == null) {
+                dir = new File("target", "repository").getAbsolutePath();
+            } else {
+                dir = new File(dir).getAbsolutePath();
+
+            String xml = settings.getProperty(PROP_REPOSITORY_CONFIG);
+            if (xml == null) {
+                xml = new File(dir, "repository.xml").getPath();
+            }
+
+            return getOrCreateRepository(dir, xml);
+
+        } catch (Exception e) {
+            RepositoryStubException exception =
+                    new RepositoryStubException("Failed to start repository");
+            exception.initCause(e);
+            throw exception;
-        return repository;
+    protected Repository getOrCreateRepository(String dir, String xml)
+            throws Exception {
+        synchronized (REPOSITORY_INSTANCES) {
+            Repository repo = REPOSITORY_INSTANCES.get(dir);
+            if (repo == null) {
+                repo = createRepository(dir, xml);
+                Session session = repo.login(superuser);
+                try {
+                    prepareTestContent(session);
+                } finally {
+                    session.logout();
+                }
+
+                REPOSITORY_INSTANCES.put(dir, repo);
+            }
+            return repo;
+        }
+    }
+

INS26 INS26 INS40 INS40 INS28 INS31 INS83 INS83 INS74 INS83 INS8 MOV8 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS43 INS43 MOV43 INS42 INS14 INS21 INS42 INS43 INS42 INS43 INS42 INS42 INS51 INS66 UPD66 INS42 INS42 INS74 INS32 INS42 INS42 INS42 INS8 INS43 INS43 INS43 INS32 INS42 INS14 INS41 INS60 INS25 INS41 INS42 INS42 INS42 INS42 INS42 INS43 INS14 INS8 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS1 INS21 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS33 MOV21 INS60 MOV54 INS21 INS42 INS31 INS7 INS42 INS42 INS42 MOV43 INS59 INS32 INS83 INS39 INS42 INS8 INS42 INS32 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 INS51 UPD42 INS14 INS42 INS42 INS42 INS42 INS42 INS8 INS43 INS42 INS70 INS42 INS44 INS32 INS8 INS43 INS42 INS42 INS42 INS25 INS42 INS62 INS8 INS42 INS43 INS21 INS42 INS32 INS36 INS42 INS11 INS43 INS42 INS42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL25 DEL42 DEL41 DEL8