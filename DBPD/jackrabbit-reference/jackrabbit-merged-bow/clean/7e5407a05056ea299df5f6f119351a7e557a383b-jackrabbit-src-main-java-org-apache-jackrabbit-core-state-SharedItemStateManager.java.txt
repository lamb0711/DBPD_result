[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.uuid.UUID;
-     * uuid of root node
+     * id of root node
-    private final String rootNodeUUID;
+    private final NodeId rootNodeId;
-     * @param rootNodeUUID
+     * @param rootNodeId
-                                  String rootNodeUUID,
+                                  NodeId rootNodeId,
-        this.rootNodeUUID = rootNodeUUID;
+        this.rootNodeId = rootNodeId;
-        if (!hasNonVirtualItemState(new NodeId(rootNodeUUID))) {
-            createRootNodeState(rootNodeUUID, ntReg);
+        if (!hasNonVirtualItemState(rootNodeId)) {
+            createRootNodeState(rootNodeId, ntReg);
-                events.createEventStates(rootNodeUUID, local,
+                events.createEventStates(rootNodeId, local,
-     * @param uuid         uuid
+     * @param id         uuid
-     * @param parentUUID   parent UUID
+     * @param parentId   parent UUID
-    private NodeState createInstance(String uuid, QName nodeTypeName,
-                                     String parentUUID) {
+    private NodeState createInstance(NodeId id, QName nodeTypeName,
+                                     NodeId parentId) {
-        NodeState state = persistMgr.createNew(new NodeId(uuid));
+        NodeState state = persistMgr.createNew(id);
-        state.setParentUUID(parentUUID);
+        state.setParentId(parentId);
-     * @param rootNodeUUID root node UUID
+     * @param rootNodeId root node id
-    private NodeState createRootNodeState(String rootNodeUUID,
+    private NodeState createRootNodeState(NodeId rootNodeId,
-        NodeState rootState = createInstance(rootNodeUUID, QName.REP_ROOT, null);
+        NodeState rootState = createInstance(rootNodeId, QName.REP_ROOT, null);
-        PropertyState prop = createInstance(propDef.getName(), rootNodeUUID);
+        PropertyState prop = createInstance(propDef.getName(), rootNodeId);
-            return createInstance(ns.getUUID(), ns.getNodeTypeName(), ns.getParentUUID());
+            return createInstance(ns.getNodeId(), ns.getNodeTypeName(), ns.getParentId());
-            return createInstance(ps.getName(), ps.getParentUUID());
+            return createInstance(ps.getName(), ps.getParentId());
-     * @param parentUUID parent UUID
+     * @param parentId parent Id
-    private PropertyState createInstance(QName propName, String parentUUID) {
-        PropertyState state = persistMgr.createNew(new PropertyId(parentUUID, propName));
+    private PropertyState createInstance(QName propName, NodeId parentId) {
+        PropertyState state = persistMgr.createNew(new PropertyId(parentId, propName));
-                    + state.getId();
+                    + state.getNodeId();
-                    + state.getId();
+                    + state.getNodeId();
-    protected void updateReferences(ChangeLog changes, 
-                                    VirtualItemStateProvider virtualProvider) 
+    protected void updateReferences(ChangeLog changes,
+                                    VirtualItemStateProvider virtualProvider)
-                        String uuid = vals[i].toString();
-                        NodeReferencesId refsId = new NodeReferencesId(uuid);
-                        if (virtualProvider != null && 
+                        NodeReferencesId refsId = new NodeReferencesId(
+                                (UUID) vals[i].internalValue());
+                        if (virtualProvider != null &&
-                        refs.addReference((PropertyId) prop.getId());
+                        refs.addReference(prop.getPropertyId());
-                        String uuid = vals[i].toString();
-                        NodeReferencesId refsId = new NodeReferencesId(uuid);
-                        if (virtualProvider != null && 
+                        NodeReferencesId refsId = new NodeReferencesId(
+                                (UUID) vals[i].internalValue());
+                        if (virtualProvider != null &&
-                        refs.removeReference((PropertyId) oldProp.getId());
+                        refs.removeReference(oldProp.getPropertyId());
-                        String uuid = vals[i].toString();
-                        NodeReferencesId refsId = new NodeReferencesId(uuid);
-                        if (virtualProvider != null && 
+                        NodeReferencesId refsId = new NodeReferencesId(
+                                (UUID) vals[i].internalValue());
+                        if (virtualProvider != null &&
-                        refs.addReference((PropertyId) newProp.getId());
+                        refs.addReference(newProp.getPropertyId());
-                        String uuid = vals[i].toString();
-                        NodeReferencesId refsId = new NodeReferencesId(uuid);
-                        if (virtualProvider != null && 
+                        NodeReferencesId refsId = new NodeReferencesId(
+                                (UUID) vals[i].internalValue());
+                        if (virtualProvider != null &&
-                        refs.removeReference((PropertyId) prop.getId());
+                        refs.removeReference(prop.getPropertyId());
-                    NodeReferencesId refsId = new NodeReferencesId(node.getUUID());
+                    NodeReferencesId refsId = new NodeReferencesId(node.getNodeId());
-                    // same UUID, i.e. the node is still referenceable.  
-                    if (refs.hasReferences() && !changes.has(node.getId())) {
-                        String msg = node.getId()
+                    // same UUID, i.e. the node is still referenceable.
+                    if (refs.hasReferences() && !changes.has(node.getNodeId())) {
+                        String msg = node.getNodeId()

INS26 INS40 UPD43 UPD42 UPD42 MOV43 UPD42 UPD43 UPD42 MOV43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 UPD66 UPD42 UPD42 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV43 MOV21 MOV21 MOV21 MOV21 UPD43 MOV43 MOV43 MOV43 MOV43 MOV42 UPD42 INS14 INS32 UPD42 INS14 INS32 UPD42 INS14 INS32 UPD42 MOV42 UPD42 INS14 INS32 UPD42 MOV43 INS11 MOV42 UPD42 MOV42 MOV43 INS11 MOV42 UPD42 MOV42 MOV43 INS11 MOV42 UPD42 MOV42 MOV43 INS11 MOV42 UPD42 MOV42 UPD42 INS43 MOV32 INS43 MOV32 INS43 MOV32 INS43 MOV32 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL32 DEL11