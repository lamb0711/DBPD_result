JCR-1138 Data store garbage collection: use IterablePersistenceManager if possible

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@604872 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeIdIterator;
+import org.apache.jackrabbit.core.persistence.IterablePersistenceManager;
-import javax.jcr.RepositoryException;
-        PersistenceManager, CachingPersistenceManager {
+    PersistenceManager, CachingPersistenceManager, IterablePersistenceManager {
-    /**
-     * Get all node ids. 
-     * A typical application will call this method multiple times, where 'after'
-     * is the last row read. The maxCount parameter defines the maximum number of 
-     * node ids returned, 0 meaning no limit. The order of the node ids is specific for the 
-     * given persistent manager. Items that are added concurrently may not be included.
-     * 
-     * @param after the lower limit, or null for no limit.
-     * @param maxCount the maximum number of node ids to return, or 0 for no limit.
-     * @return an iterator of all bundles.
-     * @throws ItemStateException if an error while loading occurs.
-     * @throws RepositoryException if a repository exception occurs
-     */
-    public abstract NodeIdIterator getAllNodeIds(NodeId after, int maxCount)
-            throws ItemStateException, RepositoryException;
-

MOV26 UPD40 INS43 UPD42 MOV42 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31