JCR-2192: Handling of expanded-form jcr names by node type *Template classes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@797410 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.commons.name.NameConstants;
+import org.apache.jackrabbit.spi.Name;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.RepositoryException;
+import javax.jcr.NamespaceException;
+import javax.jcr.version.OnParentVersionAction;
-    private String name;
+    private static final Logger log = LoggerFactory.getLogger(AbstractItemDefinitionTemplate.class);
+
+    private Name name;
-    private int opv;
+    private int opv = OnParentVersionAction.COPY;
+    protected final NamePathResolver resolver;
+
+     *
+     * @param resolver
-    AbstractItemDefinitionTemplate() {
+    AbstractItemDefinitionTemplate(NamePathResolver resolver) {
+        this.resolver = resolver;
+     * @param resolver
+     * @throws javax.jcr.nodetype.ConstraintViolationException
-    AbstractItemDefinitionTemplate(ItemDefinition def) {
-        name = def.getName();
+    AbstractItemDefinitionTemplate(ItemDefinition def, NamePathResolver resolver) throws ConstraintViolationException {
+        this.resolver = resolver;
+
+        if (def instanceof ItemDefinitionImpl) {
+            name = ((ItemDefinitionImpl) def).itemDef.getName();
+        } else {
+            setName(def.getName());
+        }
+     * @throws ConstraintViolationException
-    public void setName(String name) {
-        this.name = name;
+    public void setName(String name) throws ConstraintViolationException {
+        if (ItemDefinitionImpl.ANY_NAME.equals(name)) {
+            // handle the * special case that isn't a valid JCR name but a valid
+            // name for a ItemDefinition (residual).
+            this.name = NameConstants.ANY_NAME;
+        } else {
+            try {
+                this.name = resolver.getQName(name);
+            } catch (RepositoryException e) {
+                throw new ConstraintViolationException(e);
+            }
+        }
+     * @throws IllegalArgumentException If the given <code>opv</code> flag isn't valid.
+        // validate the given opv-action
+        OnParentVersionAction.nameFromValue(opv);
-        return name;
+        if (name == null) {
+            return null;
+        } else {
+            try {
+                return resolver.getJCRName(name);
+            } catch (NamespaceException e) {
+                // should never get here
+                log.error("encountered unregistered namespace in item definition name", e);
+                return name.toString();
+            }
+        }
-

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS83 INS83 UPD43 INS59 INS83 INS43 MOV59 INS83 INS83 INS43 INS59 INS44 INS44 INS43 INS43 INS8 INS8 UPD42 INS42 INS32 INS42 INS40 INS42 INS42 INS65 INS43 INS42 INS21 INS65 INS65 INS43 INS42 INS42 INS21 INS25 INS65 INS42 INS25 INS65 INS21 INS25 INS42 INS42 INS57 INS42 INS42 INS7 INS42 INS40 INS42 INS7 INS62 INS8 INS8 INS42 INS32 MOV8 INS8 INS42 INS66 INS32 INS27 INS8 INS8 INS43 INS22 INS42 INS22 INS42 INS42 INS43 INS21 MOV21 INS40 INS42 INS42 INS54 INS42 INS42 INS42 INS42 INS33 INS41 INS54 INS42 INS52 INS42 INS52 INS42 INS42 INS7 INS32 INS8 INS12 INS33 INS8 INS12 INS42 INS32 INS42 MOV32 INS40 INS21 INS44 INS8 MOV41 INS44 INS8 INS22 INS42 INS7 INS43 INS42 INS53 INS32 INS43 INS42 INS21 INS41 INS36 INS42 INS22 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS11 INS52 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS42 INS42 DEL42 DEL7 DEL42 DEL42 DEL8