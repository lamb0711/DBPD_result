JCR-3708 More efficient node traversal during garbage collection in binary focused Repository

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1558022 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+    /**
+     * Set this System Property to true to speed up the node traversing in a binary focused repository.
+     * See JCR-3708
+     */
+    private static final boolean NODE_ID_SCAN = Boolean.getBoolean("org.apache.jackrabbit.garbagecollector.node_id.scan");
+
-                scanPersistenceManagers();
+                if (!NODE_ID_SCAN) {
+                    scanPersistenceManagersByNodeInfos();
+                } else {
+                    scanPersistenceManagersByNodeIds();
+                }
-    private void scanPersistenceManagers() throws RepositoryException, ItemStateException {
+    private void scanPersistenceManagersByNodeInfos() throws RepositoryException, ItemStateException {
+        int pmCount = 0;
+            pmCount++;
+            int count = 0;
+                    count++;
+                    if (count % 1000 == 0) {
+                        LOG.debug(pm.toString() + " ("+pmCount + "/" + pmList.length + "): analyzed " + count + " nodes...");
+                    }
+    private void scanPersistenceManagersByNodeIds() throws RepositoryException, ItemStateException {
+        int pmCount = 0;
+        for (IterablePersistenceManager pm : pmList) {
+            pmCount++;
+            List<NodeId> allNodeIds = pm.getAllNodeIds(null, 0);
+            int overAllCount = allNodeIds.size();
+            int count = 0;
+            for (NodeId id : allNodeIds) {
+                count++;
+                if (count % 1000 == 0) {
+                    LOG.debug(pm.toString() + " ("+pmCount + "/" + pmList.length + "): analyzed " + count + " nodes [" + overAllCount + "]...");
+                }
+                if (callback != null) {
+                    callback.beforeScanning(null);
+                }
+                try {
+                    NodeState state = pm.load(id);
+                    Set<Name> propertyNames = state.getPropertyNames();
+                    for (Name name : propertyNames) {
+                        PropertyId pid = new PropertyId(id, name);
+                        PropertyState ps = pm.load(pid);
+                        if (ps.getType() == PropertyType.BINARY) {
+                            for (InternalValue v : ps.getValues()) {
+                                // getLength will update the last modified date
+                                // if the persistence manager scan is running
+                                v.getLength();
+                            }
+                        }
+                    }
+                } catch (NoSuchItemStateException e) {
+                    // the node may have been deleted or moved in the meantime
+                    // ignore it
+                }
+            }
+        }
+    }
+

INS26 INS40 INS23 INS31 INS29 INS83 INS83 INS83 INS39 INS59 UPD42 INS83 INS39 INS42 INS43 INS43 INS8 INS65 INS42 INS32 INS60 INS42 INS42 INS60 INS70 INS66 INS66 INS42 INS42 INS45 INS39 INS59 INS39 INS59 INS44 INS42 INS8 INS42 INS34 INS21 INS60 INS42 INS34 INS43 INS42 INS21 INS60 INS60 INS60 INS70 INS8 INS37 INS39 INS59 INS42 INS37 INS74 INS59 INS39 INS59 INS39 INS59 INS44 INS42 INS8 INS25 INS42 INS42 INS34 INS42 INS43 INS43 INS42 INS32 INS42 INS32 INS42 INS34 INS43 INS42 INS21 INS25 INS25 INS54 INS38 INS8 INS8 INS42 INS42 INS42 INS42 INS33 INS34 INS42 INS42 INS42 INS37 INS27 INS8 INS27 INS8 INS8 INS12 INS42 INS21 MOV21 INS21 INS25 INS42 INS27 INS34 INS21 INS42 INS33 INS21 INS60 INS60 INS70 INS44 INS8 INS32 INS37 INS27 INS8 INS42 INS34 INS32 INS32 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS43 INS42 INS42 UPD42 INS42 INS27 INS34 INS21 INS42 INS42 INS27 INS42 INS42 INS33 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS60 INS25 INS42 INS42 INS34 INS32 INS32 INS45 INS42 INS45 INS40 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS40 INS70 INS32 INS45 INS42 INS45 INS40 INS45 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS32 INS8 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS32 INS42 INS42 DEL8