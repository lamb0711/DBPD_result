- fixing javadoc
- fixing indention
- improve getPropertyNames()
- fixing createFromXml

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385538 13f79535-47bb-0310-9956-ffa450edef68

- * <code>Response</code>...
+ * <code>MultiStatusResponse</code> represents the DAV:multistatus element defined
+ * by RFC 2518:
+ * <pre>
+ * &lt;!ELEMENT response (href, ((href*, status)|(propstat+)), responsedescription?) &gt;
+ * &lt;!ELEMENT status (#PCDATA) &gt;
+ * &lt;!ELEMENT propstat (prop, status, responsedescription?) &gt;
+ * &lt;!ELEMENT responsedescription (#PCDATA) &gt;
+ * &lt;!ELEMENT prop ANY &gt;
+ * </pre>
-     * Type of MultiStatus response: PropStat
-     * Hashmap containing all status
+     * Type of MultiStatus response: PropStat Hashmap containing all status
-     * would be used by COPY, MOVE, DELETE, LOCK that require a multistatus
-     * in case of error with a resource other than the resource identified in the
+     * would be used by COPY, MOVE, DELETE, LOCK that require a multistatus in
+     * case of error with a resource other than the resource identified in the
-     * would be used by COPY, MOVE, DELETE, LOCK that require a multistatus
-     * in case of error with a resource other than the resource identified in the
+     * would be used by COPY, MOVE, DELETE, LOCK that require a multistatus in
+     * case of error with a resource other than the resource identified in the
-     * Constucts a WebDAV multistatus response and retrieves the resource properties
-     * according to the given <code>DavPropertyNameSet</code>.
+     * Constucts a WebDAV multistatus response and retrieves the resource
+     * properties according to the given <code>DavPropertyNameSet</code>.
-     * Constucts a WebDAV multistatus response and retrieves the resource properties
-     * according to the given <code>DavPropertyNameSet</code>. It adds all known
-     * property to the '200' set, while unknown properties are added to the '404' set.
+     * Constucts a WebDAV multistatus response and retrieves the resource
+     * properties according to the given <code>DavPropertyNameSet</code>. It
+     * adds all known property to the '200' set, while unknown properties are
+     * added to the '404' set.
-     * Note, that the set of property names is ignored in case of a {@link #PROPFIND_ALL_PROP}
-     * and {@link #PROPFIND_PROPERTY_NAMES} propFindType.
+     * Note, that the set of property names is ignored in case of a {@link
+     * #PROPFIND_ALL_PROP} and {@link #PROPFIND_PROPERTY_NAMES} propFindType.
-     * @param resource     The resource to retrieve the property from
-     * @param propNameSet  The property name set as obtained from the request body.
-     * @param propFindType any of the following values: {@link #PROPFIND_ALL_PROP},
-     *                     {@link #PROPFIND_BY_PROPERTY}, {@link #PROPFIND_PROPERTY_NAMES}
+     * @param resource The resource to retrieve the property from
+     * @param propNameSet The property name set as obtained from the request
+     * body.
+     * @param propFindType any of the following values: {@link
+     * #PROPFIND_ALL_PROP}, {@link #PROPFIND_BY_PROPERTY}, {@link
+     * #PROPFIND_PROPERTY_NAMES}
-                Status status = new Status(statusKey.intValue());
+                Status st = new Status(statusKey.intValue());
-                propstat.appendChild(status.toXml(document));
+                propstat.appendChild(st.toXml(document));
-     * @param status   the status of the response set to select
+     * @param status the status of the response set to select
-     * @param status       the status of the response set to select
+     * @param status the status of the response set to select
-     *
-                }
+        }
-            }
+    }
-     * Get properties present in this response for the given status code. In case
-     * this MultiStatusResponse does not represent a 'propstat' response, always
-     * an empty {@link DavPropertySet} will be returned.
+     * Get properties present in this response for the given status code. In
+     * case this MultiStatusResponse does not represent a 'propstat' response,
+     * always an empty {@link DavPropertySet} will be returned.
-                return (DavPropertySet)mapEntry;
+                return (DavPropertySet) mapEntry;
-     * Get property names present in this response for the given status code. In case
-     * this MultiStatusResponse does not represent a 'propstat' response, always
-     * an empty {@link DavPropertyNameSet} will be returned.
+     * Get property names present in this response for the given status code. In
+     * case this MultiStatusResponse does not represent a 'propstat' response,
+     * always an empty {@link DavPropertyNameSet} will be returned.
-            if (mapEntry != null && mapEntry instanceof DavPropertyNameSet) {
-                return (DavPropertyNameSet)mapEntry;
-        }
+            if (mapEntry != null) {
+                if (mapEntry instanceof DavPropertySet) {
+                    DavPropertyNameSet set = new DavPropertyNameSet();
+                    DavPropertyName[] names = ((DavPropertySet) mapEntry).getPropertyNames();
+                    for (int i = 0; i < names.length; i++) {
+                        set.add(names[i]);
+                    return set;
+                } else {
+                    // is alread a DavPropertyNameSet
+                    return (DavPropertyNameSet) mapEntry;
+                }
+            }
+        }
-     * @throws IllegalArgumentException if the specified element is <code>null</code>
-     * or not a DAV:response element or if the mandatory DAV:href child is
-     * missing.
+     * @throws IllegalArgumentException if the specified element is
+     * <code>null</code> or not a DAV:response element or if the mandatory
+     * DAV:href child is missing.
-        // read propstat elements
+            // read propstat elements
-        while (it.hasNext()) {
+            while (it.hasNext()) {
-                        // current elem is now either a dav property xml representation
-                        // or the xml representation of a davpropertyname
-                        if (DomUtil.hasContent(el)) {
-                            // property
-                            DavProperty property = DefaultDavProperty.createFromXml(el);
-                            response.add(property, statusCode);
-                        } else {
-                            // property-name only
-                            DavPropertyName propName = DavPropertyName.createFromXml(el);
-                            response.add(propName, statusCode);
-                        }
+                        /*
+                        always build dav property from the given element, since
+                        destinction between prop-names and properties not having
+                        a value is not possible.
+                        retrieval of the set of 'property names' is possible from
+                        the given prop-set by calling DavPropertySet#getPropertyNameSet()
+                        */
+                        DavProperty property = DefaultDavProperty.createFromXml(el);
+                        response.add(property, statusCode);

MOV8 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 MOV25 MOV60 MOV25 MOV60 MOV60 MOV60 MOV41 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS8 UPD66 UPD66 UPD66 MOV27 MOV8 INS8 MOV60 INS25 MOV21 MOV60 INS61 MOV27 MOV8 MOV32 MOV8 MOV60 MOV60 MOV60 INS25 INS62 INS8 MOV27 MOV8 UPD42 MOV42 INS43 INS60 INS60 INS24 INS41 MOV60 MOV60 INS61 UPD42 INS42 MOV43 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS42 MOV32 MOV8 INS42 INS14 MOV43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS21 MOV60 INS43 INS36 INS42 INS42 INS34 INS32 INS42 INS11 INS42 INS42 INS2 INS43 INS42 INS42 INS42 INS42 DEL66 DEL62 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL61 DEL61 DEL8 DEL25 DEL8