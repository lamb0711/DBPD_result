JCR-3721: Slow and actively called NodeId.toString()

Drop table lookups to squeeze out a few more nanoseconds out of NodeId.toString()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1566669 13f79535-47bb-0310-9956-ffa450edef68

-    final static String[] digits = new String[256];
-    static {
-      for ( int i=0; i<digits.length; ++i ) {
-        digits[i] = String.format("%02x", i);
-      }
-    }
-
-    final static int[] indexes = {
-      0, 1, 2, 3, 4, 5, 6, 7,
-      9, 10, 11, 12,
-      14, 15, 16, 17,
-      19, 20, 21, 22,
-      24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
-    };
-
-        //return new UUID(msb, lsb).toString();
-        final char[] retval = new char[36];
-        retval[8] = retval[13] = retval[18] = retval[23] = '-';
-        final byte[] data = getRawBytes();
-        for ( int i=0; i<16; ++i ) {
-          int pos = data[i];
-          if ( pos < 0 )
-            pos += 256;
-          final String v = digits[pos];
-          retval[indexes[i*2]] = v.charAt(0);
-          retval[indexes[i*2 + 1]] = v.charAt(1);
-        }
+        char[] retval = new char[36];
+        hex4(retval, 0, msb >>> 48);
+        hex4(retval, 4, msb >>> 32);
+        retval[8]  = '-';
+        hex4(retval, 9, msb >>> 16);
+        retval[13] = '-';
+        hex4(retval, 14, msb);
+        retval[18] = '-';
+        hex4(retval, 19, lsb >>> 48);
+        retval[23] = '-';
+        hex4(retval, 24, lsb >>> 32);
+        hex4(retval, 28, lsb >>> 16);
+        hex4(retval, 32, lsb);
+    private static final void hex4(char[] c, int index, long value) {
+        for (int i = 0; i < 4; i++) {
+            long v = (value >>> (12 - i * 4)) & 0xf;
+            if (v < 10) {
+                c[index + i] = (char) (v + '0');
+            } else {
+                c[index + i] = (char) (v - 10 + 'a');
+            }
+        }
+    }
+

INS31 MOV29 INS83 MOV43 INS42 INS8 INS83 UPD83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 MOV60 INS21 MOV21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 MOV41 INS5 INS42 INS39 INS42 INS39 INS42 MOV24 INS32 INS32 INS7 INS32 INS7 INS32 MOV7 INS32 MOV7 INS32 INS32 INS32 UPD39 MOV39 MOV85 INS37 INS42 INS42 INS34 INS27 UPD42 MOV42 UPD42 MOV42 INS34 INS27 MOV2 INS13 INS42 INS42 INS34 INS27 MOV2 INS13 INS42 INS42 INS34 INS42 INS13 INS42 INS42 INS34 INS27 INS42 INS42 INS34 INS27 INS42 INS42 INS34 INS27 INS42 INS42 INS34 INS42 UPD34 INS42 INS25 UPD42 MOV42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 UPD39 MOV27 INS8 INS8 UPD42 INS27 UPD42 UPD34 MOV21 MOV21 INS36 INS34 INS27 INS11 INS2 INS11 INS42 INS36 UPD42 INS27 INS39 INS36 UPD42 MOV42 MOV27 INS39 INS36 INS27 INS42 MOV42 INS27 INS42 MOV42 INS27 INS34 INS27 INS42 INS13 INS27 INS13 INS42 INS34 INS42 INS34 DEL83 DEL42 DEL42 DEL2 DEL45 DEL42 DEL32 DEL7 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL59 DEL23 DEL83 DEL39 DEL42 DEL34 DEL59 DEL58 DEL40 DEL27 DEL42 DEL38 DEL8 DEL24 DEL8 DEL28 DEL83 DEL83 DEL39 DEL85 DEL5 DEL42 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL34 DEL4 DEL59 DEL23 DEL42 DEL38 DEL42 DEL42 DEL2 DEL42 DEL34 DEL27 DEL2 DEL42 DEL42 DEL34 DEL32 DEL34 DEL27 DEL34 DEL42 DEL2 DEL2 DEL42 DEL42 DEL34 DEL32 DEL42 DEL34 DEL7 DEL21 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL7 DEL7 DEL21 DEL83 DEL5 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8