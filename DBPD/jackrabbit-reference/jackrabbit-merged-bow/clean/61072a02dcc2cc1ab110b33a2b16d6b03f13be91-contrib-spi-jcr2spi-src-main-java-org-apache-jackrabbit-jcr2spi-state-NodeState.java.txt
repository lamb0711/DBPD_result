- Replace NodeState.getChildNodeEntry(NodeId) with NodeState.getChildNodeEntry(NodeState)
- Replace NodeState.reorderChildNodeEntries(NodeId, NodeId) with NodeState.reorderChildNodeEntries(NodeState, NodeState)
- ReorderNodes operation now works with NodeStates instead of NodeIds.
- Simplify NodeImpl.getQName()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431904 13f79535-47bb-0310-9956-ffa450edef68

-                    ChildNodeEntry cne = parentState.getChildNodeEntry(getNodeId());
-                    def = ent.getApplicableNodeDefinition(cne.getName(), getNodeTypeName());
+                    def = ent.getApplicableNodeDefinition(getName(), getNodeTypeName());
-     * Returns the <code>ChildNodeEntry</code> with the specified <code>NodeId</code> or
-     * <code>null</code> if there's no matching entry.
+     * Returns the <code>ChildNodeEntry</code> with the specified
+     * <code>NodeState</code> or <code>null</code> if there's no matching
+     * entry.
-     * @param id the id of the child node
-     * @return the <code>ChildNodeEntry</code> with the specified <code>NodeId</code> or
-     *         <code>null</code> if there's no matching entry.
+     * @param nodeState the child node state.
+     * @return the <code>ChildNodeEntry</code> with the specified
+     *         <code>NodeState</code> or <code>null</code> if there's no
+     *         matching entry.
-    public synchronized ChildNodeEntry getChildNodeEntry(NodeId id) {
-        return childNodeEntries.get(id);
+    public synchronized ChildNodeEntry getChildNodeEntry(NodeState nodeState) {
+        return childNodeEntries.get(nodeState);
-     * @param insertNodeId
-     * @param beforeNodeId
+     * @param insertNode
+     * @param beforeNode
-    synchronized void reorderChildNodeEntries(NodeId insertNodeId, NodeId beforeNodeId)
+    synchronized void reorderChildNodeEntries(NodeState insertNode, NodeState beforeNode)
-        if (childNodeEntries.get(insertNodeId) == null) {
-            throw new NoSuchItemStateException("No such child node entry: " + insertNodeId);
+        if (childNodeEntries.get(insertNode) == null) {
+            throw new NoSuchItemStateException("No such child node entry: " + insertNode.getNodeId());
-        if (beforeNodeId != null && childNodeEntries.get(insertNodeId) == null) {
-            throw new NoSuchItemStateException("No such child node entry: " + beforeNodeId);
+        if (beforeNode != null && childNodeEntries.get(insertNode) == null) {
+            throw new NoSuchItemStateException("No such child node entry: " + beforeNode.getNodeId());
+        NodeId insertNodeId = insertNode.getNodeId();
+        NodeId beforeNodeId = (beforeNode != null) ? beforeNode.getNodeId() : null;
+
-        ChildNodeEntry get(NodeId id) {
-            return (ChildNodeEntry) entries.get(id);
+        ChildNodeEntry get(NodeState nodeState) {
+            return (ChildNodeEntry) entries.get(nodeState.getId());

UPD43 UPD42 INS43 UPD42 INS43 UPD42 INS60 INS60 MOV43 UPD66 UPD66 INS66 UPD42 UPD66 UPD66 UPD66 INS66 UPD42 UPD42 UPD42 INS42 INS42 MOV43 INS59 MOV43 INS59 UPD43 UPD42 UPD42 INS42 INS32 INS42 INS16 UPD42 UPD42 UPD42 INS42 INS42 INS36 INS32 INS33 MOV43 UPD42 INS27 INS42 INS42 INS32 INS32 INS32 INS42 INS33 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42