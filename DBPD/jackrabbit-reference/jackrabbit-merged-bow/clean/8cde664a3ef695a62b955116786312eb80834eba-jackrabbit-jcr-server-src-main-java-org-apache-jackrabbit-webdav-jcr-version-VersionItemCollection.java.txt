JCR-2946 - Improve implementation of DavResource#getProperty(DavPropertyName)
JCR-2948 - Add possibility to PROPFIND the JCR_NODETYPES_CND_LN property

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1155296 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.jcr.property.JcrDavPropertyNameSet;
+import org.apache.jackrabbit.webdav.property.DavProperty;
+    @Override
+    public DavProperty<?> getProperty(DavPropertyName name) {
+        DavProperty prop = super.getProperty(name);
+        if (prop == null && exists()) {
+            Version v = (Version) item;
+            try {
+                if (VERSION_NAME.equals(name)) {
+                    // required, protected DAV:version-name property
+                    prop = new DefaultDavProperty<String>(VERSION_NAME, v.getName(), true);
+                } else if (VERSION_HISTORY.equals(name)) {
+                    // required DAV:version-history (computed) property
+                    String vhHref = getLocatorFromItem(getVersionHistoryItem()).getHref(true);
+                    prop = new HrefProperty(VERSION_HISTORY, vhHref, true);
+                } else if (PREDECESSOR_SET.equals(name)) {
+                    // required DAV:predecessor-set (protected) property
+                    prop = getHrefProperty(VersionResource.PREDECESSOR_SET, v.getPredecessors(), true);
+                } else if (SUCCESSOR_SET.equals(name)) {
+                    // required DAV:successor-set (computed) property
+                    prop = getHrefProperty(SUCCESSOR_SET, v.getSuccessors(), true);
+                } else if (LABEL_NAME_SET.equals(name)) {
+                    // required, protected DAV:label-name-set property
+                    String[] labels = getVersionHistoryItem().getVersionLabels(v);
+                    prop = new LabelSetProperty(labels);
+                } else if (CHECKOUT_SET.equals(name)) {
+                    // required DAV:checkout-set (computed) property
+                    PropertyIterator it = v.getReferences();
+                    List<Node> nodeList = new ArrayList<Node>();
+                    while (it.hasNext()) {
+                        Property p = it.nextProperty();
+                        if (JcrConstants.JCR_BASEVERSION.equals(p.getName())) {
+                            Node n = p.getParent();
+                            if (n.isCheckedOut()) {
+                                nodeList.add(n);
+                            }
+                        }
+                    }
+                    prop = getHrefProperty(CHECKOUT_SET, nodeList.toArray(new Node[nodeList.size()]), true);
+                }
+            } catch (RepositoryException e) {
+                log.error(e.getMessage());
+            }
+        }
+        
+        return prop;
+    }
+
-    /**
-     * Fill the property set for this resource.
-     */
-    protected void initProperties() {
-        super.initProperties();
+    protected void initPropertyNames() {
+        super.initPropertyNames();
-            Version v = (Version)item;
-            // created and creationDate properties
+            names.addAll(JcrDavPropertyNameSet.VERSION_SET);
+        }
+    }
+
+    @Override
+    protected String getCreationDate() {
+        if (exists()) {
+            Version v = (Version) item;
-                String creationDate = HttpDateFormat.creationDateFormat().format(v.getCreated().getTime());
-                // replace dummy creation date from default collection
-                properties.add(new DefaultDavProperty<String>(DavPropertyName.CREATIONDATE, creationDate));
-
-                // required, protected DAV:version-name property
-                properties.add(new DefaultDavProperty<String>(VERSION_NAME, v.getName(), true));
-
-                // required, protected DAV:label-name-set property
-                String[] labels = getVersionHistoryItem().getVersionLabels(v);
-                properties.add(new LabelSetProperty(labels));
-
-                // required DAV:predecessor-set (protected) and DAV:successor-set (computed) properties
-                addHrefProperty(VersionResource.PREDECESSOR_SET, v.getPredecessors(), true);
-                addHrefProperty(SUCCESSOR_SET, v.getSuccessors(), true);
-
-                // required DAV:version-history (computed) property
-                String vhHref = getLocatorFromItem(getVersionHistoryItem()).getHref(true);
-                properties.add(new HrefProperty(VersionResource.VERSION_HISTORY, vhHref, true));
-
-                // required DAV:checkout-set (computed) property
-                PropertyIterator it = v.getReferences();
-                List<Node> nodeList = new ArrayList<Node>();
-                while (it.hasNext()) {
-                    Property p = it.nextProperty();
-                    if (JcrConstants.JCR_BASEVERSION.equals(p.getName())) {
-                        Node n = p.getParent();
-                        if (n.isCheckedOut()) {
-                           nodeList.add(n);
-                        }
-                    }
-                }
-                addHrefProperty(CHECKOUT_SET, nodeList.toArray(new Node[nodeList.size()]), true);
-
+                return HttpDateFormat.creationDateFormat().format(v.getCreated().getTime());
+
+        // fallback
+        return super.getCreationDate();

INS26 INS26 MOV31 INS40 INS40 INS31 INS31 UPD83 INS74 UPD42 INS44 INS78 INS83 INS39 INS42 INS8 INS78 INS83 MOV43 INS42 INS8 INS43 INS76 INS43 INS42 INS60 INS41 INS42 INS21 INS25 INS42 INS25 INS41 INS42 INS42 INS43 INS59 INS27 INS42 INS48 INS32 INS8 MOV32 INS8 INS48 INS42 INS42 INS48 INS27 INS32 INS42 INS42 INS21 INS60 INS54 INS42 UPD42 MOV42 INS42 INS42 INS33 INS42 INS32 INS43 INS59 INS8 INS12 INS25 INS42 INS42 INS40 INS42 INS42 INS11 INS41 INS44 INS8 INS32 INS8 INS25 INS43 INS42 MOV32 INS43 INS42 INS21 INS42 UPD42 MOV42 UPD42 MOV42 MOV21 INS32 INS8 INS25 INS42 INS42 INS32 INS7 INS42 INS42 INS42 MOV60 MOV21 INS32 INS8 INS25 INS42 INS42 INS32 INS42 MOV14 INS7 INS42 INS42 INS42 MOV21 INS32 INS8 INS25 INS42 INS42 INS42 INS14 INS7 INS42 INS42 INS42 MOV21 INS32 INS8 INS25 MOV43 INS42 MOV42 MOV9 INS42 MOV32 INS7 INS42 INS42 INS42 MOV60 MOV21 INS32 INS8 UPD42 INS42 MOV32 INS7 INS42 INS42 INS42 MOV60 MOV60 MOV61 MOV21 UPD42 INS42 MOV14 INS7 INS42 MOV32 UPD42 DEL66 DEL65 DEL29 DEL39 DEL48 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL14 DEL32 DEL42 DEL42 DEL32 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL40 DEL42 DEL14 DEL32 DEL21