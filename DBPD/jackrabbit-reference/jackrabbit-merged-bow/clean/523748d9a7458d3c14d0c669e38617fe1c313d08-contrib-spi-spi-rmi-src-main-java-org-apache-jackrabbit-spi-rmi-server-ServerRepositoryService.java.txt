minor improvement: remove unused instance fields
minor improvement: let TransientISFactory listen to states created by the WorkspaceItemStateFactory
JCR-1004 SPI: Add RepositoryService.getQNodeTypeDefinition 
         >> modify to RepositoryService.getQNodeTypeDefinitions(QName)
         >> adjust SPI implementations
         >> change NodeTypeRegistry to load definitions upon demand.



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@555209 13f79535-47bb-0310-9956-ffa450edef68

-    public QNodeTypeDefinition[] getQNodeTypeDefinitions(RemoteSessionInfo sessionInfo)
+    public RemoteIterator getQNodeTypeDefinitions(RemoteSessionInfo sessionInfo)
-        List nts = new ArrayList();
-        while (it.hasNext()) {
-            QNodeTypeDefinition nt = (QNodeTypeDefinition) it.next();
-            if (nt instanceof Serializable) {
-                nts.add(nt);
-            } else {
-                nts.add(new QNodeTypeDefinitionImpl(nt));
-            }
-        }
-        return (QNodeTypeDefinition[]) nts.toArray(new QNodeTypeDefinition[nts.size()]);
+        return getQNodeTypeDefinitionIterator(it);
-    public QNodeTypeDefinition getQNodeTypeDefinition(RemoteSessionInfo sessionInfo, QName ntName)
+    public RemoteIterator getQNodeTypeDefinitions(RemoteSessionInfo sessionInfo,
+                                                 QName[] ntNames)
-        QNodeTypeDefinition ntDef = service.getQNodeTypeDefinition(getSessionInfo(sessionInfo), ntName);
-        if (ntDef instanceof Serializable) {
-            return ntDef;
-        } else {
-            return new QNodeTypeDefinitionImpl(ntDef);
-        }
+        Iterator it = service.getQNodeTypeDefinitions(getSessionInfo(sessionInfo), ntNames);
+        return getQNodeTypeDefinitionIterator(it);
-    //---------------------------< internal >-----------------------------------
+    //---------------------------< internal >-----------------------------------
+
+    /**
+     *
+     * @param it
+     * @return
+     * @throws RemoteException
+     */
+    private RemoteIterator getQNodeTypeDefinitionIterator(Iterator it) throws RemoteException {
+        List nts = new ArrayList();
+        while (it.hasNext()) {
+            QNodeTypeDefinition nt = (QNodeTypeDefinition) it.next();
+            if (nt instanceof Serializable) {
+                nts.add(nt);
+            } else {
+                nts.add(new QNodeTypeDefinitionImpl(nt));
+            }
+        }
+        return new ServerIterator(nts.iterator(), DEFAULT_BUFFER_SIZE);
+    }

MOV31 INS31 MOV29 INS83 INS43 INS42 MOV44 MOV43 INS43 INS8 UPD43 UPD42 INS29 UPD83 INS43 UPD42 INS44 INS42 INS42 MOV60 INS41 UPD42 INS5 UPD42 MOV41 INS65 INS65 INS65 UPD42 MOV42 INS43 INS42 INS32 MOV43 INS85 UPD43 INS32 INS42 INS42 INS42 INS14 INS42 INS42 UPD42 UPD42 INS42 INS42 INS43 INS32 INS42 UPD42 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL43 DEL62 DEL42 DEL41 DEL8 DEL8 DEL25 DEL43 DEL85 DEL5 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11