JCR-2763: Drop the Dumpable interface

Replace the Dumpable interface with toString() methods also in jcr2spi.

This time I made sure to avoid the "..." + this + "..." -trap in toString()...

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1032651 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.PrintStream;
-import org.apache.jackrabbit.jcr2spi.util.Dumpable;
-public class NodeTypeManagerImpl extends AbstractNodeTypeManager implements NodeTypeDefinitionProvider, NodeTypeRegistryListener, Dumpable {
+public class NodeTypeManagerImpl extends AbstractNodeTypeManager implements NodeTypeDefinitionProvider, NodeTypeRegistryListener {
-    //-----------------------------------------------------------< Dumpable >---
+    //-------------------------------------------------------------< Object >---
+
-     * {@inheritDoc}
+     * Returns the the state of this instance in a human readable format.
-    public void dump(PrintStream ps) {
-        ps.println("NodeTypeManager (" + this + ")");
-        ps.println();
-        ps.println("All NodeTypes:");
-        ps.println();
+    public String toString() {
+        StringBuilder builder = new StringBuilder();
+        builder.append("NodeTypeManager (" + super.toString() + ")\n");
+        builder.append("All NodeTypes:\n");
-                ps.println(nt.getName());
-                ps.println("\tSupertypes");
+                builder.append(nt.getName());
+                builder.append("\n\tSupertypes");
-                    ps.println("\t\t" + supertype.getName());
+                    builder.append("\n\t\t" + supertype.getName());
-                ps.println("\tMixin\t" + nt.isMixin());
-                ps.println("\tOrderableChildNodes\t" + nt.hasOrderableChildNodes());
-                ps.println("\tPrimaryItemName\t" + (nt.getPrimaryItemName() == null ? "<null>" : nt.getPrimaryItemName()));
+                builder.append("\n\tMixin\t" + nt.isMixin());
+                builder.append("\n\tOrderableChildNodes\t" + nt.hasOrderableChildNodes());
+                builder.append("\n\tPrimaryItemName\t" + (nt.getPrimaryItemName() == null ? "<null>" : nt.getPrimaryItemName()));
-                    ps.print("\tPropertyDefinition");
-                    ps.println(" (declared in " + aPd.getDeclaringNodeType().getName() + ") ");
-                    ps.println("\t\tName\t\t" + (aPd.getName()));
+                    builder.append("\n\tPropertyDefinition");
+                    builder.append(" (declared in " + aPd.getDeclaringNodeType().getName() + ") ");
+                    builder.append("\n\t\tName\t\t" + (aPd.getName()));
-                    ps.println("\t\tRequiredType\t" + type);
+                    builder.append("\n\t\tRequiredType\t" + type);
-                    ps.println("\t\tValueConstraints\t" + constraints.toString());
+                    builder.append("\n\t\tValueConstraints\t" + constraints.toString());
-                    ps.println("\t\tDefaultValue\t" + defaultValues.toString());
-                    ps.println("\t\tAutoCreated\t" + aPd.isAutoCreated());
-                    ps.println("\t\tMandatory\t" + aPd.isMandatory());
-                    ps.println("\t\tOnVersion\t" + OnParentVersionAction.nameFromValue(aPd.getOnParentVersion()));
-                    ps.println("\t\tProtected\t" + aPd.isProtected());
-                    ps.println("\t\tMultiple\t" + aPd.isMultiple());
+                    builder.append("\n\t\tDefaultValue\t" + defaultValues.toString());
+                    builder.append("\n\t\tAutoCreated\t" + aPd.isAutoCreated());
+                    builder.append("\n\t\tMandatory\t" + aPd.isMandatory());
+                    builder.append("\n\t\tOnVersion\t" + OnParentVersionAction.nameFromValue(aPd.getOnParentVersion()));
+                    builder.append("\n\t\tProtected\t" + aPd.isProtected());
+                    builder.append("\n\t\tMultiple\t" + aPd.isMultiple());
-                    ps.print("\tNodeDefinition");
-                    ps.println(" (declared in " + aNd.getDeclaringNodeType() + ") ");
-                    ps.println("\t\tName\t\t" + aNd.getName());
+                    builder.append("\n\tNodeDefinition");
+                    builder.append(" (declared in " + aNd.getDeclaringNodeType() + ") ");
+                    builder.append("\n\t\tName\t\t" + aNd.getName());
-                            ps.print("\t\tRequiredPrimaryType\t" + reqPrimaryType.getName());
+                            builder.append("\n\t\tRequiredPrimaryType\t" + reqPrimaryType.getName());
-                        ps.print("\n\t\tDefaultPrimaryType\t" + defPrimaryType.getName());
+                        builder.append("\n\t\tDefaultPrimaryType\t" + defPrimaryType.getName());
-                    ps.println("\n\t\tAutoCreated\t" + aNd.isAutoCreated());
-                    ps.println("\t\tMandatory\t" + aNd.isMandatory());
-                    ps.println("\t\tOnVersion\t" + OnParentVersionAction.nameFromValue(aNd.getOnParentVersion()));
-                    ps.println("\t\tProtected\t" + aNd.isProtected());
-                    ps.println("\t\tAllowsSameNameSiblings\t" + aNd.allowsSameNameSiblings());
+                    builder.append("\n\t\tAutoCreated\t" + aNd.isAutoCreated());
+                    builder.append("\n\t\tMandatory\t" + aNd.isMandatory());
+                    builder.append("\n\t\tOnVersion\t" + OnParentVersionAction.nameFromValue(aNd.getOnParentVersion()));
+                    builder.append("\n\t\tProtected\t" + aNd.isProtected());
+                    builder.append("\n\t\tAllowsSameNameSiblings\t" + aNd.allowsSameNameSiblings());
-            ps.println();
-            e.printStackTrace(ps);
+            builder.append(e.getMessage());
+        return builder.toString();

INS43 INS42 INS65 UPD42 MOV42 INS60 INS41 INS66 INS43 INS59 INS32 INS42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 UPD45 UPD42 MOV42 UPD42 MOV42 INS43 INS48 UPD45 INS42 INS42 UPD42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD45 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD45 UPD45 UPD45 UPD42 UPD42 UPD42 UPD42 UPD45 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD45 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD42 UPD42 UPD42 UPD42 UPD45 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL65 DEL65 DEL39 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL42 DEL32 DEL21 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21