work in progress

- cleaning changeLog upon status changes (resolve TODO)
- ChangeLog: make state-sets private


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@481293 13f79535-47bb-0310-9956-ffa450edef68

-     * @inheritDoc
+     * Depending on status of the given state adapt change log.
+     * E.g. a revert on states will reset the status from 'existing modified' to
+     * 'existing'. A state which changes from 'existing' to 'existing modified'
+     * will go into the modified set of the change log, etc.
+     *
-        // TODO: depending on status of state adapt change log
-        // e.g. a revert on states will reset the status from
-        // 'existing modified' to 'existing'.
-        // a state which changes from 'existing' to 'existing modified' will
-        // go into the modified set of the change log, etc.
-                switch (previousStatus) {
-                    case Status.EXISTING_MODIFIED:
-                        // was modified and is now refreshed
-                        changeLog.modifiedStates.remove(state);
-                        break;
-                    case Status.EXISTING_REMOVED:
-                        // was removed and is now refreshed
-                        changeLog.deletedStates.remove(state);
-                        break;
-                    case Status.STALE_MODIFIED:
-                        // was modified and state and is now refreshed
-                        changeLog.modifiedStates.remove(state);
-                        break;
-                    case Status.NEW:
-                        // was new and has been saved now
-                        changeLog.addedStates.remove(state);
-                        break;
-                }
-                break;
-                changeLog.modified(state);
-                break;
-                // check if modified earlier
-                if (previousStatus == Status.EXISTING_MODIFIED) {
-                    changeLog.modifiedStates.remove(state);
-                    // todo: remove operation(s) as well
-                }
-                changeLog.deleted(state);
-                break;
-                if (previousStatus == Status.NEW) {
-                    // was new and now removed again
-                    changeLog.addedStates.remove(state);
-                    // TODO: remove operation as well
-                } else if (previousStatus == Status.EXISTING_REMOVED) {
-                    // was removed and is now saved
-                    changeLog.deletedStates.remove(state);
-                }
-                break;
-                // state is now stale. remove from modified
-                changeLog.modifiedStates.remove(state);
-                // TODO: remove operation as well
+                changeLog.removeAffected(state, previousStatus);

UPD65 MOV10 MOV10 INS66 INS66 INS66 INS66 INS21 INS32 MOV42 UPD42 MOV42 MOV42 INS42 DEL42 DEL40 DEL49 DEL40 DEL42 DEL42 DEL32 DEL21 DEL10 DEL40 DEL49 DEL40 DEL42 DEL42 DEL32 DEL21 DEL10 DEL40 DEL49 DEL40 DEL42 DEL42 DEL32 DEL21 DEL10 DEL40 DEL49 DEL40 DEL42 DEL42 DEL32 DEL21 DEL10 DEL50 DEL10 DEL42 DEL42 DEL32 DEL21 DEL10 DEL42 DEL40 DEL27 DEL40 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL10 DEL42 DEL40 DEL27 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL40 DEL27 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL40 DEL42 DEL42 DEL32 DEL21 DEL10