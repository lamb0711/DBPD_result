JCR-2003: JCR2SPI / SPI: Add support for JCR 2.0

- initial implementation for Node.setPrimaryType
   needs more careful testing in case of 
   > changing node definition
   > batch utilities present in spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@779227 13f79535-47bb-0310-9956-ffa450edef68

-    public void reorderNodes(NodeId parentId, NodeId srcNodeId, NodeId beforeNodeId)
-            throws RepositoryException {
-
+    public void reorderNodes(NodeId parentId, NodeId srcNodeId, NodeId beforeNodeId) throws RepositoryException {
+    public void setPrimaryType(NodeId nodeId, Name primaryNodeTypeName) throws RepositoryException {
+        addOperation(CancelableOperations.setPrimaryType(nodeId, primaryNodeTypeName));
+    }
+
-        // -----------------------------------------------------< AddProperty >---
-
+        // ---------------------------------------------------< AddProperty >---
-        // -----------------------------------------------------< Move >---
-
+        // ----------------------------------------------------------< Move >---
-        // -----------------------------------------------------< Remove >---
-
+        // --------------------------------------------------------< Remove >---
-        // -----------------------------------------------------< Reorder Nodes >---
-
+        // -------------------------------------------------< Reorder Nodes >---
-
-         * Factory method for creating a {@link SetMixins SetMixins} operation.
+         * Factory method for creating a {@link SetMixins} operation.
-        // -----------------------------------------------------< SetValue >---
+        // -----------------------------------------------------< SetMixins >---
+        /**
+         * A <code>SetPrimaryType</code> operation might cancel with
+         * {@link ConsolidatingChangeLog.CancelableOperations.Remove Remove} and
+         * {@link ConsolidatingChangeLog.CancelableOperations.SetPrimaryType SetPrimaryType} operations.
+         */
+        public static class SetPrimaryType extends Operations.SetPrimaryType implements CancelableOperation {
+            public SetPrimaryType(NodeId nodeId, Name primaryTypeName) {
+                super(nodeId, primaryTypeName);
+            }
+
+            /**
+             * @return
+             * <ul>
+             * <li>{@link ConsolidatingChangeLog.CancelableOperation#CANCEL_THIS CANCEL_THIS} if
+             *   <code>other</code> is an instance of
+             *   {@link ConsolidatingChangeLog.CancelableOperations.Remove Remove} and has an node higher up
+             *   the hierarchy or this node as target. Or if <code>other</code> is an instance of
+             *   {@link ConsolidatingChangeLog.CancelableOperations.SetMixins SetMixins} which has this node
+             *   as target and has the same <code>mixinNodeTypeNames</code>.</li>
+             * <li>{@link ConsolidatingChangeLog.CancelableOperation#CANCEL_NONE CANCEL_NONE} otherwise.</li>
+             * </ul>
+             */
+            public int cancel(CancelableOperation other) throws RepositoryException {
+                if (other instanceof Remove) {
+                    Path thisPath = ConsolidatingChangeLog.getPath(nodeId);
+                    Path otherPath = ConsolidatingChangeLog.getPath(((Remove) other).itemId);
+                    return thisPath.isDescendantOf(otherPath) || thisPath.equals(otherPath)
+                        ? CANCEL_THIS
+                        : CANCEL_NONE;
+                }
+                if (other instanceof SetPrimaryType) {
+                    SetPrimaryType setPrimaryType = (SetPrimaryType) other;
+                    if (primaryTypeName.equals(setPrimaryType.primaryTypeName)) {
+                        Path thisPath = ConsolidatingChangeLog.getPath(nodeId);
+                        Path otherPath = ConsolidatingChangeLog.getPath(setPrimaryType.nodeId);
+                        if (thisPath.equals(otherPath)) {
+                            return CANCEL_THIS;
+                        }
+                    }
+                }
+                return CANCEL_NONE;
+            }
+        }
+
+        /**
+         * Factory method for creating a {@link SetPrimaryType} operation.
+         *
+         * @see Batch#setPrimaryType(NodeId, Name)
+         * @param nodeId
+         * @param primaryTypeName
+         * @return
+         */
+        public static CancelableOperation setPrimaryType(NodeId nodeId, Name primaryTypeName) {
+            return new SetPrimaryType(nodeId, primaryTypeName);
+        }
+
+        // ------------------------------------------------------< SetValue >---

INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS55 INS31 INS43 INS42 INS43 INS42 INS42 INS21 INS29 INS83 INS83 INS42 INS43 INS43 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS42 INS32 INS65 INS40 INS42 INS83 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS32 INS66 INS65 INS66 INS65 INS66 INS43 INS42 INS43 INS42 INS46 INS65 INS43 INS42 INS42 INS25 INS25 INS41 INS66 INS65 INS66 INS68 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS40 INS66 INS40 INS66 INS42 INS42 INS42 INS42 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS62 INS8 INS62 INS8 INS42 INS42 INS42 INS42 INS69 INS69 INS43 INS42 INS42 INS67 INS66 INS40 INS66 INS40 INS66 INS67 INS66 INS42 INS43 INS60 INS60 INS41 INS42 INS43 INS60 INS25 INS43 INS43 INS42 INS40 INS42 INS40 INS42 INS42 INS43 INS59 INS43 INS59 INS16 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS40 INS60 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS22 INS32 INS32 INS43 INS42 INS43 INS59 INS43 INS59 INS32 INS8 INS36 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS41 INS11 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS43 INS42 INS42 DEL66