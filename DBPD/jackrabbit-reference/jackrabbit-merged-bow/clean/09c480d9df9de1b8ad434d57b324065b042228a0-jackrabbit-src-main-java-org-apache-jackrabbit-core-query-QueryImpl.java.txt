Open up some access modifiers to allow for better extension of the default query handler.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@350022 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.query.Query;
- * Implements the {@link Query} interface.
+ * Provides the default implementation for a JCR query.
-public class QueryImpl implements Query {
+public class QueryImpl extends AbstractQueryImpl {
-    private final SessionImpl session;
+    protected SessionImpl session;
-    private final String statement;
+    protected String statement;
-    private final String language;
+    protected String language;
-    private final ExecutableQuery query;
+    protected ExecutableQuery query;
-    private Node node;
+    protected Node node;
-     * Creates a new query instance from a query string.
-     *
-     * @param session   the session of the user executing this query.
-     * @param itemMgr   the item manager of the session executing this query.
-     * @param handler   the query handler of the search index.
-     * @param statement the query statement.
-     * @param language  the syntax of the query statement.
-     * @throws InvalidQueryException if the query statement is invalid according
-     *                               to the specified <code>language</code>.
+     * The query handler for this query.
-    public QueryImpl(SessionImpl session,
+    protected QueryHandler handler;
+
+    /**
+     * Flag indicating whether this query is initialized.
+     */
+    private boolean initialized = false;
+
+    /**
+     * @inheritDoc
+     */
+    public void init(SessionImpl session,
+        checkNotInitialized();
+        this.handler = handler;
+        initialized = true;
-     * Create a new query instance from a nt:query node.
-     *
-     * @param session the session of the user executing this query.
-     * @param itemMgr the item manager of the session executing this query.
-     * @param handler the query handler of the search index.
-     * @param node    a node of type <code>nt:query</code>.
-     * @throws InvalidQueryException If <code>node</code> is not a valid persisted query
-     *                               (that is, a node of type <code>nt:query</code>).
-     * @throws RepositoryException   if another error occurs
+     * @inheritDoc
-    public QueryImpl(SessionImpl session,
+    public void init(SessionImpl session,
-
+        checkNotInitialized();
+        this.handler = handler;
+        initialized = true;
+        checkInitialized();
+        checkInitialized();
+        checkInitialized();
+        checkInitialized();
+
+        checkInitialized();
+
+    //-----------------------------< internal >---------------------------------
+
+    /**
+     * Checks if this query is not yet initialized and throws an
+     * <code>IllegalStateException</code> if it is already initialized.
+     */
+    protected void checkNotInitialized() {
+        if (initialized) {
+            throw new IllegalStateException("already initialized");
+        }
+    }
+
+    /**
+     * Checks if this query is initialized and throws an
+     * <code>IllegalStateException</code> if it is not yet initialized.
+     */
+    protected void checkInitialized() {
+        if (!initialized) {
+            throw new IllegalStateException("not initialized");
+        }
+    }

INS43 INS23 INS23 INS31 INS31 INS42 UPD83 UPD83 UPD83 UPD83 UPD83 INS29 INS83 INS43 INS59 INS29 INS83 INS39 INS59 INS39 UPD42 INS39 UPD42 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 UPD66 INS65 UPD42 MOV42 INS42 INS65 INS42 INS9 UPD65 INS21 INS21 INS21 UPD65 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS65 INS25 INS65 INS25 INS66 INS66 INS32 INS7 INS7 INS32 INS7 INS7 INS32 INS32 INS32 INS32 INS32 INS66 INS66 INS42 INS8 INS66 INS66 INS38 INS8 INS42 INS22 INS42 INS42 INS9 INS42 INS22 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS53 INS42 INS53 INS52 INS42 INS52 INS42 INS14 INS14 INS43 INS45 INS43 INS45 INS42 INS42 DEL40 DEL26 DEL42 DEL65 DEL66 DEL43 DEL83 DEL83 DEL83 DEL83 DEL66 DEL65 DEL42 DEL66 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65