JCR-1438: Replace Config classes with factories

Reintroduced change from revision 826653:

Use generics in BeanConfig.newInstance() to avoid the need of class casts.

Use the standard java.beans classes instead of BeanMap for the configured bean properties. This allows better control over value types.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@829798 13f79535-47bb-0310-9956-ffa450edef68

-                            (QueryHandler) config.newInstance();
+                            config.newInstance(QueryHandler.class);
-                    BeanConfig config = parseBeanConfig(element);
-                    try {
-                        return (ISMLocking) config.newInstance();
-                    } catch (ClassCastException e) {
-                        throw new RepositoryException(
-                                "Invalid ISMLocking class: "
-                                + config.getClassName(), e);
-                    }
+                    return parseBeanConfig(element).newInstance(ISMLocking.class);
-                Object object = config.newInstance();
-                if (object instanceof Journal) {
-                    Journal journal = (Journal) object;
-                    if (journal instanceof AbstractJournal) {
-                        ((AbstractJournal) journal).setRepositoryHome(home);
-                    }
-                    try {
-                        journal.init(id, resolver);
-                    } catch (JournalException e) {
-                        // TODO: Should JournalException extend RepositoryException?
-                        throw new RepositoryException(
-                                "Journal initialization failed: " + journal, e);
-                    }
-                    return journal;
-                } else {
-                    throw new RepositoryException(
-                            "Invalid Journal implementation class: "
-                            + config.getClassName());
+                Journal journal = config.newInstance(Journal.class);
+                if (journal instanceof AbstractJournal) {
+                    ((AbstractJournal) journal).setRepositoryHome(home);
+                try {
+                    journal.init(id, resolver);
+                } catch (JournalException e) {
+                    // TODO: Should JournalException extend RepositoryException?
+                    throw new RepositoryException(
+                            "Journal initialization failed: " + journal, e);
+                }
+                return journal;
-                        DataStore store = (DataStore) bc.newInstance();
+                        DataStore store = bc.newInstance(DataStore.class);
-                RepositoryLockMechanism lock = null;
-                        lock = (RepositoryLockMechanism) bc.newInstance();
-                        break;
+                        return bc.newInstance(RepositoryLockMechanism.class);
-                if (lock == null) {
-                    lock = new RepositoryLock();
-                }
-                return lock;
+                return new RepositoryLock();
-                    FileSystem fs = (FileSystem) config.newInstance();
+                    FileSystem fs = config.newInstance(FileSystem.class);
-                } catch (ClassCastException e) {
-                    throw new RepositoryException(
-                            "Invalid file system implementation class: "
-                            + config.getClassName(), e);

MOV31 MOV29 UPD83 MOV43 UPD42 MOV44 MOV44 MOV44 MOV43 INS41 INS14 MOV43 INS1 INS31 INS83 MOV43 INS42 MOV44 MOV43 MOV8 MOV60 INS8 MOV43 MOV14 MOV41 INS32 INS32 INS42 INS42 INS57 MOV43 MOV32 MOV42 INS57 MOV43 INS41 INS32 MOV43 MOV43 INS32 MOV42 MOV42 INS57 INS32 INS32 MOV42 MOV42 INS57 MOV43 MOV42 MOV42 INS57 MOV42 MOV42 INS57 MOV43 MOV43 MOV43 DEL32 DEL11 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL25 DEL83 DEL42 DEL1 DEL14 DEL41 DEL8 DEL31 DEL32 DEL11 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL43 DEL32 DEL11 DEL7 DEL21 DEL10 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12