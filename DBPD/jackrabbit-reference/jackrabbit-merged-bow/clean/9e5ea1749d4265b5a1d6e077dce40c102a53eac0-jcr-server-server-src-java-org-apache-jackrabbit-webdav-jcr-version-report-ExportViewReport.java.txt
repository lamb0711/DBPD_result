JCR-337 - Remove jcr dependency from dav-library
JCR-343 - Report#init limits the Report interface to DeltaV compliant resources
JCR-340 - ValuesProperty missing property type information
JCR-342 - DavResource#getDavSession() missing
JCR-344 - DeltaVResource lists MKWORKSPACE in the method constant.
JCR-345 - DavException does not allow to specify an exception cause

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385540 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.version.DeltaVResource;
-import org.apache.jackrabbit.webdav.DavSession;
-import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.DavResource;
-public class ExportViewReport implements Report {
+public class ExportViewReport extends AbstractJcrReport {
-    private String absItemPath;
-    private Session session;
-    private ReportInfo info;
+    private String absNodePath;
-     * @see Report#init(org.apache.jackrabbit.webdav.version.DeltaVResource, org.apache.jackrabbit.webdav.version.report.ReportInfo)
+     * @see Report#init(DavResource, ReportInfo)
-    public void init(DeltaVResource resource, ReportInfo info) throws DavException {
-        if (!getType().isRequestedReportType(info)) {
-            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "dcr:exportview element expected.");
-        }
-        if (resource == null) {
-            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "Resource must not be null.");
-        }
-
-        this.info = info;
-
-        DavSession davSession = resource.getSession();
-        if (davSession == null || davSession.getRepositorySession() == null) {
-            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "The resource must provide a non-null session object in order to create the exportview report.");
-        }
-        session = davSession.getRepositorySession();
-        absItemPath = resource.getLocator().getJcrPath();
+    public void init(DavResource resource, ReportInfo info) throws DavException {
+        // delegate validation to super class
+        super.init(resource, info);
+        // report specific validation: resource must represent an existing
+        // repository node
+        absNodePath = resource.getLocator().getRepositoryPath();
-            if (!session.itemExists(absItemPath)) {
-                throw new JcrDavException(new PathNotFoundException(absItemPath + " does not exist."));
-    }
+            if (!(getRepositorySession().itemExists(absNodePath) && getRepositorySession().getItem(absNodePath).isNode())) {
+                throw new JcrDavException(new PathNotFoundException(absNodePath + " does not exist."));
+            }
+
-        boolean skipBinary = info.containsContentElement("skipbinary", ItemResourceConstants.NAMESPACE);
-        boolean noRecurse = info.containsContentElement("norecurse", ItemResourceConstants.NAMESPACE);
-
+        boolean skipBinary = getReportInfo().containsContentElement("skipbinary", ItemResourceConstants.NAMESPACE);
+        boolean noRecurse = getReportInfo().containsContentElement("norecurse", ItemResourceConstants.NAMESPACE);
-            String prefix = "_tmp_" + Text.getName(absItemPath);
+            String prefix = "_tmp_" + Text.getName(absNodePath);
-            if (info.containsContentElement("sysview", ItemResourceConstants.NAMESPACE)) {
-                session.exportSystemView(absItemPath, out, skipBinary, noRecurse);
+            if (getReportInfo().containsContentElement("sysview", ItemResourceConstants.NAMESPACE)) {
+                getRepositorySession().exportSystemView(absNodePath, out, skipBinary, noRecurse);
-                session.exportDocumentView(absItemPath, out, skipBinary, noRecurse);
+                getRepositorySession().exportDocumentView(absNodePath, out, skipBinary, noRecurse);

MOV26 UPD40 UPD43 UPD42 UPD42 UPD43 INS21 UPD42 INS48 INS42 INS42 INS42 UPD42 UPD43 MOV43 UPD42 INS32 INS32 INS42 INS36 UPD42 MOV42 UPD42 MOV42 INS32 INS27 UPD42 MOV42 INS32 INS32 UPD42 INS32 UPD42 INS32 UPD42 INS32 MOV42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL59 DEL23 DEL40 DEL40 DEL43 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL40 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL43 DEL40 DEL45 DEL14 DEL53 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL43 DEL40 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL32