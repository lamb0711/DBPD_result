Simplify QueryHandler. Added support for jcr:score and jcr:path.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@152654 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.search.Constants;
+import org.apache.jackrabbit.core.search.ExecutableQuery;
-import javax.jcr.ItemNotFoundException;
-    public javax.jcr.query.Query createQuery(SessionImpl session,
+    public ExecutableQuery createExecutableQuery(SessionImpl session,
-     * Retrieves an existing persistent query. If <code>node</code>
-     * is not a valid persisted query (that is, a node of type
-     * <code>nt:query</code>), an <code>InvalidQueryException</code>
-     * is thrown.
-     *
-     * @param absPath path to a persisted query (that is, a node of type
-     *   <code>nt:query</code>).
-     * @throws InvalidQueryException If <code>absPath</code> is not a valid persisted query
-     *   (that is, a node of type <code>nt:query</code>).
-     * @throws RepositoryException if another error occurs
-     * @return a <code>Query</code> object.
-     */
-    public javax.jcr.query.Query createQuery(SessionImpl session,
-                                             ItemManager itemMgr,
-                                             String absPath)
-            throws ItemNotFoundException, RepositoryException {
-        return new QueryImpl(session, itemMgr, this, absPath);
-    }
-
-    /**
-            // FIXME: ??? do logging, simply return?
-            return null;
+            throw new IOException("Unable to obtain read lock on search index.");
-            try {
-                prop = orderProps[i].toJCRName(nsMappings);
-            } catch (NoPrefixDeclaredException e) {
-                // will never happen
+            if (Constants.JCR_SCORE.equals(orderProps[i])) {
+                sortFields[i] = new SortField(null, SortField.SCORE, !orderSpecs[i]);
+            } else {
+                try {
+                    prop = orderProps[i].toJCRName(nsMappings);
+                } catch (NoPrefixDeclaredException e) {
+                    // will never happen
+                }
+                sortFields[i] = new SortField(prop, SortField.STRING, !orderSpecs[i]);
-            sortFields[i] = new SortField(prop, SortField.STRING, !orderSpecs[i]);

MOV26 INS26 UPD40 INS40 UPD43 UPD42 INS42 INS8 MOV60 INS25 INS53 INS32 INS8 MOV8 INS14 INS40 INS42 INS2 INS21 INS43 INS45 INS42 INS42 INS7 INS42 INS2 INS14 INS42 INS42 INS43 INS33 INS40 INS38 INS42 INS2 INS42 INS42 DEL40 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL14 DEL41 DEL8 DEL31 DEL33 DEL41