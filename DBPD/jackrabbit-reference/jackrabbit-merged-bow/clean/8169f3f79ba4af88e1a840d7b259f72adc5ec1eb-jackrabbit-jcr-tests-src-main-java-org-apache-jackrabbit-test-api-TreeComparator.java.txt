JCR-2188: Parallelize tests

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@791253 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.test.AbstractJCRTest;
-
+import junit.framework.Assert;
+
-class TreeComparator extends AbstractJCRTest {
+class TreeComparator extends Assert {
+
-        setUp();
-    public void tearDown() throws Exception {
-        session = null;
-        workspace = null;
-        super.tearDown();
-    }
-
-            root.addNode(nodeName1);
-            root.addNode(nodeName2, testNodeType);
+            root.addNode(sc.nodeName1);
+            root.addNode(sc.nodeName2, sc.testNodeType);
-            root.setProperty(propertyName1, new ByteArrayInputStream(byteArray));
-            root.setProperty(nodeName3, "hello");
+            root.setProperty(sc.propertyName1, new ByteArrayInputStream(byteArray));
+            root.setProperty(sc.nodeName3, "hello");
-            log.println("Error while creating example tree: " + e.getMessage());
+            sc.log("Error while creating example tree: " + e.getMessage());
-            log.println("Error while creating example tree: " + e.getMessage());
+            sc.log("Error while creating example tree: " + e.getMessage());
-                log.println("Cannot create node with mixin node type: " + e);
+                sc.log("Cannot create node with mixin node type: " + e);
-                    log.println("Could not remove node: " + e);
+                    sc.log("Could not remove node: " + e);
-            pt.setProperty(sc.nameTestProperty, superuser.getValueFactory().createValue(jcrPrimaryType, PropertyType.NAME));
+            pt.setProperty(sc.nameTestProperty, session.getValueFactory().createValue(sc.jcrPrimaryType, PropertyType.NAME));
-            pt.setProperty(sc.pathTestProperty, superuser.getValueFactory().createValue("paths/dont/have/to/point/anywhere", PropertyType.PATH));
+            pt.setProperty(sc.pathTestProperty, session.getValueFactory().createValue("paths/dont/have/to/point/anywhere", PropertyType.PATH));
-            ensureMixinType(referenceable, mixReferenceable);
+            sc.ensureMixinType(referenceable, sc.mixReferenceable);
-            log.println("Could not create multi-value property: " + e);
+            sc.log("Could not create multi-value property: " + e);
-            log.println("Comparing " + a.getPath() + " to " + b.getPath());
+            sc.log("Comparing " + a.getPath() + " to " + b.getPath());
-            primaryTypeA = a.getProperty(jcrPrimaryType).getName();
-            primaryTypeB = b.getProperty(jcrPrimaryType).getName();
+            primaryTypeA = a.getProperty(sc.jcrPrimaryType).getName();
+            primaryTypeB = b.getProperty(sc.jcrPrimaryType).getName();
-            log.println("Cannot display tree diagnostics: " + e);
+            sc.log("Cannot display tree diagnostics: " + e);
+        StringBuffer sb = new StringBuffer();
-            log.print("-");
+            sb.append("-");
-        log.print(n.getName() + " ");
-        log.print(n.getPrimaryNodeType().getName() + " [ ");
+        sb.append(n.getName() + " ");
+        sb.append(n.getPrimaryNodeType().getName() + " [ ");
-            log.print(p.getName() + " ");
+            sb.append(p.getName() + " ");
-        log.println("]");
+        sb.append("]");
+        sc.log(sb.toString());

MOV26 UPD40 UPD43 UPD42 INS60 INS21 INS43 INS59 INS32 INS42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS43 INS42 INS42 INS40 INS40 INS40 INS40 INS40 INS42 INS40 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS40 INS42 INS42 UPD42 UPD42 INS40 INS40 INS42 INS42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL33 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21 DEL42 DEL48 DEL21 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42