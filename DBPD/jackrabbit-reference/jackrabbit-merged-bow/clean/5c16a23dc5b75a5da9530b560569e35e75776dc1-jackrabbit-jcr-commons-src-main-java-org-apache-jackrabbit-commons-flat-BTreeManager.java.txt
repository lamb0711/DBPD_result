JCR-2711: BTreeManager needs more flexible mechanism for ignoring (internal) properties

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@984729 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.commons.predicate.Predicate;
+import java.util.Arrays;
+import java.util.HashSet;
-import java.util.NoSuchElementException;
+import java.util.Set;
+    private final Set<String> ignoredProperties = new HashSet<String>(Arrays.asList(
+            JcrConstants.JCR_PRIMARYTYPE,
+            JcrConstants.JCR_MIXINTYPES));
+
+     * Properties to ignore. The default set contains {@link JcrConstants#JCR_PRIMARYTYPE}
+     * and {@link JcrConstants#JCR_MIXINTYPES}.
+     *
+     * @return
+     */
+    public Set<String> getIgnoredProperties() {
+        return ignoredProperties;
+    }
+
+    /**
-            Node parent = node.getParent();
-            node.remove();
-            removeRec(parent);
+            removeRec(node);
-        return !node.hasNodes() && !isRoot(node);
+        return !node.hasNodes();
-        Iterator<Property> filteredIterator = new Iterator<Property>() {
-            Property next = null;
-
-            public boolean hasNext() {
-                while (next == null && properties.hasNext()) {
-                    Property p = properties.nextProperty();
-                    try {
-                        if (!JcrConstants.JCR_PRIMARYTYPE.equals(p.getName())) {
-                            next = p;
-                        }
-                    }
-                    catch (RepositoryException ignore) {
-                        next = p;
-                    }
-                }
-
-                return next != null;
-            }
-
-            public Property next() {
-                if (hasNext()) {
-                    Property property = next;
-                    next = null;
-                    return property;
-                }
-                else {
-                    throw new NoSuchElementException();
-                }
-            }
-
-            public void remove() {
-                throw new UnsupportedOperationException();
-            }
-        };
-
-        return getSizedIterator(filteredIterator, size > 0 ? size - 1 : size);
+        for (Iterator<String> ignored = ignoredProperties.iterator(); size > 0 && ignored.hasNext(); ) {
+            if (node.hasProperty(ignored.next())) {
+                size--;
+            }
+        }
+
+        return getSizedIterator(filterProperties(properties), size);
+    /**
+     * Filtering ignored properties from the given properties.
+     */
+    private Iterator<Property> filterProperties(Iterator<Property> properties) {
+        return new FilterIterator<Property>(properties, new Predicate() {
+            public boolean evaluate(Object object) {
+                try {
+                    Property p = (Property) object;
+                    return !ignoredProperties.contains(p.getName());
+                }
+                catch (RepositoryException ignore) {
+                    return true;
+                }
+            }
+        });
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS23 INS31 INS31 INS31 INS83 INS83 INS74 INS59 INS29 MOV83 INS74 INS42 INS8 MOV29 UPD83 MOV83 MOV74 UPD42 MOV42 MOV44 MOV43 MOV8 INS29 UPD83 MOV83 MOV74 UPD42 MOV42 INS44 INS8 INS43 INS43 INS42 INS14 INS65 INS65 INS43 INS43 MOV41 MOV60 MOV60 INS24 MOV41 INS65 MOV74 INS42 MOV41 INS42 INS42 INS74 INS32 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS42 MOV38 INS58 INS27 INS8 INS32 INS66 INS14 INS43 INS43 INS42 INS42 INS40 INS40 INS67 INS67 INS74 INS59 MOV27 INS32 INS25 INS42 INS32 INS42 INS74 INS42 INS14 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 MOV42 INS32 INS8 INS42 INS42 INS43 MOV43 INS43 INS1 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV21 INS42 INS42 INS31 INS42 INS42 INS37 INS83 INS39 INS42 INS44 MOV8 INS42 INS43 INS42 INS42 INS8 INS60 INS41 MOV43 INS59 MOV38 INS41 INS42 INS11 INS9 MOV43 INS42 INS42 UPD42 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL33 DEL7 DEL42 DEL32 DEL42 DEL42 DEL59 DEL60 DEL8 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL83 DEL42 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL39 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL61 DEL8 DEL31 DEL31 DEL39 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL1 DEL14 DEL59 DEL60 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL34 DEL27 DEL42 DEL16 DEL32