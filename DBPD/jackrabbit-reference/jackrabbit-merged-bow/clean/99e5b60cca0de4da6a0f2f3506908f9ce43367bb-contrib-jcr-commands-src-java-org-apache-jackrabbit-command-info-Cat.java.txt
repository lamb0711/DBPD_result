jcr-commands 
 - naming and packaging reviewed
 - now commands only read parameters from the context because commands shouldn't have a state of their own but use only the context.
 - i18n reorganized in one single resources file
 - batch mode added
 - cover most of jcr operations (versioning, locking, etc.)
 - commands simplified. Most commands don't have default values.
 - logging added

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@294914 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.chain.command.info;
+package org.apache.jackrabbit.command.info;
-import org.apache.jackrabbit.chain.CtxHelper;
-import org.apache.jackrabbit.chain.JcrCommandException;
+import org.apache.jackrabbit.command.CommandHelper;
+import org.apache.jackrabbit.command.CommandException;
- * Displays the content of a property or a node of type nt:file or nt:resource
+ * Displays the content of a <code>Property</code> or a <code>Node</code> of
+ * type nt:file or nt:resource.
-    private String path;
+    private String pathKey = "path";
-    private int index;
+    private String indexKey = "index";
-        Item item = CtxHelper.getItem(ctx, path);
+        String path = (String) ctx.get(this.pathKey);
+        Item item = CommandHelper.getItem(ctx, path);
-    public String getPath()
+    public String getPathKey()
-        return path;
+        return pathKey;
-    public void setPath(String path)
+    public void setPathKey(String path)
-        this.path = path;
+        this.pathKey = path;
-     * @throws JcrCommandException
+     * @throws CommandException
-            JcrCommandException, RepositoryException, IllegalStateException,
+            CommandException, RepositoryException, IllegalStateException,
-            throw new JcrCommandException("cat.unsupported.type", new String[]
+            throw new CommandException("exception.cat.unsupported.type", new String[]
-     * @throws JcrCommandException
+     * @throws CommandException
-            throws JcrCommandException, ValueFormatException,
+            throws CommandException, ValueFormatException,
+        String indexStr = (String) ctx.get(this.indexKey);
+        int index = 0;
+        if (indexStr != null)
+        {
+            index = Integer.parseInt(indexStr);
+        }
-        PrintWriter out = CtxHelper.getOutput(ctx);
+        PrintWriter out = CommandHelper.getOutput(ctx);
-     * @return Returns the index.
+     * @return Returns the indexKey.
-    public int getIndex()
+    public String getIndexKey()
-        return index;
+        return indexKey;
-     * @param index
-     *            The index to set.
+     * @param indexKey
+     *            The indexKey to set.
-    public void setIndex(int index)
+    public void setIndexKey(String indexKey)
-        this.index = index;
+        this.indexKey = indexKey;

UPD40 UPD40 UPD40 INS43 UPD42 UPD42 UPD43 UPD43 INS43 UPD42 UPD42 UPD66 INS66 UPD42 INS45 INS42 UPD42 INS45 INS60 UPD42 UPD42 INS60 INS60 INS25 INS42 INS43 UPD42 INS43 INS59 UPD42 UPD42 UPD42 INS43 INS59 INS39 INS59 INS27 INS8 UPD66 UPD42 UPD42 UPD66 INS42 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS34 INS42 INS33 INS21 UPD42 INS43 INS32 UPD42 UPD42 INS43 INS32 INS7 UPD42 UPD42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS22 INS42 INS32 INS52 INS42 UPD43 UPD45 INS52 INS42 INS42 INS42 INS42 UPD42 DEL39 DEL39 DEL39