work in progress

- operations: rename getAffectedIds to getAffectedStates
- operations: return ItemState params instead of ids whereever possible and
  let OperationVisitor deal with all kind of issues arising with SPI ids.
- AddNode/AddProperty operations: don't list state to be created as affected. Not required since operations are collected upon refresh/save, in which case a 'new' item can never be the starting point.
- transient move: let parent NodeState handle the move/renaming of child states
- transient reorder: let parent NodeState handle the reorder logic
- NodeState: remove unused methods and mark setParent private
- NodeImpl: protected getNodeId() no more used by subclasses in version package.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431887 13f79535-47bb-0310-9956-ffa450edef68

-    private final NodeId parentId;
+    private final NodeState parentState;
-    private ReorderNodes(NodeId parentId, NodeId insertId, NodeId beforeId) {
-        this.parentId = parentId;
+    private ReorderNodes(NodeState parentState, NodeId insertId, NodeId beforeId) {
+        this.parentState = parentState;
-        addAffectedItemId(parentId);
+        addAffectedItemState(parentState);
-    public NodeId getParentId() {
-        return parentId;
+    public NodeState getParentState() {
+        return parentState;
-        Operation op = new ReorderNodes(parentState.getNodeId(), insertId, beforeId);
+        Operation op = new ReorderNodes(parentState, insertId, beforeId);

UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 DEL42 DEL42 DEL32