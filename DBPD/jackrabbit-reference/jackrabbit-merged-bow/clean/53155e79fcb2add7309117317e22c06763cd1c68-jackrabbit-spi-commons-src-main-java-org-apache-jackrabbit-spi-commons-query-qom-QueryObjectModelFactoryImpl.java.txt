JCR-2076: JSR 283: Joins
- columns

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@781369 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashSet;
-import java.util.Set;
-
-    private static final Set<String> VALID_ORDERS = new HashSet<String>();
-
-    static {
-        VALID_ORDERS.add(QueryObjectModelConstants.JCR_ORDER_ASCENDING);
-        VALID_ORDERS.add(QueryObjectModelConstants.JCR_ORDER_DESCENDING);
-    }
-
-            // TODO: correct exception?
-            throw new RepositoryException("source must not be null");
+            throw new InvalidQueryException("source must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("Constraints must not be null");
+            throw new InvalidQueryException("Constraints must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("Constraints must not be null");
+            throw new InvalidQueryException("Constraints must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("bindVariableName must not be null");
+            throw new InvalidQueryException("bindVariableName must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("value must not be null");
+            throw new InvalidQueryException("value must not be null");
-        return new ColumnImpl(resolver, null, propName, propName);
+        return new ColumnImpl(resolver, null, propName, propertyName);
-            // TODO: correct exception?
-            throw new RepositoryException(
+            throw new InvalidQueryException(
-        Name colName = null;
-        if (columnName != null) {
-            try {
-                colName = resolver.getQName(columnName);
-            } catch (NameException e) {
-                throw new InvalidQueryException(e.getMessage());
-            }
-        }
-        return new ColumnImpl(resolver, null, propName, colName);
+        return new ColumnImpl(resolver, null, propName, columnName);
-            // TODO: correct exception?
-            throw new RepositoryException(
+            throw new InvalidQueryException(
-        Name colName = null;
-        if (columnName != null) {
-            try {
-                colName = resolver.getQName(columnName);
-            } catch (NameException e) {
-                throw new InvalidQueryException(e.getMessage());
-            }
-        }
-                propName, colName);
+                propName, columnName);
-            // TODO: correct exception?
-            throw new RepositoryException("selectorName must not be null");
+            throw new InvalidQueryException("selectorName must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("nodeTypeName must not be null");
+            throw new InvalidQueryException("nodeTypeName must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("path must not be null");
+            throw new InvalidQueryException("path must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException("propertyName must not be null");
+            throw new InvalidQueryException("propertyName must not be null");
-            // TODO: correct exception?
-            throw new RepositoryException(
+            throw new InvalidQueryException(

MOV8 MOV8 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS45 UPD43 INS45 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL23 DEL83 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL28 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL12 DEL54 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL12 DEL54 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8