- JCR-1958: Enhanced JCR remoting (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@739210 13f79535-47bb-0310-9956-ffa450edef68

-
-    /**
-     * Generate a valid JSON string from the given <code>str</code>.
-     * 
-     * @param str A String
-     * @return JSON string surrounded by double quotes.
-     * @see <a href="http://tools.ietf.org/html/rfc4627">RFC 4627</a>
-     */
-    public static String getJSONString(String str) {
-        if (str == null || str.length() == 0) {
-            return "\"\"";
-        }
-
-        int len = str.length();
-        StringBuffer sb = new StringBuffer(len + 2);
-        // leading quote
-        sb.append('"');
-        // append passed string escaping characters as required
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            switch (c) {
-                // reverse solidus and double quote
-                case '\\':
-                case '"':
-                    sb.append('\\').append(c);
-                    break;
-                // tab, line breaking chars and backspace
-                case '\b':
-                    sb.append("\\b");
-                    break;
-                case '\f':
-                    sb.append("\\f");
-                    break;
-                case '\n':
-                    sb.append("\\n");
-                    break;
-                case '\r':
-                    sb.append("\\r");
-                    break;
-                case '\t':
-                    sb.append("\\t");
-                    break;
-                // other control characters and 'unescaped'
-                default:
-                    if (c < 32) {
-                        // control characters except those already covered above.
-                        String uc = Integer.toHexString(c);
-                        sb.append("\\u");
-                        int uLen = uc.length();
-                        while (uLen++ < 4) {
-                            sb.append('0');
-                        }
-                        sb.append(uc);
-                    } else {
-                        // unescaped = %x20-21 / %x23-5B / %x5D-10FFFF
-                        sb.append(c);
-                    }
-            }
-        }
-        // trailing quote
-        sb.append('"');
-        return sb.toString();
-    }

DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL45 DEL41 DEL8 DEL25 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL34 DEL27 DEL14 DEL59 DEL60 DEL42 DEL42 DEL13 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL13 DEL49 DEL13 DEL49 DEL42 DEL42 DEL13 DEL32 DEL42 DEL42 DEL32 DEL21 DEL10 DEL13 DEL49 DEL42 DEL42 DEL45 DEL32 DEL21 DEL10 DEL13 DEL49 DEL42 DEL42 DEL45 DEL32 DEL21 DEL10 DEL13 DEL49 DEL42 DEL42 DEL45 DEL32 DEL21 DEL10 DEL13 DEL49 DEL42 DEL42 DEL45 DEL32 DEL21 DEL10 DEL13 DEL49 DEL42 DEL42 DEL45 DEL32 DEL21 DEL10 DEL49 DEL42 DEL34 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL37 DEL34 DEL27 DEL42 DEL42 DEL13 DEL32 DEL21 DEL8 DEL61 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL50 DEL8 DEL24 DEL42 DEL42 DEL13 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31