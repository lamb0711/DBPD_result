JCR-1104 : JSR 283 support (security work in progress)

- add Authorizable.getPropertyNames()
- User.getCredentials returns Credentials
-> adjust implementation and tests

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@651221 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Iterator;
-    private final Collection credentialSet = new HashSet();
+    private final CryptedSimpleCredentials creds;
-        for(Iterator it = user.getCredentials(); it.hasNext();) {
-            Credentials creds = (Credentials) it.next();
-            if (creds instanceof CryptedSimpleCredentials) {
-                credentialSet.add(creds);
-            } else if (creds instanceof SimpleCredentials) {
-                try {
-                    credentialSet.add(new CryptedSimpleCredentials((SimpleCredentials) creds));
-                } catch (NoSuchAlgorithmException e) {
-                    throw new RepositoryException(e);
-                } catch (UnsupportedEncodingException e) {
-                    throw new RepositoryException(e);
-                }
+        Credentials creds = user.getCredentials();
+        if (creds instanceof CryptedSimpleCredentials) {
+            this.creds = (CryptedSimpleCredentials) creds;
+        } else if (creds instanceof SimpleCredentials) {
+            try {
+                this.creds = new CryptedSimpleCredentials((SimpleCredentials) creds);
+            } catch (NoSuchAlgorithmException e) {
+                throw new RepositoryException(e);
+            } catch (UnsupportedEncodingException e) {
+                throw new RepositoryException(e);
+        } else {
+            log.warn("No Credentials found with user " + user.getID());
+            this.creds = null;
-        return !credentialSet.isEmpty() && credentials instanceof SimpleCredentials;
+        return creds != null && credentials instanceof SimpleCredentials;
-
-        for (Iterator it = credentialSet.iterator(); it.hasNext();) {
-            try {
-                CryptedSimpleCredentials creds = (CryptedSimpleCredentials) it.next();
-                if (creds.matches((SimpleCredentials) credentials)) {
-                    return true;
-                }
-            } catch (NoSuchAlgorithmException e) {
-                log.debug("Failed to verify Credentials with {}: {} -> test next", credentials.toString(), e);
-            } catch (UnsupportedEncodingException e) {
-                log.debug("Failed to verify Credentials with {}: {} -> test next", credentials.toString(), e);
+        try {
+            if (creds != null && creds.matches((SimpleCredentials) credentials)) {
+                return true;
+        } catch (NoSuchAlgorithmException e) {
+            log.debug("Failed to verify Credentials with {}: {} -> test next", credentials.toString(), e);
+        } catch (UnsupportedEncodingException e) {
+            log.debug("Failed to verify Credentials with {}: {} -> test next", credentials.toString(), e);

MOV43 MOV8 MOV8 UPD42 MOV25 MOV41 MOV59 UPD42 INS8 INS27 INS7 INS21 INS21 INS42 INS33 INS27 INS22 INS11 INS32 INS7 INS27 MOV32 INS52 INS42 MOV43 INS42 INS42 INS42 INS27 INS22 INS33 INS42 INS33 INS7 INS45 INS32 INS52 INS42 INS22 MOV14 INS42 INS42 INS52 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL14 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL58 DEL42 DEL42 DEL32 DEL24 DEL8 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL8