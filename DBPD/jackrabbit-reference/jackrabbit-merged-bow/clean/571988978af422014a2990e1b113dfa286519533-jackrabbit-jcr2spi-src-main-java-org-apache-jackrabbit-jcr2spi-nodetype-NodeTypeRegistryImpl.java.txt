JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816632 13f79535-47bb-0310-9956-ffa450edef68

-    private final Set propDefs;
+    private final Set<QPropertyDefinition> propDefs;
-    private final Set nodeDefs;
+    private final Set<QNodeDefinition> nodeDefs;
-        propDefs = new HashSet();
-        nodeDefs = new HashSet();
+        propDefs = new HashSet<QPropertyDefinition>();
+        nodeDefs = new HashSet<QNodeDefinition>();
-        Set qNames = registeredNTDefs.keySet();
-        return (Name[]) qNames.toArray(new Name[registeredNTDefs.size()]);
+        Set<Name> qNames = registeredNTDefs.keySet();
+        return qNames.toArray(new Name[registeredNTDefs.size()]);
-        Map defMap = validator.validateNodeTypeDefs(ntDefs, registeredNTDefs);
+        Map<QNodeTypeDefinition, EffectiveNodeType> defMap = validator.validateNodeTypeDefs(ntDefs, registeredNTDefs);
-            Set dependents = registeredNTDefs.getDependentNodeTypes(ntName);
+            Set<Name> dependents = registeredNTDefs.getDependentNodeTypes(ntName);
-                for (Iterator depIter = dependents.iterator(); depIter.hasNext();) {
+                for (Iterator<Name> depIter = dependents.iterator(); depIter.hasNext();) {
-        for (Iterator iter = nodeTypeNames.iterator(); iter.hasNext();) {
-            Name ntName = (Name) iter.next();
+        for (Iterator<Name> iter = nodeTypeNames.iterator(); iter.hasNext();) {
+            Name ntName = iter.next();
-     * @see EffectiveNodeTypeProvider#getEffectiveNodeType(Name[], Map)
+     * @see EffectiveNodeTypeProvider#getEffectiveNodeType(Name[], Map<Name, QNodeTypeDefinition>)
-    public EffectiveNodeType getEffectiveNodeType(Name[] ntNames, Map ntdMap)
+    public EffectiveNodeType getEffectiveNodeType(Name[] ntNames, Map<Name, QNodeTypeDefinition> ntdMap)
-     * @see EffectiveNodeTypeProvider#getEffectiveNodeType(QNodeTypeDefinition, Map)
+     * @see EffectiveNodeTypeProvider#getEffectiveNodeType(QNodeTypeDefinition, Map<Name, QNodeTypeDefinition>)
-    public EffectiveNodeType getEffectiveNodeType(QNodeTypeDefinition ntd, Map ntdMap)
+    public EffectiveNodeType getEffectiveNodeType(QNodeTypeDefinition ntd, Map<Name, QNodeTypeDefinition> ntdMap)
-        TreeSet mergedNodeTypes = new TreeSet();
-        TreeSet inheritedNodeTypes = new TreeSet();
-        TreeSet allNodeTypes = new TreeSet();
-        Map namedItemDefs = new HashMap();
-        List unnamedItemDefs = new ArrayList();
-        Set supportedMixins = null;
+        TreeSet<Name> mergedNodeTypes = new TreeSet<Name>();
+        TreeSet<Name> inheritedNodeTypes = new TreeSet<Name>();
+        TreeSet<Name> allNodeTypes = new TreeSet<Name>();
+        Map<Name, List<QItemDefinition>> namedItemDefs = new HashMap<Name, List<QItemDefinition>>();
+        List<QItemDefinition> unnamedItemDefs = new ArrayList<QItemDefinition>();
+        Set<Name> supportedMixins = null;
-            supportedMixins = new HashSet();
+            supportedMixins = new HashSet<Name>();
-        Set itemDefIds = new HashSet();
+        Set<QItemDefinition> itemDefIds = new HashSet<QItemDefinition>();
-                List defs = (List) namedItemDefs.get(name);
+                List<QItemDefinition> defs = namedItemDefs.get(name);
-                    defs = new ArrayList();
+                    defs = new ArrayList<QItemDefinition>();
-                        QItemDefinition qDef = (QItemDefinition) defs.get(j);
+                        QItemDefinition qDef = defs.get(j);
-                List defs = (List) namedItemDefs.get(name);
+                List<QItemDefinition> defs = namedItemDefs.get(name);
-                    defs = new ArrayList();
+                    defs = new ArrayList<QItemDefinition>();
-                        QItemDefinition qDef = (QItemDefinition) defs.get(j);
+                        QItemDefinition qDef = defs.get(j);
-                                                   Map ntdCache)
+                                                   Map<Name, QNodeTypeDefinition> ntdCache)
-        QNodeTypeDefinition ntd = (QNodeTypeDefinition) ntdCache.get(ntName);
+        QNodeTypeDefinition ntd = ntdCache.get(ntName);
-                                                   Map ntdCache)
+                                                   Map<Name, QNodeTypeDefinition> ntdCache)
-                        QNodeTypeDefinition ntd = (QNodeTypeDefinition) ntdCache.get(remainder[i]);
+                        QNodeTypeDefinition ntd = ntdCache.get(remainder[i]);
-    private void internalRegister(Map defMap) {
-        for (Iterator it = defMap.entrySet().iterator(); it.hasNext(); ) {
-            Map.Entry entry = (Map.Entry)it.next();
-            QNodeTypeDefinition ntd = (QNodeTypeDefinition)entry.getKey();
-            internalRegister(ntd, (EffectiveNodeTypeImpl)entry.getValue());
+    private void internalRegister(Map<QNodeTypeDefinition, EffectiveNodeType> defMap) {
+        for (Map.Entry<QNodeTypeDefinition, EffectiveNodeType> entry : defMap.entrySet()) {
+            QNodeTypeDefinition ntd = entry.getKey();
+            internalRegister(ntd, entry.getValue());

INS74 INS74 MOV21 MOV60 MOV43 INS43 MOV43 INS43 INS74 INS74 INS74 INS74 INS74 INS70 INS42 INS42 INS74 MOV32 INS74 INS66 MOV43 MOV43 INS43 INS66 MOV43 INS43 INS43 INS74 INS74 INS74 INS74 INS74 INS74 INS74 MOV43 INS43 MOV43 MOV43 MOV43 INS43 INS43 MOV43 MOV43 INS43 INS44 MOV32 MOV8 UPD42 UPD42 MOV43 INS43 MOV43 MOV43 INS43 INS74 INS42 INS42 INS42 MOV43 INS43 UPD42 MOV43 INS43 UPD42 MOV43 INS43 UPD42 MOV43 INS43 INS74 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV14 INS42 MOV32 INS42 INS42 INS42 INS74 INS42 INS74 INS74 INS42 INS42 INS74 MOV43 INS43 MOV43 INS42 INS74 INS42 INS74 INS42 INS74 INS42 MOV43 INS43 INS74 INS42 INS42 INS74 INS42 INS42 UPD42 MOV42 INS74 MOV43 MOV43 INS43 MOV43 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS42 MOV32 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS42 MOV43 INS43 INS74 MOV43 INS43 INS14 MOV43 INS43 UPD42 MOV42 MOV32 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS43 INS42 INS74 INS42 INS74 INS74 INS74 INS42 MOV43 INS43 MOV43 MOV43 MOV32 MOV43 MOV43 MOV32 MOV43 INS43 INS42 INS42 INS74 MOV43 INS74 MOV43 MOV43 MOV43 INS43 MOV32 MOV43 INS43 MOV32 MOV32 INS42 INS42 DEL42 DEL43 DEL85 DEL5 DEL11 DEL11 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL69 DEL42 DEL43 DEL69 DEL68 DEL43 DEL42 DEL42 DEL69 DEL69 DEL68 DEL14 DEL11 DEL11 DEL11 DEL11 DEL11 DEL11 DEL40 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL11 DEL42 DEL43 DEL11 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24