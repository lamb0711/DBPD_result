adding Locking support contributed by Dominique Pfister

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156949 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.List;
+     * Lock tokens
+     */
+    protected final List lockTokens = new ArrayList();
+
+    /**
-    protected ItemManager getItemManager() {
+    public ItemManager getItemManager() {
+        // check lock status
+        destParentNode.checkLock();
+
+        // check lock status
+        parent.checkLock();
+
-        // @todo implement locking support
-        throw new UnsupportedOperationException("Locking not implemented yet.");
+        addLockToken(lt, true);
+    }
+
+    /**
+     * Internal implementation of {@link #addLockToken(String)}. Additionally
+     * takes a parameter indicating whether the lock manager needs to be
+     * informed.
+     */
+    public void addLockToken(String lt, boolean notify) {
+        synchronized (lockTokens) {
+            lockTokens.add(lt);
+
+            if (notify) {
+                try {
+                    wsp.getLockManager().lockTokenAdded(this, lt);
+                } catch (RepositoryException e) {
+                    log.error("Lock manager not available.", e);
+                }
+            }
+        }
-        // @todo implement locking support
-        return new String[0];
+        synchronized (lockTokens) {
+            String[] result = new String[lockTokens.size()];
+            lockTokens.toArray(result);
+            return result;
+        }
-        // @todo implement locking support
-        throw new UnsupportedOperationException("Locking not implemented yet.");
+        removeLockToken(lt, true);
+    }
+
+    /**
+     * Internal implementation of {@link #removeLockToken(String)}. Additionally
+     * takes a parameter indicating whether the lock manager needs to be
+     * informed.
+     */
+    public void removeLockToken(String lt, boolean notify) {
+        synchronized (lockTokens) {
+            lockTokens.remove(lt);
+
+            if (notify) {
+                try {
+                    wsp.getLockManager().lockTokenRemoved(this, lt);
+                } catch (RepositoryException e) {
+                    log.error("Lock manager not available.", e);
+                }
+            }
+        }

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS29 INS83 INS83 INS43 INS59 UPD83 MOV29 INS83 INS39 INS42 MOV44 INS8 INS29 INS44 INS8 MOV29 INS8 MOV29 INS83 INS39 INS42 INS44 INS8 INS29 INS44 INS44 INS8 INS65 INS42 INS42 INS14 INS21 INS21 INS21 INS65 INS39 INS42 INS51 INS51 INS43 INS42 INS21 INS65 INS43 INS42 INS39 INS42 INS51 INS66 INS43 INS32 INS32 INS32 INS66 INS65 INS66 INS66 INS66 INS42 INS8 INS42 INS8 INS42 INS32 INS66 INS65 INS66 INS66 INS66 INS42 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS68 INS21 INS25 INS60 INS21 INS41 INS42 INS42 INS9 INS68 INS21 INS25 INS42 INS69 INS32 INS42 INS8 MOV5 INS59 INS32 INS42 INS42 INS69 INS32 INS42 INS8 INS43 INS42 INS42 INS42 INS54 INS42 INS3 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS54 INS42 INS8 INS12 INS5 INS32 INS42 INS8 INS12 INS21 INS44 INS8 INS43 INS85 INS42 INS42 INS21 INS44 INS8 INS32 INS43 INS42 INS21 INS42 INS32 INS43 INS42 INS21 INS32 INS42 INS52 INS42 UPD42 MOV42 INS32 INS32 INS42 INS52 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL34 DEL3 DEL41 DEL8 DEL43 DEL45 DEL14 DEL53 DEL8