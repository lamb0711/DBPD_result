fixing indention

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385468 13f79535-47bb-0310-9956-ffa450edef68

-				      int propFindType, int depth) {
-	addResponse(new MultiStatusResponse(resource, propNameSet, propFindType));
-	if (depth > 0) {
-	    DavResourceIterator iter = resource.getMembers();
-	    while (iter.hasNext()) {
-		addResourceProperties(iter.nextResource(), propNameSet, propFindType, depth-1);
-	    }
-	}
+                                      int propFindType, int depth) {
+        addResponse(new MultiStatusResponse(resource, propNameSet, propFindType));
+        if (depth > 0) {
+            DavResourceIterator iter = resource.getMembers();
+            while (iter.hasNext()) {
+                addResourceProperties(iter.nextResource(), propNameSet, propFindType, depth-1);
+            }
+        }
-				      int depth) {
-	addResourceProperties(resource, propNameSet, PROPFIND_BY_PROPERTY, depth);
+                                      int depth) {
+        addResourceProperties(resource, propNameSet, PROPFIND_BY_PROPERTY, depth);
-	addResponse(new MultiStatusResponse(resource.getHref(), status));
-	if (depth > 0) {
-	    DavResourceIterator iter = resource.getMembers();
-	    while (iter.hasNext()) {
-		addResourceStatus(iter.nextResource(), status, depth-1);
-	    }
-	}
+        addResponse(new MultiStatusResponse(resource.getHref(), status));
+        if (depth > 0) {
+            DavResourceIterator iter = resource.getMembers();
+            while (iter.hasNext()) {
+                addResourceStatus(iter.nextResource(), status, depth-1);
+            }
+        }
-	responses.put(response.getHref(), response);
+        responses.put(response.getHref(), response);
-	return (MultiStatusResponse[]) responses.values().toArray(new MultiStatusResponse[responses.size()]);
+        return (MultiStatusResponse[]) responses.values().toArray(new MultiStatusResponse[responses.size()]);
-	return responseDescription;
+        return responseDescription;
-	Element multistatus = DomUtil.createElement(document, XML_MULTISTATUS, NAMESPACE);
+        Element multistatus = DomUtil.createElement(document, XML_MULTISTATUS, NAMESPACE);
-	while(it.hasNext()) {
-	    multistatus.appendChild(((MultiStatusResponse)it.next()).toXml(document));
-	}
+        while(it.hasNext()) {
+            multistatus.appendChild(((MultiStatusResponse)it.next()).toXml(document));
+        }
-	return multistatus;
+        return multistatus;
-	if (!DomUtil.matches(multistatusElement, XML_MULTISTATUS, NAMESPACE)) {
-	    throw new IllegalArgumentException("DAV:multistatus element expected.");
-	}
+        if (!DomUtil.matches(multistatusElement, XML_MULTISTATUS, NAMESPACE)) {
+            throw new IllegalArgumentException("DAV:multistatus element expected.");
+        }
-	while (it.hasNext()) {
+        while (it.hasNext()) {
-	}
+        }
-	// optional response description on the multistatus element
-	multistatus.setResponseDescription(DomUtil.getChildText(multistatusElement, XML_RESPONSEDESCRIPTION, NAMESPACE));
+        // optional response description on the multistatus element
+        multistatus.setResponseDescription(DomUtil.getChildText(multistatusElement, XML_RESPONSEDESCRIPTION, NAMESPACE));

