applying patch from angela, fixing:

[JCR-122] cannot PUT changes to a resource in the simple webdav server
[JCR-123] Webdav: Error when accessing Simple-Server
[JCR-126] Jcr-Server Module: Remove Dependency from Jackrabbit-Core


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@180346 13f79535-47bb-0310-9956-ffa450edef68

- * Copyright 2005 The Apache Software Foundation.
+ * Copyright 2004-2005 The Apache Software Foundation or its licensors,
+ *                     as applicable.
-package org.apache.jackrabbit.webdav.util;
+package org.apache.jackrabbit.util;
-import java.io.ByteArrayOutputStream;
-import java.math.BigDecimal;
-import java.security.NoSuchAlgorithmException;
+import java.io.ByteArrayOutputStream;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
+import java.security.NoSuchAlgorithmException;
+import java.text.SimpleDateFormat;
+import java.text.ParseException;
+import java.math.BigDecimal;
-            source = new StringBuffer(path == null ? "" : path);
+            source = new StringBuffer(path);
-            source = new StringBuffer(path == null ? "" : path);
+            source = new StringBuffer(path);
-     * @throws ParseException if the date string cannot be parsed accordinung
+     * @throws java.text.ParseException if the date string cannot be parsed accordinung
-}
+
+    /**
+     * Replaces all occurences of <code>oldString</code> in <code>text</code>
+     * with <code>newString</code>.
+     *
+     * @param text
+     * @param oldString old substring to be replaced with <code>newString</code>
+     * @param newString new substring to replace occurences of <code>oldString</code>
+     * @return a string
+     */
+    public static String replace(String text, String oldString, String newString) {
+        if (text == null || oldString == null || newString == null) {
+            throw new IllegalArgumentException("null argument");
+        }
+        int pos = text.indexOf(oldString);
+        if (pos == -1) {
+            return text;
+        }
+        int lastPos = 0;
+        StringBuffer sb = new StringBuffer(text.length());
+        while (pos != -1) {
+            sb.append(text.substring(lastPos, pos));
+            sb.append(newString);
+            lastPos = pos + oldString.length();
+            pos = text.indexOf(oldString, lastPos);
+        }
+        if (lastPos < text.length()) {
+            sb.append(text.substring(lastPos));
+        }
+        return sb.toString();
+    }
+}

MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS60 INS25 INS60 INS60 INS61 INS25 INS41 INS40 INS66 INS66 INS42 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS27 INS8 INS39 INS59 INS27 INS8 INS39 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS32 INS27 INS27 INS53 INS42 INS32 INS42 INS38 INS41 INS42 INS34 INS42 INS42 INS14 INS42 INS38 INS21 INS21 INS21 INS21 INS42 INS32 INS21 INS42 INS42 INS27 INS27 INS42 INS33 INS14 INS42 INS42 INS42 INS34 INS42 INS43 INS32 INS34 INS32 INS32 INS7 INS7 INS42 INS42 INS32 INS42 INS33 INS42 INS33 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL33 DEL27 DEL45 DEL42 DEL16 DEL42 DEL33 DEL27 DEL45 DEL42 DEL16 DEL42