Implemented support for value comparison and general comparison using multi valued properties.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126294 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NoPrefixDeclaredException;
-            QName identifier = ((ASTIdentifier) node.children[0]).getName();
+            final QName[] tmp = new QName[1];
+            node.childrenAccept(new DefaultParserVisitor() {
+                public Object visit(ASTIdentifier node, Object data) {
+                    // only assign first identifier
+                    tmp[0] = (tmp[0] == null) ? node.getName() : tmp[0];
+                    return data;
+                }
+            }, data);
+            QName identifier = tmp[0];
+
-                        identifier, Constants.OPERATION_GE, (ASTLiteral) node.children[1]);
+                        identifier, Constants.OPERATION_GE_VALUE, (ASTLiteral) node.children[1]);
-                        identifier, Constants.OPERATION_LE, (ASTLiteral) node.children[2]);
+                        identifier, Constants.OPERATION_LE_VALUE, (ASTLiteral) node.children[2]);
-            } else if (type == Constants.OPERATION_EQ) {
+            } else if (type == Constants.OPERATION_EQ_VALUE) {
-            } else if (type == Constants.OPERATION_GE
-                    || type == Constants.OPERATION_GT
-                    || type == Constants.OPERATION_LE
-                    || type == Constants.OPERATION_LT
-                    || type == Constants.OPERATION_NE) {
+            } else if (type == Constants.OPERATION_GE_VALUE
+                    || type == Constants.OPERATION_GT_VALUE
+                    || type == Constants.OPERATION_LE_VALUE
+                    || type == Constants.OPERATION_LT_VALUE
+                    || type == Constants.OPERATION_NE_VALUE) {
+            } else if (type == Constants.OPERATION_EQ_GENERAL
+                    || type == Constants.OPERATION_NE_GENERAL) {
+                predicateNode = createRelationQueryNode(parent,
+                        identifier, type, (ASTLiteral) node.children[0]);
-                            identifier, Constants.OPERATION_EQ, (ASTLiteral) node.children[i]);
+                            identifier, Constants.OPERATION_EQ_VALUE, (ASTLiteral) node.children[i]);

INS60 INS21 INS60 INS83 INS5 INS59 INS32 INS43 INS59 MOV43 INS85 UPD42 MOV42 INS3 INS42 INS42 INS14 INS42 INS42 INS42 INS2 INS25 INS5 INS34 INS43 INS1 INS42 INS34 UPD40 INS27 MOV8 MOV25 INS43 INS85 INS42 INS31 INS27 INS27 INS27 INS8 INS42 INS83 INS43 INS42 INS44 INS44 INS8 UPD40 UPD40 INS27 INS27 INS42 INS40 MOV27 MOV27 INS21 INS42 MOV43 INS42 INS43 INS42 INS21 INS41 INS27 INS27 INS42 INS40 UPD40 UPD40 INS7 INS42 INS7 INS42 INS27 INS27 INS42 INS40 INS42 INS32 INS2 INS16 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 MOV11 INS42 INS34 INS36 INS32 INS2 INS43 INS27 INS42 MOV42 INS42 INS34 INS42 INS2 INS33 INS42 INS34 UPD40 DEL40 DEL26 DEL36 DEL32 DEL59 DEL60 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27