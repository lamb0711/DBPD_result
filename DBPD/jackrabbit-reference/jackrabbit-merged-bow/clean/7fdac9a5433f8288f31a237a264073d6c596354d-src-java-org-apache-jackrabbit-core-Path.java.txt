Improved Javadocs for Path.PathElement (JCR-73)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158358 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * Object representation of a single JCR path element. A PathElement
+     * object contains the qualified name and optional index of a single
+     * JCR path element.
+     * <p>
+     * Once created, a PathElement object is immutable.
+     */
+        /** Qualified name of the path element. */
-         * 1-based index; 0 if not explicitly specified (which is equivalent to
-         * specifying 1)
+         * Optional index of the path element. Set to zero, if not
+         * explicitly specified, otherwise contains the 1-based index.
+        /**
+         * Creates a path element with the given qualified name.
+         * The created path element does not contain an explicit index.
+         *
+         * @param namespaceURI namespace URI
+         * @param localName local name
+         */
+        /**
+         * Creates a path element with the given qualified name and index.
+         *
+         * @param namespaceURI namespace URI
+         * @param localName local name
+         * @param index index
+         */
+        /**
+         * Creates a path element with the given qualified name.
+         * The created path element does not contain an explicit index.
+         *
+         * @param name qualified name
+         * @throws IllegalArgumentException if the name is <code>null</code>
+         */
+        /**
+         * Creates a path element with the given qualified name and index.
+         *
+         * @param name qualified name
+         * @param index index
+         * @throws IllegalArgumentException if the name is <code>null</code>
+         */
-         * Returns the name of this path element.
+         * Returns the qualified name of this path element.
-         * @return the name
+         * @return qualified name
+        /**
+         * Returns the JCR name representation of this path element.
+         * Note that strictly speaking the returned value is in fact
+         * a JCR relative path instead of a JCR name, as it contains
+         * the index value if the index is greater than one.
+         *
+         * @param resolver namespace resolver
+         * @return JCR name representation of the path element
+         * @throws NoPrefixDeclaredException if the namespace of the path
+         *                                   element name can not be resolved
+         */
+        /**
+         * Returns a string representation of this path element. Note that
+         * the path element name is expressed using the <code>{uri}name</code>
+         * syntax. Use the {@link #toJCRName(NamespaceResolver) toJCRName}
+         * method to get the prefixed string representation of the path element.
+         *
+         * @return string representation of the path element
+         */
+        /**
+         * Parses the given path element string into a path element object.
+         *
+         * @param s path element string
+         * @return path element object
+         * @throws IllegalArgumentException if the given path element string
+         *                                  is <code>null</code> or if its
+         *                                  format is invalid
+         */
+        /**
+         * Computes a hash code for this path element.
+         *
+         * @return hash code
+         */
+        /**
+         * Check for path element equality. Returns true if the given
+         * object is a PathElement and contains the same name and index
+         * as this one.
+         *
+         * @param obj the object to compare with
+         * @return <code>true</code> if the path elements are equal
+         */

INS29 INS65 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS66 INS66 INS66 INS66 INS66 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS66 UPD66 UPD66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD66 UPD66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS68 INS66 INS42 INS69 INS43 INS42