JCR-1609:  new Property Types (WIP...)
JCR-2061: References and Dereferencing of Property Values (WIP...)



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@776687 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.value.URIValue;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.math.BigDecimal;
+ * <tr>URI<td></td><td>URI</td></tr>
+ * <tr>DECIMAL<td></td><td>BigDecimal</td></tr>
+            case PropertyType.DECIMAL:
+                return create(value.getDecimal());
+            case PropertyType.WEAKREFERENCE:
+                return create(new UUID(value.getString()), true);
+            case PropertyType.URI:
+                try {
+                    return create(new URI(value.getString()));
+                } catch (URISyntaxException e) {
+                    throw new ValueFormatException(e.getMessage());
+                }
+    public static InternalValue create(BigDecimal value) {
+        return new InternalValue(value);
+    }
+
+    /**
+     * @param value
+     * @return the created value
+     */
+    public static InternalValue create(URI value) {
+        return new InternalValue(value);
+    }
+
+    /**
+     * @param value
+     * @return the created value
+     */
-        return new InternalValue(value);
+        return create(value, false);
+    }
+
+    /**
+     * @param value
+     * @param weak
+     * @return the created value
+     */
+    public static InternalValue create(UUID value, boolean weak) {
+        return new InternalValue(value, weak);
+                case PropertyType.DECIMAL:
+                    return vf.createValue((BigDecimal) val);
+                case PropertyType.WEAKREFERENCE:
+                    return vf.createValue(val.toString(), PropertyType.WEAKREFERENCE);
+                case PropertyType.URI:
+                    return new URIValue((URI) val);
+            case PropertyType.DECIMAL:
+                return create(new BigDecimal(s));
+            case PropertyType.WEAKREFERENCE:
+                return create(new UUID(s), true);
+            case PropertyType.URI:
+                return create(URI.create(s));
+    private InternalValue(URI value) {
+        super(value, PropertyType.URI);
+    }
+
+    private InternalValue(BigDecimal value) {
+        super(value, PropertyType.DECIMAL);
+    }
+
+    private InternalValue(UUID value, boolean weak) {
+        super(value, weak ? PropertyType.WEAKREFERENCE : PropertyType.REFERENCE);
+    }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 MOV8 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS42 INS44 INS8 INS83 INS42 INS44 INS8 INS83 INS42 INS44 INS44 INS8 INS66 INS66 MOV49 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS41 MOV49 INS43 INS42 INS46 INS43 INS42 INS46 INS43 INS42 INS39 INS42 INS46 INS41 INS49 INS41 INS49 INS54 INS49 INS42 INS66 INS42 INS14 INS42 INS66 INS42 INS32 INS42 INS42 INS66 INS42 INS14 INS41 INS49 INS41 INS49 INS41 INS49 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS16 INS40 INS32 INS40 INS32 INS40 INS8 INS12 INS43 INS42 INS42 INS42 INS9 INS43 INS42 INS42 MOV49 INS40 INS32 INS40 INS32 INS40 INS32 INS42 INS40 INS40 INS42 INS32 INS42 INS14 INS9 INS41 INS44 INS8 INS42 INS42 INS41 INS49 INS41 INS49 INS41 INS49 INS42 INS14 INS42 INS14 INS9 INS42 INS32 INS42 INS42 INS43 INS32 INS32 INS43 INS42 INS53 INS40 INS32 INS40 INS32 INS40 INS14 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS42 INS11 INS42 INS42 INS32 INS40 INS43 INS11 INS42 INS42 INS43 INS32 INS43 INS32 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42