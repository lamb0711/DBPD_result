JCR-2744: Avoid element arrays in PathImpl

Get rid of separate Path.Element objects by making AbstractPath implement both Path and Path.Element

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@997384 13f79535-47bb-0310-9956-ffa450edef68

-    private final Element element;
+    /**
+     * Name of the last path element.
+     */
+    private final Name name;
-    public NamePath(Path parent, Element element) {
+    /**
+     * Optional index of the last path element. Set to
+     * {@link Path#INDEX_UNDEFINED} if not explicitly specified,
+     * otherwise contains the 1-based index.
+     */
+    private final int index;
+
+    public NamePath(Path parent, Name name, int index) {
-        assert element.denotesName();
-        this.element = element;
+        assert name != null;
+        assert index >= 0;
+        this.name = name;
+        this.index = index;
+    protected String getElementString() {
+        if (index > Path.INDEX_DEFAULT) {
+            return name + "[" + index + "]";
+        } else {
+            return name.toString();
+        }
+    }
+
-        return element.getName();
+        return name;
-        return element.getIndex();
+        return index;
-        return element.getNormalizedIndex();
+        if (index != INDEX_UNDEFINED) {
+            return index;
+        } else {
+            return INDEX_DEFAULT;
+        }
-            return new NamePath(normalized, element);
+            return new NamePath(normalized, name, index);
-            return new NamePath(parent.getCanonicalPath(), element);
+            return new NamePath(parent.getCanonicalPath(), name, index);
-    public Element getNameElement() {
-        return element;
-    }
-
-    public Path getLastElement() {
-        return new NamePath(null, element);
-    }
-
-    public String getString() {
+    public AbstractPath getLastElement() {
-            return parent.getString() + Path.DELIMITER + element.getString();
+            return new NamePath(null, name, index);
-            return element.getString();
+            return this;
-                && element.equals(path.getNameElement()) 
+                && name.equals(path.getName())
+                && getNormalizedIndex() == path.getNormalizedIndex()
-        return super.hashCode() * 37 + element.hashCode();
+        return super.hashCode() * 37 + name.hashCode() + getNormalizedIndex();

MOV31 INS23 INS31 INS29 UPD43 INS29 INS83 INS83 INS39 INS59 INS44 UPD83 MOV43 INS42 INS8 MOV43 UPD42 UPD42 MOV78 INS39 INS42 INS8 MOV29 MOV78 MOV83 UPD43 MOV43 MOV42 MOV8 INS65 UPD42 UPD42 INS65 INS42 UPD43 UPD42 INS39 INS42 INS6 INS21 INS25 INS25 UPD42 INS66 INS66 INS65 INS66 INS66 UPD42 INS27 INS27 INS7 INS27 INS8 INS8 INS42 INS42 INS27 INS8 INS8 INS27 INS67 INS42 INS33 INS42 INS34 UPD42 INS22 INS42 INS42 INS40 INS41 MOV41 INS42 INS42 MOV41 INS41 MOV27 INS32 INS42 INS42 UPD42 INS52 INS42 INS27 UPD42 INS42 INS14 INS52 INS42 INS42 INS45 INS42 INS45 UPD42 UPD42 MOV43 UPD42 INS42 MOV43 INS33 INS42 INS42 INS27 UPD42 UPD42 INS42 INS27 MOV48 MOV32 MOV32 INS27 UPD42 INS32 INS32 UPD42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL8 DEL39 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL8 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL33 DEL42 DEL14 DEL41 DEL8 DEL31 DEL83 DEL42 DEL31 DEL27