- added HierarchyManager.isAncestor(NodeId, ItemId) method
- some small javadoc fixes


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@164473 13f79535-47bb-0310-9956-ffa450edef68

-     * <code>getPath(id).getAncestorCount()</code>.
-     * @param id
-     * @return
-     * @throws ItemNotFoundException
-     * @throws RepositoryException
+     * <code>getPath(id).getAncestorCount()</code>. The depth reflects the
+     * absolute hierarchy level.
+     *
+     * @param id item id
+     * @return the depth of the specified item
+     * @throws ItemNotFoundException if the specified <code>id</code> does not
+     *                               denote an existing item.
+     * @throws RepositoryException   if another error occurs
+     * Determines whether the node with the specified <code>nodeId</code>
+     * is an ancestor of the item denoted by the given <code>itemId</code>.
+     * This is equivalent to
+     * <code>getPath(nodeId).isAncestorOf(getPath(itemId))</code>.
+     *
+     * @param nodeId node id
+     * @param itemId item id
+     * @return <code>true</code> if the node with the specified
+     *         <code>nodeId</code> is an ancestor of the item denoted by the
+     *         given <code>itemId</code; <code>false</code> otherwise
+     * @throws ItemNotFoundException if any of the specified id's does not
+     *                               denote an existing item.
+     * @throws RepositoryException   if another error occurs
+     */
+    boolean isAncestor(NodeId nodeId, ItemId itemId)
+            throws ItemNotFoundException, RepositoryException;
+
+    /**

INS31 INS29 INS39 INS42 INS44 INS44 INS43 INS43 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS42 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42