JCR-3078 - Add CopyMoveHanlder so that the copy/move behavior can be customized (as this is the case for the IOHandler and PropertyHandler)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1173533 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.jcr.JcrDavException;
+import javax.jcr.PathNotFoundException;
-public class DefaultHandler implements IOHandler, PropertyHandler {
+public class DefaultHandler implements IOHandler, PropertyHandler, CopyMoveHandler {
-                    || JcrConstants.JCR_MIMETYPE.equals(name)
-                    || JcrConstants.JCR_ENCODING.equals(name)
-                    || JcrConstants.JCR_LASTMODIFIED.equals(name)) {
+                        || JcrConstants.JCR_MIMETYPE.equals(name)
+                        || JcrConstants.JCR_ENCODING.equals(name)
+                        || JcrConstants.JCR_LASTMODIFIED.equals(name)) {
+    //----------------------------------------------------< CopyMoveHandler >---
+    /**
+     * @see CopyMoveHandler#canCopy(CopyMoveContext, org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.DavResource)
+     */
+    public boolean canCopy(CopyMoveContext context, DavResource source, DavResource destination) {
+        return true;
+    }
+
+    /**
+     * @see CopyMoveHandler#copy(CopyMoveContext, org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.DavResource)
+     */
+    public boolean copy(CopyMoveContext context, DavResource source, DavResource destination) throws DavException {
+        if (context.isShallowCopy() && source.isCollection()) {
+            // TODO: currently no support for shallow copy; however this is
+            // only relevant if the source resource is a collection, because
+            // otherwise it doesn't make a difference
+            throw new DavException(DavServletResponse.SC_FORBIDDEN, "Unable to perform shallow copy.");
+        }
+        try {
+            context.getSession().getWorkspace().copy(source.getLocator().getRepositoryPath(), destination.getLocator().getRepositoryPath());
+            return true;
+        }  catch (PathNotFoundException e) {
+            // according to rfc 2518: missing parent
+            throw new DavException(DavServletResponse.SC_CONFLICT, e.getMessage());
+        } catch (RepositoryException e) {
+            throw new JcrDavException(e);
+        }
+    }
+
+    /**
+     * @see CopyMoveHandler#canMove(CopyMoveContext, org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.DavResource)
+     */
+    public boolean canMove(CopyMoveContext context, DavResource source, DavResource destination) {
+        return true;
+    }
+
+    /**
+     * @see CopyMoveHandler#move(CopyMoveContext, org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.DavResource) 
+     */
+    public boolean move(CopyMoveContext context, DavResource source, DavResource destination) throws DavException {
+        try {
+            context.getWorkspace().move(source.getLocator().getRepositoryPath(), destination.getLocator().getRepositoryPath());
+            return true;
+        } catch (RepositoryException e) {
+            throw new JcrDavException(e);
+        }
+    }
+
-               || ntName.equals(JcrConstants.MIX_REFERENCEABLE)
-               || ntName.equals(JcrConstants.MIX_VERSIONABLE)
-               || ntName.equals(JcrConstants.MIX_LOCKABLE);
+                || ntName.equals(JcrConstants.MIX_REFERENCEABLE)
+                || ntName.equals(JcrConstants.MIX_VERSIONABLE)
+                || ntName.equals(JcrConstants.MIX_LOCKABLE);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS43 INS31 INS31 INS31 INS31 INS42 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS54 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS68 INS42 INS42 INS42 INS9 INS68 INS42 INS42 INS42 INS27 INS8 INS8 INS12 INS12 INS68 INS42 INS42 INS42 INS9 INS68 INS66 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS69 INS69 INS69 INS32 INS32 INS53 INS21 INS41 INS44 INS8 INS44 INS8 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS69 INS69 INS69 INS21 INS41 INS44 INS8 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS14 INS32 INS9 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS43 INS43 INS43 INS43 INS43 INS32 INS9 INS43 INS42 INS53 INS42 INS40 INS40 INS42 INS40 INS40 INS43 INS40 INS45 INS32 INS42 INS32 INS32 INS42 INS14 INS42 INS14 INS42 INS40 INS40 INS42 INS40 INS40 INS32 INS42 INS32 INS32 INS42 INS14 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS43 INS40 INS32 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42