work in progress

- HierarchyManager: changes methods to take ItemState instead of ItemId
- HierarchyManager: remove log-utility methods (saveGetJCRPath)
- HierarchyManager: remove CachingHierachyManager. not used
- ItemManager: changes methods to take ItemState instead of ItemId
- ItemStateValidator: remove utility methods not related to validation
- new class LogUtil that provides static saveGetJCRPath methods previously
  present on HierarchyManager, ItemStateValidator
- NodeState: add method 'getPropertyEntries()'
- create interface ChildPropertyEntry
- let PropertyReference implement ChildPropertyEntry

TODO: query/NodeIteratorImpl needs to be fixed. 


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429652 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.state.ItemState;
-import javax.jcr.Item;
-     * Returns the id of the given <code>Item</code>.
-     *
-     * @param item
-     * @return
-     * @throws PathNotFoundException
-     * @throws RepositoryException
-     */
-    ItemId getItemId(Item item) throws PathNotFoundException, RepositoryException;
-
-    // DIFF JR: renamed from 'resolveQPath'
-    /**
-     * Resolves a path into an item id.
+     * Resolves a path into an item state.
-    ItemId getItemId(Path qPath) throws PathNotFoundException, RepositoryException;
+    ItemState getItemState(Path qPath) throws PathNotFoundException, RepositoryException;
-     * Returns the path to the given item.
+     * Returns the path to the item represented by the given state object.
-     * @param id
+     * @param itemState
-    Path getQPath(ItemId id) throws ItemNotFoundException, RepositoryException;
+    Path getQPath(ItemState itemState) throws ItemNotFoundException, RepositoryException;
-     * Returns the name of the specified item.
+     * Returns the qualified name of the specified item state.
-     * @param id id of item whose name should be returned
+     * @param itemState state of item whose name should be returned
-    QName getQName(ItemId id) throws ItemNotFoundException, RepositoryException;
+    QName getQName(ItemState itemState) throws ItemNotFoundException, RepositoryException;
-     * @param id item id
+     * @param itemState item state
-     * @throws ItemNotFoundException if the specified <code>id</code> does not
-     *                               denote an existing item.
-     * @throws RepositoryException   if another error occurs
+     * @throws RepositoryException if another error occurs
-    int getDepth(ItemId id) throws ItemNotFoundException, RepositoryException;
+    int getDepth(ItemState itemState) throws ItemNotFoundException, RepositoryException;
-
-     /**
-     * Failsafe conversion of an <code>ItemId</code> to JCR path for use in
-     * error messages etc.
-     *
-     * @param itemId id to convert
-     * @return JCR path
-     */
-    String safeGetJCRPath(ItemId itemId);
-
-     /**
-     * Failsafe conversion of internal <code>Path</code> to JCR path for use in
-     * error messages etc.
-     *
-     * @param qPath path to convert
-     * @return JCR path
-     */
-    String safeGetJCRPath(Path qPath);

MOV26 UPD40 UPD43 UPD42 UPD42 MOV65 MOV65 UPD43 UPD42 MOV65 MOV65 UPD43 UPD42 UPD43 UPD42 UPD66 UPD66 UPD42 UPD42 UPD66 UPD42 UPD66 UPD42 UPD42 UPD66 UPD66 UPD42 DEL66 DEL65 DEL42 DEL65 DEL65 DEL42 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL42 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL31