- adding a NodeEntry identified by uniqueID (or changing the uniqueID field) must remove any other NodeEntry, that is identified by the same uniqueID.
- creating ItemState must assert, that the path of the info corresponds to the path of the hierarchyEntry

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@515167 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.ItemInfo;
-    private NodeState createNodeState(NodeInfo info, NodeEntry entry) {
+    private NodeState createNodeState(NodeInfo info, NodeEntry entry) throws NoSuchItemStateException, RepositoryException {
+        assertMatchingPath(info, entry);
+
-    private PropertyState createPropertyState(PropertyInfo info, PropertyEntry entry) {
+    private PropertyState createPropertyState(PropertyInfo info, PropertyEntry entry) throws NoSuchItemStateException, RepositoryException {
+        assertMatchingPath(info, entry);
+
+    /**
+     * Validation check: Path of the given ItemInfo must match to the Path of
+     * the HierarchyEntry. This is required for Items that are identified by
+     * a uniqueID that may move within the hierarchy upon restore or clone.
+     */
+    private void assertMatchingPath(ItemInfo info, HierarchyEntry entry) throws NoSuchItemStateException, RepositoryException {
+        if (!info.getPath().equals(entry.getPath())) {
+            throw new NoSuchItemStateException("HierarchyEntry does not belong the given ItemInfo.");
+        }
+    }
+

INS26 INS40 INS31 INS43 INS43 INS43 INS43 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS21 INS42 INS42 INS21 INS65 INS43 INS42 INS43 INS42 INS42 INS42 INS25 INS32 INS32 INS66 INS66 INS66 INS42 INS42 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS53 INS32 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS43 INS45 INS42