JCR-1677: Allow workspace creation over cluster

Patch by Matej Knopp

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@711238 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import java.io.File;
+import java.io.IOException;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.jcr.RepositoryException;
+
+import org.apache.jackrabbit.core.NodeId;
+import org.apache.jackrabbit.core.cluster.WorkspaceRecord.CreateWorkspaceAction;
-import org.apache.jackrabbit.core.NodeId;
-import org.apache.jackrabbit.core.journal.Journal;
-import org.apache.jackrabbit.core.journal.RecordConsumer;
-import org.apache.jackrabbit.core.journal.Record;
-import org.apache.jackrabbit.core.journal.JournalException;
+import org.apache.jackrabbit.core.journal.Journal;
+import org.apache.jackrabbit.core.journal.JournalException;
+import org.apache.jackrabbit.core.journal.Record;
+import org.apache.jackrabbit.core.journal.RecordConsumer;
+import org.apache.jackrabbit.core.xml.ClonedInputSource;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-import javax.jcr.RepositoryException;
-
-import java.io.File;
-import java.io.IOException;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Collection;
-
-        ClusterRecordProcessor  {
+        ClusterRecordProcessor, WorkspaceEventChannel  {
-     * Default stop delay.
-     */
-    private static final long DEFAULT_STOP_DELAY = 5000;
-
-    /**
+     * Create workspace listener
+     */
+    private WorkspaceListener createWorkspaceListener;
+    
+    /**
+    public void process(WorkspaceRecord record) {
+        if (createWorkspaceListener == null) {
+            String msg = "Create Workspace listener unavailable.";
+            log.error(msg);
+            return;
+        }
+        try {
+            if (record.getActionType() == WorkspaceRecord.CREATE_WORKSPACE_ACTION_TYPE) {
+                CreateWorkspaceAction action = record.getCreateWorkspaceAction();
+                createWorkspaceListener.externalWorkspaceCreated(record.getWorkspace(), action.getInputSource());
+            }
+        } catch (RepositoryException e) {
+            String msg = "Unable to create workspace: "
+                    + e.getMessage();
+            log.error(msg);
+        }
+    }
+
+    // -----------------------------------------------< CreateWorkspaceChannel >
+
+    public void setListener(WorkspaceListener listener) {
+        createWorkspaceListener = listener;
+    }
+
+    public void workspaceCreated(String workspaceName,
+            ClonedInputSource inputSource) {
+        if (status != STARTED) {
+            log.info("not started: namespace operation ignored.");
+            return;
+        }
+        ClusterRecord record = null;
+        boolean succeeded = false;
+
+        try {
+            record = new WorkspaceRecord(workspaceName, inputSource, producer.append());
+            record.write();
+            record.update();
+            setRevision(record.getRevision());
+            succeeded = true;
+        } catch (JournalException e) {
+            String msg = "Unable to create log entry: " + e.getMessage();
+            log.error(msg);
+        } catch (Throwable e) {
+            String msg = "Unexpected error while creating log entry.";
+            log.error(msg, e);
+        } finally {
+            if (!succeeded && record != null) {
+                record.cancelUpdate();
+            }
+        }
+    }
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS40 INS40 INS43 INS23 INS31 INS31 INS31 INS42 MOV29 MOV83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS43 INS42 INS25 INS54 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS25 INS60 INS60 INS54 UPD66 INS42 INS27 INS8 INS8 INS12 INS42 INS7 INS42 INS42 INS27 INS8 INS43 INS59 INS39 INS59 INS8 INS12 INS12 INS8 INS42 INS33 INS60 INS21 INS41 INS25 INS44 INS8 INS42 INS42 INS42 INS42 INS21 INS41 INS42 UPD42 MOV42 INS33 INS42 INS9 INS21 INS21 INS21 INS21 INS21 INS44 INS8 INS44 INS8 INS25 INS43 INS59 INS32 INS27 INS8 INS43 INS42 INS60 INS21 INS32 INS7 INS32 INS32 INS32 INS7 INS43 INS42 INS60 INS21 INS43 INS42 INS60 INS21 INS27 INS8 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS40 INS60 INS21 INS42 INS43 INS59 INS32 INS42 INS42 INS45 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS9 INS42 INS43 INS59 INS32 INS42 INS43 INS59 INS32 INS38 INS27 INS21 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS45 INS32 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL39 DEL34 DEL59 DEL23