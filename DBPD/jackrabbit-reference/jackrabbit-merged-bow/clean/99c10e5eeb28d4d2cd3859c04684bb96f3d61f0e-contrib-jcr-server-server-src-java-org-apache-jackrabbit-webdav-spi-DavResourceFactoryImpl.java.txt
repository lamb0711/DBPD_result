- comitting latest changes from angela
- adding configuration for authorization header behaviour

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159798 13f79535-47bb-0310-9956-ffa450edef68

-        DavResource resource = null;
+        DavResource resource;
-        }
-
-        if (resource == null) {
+        } else {
-            } catch (RepositoryException e) {
-                // create the default resources if no such item exists
-                // MKCOL request forces a collection-resource even if there already
-                // exists a repository-property with the given path. the MKCOL will
-                // in that particular case fail with a 405 (method not allowed).
-                if (DavMethods.getMethodCode(request.getMethod()) == DavMethods.DAV_MKCOL) {
-                    resource = new VersionControlledItemCollection(locator, session, this);
-                } else {
-                    resource = new DefaultItemResource(locator, session, this);
-                }
-            }
-
-            // if the created resource is version-controlled and the request
-            // contains a Label header, the corresponding Version must be used
-            // instead.
-            if (request instanceof DeltaVServletRequest && isVersionControlled(resource)) {
-                String labelHeader = ((DeltaVServletRequest)request).getLabel();
-                if (labelHeader != null && DavMethods.isMethodAffectedByLabel(request.getMethod())) {
-                    try {
+                /* if the created resource is version-controlled and the request
+                contains a Label header, the corresponding Version must be used
+                instead.*/
+                if (request instanceof DeltaVServletRequest && isVersionControlled(resource)) {
+                    String labelHeader = ((DeltaVServletRequest)request).getLabel();
+                    if (labelHeader != null && DavMethods.isMethodAffectedByLabel(request.getMethod())) {
-                        resource =  new VersionItemCollection(vloc, session, this);
-                    } catch (RepositoryException e) {
-                        log.error("Failed to build version resource from "+locator.getHref(true)+" and label "+labelHeader);
-                        throw new JcrDavException(e);
+                        resource =  new VersionItemCollection(vloc, session, this, v);
+            } catch (PathNotFoundException e) {
+                /* item does not exist yet: create the default resources
+                Note: MKCOL request forces a collection-resource even if there already
+                exists a repository-property with the given path. the MKCOL will
+                in that particular case fail with a 405 (method not allowed).*/
+                if (DavMethods.getMethodCode(request.getMethod()) == DavMethods.DAV_MKCOL) {
+                    resource = new VersionControlledItemCollection(locator, session, this, null);
+                } else {
+                    resource = new DefaultItemResource(locator, session, this, null);
+                }
+            } catch (RepositoryException e) {
+                log.error("Failed to build resource from item '"+ locator.getResourcePath() + "'");
+                throw new JcrDavException(e);
-
-		resource = new VersionControlledItemCollection(locator, session, this);
+		resource = new VersionControlledItemCollection(locator, session, this, null);
+        // todo: currently transactionId is set manually after creation > to be improved.
-
-                resource = new VersionItemCollection(locator, session, this);
+                resource = new VersionItemCollection(locator, session, this, item);
-                resource = new VersionHistoryItemCollection(locator, session, this);
+                resource = new VersionHistoryItemCollection(locator, session, this, item);
-                resource =  new RootItemCollection(locator, session, this);
+                resource =  new RootItemCollection(locator, session, this, item);
-                resource = new VersionControlledItemCollection(locator, session, this);
+                resource = new VersionControlledItemCollection(locator, session, this, item);
-            resource = new DefaultItemResource(locator, session, this);
+            resource = new DefaultItemResource(locator, session, this, item);

MOV8 MOV60 INS60 MOV21 MOV21 MOV41 INS43 INS59 MOV32 MOV8 INS42 INS42 INS8 INS12 INS21 INS25 INS44 INS8 INS7 MOV27 INS8 INS43 INS42 INS25 INS42 INS42 INS32 MOV60 INS25 INS42 MOV27 INS8 INS8 INS42 INS42 INS42 MOV27 MOV8 INS21 INS21 INS42 INS7 INS7 UPD45 UPD45 INS33 INS42 INS42 INS14 INS42 INS14 UPD42 INS42 INS42 MOV43 INS42 INS42 INS52 INS33 MOV43 INS42 INS42 INS52 INS33 INS42 DEL9 DEL42 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL52 DEL14 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL52 DEL14 DEL7 DEL21 DEL8 DEL25 DEL8 DEL12 DEL54 DEL25 DEL8 DEL25 DEL8