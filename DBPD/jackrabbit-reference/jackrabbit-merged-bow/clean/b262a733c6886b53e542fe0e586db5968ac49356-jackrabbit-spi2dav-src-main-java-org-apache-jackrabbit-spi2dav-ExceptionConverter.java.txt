JCR-2536: spi2davex: InvalidItemStateException not properly extracted from ambiguous response error
JCR-2565: spi2dav: Overwrite header T specified for MOVE and COPY causes failure if some API tests [+ adding test for copy with snsiblings allowed]


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@921991 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.DavException;
-import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavMethods;
+import org.apache.jackrabbit.webdav.DavServletResponse;
-import org.apache.jackrabbit.webdav.client.methods.DeleteMethod;
-import org.apache.jackrabbit.webdav.client.methods.MkColMethod;
-import org.apache.commons.httpclient.methods.PutMethod;
-import javax.jcr.RepositoryException;
-import javax.jcr.ItemNotFoundException;
+import javax.jcr.ItemNotFoundException;
+import javax.jcr.PathNotFoundException;
+import javax.jcr.RepositoryException;
-import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.nodetype.ConstraintViolationException;
+        String name = (method == null) ? "_undefined_" : method.getName();
+        int code = DavMethods.getMethodCode(name);
+        return generate(davExc, code, name);
+    }
+
+    public static RepositoryException generate(DavException davExc, int methodCode, String name) {
-                                if (o instanceof RepositoryException) {
+                                if (o instanceof PathNotFoundException && methodCode == DavMethods.DAV_POST) {
+                                    // see JCR-2536
+                                    return new InvalidItemStateException(msg);
+                                } else if (o instanceof RepositoryException) {
-                if (method != null && (method instanceof DeleteMethod ||
-                                       method instanceof MkColMethod ||
-                                       method instanceof PutMethod)) {
-                    // target item has probably while transient changes have
-                    // been made.
-                    return new InvalidItemStateException(msg, davExc);
-                } else {
-                    return new ItemNotFoundException(msg, davExc);
+                switch (methodCode) {
+                    case DavMethods.DAV_DELETE:
+                    case DavMethods.DAV_MKCOL:
+                    case DavMethods.DAV_PUT:
+                    case DavMethods.DAV_POST:
+                        // target item has probably while transient changes have
+                        // been made.
+                        return new InvalidItemStateException(msg, davExc);
+                    default:
+                        return new ItemNotFoundException(msg, davExc);
-                if (method != null) {
+                if (methodCode > 0 && name != null) {
-                            + method + " could not be executed", davExc);
+                            + name + " could not be executed", davExc);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 INS31 INS83 INS83 INS43 INS42 INS44 MOV44 INS8 INS44 INS44 INS42 INS43 INS42 INS60 INS60 INS41 INS39 INS42 INS43 INS42 INS42 INS43 INS59 INS39 INS59 INS32 INS42 INS50 INS25 INS42 INS42 INS16 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS49 INS49 INS49 INS49 MOV41 INS49 MOV41 INS27 MOV8 MOV8 INS36 INS45 INS32 INS42 INS42 INS42 INS40 INS40 INS40 INS40 INS27 INS27 INS27 INS42 INS42 INS42 INS34 UPD42 MOV42 MOV33 INS42 INS33 UPD42 INS25 INS27 INS8 MOV25 INS62 INS27 INS41 INS42 INS43 INS42 INS40 INS14 INS42 INS43 INS42 INS42 DEL40 DEL26 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL27 DEL36 DEL27 DEL8 DEL8 DEL25 DEL27 DEL25