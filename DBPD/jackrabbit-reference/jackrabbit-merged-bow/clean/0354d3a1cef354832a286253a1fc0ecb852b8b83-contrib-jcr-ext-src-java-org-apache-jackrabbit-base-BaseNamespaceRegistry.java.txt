JCR-EXT: Various improvements and documentation for the JCR base classes.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@328807 13f79535-47bb-0310-9956-ffa450edef68

- * NamespaceRegistry base class.
+ * NamespaceRegistry base class. The dummy namespace registry implemented
+ * by this class only contains the builtin namespaces defined by the JSR 170
+ * specification. Subclasses should override the methods of this class to
+ * include other namespaces or to support namespace management.
-    /** Protected constructor. This class is only useful when extended. */
-    protected BaseNamespaceRegistry() {
-    }
+    /** The default namespace prefixes. */
+    private static final String[] NAMESPACE_PREFIXES =
+        new String[] { "jcr", "nt", "mix", "xml", "" };
-    /** Not implemented. {@inheritDoc} */
+    /** The default namespace URIs. */
+    private static final String[] NAMESPACE_URIS = new String[] {
+            "http://www.jcp.org/jcr/1.0",
+            "http://www.jcp.org/jcr/nt/1.0",
+            "http://www.jcp.org/jcr/mix/1.0",
+            "http://www.w3.org/XML/1998/namespace",
+            ""
+        };
+
+    /**
+     * Unsupported operation. Subclasses should override this method to
+     * allow namespace management.
+     *
+     * @param prefix namespace prefix
+     * @param uri namespace URI
+     * @see NamespaceRegistry#registerNamespace(String, String)
+     */
-            throws NamespaceException, UnsupportedRepositoryOperationException,
-            RepositoryException {
-        throw new UnsupportedRepositoryOperationException();
-    }
-
-    /** Not implemented. {@inheritDoc} */
-    public void unregisterNamespace(String prefix) throws NamespaceException,
-            UnsupportedRepositoryOperationException, RepositoryException {
-        throw new UnsupportedRepositoryOperationException();
-    }
-
-    /** Not implemented. {@inheritDoc} */
-    public String[] getPrefixes() throws RepositoryException {
+            throws RepositoryException {
-     * Implemented by calling <code>getPrefixes()</code> and
-     * mapping all returned prefixes into namespace URIs using
-     * <code>getURI(prefix)</code>.
-     * {@inheritDoc}
+     * Unsupported operation. Subclasses should override this method to
+     * allow namespace management.
+     *
+     * @param prefix namespace prefix
+     * @see NamespaceRegistry#unregisterNamespace(String, String)
+     */
+    public void unregisterNamespace(String prefix) throws RepositoryException {
+        throw new UnsupportedRepositoryOperationException();
+    }
+
+    /**
+     * Returns the builtin namespace prefixes defined by the JSR 170
+     * specification. Subclasses should override this method to return
+     * the actual registered namespace prefixes.
+     *
+     * @return builtin namespace prefixes
+     * @see NamespaceRegistry#getPrefixes()
+     */
+    public String[] getPrefixes() throws RepositoryException {
+        return (String[]) NAMESPACE_PREFIXES.clone();
+    }
+
+    /**
+     * Returns the builtin namespace URIs defined by the JSR 170
+     * specification. Subclasses should override this method to return
+     * the actual registered namespace URIs.
+     *
+     * @return builtin namespace prefixes
+     * @see NamespaceRegistry#getURIs()
-        String[] prefixes = getPrefixes();
-        String[] uris = new String[prefixes.length];
-        for (int i = 0; i < prefixes.length; i++) {
-            uris[i] = getURI(prefixes[i]);
-        }
-        return uris;
-    }
-
-    /** Not implemented. {@inheritDoc} */
-    public String getURI(String prefix) throws NamespaceException,
-            RepositoryException {
-        throw new UnsupportedRepositoryOperationException();
+        return (String[]) NAMESPACE_URIS.clone();
-     * Implemented by calling <code>getPrefixes()</code> and iterating
-     * over the returned prefixes to find the prefix for which
-     * <code>getURI(prefix)</code> returns the given namespace URI.
-     * {@inheritDoc}
+     * Returns the builtin namespace URI that is mapped to the given
+     * builtin namespace prefix as defined by the JSR 170 specification.
+     * Subclasses should override this method to support the actual
+     * registered namespaces.
+     *
+     * @param prefix namespace prefix
+     * @return namespace URI
+     * @throws NamespaceException if the namespace prefix was not found
+     * @see NamespaceRegistry#getURI(String)
-    public String getPrefix(String uri) throws NamespaceException,
-            RepositoryException {
-        String[] prefixes = getPrefixes();
-        for (int i = 0; i < prefixes.length; i++) {
-            if (uri.equals(getURI(prefixes[i]))) {
-                return prefixes[i];
+    public String getURI(String prefix) throws RepositoryException {
+        for (int i = 0; i < NAMESPACE_PREFIXES.length; i++) {
+            if (NAMESPACE_PREFIXES[i].equals(prefix)) {
+                return NAMESPACE_URIS[i];
-        throw new NamespaceException("Namespace URI not registered: " + uri);
+        throw new NamespaceException("Prefix " + prefix + " not found");
-}
+    /**
+     * Returns the builtin namespace prefix that is mapped to the given
+     * builtin namespace URI as defined by the JSR 170 specification.
+     * Subclasses should override this method to support the actual
+     * registered namespaces.
+     *
+     * @param uri namespace URI
+     * @return namespace prefix
+     * @throws NamespaceException if the namespace URI was not found
+     * @see NamespaceRegistry#getPrefix(String)
+     */
+    public String getPrefix(String uri) throws RepositoryException {
+        for (int i = 0; i < NAMESPACE_URIS.length; i++) {
+            if (NAMESPACE_URIS[i].equals(uri)) {
+                return NAMESPACE_PREFIXES[i];
+            }
+        }
+        throw new NamespaceException("URI " + uri + " not found");
+    }
+
+ }

INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS83 INS5 INS59 INS29 INS83 INS83 INS83 INS5 INS59 MOV29 MOV83 MOV39 MOV42 MOV44 MOV44 MOV43 MOV8 INS29 INS83 INS39 INS42 MOV44 MOV43 MOV8 MOV5 UPD42 MOV43 INS8 UPD42 INS8 MOV43 UPD42 MOV44 MOV43 INS29 MOV83 MOV43 MOV42 MOV44 MOV43 MOV8 UPD66 INS66 INS66 INS66 INS65 INS43 INS85 INS42 INS3 MOV65 INS43 INS85 INS42 INS3 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS41 INS65 INS65 INS41 INS65 INS65 INS65 INS65 INS65 INS53 MOV65 INS65 INS65 INS65 INS65 INS66 INS42 MOV5 INS4 UPD66 INS42 MOV5 INS4 INS66 UPD66 MOV66 INS42 INS66 INS42 UPD66 MOV66 INS68 INS66 INS66 INS42 INS66 INS68 UPD66 UPD66 INS66 INS66 INS68 INS11 UPD66 UPD66 INS66 INS66 INS68 INS11 INS66 UPD66 MOV66 INS66 INS66 INS42 UPD66 MOV66 INS66 INS42 UPD66 MOV66 INS68 MOV58 MOV37 INS14 UPD66 UPD66 INS66 INS66 INS42 UPD66 MOV66 UPD66 MOV66 INS42 UPD66 MOV66 INS68 MOV58 MOV37 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS42 INS69 INS69 INS42 INS42 INS69 INS69 INS42 INS42 MOV5 INS32 INS42 INS42 MOV5 INS32 INS42 INS42 INS69 UPD40 INS25 MOV43 INS27 INS42 INS42 INS69 UPD40 MOV43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS43 INS32 INS8 INS45 INS42 INS45 INS43 UPD45 INS45 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS2 UPD42 MOV42 INS42 INS41 INS42 INS2 INS42 UPD42 MOV42 MOV42 INS2 INS42 INS42 UPD42 MOV42 MOV42 UPD42 DEL65 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31 DEL42 DEL43 DEL43 DEL43 DEL14 DEL53 DEL8 DEL31 DEL65 DEL39 DEL42 DEL43 DEL42 DEL43 DEL14 DEL53 DEL8 DEL65 DEL65 DEL65 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL40 DEL3 DEL59 DEL60 DEL2 DEL2 DEL32 DEL7 DEL21 DEL42 DEL41 DEL65 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL29 DEL83 DEL42 DEL42 DEL43 DEL31 DEL65 DEL65 DEL29 DEL42 DEL43 DEL31