JCR-4530: jackrabbit-core: avoid use of deprecated commons-collections Buffers

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1873852 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.collections.Buffer;
-import org.apache.commons.collections.BufferUtils;
-import org.apache.commons.collections.buffer.UnboundedFifoBuffer;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.LinkedBlockingQueue;
+import java.util.concurrent.atomic.AtomicInteger;
+
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.Set;
-import java.util.concurrent.atomic.AtomicInteger;
-
-    private Buffer eventQueue
-            = BufferUtils.blockingBuffer(new UnboundedFifoBuffer());
+    private BlockingQueue<DispatchAction> eventQueue = new LinkedBlockingQueue<>();
-            // FIXME log exception ?
+            log.debug("while joining notificationThread", e);
-        DispatchAction action;
-        while ((action = (DispatchAction) eventQueue.remove()) != DISPOSE_MARKER) {
-
-            eventQueueSize.getAndAdd(-action.getEventStates().size());
-            log.debug("got EventStateCollection");
-            log.debug("event delivery to " + action.getEventConsumers().size() + " consumers started...");
-            for (Iterator<EventConsumer> it = action.getEventConsumers().iterator(); it.hasNext();) {
-                EventConsumer c = it.next();
-                try {
-                    c.consumeEvents(action.getEventStates());
-                } catch (Throwable t) {
-                    log.warn("EventConsumer " +
-                            c.getEventListener().getClass().getName() +
-                            " threw exception", t);
-                    // move on to the next consumer
+        boolean done = false;
+        do {
+            try {
+                DispatchAction action = eventQueue.take();
+                done = action == DISPOSE_MARKER;
+                if (!done) {
+                    eventQueueSize.getAndAdd(-action.getEventStates().size());
+                    log.debug("got EventStateCollection");
+                    log.debug("event delivery to " + action.getEventConsumers().size() + " consumers started...");
+                    for (EventConsumer c : action.getEventConsumers()) {
+                        try {
+                            c.consumeEvents(action.getEventStates());
+                        } catch (Throwable t) {
+                            log.warn("EventConsumer " + c.getEventListener().getClass().getName() + " threw exception", t);
+                            // move on to the next consumer
+                        }
+                    }
+            } catch (InterruptedException ex) {
+                log.debug("event delivery interrupted", ex);
-            log.debug("event delivery finished.");
-
-        }
+        } while (!done);
+        log.debug("event delivery finished.");
-

MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 INS74 INS8 INS43 MOV43 INS14 INS60 INS19 MOV21 UPD42 MOV42 INS74 INS39 INS59 INS8 INS38 INS43 INS42 INS9 INS54 INS42 UPD42 MOV42 INS21 MOV8 INS12 INS32 INS21 INS25 INS44 INS8 INS42 INS42 INS45 INS42 MOV43 INS7 INS38 MOV8 INS43 INS42 INS21 INS32 INS42 INS27 INS42 INS70 INS42 INS32 INS42 INS42 INS42 INS42 INS44 MOV32 MOV8 INS42 INS42 INS45 INS42 MOV43 INS42 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL42 DEL43 DEL14 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL7 DEL36 DEL42 DEL27 DEL61