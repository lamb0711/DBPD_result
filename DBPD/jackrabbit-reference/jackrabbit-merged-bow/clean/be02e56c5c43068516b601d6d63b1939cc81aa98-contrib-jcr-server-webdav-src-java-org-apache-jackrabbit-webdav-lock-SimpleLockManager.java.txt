- [JCR-134] extensibility patch for DavResourceImpl
- moving JcrConstants.java to commons
- fixing minor import issues
- readding lost stuff
- adding proper shutdown to RepositoryStartupServlet.java

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@190721 13f79535-47bb-0310-9956-ffa450edef68

- * NOTE: the timeout requested is always replace by a infinite timeout and
- * expiration of locks is not checked.
-    public ActiveLock getLock(Type type, Scope scope, DavResource resource) {
+    public synchronized ActiveLock getLock(Type type, Scope scope, DavResource resource) {
-	String key = resource.getResourcePath();
-	ActiveLock lock = (locks.containsKey(key)) ? (ActiveLock)locks.get(key) : null;
+        return getLock(resource.getResourcePath());
+    }
-	// look for an inherited lock
-	if (lock == null) {
-	    // cut path instead of retrieving the parent resource
-	    String parentPath = Text.getRelativeParent(key, 1);
-	    boolean found = false;
-	    /* stop as soon as parent lock is found:
-	    if the lock is deep or the parent is a collection the lock
-	    applies to the given resource. */
-	    while (!"/".equals(parentPath) && !(found = locks.containsKey(parentPath))) {
-		parentPath = Text.getRelativeParent(parentPath, 1);
-	    }
-	    if (found) {
-		ActiveLock parentLock = (ActiveLock)locks.get(parentPath);
-		if (parentLock.isDeep()) {
-		    lock = parentLock;
-		}
-	    }
-	}
-	// since locks have infinite timeout, check for expired lock is omitted.
-	return lock;
+    /**
+     * Recursivly tries to find the lock
+     *
+     * @param path
+     * @return
+     */
+    private ActiveLock getLock(String path) {
+	ActiveLock lock = (ActiveLock) locks.get(path);
+        if (lock != null) {
+            // check if not expired
+            if (lock.isExpired()) {
+                lock = null;
+            }
+        }
+        if (lock == null) {
+            // check, if child of deep locked parent
+            if (!path.equals("/")) {
+                ActiveLock parentLock = getLock(Text.getRelativeParent(path, 1));
+                if (parentLock != null && parentLock.isDeep()) {
+                    lock = parentLock;
+                }
+            }
+        }
+        return lock;
-    public synchronized ActiveLock createLock(LockInfo lockInfo, DavResource resource)
+    public synchronized ActiveLock createLock(LockInfo lockInfo,
+                                              DavResource resource)
-	if (locks.containsKey(resourcePath)) {
+        ActiveLock lock = (ActiveLock) locks.get(resourcePath);
+        if (lock != null && lock.isExpired()) {
+            locks.remove(resourcePath);
+            lock = null;
+        }
+        if (lock != null) {
-	ActiveLock lock = new DefaultActiveLock(lockInfo);
-	// Lazy: reset the timeout to 'Infinite', in order to omit the tests for
-	// lock expiration.
-	lock.setTimeout(DavConstants.INFINITE_TIMEOUT);
+	lock = new DefaultActiveLock(lockInfo);
-	// timeout is always infinite > no test for expiration or adjusting timeout needed.
+        lock.setTimeout(lockInfo.getTimeout());
-	// since locks have infinite timeout, check for expiration is omitted.
-

INS31 INS31 MOV29 MOV83 INS83 MOV43 MOV42 MOV44 MOV44 MOV44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 MOV60 MOV25 INS41 INS65 INS65 INS65 UPD42 MOV42 MOV43 INS42 MOV60 MOV25 INS25 MOV41 INS25 INS21 INS21 INS32 INS66 INS42 MOV43 INS27 INS8 MOV27 INS8 MOV43 INS27 INS8 INS27 INS7 INS32 INS42 MOV32 INS11 INS42 INS33 INS25 MOV25 INS11 INS27 INS32 MOV21 INS21 INS42 INS33 INS42 MOV14 INS42 INS42 INS32 MOV43 MOV32 INS32 INS8 INS38 MOV43 INS32 INS42 INS33 INS42 INS42 INS7 INS42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV21 INS32 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS33 INS42 INS42 INS45 INS27 UPD42 INS33 INS32 INS27 MOV32 UPD42 MOV42 INS32 INS42 INS33 INS42 UPD42 MOV42 UPD42 MOV42 INS34 DEL66 DEL66 DEL42 DEL42 DEL42 DEL32 DEL36 DEL11 DEL33 DEL16 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL42 DEL42 DEL34 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL7 DEL36 DEL38 DEL27 DEL8 DEL61 DEL8 DEL42 DEL32 DEL11 DEL43 DEL42 DEL59 DEL60 DEL8 DEL31 DEL40 DEL42 DEL42 DEL42 DEL32