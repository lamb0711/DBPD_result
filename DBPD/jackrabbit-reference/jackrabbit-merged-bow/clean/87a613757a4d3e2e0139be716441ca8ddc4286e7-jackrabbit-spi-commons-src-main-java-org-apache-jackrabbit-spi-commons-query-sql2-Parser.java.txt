JCR-2155 SQL2 parser: identifiers should be case sensitive

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785580 13f79535-47bb-0310-9956-ffa450edef68

+        if (currentToken.length() > 0) {
+            throw getSyntaxError("<end>");
+        }
-            if ("ISSAMENODE".equals(name)) {
+            if ("ISSAMENODE".equalsIgnoreCase(name)) {
-            } else if ("ISCHILDNODE".equals(name)) {
+            } else if ("ISCHILDNODE".equalsIgnoreCase(name)) {
-            } else if ("ISDESCENDANTNODE".equals(name)) {
+            } else if ("ISDESCENDANTNODE".equalsIgnoreCase(name)) {
-        if ("CONTAINS".equals(functionName)) {
+        if ("CONTAINS".equalsIgnoreCase(functionName)) {
-        } else if ("ISSAMENODE".equals(functionName)) {
+        } else if ("ISSAMENODE".equalsIgnoreCase(functionName)) {
-        } else if ("ISCHILDNODE".equals(functionName)) {
+        } else if ("ISCHILDNODE".equalsIgnoreCase(functionName)) {
-        } else if ("ISDESCENDANTNODE".equals(functionName)) {
+        } else if ("ISDESCENDANTNODE".equalsIgnoreCase(functionName)) {
-        if ("LENGTH".equals(functionName)) {
+        if ("LENGTH".equalsIgnoreCase(functionName)) {
-        } else if ("NAME".equals(functionName)) {
+        } else if ("NAME".equalsIgnoreCase(functionName)) {
-        } else if ("LOCALNAME".equals(functionName)) {
+        } else if ("LOCALNAME".equalsIgnoreCase(functionName)) {
-        } else if ("SCORE".equals(functionName)) {
+        } else if ("SCORE".equalsIgnoreCase(functionName)) {
-        } else if ("LOWER".equals(functionName)) {
+        } else if ("LOWER".equalsIgnoreCase(functionName)) {
-        } else if ("UPPER".equals(functionName)) {
+        } else if ("UPPER".equalsIgnoreCase(functionName)) {
+            if (readIf(":")) {
+                name = name + ":" + readName();
+            }
-    
+
-        boolean result = token.equals(currentToken) && !currentTokenQuoted;
+        boolean result = token.equalsIgnoreCase(currentToken) && !currentTokenQuoted;
-        if (!expected.equals(currentToken) || currentTokenQuoted) {
+        if (!expected.equalsIgnoreCase(currentToken) || currentTokenQuoted) {
-        boolean changed = false;
-                    command[i] = (char) (c - ('a' - 'A'));
-                    changed = true;
-                        char u = Character.toUpperCase(c);
-                        if (u != c) {
-                            command[i] = u;
-                            changed = true;
-                        }
-        if (changed) {
-            statement = new String(command);
-        }
-                    if (c == 'E') {
+                    if (c == 'E' || c == 'e') {
-                    currentValue = valueFactory.createValue((long) number);
+                    currentValue = valueFactory.createValue(number);
-    
+
-        if (chars[i] == 'E') {
+        if (chars[i] == 'E' || chars[i] == 'e') {
-        
+
-        String query = statement.substring(0, index) + ">*<" + statement.substring(index).trim();
+        String query = statement.substring(0, index) + "(*)" + statement.substring(index).trim();
-    
+
-     * 
+     *

INS25 INS27 INS8 INS27 INS32 INS34 INS53 UPD42 UPD42 MOV27 INS27 INS42 INS42 INS32 UPD42 UPD42 INS25 INS2 INS13 UPD45 INS42 INS45 UPD42 UPD42 UPD42 INS32 INS8 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 INS42 INS45 INS21 UPD42 UPD42 INS7 INS27 UPD42 INS42 INS27 MOV27 INS27 INS42 INS45 INS32 INS42 INS13 INS42 INS42 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL2 DEL39 DEL42 DEL13 DEL13 DEL27 DEL36 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL27 DEL42 DEL42 DEL2 DEL42 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL39 DEL42 DEL11