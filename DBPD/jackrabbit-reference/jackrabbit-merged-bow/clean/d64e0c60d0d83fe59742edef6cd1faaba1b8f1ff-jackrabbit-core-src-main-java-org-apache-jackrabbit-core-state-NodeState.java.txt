JCR-2683: Provide rename method for nodes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@985211 13f79535-47bb-0310-9956-ffa450edef68

-     * Renames a  <code>ChildNodeEntry</code> by removing the old entry and
+     * Renames a <code>ChildNodeEntry</code> by removing the old entry and
+        ChildNodeEntry oldEntry = childNodeEntries.get(oldName, index);;
+        if (oldEntry != null) {
+            return renameChildNodeEntry(oldEntry.getId(), newName);
+        }
+        return false;
+    }
+
+    /**
+     * Renames a <code>ChildNodeEntry</code> by removing the old entry and
+     * appending the new entry to the end of the list.
+     *
+     * @param id id the entry to be renamed is refering to.
+     * @param newName <code>Name</code> object specifying the entry's new name
+     * @return <code>true</code> if the entry was successfully renamed;
+     *         otherwise <code>false</code>
+     */
+    public boolean renameChildNodeEntry(NodeId id, Name newName) {
-            oldEntry = childNodeEntries.remove(oldName, index);
+            oldEntry = childNodeEntries.remove(id);
+     * Replaces the <code>ChildNodeEntry</code> identified by <code>oldId</code>
+     * with a new entry. Note that the entry will <i>overwrite</i> the old
+     * entry at the same relative position within the child node entries list.
+     *
+     * @param oldId id the entry to be replaced is refering to.
+     * @param newName <code>Name</code> object specifying the entry's new name
+     * @param newId the id the new entry is refering to.
+     * @return <code>true</code> if the entry was successfully replaced;
+     *         otherwise <code>false</code>
+     */
+    public boolean replaceChildNodeEntry(NodeId oldId, Name newName, NodeId newId) {
+        synchronized (this) {
+            ChildNodeEntry oldEntry = childNodeEntries.get(oldId);
+            if (oldEntry == null) {
+                return false;
+            }
+
+            ChildNodeEntries entries = new ChildNodeEntries();
+            for (ChildNodeEntry entry : childNodeEntries.list()) {
+                if (entry.getId() == oldId) {
+                    entries.add(newName, newId);
+                } else {
+                    entries.add(entry.getName(), entry.getId());
+                }
+            }
+            childNodeEntries = entries;
+        }
+
+        notifyNodesReplaced();
+        return true;
+    }
+
+    /**

INS31 INS31 MOV29 INS83 INS39 INS42 MOV44 MOV44 INS44 INS8 INS29 INS44 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS43 INS42 INS60 INS20 INS25 INS41 INS65 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS51 INS21 INS41 UPD66 INS42 INS43 INS59 INS27 INS8 INS9 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS52 INS8 INS32 INS9 INS42 INS42 INS32 INS42 INS33 INS41 INS60 INS25 INS60 INS70 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS44 INS32 INS8 INS7 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS9 INS43 INS42 INS27 INS8 INS8 INS42 INS32 INS42 INS21 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL42