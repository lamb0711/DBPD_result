JCR-2105: JSR 283 NodeType Management (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@772992 13f79535-47bb-0310-9956-ffa450edef68

+     * Indicates whether this is an abstract node type definition.
+     */
+    private final boolean isAbstract;
+
+    /**
+     * Indicates whether this is a queryable node type definition.
+     */
+    private final boolean isQueryable;
+
+    /**
-        this(nt.getName(), nt.getSupertypes(), nt.isMixin(),
+        this(nt.getName(), nt.getSupertypes(), nt.getSupportedMixinTypes(),
+                nt.isMixin(), nt.isAbstract(), nt.isQueryable(),
-        this.name = name;
-        this.supertypes = supertypes;
-        this.supportedMixins = null;
-        this.isMixin = isMixin;
-        this.hasOrderableChildNodes = hasOrderableChildNodes;
-        this.primaryItemName = primaryItemName;
-        this.propertyDefs = getSerializablePropertyDefs(declaredPropDefs);
-        this.childNodeDefs = getSerializableNodeDefs(declaredNodeDefs);
+        this(name, supertypes, null, isMixin, false, false,
+                hasOrderableChildNodes, primaryItemName,
+                getSerializablePropertyDefs(declaredPropDefs),
+                getSerializableNodeDefs(declaredNodeDefs));
-     * Creates a new serializable qualified node type definition.
+     * Creates a new serializable qualified node type definition. Same as
+     * {@link #QNodeTypeDefinitionImpl(Name, Name[], Name[], boolean, boolean, boolean, boolean, Name, QPropertyDefinition[], QNodeDefinition[])}
+     * but using <code>false</code> for both {@link #isAbstract()} and {@link #isQueryable)}.
+     *
+        this(name, supertypes, supportedMixins, isMixin, false, false,
+                hasOrderableChildNodes, primaryItemName,
+                getSerializablePropertyDefs(declaredPropDefs),
+                getSerializableNodeDefs(declaredNodeDefs));
+    }
+
+    /**
+     * Creates a new serializable qualified node type definition.
+     *
+     * @param name                   the name of the node type
+     * @param supertypes             the names of the supertypes
+     * @param supportedMixins        the names of supported mixins (or <code>null</code>)
+     * @param isMixin                if this is a mixin node type
+     * @param isAbstract             if this is an abstract node type definition.
+     * @param isQueryable            if this is a queryable node type definition.
+     * @param hasOrderableChildNodes if this node type has orderable child
+     *                               nodes.
+     * @param primaryItemName        the name of the primary item, or
+     *                               <code>null</code>.
+     * @param declaredPropDefs       the declared property definitions.
+     * @param declaredNodeDefs       the declared child node definitions.
+     */
+    public QNodeTypeDefinitionImpl(Name name,
+                                   Name[] supertypes,
+                                   Name[] supportedMixins,
+                                   boolean isMixin,
+                                   boolean isAbstract,
+                                   boolean isQueryable,
+                                   boolean hasOrderableChildNodes,
+                                   Name primaryItemName,
+                                   QPropertyDefinition[] declaredPropDefs,
+                                   QNodeDefinition[] declaredNodeDefs) {
+        this.isAbstract = isAbstract;
+        this.isQueryable = isQueryable;
+    public boolean isAbstract() {
+        return isAbstract;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public boolean isQueryable() {
+        return isQueryable;
+    }
+
+    /**
+     * {@inheritDoc}
+     */

INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS39 INS59 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS44 INS44 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS65 INS42 INS65 INS42 INS17 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS5 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS5 INS42 INS5 INS42 INS17 INS65 INS65 INS39 INS42 INS39 INS42 INS21 INS21 INS65 INS41 INS65 INS41 INS66 INS66 INS32 INS32 INS32 INS42 INS42 INS33 INS42 INS9 INS9 INS42 INS42 INS32 INS32 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS85 INS43 INS85 INS42 INS43 INS85 INS43 INS85 INS42 INS42 INS42 INS42 INS9 INS9 INS42 INS42 INS32 INS32 INS42 INS66 INS42 INS66 INS7 INS7 INS65 INS42 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 MOV42 MOV42 MOV42 INS68 INS68 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS42 INS69 INS69 INS69 INS69 INS69 INS69 INS69 INS69 INS69 INS69 INS42 INS52 INS42 INS52 INS42 INS43 INS5 INS5 INS39 INS39 INS39 INS39 INS43 INS5 INS5 INS42 INS43 INS85 INS43 INS85 INS42 INS43 INS85 INS43 INS85 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL32 DEL7 DEL21