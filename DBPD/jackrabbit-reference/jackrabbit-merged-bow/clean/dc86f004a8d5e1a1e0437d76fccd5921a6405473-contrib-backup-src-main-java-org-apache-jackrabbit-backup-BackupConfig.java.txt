JCR-442: Committed Nicolas' latest contrib/backup changes (patch-backup-060728.txt) with some modifications.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@426435 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.InputStream;
+
- * (ManagerBackup or WorkspaceBackup for instance).
+ * (BackupManager or WorkspaceBackup for instance).
+    //TODO Useful?
+    //Tused to backup a workspace first in a file
-    private String xml;
+    private File file;
+    private File repoConfFile;
+    private String login;
+    private String password;
-     * Convenience method that wraps the configuration file name into an
-     * {@link InputSource} and invokes the
-     * {@link #create(InputSource, String)} method.
-     *
-     * @param file repository configuration file name
-     * @param home repository home directory
-     * @return backup configuration
-     * @throws ConfigurationException on configuration errors
-     * @throws IllegalAccessException 
-     * @throws InstantiationException 
-     * @throws ClassNotFoundException 
-     * @throws SizeException 
-     * @throws IOException 
-     * @see #create(InputSource, String)
-     */
-    public static BackupConfig create(String file)
-            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
-        URI uri = new File(file).toURI();
-        return create(new InputSource(uri.toString()));
-    }
-
-    /**
-     * Convenience method that wraps the configuration URI into an
-     * {@link InputSource} and invokes the
-     * {@link #create(InputSource, String)} method.
-     *
-     * @param uri repository configuration URI
-     * @param home repository home directory
-     * @return backup configuration
-     * @throws ConfigurationException on configuration errors
-     * @throws IllegalAccessException 
-     * @throws InstantiationException 
-     * @throws ClassNotFoundException 
-     * @throws SizeException 
-     * @throws IOException 
-     * @see #create(InputSource, String)
-     */
-    public static BackupConfig create(URI uri)
-            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
-        return create(new InputSource(uri.toString()));
-    }
-
-    /**
-     * Convenience method that wraps the configuration input stream into an
-     * {@link InputSource} and invokes the
-     * {@link #create(InputSource, String)} method.
-     *
-     * @param input repository configuration input stream
-     * @param home repository home directory
-     * @return backup configuration
-     * @throws ConfigurationException on configuration errors
-     * @throws IllegalAccessException 
-     * @throws InstantiationException 
-     * @throws ClassNotFoundException 
-     * @throws SizeException 
-     * @throws IOException 
-     * @see #create(InputSource, String)
-     */
-    public static BackupConfig create(InputStream input, String home)
-            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
-        return create(new InputSource(input));
-    }
-
-    /**
+     * @param repoConfFile 
-     * @throws SizeException 
-    public static BackupConfig create(InputSource xml)
-            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
+    public static BackupConfig create(String myFile, String repoConfFile, String login, String password)
+            throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException, IOException {
+        
+        URI uri = new File(myFile).toURI();
+        InputSource is = new InputSource(uri.toString());
+
-        BackupConfig config = parser.parseBackupConfig(xml);
+        BackupConfig config = parser.parseBackupConfig(is, myFile, repoConfFile, login, password);
-    public BackupConfig(PersistenceManagerConfig pmc, File path, Collection allResources) throws IOException {
+    public BackupConfig(PersistenceManagerConfig pmc, File path, Collection allResources, String myFile, String repoConfFile, String login, String password) throws IOException {
+        this.file = new File(myFile);
+        this.repoConfFile = new File(repoConfFile);
+        this.password = password;
+        this.login = login;
-    /*
-     * Useful?
-     */
-    public Backup getBackup() {
-        // TODO Auto-generated method stub
-        return null;
+    public File getFile() {
+        return this.file;       
-    public String getXml() {
-        return xml;
+
+
+    public File getRepoConfFile() {
+        return repoConfFile;
+
+    public String getPassword() {
+        return this.password;
+    }
+
+
+
+    public String getLogin() {
+        return this.login;
+    }
+
+
+

MOV31 MOV31 INS23 INS23 INS23 INS23 MOV83 INS43 INS59 INS83 INS43 INS59 INS83 MOV43 INS59 INS83 INS43 INS59 MOV65 MOV44 INS44 INS44 MOV8 INS44 MOV44 INS44 INS44 UPD43 UPD42 UPD43 INS42 UPD43 UPD42 UPD42 UPD66 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 UPD65 UPD42 MOV43 INS42 MOV43 INS42 MOV43 INS42 INS60 MOV60 INS60 MOV41 MOV43 INS42 UPD42 MOV43 INS42 MOV43 INS42 INS21 INS21 INS21 INS21 UPD42 UPD42 UPD42 UPD42 MOV43 INS59 MOV43 INS59 INS7 INS7 INS7 INS7 INS22 INS42 INS22 INS22 INS42 MOV14 INS42 INS32 INS22 INS14 INS22 INS14 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS52 INS42 UPD42 INS42 INS42 DEL40 DEL26 DEL42 DEL59 DEL23 DEL66 DEL42 DEL65 DEL66 DEL42 DEL43 DEL69 DEL69 DEL68 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL43 DEL69 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL43 DEL42 DEL43 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL32 DEL41 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL66 DEL42 DEL65 DEL66 DEL42 DEL69 DEL69 DEL68 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL43 DEL69 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL32 DEL66 DEL42 DEL65 DEL66 DEL42 DEL42 DEL43 DEL69 DEL69 DEL68 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL43 DEL69 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL33 DEL42