JCR-RMI: Use remote iterators instead of arrays to avoid memory and network problems with large result sets.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@365458 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.rmi.remote.RemotePropertyDefinition;
+    /**
+     * Utility method for creating an array of local node definition
+     * adapters for an array of remote node definitions. The node
+     * definition adapters are created using the local adapter factory.
+     * <p>
+     * A <code>null</code> input is treated as an empty array.
+     *
+     * @param remotes remote node definitions
+     * @return local node definition array
+     */
+    private NodeDefinition[] getNodeDefArray(RemoteNodeDefinition[] remotes) {
+        if (remotes != null) {
+            NodeDefinition[] defs = new NodeDefinition[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                defs[i] = getFactory().getNodeDef(remotes[i]);
+            }
+            return defs;
+        } else {
+            return new NodeDefinition[0]; // for safety
+        }
+    }
+
+    /**
+     * Utility method for creating an array of local property definition
+     * adapters for an array of remote property definitions. The property
+     * definition adapters are created using the local adapter factory.
+     * <p>
+     * A <code>null</code> input is treated as an empty array.
+     *
+     * @param remotes remote property definitions
+     * @return local property definition array
+     */
+    protected PropertyDefinition[] getPropertyDefArray(
+            RemotePropertyDefinition[] remotes) {
+        if (remotes != null) {
+            PropertyDefinition[] defs = new PropertyDefinition[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                defs[i] = getFactory().getPropertyDef(remotes[i]);
+            }
+            return defs;
+        } else {
+            return new PropertyDefinition[0]; // for safety
+        }
+    }
+
-            RemoteNodeDefinition[] defs = remote.getChildNodeDefs();
-            return getNodeDefArray(defs);
+            return getNodeDefArray(remote.getChildNodeDefs());
-            RemoteNodeDefinition[] defs = remote.getDeclaredChildNodeDefs();
-            return getNodeDefArray(defs);
+            return getNodeDefArray(remote.getDeclaredChildNodeDefs());

INS26 INS40 INS31 INS31 INS29 INS83 INS5 INS42 INS44 INS8 INS29 INS83 INS5 INS42 INS44 INS8 INS65 INS65 INS65 INS43 INS85 MOV5 INS42 INS25 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS25 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS27 INS8 INS8 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS85 INS27 INS8 INS8 INS42 INS33 INS60 INS24 INS41 INS41 INS42 INS42 INS33 INS60 INS24 INS41 INS41 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS3 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS3 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS5 INS34 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS5 INS34 MOV32 MOV32 INS42 INS5 INS40 INS42 INS34 INS7 INS43 INS85 INS42 INS5 INS40 INS42 INS34 INS7 INS43 INS85 INS43 INS85 INS2 INS32 INS42 INS43 INS85 INS2 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL42