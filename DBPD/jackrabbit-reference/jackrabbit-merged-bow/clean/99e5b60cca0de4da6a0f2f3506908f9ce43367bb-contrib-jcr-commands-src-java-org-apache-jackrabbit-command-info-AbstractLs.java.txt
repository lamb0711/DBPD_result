jcr-commands 
 - naming and packaging reviewed
 - now commands only read parameters from the context because commands shouldn't have a state of their own but use only the context.
 - i18n reorganized in one single resources file
 - batch mode added
 - cover most of jcr operations (versioning, locking, etc.)
 - commands simplified. Most commands don't have default values.
 - logging added

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@294914 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.chain.command.info;
+package org.apache.jackrabbit.command.info;
+import java.util.ResourceBundle;
+import org.apache.commons.chain.Command;
-import org.apache.jackrabbit.chain.CtxHelper;
+import org.apache.jackrabbit.command.CommandHelper;
-public abstract class AbstractLs extends AbstractInfoCommand
+public abstract class AbstractLs implements Command
+    /** bundle */
+    private static ResourceBundle bundle = CommandHelper.getBundle();
+
-    protected int defaultMaxItems = 100;
+    private int defaultMaxItems = 100;
-    private String maxItemsKey ;
+    /** max number of items */
+    private String maxItemsKey = "maxItems";
+    /** show path flag */
-        CtxHelper.getOutput(ctx).println() ;
-        CtxHelper.getOutput(ctx).println(bundle.getString("total"));
+        CommandHelper.getOutput(ctx).println();
+        CommandHelper.getOutput(ctx).println(bundle.getString("word.total"));
-        CtxHelper.getOutput(ctx).println(
-            iter.getSize() + " " + bundle.getString("nodes"));
+        CommandHelper.getOutput(ctx).println(
+            iter.getSize() + " " + bundle.getString("word.nodes"));
-        CtxHelper.getOutput(ctx).println(
-            iter.getSize() + " " + bundle.getString("properties"));
+        CommandHelper.getOutput(ctx).println(
+            iter.getSize() + " " + bundle.getString("word.properties"));
+    /**
+     * @param ctx
+     * @return max number of items to show
+     */
-        return CtxHelper.getIntAttr(null, maxItemsKey, defaultMaxItems, ctx);
+        String maxItems = (String) ctx.get(this.maxItemsKey);
+        if (maxItems == null)
+        {
+            maxItems = new Integer(this.defaultMaxItems).toString();
+        }
+        return Integer.valueOf(maxItems).intValue();
+

INS26 INS26 UPD40 INS40 INS40 UPD40 UPD43 INS23 UPD42 INS29 INS83 INS83 INS43 INS59 UPD83 INS29 INS29 INS29 INS65 INS42 INS42 INS32 INS65 INS45 INS65 INS65 INS65 INS60 INS25 INS41 INS66 INS42 INS42 INS66 INS66 INS42 INS66 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS11 INS42 INS33 INS21 INS32 INS42 UPD42 UPD42 UPD45 UPD42 MOV32 UPD42 MOV32 INS43 INS32 INS7 INS42 INS42 INS42 UPD45 UPD45 INS42 INS42 UPD42 MOV42 INS22 INS42 INS32 INS52 INS42 INS14 UPD42 MOV42 INS43 INS22 INS42 INS52 INS42 DEL42 DEL33 DEL42 DEL42 DEL32 DEL41