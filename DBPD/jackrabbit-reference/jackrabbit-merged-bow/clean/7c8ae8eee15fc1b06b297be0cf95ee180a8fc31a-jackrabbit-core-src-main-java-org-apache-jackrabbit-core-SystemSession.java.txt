JCR-1588: 283 Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@689499 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.AbstractAccessControlManager;
+import org.apache.jackrabbit.core.security.authorization.PrivilegeRegistry;
+import org.apache.jackrabbit.api.jsr283.security.AccessControlManager;
+import org.apache.jackrabbit.api.jsr283.security.Privilege;
+import org.apache.jackrabbit.api.jsr283.security.AccessControlPolicy;
+import javax.jcr.PathNotFoundException;
-    private class SystemAccessManager implements AccessManager {
+    private class SystemAccessManager extends AbstractAccessControlManager implements AccessManager {
+
+        private final PrivilegeRegistry privilegeRegistry;
+            privilegeRegistry = new PrivilegeRegistry(SystemSession.this);
+
+        //-----------------------------------< AbstractAccessControlManager >---
+        /**
+         * @see AbstractAccessControlManager#checkInitialized()
+         */
+        protected void checkInitialized() throws IllegalStateException {
+            // nop
+        }
+
+        /**
+         * @see AbstractAccessControlManager#checkPrivileges(String, int)
+         */
+        protected void checkPrivileges(String absPath, int privileges) throws
+                AccessDeniedException, PathNotFoundException, RepositoryException {
+            // allow everything
+        }
+
+        /**
+         * @see AbstractAccessControlManager#getPrivilegeRegistry()
+         */
+        protected PrivilegeRegistry getPrivilegeRegistry()
+                throws RepositoryException {
+            return privilegeRegistry;
+        }
+
+        /**
+         * @see AbstractAccessControlManager#checkValidNodePath(String)
+         */
+        protected void checkValidNodePath(String absPath)
+                throws PathNotFoundException, RepositoryException {
+            Path p = getQPath(absPath);
+            if (!p.isAbsolute()) {
+                throw new RepositoryException("Absolute path expected.");
+            }
+            if (hierMgr.resolveNodePath(p) == null) {
+                throw new PathNotFoundException("No such node " + absPath);
+            }
+        }
+
+        //-------------------------------------------< AccessControlManager >---
+        /**
+         * @see AccessControlManager#hasPrivileges(String, Privilege[])
+         */
+        public boolean hasPrivileges(String absPath, Privilege[] privileges)
+                throws PathNotFoundException, RepositoryException {
+            checkValidNodePath(absPath);
+            // allow everything
+            return true;
+        }
+
+        /**
+         * @see AccessControlManager#getPrivileges(String)
+         */
+        public Privilege[] getPrivileges(String absPath)
+                throws PathNotFoundException, RepositoryException {
+            checkValidNodePath(absPath);
+            return getPrivilegeRegistry().getPrivileges(PrivilegeRegistry.ALL);
+        }
+
+        /**
+         * @see AccessControlManager#getEffectivePolicies(String)
+         */
+        public AccessControlPolicy[] getEffectivePolicies(String absPath) throws
+                PathNotFoundException, AccessDeniedException, RepositoryException {
+            // TODO
+            throw new UnsupportedOperationException();
+        }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS43 INS8 INS29 INS83 INS43 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS29 INS83 INS5 INS42 INS44 INS43 INS43 INS8 INS29 INS83 INS5 INS42 INS44 INS43 INS43 INS43 INS8 INS42 INS42 INS21 INS65 INS42 INS65 INS43 INS42 INS39 INS42 INS42 INS42 INS42 INS65 INS42 INS42 INS41 INS65 INS43 INS42 INS42 INS42 INS60 INS25 INS25 INS65 INS43 INS42 INS5 INS42 INS42 INS42 INS21 INS41 INS65 INS43 INS85 INS43 INS42 INS42 INS42 INS21 INS41 INS65 INS43 INS85 INS43 INS42 INS42 INS42 INS42 INS53 INS7 INS68 INS68 INS42 INS68 INS42 INS68 INS42 INS43 INS59 INS38 INS8 INS27 INS8 INS68 INS42 INS43 INS85 INS32 INS9 INS68 INS42 INS42 INS32 INS32 INS68 INS42 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS42 INS69 INS69 INS42 INS42 INS42 INS42 INS69 INS42 INS42 INS32 INS32 INS53 INS32 INS33 INS53 INS42 INS42 INS69 INS69 INS42 INS42 INS42 INS42 INS42 INS69 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS69 INS43 INS43 INS52 INS43 INS39 INS43 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS43 INS5 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS43 INS27 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS45 INS42 INS42