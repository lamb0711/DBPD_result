re-implementing Workspace methods clone, copy, importXML [work in progress...]
plus various minor fixes and cosmetical changes



git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158927 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * Computes the values of well-known system (i.e. protected) properties.
+     * todo: duplicate code in WorkspaceImporter: consolidate and delegate to NodeTypeInstanceHandler
+     *
+     * @param name
+     * @param def
+     * @return
+     * @throws RepositoryException
+     */
-        // compute/apply system generated values
+        // compute system generated values
-                genValues = new InternalValue[]{InternalValue.create(((NodeState) state).getUUID())};
+                genValues = new InternalValue[]{InternalValue.create(thisState.getUUID())};
-	todo consolidate version history creation code (currently in NodeImpl.addMixin & ItemImpl.initVersionHistories
+	todo consolidate version history creation code (currently in ItemImpl.initVersionHistories)
-            // nt:mimeResource node type
+            // nt:resource node type
-            // nt:hierarchyNode node type
+            // nt:version node type
-            InternalValue[] genValues = computeSystemGeneratedPropertyValues(name, def);
+            InternalValue[] genValues =
+                    computeSystemGeneratedPropertyValues(name, def);
+            InternalValue[] defValues = def.unwrap().getDefaultValues();
-            } else if (def.getDefaultValues() != null) {
-                Value[] vals = def.getDefaultValues();
-                if (vals.length > 0) {
-                    int length = (def.isMultiple() ? vals.length : 1);
-                    InternalValue[] defVals = new InternalValue[length];
-                    for (int i = 0; i < length; i++) {
-                        defVals[i] = InternalValue.create(vals[i], session.getNamespaceResolver());
-                    }
-                    propState.setValues(defVals);
-                }
+            } else if (defValues != null) {
+                propState.setValues(defValues);
-    protected EffectiveNodeType getEffectiveNodeType() throws RepositoryException {
+    public EffectiveNodeType getEffectiveNodeType() throws RepositoryException {
-     * this method also filters out the references that appear to non-existent
+     * this method also filters out the references that appear to be non-existent

INS29 UPD83 INS65 INS65 INS65 INS65 INS65 INS66 INS66 INS42 INS42 INS42 UPD66 MOV60 INS25 MOV5 MOV27 MOV8 INS25 UPD42 INS27 INS8 INS32 UPD42 MOV42 INS33 MOV21 MOV42 INS42 UPD42 INS42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL33 DEL27 DEL40 DEL34 DEL27 DEL39 DEL42 DEL42 DEL42 DEL32 DEL40 DEL34 DEL16 DEL36 DEL59 DEL60 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL25 DEL25