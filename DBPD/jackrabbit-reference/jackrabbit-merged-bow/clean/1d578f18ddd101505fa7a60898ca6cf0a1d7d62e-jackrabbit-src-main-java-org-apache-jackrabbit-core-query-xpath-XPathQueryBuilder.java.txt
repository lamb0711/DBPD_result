JCR-338: Query Builder and jcr:deref problem. Can't add predicate after jcr:deref

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@384804 13f79535-47bb-0310-9956-ffa450edef68

-                            || queryNode.getType() == QueryNode.TYPE_DEREF
+                            || (queryNode.getType() == QueryNode.TYPE_DEREF && ((DerefQueryNode) queryNode).getRefProperty() == null)
-                        queryNode = createLocationStep(node, (NAryQueryNode) queryNode);
+                        createLocationStep(node, (NAryQueryNode) queryNode);
+            case JJTPREDICATELIST:
+                if (queryNode.getType() == QueryNode.TYPE_PATH) {
+                    // switch to last location
+                    QueryNode[] operands = ((PathQueryNode) queryNode).getOperands();
+                    queryNode = operands[operands.length - 1];
+                }
+                node.childrenAccept(this, queryNode);
+                break;
-        boolean descenant = false;
+        boolean descendant = false;
-                queryNode = new LocationStepQueryNode(parent, null, descenant);
+                queryNode = new LocationStepQueryNode(parent, null, descendant);
-            descenant = (c.getId() == JJTSLASHSLASH
+            descendant = (c.getId() == JJTSLASHSLASH
+                    boolean descendant = false;
+                    if (queryNode.getType() == QueryNode.TYPE_LOCATION) {
+                        LocationStepQueryNode loc = (LocationStepQueryNode) queryNode;
+                        // remember if descendant axis
+                        descendant = loc.getIncludeDescendants();
+                        queryNode = loc.getParent();
+                        ((NAryQueryNode) queryNode).removeOperand(loc);
+                    }
+
+                        // check if descendant
+                        if (!descendant) {
+                            Node p = node.jjtGetParent();
+                            for (int i = 0; i < p.jjtGetNumChildren(); i++) {
+                                SimpleNode c = (SimpleNode) p.jjtGetChild(i);
+                                if (c == node) {
+                                    break;
+                                }
+                                descendant = (c.getId() == JJTSLASHSLASH
+                                        || c.getId() == JJTROOTDESCENDANTS);
+                            }
+                        }
+                        derefNode.setIncludeDescendants(descendant);

INS25 INS10 INS49 INS21 INS42 INS27 INS8 INS32 UPD42 INS32 INS40 INS60 INS21 INS42 INS42 INS52 INS42 INS42 INS42 INS5 INS59 INS7 UPD42 INS43 INS85 INS42 INS32 INS42 INS2 MOV32 INS42 INS36 INS42 INS42 INS27 INS11 INS40 INS34 UPD42 INS36 INS43 INS42 INS27 INS42 MOV27 INS27 INS32 INS33 INS36 INS42 INS11 INS43 INS42 INS42 INS60 INS25 INS39 INS59 INS27 INS8 INS42 INS9 INS32 INS40 INS60 INS21 INS21 INS21 INS25 INS21 INS42 INS42 INS43 INS59 INS7 INS7 INS32 INS38 INS8 INS32 INS42 INS42 INS11 INS42 INS32 INS42 INS32 INS36 INS42 INS42 INS42 INS60 INS24 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS59 INS58 INS27 INS37 INS8 INS42 INS43 INS42 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS60 INS25 INS21 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS43 INS59 INS27 INS8 INS7 INS42 INS42 INS11 INS42 INS42 INS10 INS42 INS36 INS43 INS32 INS27 INS42 INS42 INS42 INS42 INS27 INS27 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL7