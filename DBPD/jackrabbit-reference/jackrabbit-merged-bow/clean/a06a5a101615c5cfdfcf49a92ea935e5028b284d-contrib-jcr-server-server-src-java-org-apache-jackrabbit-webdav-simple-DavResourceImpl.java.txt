- changed default jcr-webdav namespace prefix
- updated javadoc
- added namespace-prefix-collision resolver to simple/DavResourceImpl.java


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@230783 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.transaction.TransactionConstants;
+import org.apache.jackrabbit.webdav.observation.ObservationConstants;
+    private static final HashMap reservedNamespaces = new HashMap();
+    static {
+        reservedNamespaces.put(DavConstants.NAMESPACE.getPrefix(), DavConstants.NAMESPACE.getURI());
+        reservedNamespaces.put(ObservationConstants.NAMESPACE.getPrefix(), ObservationConstants.NAMESPACE.getURI());
+        reservedNamespaces.put(TransactionConstants.NAMESPACE.getPrefix(), TransactionConstants.NAMESPACE.getURI());
+    }
+
-                    String prefix = Text.getNamespacePrefix(pName);
-                    String uri = node.getSession().getNamespaceURI(prefix);
-                    Namespace namespace = Namespace.getNamespace(prefix, uri);
-                    DavPropertyName name = DavPropertyName.create(Text.getLocalName(pName), namespace);
+                    DavPropertyName name = getDavName(pName, node.getSession());
+     * Builds a webdav property name from the given jcrName. In case the jcrName
+     * contains a namespace prefix that would conflict with any of the predefined
+     * webdav namespaces a new prefix is assigned.
+     *
+     * @param jcrName
+     * @return namespace
+     */
+    private DavPropertyName getDavName(String jcrName, Session session) throws RepositoryException {
+        String prefix = Text.getNamespacePrefix(jcrName);
+        String uri = session.getNamespaceURI(prefix);
+        // check for conflicts with reserved webdav-namespaces
+        if (reservedNamespaces.containsKey(prefix) && !reservedNamespaces.get(prefix).equals(uri)) {
+            prefix = prefix + "0";
+        }
+        Namespace namespace = Namespace.getNamespace(prefix, uri);
+        DavPropertyName name = DavPropertyName.create(Text.getLocalName(jcrName), namespace);
+        return name;
+    }
+
+    /**
-
+    /**
+     *
+     * @param property
+     * @throws RepositoryException
+     */
+    /**
+     *
+     * @param propertyName
+     * @throws RepositoryException
+     */

INS26 INS26 INS40 INS40 INS23 INS28 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS29 INS42 INS42 INS14 INS21 INS21 INS21 INS65 INS65 INS65 INS42 MOV43 INS42 INS43 INS42 INS42 INS60 INS60 INS25 MOV60 INS60 INS41 INS65 INS65 INS65 INS65 INS43 INS32 INS32 INS32 INS66 INS66 INS66 INS42 INS66 INS42 MOV43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS38 INS21 INS42 INS42 INS32 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 MOV43 UPD42 MOV32 UPD42 UPD42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60