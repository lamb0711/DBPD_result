minor improvements:
- make usage of commons IdFactory
- add static create methods

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@552863 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.ItemId;
+import java.io.Serializable;
+     * Creates a new serializable <code>NodeInfo</code> for the given
+     * <code>NodeInfo</code>.
+     *
+     * @param nodeInfo
+     */
+    public static NodeInfo createSerializableNodeInfo(NodeInfo nodeInfo, final SerializableIdFactory idFactory) {
+        if (nodeInfo instanceof Serializable) {
+            return nodeInfo;
+        } else {
+            PropertyId[] refs = nodeInfo.getReferences();
+            PropertyId[] serRefs = new PropertyId[refs.length];
+            for (int i = 0; i < serRefs.length; i++) {
+                serRefs[i] = idFactory.createSerializablePropertyId(refs[i]);
+            }
+            NodeId parentId = null;
+            if (nodeInfo.getParentId() != null) {
+                parentId = idFactory.createSerializableNodeId(nodeInfo.getParentId());
+            }
+            return new NodeInfoImpl(parentId, nodeInfo.getQName(),
+                    nodeInfo.getPath(),
+                    idFactory.createSerializableNodeId(nodeInfo.getId()),
+                    nodeInfo.getIndex(), nodeInfo.getNodetype(),
+                    nodeInfo.getMixins(), serRefs,
+                    new IteratorHelper(nodeInfo.getPropertyIds()) {
+                        public ItemId nextId() {
+                            return idFactory.createSerializablePropertyId(
+                                    (PropertyId) super.nextId());
+                        }
+                    });
+        }
+    }
+
+    /**
-    public NodeInfoImpl(NodeId parentId, QName name, Path path, NodeId id,
-                        int index, QName primaryTypeName, QName[] mixinNames,
-                        PropertyId[] references, IdIterator propertyIds) {
+    private NodeInfoImpl(NodeId parentId, QName name, Path path, NodeId id,
+                         int index, QName primaryTypeName, QName[] mixinNames,
+                         PropertyId[] references, IdIterator propertyIds) {

INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 UPD83 INS65 INS65 INS42 INS43 INS42 INS83 INS43 INS42 INS25 INS66 INS66 INS42 INS42 INS42 INS62 INS8 INS8 INS42 INS43 INS41 INS60 INS60 INS24 INS60 INS25 INS41 INS42 INS42 INS5 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS43 INS59 INS27 INS8 INS14 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS33 INS32 INS33 INS21 INS43 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS5 INS40 INS42 INS34 INS7 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS1 INS43 INS85 INS2 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS31 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS32 INS83 INS43 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS41 INS32 INS42 INS42 INS11 INS43 INS48 INS42 INS42