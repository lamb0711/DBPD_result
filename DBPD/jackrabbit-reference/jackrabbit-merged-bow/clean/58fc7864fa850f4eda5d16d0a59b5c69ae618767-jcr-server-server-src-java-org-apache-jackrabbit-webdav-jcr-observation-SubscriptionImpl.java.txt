- add methods for observation to client
- minor improvements to observation impl in jcr-server
- fix client LockMethod and adjust LockDiscovery accordingly
- fix client MergeMethod adjust corresponding Info object accordingly
- improve UpdateInfo
- use CodedURLHeader instaed of building locktoken header manually

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@421206 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.observation.DefaultEventType;
+    //-------------------------------------------------------< Subscription >---
+    //----------------------------------------------------< XmlSerializable >---
-        Element id = DomUtil.addChildElement(subscr, XML_SUBSCRIPTIONID, NAMESPACE);
-        id.appendChild(DomUtil.hrefToXml(subscriptionId, document));
+        if (getSubscriptionId() != null) {
+            Element id = DomUtil.addChildElement(subscr, XML_SUBSCRIPTIONID, NAMESPACE);
+            id.appendChild(DomUtil.hrefToXml(getSubscriptionId(), document));
+        }
-    int getEventTypes() throws DavException {
+    int getJcrEventTypes() throws DavException {
-            events |= getEventType(eventTypes[i].getName());
+            events |= getJcrEventType(eventTypes[i]);
-        return locator.equals(resource.getLocator());
+        return locator.getResourcePath().equals(resource.getResourcePath());
-     * Static utility method in order to convert the types defined by
-     * {@link javax.jcr.observation.Event} into their Xml representation.
+     * Static utility method to convert the type defined by a
+     * {@link javax.jcr.observation.Event JCR event} into an <code>EventType</code>
+     * object.
-     * @param eventType The jcr event type
-     * @return Xml representation of the event type.
+     * @param jcrEventType
+     * @return <code>EventType</code> representation of the given JCR event type.
+     * @throws IllegalArgumentException if the given int does not represent a
+     * valid type constants as defined by {@link Event}.<br>
+     * Valid values are
+     * <ul>
+     * <li>{@link Event#NODE_ADDED}</li>
+     * <li>{@link Event#NODE_REMOVED}</li>
+     * <li>{@link Event#PROPERTY_ADDED}</li>
+     * <li>{@link Event#PROPERTY_REMOVED}</li>
+     * <li>{@link Event#PROPERTY_CHANGED}</li>
+     * </ul>
-    private static String getEventName(int eventType) {
-        String eventName;
-        switch (eventType) {
+    public static EventType getEventType(int jcrEventType) {
+        String localName;
+        switch (jcrEventType) {
-                eventName = EVENT_NODEADDED;
+                localName = EVENT_NODEADDED;
-                eventName = EVENT_NODEREMOVED;
+                localName = EVENT_NODEREMOVED;
-                eventName = EVENT_PROPERTYADDED;
+                localName = EVENT_PROPERTYADDED;
-                eventName = EVENT_PROPERTYCHANGED;
+                localName = EVENT_PROPERTYCHANGED;
-            default:
-                //Event.PROPERTY_REMOVED:
-                eventName = EVENT_PROPERTYREMOVED;
+            case Event.PROPERTY_REMOVED:
+                localName = EVENT_PROPERTYREMOVED;
+            default: // no default
+                throw new IllegalArgumentException("Invalid JCR event type: " + jcrEventType);
-        return eventName;
+        return DefaultEventType.create(localName, NAMESPACE);
-     * Static utility method to convert an event type name as present in the
-     * Xml request body into the corresponding constant defined by
+     * Static utility method to convert an <code>EventType</code> as present in
+     * the Xml body into the corresponding JCR event constant defined by
-     * @param eventName
-     * @return event type as defined by {@link javax.jcr.observation.Event}.
-     * @throws DavException if the given element cannot be translated
-     * to any of the events defined by {@link javax.jcr.observation.Event}.
+     * @param eventType
+     * @return Any of the event types defined by {@link Event}.<br>
+     * Possible values are
+     * <ul>
+     * <li>{@link Event#NODE_ADDED}</li>
+     * <li>{@link Event#NODE_REMOVED}</li>
+     * <li>{@link Event#PROPERTY_ADDED}</li>
+     * <li>{@link Event#PROPERTY_REMOVED}</li>
+     * <li>{@link Event#PROPERTY_CHANGED}</li>
+     * </ul>
+     * @throws DavException if the given event type does not define a valid
+     * JCR event type, such as returned by {@link #getEventType(int)}.
-    private static int getEventType(String eventName) throws DavException {
+    public static int getJcrEventType(EventType eventType) throws DavException {
+        if (eventType == null || !NAMESPACE.equals(eventType.getNamespace())) {
+            throw new DavException(DavServletResponse.SC_UNPROCESSABLE_ENTITY, "Invalid JCR event type: "+ eventType + ": Namespace mismatch.");
+        }
+        String eventName = eventType.getName();
-                DomUtil.addChildElement(eType, getEventName(event.getType()), NAMESPACE);
+                eType.appendChild(getEventType(event.getType()).toXml(document));
-
-}
+}

INS26 INS40 UPD42 UPD83 UPD43 UPD42 UPD83 UPD42 INS25 INS65 UPD42 UPD42 INS43 UPD42 INS25 INS60 INS27 INS8 UPD66 UPD66 INS66 UPD42 UPD66 INS42 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 MOV43 UPD42 INS49 INS53 INS32 UPD66 UPD66 UPD42 UPD66 UPD66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 UPD66 UPD66 INS42 INS27 INS8 MOV43 INS59 INS32 INS33 MOV60 MOV21 INS32 INS66 INS42 INS67 INS67 INS67 INS67 INS67 UPD42 INS40 INS14 INS42 INS42 INS42 INS42 INS42 INS67 INS67 INS67 INS67 INS67 INS68 INS27 INS38 INS53 INS42 INS32 INS42 MOV42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS69 INS42 INS33 INS32 INS14 INS42 INS42 MOV32 MOV2 INS42 INS45 INS42 INS39 INS42 INS42 INS32 INS43 INS40 INS27 INS32 INS32 UPD42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 MOV32 MOV32 UPD42 MOV42 UPD42 UPD42 UPD42 DEL42 DEL32 DEL66 DEL42 DEL40 DEL40 DEL42 DEL42