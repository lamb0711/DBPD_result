Implemented proper support for IS [NOT] NULL queries.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126276 13f79535-47bb-0310-9956-ffa450edef68

+            appendValue(node, sb);
+            appendValue(node, sb);
+            appendValue(node, sb);
+            appendValue(node, sb);
+            appendValue(node, sb);
+            appendValue(node, sb);
+            appendValue(node, sb);
+        } else if (node.getOperation() == OPERATION_NULL) {
+            sb.append(" IS NULL");
+        } else if (node.getOperation() == OPERATION_NOT_NULL) {
+            sb.append(" IS NOT NULL");
-
-        if (node.getType() == TYPE_LONG) {
-            sb.append(node.getLongValue());
-        } else if (node.getType() == TYPE_DOUBLE) {
-            sb.append(node.getDoubleValue());
-        } else if (node.getType() == TYPE_STRING) {
-            sb.append("'").append(node.getStringValue().replaceAll("'", "''")).append("'");
-        } else if (node.getType() == TYPE_DATE || node.getType() == TYPE_TIMESTAMP) {
-            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
-            cal.setTime(node.getDateValue());
-            sb.append("TIMESTAMP '").append(ISO8601.format(cal)).append("'");
-        } else {
-            exceptions.add(new InvalidQueryException("Invalid type: " + node.getType()));
-        }
-
+
+    private void appendValue(RelationQueryNode node, StringBuffer b) {
+        if (node.getType() == TYPE_LONG) {
+            b.append(node.getLongValue());
+        } else if (node.getType() == TYPE_DOUBLE) {
+            b.append(node.getDoubleValue());
+        } else if (node.getType() == TYPE_STRING) {
+            b.append("'").append(node.getStringValue().replaceAll("'", "''")).append("'");
+        } else if (node.getType() == TYPE_DATE || node.getType() == TYPE_TIMESTAMP) {
+            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+            cal.setTime(node.getDateValue());
+            b.append("TIMESTAMP '").append(ISO8601.format(cal)).append("'");
+        } else {
+            exceptions.add(new InvalidQueryException("Invalid type: " + node.getType()));
+        }
+
+    }

INS31 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS42 INS43 INS42 MOV25 INS42 INS42 INS21 INS32 INS21 INS42 INS42 INS42 INS32 INS21 UPD42 INS42 INS42 INS42 INS32 INS21 UPD42 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS32 INS21 INS25 INS42 INS42 INS42 INS32 INS21 INS27 INS8 INS25 UPD42 INS42 INS42 INS42 INS32 INS32 INS42 INS21 INS27 INS8 MOV8 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS21 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45