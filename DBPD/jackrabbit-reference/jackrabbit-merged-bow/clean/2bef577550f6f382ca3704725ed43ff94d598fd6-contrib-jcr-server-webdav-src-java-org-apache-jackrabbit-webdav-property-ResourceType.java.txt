JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
-import org.jdom.Namespace;
+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
+import org.apache.jackrabbit.webdav.xml.Namespace;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
-     * Return the JDOM element representation of this property
+     * Returns a Set of resource types each implementing the XmlSerializable
+     * interface.
-     * @return a JDOM element
-     */
-    public Element toXml() {
-        Element elem = getName().toXml();
-        elem.addContent((Set)getValue());
-        return elem;
-    }
-
-    /**
-     * Returns the Xml representation of this property as a
-     * <code>Set</code> of <code>Element</code>s.
-     *
-     * @return a <code>Set</code> of <code>Element</code>s
-     * representing this property.
+     * @return a <code>Set</code> of resource types representing this property.
-        Set elements = new HashSet();
+        Set rTypes = new HashSet();
-            Element elem = resourceTypeToXml(resourceTypes[i]);
-            if (elem != null) {
-                elements.add(elem);
+            Object n = NAMES.get(resourceTypes[i]);
+            if (n != null) {
+               rTypes.add(n);
-        return elements;
+        return rTypes;
-     * Returns the Xml representation of an individual resource type,
-     * or <code>null</code> if the resource type has no Xml
-     * representation (e.g. {@link #DEFAULT_RESOURCE}).<p/>{@link #getValue()} uses
-     * this method to build the full set of Xml elements for the property's resource
-     * types. Subclasses should override this method to add support for resource
-     * types they define.
-     *
-     * @return Xml element representing the internal type or <code>null</code>
-     * if the resource has no element name assigned (default resource type).
-     */
-    private static Element resourceTypeToXml(int resourceType) {
-        TypeName name = (TypeName) NAMES.get(resourceType);
-        return (name != null) ? new Element(name.localName, name.namespace) : null;
-    }
-
-    /**
-    private static class TypeName {
+    private static class TypeName implements XmlSerializable {
-            hashCode = ("{" + namespace.getURI() + "}" + localName).hashCode();
+            hashCode = DomUtil.getQualifiedName(localName, namespace).hashCode();
+
+        public Element toXml(Document document) {
+            return DomUtil.createElement(document, localName, namespace);
+        }
+

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 INS43 INS31 INS42 INS83 MOV43 INS42 INS44 INS8 UPD66 UPD66 UPD66 UPD42 INS43 INS42 INS41 UPD42 INS42 INS32 UPD43 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS32 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL42 DEL67 DEL65 DEL66 DEL42 DEL68 DEL65 DEL66 DEL66 DEL66 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL36 DEL40 DEL40 DEL14 DEL33 DEL16 DEL41 DEL8 DEL31 DEL45 DEL32 DEL45 DEL42 DEL27 DEL36