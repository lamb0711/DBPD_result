JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1082239 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Set;
-import org.apache.jackrabbit.core.security.authorization.PrivilegeRegistry;
+import org.apache.jackrabbit.core.security.authorization.PrivilegeRegistry;
-                // add the entry
-                internalAdd(ace);
+                // add the entry omitting any validation.
+                entries.add(ace);
+
+            Set<Privilege> otherCustom = entry.getCustomPrivileges();
-                        if ((existingPrivs | ~entry.getPrivilegeBits()) == -1) {
+                        Set<Privilege> existingCustom = e.getCustomPrivileges();
+                        if ((existingPrivs | ~entry.getPrivilegeBits()) == -1 &&
+                                existingCustom.containsAll(otherCustom)) {
-                        // remove the existing entry and create a new that includes
-                        // both the new privileges and the existing ones.
+                        // remove the existing entry and create a new one that
+                        // includes both the new privileges and the existing ones.
+
-                        Privilege[] mergedPrivs = privilegeMgr.getPrivileges(mergedBits);
+                        Set<Privilege> mergedPrivs = privilegeMgr.getPrivileges(mergedBits);
+                        mergedPrivs.addAll(existingCustom);
+                        mergedPrivs.addAll(otherCustom);
-                        entry = createEntry(entry, mergedPrivs, entry.isAllow());
+                        entry = createEntry(entry, mergedPrivs.toArray(new Privilege[mergedPrivs.size()]), entry.isAllow());
-                int resultPrivs = Permission.diff(complPrivs, entry.getPrivilegeBits());
+                int diff = Permission.diff(complPrivs, entry.getPrivilegeBits());
-                if (resultPrivs == PrivilegeRegistry.NO_PRIVILEGE) {
+                Set<Privilege> result = complementEntry.getCustomPrivileges();
+                boolean customMod = result.removeAll(otherCustom);
+                
+                if (diff == PrivilegeRegistry.NO_PRIVILEGE && result.isEmpty()) {
-                    
-                } else if (resultPrivs != complPrivs) {
+
+                } else if (diff != complPrivs || customMod) {
+
+                    // combine set of new builtin and custom privileges
+                    result.addAll(privilegeMgr.getPrivileges(diff));
+                    // and create a new entry.
-                            privilegeMgr.getPrivileges(resultPrivs),
+                            result.toArray(new Privilege[result.size()]),

MOV26 INS26 INS40 INS60 INS74 INS59 INS43 INS43 INS42 INS32 INS60 INS60 INS42 INS42 INS42 INS42 INS74 INS59 INS39 INS59 INS27 INS42 UPD42 UPD42 INS43 INS43 INS42 INS32 INS42 INS32 INS27 INS32 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV40 INS42 INS42 INS27 INS42 INS21 INS60 INS21 INS21 UPD42 MOV42 MOV42 INS32 INS74 INS59 INS27 INS74 INS32 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS32 MOV27 INS32 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS3 MOV42 INS42 INS3 INS5 INS32 MOV5 INS32 INS43 INS85 UPD42 MOV42 INS42 INS42 INS42 INS42 DEL27 DEL27 DEL42