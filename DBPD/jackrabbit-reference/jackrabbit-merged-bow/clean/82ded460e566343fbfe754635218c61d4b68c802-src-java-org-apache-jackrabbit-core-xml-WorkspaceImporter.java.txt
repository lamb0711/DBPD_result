port to jcr api v0.16.4.1

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@165309 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * Post-process imported node (initialize properties with special
+     * semantics etc.)
+     *
+     * @param node
+     * @throws RepositoryException
+     */
+    protected void postProcessNode(NodeState node) throws RepositoryException {
+        /**
+         * special handling required for properties with special semantics
+         * (e.g. those defined by mix:referenceable, mix:versionable,
+         * mix:lockable, et.al.)
+         *
+         * todo FIXME delegate to 'node type instance handler'
+         */
+        EffectiveNodeType ent = itemOps.getEffectiveNodeType(node);
+        if (ent.includesNodeType(MIX_VERSIONABLE)) {
+            PropDef def;
+            PropertyState prop;
+
+            // @todo FIXME initialize version history
+            String dummyUUID = "00000000-0000-0000-0000-000000000000";
+
+            // jcr:versionHistory
+            if (!node.hasPropertyEntry(JCR_VERSIONHISTORY)) {
+                def = itemOps.findApplicablePropertyDefinition(JCR_VERSIONHISTORY,
+                        PropertyType.REFERENCE, false, node);
+                prop = itemOps.createPropertyState(node, JCR_VERSIONHISTORY,
+                        PropertyType.REFERENCE, def);
+                prop.setValues(new InternalValue[]{InternalValue.create(new UUID(dummyUUID))});
+            }
+
+            // jcr:baseVersion
+            if (!node.hasPropertyEntry(JCR_BASEVERSION)) {
+                def = itemOps.findApplicablePropertyDefinition(JCR_BASEVERSION,
+                        PropertyType.REFERENCE, false, node);
+                prop = itemOps.createPropertyState(node, JCR_BASEVERSION,
+                        PropertyType.REFERENCE, def);
+                prop.setValues(new InternalValue[]{InternalValue.create(new UUID(dummyUUID))});
+            }
+
+            // jcr:predecessors
+            if (!node.hasPropertyEntry(JCR_PREDECESSORS)) {
+                def = itemOps.findApplicablePropertyDefinition(JCR_PREDECESSORS,
+                        PropertyType.REFERENCE, true, node);
+                prop = itemOps.createPropertyState(node, JCR_PREDECESSORS,
+                        PropertyType.REFERENCE, def);
+                prop.setValues(new InternalValue[]{InternalValue.create(new UUID(dummyUUID))});
+            }
+
+            // jcr:isCheckedOut
+            if (!node.hasPropertyEntry(JCR_ISCHECKEDOUT)) {
+                def = itemOps.findApplicablePropertyDefinition(JCR_ISCHECKEDOUT,
+                        PropertyType.BOOLEAN, false, node);
+                prop = itemOps.createPropertyState(node, JCR_ISCHECKEDOUT,
+                        PropertyType.BOOLEAN, def);
+                prop.setValues(new InternalValue[]{InternalValue.create(true)});
+            }
+
+        }
+    }
+
+            // post-process node (initialize properties with special semantics etc.)
+            postProcessNode(node);
+

INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS25 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS60 INS60 INS60 INS25 INS25 INS25 INS25 INS21 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS38 INS8 INS38 INS8 INS38 INS8 INS38 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS21 INS21 INS21 INS32 INS21 INS21 INS21 INS32 INS21 INS21 INS21 INS32 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS32 INS42 INS42 INS42 INS7 INS7 INS32 INS42 INS42 INS42 INS7 INS7 INS32 INS42 INS42 INS42 INS7 INS7 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS3 INS42 INS32 INS42 INS32 INS42 INS42 INS3 INS42 INS32 INS42 INS32 INS42 INS42 INS3 INS42 INS32 INS42 INS32 INS42 INS42 INS3 INS42 INS42 INS42 INS40 INS9 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS5 INS4 INS42 INS42 INS42 INS40 INS9 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS5 INS4 INS42 INS42 INS42 INS40 INS9 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS5 INS4 INS42 INS42 INS42 INS40 INS9 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS5 INS4 INS43 INS85 INS32 INS43 INS85 INS32 INS43 INS85 INS32 INS43 INS85 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS9 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42