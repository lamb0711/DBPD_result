remove ItemStateException (and subclasses) and replace their usage with RepositoryException and subclasses respectively

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520315 13f79535-47bb-0310-9956-ffa450edef68

-     * @param entry
-    public NodeState createRootState(NodeEntry entry) throws ItemStateException {
-        try {
-            NodeInfo info = service.getNodeInfo(sessionInfo, service.getRootId(sessionInfo));
-            return createNodeState(info, entry);
-        } catch (RepositoryException e) {
-            throw new ItemStateException("Internal error while building root state.");
-        }
+    public NodeState createRootState(NodeEntry entry) throws ItemNotFoundException, RepositoryException {
+        NodeInfo info = service.getNodeInfo(sessionInfo, service.getRootId(sessionInfo));
+        return createNodeState(info, entry);
-            throws NoSuchItemStateException, ItemStateException {
+            throws ItemNotFoundException, RepositoryException {
-            throw new NoSuchItemStateException(e.getMessage(), e);
-        } catch (ItemNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage(), e);
-        } catch (RepositoryException e) {
-            throw new ItemStateException(e.getMessage(), e);
+            throw new ItemNotFoundException(e.getMessage(), e);
-    public NodeState createDeepNodeState(NodeId nodeId, NodeEntry anyParent) throws NoSuchItemStateException, ItemStateException {
+    public NodeState createDeepNodeState(NodeId nodeId, NodeEntry anyParent) throws ItemNotFoundException, RepositoryException {
-                throw new ItemStateException("Internal error while getting deep itemState");
+                throw new RepositoryException("Internal error while getting deep itemState");
-            throw new NoSuchItemStateException(e.getMessage(), e);
-        } catch (ItemNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage(), e);
-        }  catch (RepositoryException e) {
-            throw new ItemStateException(e.getMessage(), e);
+            throw new ItemNotFoundException(e.getMessage(), e);
-            throw new ItemStateException(e.getMessage(), e);
+            throw new RepositoryException(e.getMessage(), e);
-            throws NoSuchItemStateException, ItemStateException {
+            throws ItemNotFoundException, RepositoryException {
-            throw new NoSuchItemStateException(e.getMessage());
-        } catch (ItemNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage());
-        } catch (RepositoryException e) {
-            throw new ItemStateException(e.getMessage());
+            throw new ItemNotFoundException(e.getMessage());
-    public PropertyState createDeepPropertyState(PropertyId propertyId, NodeEntry anyParent) throws NoSuchItemStateException, ItemStateException {
+    public PropertyState createDeepPropertyState(PropertyId propertyId, NodeEntry anyParent) throws ItemNotFoundException, RepositoryException {
-            throw new NoSuchItemStateException(e.getMessage());
-        } catch (ItemNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage());
-        } catch (RepositoryException e) {
-            throw new ItemStateException(e.getMessage());
+            throw new ItemNotFoundException(e.getMessage());
-            throw new ItemStateException(e.getMessage());
+            throw new RepositoryException(e.getMessage());
-        throws NoSuchItemStateException, ItemStateException {
-        try {
-            return service.getChildInfos(sessionInfo, nodeId);
-        } catch (PathNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage());
-        } catch (ItemNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage());
-        } catch (RepositoryException e) {
-            throw new ItemStateException(e.getMessage());
-        }
+            throws ItemNotFoundException, RepositoryException {
+        return service.getChildInfos(sessionInfo, nodeId);
+     * @throws ItemNotFoundException
+     * @throws RepositoryException
-    private NodeState createNodeState(NodeInfo info, NodeEntry entry) throws NoSuchItemStateException, RepositoryException {
+    private NodeState createNodeState(NodeInfo info, NodeEntry entry) throws ItemNotFoundException, RepositoryException {
-            } catch (ItemStateException e) {
-                // should not get here
-                log.warn("Internal error", e.getMessage());
+     * @throws ItemNotFoundException
+     * @throws RepositoryException
-    private PropertyState createPropertyState(PropertyInfo info, PropertyEntry entry) throws NoSuchItemStateException, RepositoryException {
+    private PropertyState createPropertyState(PropertyInfo info, PropertyEntry entry)
+            throws ItemNotFoundException, RepositoryException {
-            } catch (ItemStateException e) {
-                // should not get here
-                log.warn("Internal error", e.getMessage());
+     *
+     * @param info
+     * @param entry
+     * @throws ItemNotFoundException
+     * @throws RepositoryException
-    private void assertMatchingPath(ItemInfo info, HierarchyEntry entry) throws NoSuchItemStateException, RepositoryException {
+    private void assertMatchingPath(ItemInfo info, HierarchyEntry entry)
+            throws ItemNotFoundException, RepositoryException {
-            throw new NoSuchItemStateException("HierarchyEntry does not belong the given ItemInfo.");
+            throw new ItemNotFoundException("HierarchyEntry does not belong the given ItemInfo.");

UPD43 MOV43 MOV8 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS43 MOV43 MOV8 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 MOV12 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS65 INS65 UPD42 INS65 INS65 UPD42 INS65 MOV65 INS65 INS65 UPD42 MOV12 MOV12 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV44 MOV44 MOV44 MOV43 MOV42 INS43 UPD43 MOV43 MOV42 INS42 UPD42 MOV43 UPD43 MOV43 UPD43 MOV43 MOV43 MOV43 MOV42 MOV43 UPD42 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL43 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43