- adapted versioning again to spec 0.15
- added VirtualItemStateManager for reflecting virtual content


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55615 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.state.NodeState;
-import javax.jcr.Session;
+import javax.jcr.nodetype.NodeDef;
-public class VersionHistoryImpl extends NodeWrapper implements VersionHistory {
+public class VersionHistoryImpl extends NodeImpl implements VersionHistory {
-     * creates a new version history implementation for the given session and
-     * internal version history
-     *
+     * creates a new version history node.
+     * @param itemMgr
+     * @param id
+     * @param state
+     * @param definition
+     * @param listeners
-    protected VersionHistoryImpl(Session session, InternalVersionHistory history)
-            throws RepositoryException {
-        super((NodeImpl) session.getNodeByUUID(history.getUUID()));
+    protected VersionHistoryImpl(ItemManager itemMgr, SessionImpl session, NodeId id,
+                              NodeState state, NodeDef definition,
+                              ItemLifeCycleListener[] listeners,
+                              InternalVersionHistory history) throws RepositoryException {
+        super(itemMgr, session, id, state, definition, listeners);
-        return new VersionImpl(unwrap().getSession(), history.getRootVersion());
+        return (Version) session.getNodeByUUID(history.getRootVersion().getId());
-        return new VersionIteratorImpl(unwrap().getSession(), history.getRootVersion());
+        return new VersionIteratorImpl(session, history.getRootVersion());
-            QName name = QName.fromJCRName(versionName, ((SessionImpl) unwrap().getSession()).getNamespaceResolver());
+            QName name = QName.fromJCRName(versionName, session.getNamespaceResolver());
-            return v == null ? null : new VersionImpl(unwrap().getSession(), v);
+            return v == null ? null : (Version) session.getNodeByUUID(v.getId());
-        return v == null ? null : new VersionImpl(unwrap().getSession(), v);
+        return v == null ? null : (Version) session.getNodeByUUID(v.getId());
-    public void addVersionLabel(String versionName, String label) throws VersionException, RepositoryException {
-        InternalVersion v;
+    public void addVersionLabel(String version, String label) throws VersionException, RepositoryException {
+        addVersionLabel(version, label, false);
+    }
+
+    /**
+     * @see VersionHistory#addVersionLabel(String, String, boolean)
+     */
+    public void addVersionLabel(String version, String label, boolean move)
+            throws VersionException, RepositoryException {
-            QName name = QName.fromJCRName(versionName, ((SessionImpl) unwrap().getSession()).getNamespaceResolver());
-            v = history.getVersion(name);
+            QName name = QName.fromJCRName(version, session.getNamespaceResolver());
+            InternalVersion v = history.getVersion(name);
+            if (v==null) {
+                throw new VersionException("Version " + version + " does not exist in this version history.");
+            }
+            history.addVersionLabel(v, label, move);
-        if (v == null) {
-            throw new VersionException("specified version does not exist");
-        }
-        history.addVersionLabel(v, label, false);
-    public void removeVersionLabel(String label) throws VersionException, RepositoryException {
+    public void removeVersionLabel(String label) throws RepositoryException {
+
-        return history.getUUID();
+        return history.getId();
-            return ((VersionHistoryImpl) otherItem).history.getUUID().equals(history.getUUID());
+            return ((VersionHistoryImpl) otherItem).history.getId().equals(history.getId());

MOV26 INS26 INS40 UPD40 MOV43 INS31 INS44 INS44 INS44 INS44 INS44 MOV29 INS83 INS39 INS42 INS44 MOV44 MOV43 MOV43 INS8 INS29 INS44 INS44 MOV43 INS43 INS65 INS65 INS65 INS65 INS65 INS43 INS42 MOV43 INS42 INS43 INS42 INS43 INS42 UPD43 UPD42 INS5 INS42 INS43 INS42 INS21 INS65 UPD42 INS43 INS42 INS39 INS42 INS42 INS54 UPD66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS32 INS68 INS42 INS8 MOV12 MOV12 INS42 INS43 INS32 INS42 INS11 INS42 INS42 INS42 INS9 INS42 INS42 INS69 INS69 INS69 MOV60 INS60 MOV25 MOV21 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS43 INS32 INS43 INS43 INS39 INS43 INS59 MOV32 UPD42 MOV42 INS11 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS32 INS42 INS42 UPD42 MOV42 MOV42 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 INS27 INS42 INS42 INS45 INS42 INS45 DEL42 DEL43 DEL66 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL43 DEL32 DEL32 DEL14 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL11 DEL36 DEL43 DEL32 DEL32 DEL42 DEL14 DEL43 DEL32 DEL32 DEL42 DEL14 DEL42 DEL43 DEL42 DEL32 DEL32 DEL11 DEL36 DEL45 DEL9 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL8 DEL54