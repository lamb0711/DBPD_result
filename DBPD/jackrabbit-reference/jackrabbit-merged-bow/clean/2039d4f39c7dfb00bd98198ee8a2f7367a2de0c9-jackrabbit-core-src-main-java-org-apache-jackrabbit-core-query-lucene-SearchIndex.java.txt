JCR-1854: Use Journal as index redo log when available
- introduce a factory for redo logs
- expose ConsistencyCheck on SearchIndex

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@803825 13f79535-47bb-0310-9956-ffa450edef68

+     * The name of the redo log factory class implementation.
+     */
+    private String redoLogFactoryClass = DefaultRedoLogFactory.class.getName();
+
+    /**
+     * The redo log factory.
+     */
+    private RedoLogFactory redoLogFactory;
+
+    /**
+        redoLogFactory = createRedoLogFactory();
-                ConsistencyCheck check = ConsistencyCheck.run(index,
-                        context.getItemStateManager());
+                ConsistencyCheck check = runConsistencyCheck();
+     * @return the redo log factory for this search index.
+     */
+    public RedoLogFactory getRedoLogFactory() {
+        return redoLogFactory;
+    }
+
+    /**
+     * Runs a consistency check on this search index.
+     *
+     * @return the result of the consistency check.
+     * @throws IOException if an error occurs while running the check.
+     */
+    public ConsistencyCheck runConsistencyCheck() throws IOException {
+        return index.runConsistencyCheck();
+    }
+
+    /**
+     * Creates a redo log factory based on {@link #getRedoLogFactoryClass()}.
+     *
+     * @return the redo log factory.
+     * @throws IOException if an error occurs while creating the factory.
+     */
+    protected RedoLogFactory createRedoLogFactory() throws IOException {
+        try {
+            Class<?> clazz = Class.forName(redoLogFactoryClass);
+            if (!RedoLogFactory.class.isAssignableFrom(clazz)) {
+                throw new IOException(redoLogFactoryClass +
+                        " is not a RedoLogFactory implementation");
+            }
+            return (RedoLogFactory) clazz.newInstance();
+        } catch (Exception e) {
+            IOException ex = new IOException();
+            ex.initCause(e);
+            throw ex;
+        }
+    }
+
+    /**
+     * @throws IOException         if another exception occurs.
+    /**
+     * @return the name of the redo log factory class.
+     */
+    public String getRedoLogFactoryClass() {
+        return redoLogFactoryClass;
+    }
+
+    /**
+     * Sets the name of the redo log factory class. Must implement
+     * {@link RedoLogFactory}.
+     *
+     * @param className the name of the redo log factory class.
+     */
+    public void setRedoLogFactoryClass(String className) {
+        this.redoLogFactoryClass = className;
+    }
+

INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS43 INS8 INS29 INS83 INS43 INS42 INS43 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS42 INS32 INS65 INS42 INS42 INS21 INS65 INS42 INS41 INS65 INS65 INS65 INS42 INS42 INS41 INS65 INS65 INS65 INS42 INS42 INS54 INS65 INS65 INS42 INS41 INS65 INS65 INS43 INS42 INS21 INS66 INS57 INS42 INS66 INS7 INS66 INS42 INS66 INS66 INS42 INS66 INS32 INS66 INS65 INS66 INS66 INS42 INS66 INS8 INS12 INS42 INS66 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS42 INS7 INS43 INS42 INS32 INS42 INS42 INS68 INS60 INS25 INS41 INS44 INS8 INS42 INS22 INS42 INS42 INS42 INS42 INS74 INS59 INS38 INS8 INS11 INS43 INS42 INS60 INS21 INS53 INS52 INS42 INS43 INS76 INS42 INS32 INS32 INS53 INS43 INS32 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS43 INS27 INS43 UPD42 INS42 INS42 INS42 INS45 INS42 DEL42 DEL42 DEL42 DEL42 DEL32