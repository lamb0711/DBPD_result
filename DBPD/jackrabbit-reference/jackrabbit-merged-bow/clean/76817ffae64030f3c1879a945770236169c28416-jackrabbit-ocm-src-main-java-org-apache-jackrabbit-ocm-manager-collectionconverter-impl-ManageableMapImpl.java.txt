Fix for JCR-1325 and review support for Collection & Map. 
The mapping definition can be simplified with parameterized collections and maps. In this case the ElementClass setting is not necessary.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@650283 13f79535-47bb-0310-9956-ffa450edef68

-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.jackrabbit.ocm.manager.collectionconverter.impl;
-
-import java.util.ArrayList;
-import java.util.Iterator;
-
-import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection;
-
-/**
- *
- * {@link ManageableCollection} ArrayList implementation
- *
- * @author <a href="mailto:christophe.lombart@gmail.com">Christophe Lombart</a>
- *
- */
-public class ManageableArrayList extends ArrayList implements ManageableCollection
-{
-
-	/**
-	 *
-	 * @see org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection#addObject(java.lang.Object)
-	 */
-    public void addObject(Object object)
-    {
-        this.add(object);
-
-    }
-
-    /**
-     *
-     * @see org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection#getIterator()
-     */
-    public Iterator getIterator()
-    {
-        return this.iterator();
-    }
-
-    /**
-     *
-     * @see org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection#getSize()
-     */
-	public int getSize()
-	{
-		
-		return this.size();
-	}
-
-
-
-}
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.jackrabbit.ocm.manager.collectionconverter.impl;
+
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.Map;
+
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableMap;
+
+/**
+ *
+ * {@link ManageableCollection} ArrayList implementation
+ *
+ * @author <a href="mailto:christophe.lombart@gmail.com">Christophe Lombart</a>
+ *
+ */
+public class ManageableMapImpl implements ManageableMap
+{
+
+	private Map map;
+
+
+	public ManageableMapImpl(Map map) {
+		super();
+		this.map = map;
+	}
+
+	/**
+	 *
+	 * @see org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection#addObject(java.lang.Object)
+	 */
+    public void addObject(Object key, Object object)
+    {
+    	map.put(key, object);
+
+    }
+
+    /**
+     *
+     * @see org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection#getIterator()
+     */
+    public Iterator getIterator()
+    {
+        return map.values().iterator();
+    }
+
+    /**
+     *
+     * @see org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection#getSize()
+     */
+	public int getSize()
+	{
+
+		return map.size();
+	}
+
+
+	public Map getObjects() {
+
+		return map;
+	}
+
+
+
+}

MOV26 INS26 INS26 INS40 UPD40 INS40 INS42 INS43 INS23 INS31 INS31 INS42 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS44 INS83 INS43 INS42 INS8 UPD42 MOV42 INS42 INS43 INS42 INS46 INS21 INS43 INS42 INS42 INS41 UPD42 MOV42 INS7 INS42 INS42 INS22 INS42 UPD42 INS42 INS42 INS32 INS42 INS52 INS42 INS42 INS42 DEL42 DEL43 DEL43 DEL52 DEL52 DEL52