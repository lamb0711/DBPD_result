JCR-1104 : JSR 283 support
JCR-1171 : Contribute Pluggable Permission and User Management to Jackrabbit

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638834 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.authorization.AccessControlProvider;
+import org.apache.jackrabbit.core.security.authorization.WorkspaceAccessManager;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.Path;
-import javax.jcr.NoSuchWorkspaceException;
- * The <code>AccessManager</code> can be queried to determines whether permission
- * is granted to perform a specific action on a specific item.
+ * The <code>AccessManager</code> can be queried to determines whether privileges
+ * are granted on a specific item.
+     * @deprecated
+     * @deprecated
+     * @deprecated 
+     * Initialize this access manager. An <code>AccessDeniedException</code> will
+     * be thrown if the subject of the given <code>context</code> is not
+     * granted access to the specified workspace.
+     *
+     * @param context access manager context
+     * @param acProvider
+     * @param wspAccessMgr
+     * @throws AccessDeniedException if the subject is not granted access
+     *                               to the specified workspace.
+     * @throws Exception             if another error occurs
+     */
+    void init(AMContext context, AccessControlProvider acProvider,
+              WorkspaceAccessManager wspAccessMgr) throws AccessDeniedException, Exception;
+
+    /**
+     * @deprecated 
+     * @deprecated
+     * Determines whether the specified <code>permissions</code> are granted
+     * on the item with the specified <code>absPath</code> (i.e. the <i>target</i>
+     * item, that may or may not yet exist).
+     *
+     * @param absPath     the absolute path to test
+     * @param permissions A combination of one or more of the following constants
+     *                    encoded as a bitmask value:
+     * <ul>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#READ READ}</li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#ADD_NODE ADD_NODE}</code></li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#REMOVE_NODE REMOVE_NODE}</li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#SET_PROPERTY SET_PROPERTY}</li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#REMOVE_PROPERTY REMOVE_PROPERTY}</li>
+     * </ul>
+     * @return <code>true</code> if the specified permissions are granted;
+     * otherwise <code>false</code>.
+     */
+    boolean isGranted(Path absPath, int permissions) throws RepositoryException;
+
+    /**
+     * Determines whether the specified <code>permissions</code> are granted
+     * on an item represented by the combination of the given
+     * <code>parentPath</code> and <code>childName</code> (i.e. the <i>target</i>
+     * item, that may or may not yet exist).
+     *
+     * @param parentPath  Path to an existing parent node.
+     * @param childName   Name of the child item that may or may not exist yet.
+     * @param permissions A combination of one or more of the following constants
+     *                    encoded as a bitmask value:
+     * <ul>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#READ READ}</li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#ADD_NODE ADD_NODE}</code></li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#REMOVE_NODE REMOVE_NODE}</li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#SET_PROPERTY SET_PROPERTY}</li>
+     * <li>{@link org.apache.jackrabbit.core.security.authorization.Permission#REMOVE_PROPERTY REMOVE_PROPERTY}</li>
+     * </ul>
+     * @return <code>true</code> if the specified permissions are granted;
+     * otherwise <code>false</code>.
+     * @throws ItemNotFoundException
+     * @throws RepositoryException
+     */
+    boolean isGranted(Path parentPath, Name childName, int permissions) throws ItemNotFoundException, RepositoryException;
+
+    /**
-     * to the given workspace.
+     * to the given workspace. Note that an implementation is free to test for
+     * the existance of a workspace with the specified name. In this case
+     * the expected return value is <code>false</code>, if no such workspace
+     * exists.
-     * @throws NoSuchWorkspaceException if a workspace with the given name
-     *                                  does not exist.
-     * @throws RepositoryException      if another error occurs
+     * @throws RepositoryException if another error occurs.
-    boolean canAccess(String workspaceName)
-            throws NoSuchWorkspaceException, RepositoryException;
+    boolean canAccess(String workspaceName) throws RepositoryException;

MOV26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS31 INS31 INS31 INS29 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS29 INS39 INS42 INS44 INS44 INS43 INS29 INS39 INS42 INS44 INS44 INS44 INS43 INS43 UPD66 UPD66 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS65 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS42 MOV66 UPD66 MOV66 UPD66 MOV66 INS66 UPD66 MOV66 UPD66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS67 INS66 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 DEL65 DEL42 DEL65 DEL42 DEL43