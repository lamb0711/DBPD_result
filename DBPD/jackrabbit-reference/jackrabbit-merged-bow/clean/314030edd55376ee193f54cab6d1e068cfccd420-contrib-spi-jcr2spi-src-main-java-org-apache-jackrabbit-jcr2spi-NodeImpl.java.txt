improve memory consumption of the current hierarchy implementation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@542571 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.state.PropertyState;
-     * Retrieves all mixins currently present on this node including those,
-     * that have been transiently added and excluding those, that have been
-     * transiently removed.<br>
+     * Retrieves the value of the jcr:mixinTypes property present with this
+     * Node including those that have been transiently added and excluding
+     * those, that have been transiently removed.<br>
-     * mixin-types that currently affect this node. Instead if represents the
-     * current value of the jcr:mixinTypes property.
-     *
+     * mixin-types that currently affect this node.
+     * 
-        QName[] mixinValue = new QName[0];
-        if (hasProperty(QName.JCR_MIXINTYPES)) {
-            if (getNodeState().getStatus() == Status.EXISTING) {
-                mixinValue = getNodeState().getMixinTypeNames();
-            } else {
-                // possibility that a mixin has been transient added
-                try {
-                    PropertyState ps = getNodeState().getPropertyState(QName.JCR_MIXINTYPES);
-                    mixinValue = StateUtility.getMixinNames(ps);
-                } catch (RepositoryException e) {
-                    // should never occur
-                    log.error("Internal error", e);
+        QName[] mixinValue;
+        if (getNodeState().getStatus() == Status.EXISTING) {
+            // jcr:mixinTypes must correspond to the mixins present on the nodestate.
+            mixinValue = getNodeState().getMixinTypeNames();
+        } else {
+            try {
+                PropertyEntry pe = getNodeEntry().getPropertyEntry(QName.JCR_MIXINTYPES);
+                if (pe != null) {
+                    // prop entry exists (and ev. has been transiently mod.)
+                    // -> retrieve mixin types from prop
+                    mixinValue = StateUtility.getMixinNames(pe.getPropertyState());
+                } else {
+                    // prop entry has not been loaded yet -> not modified
+                    mixinValue = getNodeState().getMixinTypeNames();
-            } // else: no mixins present
+            } catch (RepositoryException e) {
+                // should never occur
+                log.warn("Internal error", e);
+                mixinValue = new QName[0];
+            }
-            PropertyEntry pEntry = getNodeEntry().getPropertyEntry(qName);
+            PropertyEntry pEntry = getNodeEntry().getPropertyEntry(qName, true);
-                    targetEntry = getNodeEntry().getNodeEntry(pe.getName(), pe.getNormalizedIndex());
+                    // try to get child entry + force loading of not known yet
+                    targetEntry = getNodeEntry().getNodeEntry(pe.getName(), pe.getNormalizedIndex(), true);
-            }
-            if (targetEntry == null) {
-                // rp length > 1 OR child entry has not yet been loaded.
+            } else {
+                // rp length > 1
-            if (rp.getLength() == 1) {
+            if (rp.getLength() == 1 && rp.getNameElement().denotesName()) {
-                // will never point to a property.
-                if (rp.getNameElement().denotesName()) {
-                    QName propName = rp.getNameElement().getName();
-                    // check if property entry exists
-                    targetEntry = getNodeEntry().getPropertyEntry(propName);
-                } // else: entry may not have been loaded yet -> try via H-Mgr
-            }
-
-            if (targetEntry == null) {
+                // will never point to a property. If the NodeEntry does not
+                // contain such a pe, the targetEntry is 'null;
+                QName propName = rp.getNameElement().getName();
+                // check if property entry exists
+                targetEntry = getNodeEntry().getPropertyEntry(propName, true);
+            } else {

MOV8 MOV8 MOV25 MOV60 INS54 MOV41 MOV60 INS54 MOV41 UPD66 UPD66 UPD66 UPD66 MOV8 MOV12 MOV12 MOV8 MOV12 MOV60 MOV25 MOV60 MOV25 INS8 INS27 INS8 INS25 MOV60 MOV60 MOV25 MOV27 MOV32 MOV60 MOV54 UPD43 INS27 INS8 INS8 INS21 INS9 UPD42 UPD42 INS42 INS33 MOV21 INS21 INS7 UPD42 INS7 UPD42 INS42 MOV3 INS9 UPD42 INS42 INS32 INS32 INS32 INS42 UPD42 MOV42 INS42 INS42 INS9 DEL40 DEL26 DEL66 DEL42 DEL40 DEL32 DEL8 DEL25 DEL33 DEL27 DEL25 DEL54 DEL8 DEL8 DEL25 DEL42 DEL33 DEL27 DEL25 DEL54 DEL8