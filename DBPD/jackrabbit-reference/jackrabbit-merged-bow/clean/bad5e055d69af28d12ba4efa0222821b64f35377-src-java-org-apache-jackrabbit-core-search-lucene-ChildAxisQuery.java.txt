Upgraded to Lucene 1.4.3 and implemented order by in queries

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@148868 13f79535-47bb-0310-9956-ffa450edef68

-        private int nextDoc = 0;
+        private int nextDoc = -1;
-         * @see Scorer#score(org.apache.lucene.search.HitCollector, int)
+         * @see Scorer#score(org.apache.lucene.search.HitCollector)
-        public void score(HitCollector hc, int maxDoc) throws IOException {
+        public void score(HitCollector hc) throws IOException {
+            calculateChildren();
+
+            int next = hits.nextSetBit(0);
+            while (next > -1) {
+                hc.collect(next, 1.0f);
+                // move to next doc
+                next = hits.nextSetBit(next + 1);
+            }
+        }
+
+        public boolean next() throws IOException {
+            calculateChildren();
+            nextDoc = hits.nextSetBit(nextDoc + 1);
+            return nextDoc > -1;
+        }
+
+        public int doc() {
+            return nextDoc;
+        }
+
+        public float score() throws IOException {
+            // todo implement
+            return 1.0f;
+        }
+
+        public boolean skipTo(int target) throws IOException {
+            nextDoc = hits.nextSetBit(target);
+            return nextDoc > -1;
+        }
+
+        /**
+         * @exception UnsupportedOperationException this implementation always
+         * throws an <code>UnsupportedOperationException</code>.
+         */
+        public Explanation explain(int doc) throws IOException {
+            throw new UnsupportedOperationException();
+        }
+
+        private void calculateChildren() throws IOException {
-                }, reader.maxDoc()); // find all
+                }); // find all
-                nextDoc = hits.nextSetBit(0);
-
-            while (nextDoc > -1 && nextDoc < maxDoc) {
-                hc.collect(nextDoc, 1.0f);
-                // move to next doc
-                nextDoc = hits.nextSetBit(nextDoc + 1);
-            }
-        }
-
-        /**
-         * @exception UnsupportedOperationException this implementation always
-         * throws an <code>UnsupportedOperationException</code>.
-         */
-        public Explanation explain(int doc) throws IOException {
-            throw new UnsupportedOperationException();

MOV31 INS31 INS31 INS31 INS31 INS31 MOV29 INS83 INS39 INS42 MOV44 INS43 INS8 INS83 INS39 INS42 INS43 MOV8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 UPD83 UPD42 INS38 INS42 INS21 INS60 INS61 INS42 INS21 INS41 INS41 INS42 INS41 INS39 INS42 INS42 INS21 INS41 INS34 INS32 INS39 INS59 INS27 INS8 INS32 INS27 INS42 INS34 INS7 MOV27 INS42 INS42 MOV32 INS42 INS38 INS21 INS21 UPD42 MOV42 INS42 INS38 INS42 INS32 INS34 INS32 INS7 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS32 INS42 INS42 INS27 INS42 INS34 DEL34 DEL39 DEL69 DEL42 DEL42 DEL34 DEL32 DEL21 DEL39 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL7 DEL21 DEL42 DEL42 DEL27 DEL27 DEL61