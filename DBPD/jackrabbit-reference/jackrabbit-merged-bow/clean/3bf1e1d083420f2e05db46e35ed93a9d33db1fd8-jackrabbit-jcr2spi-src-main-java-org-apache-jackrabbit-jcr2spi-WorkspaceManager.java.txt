JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntry;
+import org.apache.jackrabbit.jcr2spi.hierarchy.PropertyEntry;
+import org.apache.jackrabbit.jcr2spi.operation.SetTree;
+import org.apache.jackrabbit.jcr2spi.state.PropertyState;
+import org.apache.jackrabbit.spi.Tree;
+import org.apache.jackrabbit.spi.commons.name.NameConstants;
+         * @see OperationVisitor#visit(org.apache.jackrabbit.jcr2spi.operation.SetTree)
+         */
+        public void visit(SetTree operation) throws RepositoryException {
+            NodeState treeState = operation.getTreeState();
+            Tree tree = service.createTree(sessionInfo, batch, treeState.getName(), treeState.getNodeTypeName(), treeState.getUniqueID());
+            populateTree(tree, treeState.getNodeEntry());
+            batch.setTree(operation.getParentId(), tree);
+        }
+
+        private void populateTree(Tree tree, NodeEntry nodeEntry) throws RepositoryException {
+            Iterator<PropertyEntry> pEntries = nodeEntry.getPropertyEntries();
+            while (pEntries.hasNext()) {
+                PropertyState ps = pEntries.next().getPropertyState();
+                if (!NameConstants.JCR_PRIMARYTYPE.equals(ps.getName()) && !NameConstants.JCR_UUID.equals(ps.getName())) {
+                    if (ps.isMultiValued()) {
+                        tree.addProperty(ps.getName(), ps.getType(), ps.getValues());
+                    } else {
+                        tree.addProperty(ps.getName(), ps.getType(), ps.getValue());
+                    }
+                }
+            }
+
+            Iterator<NodeEntry> nEntries = nodeEntry.getNodeEntries();
+            while (nEntries.hasNext()) {
+                NodeEntry child = nEntries.next();
+                NodeState childState = child.getNodeState();
+                Tree childTree = tree.addChild(childState.getName(), childState.getNodeTypeName(), childState.getUniqueID());
+                populateTree(childTree, child);
+            }
+        }
+
+        /**

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS43 INS42 INS42 INS60 INS60 INS21 INS21 INS43 INS42 INS43 INS42 INS42 INS60 INS61 INS60 INS61 INS68 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS42 INS42 INS74 INS59 INS32 INS8 INS74 INS59 INS32 INS8 INS42 INS42 INS69 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS25 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS60 INS60 INS21 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS38 INS38 INS25 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS32 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS40 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42