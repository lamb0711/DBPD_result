JCR-2762: Optimize bundle serialization

Use a bit field to optimize for common mixin type, property, child node, and shared set counts.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1022942 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
-import java.util.Set;
-        writeNodeId(bundle.getParentId());
-
-        // mixin types
-        writeMixinTypes(bundle);
-
-        // properties
-        writeProperties(bundle);
-
-        // write uuid flag
-        out.writeBoolean(bundle.isReferenceable());
-
-        // child nodes (list of uuid/name pairs)
-        writeChildNodeEntries(bundle);
+        NodeId parentId = bundle.getParentId();
+        if (parentId == null) {
+            parentId = BundleBinding.NULL_PARENT_ID;
+        }
+        writeNodeId(parentId);
-        // write shared set
-        writeSharedSet(bundle);
+        Collection<Name> mixins = bundle.getMixinTypeNames();
+        Collection<PropertyEntry> properties = bundle.getPropertyEntries();
+        Collection<ChildNodeEntry> nodes = bundle.getChildNodeEntries();
+        Collection<NodeId> shared = bundle.getSharedSet();
-        // set size of bundle
-        bundle.setSize(out.size() - size);
-    }
+        int mn = mixins.size();
+        int pn = properties.size();
+        int nn = nodes.size();
+        int sn = shared.size();
+        int referenceable = 0;
+        if (bundle.isReferenceable()) {
+            referenceable = 1;
+        }
+        out.writeByte(
+                Math.min(mn, 1) << 7
+                | Math.min(pn, 7) << 4
+                | Math.min(nn, 3) << 2
+                | Math.min(sn, 1) << 1
+                | referenceable);
-    private void writeMixinTypes(NodePropBundle bundle) throws IOException {
-        Set<Name> mixins = bundle.getMixinTypeNames();
-        writeVarInt(mixins.size());
+        // mixin types
+        writeVarInt(mn, 1);
-    }
-    private void writeProperties(NodePropBundle bundle) throws IOException {
-        Collection<PropertyEntry> properties = bundle.getPropertyEntries();
-        writeVarInt(properties.size());
+        // properties
+        writeVarInt(pn, 7);
-    }
-    private void writeChildNodeEntries(NodePropBundle bundle)
-            throws IOException {
-        List<ChildNodeEntry> chilren = bundle.getChildNodeEntries();
-        writeVarInt(chilren.size());
-        for (ChildNodeEntry child : chilren) {
-            writeNodeId(child.getId());   // uuid
+        // child nodes (list of name/uuid pairs)
+        writeVarInt(nn, 3);
+        for (ChildNodeEntry child : nodes) {
+            writeNodeId(child.getId());   // uuid
-    }
-    private void writeSharedSet(NodePropBundle bundle) throws IOException {
-        Set<NodeId> sharedSet = bundle.getSharedSet();
-        writeVarInt(sharedSet.size());
-        for (NodeId nodeId: sharedSet) {
+        // write shared set
+        writeVarInt(sn, 1);
+        for (NodeId nodeId: shared) {
+
+        // set size of bundle
+        bundle.setSize(out.size() - size);
-        if (id == null) {
-            id = BundleBinding.NULL_NODE_ID;
-        }
+    private void writeVarInt(int value, int base) throws IOException {
+        if (value >= base) {
+            writeVarInt(value - base);
+        }
+    }
+

MOV31 INS31 MOV29 MOV83 MOV39 MOV42 MOV44 MOV43 INS8 UPD42 INS44 INS44 INS8 MOV60 MOV21 INS60 INS25 MOV21 MOV21 MOV60 MOV60 MOV60 MOV60 INS60 INS60 INS60 INS60 INS60 INS25 INS21 MOV21 MOV70 INS21 MOV70 INS21 MOV70 MOV21 MOV70 MOV21 INS39 INS42 INS39 INS42 INS25 INS43 INS59 INS27 INS8 UPD74 UPD74 UPD74 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 MOV32 INS8 INS32 INS32 INS32 UPD42 MOV21 UPD42 INS27 INS8 INS42 INS42 MOV32 INS42 INS33 INS21 UPD42 UPD42 UPD43 UPD43 UPD42 UPD43 UPD42 INS42 MOV32 INS42 MOV32 INS42 INS32 INS42 INS32 INS42 INS34 INS21 INS42 INS42 INS27 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS34 UPD42 MOV42 INS34 INS42 INS42 MOV21 INS7 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS7 INS27 INS42 INS42 INS40 INS42 INS34 INS27 INS27 INS27 INS27 INS27 INS32 INS34 INS42 INS42 INS27 INS27 INS32 INS34 INS42 INS42 INS42 INS34 INS32 INS34 INS32 INS34 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS34 UPD42 MOV42 INS42 INS42 INS34 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL32 DEL21 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL8 DEL31 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL8