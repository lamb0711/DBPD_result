JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816667 13f79535-47bb-0310-9956-ffa450edef68

-    private final Set addedStates = new LinkedHashSet();
+    private final Set<ItemState> addedStates = new LinkedHashSet<ItemState>();
-    private final Set modifiedStates = new LinkedHashSet();
+    private final Set<ItemState> modifiedStates = new LinkedHashSet<ItemState>();
-    private final Set removedStates = new LinkedHashSet();
+    private final Set<ItemState> removedStates = new LinkedHashSet<ItemState>();
-    private final Set staleStates = new LinkedHashSet();
+    private final Set<ItemState> staleStates = new LinkedHashSet<ItemState>();
-    private Set operations = new LinkedHashSet();
+    private Set<Operation> operations = new LinkedHashSet<Operation>();
-    Iterator getOperations() {
+    Iterator<Operation> getOperations() {
-     * and independant; items within the scope of this update operation (i.e.
+     * and independent; items within the scope of this update operation (i.e.
-     * <code>ItemState</code> or any of its decendants is stale and the flag is true.
+     * <code>ItemState</code> or any of its descendants is stale and the flag is true.
-        Set ops = new LinkedHashSet();
-        Set affectedStates = new LinkedHashSet();
+        Set<Operation> ops = new LinkedHashSet<Operation>();
+        Set<ItemState> affectedStates = new LinkedHashSet<ItemState>();
-                for (Iterator it = staleStates.iterator(); it.hasNext();) {
-                    ItemState state = (ItemState) it.next();
+                for (ItemState state : staleStates) {
-            for (Iterator it = operations.iterator(); it.hasNext();) {
-                Operation op = (Operation) it.next();
-                Collection opStates = op.getAffectedItemStates();
-                for (Iterator osIt = opStates.iterator(); osIt.hasNext();) {
-                    ItemState state = (ItemState) osIt.next();
+            for (Operation op : operations) {
+                Collection<ItemState> opStates = op.getAffectedItemStates();
+                for (ItemState state : opStates) {
-        Set affectedStates = subChangeLog.getAffectedStates();
+        Set<ItemState> affectedStates = subChangeLog.getAffectedStates();

MOV23 INS74 INS74 MOV59 MOV29 INS74 MOV29 INS83 INS74 MOV29 INS74 MOV59 INS74 MOV60 MOV43 INS43 MOV43 INS43 UPD42 MOV43 INS43 UPD42 MOV43 INS43 UPD42 MOV43 INS43 UPD42 MOV43 INS43 INS42 INS74 INS42 INS74 INS42 INS74 INS42 INS74 INS42 INS74 INS42 UPD66 UPD66 INS74 INS74 INS74 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS43 UPD42 MOV43 INS43 UPD42 INS70 MOV43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS74 INS44 INS42 MOV8 INS42 MOV43 MOV43 MOV43 MOV43 INS70 MOV43 INS42 INS70 INS44 INS42 MOV8 INS74 INS44 INS42 MOV8 MOV43 INS42 MOV43 MOV43 MOV43 INS42 DEL83 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24