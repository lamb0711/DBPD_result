[JCR-000] Adjusting to spec 0.16.4 changes
[JCR-107] Typos in jcr-server io package javadocs
[JCR-104] Contrib/Jcr-Server: Improve package structure


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@161660 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.webdav.spi;
+package org.apache.jackrabbit.webdav.jcr;
-import org.apache.jackrabbit.webdav.spi.lock.JcrActiveLock;
-import org.apache.jackrabbit.webdav.spi.nodetype.NodeTypeProperty;
-import org.apache.jackrabbit.webdav.*;
+import org.apache.jackrabbit.webdav.jcr.nodetype.NodeTypeProperty;
+import org.apache.jackrabbit.webdav.jcr.lock.JcrActiveLock;
-import org.apache.jackrabbit.JCRConstants;
+import org.apache.jackrabbit.JcrConstants;
-     * together with a collection resource {@link Session#importXML(String, java.io.InputStream)}
+     * together with a collection resource {@link Session#importXML(String, java.io.InputStream, int)}
-                    getRepositorySession().importXML(getResourcePath(), in);
+                    getRepositorySession().importXML(getResourcePath(), in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
-        if (!exists() || !session.itemExists(member.getResourcePath())) {
-            throw new DavException(DavServletResponse.SC_NOT_FOUND);
-        }
-        if (!getResourcePath().equals(Text.getRelativeParent(member.getResourcePath(), 1))) {
-            throw new DavException(DavServletResponse.SC_CONFLICT, member.getResourcePath() + "is not member of this resource (" + getResourcePath() + ")");
-        }
+            if (!exists() || !session.itemExists(member.getResourcePath())) {
+                throw new DavException(DavServletResponse.SC_NOT_FOUND);
+            }
+            if (!getResourcePath().equals(Text.getRelativeParent(member.getResourcePath(), 1))) {
+                throw new DavException(DavServletResponse.SC_CONFLICT, member.getResourcePath() + "is not member of this resource (" + getResourcePath() + ")");
+            }
+            log.error("Unexpected error: " + e.getMessage());
-     * @see org.apache.jackrabbit.JCRConstants#MIX_LOCKABLE
+     * @see org.apache.jackrabbit.JcrConstants#MIX_LOCKABLE
-            if (exists() && ((Node)item).isNodeType(JCRConstants.MIX_LOCKABLE)) {
+            if (exists() && ((Node)item).isNodeType(JcrConstants.MIX_LOCKABLE)) {
-                getSession().getRepositorySession().exportSysView(item.getPath(), out, false, true);
+                getSession().getRepositorySession().exportSystemView(item.getPath(), out, false, true);
-		if (n.hasProperty(JCRConstants.JCR_LASTMODIFIED)) {
-                    setModificationTime(n.getProperty(JCRConstants.JCR_LASTMODIFIED).getLong());
+		if (n.hasProperty(JcrConstants.JCR_LASTMODIFIED)) {
+                    setModificationTime(n.getProperty(JcrConstants.JCR_LASTMODIFIED).getLong());
-                if (n.hasProperty(JCRConstants.JCR_CREATED)) {
-                    long creationTime = n.getProperty(JCRConstants.JCR_CREATED).getValue().getLong();
+                if (n.hasProperty(JcrConstants.JCR_CREATED)) {
+                    long creationTime = n.getProperty(JcrConstants.JCR_CREATED).getValue().getLong();

UPD40 UPD40 UPD40 UPD40 INS8 MOV60 INS54 MOV8 INS12 MOV21 MOV21 INS44 INS8 UPD40 INS69 INS43 INS42 INS21 INS53 INS39 INS42 INS32 INS14 INS42 INS42 INS27 INS43 INS42 UPD40 INS45 INS32 INS42 UPD42 UPD40 UPD40 INS42 INS42 INS40 UPD40 UPD40 DEL40 DEL26 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54