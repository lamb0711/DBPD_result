Open up some access modifiers to allow for better extension of the default query handler.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@350022 13f79535-47bb-0310-9956-ffa450edef68

-class QueryImpl implements ExecutableQuery {
+public class QueryImpl implements ExecutableQuery {
-    private static final QueryRootNode ALL_NODES = new QueryRootNode();
+    protected static final QueryRootNode ALL_NODES = new QueryRootNode();
-    private final QueryRootNode root;
+    protected final QueryRootNode root;
-    private final SessionImpl session;
+    protected final SessionImpl session;
-    private final ItemManager itemMgr;
+    protected final ItemManager itemMgr;
-    private final SearchIndex index;
+    protected final SearchIndex index;
-    private final PropertyTypeRegistry propReg;
+    protected final PropertyTypeRegistry propReg;
-            result = index.executeQuery(query, orderProperties, ascSpecs);
+            result = index.executeQuery(this, query, orderProperties, ascSpecs);
+        // return QueryResult
+        return new QueryResultImpl(itemMgr,
+                (String[]) uuids.toArray(new String[uuids.size()]),
+                (Float[]) scores.toArray(new Float[scores.size()]),
+                getSelectProperties(),
+                session.getNamespaceResolver(),
+                orderNode == null && documentOrder);
+    }
+
+    /**
+     * If set <code>true</code> the result nodes will be in document order
+     * per default (if no order by clause is specified). If set to
+     * <code>false</code> the result nodes are returned in whatever sequence
+     * the index has stored the nodes. That sequence is stable over multiple
+     * invocations of the same query, but will change when nodes get added or
+     * removed from the index.
+     * <p/>
+     * The default value for this property is <code>true</code>.
+     * @return the current value of this property.
+     */
+    public boolean getRespectDocumentOrder() {
+        return documentOrder;
+    }
+
+    /**
+     * Sets a new value for this property.
+     *
+     * @param documentOrder if <code>true</code> the result nodes are in
+     * document order per default.
+     *
+     * @see #getRespectDocumentOrder()
+     */
+    public void setRespectDocumentOrder(boolean documentOrder) {
+        this.documentOrder = documentOrder;
+    }
+
+    /**
+     * Returns the select properties for this query.
+     *
+     * @return array of select property names.
+     * @throws RepositoryException if an error occurs.
+     */
+    protected QName[] getSelectProperties() throws RepositoryException {
-        // return QueryResult
-        return new QueryResultImpl(itemMgr,
-                (String[]) uuids.toArray(new String[uuids.size()]),
-                (Float[]) scores.toArray(new Float[scores.size()]),
-                (QName[]) selectProps.toArray(new QName[selectProps.size()]),
-                session.getNamespaceResolver(),
-                orderNode == null && documentOrder);
-    }
-
-    /**
-     * If set <code>true</code> the result nodes will be in document order
-     * per default (if no order by clause is specified). If set to
-     * <code>false</code> the result nodes are returned in whatever sequence
-     * the index has stored the nodes. That sequence is stable over multiple
-     * invocations of the same query, but will change when nodes get added or
-     * removed from the index.
-     * <p/>
-     * The default value for this property is <code>true</code>.
-     * @return the current value of this property.
-     */
-    public boolean getRespectDocumentOrder() {
-        return documentOrder;
-    }
-
-    /**
-     * Sets a new value for this property.
-     *
-     * @param documentOrder if <code>true</code> the result nodes are in
-     * document order per default.
-     *
-     * @see #getRespectDocumentOrder()
-     */
-    public void setRespectDocumentOrder(boolean documentOrder) {
-        this.documentOrder = documentOrder;
+        return (QName[]) selectProps.toArray(new QName[selectProps.size()]);

INS83 INS31 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 INS29 INS83 INS5 INS42 INS43 INS8 INS65 INS65 INS65 INS43 INS85 INS42 MOV60 MOV21 MOV25 MOV25 MOV25 INS41 INS66 INS66 INS42 INS66 INS42 MOV11 INS32 INS42 INS52