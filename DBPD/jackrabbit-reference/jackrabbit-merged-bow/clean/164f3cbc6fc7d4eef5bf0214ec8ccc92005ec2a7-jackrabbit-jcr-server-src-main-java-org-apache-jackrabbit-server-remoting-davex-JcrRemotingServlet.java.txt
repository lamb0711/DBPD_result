JCR-3005: Make it possible to get multiple nodes in one call via davex

Patch by Christian Stocker

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1179531 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.PrintWriter;
+import java.util.logging.Level;
+    private static final String PARAM_GET = ":get";
+                }
+                else if ((pValues = data.getParameterValues(PARAM_GET)) != null) {
+                   getMultiple(session, pValues, davResource.getLocator(), webdavResponse);
+                   return;
+    private boolean getSingle(Session session, String path, DavResourceLocator locator, PrintWriter webdavWriter, boolean isFirst, boolean withPath) throws IOException, RepositoryException {
+        try {
+            Item item = session.getItem(path);
+            JsonWriter writer = new JsonWriter(webdavWriter);
+            if (item.isNode()) {
+                if (!isFirst) {
+                    webdavWriter.write(',');
+                }
+                if (withPath) {
+                    webdavWriter.write("\"" + path + "\":");
+                }
+                int depth = ((WrappingLocator) locator).getDepth();
+                if (depth < BatchReadConfig.DEPTH_INFINITE) {
+                    depth = getDepth((Node) item);
+                }
+                writer.write((Node) item, depth);
+                
+                return true;
+            } else {
+                return false;
+            }
+        } catch (PathNotFoundException ex) {
+            return false;
+        } 
+    }
+
+    
+    protected void getMultiple(Session session, String[] getArgs, DavResourceLocator locator, WebdavResponse webdavResponse) {
+        try {
+            webdavResponse.setContentType("text/plain;charset=utf-8");
+            webdavResponse.setStatus(DavServletResponse.SC_OK);
+            PrintWriter webdavWriter = webdavResponse.getWriter();
+            Boolean isFirst = true;
+            webdavWriter.write("{\"nodes\": {");
+            String path = locator.getRepositoryPath();
+            if (getSingle(session, path, locator, webdavWriter, isFirst, true)) {
+                isFirst = false;
+            }
+           
+            for (String getArg : getArgs) {
+                try {
+                    if (!getArg.equals(path) && getSingle(session, getArg, locator, webdavWriter, isFirst, true)) {
+                        isFirst = false;
+                    }
+                } catch (RepositoryException ex) {
+
+                }
+            }
+            webdavWriter.write("}}");
+        } catch (IOException ex) {
+            java.util.logging.Logger.getLogger(JcrRemotingServlet.class.getName()).log(Level.SEVERE, null, ex);
+        } catch (RepositoryException ex) {
+            java.util.logging.Logger.getLogger(JcrRemotingServlet.class.getName()).log(Level.SEVERE, null, ex);
+        }
+    }
+

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS42 INS42 INS45 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS42 INS54 INS43 INS42 INS5 INS42 INS43 INS42 INS43 INS42 INS54 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS43 INS85 INS42 INS42 INS8 INS12 INS12 INS60 INS60 INS25 INS44 INS8 INS42 INS21 INS21 INS60 INS60 INS21 INS60 INS25 INS70 INS21 INS44 INS8 INS44 INS8 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS43 INS42 INS41 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS32 INS8 INS44 INS42 INS8 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS25 INS25 INS60 INS25 INS21 INS41 INS41 INS42 INS9 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS21 INS43 INS42 INS54 INS42 INS42 INS45 INS42 INS32 INS42 INS32 INS25 INS42 INS42 INS42 INS43 INS42 INS38 INS8 INS42 INS8 INS39 INS59 INS27 INS8 INS32 INS9 INS9 INS42 INS42 INS42 INS42 INS7 INS42 INS8 INS12 INS32 INS42 INS40 INS33 INS42 INS32 INS42 INS40 INS33 INS42 INS27 INS8 MOV25 INS42 INS42 INS21 INS21 INS42 INS32 INS42 INS40 INS21 INS42 INS42 INS11 INS42 INS42 INS9 INS25 INS44 INS8 INS40 INS42 INS32 INS40 INS42 INS32 INS36 INS33 INS21 INS41 INS32 INS32 INS36 INS42 INS7 INS43 INS42 INS27 INS8 INS43 INS42 INS57 INS42 INS57 INS42 INS7 INS32 INS42 INS42 INS13 INS42 INS42 INS27 INS11 INS42 INS32 INS42 INS38 INS32 INS21 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS45 INS43 INS42 INS42 INS11 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS9 INS42