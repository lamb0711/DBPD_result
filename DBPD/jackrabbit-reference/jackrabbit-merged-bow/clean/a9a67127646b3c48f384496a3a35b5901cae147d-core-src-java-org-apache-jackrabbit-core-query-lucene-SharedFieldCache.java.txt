Optimize queries with 'order by' clause

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@264730 13f79535-47bb-0310-9956-ffa450edef68

-     * This method is an adapted version of: <code>org.apache.lucene.search.FieldCacheImpl.getStringIndex()</code>
+     * This method is an adapted version of: <code>FieldCacheImpl.getStringIndex()</code>
+     * The returned string index will <b>not</b> have a term lookup array!
+     * See {@link SharedFieldSortComparator} for more info.
-            String[] mterms = new String[reader.maxDoc() + 1];
-                int t = 0;  // current term number
-
-                // an entry for documents that have no terms in this field
-                // should a document with no terms be at top or bottom?
-                // this puts them at the top - if it is changed, FieldDocSortedHitQueue
-                // needs to change as well.
-                mterms[t++] = null;
+                // documents without a term will have a term number = 0
+                // thus will be at the top, this needs to be in sync with
+                // the implementation of FieldDocSortedHitQueue
+                int t = 1;  // current term number
-                        // store term text
-                        // we expect that there is at most one term per document
-                        if (t >= mterms.length) {
-                            throw new RuntimeException("there are more terms than documents in field \"" + field + "\"");
-                        }
-                        mterms[t] = term.text();
-
-
-                if (t == 0) {
-                    // if there are no terms, make the term array
-                    // have a single null entry
-                    mterms = new String[1];
-                } else if (t < mterms.length) {
-                    // if there are less terms than documents,
-                    // trim off the dead array space
-                    String[] terms = new String[t];
-                    System.arraycopy(mterms, 0, terms, 0, t);
-                    mterms = terms;
-                }
-            FieldCache.StringIndex value = new FieldCache.StringIndex(retArray, mterms);
+            FieldCache.StringIndex value = new FieldCache.StringIndex(retArray, null);

UPD66 INS66 INS66 INS65 INS66 INS42 MOV43 MOV43 INS33 UPD34 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL34 DEL27 DEL3 DEL59 DEL60 DEL42 DEL42 DEL37 DEL2 DEL33 DEL7 DEL21 DEL42 DEL40 DEL27 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL2 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL34 DEL27 DEL42 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL7 DEL21 DEL8 DEL42 DEL40 DEL27 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL3 DEL59 DEL60 DEL42 DEL42 DEL42 DEL34 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL25 DEL42