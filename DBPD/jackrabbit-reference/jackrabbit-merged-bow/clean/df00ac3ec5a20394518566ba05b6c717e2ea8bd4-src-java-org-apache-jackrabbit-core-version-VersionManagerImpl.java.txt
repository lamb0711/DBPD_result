- fixing latest locking issues
- fixing version items refresh

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@157083 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.Constants;
-public class VersionManagerImpl implements VersionManager {
+public class VersionManagerImpl implements VersionManager, Constants, InternalVersionItemListener {
-        try {
-            virtProvider.getItemState(new NodeId(VERSION_STORAGE_NODE_UUID)).discard();
-        } catch (ItemStateException e) {
-            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
-        }
+        history.addListener(this);
+        onVersionStorageChanged();
-        return vMgr.getVersionHistory(id);
+        InternalVersionHistory hist = vMgr.getVersionHistory(id);
+        if (hist != null) {
+            hist.addListener(this);
+        }
+        return hist;
-        return vMgr.getVersion(id);
+        InternalVersion vers = vMgr.getVersion(id);
+        if (vers != null) {
+            vers.addListener(this);
+        }
+        return vers;
-        return vMgr.getItemByExternal(id);
+        InternalVersionItem item = vMgr.getItemByExternal(id);
+        if (item != null) {
+            item.addListener(this);
+        }
+        return item;
-        try {
-            virtProvider.getItemState(new NodeId(version.getVersionHistory().getId())).discard();
-        } catch (ItemStateException e) {
-            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
-        }
+        version.addListener(this);
+
+    /**
+     * {@inheritDoc}
+     */
+    public void itemModifed(InternalVersionItem item) {
+        try {
+            virtProvider.getItemState(new NodeId(item.getId())).discard();
+        } catch (ItemStateException e) {
+            log.error("Error while refreshing virtual item.", e);
+        }
+    }
+
+    /**
+     * Flushes the virtual node state information of the version storage
+     */
+    public void onVersionStorageChanged() {
+        try {
+            virtProvider.getItemState(new NodeId(VERSION_STORAGE_NODE_UUID)).discard();
+        } catch (ItemStateException e) {
+            log.error("Error while refreshing virtual version storage.", e);
+        }
+    }

INS26 INS40 INS43 INS43 INS31 INS31 INS42 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 MOV8 MOV60 INS21 INS21 MOV41 INS60 INS25 INS60 INS25 INS60 INS25 MOV21 INS65 INS43 INS42 INS54 INS65 INS32 INS32 INS43 INS59 INS27 INS8 INS42 INS43 INS59 INS27 INS8 INS42 INS43 INS59 INS27 INS8 INS42 INS32 INS65 INS42 INS8 INS12 INS66 INS42 INS42 INS52 INS42 INS42 INS42 MOV32 INS42 INS33 INS21 INS42 INS42 MOV32 INS42 INS33 INS21 INS42 INS42 MOV32 INS42 INS33 INS21 MOV42 UPD42 MOV42 INS52 INS21 MOV44 INS8 INS32 INS32 INS32 INS32 INS21 INS42 INS42 INS52 INS42 INS42 INS52 INS42 INS42 INS52 INS32 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 UPD42 INS45 UPD42 MOV43 INS32 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL32 DEL42 DEL32 DEL8 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54