changing implementation according to latest spec 
(work in progress...)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@149516 13f79535-47bb-0310-9956-ffa450edef68

-            throws ItemExistsException, PathNotFoundException,
-            ConstraintViolationException, RepositoryException {
+            throws ItemExistsException, PathNotFoundException, VersionException,
+            ConstraintViolationException, LockException, RepositoryException {
-            throws ItemExistsException, PathNotFoundException,
-            ConstraintViolationException, RepositoryException {
+            throws ItemExistsException, PathNotFoundException, VersionException,
+            ConstraintViolationException, LockException, RepositoryException {
+        // make sure that parent node is checked-out
+        if (!parentNode.internalIsCheckedOut()) {
+            String msg = safeGetJCRPath() + ": cannot add a child to a checked-in node";
+            log.error(msg);
+            throw new VersionException(msg);
+        }
+
-        // check state of this instance
-        sanityCheck();
-
-            type = PropertyType.STRING;
+            type = PropertyType.UNDEFINED;
-        // check state of this instance
-        sanityCheck();
-
-            type = PropertyType.STRING;
+            type = PropertyType.UNDEFINED;
+        return internalSetProperty(name, values, type);
+    }
+    /**
+     * Sets the internal value of a property without checking any constraints.
+     * <p/>
+     * Note that no type conversion is being performed, i.e. it's the caller's
+     * responsibility to make sure that the type of the given values is compatible
+     * with the specified property's definition.
+     *
+     * @param name
+     * @param values
+     * @param type
+     * @return
+     * @throws ValueFormatException
+     * @throws RepositoryException
+     */
+    protected Property internalSetProperty(QName name, InternalValue[] values,
+                                           int type)
+            throws ValueFormatException, RepositoryException {
-     * @see Node#addNode(String)
+     * Same as <code>{@link Node#addNode(String)}</code> except that
+     * this method takes a <code>QName</code> name argument instead of a
+     * <code>String</code>.
+     *
+     * @param nodeName
+     * @return
+     * @throws ItemExistsException
+     * @throws VersionException
+     * @throws ConstraintViolationException
+     * @throws LockException
+     * @throws RepositoryException
-            throws ItemExistsException, ConstraintViolationException,
-            RepositoryException {
+            throws ItemExistsException, VersionException,
+            ConstraintViolationException, LockException,  RepositoryException {
+        // make sure this node is checked-out
+        if (!internalIsCheckedOut()) {
+            String msg = safeGetJCRPath() + ": cannot add node to a checked-in node";
+            log.error(msg);
+            throw new VersionException(msg);
+        }
+
-     * @see Node#addNode(String, String)
+     * Same as <code>{@link Node#addNode(String, String)}</code> except that
+     * this method takes a <code>QName</code> arguments instead of a
+     * <code>String</code>s.
+     *
+     * @param nodeName
+     * @param nodeTypeName
+     * @return
+     * @throws ItemExistsException
+     * @throws NoSuchNodeTypeException
+     * @throws VersionException
+     * @throws ConstraintViolationException
+     * @throws LockException
+     * @throws RepositoryException
-            throws ItemExistsException, NoSuchNodeTypeException,
-            ConstraintViolationException, RepositoryException {
+            throws ItemExistsException, NoSuchNodeTypeException, VersionException,
+            ConstraintViolationException, LockException, RepositoryException {
+        // make sure this node is checked-out
+        if (!internalIsCheckedOut()) {
+            String msg = safeGetJCRPath() + ": cannot add node to a checked-in node";
+            log.error(msg);
+            throw new VersionException(msg);
+        }
+
-     * Same as <code>{@link Node#setProperty(String, String)}</code> except that
-     * this method takes a <code>QName</code> instead of a <code>String</code>
-     * value.
-     *
-     * @param name
-     * @param value
-     * @return
-     * @throws ValueFormatException
-     * @throws RepositoryException
-     */
-    public PropertyImpl setProperty(String name, QName value) throws ValueFormatException, RepositoryException {
-        // check state of this instance
-        sanityCheck();
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.NAME, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
-        return prop;
-    }
-
-    /**
-     * Same as <code>{@link Node#setProperty(String, String[])}</code> except that
-     * this method takes an array of  <code>QName</code> instead of a
-     * <code>String</code> values.
-     *
-     * @param name
-     * @param values
-     * @return
-     * @throws ValueFormatException
-     * @throws RepositoryException
-     */
-    public PropertyImpl setProperty(String name, QName[] values) throws ValueFormatException, RepositoryException {
-        // check state of this instance
-        sanityCheck();
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.NAME, true, status);
-        try {
-            prop.setValue(values);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
-        return prop;
-    }
-
-    /**
+     * @throws VersionException
+     * @throws LockException
-            throws ValueFormatException, RepositoryException {
+            throws ValueFormatException, VersionException, LockException,
+            RepositoryException {
+        // make sure this node is checked-out
+        if (!internalIsCheckedOut()) {
+            String msg = safeGetJCRPath() + ": cannot set property of a checked-in node";
+            log.error(msg);
+            throw new VersionException(msg);
+        }
+
-            type = PropertyType.STRING;
+            type = PropertyType.UNDEFINED;
+     * @throws VersionException
+     * @throws LockException
-            throws ValueFormatException, RepositoryException {
+            throws ValueFormatException, VersionException, LockException,
+            RepositoryException {
-        int type = (value == null) ? PropertyType.STRING : value.getType();
+        // make sure this node is checked-out
+        if (!internalIsCheckedOut()) {
+            String msg = safeGetJCRPath() + ": cannot set property of a checked-in node";
+            log.error(msg);
+            throw new VersionException(msg);
+        }
+
+        int type = (value == null) ? PropertyType.UNDEFINED : value.getType();
-        // make sure this node is checked-out
-        if (!internalIsCheckedOut()) {
-            String msg = safeGetJCRPath() + ": cannot add a child to a checked-in node";
-            log.error(msg);
-            throw new VersionException(msg);
-        }
-
-        // make sure this node is checked-out
-        if (!internalIsCheckedOut()) {
-            String msg = safeGetJCRPath() + ": cannot add a child to a checked-in node";
-            log.error(msg);
-            throw new VersionException(msg);
-        }
-
-        int type = (value == null) ? PropertyType.STRING : value.getType();
+        int type = (value == null) ? PropertyType.UNDEFINED : value.getType();

MOV31 MOV31 INS43 INS43 INS43 INS43 MOV29 UPD83 UPD43 UPD42 INS29 INS44 MOV29 INS83 MOV43 INS42 MOV44 MOV43 UPD43 MOV43 UPD43 MOV43 INS8 INS43 INS43 INS43 INS43 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS25 UPD42 UPD43 INS5 UPD42 MOV60 MOV25 INS41 INS65 INS65 MOV65 INS65 INS65 INS65 INS65 INS39 INS42 INS65 UPD65 UPD65 INS65 UPD42 UPD42 MOV21 INS25 MOV41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS25 INS65 INS65 INS42 INS42 INS25 INS60 MOV41 INS65 INS65 INS42 INS42 INS25 MOV60 MOV41 MOV21 MOV41 INS38 MOV8 UPD42 INS43 INS85 INS32 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS42 UPD66 UPD66 UPD42 UPD42 INS42 INS42 UPD42 MOV42 MOV38 INS8 INS66 INS65 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV38 INS8 INS42 INS42 INS38 INS8 INS43 INS59 INS42 INS42 INS38 INS8 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 MOV60 MOV21 INS53 MOV68 INS60 INS21 INS53 INS32 INS60 INS21 INS53 INS42 INS42 MOV14 INS32 MOV60 INS21 INS53 INS42 INS42 UPD42 UPD43 INS14 MOV69 MOV69 MOV43 INS59 INS32 INS14 INS42 INS43 INS59 INS32 INS14 INS42 UPD43 INS32 INS14 UPD40 UPD40 UPD40 UPD40 UPD42 UPD42 INS27 UPD42 UPD42 UPD42 INS43 INS42 MOV43 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 UPD40 UPD42 UPD42 INS27 INS42 INS42 INS42 INS43 INS42 INS32 INS45 UPD42 MOV42 MOV42 INS32 INS45 INS42 INS32 INS45 INS42 INS32 INS45 INS42 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL32 DEL21 DEL43 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL40 DEL9 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL41 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL42 DEL8 DEL31 DEL66 DEL42 DEL42 DEL85 DEL5 DEL69 DEL68 DEL65 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL65 DEL42 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL42 DEL40 DEL9 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL8 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL41 DEL8 DEL65 DEL25 DEL8 DEL42 DEL43 DEL42 DEL42 DEL32 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25