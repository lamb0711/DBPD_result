JCR-3447: InternalValueFactory should use the DataStore whenever available

Further simplify code by making the Internal/QValue fields immutable (final)
and replacing the store() method with a simpler isInDataStore() checker.
This is OK since all (large) binary InternalValues should now already
be in the data store.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1400935 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.TimeZone;
-        InternalValue iv = new InternalValue(Calendar.getInstance(TimeZone.getTimeZone("GMT+00:00")));
-        iv.val = value;
-        return iv;
+        return new InternalValue(value, PropertyType.DATE);
-    /**
-     * Store a value in the data store. This will store temporary files or in-memory objects
-     * in the data store.
-     *
-     * @param dataStore the data store
-     * @throws RepositoryException
-     */
-    public void store(DataStore dataStore) throws RepositoryException {
-        assert dataStore != null;
-        assert type == PropertyType.BINARY;
-        BLOBFileValue v = (BLOBFileValue) val;
-        if (v instanceof BLOBInDataStore) {
-            // already in the data store, OK
-            return;
-        }
-        // store it in the data store
-        val = BLOBInDataStore.getInstance(dataStore, getStream());
+    public boolean isInDataStore() {
+        return val instanceof BLOBInDataStore;

UPD39 INS42 INS8 INS41 MOV41 INS14 MOV62 MOV43 INS42 INS40 UPD42 DEL40 DEL26 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL14 DEL59 DEL60 DEL40 DEL42 DEL7 DEL21 DEL42 DEL41 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL27 DEL6 DEL42 DEL40 DEL27 DEL6 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8