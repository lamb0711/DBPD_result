JCR-3181: add test case for recovering from broken version history hierarchy

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1214757 13f79535-47bb-0310-9956-ffa450edef68

+    // tests recovery from a broken hierarchy in the version store
+    public void testBrokenVhrParent() throws Exception {
+
+        // new repository
+        TransientRepository rep = new TransientRepository(new File(TEST_DIR));
+        Session s = openSession(rep, false);
+
+        try {
+            Node root = s.getRootNode();
+
+            // add node /test
+            Node test = root.addNode("test");
+            test.addMixin("mix:versionable");
+
+            s.save();
+
+            Node vhr = s.getWorkspace().getVersionManager().getVersionHistory(test.getPath());
+
+            assertNotNull(vhr);
+
+            Node brokenNode = vhr.getParent().getParent();
+
+            UUID destroy = UUID.fromString(brokenNode.getIdentifier());
+
+            // disable versioning
+            test.removeMixin("mix:versionable");
+            s.save();
+
+            s.logout();
+
+            destroyBundle(destroy, "version");
+
+            s = openSession(rep, false);
+
+            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, true);
+            assertTrue("Report should have reported broken nodes", !report.getItems().isEmpty());
+
+            s.logout();
+
+            s = openSession(rep, false);
+
+            test = s.getRootNode().getNode("test");
+            // versioning should still be disabled
+            assertFalse(test.isNodeType("mix:versionable"));
+
+            // try to enable versioning again
+            test.addMixin("mix:versionable");
+            s.save();
+
+            // try a checkout / checkin
+            s.getWorkspace().getVersionManager().checkout(test.getPath());
+            s.getWorkspace().getVersionManager().checkin(test.getPath());
+        } finally {
+            s.logout();
+        }
+    }
+

INS31 INS83 INS39 INS42 INS43 INS8 INS42 INS60 INS60 INS54 INS43 INS59 INS43 INS59 INS8 INS8 INS42 INS42 INS14 INS42 INS42 INS32 INS60 INS60 INS21 INS21 INS60 INS21 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS14 INS42 INS42 INS9 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS7 INS43 INS59 INS32 INS32 INS7 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS38 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS9 INS32 INS42 INS42 INS9 INS32 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42