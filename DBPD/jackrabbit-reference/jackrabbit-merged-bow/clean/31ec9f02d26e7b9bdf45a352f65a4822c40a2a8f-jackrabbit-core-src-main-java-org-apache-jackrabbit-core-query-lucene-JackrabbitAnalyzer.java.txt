JCR-3236: Can not instantiate lucene Analyzer in SearchIndex

Support also Analyzer classes that require a Version instance to be passed to a constructor

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1291424 13f79535-47bb-0310-9956-ffa450edef68

+import java.lang.reflect.Constructor;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+public class JackrabbitAnalyzer extends Analyzer {
-public class JackrabbitAnalyzer  extends Analyzer {
+    private static Logger log =
+            LoggerFactory.getLogger(JackrabbitAnalyzer.class);
+
+    private static final Analyzer DEFAULT_ANALYZER =
+            new StandardAnalyzer(Version.LUCENE_24, Collections.emptySet());
-     * The default Jackrabbit analyzer if none is configured in <code><SearchIndex></code>
-     * configuration.
+     * Returns a new instance of the named Lucene {@link Analyzer} class,
+     * or the default analyzer if the given class can not be instantiated.
+     *
+     * @param className name of the analyzer class
+     * @return new analyzer instance, or the default analyzer
-    private Analyzer defaultAnalyzer =  new StandardAnalyzer(Version.LUCENE_24, Collections.emptySet());
+    static Analyzer getAnalyzerInstance(String className) {
+        Class<?> analyzerClass;
+        try {
+            analyzerClass = Class.forName(className);
+        } catch (ClassNotFoundException e) {
+            log.warn(className + " could not be found", e);
+            return DEFAULT_ANALYZER;
+        }
+        if (!Analyzer.class.isAssignableFrom(analyzerClass)) {
+            log.warn(className + " is not a Lucene Analyzer");
+            return DEFAULT_ANALYZER;
+        } else if (JackrabbitAnalyzer.class.isAssignableFrom(analyzerClass)) {
+            log.warn(className + " can not be used as a JackrabbitAnalyzer component");
+            return DEFAULT_ANALYZER;
+        }
+
+        Exception cause = null;
+        Constructor<?>[] constructors = analyzerClass.getConstructors();
+        for (Constructor<?> constructor : constructors) {
+            Class<?>[] types = constructor.getParameterTypes();
+            if (types.length == 1 && types[0] == Version.class) {
+                try {
+                    return (Analyzer) constructor.newInstance(Version.LUCENE_24);
+                } catch (Exception e) {
+                    cause = e;
+                }
+            }
+        }
+        for (Constructor<?> constructor : constructors) {
+            if (constructor.getParameterTypes().length == 0) {
+                try {
+                    return (Analyzer) constructor.newInstance();
+                } catch (Exception e) {
+                    cause = e;
+                }
+            }
+        }
+
+        log.warn(className + " could not be instantiated", cause);
+        return DEFAULT_ANALYZER;
+    }
+
+    /**
+     * The default Jackrabbit analyzer if none is configured in
+     * <code>&lt;SearchIndex&gt;</code> configuration.
+     */
+    private Analyzer defaultAnalyzer = DEFAULT_ANALYZER;
+    String getDefaultAnalyzerClass() {
+        return defaultAnalyzer.getClass().getName();
+    }
+
+    void setDefaultAnalyzerClass(String className) {
+        setDefaultAnalyzer(getAnalyzerInstance(className));
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS59 INS43 INS42 INS8 INS39 INS42 INS44 INS8 INS42 INS42 INS32 UPD42 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS54 INS25 INS60 INS60 INS70 INS70 INS21 INS41 INS65 INS42 INS42 INS42 INS42 INS41 INS43 INS42 INS21 INS42 INS42 INS57 INS66 INS65 INS66 INS66 INS42 INS66 INS66 INS42 INS74 INS59 INS8 INS12 INS38 INS8 INS25 INS43 INS59 INS5 INS59 INS44 INS42 INS8 INS44 INS42 INS8 INS32 INS42 INS66 INS66 INS32 INS42 INS32 INS43 INS42 INS43 INS76 INS42 INS21 INS44 INS8 INS32 INS21 INS41 INS32 INS8 INS42 INS42 INS33 INS74 INS85 INS42 INS32 INS74 INS42 INS60 INS25 INS74 INS42 INS25 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS7 INS43 INS42 INS21 INS41 INS57 INS42 INS42 INS32 INS42 INS57 INS42 INS42 INS21 INS41 INS43 INS76 INS42 INS42 INS43 INS76 INS5 INS59 INS27 INS8 INS43 INS76 INS27 INS8 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS43 INS42 INS42 INS27 INS43 INS32 INS42 INS42 INS42 INS74 INS85 INS42 INS32 INS27 INS27 INS54 INS42 INS22 INS34 INS54 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS43 INS76 INS42 INS42 INS40 INS34 INS2 INS57 INS8 INS12 INS32 INS42 INS8 INS12 INS42 INS45 INS42 INS45 INS42 INS42 INS34 INS43 INS41 INS44 INS8 INS42 INS42 INS41 INS44 INS8 INS42 INS11 INS43 INS42 INS21 INS11 INS43 INS42 INS21 INS43 INS32 INS42 INS7 INS43 INS32 INS42 INS7 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL66 DEL65 DEL29