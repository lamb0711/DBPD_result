JCR-554: Index creates many folders when re-indexing
- delete unused index segments earlier
- use UUID instances instead of String representation of a UUID

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@439019 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.uuid.UUID;
-import org.apache.lucene.index.Term;
-                String uuid = d.get(FieldNames.UUID);
-                if (stateMgr.hasItemState(NodeId.valueOf(uuid))) {
+                UUID uuid = UUID.fromString(d.get(FieldNames.UUID));
+                if (stateMgr.hasItemState(new NodeId(uuid))) {
-            errors.add(new MultipleEntries((String) it.next()));
+            errors.add(new MultipleEntries((UUID) it.next()));
-            String uuid = d.get(FieldNames.UUID);
-            String parentUUID = d.get(FieldNames.PARENT);
-            if (documents.containsKey(parentUUID) || parentUUID.length() == 0) {
+            UUID uuid = UUID.fromString(d.get(FieldNames.UUID));
+            String parentUUIDString = d.get(FieldNames.PARENT);
+            UUID parentUUID = null;
+            if (parentUUIDString.length() > 0) {
+                parentUUID = UUID.fromString(parentUUIDString);
+            }
+            if (parentUUID == null || documents.containsKey(parentUUID)) {
-            NodeId parentId = NodeId.valueOf(parentUUID);
+            NodeId parentId = new NodeId(parentUUID);
-        private final String parentUUID;
+        private final UUID parentUUID;
-        private MissingAncestor(String uuid, String parentUUID) {
+        private MissingAncestor(UUID uuid, UUID parentUUID) {
-            String pUUID = parentUUID;
-            while (pUUID != null && !documents.containsKey(pUUID)) {
+            NodeId parentId = new NodeId(parentUUID);
+            while (parentId != null && !documents.containsKey(parentId.getUUID())) {
-                    NodeState n = (NodeState) stateMgr.getItemState(NodeId.valueOf(pUUID));
+                    NodeState n = (NodeState) stateMgr.getItemState(parentId);
-                    documents.put(n.getNodeId().toString(), d);
-                    pUUID = n.getParentId().toString();
+                    documents.put(n.getNodeId().getUUID(), d);
+                    parentId = n.getParentId();
-        private UnknownParent(String uuid, String parentUUID) {
+        private UnknownParent(UUID uuid, UUID parentUUID) {
-        MultipleEntries(String uuid) {
+        MultipleEntries(UUID uuid) {
-            Term id = new Term(FieldNames.UUID, uuid);
-            index.removeAllDocuments(id);
+            index.removeAllDocuments(uuid);
-                NodeState node = (NodeState) stateMgr.getItemState(NodeId.valueOf(uuid));
+                NodeState node = (NodeState) stateMgr.getItemState(new NodeId(uuid));
-                documents.put(node.getNodeId().toString(), d);
+                documents.put(node.getNodeId().getUUID(), d);
-        NodeDeleted(String uuid) {
+        NodeDeleted(UUID uuid) {
-            index.removeDocument(new Term(FieldNames.UUID, uuid));
+            index.removeDocument(uuid);

MOV26 UPD40 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS60 INS25 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 INS43 INS59 INS27 INS8 MOV32 UPD42 UPD42 INS14 UPD42 INS42 UPD42 INS32 UPD42 INS42 INS42 INS33 INS32 INS34 INS21 INS14 INS43 INS42 UPD42 MOV43 UPD43 INS42 INS42 MOV32 INS42 INS42 INS7 INS42 INS33 INS43 INS42 INS42 INS32 UPD42 INS32 INS14 UPD43 INS42 INS32 INS42 INS42 UPD42 MOV42 MOV43 MOV43 UPD42 INS42 INS42 MOV32 INS43 INS42 UPD42 INS42 INS42 INS42 UPD42 MOV32 INS14 INS42 MOV43 UPD42 INS43 INS42 UPD42 MOV42 INS42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL34 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL40 DEL42 DEL14