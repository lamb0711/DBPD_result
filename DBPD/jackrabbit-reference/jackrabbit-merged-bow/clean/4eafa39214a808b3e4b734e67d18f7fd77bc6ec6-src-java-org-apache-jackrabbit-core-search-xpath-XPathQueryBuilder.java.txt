- re-implementing Workspace methods (-> work in progress!)
- avoiding "#import bla.*" stmts (in accordance with checkstyle settings)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156666 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.*;
-import org.apache.jackrabbit.core.search.*;
+import org.apache.jackrabbit.core.Constants;
+import org.apache.jackrabbit.core.IllegalNameException;
+import org.apache.jackrabbit.core.NamespaceRegistryImpl;
+import org.apache.jackrabbit.core.NamespaceResolver;
+import org.apache.jackrabbit.core.NoPrefixDeclaredException;
+import org.apache.jackrabbit.core.QName;
+import org.apache.jackrabbit.core.SearchManager;
+import org.apache.jackrabbit.core.UnknownPrefixException;
+import org.apache.jackrabbit.core.search.AndQueryNode;
+import org.apache.jackrabbit.core.search.LocationStepQueryNode;
+import org.apache.jackrabbit.core.search.NAryQueryNode;
+import org.apache.jackrabbit.core.search.NodeTypeQueryNode;
+import org.apache.jackrabbit.core.search.NotQueryNode;
+import org.apache.jackrabbit.core.search.OrQueryNode;
+import org.apache.jackrabbit.core.search.OrderQueryNode;
+import org.apache.jackrabbit.core.search.PathQueryNode;
+import org.apache.jackrabbit.core.search.QueryNode;
+import org.apache.jackrabbit.core.search.QueryRootNode;
+import org.apache.jackrabbit.core.search.RelationQueryNode;
+import org.apache.jackrabbit.core.search.TextsearchQueryNode;
-     * @param resolver the namespace resolver to use.
+     * @param resolver  the namespace resolver to use.
-     * @param resolver the namespace resolver to use.
+     * @param resolver  the namespace resolver to use.
-     * @param root the root of the query node tree.
+     * @param root     the root of the query node tree.
-     *   into a String representation due to restrictions in XPath.
+     *                               into a String representation due to restrictions in XPath.
-     *  <code>XPathVisitor</code>.
+     *             <code>XPathVisitor</code>.
-     *  <code>data</code>.
+     *         <code>data</code>.
-                } else {
+                    } else {
-                        && ((SimpleNode) node.jjtGetChild(0)) .getId() == JJTDESCENDING) {
+                        && ((SimpleNode) node.jjtGetChild(0)).getId() == JJTDESCENDING) {
-     * @param node the current node in the xpath syntax tree.
+     * @param node   the current node in the xpath syntax tree.
-     * @param node the current node in the xpath syntax tree.
+     * @param node      the current node in the xpath syntax tree.
-     *   <code>RelationQueryNode</code>.
+     *                  <code>RelationQueryNode</code>.
-     * @param node a comparison expression node.
+     * @param node      a comparison expression node.
-     * @param node must be of type string, decimal, double or integer; otherwise
-     *   an InvalidQueryException is added to {@link #exceptions}.
+     * @param node      must be of type string, decimal, double or integer; otherwise
+     *                  an InvalidQueryException is added to {@link #exceptions}.
-     * @param node the function node from the xpath tree.
+     * @param node      the function node from the xpath tree.

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66