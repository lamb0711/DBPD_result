Prevent needless log information to be written due to isExpired() call in case the property of the resource has been removed

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@514656 13f79535-47bb-0310-9956-ffa450edef68

+    
+    /**
+     * Flag indicating that this resource has already been checked for expiry
+     * and whether it is actually expired.
+     * 
+     * @see #isExpired()
+     */
+    private boolean expired;
+        return getSafePath();
+    }
+    
+    /**
+     * Returns the path of the property containing the resource by appending
+     * the {@link #getName() name} to the path of the class path entry to which
+     * this resource belongs. This path need not necessairily be the same as
+     * the {@link #getProperty() path of the property} but will always succeed
+     * as there is no repository access involved.
+     */
+    protected String getSafePath() {
-            log.debug("getInputStream() returned " + in);
+            log.debug("getInputStream() returned {}", in);
-            log.debug("getContentLength() returned " + String.valueOf(length));
+            log.debug("getContentLength() returned {}", new Integer(length));
-        try {
+        if (!expired) {
-                currentPropTime = Util.getLastModificationTime(prop);
+                try {
+                    currentPropTime = Util.getLastModificationTime(prop);
+                } catch (RepositoryException re) {
+                    // cannot get last modif time from property, use current time
+                    log.debug("expireResource: Cannot get current version for "
+                        + toString() + ", will expire", re);
+                    currentPropTime = System.currentTimeMillis();
+                }
-
+    
-
+    
-            boolean exp = currentPropTime > loadTime;
-            if (exp && log.isDebugEnabled()) {
-                log.debug("expireResource: Resource created " +
-                    new Date(loadTime) + " superceded by version created " +
-                    new Date(currentPropTime));
+            expired = currentPropTime > loadTime;
+            if (expired && log.isDebugEnabled()) {
+                log.debug(
+                    "expireResource: Resource created {} superceded by version created {}",
+                    new Date(loadTime), new Date(currentPropTime));
-
-            // return the result of checking
-            return exp;
-        } catch (RepositoryException re) {
-            log.debug("expireResource: Cannot get current version for " +
-                toString() + ", will expire: " + re);
-            return true;
+        
+        return expired;
-        buf.append(getPath());
+        buf.append(getSafePath());

INS23 INS31 INS29 INS83 INS39 INS59 INS29 INS83 INS43 INS42 INS8 INS65 INS65 INS42 INS41 INS65 INS42 MOV41 INS25 INS41 INS66 INS66 INS68 INS32 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS38 MOV8 INS42 INS42 INS42 INS68 INS66 INS68 INS66 INS42 INS21 INS42 INS42 INS8 INS7 UPD42 INS45 INS42 INS45 INS14 INS54 INS42 MOV27 UPD42 INS43 INS42 MOV8 INS12 INS42 MOV44 INS8 INS45 MOV14 MOV14 INS21 INS21 INS32 INS7 INS42 INS42 INS27 INS42 INS42 INS32 INS45 MOV32 INS45 INS42 INS42 DEL45 DEL42 DEL27 DEL45 DEL42 DEL42 DEL42 DEL32 DEL27 DEL39 DEL42 DEL59 DEL60 DEL45 DEL45 DEL27 DEL42 DEL41 DEL42 DEL42 DEL45 DEL45 DEL42 DEL27 DEL32 DEL21 DEL9 DEL41 DEL8 DEL12 DEL54