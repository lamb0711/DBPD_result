Upgraded to Lucene 1.4.3 and implemented order by in queries

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@148868 13f79535-47bb-0310-9956-ffa450edef68

-     * current doc number
+     * next doc number
-    private int docNo = 0;
+    private int nextDoc = 0;
-     * Scores documents until <code>maxDoc</code> has reached.
-     *
-     * @param hc     the <code>HitCollector</code> from the underlying
-     *               lucene query.
-     * @param maxDoc collect hits until <code>maxDoc</code> has reached.
+     * @see Scorer#score(org.apache.lucene.search.HitCollector)
-    public void score(HitCollector hc, int maxDoc) {
-        float score = getSimilarity().tf(1) * weight.getValue();
-        while (docNo < maxDoc) {
-            if (!reader.isDeleted(docNo)) {
-                // check docFilter
-                if (docFilter.get(docNo)) {
-                    hc.collect(docNo, score);
-                }
-            }
-            docNo++;
+    public void score(HitCollector hc) throws IOException {
+        while (next()) {
+            hc.collect(doc(), score());
+
+    /**
+     * @see org.apache.lucene.search.Scorer#next()
+     */
+    public boolean next() throws IOException {
+        nextDoc = docFilter.nextSetBit(nextDoc + 1);
+        return nextDoc > -1;
+    }
+
+    /**
+     * @see org.apache.lucene.search.Scorer#doc()
+     */
+    public int doc() {
+        return nextDoc;
+    }
+
+    /**
+     * @see org.apache.lucene.search.Scorer#score()
+     */
+    public float score() throws IOException {
+        return 1.0f;
+    }
+
+    /**
+     * @see org.apache.lucene.search.Scorer#skipTo(int)
+     */
+    public boolean skipTo(int target) throws IOException {
+        nextDoc = target - 1;
+        return next();
+    }
+

INS31 INS31 INS31 INS31 INS31 MOV29 MOV83 MOV39 MOV42 MOV44 INS43 INS8 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 UPD65 INS42 INS61 INS65 INS42 INS21 INS41 INS65 INS41 INS65 INS42 INS41 INS65 INS39 INS42 INS42 MOV21 INS41 UPD66 INS68 INS32 INS8 INS68 INS7 INS27 INS68 INS42 INS68 INS34 INS68 INS7 INS32 INS42 INS42 INS69 INS42 INS21 INS40 INS42 INS42 INS32 INS42 INS38 INS40 INS42 INS40 INS42 INS40 INS42 INS69 INS42 INS27 INS42 INS43 INS32 UPD42 MOV42 UPD42 MOV42 INS27 INS34 INS39 INS42 INS34 INS40 INS42 INS42 MOV32 INS32 INS42 INS34 UPD42 UPD42 MOV42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL42 DEL66 DEL65 DEL42 DEL37 DEL39 DEL42 DEL44 DEL39 DEL42 DEL34 DEL32 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL27 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL61 DEL8 DEL31