Added SQL and XPath query implementation. The implementation is not complete yet. Only basic operations are supported.
Also added postGoals to the maven.xml to generate the parser classes for SQL XPath.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@123135 13f79535-47bb-0310-9956-ffa450edef68

-        if (getParent() instanceof AndQueryNode || getParent() instanceof NotQueryNode) {
+        if (getParent() instanceof LocationStepQueryNode
+                || getParent() instanceof AndQueryNode
+                || getParent() instanceof NotQueryNode) {
+     * The returned string is formatted in JCR SQL syntax.
+     *
+     * @return a string representation of this query node including its sub-nodes.
+     */
+    public String toJCRSQLString() {
+        StringBuffer sb = new StringBuffer();
+        boolean bracket = false;
+        if (getParent() instanceof LocationStepQueryNode 
+                || getParent() instanceof AndQueryNode
+                || getParent() instanceof NotQueryNode) {
+            bracket = true;
+        }
+        if (bracket) {
+            sb.append("(");
+        }
+        String or = "";
+        for (Iterator it = operands.iterator(); it.hasNext();) {
+            sb.append(or);
+            sb.append(((QueryNode) it.next()).toJCRSQLString());
+            or = " OR ";
+        }
+        if (bracket) {
+            sb.append(")");
+        }
+        return sb.toString();
+    }
+
+    /**
+     * Returns a string representation of this query node including its sub-nodes.
-        // todo implement
-        return "";
+        StringBuffer sb = new StringBuffer();
+        boolean bracket = false;
+        if (getParent() instanceof AndQueryNode) {
+            bracket = true;
+        }
+        if (bracket) {
+            sb.append("(");
+        }
+        String or = "";
+        for (Iterator it = operands.iterator(); it.hasNext();) {
+            sb.append(or);
+            sb.append(((QueryNode) it.next()).toXPathString());
+            or = " or ";
+        }
+        if (bracket) {
+            sb.append(")");
+        }
+        return sb.toString();

INS31 INS29 INS83 INS43 INS42 INS8 INS65 INS65 INS42 INS60 INS60 INS25 INS25 INS60 INS24 INS25 INS41 INS60 INS60 INS25 INS25 INS60 INS24 INS25 INS41 INS66 INS66 INS66 INS43 INS59 INS39 INS59 INS27 INS8 INS42 INS8 INS43 INS59 INS58 INS32 INS8 INS42 INS8 INS32 INS43 INS59 INS39 INS59 MOV62 INS8 INS42 INS8 INS43 INS59 INS58 INS32 INS8 INS42 INS8 INS32 INS62 INS62 INS42 INS42 INS14 INS42 INS9 INS62 INS62 INS62 INS21 INS21 INS42 INS42 INS45 INS43 INS59 INS42 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS14 INS42 INS9 INS21 INS21 INS42 INS42 INS45 INS43 INS59 INS42 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS32 INS43 INS32 INS43 INS43 INS32 INS43 INS32 INS43 INS32 INS43 INS7 INS32 INS42 INS42 INS32 INS32 INS32 INS7 INS32 INS43 INS7 INS32 INS42 INS42 INS32 INS32 INS32 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS9 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS45 INS36 INS42 INS36 INS42 INS11 INS11 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL45 DEL41