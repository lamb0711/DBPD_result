oops, fix introduced new bug, reverting to previous state

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@105832 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.Map;
+import java.util.*;
- * <li>respecting access rights of associated <code>Session</code> in all methods.
+ * <li>checking access rights of associated <code>Session</code> in all methods.
-     * Checks if the item with the given path exists.
-     *
-     * @param path path to the item to be checked
-     * @return true if the specified item exists
+     * @param path
+     * @return
-/*
-            // item exists but the session has not been granted read access
-            return false;
-        } catch (RepositoryException re) {
-            return false;
-        }
-*/
-        try {
-            // check sanity of session
-            session.sanityCheck();
-
-            ItemId id = hierMgr.resolvePath(path);
-
-            // check if state exists for the given item
-            if (!itemStateProvider.hasItemState(id)) {
-                return false;
-            }
-
-            // check privileges
-            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
-                // clear cache
-                if (isCached(id)) {
-                    evictItem(id);
-                }
-                // item exists but the session has not been granted read access
-                return false;
-            }
-        } catch (PathNotFoundException pnfe) {
-            return false;
-        } catch (ItemNotFoundException infe) {
-            return false;
-     * Checks if the item with the given id exists.
+     * Checks if the item with the given id exists
-     * @param id id of the item to be checked
-     * @return true if the specified item exists
+     * @param id
+     * @return
-/*
-            // item exists but the session has not been granted read access
-            return false;
-        } catch (RepositoryException re) {
-            return false;
-        }
-*/
-        try {
-            // check sanity of session
-            session.sanityCheck();
-
-            // check if state exists for the given item
-            if (!itemStateProvider.hasItemState(id)) {
-                return false;
-            }
-
-            // check privileges
-            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
-                // clear cache
-                if (isCached(id)) {
-                    evictItem(id);
-                }
-                // item exists but the session has not been granted read access
-                return false;
-            }
-        } catch (ItemNotFoundException infe) {
-            return false;

UPD40 UPD66 INS8 UPD66 INS8 INS12 MOV21 MOV41 INS21 MOV41 INS44 INS8 UPD43 UPD42 INS32 INS43 INS42 MOV41 UPD42 UPD42 UPD42 UPD9 UPD42 MOV42 MOV42 INS42 UPD9 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL66 DEL66 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL42 DEL32 DEL8 DEL25 DEL9 DEL41 DEL8 DEL25 DEL8 DEL66 DEL66 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL38 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8