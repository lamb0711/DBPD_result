JCR-2803: Deprecate non-pooled bundle DB persistence managers

Merge the duplicate AbstractBundlePersistenceManager classes.
Remove/deprecate the odd "pooled" bundle *fs* persistence manager.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1036356 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Set;
+
+import javax.jcr.PropertyType;
+
+import org.apache.jackrabbit.core.id.ItemId;
+import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.core.id.PropertyId;
+import org.apache.jackrabbit.core.persistence.CachingPersistenceManager;
+import org.apache.jackrabbit.core.persistence.IterablePersistenceManager;
+import org.apache.jackrabbit.core.persistence.PMContext;
+import org.apache.jackrabbit.core.persistence.PersistenceManager;
+import org.apache.jackrabbit.core.persistence.util.BLOBStore;
+import org.apache.jackrabbit.core.persistence.util.FileBasedIndex;
+import org.apache.jackrabbit.core.persistence.util.NodePropBundle;
+import org.apache.jackrabbit.core.persistence.util.NodePropBundle.PropertyEntry;
-import org.apache.jackrabbit.core.id.ItemId;
-import org.apache.jackrabbit.core.id.NodeId;
-import org.apache.jackrabbit.core.id.PropertyId;
-import org.apache.jackrabbit.core.value.InternalValue;
-import org.apache.jackrabbit.core.persistence.CachingPersistenceManager;
-import org.apache.jackrabbit.core.persistence.IterablePersistenceManager;
-import org.apache.jackrabbit.core.persistence.PMContext;
-import org.apache.jackrabbit.core.persistence.PersistenceManager;
-import org.apache.jackrabbit.core.persistence.util.BLOBStore;
-import org.apache.jackrabbit.core.persistence.util.FileBasedIndex;
-import org.apache.jackrabbit.core.persistence.util.NodePropBundle;
-import org.apache.jackrabbit.core.persistence.util.NodePropBundle.PropertyEntry;
+import org.apache.jackrabbit.core.value.InternalValue;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Set;
-
-import javax.jcr.PropertyType;
-
-    
+
-     *  
-     *  Closes the persistence manager, release acquired resourecs.
+     *
+     *  Closes the persistence manager, release acquired resources.
-    public NodeState load(NodeId id)
-            throws NoSuchItemStateException, ItemStateException {
+    public NodeState load(NodeId id) throws NoSuchItemStateException, ItemStateException {
-    public PropertyState load(PropertyId id)
-            throws NoSuchItemStateException, ItemStateException {
+    public PropertyState load(PropertyId id) throws NoSuchItemStateException, ItemStateException {
-     * 
+     *
-                NodePropBundle bundle = (NodePropBundle) modified.get(nodeId);
+                NodePropBundle bundle = modified.get(nodeId);
-                NodePropBundle bundle = (NodePropBundle) modified.get(nodeId);
+                NodePropBundle bundle = modified.get(nodeId);
-                    NodePropBundle bundle = (NodePropBundle) modified.get(nodeId);
+                    NodePropBundle bundle = modified.get(nodeId);
-                NodePropBundle bundle = (NodePropBundle) modified.get(nodeId);
+                NodePropBundle bundle = modified.get(nodeId);
-        // only put to cache if already exists. this is to ensure proper overwrite
-        // and not creating big contention during bulk loads
+        // only put to cache if already exists. this is to ensure proper
+        // overwrite and not creating big contention during bulk loads

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD66 MOV32 MOV32 MOV32 MOV32 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11