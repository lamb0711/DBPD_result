JCR-3718 Inconsistent Principal Validation between API and Import behavior

- make principal check based on ACLProvider configuration
- adding new ACLProvider configuration parameter: "allow-unknown-principals", default: "false"
- make missing-principal bypass in AccessControlImporter based on configuration
- adding new AccessControlImporter configuration parameter: "importBehavior", default: "bestEffort"


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1560783 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.principal.PrincipalImpl;
+    // keep best-effort for backward compatibility reasons
+    private ImportBehavior importBehavior = ImportBehavior.BEST_EFFORT;
+
-                    // create "fake" principal
-                    principal = new UnknownPrincipal(pName);
+                    if (importBehavior == ImportBehavior.BEST_EFFORT) {
+                        // create "fake" principal that is always accepted in ACLTemplate.checkValidEntry()
+                        principal = new UnknownPrincipal(pName);
+                    } else {
+                        // create "fake" principal. this is checked again in ACLTemplate.checkValidEntry()
+                        principal = new PrincipalImpl(pName);
+                    }
+
+    //---------------------------------------------------------< BeanConfig >---
+    /**
+     * @return human readable representation of the <code>importBehavior</code> value.
+     */
+    public String getImportBehavior() {
+        return importBehavior.getString();
+    }
+
+    /**
+     *
+     * @param importBehaviorStr
+     */
+    public void setImportBehavior(String importBehaviorStr) {
+        this.importBehavior = ImportBehavior.fromString(importBehaviorStr);
+    }
+
+
+    public static enum ImportBehavior {
+
+        /**
+         * Default behavior that does not try to prevent errors or incompatibilities between the content
+         * and the ACL manager (eg. does not try to fix missing principals)
+         */
+        DEFAULT("default"),
+
+        /**
+         * Tries to minimize errors by adapting the content and bypassing validation checks (e.g. allows adding
+         * ACEs with missing principals, even if ACL manager would not allow this).
+         */
+        BEST_EFFORT("bestEffort");
+
+        private final String value;
+
+        ImportBehavior(String value) {
+            this.value = value;
+        }
+
+        public static ImportBehavior fromString(String str) {
+            if (str.equals("bestEffort")) {
+                return BEST_EFFORT;
+            } else {
+                return ImportBehavior.valueOf(str.toUpperCase());
+            }
+        }
+
+        public String getString() {
+            return value;
+        }
+    }

INS26 INS40 INS23 INS31 INS31 INS71 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS42 INS72 INS72 INS23 INS31 INS31 INS31 INS42 INS42 INS40 INS65 INS42 INS41 INS65 INS43 INS42 INS21 INS29 INS42 INS45 INS29 INS42 INS45 INS83 INS83 INS43 INS59 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS66 INS32 INS42 INS42 INS7 INS65 INS65 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS25 INS42 INS41 INS42 INS42 INS22 INS32 INS66 INS66 INS66 INS66 INS42 INS7 INS42 INS32 INS8 INS8 INS42 INS52 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS45 INS41 INS41 INS52 INS42 INS42 INS32 INS8 INS42 INS42 INS32 INS25 INS42 INS42 INS27 MOV8 INS8 INS42 INS40 INS21 INS7 INS42 INS14 INS43 INS42 INS42