JCR-1675: Provide names for constants in QueryConstants

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@677231 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+
+     * Name of long data type
+     */
+    final String TYPE_NAME_LONG = "LONG";
+
+    /**
+     * Name of double data type
+     */
+    final String TYPE_NAME_DOUBLE = "DOUBLE";
+
+    /**
+     * Name of string data type
+     */
+    final String TYPE_NAME_STRING = "STRING";
+
+    /**
+     * Name of date data type
+     */
+    final String TYPE_NAME_DATE = "DATE";
+
+    /**
+     * Name of timestamp data type
+     */
+    final String TYPE_NAME_TIMESTAMP = "TIMESTAMP";
+
+    /**
+    /**
+     * Name of position index
+     */
+    final String TYPE_NAME_POSITION = "POS";
+
+    /**
+     * Name for unknown data types
+     */
+    final String TYPE_NAME_UNKNOWN = "UNKNOWN TYPE";
+
+
-     * equal operation: =
+     * equal operation: eq
+     * Name of equal operation
+     */
+    final String OP_NAME_EQ_VALUE = "eq";
+
+    /**
-     * not equal operation: <>
+     * Name of equal operation (general comparison)
+     */
+    final String OP_NAME_EQ_GENERAL = "=";
+
+    /**
+     * not equal operation: ne
+     * Name of not equal operation
+     */
+    final String OP_NAME_NE_VALUE = "ne";
+
+    /**
-     * general comparision
+     * general comparison
-     * less than operation: &lt;
+     * Name of not equal operation (general comparison)
+     */
+    final String OP_NAME_NE_GENERAL = "<>";
+
+    /**
+     * less than operation: lt
+     * Name of less than operation
+     */
+    final String OP_NAME_LT_VALUE = "lt";
+
+    /**
-     * greater than operation: >
+     * Name of less than operation (general comparison)
+     */
+    final String OP_NAME_LT_GENERAL = "<";
+
+    /**
+     * greater than operation: gt
+     * Name o^f greater than operation
+     */
+    final String OP_NAME_GT_VALUE = "gt";
+
+    /**
-     * greater or equal operation: >=
+     * Name of greater than operation (general comparison)
+     */
+    final String OP_NAME_GT_GENERAL = ">";
+
+    /**
+     * greater or equal operation: ge
+     * Name of greater or equal operation
+     */
+    final String OP_NAME_GE_VALUE = "ge";
+
+    /**
-     * less than or equal operation: <=
+     * Name of greater or equal operation (general comparison)
+     */
+    final String OP_NAME_GE_GENERAL = ">=";
+
+    /**
+     * less than or equal operation: le
+     * Name of less than or equal operation
+     */
+    final String OP_NAME_LE_VALUE = "le";
+
+    /**
+     * Name of less than or equal operation (general comparison)
+     */
+    final String OP_NAME_LE_GENERAL = "<=";
+
+    /**
+     * Name of like operation
+     */
+    final String OP_NAME_LIKE = "LIKE";
+
+    /**
-     * on operation: identifier [ NOT ] IN ( literal {, literal}* )
+     * Name of between operation
+     */
+    final String OP_NAME_BETWEEN = "BETWEEN";
+
+    /**
+     * in operation: identifier [ NOT ] IN ( literal {, literal}* )
+     * Name of in operation
+     */
+    final String OP_NAME_IN = "IN";
+
+    /**
+     * Name of is null operation
+     */
+    final String OP_NAME_NULL = "IS NULL";
+
+    /**
+     * Name of is not null operation
+     */
+    final String OP_NAME_NOT_NULL = "NOT NULL";
+
+    /**
+     * Name of similar operation
+     */
+    final String OP_NAME_SIMILAR = "similarity";
+
+    /**
+
+    /**
+     * Name of spellcheck operation
+     */
+    final String OP_NAME_SPELLCHECK = "spellcheck";
+
+    /**
+     * Name of unknown operations
+     */
+    final String OP_NAME_UNKNOW = "UNKNOWN OPERATION";
+
+    /**
+     * Operation names
+     */
+    final ConstantNameProvider OPERATION_NAMES = new ConstantNameProvider() {
+        private final Map operationNames;
+
+        {
+            Map map = new HashMap();
+            map.put(new Integer(OPERATION_BETWEEN), OP_NAME_BETWEEN);
+            map.put(new Integer(OPERATION_EQ_VALUE), OP_NAME_EQ_VALUE);
+            map.put(new Integer(OPERATION_EQ_GENERAL), OP_NAME_EQ_GENERAL);
+            map.put(new Integer(OPERATION_GE_GENERAL), OP_NAME_GE_GENERAL);
+            map.put(new Integer(OPERATION_GE_VALUE), OP_NAME_GE_VALUE);
+            map.put(new Integer(OPERATION_GT_GENERAL), OP_NAME_GT_GENERAL);
+            map.put(new Integer(OPERATION_GT_VALUE), OP_NAME_GT_VALUE);
+            map.put(new Integer(OPERATION_IN), OP_NAME_IN);
+            map.put(new Integer(OPERATION_LE_GENERAL), OP_NAME_LE_GENERAL);
+            map.put(new Integer(OPERATION_LE_VALUE), OP_NAME_LE_VALUE);
+            map.put(new Integer(OPERATION_LIKE), OP_NAME_LIKE);
+            map.put(new Integer(OPERATION_LT_GENERAL), OP_NAME_LT_GENERAL);
+            map.put(new Integer(OPERATION_LT_VALUE), OP_NAME_LT_VALUE);
+            map.put(new Integer(OPERATION_NE_GENERAL), OP_NAME_NE_GENERAL);
+            map.put(new Integer(OPERATION_NE_VALUE), OP_NAME_NE_VALUE);
+            map.put(new Integer(OPERATION_NOT_NULL), OP_NAME_NOT_NULL);
+            map.put(new Integer(OPERATION_NULL), OP_NAME_NULL);
+            map.put(new Integer(OPERATION_SIMILAR), OP_NAME_SIMILAR);
+            map.put(new Integer(OPERATION_SPELLCHECK), OP_NAME_SPELLCHECK);
+            operationNames = Collections.unmodifiableMap(map);
+        }
+
+        public String getName(int constant) {
+            String name = (String) operationNames.get(new Integer(constant));
+            return name == null? OP_NAME_UNKNOW : name;
+        }
+    };
+
+    /**
+     * Type names
+     */
+    final ConstantNameProvider TYPE_NAMES = new ConstantNameProvider() {
+        private final Map typeNames;
+
+        {
+            Map map = new HashMap();
+            map.put(new Integer(TYPE_DATE), TYPE_NAME_DATE);
+            map.put(new Integer(TYPE_DOUBLE), TYPE_NAME_DOUBLE);
+            map.put(new Integer(TYPE_LONG), TYPE_NAME_LONG);
+            map.put(new Integer(TYPE_POSITION), TYPE_NAME_POSITION);
+            map.put(new Integer(TYPE_STRING), TYPE_NAME_STRING);
+            map.put(new Integer(TYPE_TIMESTAMP), TYPE_NAME_TIMESTAMP);
+            typeNames = Collections.unmodifiableMap(map);
+        }
+
+        public String getName(int constant) {
+            String name = (String) typeNames.get(new Integer(constant));
+            return name == null? TYPE_NAME_UNKNOWN : name;
+        }
+    };
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS14 INS65 INS42 INS42 INS14 INS66 INS66 INS66 INS66 INS66 INS66 INS66 UPD66 INS66 INS66 UPD66 INS66 UPD66 INS66 UPD66 INS66 INS66 UPD66 INS66 INS66 UPD66 INS66 INS66 UPD66 INS66 INS66 INS66 INS66 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS43 INS1 INS66 INS43 INS1 INS42 INS23 INS28 INS31 INS42 INS23 INS28 INS31 INS83 INS83 INS43 INS59 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS59 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS39 INS42 INS60 INS41 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS39 INS42 INS60 INS41 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS7 INS43 INS59 INS16 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS7 INS43 INS59 INS16 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS11 INS27 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS11 INS27 INS42 INS42 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS33 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS42 INS43 INS42 INS42 INS42