JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

- clustering support
- move definition & def-reader/writer to spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1095338 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinition;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinitionReader;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinitionWriter;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeHandler;
+    public void writePrivilegeDef(PrivilegeDefinition privilegeDefinition) throws JournalException {
+        try {
+            Map<String, String> nsMapping = new HashMap<String, String>();
+            String uri = privilegeDefinition.getName().getNamespaceURI();
+            nsMapping.put(nsResolver.getPrefix(uri), uri);
+            for (Name n : privilegeDefinition.getDeclaredAggregateNames()) {
+                nsMapping.put(nsResolver.getPrefix(n.getNamespaceURI()), n.getNamespaceURI());
+            }
+
+            StringWriter sw = new StringWriter();
+            PrivilegeDefinitionWriter writer = new PrivilegeDefinitionWriter("text/xml");
+            writer.writeDefinitions(sw, new PrivilegeDefinition[] {privilegeDefinition}, nsMapping);
+            sw.close();
+
+            writeString(sw.toString());
+
+        } catch (IOException e) {
+            String msg = "I/O error while writing privilege definition.";
+            throw new JournalException(msg, e);
+        } catch (NamespaceException e) {
+            String msg = "NamespaceException error while writing privilege definition.";
+            throw new JournalException(msg, e);
+        }
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+     * {@inheritDoc}
+     */
+    public PrivilegeDefinition readPrivilegeDef() throws JournalException {
+        try {
+            StringReader sr = new StringReader(readString());
+            PrivilegeDefinitionReader reader = new PrivilegeDefinitionReader(sr, "text/xml");
+            PrivilegeDefinition[] defs = reader.getPrivilegeDefinitions();
+
+            if (defs.length != 1) {
+                throw new JournalException("Expected one privilege definition: got " + defs.length);
+            }
+            return defs[0];
+
+        } catch (org.apache.jackrabbit.spi.commons.privilege.ParseException e) {
+            String msg = "Parse error while reading privilege definition.";
+            throw new JournalException(msg, e);
+        }
+    }
+
+    /**

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS43 INS8 INS65 INS43 INS42 INS42 INS54 INS65 INS42 INS42 INS54 INS65 INS42 INS8 INS12 INS12 INS65 INS8 INS12 INS60 INS60 INS21 INS70 INS60 INS60 INS21 INS21 INS21 INS44 INS8 INS44 INS8 INS60 INS60 INS60 INS25 INS41 INS44 INS8 INS74 INS59 INS43 INS59 INS32 INS44 INS32 INS8 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS43 INS42 INS60 INS53 INS43 INS42 INS60 INS53 INS43 INS59 INS43 INS59 INS5 INS59 INS27 INS8 INS2 INS43 INS42 INS60 INS53 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS14 INS42 INS43 INS59 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS43 INS85 INS42 INS32 INS40 INS34 INS53 INS42 INS34 INS40 INS43 INS59 INS14 INS42 INS42 INS42 INS74 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS45 INS5 INS4 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS42 INS43 INS32 INS43 INS42 INS45 INS42 INS42 INS42 INS14 INS42 INS42 INS45 INS43 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS40 INS42 INS42