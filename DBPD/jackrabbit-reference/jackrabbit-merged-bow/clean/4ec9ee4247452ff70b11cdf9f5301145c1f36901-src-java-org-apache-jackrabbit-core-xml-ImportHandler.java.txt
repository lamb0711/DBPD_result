- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
+import org.apache.log4j.Logger;
- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.3 $, $Date: 2004/08/27 15:48:21 $
-	this.importTargetNode = importTargetNode;
-	this.session = session;
-	this.nsReg = nsReg;
+        this.importTargetNode = importTargetNode;
+        this.session = session;
+        this.nsReg = nsReg;
-	// log exception and carry on...
-	log.warn("warning encountered at line: " + e.getLineNumber() + ", column: " + e.getColumnNumber() + " while parsing XML stream", e);
+        // log exception and carry on...
+        log.warn("warning encountered at line: " + e.getLineNumber() + ", column: " + e.getColumnNumber() + " while parsing XML stream", e);
-	// log exception and carry on...
-	log.error("error encountered at line: " + e.getLineNumber() + ", column: " + e.getColumnNumber() + " while parsing XML stream", e);
+        // log exception and carry on...
+        log.error("error encountered at line: " + e.getLineNumber() + ", column: " + e.getColumnNumber() + " while parsing XML stream", e);
-	// log and re-throw exception
-	log.error("fatal error encountered at line: " + e.getLineNumber() + ", column: " + e.getColumnNumber() + " while parsing XML stream", e);
-	throw e;
+        // log and re-throw exception
+        log.error("fatal error encountered at line: " + e.getLineNumber() + ", column: " + e.getColumnNumber() + " while parsing XML stream", e);
+        throw e;
-	systemViewXML = false;
-	initialized = false;
-	targetHandler = null;
+        systemViewXML = false;
+        initialized = false;
+        targetHandler = null;
-	// delegate to target handler
-	targetHandler.endDocument();
+        // delegate to target handler
+        targetHandler.endDocument();
-	try {
-	    String oldPrefix = session.getNamespacePrefix(uri);
-	    // namespace is already registered; check prefix
-	    if (!oldPrefix.equals(prefix)) {
-		// namespace is mapped to different prefix;
-		// try to remap it to given prefix
-		try {
-		    session.setNamespacePrefix(prefix, uri);
-		} catch (RepositoryException re) {
-		    throw new SAXException("failed to remap namespace " + uri + " to prefix " + prefix, re);
-		}
-	    }
-	} catch (NamespaceException nse) {
-	    // namespace is not yet registered, try to register it
-	    try {
-		nsReg.registerNamespace(prefix, uri);
-	    } catch (RepositoryException re) {
-		throw new SAXException("failed to register namespace " + uri + " with prefix " + prefix, re);
-	    }
-	}
+        try {
+            String oldPrefix = session.getNamespacePrefix(uri);
+            // namespace is already registered; check prefix
+            if (!oldPrefix.equals(prefix)) {
+                // namespace is mapped to different prefix;
+                // try to remap it to given prefix
+                try {
+                    session.setNamespacePrefix(prefix, uri);
+                } catch (RepositoryException re) {
+                    throw new SAXException("failed to remap namespace " + uri + " to prefix " + prefix, re);
+                }
+            }
+        } catch (NamespaceException nse) {
+            // namespace is not yet registered, try to register it
+            try {
+                nsReg.registerNamespace(prefix, uri);
+            } catch (RepositoryException re) {
+                throw new SAXException("failed to register namespace " + uri + " with prefix " + prefix, re);
+            }
+        }
-	if (!initialized) {
-	    // the namespace of the first element determines the type of XML
-	    // (system view/document view)
-	    String nsURI;
-	    if (qName == null || "".equals(qName)) {
-		nsURI = namespaceURI;
-	    } else {
-		try {
-		    nsURI = QName.fromJCRName(qName, session.getNamespaceResolver()).getNamespaceURI();
-		} catch (BaseException e) {
-		    // should never happen...
-		    String msg = "internal error: failed to parse/resolve element name " + qName;
-		    log.error(msg, e);
-		    throw new SAXException(msg, e);
-		}
-	    }
-	    systemViewXML = NamespaceRegistryImpl.NS_SV_URI.equals(nsURI);
+        if (!initialized) {
+            // the namespace of the first element determines the type of XML
+            // (system view/document view)
+            String nsURI;
+            if (qName == null || "".equals(qName)) {
+                nsURI = namespaceURI;
+            } else {
+                try {
+                    nsURI = QName.fromJCRName(qName, session.getNamespaceResolver()).getNamespaceURI();
+                } catch (BaseException e) {
+                    // should never happen...
+                    String msg = "internal error: failed to parse/resolve element name " + qName;
+                    log.error(msg, e);
+                    throw new SAXException(msg, e);
+                }
+            }
+            systemViewXML = NamespaceRegistryImpl.NS_SV_URI.equals(nsURI);
-	    if (systemViewXML) {
-		targetHandler = new SysViewImportHandler(importTargetNode, session);
-	    } else {
-		targetHandler = new DocViewImportHandler(importTargetNode, session);
-	    }
-	    targetHandler.startDocument();
-	    initialized = true;
-	}
+            if (systemViewXML) {
+                targetHandler = new SysViewImportHandler(importTargetNode, session);
+            } else {
+                targetHandler = new DocViewImportHandler(importTargetNode, session);
+            }
+            targetHandler.startDocument();
+            initialized = true;
+        }
-	// delegate to target handler
-	targetHandler.startElement(namespaceURI, localName, qName, atts);
+        // delegate to target handler
+        targetHandler.startElement(namespaceURI, localName, qName, atts);
-	// delegate to target handler
-	targetHandler.characters(ch, start, length);
+        // delegate to target handler
+        targetHandler.characters(ch, start, length);
-	// delegate to target handler
-	targetHandler.endElement(namespaceURI, localName, qName);
+        // delegate to target handler
+        targetHandler.endElement(namespaceURI, localName, qName);
-	this.locator = locator;
+        this.locator = locator;

MOV26 DEL66 DEL65 DEL66 DEL65