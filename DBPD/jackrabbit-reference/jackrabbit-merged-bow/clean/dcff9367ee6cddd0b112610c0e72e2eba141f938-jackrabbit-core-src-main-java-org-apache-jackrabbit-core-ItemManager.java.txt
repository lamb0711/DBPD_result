JCR-2170: Remove PropDefId and NodeDefId
- fix regression and add test case

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@817192 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.nodetype.ConstraintViolationException;
+import org.apache.jackrabbit.spi.commons.nodetype.NodeDefinitionImpl;
+import org.apache.jackrabbit.spi.commons.nodetype.PropertyDefinitionImpl;
-    org.apache.jackrabbit.spi.commons.nodetype.NodeDefinitionImpl getDefinition(NodeState state)
+    NodeDefinitionImpl getDefinition(NodeState state)
-        NodeState parentState;
+        NodeState parentState = null;
-                // cannot be found
-                parentState = (NodeState) parentState.getOverlayedState();
+                // cannot be found. unless the parentState is new, which
+                // means it was recreated in place of a removed node
+                // that used to be the actual parent
+                if (parentState.getStatus() == ItemState.STATUS_NEW) {
+                    // force getting parent from attic
+                    parentState = null;
+                } else {
+                    parentState = (NodeState) parentState.getOverlayedState();
+                }
-            // parent probably removed, get it from attic
+            // parent probably removed, get it from attic. see below
+        }
+
+        if (parentState == null) {
+
-            QNodeDefinition def = ent.getApplicableChildNodeDef(
+            QNodeDefinition def;
+            try {
+                def = ent.getApplicableChildNodeDef(
+            } catch (ConstraintViolationException e) {
+                // fallback to child node definition of a nt:unstructured
+                ent = ntReg.getEffectiveNodeType(NameConstants.NT_UNSTRUCTURED);
+                def = ent.getApplicableChildNodeDef(
+                        cne.getName(), state.getNodeTypeName(), ntReg);
+                log.warn("Fallback to nt:unstructured due to unknown child " +
+                        "node definition for type '" + state.getNodeTypeName() + "'");
+            }
-    org.apache.jackrabbit.spi.commons.nodetype.PropertyDefinitionImpl getDefinition(PropertyState state)
+    PropertyDefinitionImpl getDefinition(PropertyState state)
-            QPropertyDefinition def = ent.getApplicablePropertyDef(
+            QPropertyDefinition def;
+            try {
+                def = ent.getApplicablePropertyDef(
+            } catch (ConstraintViolationException e) {
+                ent = ntReg.getEffectiveNodeType(NameConstants.NT_UNSTRUCTURED);
+                def = ent.getApplicablePropertyDef(state.getName(),
+                        state.getType(), state.isMultiValued());
+                log.warn("Fallback to nt:unstructured due to unknown property " +
+                        "definition for '" + state.getName() + "'");
+            }

INS26 INS26 INS26 INS40 INS40 INS40 UPD43 UPD43 INS42 INS25 INS42 INS27 MOV8 INS33 INS8 INS42 INS33 INS54 INS54 INS8 INS8 INS12 INS8 INS12 INS25 INS21 INS44 INS8 INS21 INS44 INS8 INS27 INS8 MOV8 INS7 INS43 INS42 INS21 INS21 INS21 INS7 INS43 INS42 INS21 INS21 INS21 INS32 INS40 INS21 INS42 MOV32 INS42 INS7 INS7 INS32 INS42 MOV32 INS42 INS7 INS7 INS32 INS42 INS42 INS7 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS33 INS42 INS42 INS40 INS42 INS42 INS32 INS32 INS42 INS27 INS32 INS45 INS42 INS42 INS40 INS42 INS42 INS32 INS32 INS32 INS27 INS32 INS45 INS42 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS42 INS42 DEL40 DEL40