work in progress

- removeVersion missing
- LockManager/VersionManager: should not rely on observation (todo added)
- Add Operation.persisted() (Impl. still missing) in analogy to ChangeLog.persisted.
- ItemImpl.refresh behaves according to CacheBehaviour flag.
- NodeState: fix classcastexception when accessing state from propertiesInAttic
- ItemState: rename 'refresh()' to 'reload()
- ItemState: move code common to PropertyState and NodeState to ItemState
- ItemState: rename 'reset' to 'merge'
- add common interface ChildItemEntry
- SessionItemStateManager: avoid traversing twice during 'undo'

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@477095 13f79535-47bb-0310-9956-ffa450edef68

-     * Modified references
-     */
-    final Set modifiedRefs = new LinkedHashSet();
-
-    /**
-     * A references has been modified
-     *
-     * @param refs refs that has been modified
-     */
-    public void modified(NodeReferences refs) {
-        modifiedRefs.add(refs);
-    }
-
-    /**
-     * Return an iterator over all modified references.
+     * Removes the subset of this changelog represented by the given
+     * <code>ChangeLog</code> from this changelog.
-     * @return iterator over all modified references.
+     * @param subChangeLog remove all entries (states, operations) present in
+     * the given changelog from this changelog.
-    public Iterator modifiedRefs() {
-        return modifiedRefs.iterator();
+    public void removeAll(ChangeLog subChangeLog) {
+        addedStates.removeAll(subChangeLog.addedStates);
+        modifiedStates.removeAll(subChangeLog.modifiedStates);
+        deletedStates.removeAll(subChangeLog.deletedStates);
+
+        operations.removeAll(subChangeLog.operations);
-    //-----------------------------< Inform ChangeLog about Success/Failure >---
-        modifiedRefs.clear();
-        buf.append(", #modifiedRefs=").append(modifiedRefs.size());
-
-    //----------------------------------< for derived classes >-----------------
-
-    /**
-     * Removes the <code>operation</code> from the list of operations.
-     * @param operation the Operation to remove.
-     * @return <code>true</code> if the operation was removed.
-     */
-    protected boolean removeOperation(Operation operation) {
-        return operations.remove(operation);
-    }

INS31 MOV29 MOV83 MOV39 UPD42 MOV42 MOV44 INS8 UPD43 UPD42 MOV21 INS21 INS21 INS21 UPD66 INS66 UPD42 UPD66 INS66 UPD42 INS32 INS32 INS32 UPD42 UPD42 INS40 UPD42 MOV42 UPD42 MOV42 INS40 INS42 INS42 INS40 MOV42 UPD42 MOV42 INS40 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL8 DEL31 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL41 DEL8 DEL31