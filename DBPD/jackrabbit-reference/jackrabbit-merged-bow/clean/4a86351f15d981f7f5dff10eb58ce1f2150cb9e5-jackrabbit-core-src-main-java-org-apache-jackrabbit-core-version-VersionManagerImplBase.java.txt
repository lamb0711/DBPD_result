JCR-2140: Baselines & Configurations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@797094 13f79535-47bb-0310-9956-ffa450edef68

-                Set<NodeId> baseVersions = null;
-                    baseVersions = collectBaseVersions(state);
+                    // collect the base versions and the the rep:versions property of the configuration
+                    Set<NodeId> baseVersions = collectBaseVersions(state);
+                    InternalValue[] vs = new InternalValue[baseVersions.size()];
+                    int i=0;
+                    for (NodeId id: baseVersions) {
+                        vs[i++] = InternalValue.create(id);
+                    }
+                    state.setPropertyValues(NameConstants.REP_VERSIONS, PropertyType.REFERENCE, vs);
+                    state.store();
-                InternalVersion v = vMgr.checkin(session, state, baseVersions);
+                InternalVersion v = vMgr.checkin(session, state);
-            throw new ItemNotFoundException("Configuration root node for " + safeGetJCRPath(config) + " not found.");
+            String msg = "Configuration root node for " + safeGetJCRPath(config) + " not found.";
+            log.error(msg);
+            throw new ItemNotFoundException(msg);
-        baseVersions.add(root.getPropertyValue(NameConstants.JCR_BASEVERSION).getNodeId());
-        for (NodeStateEx child: root.getChildNodes()) {
-            if (child.getEffectiveNodeType().includesNodeType(NameConstants.MIX_VERSIONABLE)) {
-                if (child.hasProperty(NameConstants.JCR_CONFIGURATION)) {
-                    // don't traverse into child nodes that have a jcr:configuration
-                    // property as they belong to a different configuration.
-                    continue;
-                }
-                baseVersions.add(child.getPropertyValue(NameConstants.JCR_BASEVERSION).getNodeId());
+        if (!baseVersions.isEmpty()) {
+            // base version of configuration root already recorded
+            if (root.hasProperty(NameConstants.JCR_CONFIGURATION)
+                    && root.getEffectiveNodeType().includesNodeType(NameConstants.MIX_VERSIONABLE)) {
+                // don't traverse into child nodes that have a jcr:configuration
+                // property as they belong to a different configuration.
+                return;
+        }
+        InternalVersion baseVersion = getBaseVersion(root);
+        if (baseVersion.isRootVersion()) {
+            String msg = "Unable to checkin configuration as it has unversioned child node: " + safeGetJCRPath(root);
+            log.error(msg);
+            throw new UnsupportedRepositoryOperationException(msg);
+        }
+        baseVersions.add(baseVersion.getId());
+
+        for (NodeStateEx child: root.getChildNodes()) {
-            log.debug(msg);
+            log.error(msg);
-            throw new RepositoryException("Unable to start edit operation.", e);
+            String msg = "Unable to start edit operation.";
+            throw new RepositoryException(msg, e);

INS8 INS25 INS60 INS25 INS21 MOV70 INS38 INS8 INS43 INS59 INS32 INS8 INS32 INS8 INS60 INS21 INS32 INS25 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS53 INS42 INS42 INS32 MOV21 INS43 INS59 INS32 INS42 INS42 INS27 INS8 INS42 INS42 INS43 INS59 INS32 INS14 INS42 INS42 INS60 INS42 INS42 MOV27 INS42 INS42 INS42 INS42 INS32 INS32 INS41 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS43 INS59 INS8 INS42 INS42 INS40 INS32 INS42 INS40 INS45 INS32 INS42 UPD42 INS42 INS42 INS45 INS42 MOV60 INS60 INS60 INS70 INS21 INS21 INS42 INS42 INS42 INS42 INS5 INS59 INS39 INS59 INS44 INS42 INS8 INS32 INS32 INS32 INS43 INS85 INS42 INS3 INS42 INS34 INS43 INS42 MOV21 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS32 INS42 INS43 INS85 INS42 INS42 INS2 INS42 INS42 INS37 UPD42 UPD42 INS42 INS42 DEL33 DEL42 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL18 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL8 DEL45