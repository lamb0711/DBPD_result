JCR-256: Improve jcr decorator in jcr-ext
- added decoration for all required jcr interfaces
- added more factory methods to DecoratorFactory
- renamed SimpleDecoratorFactory to DefaultDecoratorFactory
- removed ChainedDecoratorFactory and ChainedItemDecorator
- added sample decorator: TrussDecoratorFactory

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@326437 13f79535-47bb-0310-9956-ffa450edef68

- * TODO
-public class ItemDecorator implements Item {
+public class ItemDecorator extends AbstractDecorator implements Item {
-    private DecoratorFactory factory;
+    /**
+     * The underlying item to decorate.
+     */
+    protected final Item item;
-    private Session session;
-
-    private Item item;
-        this.factory = factory;
-        this.session = session;
+        super(factory, session);
+     * Returns the underlying item that <code>this</code>
+     * <code>ItemDecorator</code> decorates.
+     *
+     * @return the underlying item.
+     */
+    public Item unwrap() {
+        return item;
+    }
+
+    /**
+     * Returns the underlying <code>item</code> of the <code>item</code>
+     * that decorates it. Unwrapping <code>null</code> returns <code>null</code>.
+     *
+     * @param item decorates the underlying item.
+     * @return the underlying item.
+     * @throws IllegalStateException if <code>item</code> is not of type
+     *                               {@link ItemDecorator}.
+     */
+    public static Item unwrap(Item item) {
+        if (item == null) {
+            return null;
+        }
+        if (item instanceof ItemDecorator) {
+            item = ((ItemDecorator) item).unwrap();
+        } else {
+            throw new IllegalStateException("item is not of type ItemDecorator");
+        }
+        return item;
+    }
+
+    /**
-    public boolean isSame(Item otherItem) {
-        // TODO Auto-generated method stub
-        return false;
+    public boolean isSame(Item otherItem) throws RepositoryException {
+        return item.isSame(unwrap(otherItem));
-        item.accept(visitor);
+        item.accept(factory.getItemVisitorDecorator(session, visitor));
+    public boolean equals(Object obj) {
+        if (obj instanceof ItemDecorator) {
+            ItemDecorator other = (ItemDecorator)obj;
+            return item.equals(other.unwrap());
+        }
+        return false;
+    }
+
+    public int hashCode() {
+        return item.hashCode();
+    }

MOV31 INS29 INS83 INS42 INS43 INS31 INS31 INS31 INS31 INS42 INS29 UPD83 INS83 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 MOV29 INS83 INS39 INS42 MOV44 INS43 INS8 INS83 INS39 INS42 INS44 INS8 UPD39 UPD42 INS65 INS46 MOV65 INS65 INS42 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS25 INS41 UPD42 MOV42 INS41 INS43 INS42 INS25 MOV41 INS41 INS66 INS42 INS42 UPD66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS65 INS66 INS42 INS27 INS8 INS62 INS8 INS8 INS42 INS32 INS42 INS62 INS8 INS32 INS42 INS42 INS33 INS41 INS42 INS43 INS21 INS53 INS42 INS42 INS32 INS32 INS42 INS43 INS60 INS41 INS42 INS42 INS33 UPD42 MOV42 INS7 INS14 INS42 INS42 INS42 INS42 INS42 MOV42 INS42 INS43 INS59 INS32 INS42 INS32 INS43 INS45 INS42 UPD42 MOV42 INS11 INS42 INS42 INS32 INS36 INS42 INS42 INS43 INS42 INS42 INS42 INS11 INS42 INS43 INS42 INS42 DEL29 DEL83 DEL42 DEL83 DEL43 DEL42 DEL59 DEL23 DEL83 DEL43 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21