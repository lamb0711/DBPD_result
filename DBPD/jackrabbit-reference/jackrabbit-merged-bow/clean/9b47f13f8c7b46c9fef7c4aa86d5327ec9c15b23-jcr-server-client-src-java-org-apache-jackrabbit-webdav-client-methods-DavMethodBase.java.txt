DavMethodBase:
- separate RequestEntity impl. for xml documents 
- missing close on response stream
- preprocessing the multistatus caused getResponseDocument to return null.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@451315 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.httpclient.methods.StringRequestEntity;
-import org.apache.xml.serialize.OutputFormat;
-import org.apache.xml.serialize.XMLSerializer;
-import java.io.ByteArrayOutputStream;
+    private Document responseDocument;
-        InputStream in = getResponseBodyAsStream();
-        if (in == null) {
-            return null;
-        }
-        try {
-            DocumentBuilder docBuilder = BUILDER_FACTORY.newDocumentBuilder();
-            Document document = docBuilder.parse(in);
-            return document;
-        } catch (ParserConfigurationException e) {
-            throw new IOException(e.getMessage());
-        } catch (SAXException e) {
-            throw new IOException(e.getMessage());
-        }
+        if (responseDocument != null) {
+            // response has already been read
+            return responseDocument;
+        } else {
+            // read response and try to build a xml document
+            InputStream in = getResponseBodyAsStream();
+            if (in == null) {
+                return null;
+            }
+            try {
+                DocumentBuilder docBuilder = BUILDER_FACTORY.newDocumentBuilder();
+                responseDocument = docBuilder.parse(in);
+                return responseDocument;
+            } catch (ParserConfigurationException e) {
+                throw new IOException(e.getMessage());
+            } catch (SAXException e) {
+                throw new IOException(e.getMessage());
+            } finally {
+                in.close();
+            }
+        }     
-        ByteArrayOutputStream out = new ByteArrayOutputStream();
-        OutputFormat format = new OutputFormat("xml", "UTF-8", false);
-        XMLSerializer serializer = new XMLSerializer(out, format);
-        serializer.setNamespaces(true);
-        serializer.asDOMSerializer().serialize(requestBody);
-        setRequestEntity(new StringRequestEntity(out.toString(), "text/xml", "UTF-8"));
+        setRequestEntity(new XmlRequestEntity(requestBody));

INS23 INS83 MOV43 INS59 INS8 INS42 INS25 INS27 INS8 MOV8 INS42 INS33 INS41 INS42 INS8 UPD43 INS42 INS21 INS21 UPD42 INS7 UPD42 INS32 INS42 MOV32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL45 DEL9 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL45 DEL45