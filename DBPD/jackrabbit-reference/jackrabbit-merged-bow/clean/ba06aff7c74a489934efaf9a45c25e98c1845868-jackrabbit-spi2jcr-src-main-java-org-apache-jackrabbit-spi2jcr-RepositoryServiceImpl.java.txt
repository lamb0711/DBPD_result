JCR-2175: Return bind variable names on RepositoryService.checkQueryStatement()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@789324 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.query.qom.Constraint;
+import javax.jcr.query.qom.And;
+import javax.jcr.query.qom.Or;
+import javax.jcr.query.qom.Not;
+import javax.jcr.query.qom.Comparison;
+import javax.jcr.query.qom.BindVariableValue;
+import javax.jcr.query.qom.QueryObjectModel;
-    public void checkQueryStatement(SessionInfo sessionInfo,
+    public String[] checkQueryStatement(SessionInfo sessionInfo,
-        createQuery(getSessionInfoImpl(sessionInfo).getSession(), statement,
-                language, namespaces);
+        Query q = createQuery(getSessionInfoImpl(sessionInfo).getSession(),
+                statement, language, namespaces);
+        return getBindVariableNames(q);
+
+    private String[] getBindVariableNames(Query query) {
+        List<String> names = new ArrayList<String>();
+        if (query instanceof QueryObjectModel) {
+            QueryObjectModel qom = (QueryObjectModel) query;
+            collectBindVariableNames(qom.getConstraint(), names);
+        } else {
+            // TODO: use when available
+            // names.addAll(Arrays.asList(q.getBindVariableNames()));
+        }
+        return names.toArray(new String[names.size()]);
+    }
+
+    private void collectBindVariableNames(Constraint c, List<String> names) {
+        if (c instanceof And) {
+            collectBindVariableNames(((And) c).getConstraint1(), names);
+            collectBindVariableNames(((And) c).getConstraint2(), names);
+        } else if (c instanceof Or) {
+            collectBindVariableNames(((Or) c).getConstraint1(), names);
+            collectBindVariableNames(((Or) c).getConstraint2(), names);
+        } else if (c instanceof Not) {
+            collectBindVariableNames(((Not) c).getConstraint(), names);
+        } else if (c instanceof Comparison) {
+            collectBindVariableNames((Comparison) c, names);
+        }
+    }
+
+    private void collectBindVariableNames(Comparison c, List<String> names) {
+        if (c.getOperand2() instanceof BindVariableValue) {
+            names.add(((BindVariableValue) c.getOperand2()).getBindVariableName());
+        }
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS5 INS83 INS5 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS85 INS60 INS41 INS43 INS85 INS43 INS42 INS60 INS25 INS41 INS43 INS42 INS74 INS42 INS25 INS43 INS42 INS74 INS42 INS25 INS42 INS43 INS59 INS32 INS42 INS42 INS74 INS59 INS62 INS8 INS8 INS32 INS42 INS43 INS43 INS62 INS8 INS25 INS42 INS43 INS43 INS62 INS8 INS42 INS42 MOV32 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS43 INS60 INS21 INS42 INS42 INS3 INS42 INS42 INS42 INS43 INS21 INS21 INS62 INS8 INS25 INS42 INS42 INS32 INS43 INS21 INS42 INS42 INS74 INS42 INS43 INS59 INS32 INS5 INS32 INS42 INS32 INS32 INS42 INS43 INS21 INS21 INS62 INS8 INS25 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS42 INS11 INS42 INS32 INS42 INS43 INS85 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS43 INS21 INS62 INS8 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS36 INS42 INS36 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS21 INS36 INS42 INS42 INS11 INS11 INS36 INS42 INS36 INS42 INS42 INS32 INS42 INS42 INS32 INS11 INS43 INS42 INS43 INS42 INS11 INS11 INS36 INS42 INS42 INS11 INS42 INS43 INS32 INS42 INS42 INS43 INS42 INS43 INS42 INS11 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 DEL39 DEL21