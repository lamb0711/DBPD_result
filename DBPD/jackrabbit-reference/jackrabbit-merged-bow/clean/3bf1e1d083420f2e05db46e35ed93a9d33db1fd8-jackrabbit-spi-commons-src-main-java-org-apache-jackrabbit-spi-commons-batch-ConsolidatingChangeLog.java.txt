JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Tree;
+    @Override
+    public void setTree(NodeId parentId, Tree contentTree) throws RepositoryException {
+        addOperation(CancelableOperations.setTree(parentId, contentTree));
+    }
+
+
+        //--------------------------------------------------------< SetTree >---
+        public static class SetTree extends Operations.SetTree implements CancelableOperation {
+
+            public SetTree(NodeId parentId, Tree contentTree) {
+                super(parentId, contentTree);
+            }
+
+            /**
+             * The cancellation only considers canceling the parent node, which corresponds
+             * to the policy node.
+             */
+            public int cancel(CancelableOperation other) throws RepositoryException {
+                if (other instanceof Remove) {
+                    Path thisPath = ConsolidatingChangeLog.getPath(parentId, tree.getName());
+                    Path otherPath = ConsolidatingChangeLog.getPath(((Remove) other).itemId);
+                    if (thisPath == null || otherPath == null) {
+                        return CANCEL_NONE;
+                    }
+                    if (thisPath.equals(otherPath)) {
+                        return CANCEL_BOTH;
+                    }
+                    return (thisPath.isDescendantOf(otherPath))
+                            ? CANCEL_THIS
+                            : CANCEL_NONE;
+                }
+                return CANCEL_NONE;
+            }
+        }
+
+        /**
+         * Factory method for creating an {@link SetTree} operation.
+         * @see Batch#setTree(NodeId, Tree)
+         *
+         * @param parentId
+         * @param tree
+         * @return
+         */
+        public static CancelableOperation setTree(NodeId parentId, Tree tree) {
+            return new SetTree(parentId, tree);
+        }

INS26 INS40 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS55 INS31 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS83 INS83 INS42 INS43 INS43 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS42 INS32 INS40 INS42 INS83 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS32 INS43 INS42 INS43 INS42 INS46 INS65 INS43 INS42 INS42 INS25 INS41 INS66 INS65 INS66 INS68 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS66 INS66 INS42 INS62 INS8 INS42 INS42 INS42 INS42 INS69 INS69 INS43 INS42 INS42 INS42 INS43 INS60 INS60 INS25 INS25 INS41 INS43 INS43 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS8 INS16 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS27 INS41 INS42 INS42 INS42 INS41 INS36 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS22 INS42 INS33 INS42 INS33 INS42 INS42 INS32 INS42 INS42 INS36 INS42 INS42 INS42 INS42 INS11 INS43 INS42 INS42