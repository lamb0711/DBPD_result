migrating to v0.15 of the jsr 170 spec

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55516 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.access.AccessDeniedException;
-import javax.jcr.access.AccessManager;
-import javax.jcr.access.Permission;
-            if (!accessMgr.isGranted(parentState.getId(), Permission.READ_ITEM)) {
+            if (!accessMgr.isGranted(parentState.getId(), AccessManager.READ)) {
-            if (!accessMgr.isGranted(parentState.getId(), Permission.ADD_NODE)) {
+            if (!accessMgr.isGranted(parentState.getId(), AccessManager.WRITE)) {
-            if (!accessMgr.isGranted(targetState.getId(), Permission.READ_ITEM)) {
+            if (!accessMgr.isGranted(targetState.getId(), AccessManager.READ)) {
-            if (!accessMgr.isGranted(parentState.getId(), Permission.REMOVE_ITEM)) {
-                throw new AccessDeniedException(hierMgr.safeGetJCRPath(parentPath) + ": not allowed to remove child node");
+            if (!accessMgr.isGranted(parentState.getId(), AccessManager.WRITE)) {
+                throw new AccessDeniedException(hierMgr.safeGetJCRPath(parentPath) + ": not allowed to remove node");
-            if (!accessMgr.isGranted(srcState.getId(), Permission.READ_ITEM)) {
+            if (!accessMgr.isGranted(srcState.getId(), AccessManager.READ)) {
+     * @see Workspace#copy(String, String, String)
+     */
+    public void copy(String srcWorkspace, String srcAbsPath, String destAbsPath)
+            throws NoSuchWorkspaceException, ConstraintViolationException,
+            AccessDeniedException, PathNotFoundException, ItemExistsException,
+            RepositoryException {
+        // copy (i.e. pull) subtree at srcAbsPath from srcWorkspace
+        // to 'this' workspace at destAbsPath
+        PersistentItemStateProvider srcStateMgr = rep.getWorkspaceStateManager(srcWorkspace);
+        // FIXME need to setup a hierarchy manager for source workspace
+        HierarchyManagerImpl srcHierMgr = new HierarchyManagerImpl(rep.getRootNodeUUID(), srcStateMgr, session.getNamespaceResolver());
+        // do cross-workspace copy
+        internalCopy(srcAbsPath, srcStateMgr, srcHierMgr,
+                destAbsPath, persistentStateMgr, hierMgr,
+                session.getAccessManager(), session.getNamespaceResolver(),
+                rep.getNodeTypeRegistry(), false);
+    }
+
+    /**
-     * @see Workspace#getAccessManager
-     */
-    public AccessManager getAccessManager() throws UnsupportedRepositoryOperationException, RepositoryException {
-        return session.getAccessManager();
-    }
-
-    /**
-        if (!session.getAccessManager().isGranted(state.getId(), Permission.READ_ITEM)) {
+        if (!session.getAccessManager().isGranted(state.getId(), AccessManager.READ)) {
-        if (!session.getAccessManager().isGranted(state.getId(), Permission.READ_ITEM)) {
+        if (!session.getAccessManager().isGranted(state.getId(), AccessManager.READ)) {

MOV31 INS39 INS42 INS44 INS44 INS44 INS43 INS43 UPD43 INS43 UPD43 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 UPD42 INS42 UPD42 INS60 INS60 INS21 INS68 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS32 INS32 INS9 INS43 INS43 INS43 INS42 INS42 INS42 INS43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 UPD40 UPD40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL67 DEL42 DEL41