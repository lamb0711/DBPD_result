JCR-1739: Do not use deletable anymore

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@696656 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileFilter;
-    private final IndexInfos deletable = new IndexInfos("deletable");
+    private final Set deletable = new HashSet();
-        if (deletable.exists(indexDir)) {
-            deletable.read(indexDir);
-        }
-        // try to remove deletable files if there are any
-        attemptDelete();
+        // as of 1.5 deletable file is not used anymore
+        removeDeletable();
+        // enqueue unused segments for deletion
+        enqueueUnusedSegments();
+        attemptDelete();
+
-        // during recovery it may happen that an index had already been marked
-        // deleted, so we need to check if it is already marked deleted.
-            if (!deletable.contains(index.getName())) {
-                deletable.addName(index.getName());
-            }
+            log.debug("Moved " + index.getName() + " to deletable");
+            deletable.add(index.getName());
+    /**
+     * Enqueues unused segments for deletion in {@link #deletable}. This method
+     * does not synchronize on {@link #deletable}! A caller must ensure that it
+     * is the only one acting on the {@link #deletable} map.
+     */
+    private void enqueueUnusedSegments() {
+        // walk through index segments
+        File[] segmentDirs = indexDir.listFiles(new FileFilter() {
+            public boolean accept(File pathname) {
+                return pathname.isDirectory() && pathname.getName().startsWith("_");
+            }
+        });
+        for (int i = 0; i < segmentDirs.length; i++) {
+            String name = segmentDirs[i].getName();
+            if (!indexNames.contains(name)) {
+                deletable.add(name);
+            }
+        }
+    }
+
-            for (int i = deletable.size() - 1; i >= 0; i--) {
-                String indexName = deletable.getName(i);
+            for (Iterator it = deletable.iterator(); it.hasNext(); ) {
+                String indexName = (String) it.next();
-                    deletable.removeName(i);
+                    it.remove();
-            try {
-                deletable.write(indexDir);
-            } catch (IOException e) {
-                log.warn("Exception while writing deletable indexes: " + e);
-            }
+        }
+    }
+
+    /**
+     * Removes the deletable file if it exists. The file is not used anymore
+     * in Jackrabbit versions >= 1.5.
+     */
+    private void removeDeletable() {
+        File deletable = new File(indexDir, "deletable");
+        if (deletable.exists()) {
+            deletable.delete();

INS26 INS40 INS23 INS31 INS31 MOV29 MOV83 MOV83 UPD43 MOV43 INS59 MOV21 MOV8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 UPD42 INS42 INS14 INS21 MOV21 MOV21 MOV21 INS51 INS65 INS60 INS24 INS65 INS60 INS25 INS43 INS32 INS42 MOV8 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS5 INS59 INS58 INS27 INS37 INS8 INS66 INS66 INS43 INS59 INS32 INS8 INS42 UPD42 MOV42 UPD42 INS21 INS67 INS67 INS67 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS42 MOV42 MOV14 INS42 INS42 INS21 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS34 INS43 INS59 INS38 INS8 INS32 UPD43 INS42 INS32 UPD42 UPD42 INS27 UPD42 INS43 INS1 INS42 INS42 INS32 INS32 INS21 INS43 INS42 INS42 UPD42 INS42 INS42 INS45 MOV32 INS45 INS42 INS31 INS2 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 INS32 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 INS11 INS43 INS42 INS41 INS43 INS32 INS42 INS27 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS32 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 DEL59 DEL23 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL38 DEL25 DEL42 DEL51 DEL8 DEL39 DEL32 DEL34 DEL27 DEL42 DEL34 DEL27 DEL42 DEL37 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54