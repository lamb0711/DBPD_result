- Remove TransientItemStateListener
- Create property states and child node states on NodeState

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430020 13f79535-47bb-0310-9956-ffa450edef68

-     * Notify the transient state listeners that this state has overlayed
-     * another state.
-     *
-     * @param overlayer the state that now overlays the state that the listener
-     *                  is registered to.
-     */
-    protected void notifyStateOverlaid(ItemState overlayer) {
-        // copy listeners to array to avoid ConcurrentModificationException
-        ItemStateListener[] la;
-        synchronized (listeners) {
-            la = (ItemStateListener[]) listeners.toArray(new ItemStateListener[listeners.size()]);
-        }
-        for (int i = 0; i < la.length; i++) {
-            if (la[i] instanceof TransientItemStateListener) {
-                ((TransientItemStateListener) la[i]).stateOverlaid(overlayer);
-            }
-        }
-    }
-
-    /**
-     * Notify the transient state listeners that this state no longer overlays
-     * another state.
-     */
-    protected void notifyStateUncovering() {
-        // copy listeners to array to avoid ConcurrentModificationException
-        ItemStateListener[] la;
-        synchronized (listeners) {
-            la = (ItemStateListener[]) listeners.toArray(new ItemStateListener[listeners.size()]);
-        }
-        for (int i = 0; i < la.length; i++) {
-            if (la[i] instanceof TransientItemStateListener) {
-                ((TransientItemStateListener) la[i]).stateUncovering(this);
-            }
-        }
-    }
-
-    /**
+    /**
+     * Marks this item state as modified.
+     */
+    protected void markModified() {
+        switch (status) {
+            case STATUS_EXISTING:
+                setStatus(STATUS_EXISTING_MODIFIED);
+                break;
+            case STATUS_EXISTING_MODIFIED:
+                // already modified, do nothing
+                break;
+            case STATUS_NEW:
+                // still new, do nothing
+                break;
+            case STATUS_STALE_DESTROYED:
+            case STATUS_STALE_MODIFIED:
+                // should actually get here because item should check before
+                // it modifies an item state. do nothing because item state
+                // is stale anyway.
+                break;
+            case STATUS_EXISTING_REMOVED:
+            case STATUS_UNDEFINED:
+            default:
+                String msg = "Cannot mark item state with status " +
+                        status + " modified.";
+                throw new IllegalStateException(msg);
+        }
+    }
+
+

INS31 MOV29 MOV83 MOV39 UPD42 MOV42 INS8 INS50 UPD66 INS42 INS49 INS21 INS10 INS49 INS10 INS49 INS10 INS49 INS49 INS10 INS49 INS49 INS49 INS60 INS53 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 MOV59 INS14 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 INS27 INS43 INS42 INS45 INS42 INS45 UPD42 MOV42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL32 DEL3 DEL32 DEL11 DEL7 DEL21 DEL8 DEL51 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL2 DEL11 DEL36 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL43 DEL85 DEL5 DEL60 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11 DEL7 DEL21 DEL8 DEL51 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL2 DEL11 DEL36 DEL42 DEL52 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31 DEL66 DEL42 DEL66 DEL66 DEL65