migrating to v0.15 of the jsr 170 spec

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55516 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.AccessDeniedException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.access.AccessManager;
+import javax.jcr.ItemNotFoundException;
-public class AccessManagerImpl extends AbstractAccessManager {
+public class AccessManagerImpl implements AccessManager {
+    /** hierarchy manager used for ACL-based access control model */
-    protected final NamespaceResolver nsResolver;
-     * @param nsReg
-    AccessManagerImpl(Credentials credentials, HierarchyManager hierMgr, NamespaceResolver nsReg) {
+    AccessManagerImpl(Credentials credentials, HierarchyManager hierMgr) {
-        this.nsResolver = nsReg;
-    }
-
-    /**
-     * Copy constructor
-     */
-    AccessManagerImpl(AccessManagerImpl other) {
-        this.hierMgr = other.hierMgr;
-        this.nsResolver = other.nsResolver;
-    }
-
-    /**
-     * @param id
-     * @param permissions
-     * @return
-     */
-    public boolean isGranted(ItemId id, long permissions) throws ItemNotFoundException, RepositoryException {
-        return (getPermissions(id) & permissions) == permissions;
-    }
-
-    /**
-     * @param id
-     * @return
-     */
-    public long getPermissions(ItemId id) throws ItemNotFoundException, RepositoryException {
-        // @todo implement resource-based access control
-
-        return PermissionImpl.ALL_VALUES;
-     * @see AccessManager#getPermissions(String)
+     * @see AccessManager#checkPermission(ItemId, int)
-    public long getPermissions(String absPath) throws PathNotFoundException, RepositoryException {
-        try {
-            return getPermissions(hierMgr.resolvePath(Path.create(absPath, nsResolver, true)));
-        } catch (MalformedPathException mpe) {
-            String msg = "failed to check permissions for " + absPath;
-            log.warn(msg, mpe);
-            throw new RepositoryException(msg, mpe);
-        }
+    public void checkPermission(ItemId id, int permissions)
+            throws AccessDeniedException, ItemNotFoundException,
+            RepositoryException {
+        // @todo implement access control
+    }
+
+    /**
+     * @see AccessManager#isGranted(ItemId, int)
+     */
+    public boolean isGranted(ItemId id, int permissions)
+            throws ItemNotFoundException, RepositoryException {
+        // @todo implement access control
+        return true;

MOV26 MOV26 UPD40 UPD43 INS31 UPD42 INS29 INS29 MOV83 UPD39 MOV39 UPD42 MOV42 MOV44 MOV44 INS43 MOV43 MOV43 MOV8 UPD39 UPD42 MOV44 MOV43 MOV43 INS8 INS65 INS65 UPD39 INS42 INS39 INS42 MOV41 INS66 INS68 INS9 INS42 INS42 INS69 INS69 UPD42 INS69 INS43 INS39 UPD43 INS39 UPD42 MOV42 UPD42 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL65 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL40 DEL41 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL8 DEL31 DEL42 DEL65 DEL42 DEL65 DEL65 DEL29 DEL42 DEL42 DEL32 DEL42 DEL27 DEL36 DEL42 DEL27 DEL41 DEL8 DEL31 DEL42 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL31 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL32 DEL32 DEL42 DEL43 DEL42 DEL43 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8