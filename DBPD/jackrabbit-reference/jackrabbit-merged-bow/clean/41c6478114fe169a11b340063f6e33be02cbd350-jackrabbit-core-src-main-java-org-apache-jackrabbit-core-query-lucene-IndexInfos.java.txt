JCR-3299: Adding new index infos generation is not atomic

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1327914 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.EOFException;
+import java.util.Arrays;
-        long gen = getCurrentGeneration(getFileNames(dir, baseName), baseName);
-        if (gen == -1) {
+        long gens[] = getGenerations(getFileNames(dir, baseName), baseName);
+        if (gens.length == 0) {
-            this.generation = gen;
-            read();
+            // read most recent generation
+            for (int i = gens.length - 1; i >= 0; i--) {
+                try {
+                    this.generation = gens[i];
+                    read();
+                    break;
+                } catch (EOFException e) {
+                    String fileName = getFileName(gens[i]);
+                    log.warn("deleting invalid index infos file: " + fileName);
+                    dir.deleteFile(fileName);
+                    // reset generation
+                    this.generation = 0;
+                }
+            }
-     * Returns the most current generation of the given files.
+     * Returns the generations fo the given files in ascending order.
-     * @param fileNames the file names from where to obtain the generation.
+     * @param fileNames the file names from where to obtain the generations.
-     * @return the most current generation.
+     * @return the generations in ascending order.
-    private static long getCurrentGeneration(String[] fileNames, String base) {
-        long max = -1;
-        int i = 0;
-        while (i < fileNames.length) {
-            long gen = generationFromFileName(fileNames[i], base);
-            if (gen > max) {
-                max = gen;
-            }
-            i++;
+    private static long[] getGenerations(String[] fileNames, String base) {
+        long[] gens = new long[fileNames.length];
+        for (int i = 0; i < fileNames.length; i++) {
+            gens[i] = generationFromFileName(fileNames[i], base);
-        return max;
+        Arrays.sort(gens);
+        return gens;

INS26 INS26 INS40 INS40 INS5 UPD42 INS39 INS85 INS24 MOV21 INS27 INS8 UPD66 UPD66 UPD66 INS5 INS58 MOV27 MOV37 INS8 INS32 UPD42 UPD42 INS85 INS40 INS34 INS24 INS39 INS85 UPD42 INS3 INS39 MOV59 MOV21 INS42 INS42 INS42 UPD42 INS58 INS27 INS37 INS8 INS5 INS40 INS39 INS59 UPD42 MOV42 INS34 INS42 INS54 INS39 INS85 INS2 MOV32 INS42 INS27 MOV8 INS12 INS42 INS42 INS40 INS34 INS10 INS44 INS8 INS43 INS42 INS60 INS21 INS21 INS21 INS2 INS42 INS43 INS59 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS22 INS34 INS42 INS2 INS45 INS42 INS52 INS42 INS42 INS42 DEL34 DEL38 DEL27 DEL42 DEL39 DEL39 DEL34 DEL38 DEL42 DEL42 DEL39 DEL60 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL27 DEL8 DEL25 DEL8 DEL61