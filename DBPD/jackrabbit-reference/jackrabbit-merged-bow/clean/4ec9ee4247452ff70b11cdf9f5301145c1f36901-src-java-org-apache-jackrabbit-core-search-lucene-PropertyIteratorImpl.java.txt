- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.PropertyIterator;
+import javax.jcr.PropertyIterator;
- * @author Marcel Reutegger
- * @version $Revision:  $, $Date:  $
-	this.nodes = nodes;
+        this.nodes = nodes;
-	if (props != null && props.length > 0) {
-	    this.props = props;
-	}
-	try {
-	    fetchNext();
-	} catch (RepositoryException e) {
-	    // FIXME this is bad error handling!
-	    log.error("Exception retrieving property: " + e.toString());
-	}
+        if (props != null && props.length > 0) {
+            this.props = props;
+        }
+        try {
+            fetchNext();
+        } catch (RepositoryException e) {
+            // FIXME this is bad error handling!
+            log.error("Exception retrieving property: " + e.toString());
+        }
-	if (next == null) {
-	    throw new NoSuchElementException();
-	}
-	try {
-	    Property tmp = next;
-	    fetchNext();
-	    pos++;
-	    return tmp;
-	} catch (RepositoryException e) {
-	    log.error("Exception retrieving property: " + e.toString());
-	    // FIXME this is bad error handling!
-	    throw new NoSuchElementException();
-	}
+        if (next == null) {
+            throw new NoSuchElementException();
+        }
+        try {
+            Property tmp = next;
+            fetchNext();
+            pos++;
+            return tmp;
+        } catch (RepositoryException e) {
+            log.error("Exception retrieving property: " + e.toString());
+            // FIXME this is bad error handling!
+            throw new NoSuchElementException();
+        }
-	while (skipNum-- > 0) {
-	    next();
-	}
+        while (skipNum-- > 0) {
+            next();
+        }
-	return -1;
+        return -1;
-	return pos;
+        return pos;
-	throw new UnsupportedOperationException("remove");
+        throw new UnsupportedOperationException("remove");
-	return (next != null);
+        return (next != null);
-	return nextProperty();
+        return nextProperty();
-	next = null;
-	if (currentProps == null) {
-	    // try to get next PropertyIterator
-	    if (nodes.hasNext()) {
-		if (props != null) {
-		    currentProps = new FilteredPropertyIterator(props, nodes.nextNode());
-		} else {
-		    currentProps = nodes.nextNode().getProperties();
-		}
-	    }
-	}
+        next = null;
+        if (currentProps == null) {
+            // try to get next PropertyIterator
+            if (nodes.hasNext()) {
+                if (props != null) {
+                    currentProps = new FilteredPropertyIterator(props, nodes.nextNode());
+                } else {
+                    currentProps = nodes.nextNode().getProperties();
+                }
+            }
+        }
-	if (currentProps != null) {
-	    next = currentProps.nextProperty();
-	    if (!currentProps.hasNext()) {
-		// reset current iterator
-		currentProps = null;
-	    }
-	}
+        if (currentProps != null) {
+            next = currentProps.nextProperty();
+            if (!currentProps.hasNext()) {
+                // reset current iterator
+                currentProps = null;
+            }
+        }

MOV26 DEL66 DEL65 DEL66 DEL65