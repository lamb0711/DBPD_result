- Remove status from ItemImpl and use status in ItemState
- Fixed ItemImpl.isSame(). ItemState always has an overlayed state.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@433630 13f79535-47bb-0310-9956-ffa450edef68

-    protected static final int STATUS_NORMAL = 0;
-    protected static final int STATUS_MODIFIED = 1;
-    protected static final int STATUS_DESTROYED = 2;
-    protected static final int STATUS_INVALIDATED = 3;
-
-    private int status;
-        status = STATUS_NORMAL;
-        // short-cut: read-only implementations always return false.
-        if (!isSupportedOption(Repository.LEVEL_2_SUPPORTED)) {
-            return false;
-        }
-        return state.isTransient() && state.getOverlayedState() == null;
+        return state.getStatus() == ItemState.STATUS_NEW;
-        // short-cut: read-only implementations always return false.
-        if (!isSupportedOption(Repository.LEVEL_2_SUPPORTED)) {
-            return false;
-        }
-        return state.isTransient() && state.getOverlayedState() != null;
+        return state.getStatus() == ItemState.STATUS_EXISTING_MODIFIED;
+            if (this.state == other.state) {
+                return true;
+            }
-                // TODO: TO_BE_FIXED check if this is sufficient check (SPI-id)
-                ItemId thisId = (state.hasOverlayedState()) ? state.getOverlayedState().getId() : state.getId();
-                ItemId otherId = (other.getItemState().hasOverlayedState()) ? other.getItemState().getOverlayedState().getId() : other.getItemState().getId();
+                ItemId thisId = state.getOverlayedState().getId();
+                ItemId otherId = other.state.getOverlayedState().getId();
-        status = STATUS_NORMAL;
-        // set state of this instance to 'destroyed'
-        status = STATUS_DESTROYED;
-        status = STATUS_MODIFIED;
-                    // now set state of this instance to 'destroyed'
-                    status = STATUS_DESTROYED;
-                    // now set state of this instance to 'destroyed'
-                    status = STATUS_DESTROYED;
-        // now render this instance 'invalid'
-        status = STATUS_INVALIDATED;
-        switch (status) {
-            case STATUS_NORMAL:
-            case STATUS_MODIFIED:
-                return;
-
-            case STATUS_DESTROYED:
-            case STATUS_INVALIDATED:
-                throw new InvalidItemStateException("Item '" + getPath() + "' doesn't exist anymore");
+        if (state == null || !state.isValid()) {
+            throw new InvalidItemStateException("Item '" + getPath() + "' doesn't exist anymore");

INS25 INS27 INS27 INS27 INS8 MOV32 INS40 MOV32 INS40 INS25 INS27 INS38 MOV53 UPD42 UPD42 INS27 INS8 INS42 INS33 INS32 INS22 INS40 INS41 INS42 INS42 INS52 INS42 INS9 MOV32 INS32 MOV32 MOV42 INS40 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL7 DEL21 DEL42 DEL40 DEL32 DEL38 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL40 DEL32 DEL38 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL32 DEL36 DEL42 DEL42 DEL32 DEL16 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL36 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL16 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL49 DEL42 DEL49 DEL41 DEL42 DEL49 DEL42 DEL49 DEL50