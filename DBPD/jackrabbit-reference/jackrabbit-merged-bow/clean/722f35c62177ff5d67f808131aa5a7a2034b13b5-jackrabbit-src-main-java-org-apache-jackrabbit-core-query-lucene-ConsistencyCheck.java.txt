JCR-555: ConsistencyCheck uses too much memory

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@439262 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Map;
-import java.util.HashMap;
-     * All the documents within the index.
+     * All the document UUIDs within the index.
-    private Map documents;
+    private Set documentUUIDs;
-        // collect all documents
-        documents = new HashMap();
+        // collect all documents UUIDs
+        documentUUIDs = new HashSet();
+                if (i > 0 && i % (reader.maxDoc() / 5) == 0) {
+                    long progress = Math.round((100.0 * (float) i) / ((float) reader.maxDoc() * 2f));
+                    log.info("progress: " + progress + "%");
+                }
-                    Document old = (Document) documents.put(uuid, d);
-                    if (old != null) {
+                    if (!documentUUIDs.add(uuid)) {
-        // run through documents
-        for (Iterator it = documents.values().iterator(); it.hasNext();) {
-            Document d = (Document) it.next();
-            UUID uuid = UUID.fromString(d.get(FieldNames.UUID));
-            String parentUUIDString = d.get(FieldNames.PARENT);
-            UUID parentUUID = null;
-            if (parentUUIDString.length() > 0) {
-                parentUUID = UUID.fromString(parentUUIDString);
+        reader = index.getIndexReader();
+        try {
+            // run through documents again and check parent
+            for (int i = 0; i < reader.maxDoc(); i++) {
+                if (i > 0 && i % (reader.maxDoc() / 5) == 0) {
+                    long progress = Math.round((100.0 * (float) i) / ((float) reader.maxDoc() * 2f));
+                    log.info("progress: " + (progress + 50) + "%");
+                }
+                if (reader.isDeleted(i)) {
+                    continue;
+                }
+                Document d = reader.document(i);
+                UUID uuid = UUID.fromString(d.get(FieldNames.UUID));
+                String parentUUIDString = d.get(FieldNames.PARENT);
+                UUID parentUUID = null;
+                if (parentUUIDString.length() > 0) {
+                    parentUUID = UUID.fromString(parentUUIDString);
+                }
+                if (parentUUID == null || documentUUIDs.contains(parentUUID)) {
+                    continue;
+                }
+                // parent is missing
+                NodeId parentId = new NodeId(parentUUID);
+                if (stateMgr.hasItemState(parentId)) {
+                    errors.add(new MissingAncestor(uuid, parentUUID));
+                } else {
+                    errors.add(new UnknownParent(uuid, parentUUID));
+                }
-            if (parentUUID == null || documents.containsKey(parentUUID)) {
-                continue;
-            }
-            // parent is missing
-            NodeId parentId = new NodeId(parentUUID);
-            if (stateMgr.hasItemState(parentId)) {
-                errors.add(new MissingAncestor(uuid, parentUUID));
-            } else {
-                errors.add(new UnknownParent(uuid, parentUUID));
-            }
+        } finally {
+            reader.close();
-            while (parentId != null && !documents.containsKey(parentId.getUUID())) {
+            while (parentId != null && !documentUUIDs.contains(parentId.getUUID())) {
-                    documents.put(n.getNodeId().getUUID(), d);
+                    documentUUIDs.add(n.getNodeId().getUUID());
-                documents.put(node.getNodeId().getUUID(), d);
+                documentUUIDs.add(node.getNodeId().getUUID());

UPD43 UPD42 UPD42 INS21 INS54 UPD66 INS7 INS8 INS8 UPD42 INS42 INS32 MOV24 INS21 UPD43 INS42 INS42 INS58 INS27 INS37 INS32 UPD42 INS25 INS39 INS59 INS42 INS32 INS42 INS25 INS25 INS42 INS42 MOV32 INS27 INS8 INS42 INS34 UPD42 MOV42 UPD42 MOV42 INS27 INS8 INS32 INS8 UPD42 UPD42 UPD42 UPD42 INS27 INS27 INS60 INS21 INS27 INS27 INS60 INS21 INS42 INS42 INS42 INS18 INS32 MOV32 INS42 INS34 INS27 INS34 INS39 INS59 INS32 INS38 INS42 INS34 INS27 INS34 INS39 INS59 INS32 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 INS42 INS36 INS42 INS32 INS42 INS42 INS27 INS32 INS42 INS36 INS42 INS32 INS42 INS42 INS27 INS27 INS42 INS42 INS27 INS45 INS42 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS45 INS36 INS45 INS32 INS34 INS36 INS36 INS32 INS34 INS36 INS36 INS27 INS42 INS42 INS27 INS27 INS42 INS42 INS27 INS27 INS42 INS34 INS34 INS11 INS11 INS34 INS34 INS11 INS11 INS34 INS39 INS42 INS39 INS32 INS39 INS42 INS39 INS32 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42