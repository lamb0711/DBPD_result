JCR-1799 updating events swallowed (CacheBehavior.OBSERVATION)   	
JCR-1783 incomplete changelog when combining move with removal of new destination parent

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@704361 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.util.WeakIdentityCollection;
-import org.apache.jackrabbit.spi.ItemId;
-import org.apache.jackrabbit.spi.NodeId;
-import org.apache.jackrabbit.spi.PropertyId;
-import org.apache.jackrabbit.spi.Name;
-import org.apache.jackrabbit.spi.Path;
-import org.apache.jackrabbit.jcr2spi.hierarchy.PropertyEntry;
+import org.apache.jackrabbit.spi.ItemId;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.util.WeakIdentityCollection;
-import javax.jcr.RepositoryException;
-import javax.jcr.ItemNotFoundException;
+import javax.jcr.ItemNotFoundException;
+import javax.jcr.RepositoryException;
-import java.util.Iterator;
+import java.util.Iterator;
-
-        if (!entry.isAvailable()) {
-            entry.setItemState(this);
-        }
-     * Returns <code>true</code> if this item state is valid, that is its status
-     * is one of:
-     * <ul>
-     * <li>{@link Status#EXISTING}</li>
-     * <li>{@link Status#EXISTING_MODIFIED}</li>
-     * <li>{@link Status#NEW}</li>
-     * </ul>
+     * Returns <code>true</code> if this item state is valid and can be accessed.
+     * @see Status#isValid(int)
+     * @see Status#isStale(int)
-        return Status.isValid(getStatus());
+        return Status.isValid(getStatus()) || Status.isStale(getStatus());
-    public abstract ItemId getId();
+    public abstract ItemId getId() throws RepositoryException;
-    public abstract ItemId getWorkspaceId();
+    public abstract ItemId getWorkspaceId() throws RepositoryException;
-        if (Status.isTerminal(oldStatus)) {
+        if (oldStatus == Status.REMOVED) {
-     * Used on the target state of a save call AFTER the changelog has been
-     * successfully submitted to the SPI..
-     *
-     * @param changeLog
-     * @throws IllegalStateException if this state is a 'workspace' state.
-     */
-    abstract void persisted(ChangeLog changeLog) throws IllegalStateException;
-
-    /**
-     * Retrieved a fresh ItemState from the persistent layer and merge its
-     * data with this state in order to reload it. In case of a NEW state retrieving
-     * the state from the persistent layer is only possible if the state has
-     * been persisted.
-     *
-     * @param keepChanges
-     */
-    public void reload(boolean keepChanges) {
-        ItemId id = getWorkspaceId();
-        ItemState tmp;
-        try {
-            if (isNode()) {
-                tmp = isf.createNodeState((NodeId) id, (NodeEntry) getHierarchyEntry());
-            } else {
-                tmp = isf.createPropertyState((PropertyId) id, (PropertyEntry) getHierarchyEntry());
-            }
-        } catch (ItemNotFoundException e) {
-            // TODO: deal with moved items separately
-            // remove hierarchyEntry (including all children and set
-            // state-status to REMOVED (or STALE_DESTROYED)
-            log.debug("Item '" + id + "' cannot be found on the persistent layer -> remove.");
-            getHierarchyEntry().remove();
-            return;
-        } catch (RepositoryException e) {
-            // TODO: rather throw? remove from parent?
-            log.warn("Exception while reloading item state: " + e);
-            log.debug("Stacktrace: ", e);
-            return;
-        }
-
-        boolean modified = merge(tmp, keepChanges);
-        if (status == Status.NEW || status == Status.INVALIDATED) {
-            setStatus(Status.EXISTING);
-        } else if (modified) {
-            // start notification by marking this state modified.
-            setStatus(Status.MODIFIED);
-        }
-    }
-
-    /**

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS43 MOV43 INS65 INS65 INS65 INS65 INS42 UPD66 MOV66 INS68 INS68 INS27 INS27 INS42 INS42 INS69 INS42 INS42 INS69 MOV32 INS32 INS42 INS40 INS39 INS39 INS42 INS42 INS32 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL52 DEL32 DEL21 DEL8 DEL25 DEL66 DEL66 DEL66 DEL42 DEL42 DEL67 DEL65 DEL66 DEL66 DEL42 DEL42 DEL67 DEL65 DEL66 DEL66 DEL42 DEL42 DEL67 DEL65 DEL66 DEL66 DEL65 DEL65 DEL42 DEL42 DEL42 DEL32 DEL66 DEL66 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL43 DEL42 DEL32 DEL11 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL43 DEL42 DEL32 DEL11 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL21 DEL41 DEL8 DEL12 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL32 DEL21 DEL8 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL31