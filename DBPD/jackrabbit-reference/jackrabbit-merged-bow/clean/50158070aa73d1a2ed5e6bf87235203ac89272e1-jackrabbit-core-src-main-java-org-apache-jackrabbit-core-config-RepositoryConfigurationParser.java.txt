JCR-3389 Implement a MultiDataStore

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1409177 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.data.MultiDataStore;
+import org.apache.jackrabbit.core.data.MultiDataStoreAware;
+import org.w3c.dom.Attr;
+import org.w3c.dom.DOMException;
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.TypeInfo;
+import org.w3c.dom.UserDataHandler;
+    /** Name of the primary DataStore class attribute. */
+    public static final String PRIMARY_DATASTORE_ATTRIBUTE = "primary";
+
+    /** Name of the archive DataStore class attribute. */
+    public static final String ARCHIVE_DATASTORE_ATTRIBUTE = "archive";
+
+     * Its also possible to configure a multi data store. The configuration uses following format:
+     * <pre>
+     *   &lt;DataStore class="org.apache.jackrabbit.core.data.MultiDataStore"&gt;
+     *     &lt;param name="primary" value="org.apache.jackrabbit.core.data.db.XXDataStore"&gt;
+     *         &lt;param name="..." value="..."&gt;
+     *         ...
+     *     &lt;/param&gt;
+     *     &lt;param name="archive" value="org.apache.jackrabbit.core.data.db.XXDataStore"&gt;
+     *         &lt;param name="..." value="..."&gt;
+     *         ...
+     *     &lt;/param&gt;
+     *   &lt;/DataStore&gt;
+     * </pre>
-                        BeanConfig bc =
-                            parseBeanConfig(parent, DATA_STORE_ELEMENT);
+                        BeanConfig bc = 
+                        		parseBeanConfig(parent, DATA_STORE_ELEMENT);
+                        bc.setValidate(false);
+                        if (store instanceof MultiDataStore) {
+                        	DataStore primary = null;
+                        	DataStore archive = null;
+                        	NodeList subParamNodes = child.getChildNodes();
+                            for (int x = 0; x < subParamNodes.getLength(); x++) {
+                                Node paramNode = subParamNodes.item(x);
+                                if (paramNode.getNodeType() == Node.ELEMENT_NODE 
+                                		&& (PRIMARY_DATASTORE_ATTRIBUTE.equals(paramNode.getAttributes().getNamedItem("name").getNodeValue())
+                                		|| ARCHIVE_DATASTORE_ATTRIBUTE.equals(paramNode.getAttributes().getNamedItem("name").getNodeValue()))) {
+                                    final ElementImpl datastoreElement = new ElementImpl(DATA_STORE_ELEMENT, Node.ELEMENT_NODE, paramNode.getAttributes(), paramNode.getChildNodes());
+                                	ElementImpl parent = new ElementImpl("parent", Node.ELEMENT_NODE, null, new NodeList() {
+										
+										@Override
+										public Node item(int index) {
+											return datastoreElement;
+										}
+										
+										@Override
+										public int getLength() {
+											return 1;
+										}
+									});
+                                	DataStore subDataStore = getDataStoreFactory(parent, directory).getDataStore();
+                                	if (!MultiDataStoreAware.class.isAssignableFrom(subDataStore.getClass())) {
+                                		throw new ConfigurationException("Only MultiDataStoreAware datastore's can be used within a MultiDataStore.");
+                                	}
+                                	String type = getAttribute((Element) paramNode, NAME_ATTRIBUTE);
+                                	if (PRIMARY_DATASTORE_ATTRIBUTE.equals(type)) {
+                                        primary = subDataStore;
+                                	} else if (ARCHIVE_DATASTORE_ATTRIBUTE.equals(type)) {
+                                        archive = subDataStore;
+                                	}
+                                }
+                            }
+                            if (primary == null || archive == null) {
+                        		throw new ConfigurationException("A MultiDataStore must have configured a primary and archive datastore");
+                            }
+                        	((MultiDataStore) store).setPrimaryDataStore(primary);
+                        	((MultiDataStore) store).setArchiveDataStore(archive);
+                        }
+    
+    private class ElementImpl implements org.w3c.dom.Element {
+
+    	private String nodeName;
+    	private short nodeType;
+    	private NodeList childNodes;
+    	private NamedNodeMap params;
+    	
+    	public ElementImpl(String nodeName, short nodeType, NamedNodeMap params, NodeList nodeList) {
+    		this.nodeName = nodeName;
+    		this.nodeType = nodeType;
+    		this.childNodes = nodeList;
+    		this.params = params;
+    	}
+    	
+		@Override
+		public Node appendChild(Node newChild) throws DOMException {
+			return null;
+		}
+
+		@Override
+		public Node cloneNode(boolean deep) {
+			return null;
+		}
+
+		@Override
+		public short compareDocumentPosition(Node other) throws DOMException {
+			return 0;
+		}
+
+		@Override
+		public NamedNodeMap getAttributes() {
+			return null;
+		}
+
+		@Override
+		public String getBaseURI() {
+			return null;
+		}
+
+		@Override
+		public NodeList getChildNodes() {
+			return childNodes;
+		}
+
+		@Override
+		public Object getFeature(String feature, String version) {
+			return null;
+		}
+
+		@Override
+		public Node getFirstChild() {
+			return null;
+		}
+
+		@Override
+		public Node getLastChild() {
+			return null;
+		}
+
+		@Override
+		public String getLocalName() {
+			return null;
+		}
+
+		@Override
+		public String getNamespaceURI() {
+			return null;
+		}
+
+		@Override
+		public Node getNextSibling() {
+			return null;
+		}
+
+		@Override
+		public String getNodeName() {
+			return nodeName;
+		}
+
+		@Override
+		public short getNodeType() {
+			return nodeType;
+		}
+
+		@Override
+		public String getNodeValue() throws DOMException {
+			return null;
+		}
+
+		@Override
+		public Document getOwnerDocument() {
+			return null;
+		}
+
+		@Override
+		public Node getParentNode() {
+			return null;
+		}
+
+		@Override
+		public String getPrefix() {
+			return null;
+		}
+
+		@Override
+		public Node getPreviousSibling() {
+			return null;
+		}
+
+		@Override
+		public String getTextContent() throws DOMException {
+			return null;
+		}
+
+		@Override
+		public Object getUserData(String key) {
+			return null;
+		}
+
+		@Override
+		public boolean hasAttributes() {
+			return false;
+		}
+
+		@Override
+		public boolean hasChildNodes() {
+			return false;
+		}
+
+		@Override
+		public Node insertBefore(Node newChild, Node refChild)
+				throws DOMException {
+			return null;
+		}
+
+		@Override
+		public boolean isDefaultNamespace(String namespaceURI) {
+			return false;
+		}
+
+		@Override
+		public boolean isEqualNode(Node arg) {
+			return false;
+		}
+
+		@Override
+		public boolean isSameNode(Node other) {
+			return false;
+		}
+
+		@Override
+		public boolean isSupported(String feature, String version) {
+			return false;
+		}
+
+		@Override
+		public String lookupNamespaceURI(String prefix) {
+			return null;
+		}
+
+		@Override
+		public String lookupPrefix(String namespaceURI) {
+			return null;
+		}
+
+		@Override
+		public void normalize() {
+		}
+
+		@Override
+		public Node removeChild(Node oldChild) throws DOMException {
+			return null;
+		}
+
+		@Override
+		public Node replaceChild(Node newChild, Node oldChild)
+				throws DOMException {
+			return null;
+		}
+
+		@Override
+		public void setNodeValue(String nodeValue) throws DOMException {
+		}
+
+		@Override
+		public void setPrefix(String prefix) throws DOMException {
+		}
+
+		@Override
+		public void setTextContent(String textContent) throws DOMException {
+		}
+
+		@Override
+		public Object setUserData(String key, Object data,
+				UserDataHandler handler) {
+			return null;
+		}
+
+		@Override
+		public String getAttribute(String name) {
+			return null;
+		}
+
+		@Override
+		public String getAttributeNS(String namespaceURI, String localName)
+				throws DOMException {
+			return null;
+		}
+
+		@Override
+		public Attr getAttributeNode(String name) {
+			return (Attr) params.getNamedItem(VALUE_ATTRIBUTE);
+		}
+
+		@Override
+		public Attr getAttributeNodeNS(String namespaceURI, String localName)
+				throws DOMException {
+			return null;
+		}
+
+		@Override
+		public NodeList getElementsByTagName(String name) {
+			return null;
+		}
+
+		@Override
+		public NodeList getElementsByTagNameNS(String namespaceURI,
+				String localName) throws DOMException {
+			return null;
+		}
+
+		@Override
+		public TypeInfo getSchemaTypeInfo() {
+			return null;
+		}
+
+		@Override
+		public String getTagName() {
+			return null;
+		}
+
+		@Override
+		public boolean hasAttribute(String name) {
+			return false;
+		}
+
+		@Override
+		public boolean hasAttributeNS(String namespaceURI, String localName)
+				throws DOMException {
+			return false;
+		}
+
+		@Override
+		public void removeAttribute(String name) throws DOMException {
+		}
+
+		@Override
+		public void removeAttributeNS(String namespaceURI, String localName)
+				throws DOMException {
+		}
+
+		@Override
+		public Attr removeAttributeNode(Attr oldAttr) throws DOMException {
+			return null;
+		}
+
+		@Override
+		public void setAttribute(String name, String value) throws DOMException {
+		}
+
+		@Override
+		public void setAttributeNS(String namespaceURI, String qualifiedName,
+				String value) throws DOMException {
+		}
+
+		@Override
+		public Attr setAttributeNode(Attr newAttr) throws DOMException {
+			return null;
+		}
+
+		@Override
+		public Attr setAttributeNodeNS(Attr newAttr) throws DOMException {
+			return null;
+		}
+
+		@Override
+		public void setIdAttribute(String name, boolean isId)
+				throws DOMException {
+		}
+
+		@Override
+		public void setIdAttributeNS(String namespaceURI, String localName,
+				boolean isId) throws DOMException {
+		}
+
+		@Override
+		public void setIdAttributeNode(Attr idAttr, boolean isId)
+				throws DOMException {
+		}
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS55 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS42 INS43 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS40 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS43 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS39 INS42 INS41 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS41 INS42 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 INS42 INS33 INS33 INS42 INS34 INS33 INS33 INS42 INS42 INS42 INS33 INS33 INS33 INS33 INS33 INS33 INS42 INS42 INS33 INS33 INS33 INS33 INS33 INS33 INS42 INS33 INS9 INS9 INS42 INS42 INS33 INS42 INS9 INS42 INS9 INS42 INS9 INS42 INS42 INS9 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS42 INS33 INS42 INS11 INS42 INS42 INS33 INS42 INS33 INS42 INS42 INS33 INS33 INS33 INS42 INS9 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS43 INS32 INS8 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 MOV60 INS24 MOV41 MOV58 MOV27 MOV37 INS8 MOV60 INS25 MOV27 INS8 MOV60 INS21 MOV60 INS25 MOV21 MOV41 INS32 INS62 INS8 INS42 INS42 INS9 INS42 INS43 INS60 INS60 INS60 MOV24 INS25 INS21 INS21 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS27 INS8 INS32 INS32 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS60 INS25 INS27 INS27 INS53 INS36 INS42 INS42 INS36 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS33 INS42 INS33 INS14 INS11 INS11 INS42 INS42 INS32 INS27 INS36 INS60 INS60 INS60 MOV25 INS60 INS25 INS43 INS45 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS40 INS27 INS83 INS43 INS59 INS43 INS59 INS43 INS59 INS38 INS43 INS59 INS32 INS8 INS25 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS53 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS40 INS32 INS32 INS43 INS45 INS40 INS33 INS14 INS32 INS42 INS57 INS42 INS32 INS14 INS42 INS11 INS42 INS7 INS42 INS42 INS42 INS21 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS1 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS45 INS43 INS42 INS42 INS42 INS7 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS31 INS31 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS39 INS42 INS41 INS42 INS41 INS42 INS34 DEL8 DEL8