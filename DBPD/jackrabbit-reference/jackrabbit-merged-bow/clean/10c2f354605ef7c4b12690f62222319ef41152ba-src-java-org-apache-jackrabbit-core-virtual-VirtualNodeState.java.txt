- improved versioning / virtual node behaviour
  fixes jira issues: JCR-20, JCR-22 and JCR-23

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@111518 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.state.ItemState;
+import org.apache.jackrabbit.core.ItemImpl;
+import org.apache.jackrabbit.core.InternalValue;
+import org.apache.jackrabbit.core.state.ItemState;
+import org.apache.jackrabbit.core.state.NoSuchItemStateException;
+
+import javax.jcr.PropertyType;
+    protected VirtualItemStateProvider provider;
+    
-    protected VirtualNodeState(String uuid, QName nodeTypeName, String parentUUID) {
+    protected VirtualNodeState(VirtualItemStateProvider provider,
+                               String uuid, QName nodeTypeName, String parentUUID) {
+
+        this.provider = provider;
+
+        // add some props
+        addPropertyEntry(ItemImpl.PROPNAME_PRIMARYTYPE);
+        addPropertyEntry(ItemImpl.PROPNAME_MIXINTYPES);
+    public VirtualPropertyState getPropertyState(QName name)
+            throws NoSuchItemStateException {
+        if (name.equals(ItemImpl.PROPNAME_PRIMARYTYPE)) {
+            VirtualPropertyState state = new VirtualPropertyState(name, getUUID());
+            state.setDefinitionId(provider.getPropDefId(ItemImpl.PROPNAME_PRIMARYTYPE));
+            state.setType(PropertyType.NAME);
+            state.setValues(InternalValue.create(new QName[]{getNodeTypeName()}));
+            return state;
+        } else if (name.equals(ItemImpl.PROPNAME_MIXINTYPES)) {
+            VirtualPropertyState state = new VirtualPropertyState(name, getUUID());
+            state.setDefinitionId(provider.getPropDefId(ItemImpl.PROPNAME_MIXINTYPES));
+            state.setType(PropertyType.NAME);
+            state.setValues(InternalValue.create((QName[]) getMixinTypeNames().toArray(new QName[getMixinTypeNames().size()])));
+            return state;
+        } else if (name.equals(ItemImpl.PROPNAME_UUID)) {
+            VirtualPropertyState state = new VirtualPropertyState(name, getUUID());
+            state.setDefinitionId(provider.getPropDefId(ItemImpl.PROPNAME_UUID));
+            state.setType(PropertyType.STRING);
+            state.setValues(InternalValue.create(new String[]{getUUID()}));
+            return state;
+        }
+        throw new NoSuchItemStateException(name.toString());
+    }

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS44 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS21 INS21 INS21 INS42 INS43 INS42 INS42 INS25 INS53 INS42 INS7 INS32 INS32 INS42 INS32 INS8 INS25 INS14 INS22 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS60 INS21 INS21 INS21 INS41 INS32 INS8 INS25 INS43 INS32 INS52 INS42 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS42 INS40 INS60 INS21 INS21 INS21 INS41 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS42 INS40 INS60 INS21 INS21 INS21 INS41 INS43 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS3 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS42 INS5 INS4 INS43 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS11 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS43 INS85 INS32 INS42 INS42 INS5 INS32 INS43 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS3 INS42 INS42 INS43 INS85 INS32 INS42 INS3 INS42 INS42 INS5 INS4 INS42 INS42 INS5 INS32 INS43 INS85 INS32 INS43 INS85 INS32 INS42 INS42 INS42 INS42 INS42