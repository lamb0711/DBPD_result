JCR-2076: JSR 283: QOM and SQL2
- jcr2spi implementation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@786565 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.query.QueryObjectModelBuilderRegistry;
+import org.apache.jackrabbit.spi.commons.query.QueryObjectModelBuilder;
+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.commons.name.NameConstants;
+import javax.jcr.ValueFactory;
+     * The value factory.
+     */
+    private final ValueFactory valueFactory;
+
+    /**
-     * The query object model factory.
-     */
-    private final QueryObjectModelFactory qomFactory;
-
-    /**
-     * @param session the current session.
+     * @param session     the current session.
-     * @param itemMgr the item manager of the current session.
-     * @param wspManager the workspace manager.
+     * @param itemMgr     the item manager of the current session.
+     * @param wspManager  the workspace manager.
+     * @throws RepositoryException if an error occurs while initializing this
+     *                             query manager.
+        this.valueFactory = mgrProvider.getJcrValueFactory();
-        this.qomFactory = new QueryObjectModelFactoryImpl(
-                mgrProvider.getNamePathResolver(), mgrProvider.getJcrValueFactory()) {
-            
-            protected QueryObjectModel createQuery(QueryObjectModelTree qomTree)
-                    throws InvalidQueryException, RepositoryException {
-                // TODO implementation missing
-                throw new UnsupportedOperationException("Implementation missing: JCR-2107");
-            }
-        };
-        return new QueryImpl(session, mgrProvider, itemMgr, wspManager, statement, language);
+        return new QueryImpl(session, mgrProvider, itemMgr, wspManager,
+                statement, language, null);
-        return new QueryImpl(session, mgrProvider, itemMgr, wspManager, node);
+
+        NamePathResolver resolver = mgrProvider.getNamePathResolver();
+        if (!node.isNodeType(resolver.getJCRName(NameConstants.NT_QUERY))) {
+            throw new InvalidQueryException("Node is not of type nt:query");
+        }
+        if (node.getSession() != session) {
+            throw new InvalidQueryException("Node belongs to a different session.");
+        }
+        String statement = node.getProperty(resolver.getJCRName(NameConstants.JCR_STATEMENT)).getString();
+        String language = node.getProperty(resolver.getJCRName(NameConstants.JCR_LANGUAGE)).getString();
+
+        if (Query.JCR_JQOM.equals(language)) {
+            QueryObjectModelFactory qomFactory = new QOMFactory(
+                    node, resolver, valueFactory);
+            QueryObjectModelBuilder builder = QueryObjectModelBuilderRegistry.getQueryObjectModelBuilder(language);
+            return builder.createQueryObjectModel(statement, qomFactory, valueFactory);
+        } else {
+            return new QueryImpl(session, mgrProvider, itemMgr, wspManager,
+                    statement, language, node);
+        }
-        return qomFactory;        
+        return new QOMFactory(null, mgrProvider.getNamePathResolver(), valueFactory);
+    private class QOMFactory extends QueryObjectModelFactoryImpl {
+
+        private final Node node;
+
+        public QOMFactory(Node node,
+                          NamePathResolver resolver,
+                          ValueFactory factory) {
+            super(resolver, factory);
+            this.node = node;
+        }
+
+        protected QueryObjectModel createQuery(QueryObjectModelTree qomTree)
+                throws InvalidQueryException, RepositoryException {
+            return new QueryObjectModelImpl(session, mgrProvider, itemMgr,
+                    wspManager, qomTree, node);
+        }
+    }

INS26 INS26 INS26 INS26 INS26 MOV23 INS40 INS40 INS40 INS40 INS40 INS55 INS43 MOV21 INS8 INS83 INS42 MOV43 INS23 INS31 MOV31 INS42 UPD42 INS65 MOV21 INS60 INS25 INS25 INS60 INS60 INS25 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS8 UPD66 UPD66 UPD66 UPD66 INS42 INS66 INS66 INS43 INS59 INS38 INS8 INS27 INS8 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS14 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS41 MOV32 INS33 INS42 INS42 MOV32 INS32 INS53 INS32 INS42 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS42 INS60 INS60 INS41 MOV41 INS43 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS14 UPD42 INS42 INS42 INS32 INS14 INS42 INS42 INS14 INS32 INS42 INS32 INS42 MOV43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS22 INS42 UPD43 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS43 INS45 INS43 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 UPD42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL1 DEL14 DEL8 DEL42 DEL45 DEL14 DEL53