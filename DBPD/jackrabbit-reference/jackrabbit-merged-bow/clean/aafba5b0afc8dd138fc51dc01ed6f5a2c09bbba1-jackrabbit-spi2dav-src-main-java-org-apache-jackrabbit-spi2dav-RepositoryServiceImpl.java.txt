JCR-3574: leverage WebDAV 3 compliance class to use absolute paths in Destination header field

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1469312 13f79535-47bb-0310-9956-ffa450edef68

+    /* DAV conformance levels */
+    private Set<String> remoteDavComplianceClasses = null;
+
+        if (isDavClass3(sessionInfo)) {
+            destUri = obtainAbsolutePathFromUri(destUri);
+        }
+        if (isDavClass3(sessionInfo)) {
+            destUri = obtainAbsolutePathFromUri(destUri);
+        }
+    private Set<String> getDavComplianceClasses(SessionInfo sessionInfo) throws RepositoryException {
+        if (this.remoteDavComplianceClasses == null) {
+            OptionsMethod method = new OptionsMethod(uriResolver.getWorkspaceUri(sessionInfo.getWorkspaceName()));
+            try {
+                getClient(sessionInfo).executeMethod(method);
+                method.checkSuccess();
+                Header davHeader = method.getResponseHeader("DAV");
+                if (davHeader!= null) {
+                    // TODO: think about coded-URLs containing a comma
+                    String[] classes = davHeader.getValue().split(",");
+                    this.remoteDavComplianceClasses = new HashSet<String>();
+                    for (String c : classes) {
+                        this.remoteDavComplianceClasses.add(c.trim());
+                    }
+                }
+            } catch (IOException e) {
+                throw new RepositoryException(e);
+            } catch (DavException e) {
+                throw ExceptionConverter.generate(e);
+            } finally {
+                method.releaseConnection();
+            }
+        }
+        return this.remoteDavComplianceClasses;
+    }
+
+    private boolean isDavClass3(SessionInfo sessionInfo) {
+        try {
+            return getDavComplianceClasses(sessionInfo).contains("3");
+        }
+        catch (RepositoryException ex) {
+            log.warn("failure to obtain OPTIONS response", ex);
+            return false;
+        }
+    }
+
+    private static String obtainAbsolutePathFromUri(String uri) {
+        try {
+            java.net.URI u = new java.net.URI(uri);
+            StringBuilder sb = new StringBuilder();
+            sb.append(u.getRawPath());
+            if (u.getRawQuery() != null) {
+                sb.append("?" + u.getRawQuery());
+            }
+            return sb.toString();
+        }
+        catch (java.net.URISyntaxException ex) {
+            log.warn("parsing " + uri, ex);
+            return uri;
+        }
+    }
+    
+            if (isDavClass3(sessionInfo)) {
+                destUri = obtainAbsolutePathFromUri(destUri);
+            }

INS23 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS74 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS43 INS43 INS42 INS33 INS25 INS25 INS43 INS43 INS43 INS42 INS42 INS25 INS41 INS43 INS42 INS54 INS42 INS43 INS42 INS54 INS42 INS42 INS32 INS8 INS32 INS8 INS42 INS42 INS42 INS27 INS8 INS22 INS42 INS8 INS12 INS42 INS8 INS12 INS25 INS42 INS42 INS21 INS42 INS42 INS21 INS22 INS33 INS60 INS54 INS52 INS42 INS41 INS44 INS8 INS60 INS60 INS21 INS25 INS41 INS44 INS8 INS32 INS8 INS7 INS7 INS52 INS42 INS43 INS59 INS8 INS12 INS12 INS8 INS32 INS43 INS42 INS21 INS41 INS43 INS59 INS43 INS59 INS32 INS27 INS8 INS32 INS43 INS42 INS21 INS41 INS42 INS42 INS21 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS21 INS21 INS60 INS25 INS44 INS8 INS44 INS8 INS21 INS32 INS42 INS45 INS42 INS32 INS9 INS40 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS33 INS21 INS42 INS42 INS40 INS32 INS42 INS7 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS32 INS43 INS59 INS27 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS21 INS70 INS42 INS14 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS27 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS5 INS59 INS7 INS44 INS42 INS8 INS43 INS42 INS42 INS42 INS42 INS45 INS32 INS43 INS85 INS42 INS32 INS22 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS52 INS42 INS74 INS42 INS32 INS42 INS42 INS43 INS43 INS22 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS42