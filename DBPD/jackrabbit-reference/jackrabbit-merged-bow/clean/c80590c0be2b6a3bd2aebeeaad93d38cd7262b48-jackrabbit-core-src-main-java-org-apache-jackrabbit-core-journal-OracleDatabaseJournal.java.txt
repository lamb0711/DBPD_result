JCR-3030: Permit using different tablespaces for tables and indexes with Oracle

Patch by Edouard Hue

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1179984 13f79535-47bb-0310-9956-ffa450edef68

- * <li><code>tableSpace</code>: the Oracle tablespace to use</li>
+ * <li><code>tablespace</code>: the tablespace to use for tables</li>
+ * <li><code>indexTablespace</code>: the tablespace to use for indexes</li>
+    /**
+     * The default tablespace clause used when {@link #tablespace} or {@link #indexTablespace}
+     * are not specified.
+     */
+    protected static final String DEFAULT_TABLESPACE_CLAUSE = "";
-    /** the variable for the Oracle table space */
-    public static final String TABLE_SPACE_VARIABLE =
-        "${tableSpace}";
+    /**
+     * Name of the replacement variable in the DDL for {@link #tablespace}.
+     */
+    protected static final String TABLESPACE_VARIABLE = "${tablespace}";
-    /** the Oracle table space to use */
-    protected String tableSpace = "";
+    /**
+     * Name of the replacement variable in the DDL for {@link #indexTablespace}.
+     */
+    protected static final String INDEX_TABLESPACE_VARIABLE = "${indexTablespace}";
+
+    /** The Oracle tablespace to use for tables */
+    protected String tablespace;
+
+    /** The Oracle tablespace to use for indexes */
+    protected String indexTablespace;
+        tablespace = DEFAULT_TABLESPACE_CLAUSE;
+        indexTablespace = DEFAULT_TABLESPACE_CLAUSE;
+    }
+
+    /**
+     * Returns the configured Oracle tablespace for tables.
+     * @return the configured Oracle tablespace for tables.
+     */
+    public String getTablespace() {
+        return tablespace;
+    }
+
+    /**
+     * Sets the Oracle tablespace for tables.
+     * @param tablespaceName the Oracle tablespace for tables.
+     */
+    public void setTablespace(String tablespaceName) {
+        this.tablespace = this.buildTablespaceClause(tablespaceName);
+    }
+    
+    /**
+     * Returns the configured Oracle tablespace for indexes.
+     * @return the configured Oracle tablespace for indexes.
+     */
+    public String getIndexTablespace() {
+        return indexTablespace;
+    }
+    
+    /**
+     * Sets the Oracle tablespace for indexes.
+     * @param tablespace the Oracle tablespace for indexes.
+     */
+    public void setIndexTablespace(String tablespaceName) {
+        this.indexTablespace = this.buildTablespaceClause(tablespaceName);
+    }
+    
+    /**
+     * Constructs the <code>tablespace &lt;tbs name&gt;</code> clause from
+     * the supplied tablespace name. If the name is empty, {@link #DEFAULT_TABLESPACE_CLAUSE}
+     * is returned instead.
+     * 
+     * @param tablespaceName A tablespace name
+     * @return A tablespace clause using the supplied name or
+     * <code>{@value #DEFAULT_TABLESPACE_CLAUSE}</code> if the name is empty
+     */
+    private String buildTablespaceClause(String tablespaceName) {
+        if (tablespaceName == null || tablespaceName.trim().length() == 0) {
+            return DEFAULT_TABLESPACE_CLAUSE;
+        } else {
+            return "tablespace " + tablespaceName.trim();
+        }
-        return super.createCheckSchemaOperation().addVariableReplacement(
-            CheckSchemaOperation.TABLE_SPACE_VARIABLE, tableSpace);
-    }
-
-    /**
-     * Returns the configured Oracle table space.
-     * @return the configured Oracle table space.
-     */
-    public String getTableSpace() {
-        return tableSpace;
-    }
-
-    /**
-     * Sets the Oracle table space.
-     * @param tableSpace the Oracle table space.
-     */
-    public void setTableSpace(String tableSpace) {
-        if (tableSpace != null && tableSpace.trim().length() > 0) {
-            this.tableSpace = "tablespace " + tableSpace.trim();
-        } else {
-            this.tableSpace = "";
+        if (DEFAULT_TABLESPACE_CLAUSE.equals(indexTablespace) && !DEFAULT_TABLESPACE_CLAUSE.equals(tablespace)) {
+            // tablespace was set but not indexTablespace : use the same for both
+            indexTablespace = tablespace;
+        return super.createCheckSchemaOperation()
+            .addVariableReplacement(TABLESPACE_VARIABLE, tablespace)
+            .addVariableReplacement(INDEX_TABLESPACE_VARIABLE, indexTablespace);

MOV31 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS83 MOV43 INS59 UPD83 INS43 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 MOV43 INS42 INS8 INS29 UPD83 INS39 UPD42 MOV44 INS43 UPD42 MOV29 MOV83 MOV39 UPD42 MOV42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 MOV29 MOV78 INS83 MOV43 INS42 INS8 UPD66 INS66 INS65 INS42 INS45 INS42 UPD42 UPD45 INS65 INS42 INS42 INS45 UPD42 INS65 INS42 INS42 INS21 INS21 INS65 INS65 INS41 INS65 INS65 UPD42 INS21 INS42 INS43 INS42 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS25 INS41 INS66 INS65 INS66 INS65 INS66 UPD66 INS65 INS66 INS66 INS65 INS66 UPD66 INS66 INS7 INS7 INS66 INS66 INS42 INS66 INS42 INS66 INS7 UPD66 UPD66 UPD42 UPD66 UPD42 UPD66 INS42 INS7 INS66 INS66 INS65 INS66 INS42 INS66 INS66 INS66 INS65 INS66 INS42 UPD27 MOV27 INS8 INS8 INS27 MOV8 INS32 INS67 INS67 INS67 INS67 INS42 INS42 INS42 INS42 INS22 INS32 INS22 INS32 INS67 INS67 UPD27 UPD27 INS41 INS41 INS32 INS38 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS52 UPD42 MOV42 UPD42 MOV42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 UPD42 INS42 INS27 INS42 INS42 INS42 INS32 MOV48 INS42 INS42 INS42 MOV45 MOV32 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 DEL45 DEL40 DEL32 DEL41 DEL52 DEL42 DEL22 DEL45 DEL52 DEL42 DEL22 DEL27 DEL7 DEL21 DEL8 DEL25 DEL8 DEL31