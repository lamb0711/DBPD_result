JCR-2841 - Avoid path resolution in case of non-wildcard ACEs (follow-up to JCR-2573)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1049520 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.core.id.ItemId;
-import javax.jcr.NamespaceException;
+import javax.jcr.RepositoryException;
- * <code>PrincipalEntryFilter</code>...
+ * <code>EntryFilterImpl</code>...
-    private final Path path;
-    private final PathResolver resolver;
+    private final PathProvider pathProvider;
-    EntryFilterImpl(Collection<String> principalNames, Path path, PathResolver resolver) {
+    EntryFilterImpl(Collection<String> principalNames, final ItemId id, final SessionImpl sessionImpl) {
-        this.path = path;
-        this.resolver = resolver;
+        this.pathProvider = new PathProvider() {
+            public String getPath() throws RepositoryException {
+                Path p = sessionImpl.getHierarchyManager().getPath(id);
+                return sessionImpl.getJCRPath(p);
+            }
+        };
+    }
+
+    EntryFilterImpl(Collection<String> principalNames, final Path absPath, final PathResolver pathResolver) {
+        this.principalNames = principalNames;
+        this.pathProvider = new PathProvider() {
+            public String getPath() throws RepositoryException {
+                return pathResolver.getJCRPath(absPath);
+            }
+        };
-            if (((ACLTemplate.Entry) ace).getRestrictions().isEmpty()) {
+            ACLTemplate.Entry entry = (ACLTemplate.Entry) ace;
+            if (!entry.hasRestrictions()) {
-                    return ((ACLTemplate.Entry) ace).matches(getPath());
-                } catch (NamespaceException e) {
+                    return entry.matches(getPath());
+                } catch (RepositoryException e) {
-    String getPath() throws NamespaceException {
+    String getPath() throws RepositoryException {
-            itemPath = resolver.getJCRPath(path);
+            itemPath = pathProvider.getPath();
+
+    //--------------------------------------------------------------------------
+    /**
+     * Interface for lazy calculation of the JCR path used for evaluation of ACE
+     * matching in case of entries defining restriction(s).
+     */
+    private interface PathProvider {
+
+        String getPath() throws RepositoryException;
+
+    }

INS26 INS26 INS40 INS40 UPD40 INS31 INS55 INS43 INS42 MOV44 INS44 INS44 INS8 INS44 UPD43 INS29 INS83 INS42 INS31 UPD66 INS42 UPD42 INS83 INS43 INS42 INS83 INS43 INS42 MOV21 INS21 INS74 INS42 INS83 MOV43 UPD42 INS83 MOV43 INS42 UPD42 INS65 INS43 INS42 INS43 INS42 INS42 INS7 INS43 INS43 INS66 INS66 INS42 INS42 INS22 INS14 INS42 INS42 UPD42 INS14 INS60 INS52 INS42 INS43 INS1 UPD42 UPD42 INS43 INS1 INS43 INS59 INS38 INS42 INS31 INS42 INS31 INS40 INS42 MOV11 INS32 INS83 INS43 INS42 INS43 INS8 INS83 INS43 INS42 INS43 INS8 INS42 UPD42 MOV42 UPD42 UPD42 INS42 INS42 INS60 INS41 INS42 INS42 INS41 MOV43 INS59 INS32 INS32 UPD43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS32 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL42 DEL40 DEL43 DEL42 DEL11 DEL36 DEL32 DEL42 DEL32 DEL36 DEL42