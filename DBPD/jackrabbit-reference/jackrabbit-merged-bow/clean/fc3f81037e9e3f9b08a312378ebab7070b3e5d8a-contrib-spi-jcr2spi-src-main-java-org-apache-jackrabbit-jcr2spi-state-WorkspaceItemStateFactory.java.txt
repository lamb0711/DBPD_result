work in progress

- replace usage of UUID by uniqueID unless refering to 'jcr:uuid'
- PropertyImpl.checkValidReference: don't rely on Node-value to be NodeImpl
- spi.Event: getUUID() not used -> remove


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@483477 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.InputStream;
-            String uuid = null;
+            String uniqueID = null;
-                uuid = info.getId().getUUID();
+                uniqueID = info.getId().getUniqueID();
-            NodeState state = new NodeState(info.getQName(), uuid, parent, info.getNodetype(),
+            NodeState state = new NodeState(info.getQName(), uniqueID, parent, info.getNodetype(),
-                entries.add(ci.getName(), ci.getUUID(), ci.getIndex());
+                entries.add(ci.getName(), ci.getUniqueID(), ci.getIndex());
-                InputStream[] ins = info.getValuesAsStream();
-                qValues = new QValue[ins.length];
-                for (int i = 0; i < ins.length; i++) {
-                    qValues[i] = QValue.create(ins[i]);
-                }
+                qValues = QValue.create(info.getValuesAsStream(), PropertyType.BINARY);
-                qValues = new QValue[str.length];
-                for (int i = 0; i < str.length; i++) {
-                    qValues[i] = QValue.create(str[i], info.getType());
-                }
+                qValues = QValue.create(str, info.getType());
-     * type <code>REFERENCE</code>) to a particular node (denoted by its uuid).
+     * type <code>REFERENCE</code>) to a particular node (denoted by its unique ID).
-            if (nodeState.getUUID() == null) {
+            if (nodeState.getUniqueID() == null) {
-            // nodestate has a uuid and is potentially mix:referenceable
+            // nodestate has a unique ID and is potentially mix:referenceable
-            if (nodeState.getUUID() == null) {
+            if (nodeState.getUniqueID() == null) {
-            // nodestate has a uuid and is potentially mix:referenceable
+            // nodestate has a uniqueID and is potentially mix:referenceable

UPD66 INS8 INS8 UPD42 MOV21 MOV60 MOV21 UPD42 UPD42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 MOV32 INS40 INS42 DEL40 DEL26 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL8 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL8