JCR-1158: jcr2spi spi2dav getProperties returns only cached properties

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@582346 13f79535-47bb-0310-9956-ffa450edef68

-            NodeId parentId = getParentId(propSet, sessionInfo);
-            NodeId id = uriResolver.buildNodeId(parentId, nodeResponse, sessionInfo.getWorkspaceName());
-
-            NodeInfoImpl nInfo = new NodeInfoImpl(id, parentId, propSet, resolver);
-            if (propSet.contains(ItemResourceConstants.JCR_REFERENCES)) {
-                HrefProperty refProp = new HrefProperty(propSet.get(ItemResourceConstants.JCR_REFERENCES));
-                Iterator hrefIter = refProp.getHrefs().iterator();
-                while(hrefIter.hasNext()) {
-                    String propertyHref = hrefIter.next().toString();
-                    PropertyId propertyId = uriResolver.getPropertyId(propertyHref, sessionInfo);
-                    nInfo.addReference(propertyId);
-                }
-            }
+            NodeId parentId = getParentId(propSet, sessionInfo);
+
+            NodeInfoImpl nInfo = buildNodeInfo(nodeResponse, parentId, propSet, sessionInfo, resolver);
+
-        // set of properties to be retrieved
-        DavPropertyNameSet nameSet = new DavPropertyNameSet();
-        nameSet.add(ItemResourceConstants.JCR_NAME);
-        nameSet.add(ItemResourceConstants.JCR_INDEX);
-        nameSet.add(ItemResourceConstants.JCR_PARENT);
-        nameSet.add(ItemResourceConstants.JCR_PRIMARYNODETYPE);
-        nameSet.add(ItemResourceConstants.JCR_MIXINNODETYPES);
-        nameSet.add(ItemResourceConstants.JCR_REFERENCES);
-        nameSet.add(ItemResourceConstants.JCR_UUID);
-        nameSet.add(ItemResourceConstants.JCR_PATH);
-        nameSet.add(DavPropertyName.RESOURCETYPE);
+        // TODO: implement batch read properly:
+        // currently: missing 'value/values' property PropertyInfo cannot be built
+        // currently: missing prop-names with child-NodeInfo
+        List l = new ArrayList();
+        l.add(getNodeInfo(sessionInfo, nodeId));
+        return l.iterator();
+    }
-        DavMethodBase method = null;
-        try {
-            String uri = getItemUri(nodeId, sessionInfo);
-            method = new PropFindMethod(uri, nameSet, DEPTH_1);
-            getClient(sessionInfo).executeMethod(method);
-            method.checkSuccess();
-
-            MultiStatusResponse[] responses = method.getResponseBodyAsMultiStatus().getResponses();
-            if (responses.length < 1) {
-                throw new ItemNotFoundException("Unable to retrieve the node with id " + nodeId);
-            }
-
-            MultiStatusResponse nodeResponse = null;
-            List childResponses = new ArrayList();
-            for (int i = 0; i < responses.length; i++) {
-                if (isSameResource(uri, responses[i])) {
-                    nodeResponse = responses[i];
-                } else {
-                    childResponses.add(responses[i]);
-                }
-            }
-
-            if (nodeResponse == null) {
-                throw new ItemNotFoundException("Unable to retrieve the node " + nodeId);
-            }
-
-            DavPropertySet propSet = nodeResponse.getProperties(DavServletResponse.SC_OK);
-            Object type = propSet.get(DavPropertyName.RESOURCETYPE).getValue();
-            if (type == null) {
-                // the given id points to a Property instead of a Node
-                throw new ItemNotFoundException("No node for id " + nodeId);
-            }
-
-            NamespaceResolver resolver = new NamespaceResolverImpl(sessionInfo);
-
-            NodeId parentId = getParentId(propSet, sessionInfo);
-            NodeId id = uriResolver.buildNodeId(parentId, nodeResponse, sessionInfo.getWorkspaceName());
-            NodeInfoImpl nInfo = new NodeInfoImpl(id, parentId, propSet, resolver);
-            if (propSet.contains(ItemResourceConstants.JCR_REFERENCES)) {
-                HrefProperty refProp = new HrefProperty(propSet.get(ItemResourceConstants.JCR_REFERENCES));
-                Iterator hrefIter = refProp.getHrefs().iterator();
-                while(hrefIter.hasNext()) {
-                    String propertyHref = hrefIter.next().toString();
-                    PropertyId propertyId = uriResolver.getPropertyId(propertyHref, sessionInfo);
-                    nInfo.addReference(propertyId);
-                }
-            }
-
-            List infos = new ArrayList(responses.length);
-            infos.add(nInfo);
-
-            for (Iterator it = childResponses.iterator(); it.hasNext();) {
-                MultiStatusResponse resp = (MultiStatusResponse) it.next();
-                DavPropertySet childProps = resp.getProperties(DavServletResponse.SC_OK);
-                if (childProps.contains(DavPropertyName.RESOURCETYPE) &&
-                    childProps.get(DavPropertyName.RESOURCETYPE).getValue() != null) {
-                    // any other resource type than default (empty) is represented by a node item
-                    parentId = getParentId(childProps, sessionInfo);
-                    id = uriResolver.buildNodeId(parentId, resp, sessionInfo.getWorkspaceName());
-                    nInfo = new NodeInfoImpl(id, parentId, childProps, resolver);
-                    if (childProps.contains(ItemResourceConstants.JCR_REFERENCES)) {
-                        HrefProperty refProp = new HrefProperty(childProps.get(ItemResourceConstants.JCR_REFERENCES));
-                        Iterator hrefIter = refProp.getHrefs().iterator();
-                        while(hrefIter.hasNext()) {
-                            String propertyHref = hrefIter.next().toString();
-                            PropertyId propertyId = uriResolver.getPropertyId(propertyHref, sessionInfo);
-                            nInfo.addReference(propertyId);
-                        }
-                    }
-                    infos.add(nInfo);
-                } else {
-                    PropertyId childId = uriResolver.buildPropertyId(nInfo.getId(), resp, sessionInfo.getWorkspaceName());
-                    nInfo.addPropertyId(childId);
-                    // TODO: due to missing 'value/values' property PropertyInfo cannot be built
-                }
-            }
-            return infos.iterator();
-        } catch (IOException e) {
-            throw new RepositoryException(e);
-        } catch (DavException e) {
-            throw ExceptionConverter.generate(e);
-        } catch (MalformedPathException e) {
-            throw new RepositoryException(e);
-        } finally {
-            if (method != null) {
-                method.releaseConnection();
+    private NodeInfoImpl buildNodeInfo(MultiStatusResponse nodeResponse,
+                                       NodeId parentId, DavPropertySet propSet,
+                                       SessionInfo sessionInfo,
+                                       NamespaceResolver resolver) throws MalformedPathException, RepositoryException {
+        NodeId id = uriResolver.buildNodeId(parentId, nodeResponse, sessionInfo.getWorkspaceName());
+        NodeInfoImpl nInfo = new NodeInfoImpl(id, parentId, propSet, resolver);
+        if (propSet.contains(ItemResourceConstants.JCR_REFERENCES)) {
+            HrefProperty refProp = new HrefProperty(propSet.get(ItemResourceConstants.JCR_REFERENCES));
+            Iterator hrefIter = refProp.getHrefs().iterator();
+            while(hrefIter.hasNext()) {
+                String propertyHref = hrefIter.next().toString();
+                PropertyId propertyId = uriResolver.getPropertyId(propertyHref, sessionInfo);
+                nInfo.addReference(propertyId);
+        return nInfo;
-            method = new PropFindMethod(uri, nameSet, DEPTH_1);
+            method = new PropFindMethod(uri, nameSet, DEPTH_0);

INS31 INS31 MOV29 MOV83 MOV43 MOV42 MOV44 MOV44 MOV43 MOV43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS8 MOV60 INS21 INS41 UPD42 MOV42 MOV43 INS42 INS43 INS42 MOV43 INS42 INS43 INS42 UPD43 MOV43 UPD42 MOV42 MOV42 MOV42 MOV60 MOV60 MOV25 INS41 MOV60 INS32 INS32 MOV42 UPD42 MOV42 UPD42 INS42 UPD42 INS42 MOV42 INS32 UPD42 MOV42 INS42 MOV43 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL14 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL61 DEL8 DEL25 DEL40 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL7 DEL21 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL40 DEL34 DEL27 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL2 DEL32 DEL42 DEL42 DEL42 DEL2 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL33 DEL27 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL61 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL32 DEL41 DEL8 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL53 DEL8 DEL12 DEL43 DEL42 DEL44 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL54 DEL8 DEL31