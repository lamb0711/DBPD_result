JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.DavConstants;
-import org.jdom.Element;
+import org.apache.jackrabbit.webdav.xml.ElementIterator;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.w3c.dom.Element;
-import java.util.List;
-public class DavPropertyNameSet extends HashSet {
+public class DavPropertyNameSet extends PropContainer {
+    private final HashSet set = new HashSet();
-     * @see HashSet()
-        super();
-     * Create a new set from the given collection.
-     * @param c
-     * @see HashSet(Collection)
+     * Create a new <code>DavPropertyNameSet</code> with the given initial values.
+     *
+     * @param initialSet
-    public DavPropertyNameSet(Collection c) {
-        super(c);
+    public DavPropertyNameSet(DavPropertyNameSet initialSet) {
+        addAll(initialSet);
-        super();
-        if (propElement == null || !propElement.getName().equals(DavConstants.XML_PROP)) {
+        if (!DomUtil.matches(propElement, XML_PROP, NAMESPACE)) {
-        List props = propElement.getChildren();
-        for (int j = 0; j < props.size(); j++) {
-            Element prop = (Element) props.get(j);
-            String propName = prop.getName();
-            if (propName != null && !"".equals(propName)) {
-                add(DavPropertyName.create(propName, prop.getNamespace()));
-            }
+        ElementIterator it = DomUtil.getChildren(propElement);
+        while (it.hasNext()) {
+            add(DavPropertyName.createFromXml(it.nextElement()));
-        return super.add(propertyName);
+        return set.add(propertyName);
-     * Add the given object to this set. In case the object is not a {@link DavPropertyName}
-     * this method returns false.
+     * Add the property names contained in the specified set to this set.
-     * @param o
-     * @return true if adding the object was successful.
-     * @see #add(DavPropertyName)
+     * @param propertyNames
+     * @return true if the set has been modified by this call.
-    public boolean add(Object o) {
-        if (o instanceof DavPropertyName) {
-            return add((DavPropertyName) o);
-        } else {
+    public boolean addAll(DavPropertyNameSet propertyNames) {
+        return set.addAll(propertyNames.getContent());
+    }
+
+    /**
+     * Removes the specified {@link DavPropertyName} object from this set.
+     *
+     * @param propertyName
+     * @return true if the given property name could be removed.
+     * @see HashSet#remove(Object)
+     */
+    public boolean remove(DavPropertyName propertyName) {
+        return set.remove(propertyName);
+    }
+
+    /**
+     * @return Iterator over all <code>DavPropertyName</code>s contained in this
+     * set.
+     */
+    public DavPropertyNameIterator iterator() {
+        return new PropertyNameIterator();
+    }
+
+    //------------------------------------------------------< PropContainer >---
+    /**
+     * @see PropContainer#contains(DavPropertyName)
+     */
+    public boolean contains(DavPropertyName name) {
+        return set.contains(name);
+    }
+
+    /**
+     * @param contentEntry NOTE that an instance of <code>DavPropertyName</code>
+     * in order to successfully add the given entry.
+     * @return true if contentEntry is an instance of <code>DavPropertyName</code>
+     * that could be added to this set. False otherwise.
+     * @see PropContainer#addContent(Object)
+     */
+    public boolean addContent(Object contentEntry) {
+        if (contentEntry instanceof DavPropertyName) {
+            return add((DavPropertyName)contentEntry);
+        }
+
+    /**
+     * @see PropContainer#isEmpty()
+     */
+    public boolean isEmpty() {
+        return set.isEmpty();
-     * Returns the xml representation of this property name set with the
-     * following format:
-     * <pre>
-     * &lt;!ELEMENT prop (ANY) &gt;
-     * where ANY consists of a list of elements each reflecting the xml
-     * representation of an entry in this set.
-     * </pre>
-     *
-     * @return xml representation
+     * @see PropContainer#getContentSize()
-    public Element toXml() {
-        Element prop = new Element(DavConstants.XML_PROP, DavConstants.NAMESPACE);
-        Iterator it = super.iterator();
-        while (it.hasNext()) {
-            prop.addContent(((DavPropertyName)it.next()).toXml());
+    public int getContentSize() {
+        return set.size();
+    }
+
+    /**
+     * @see PropContainer#getContent()
+     */
+    public Collection getContent() {
+        return set;
+    }
+
+    //--------------------------------------------------------< inner class >---
+    private class PropertyNameIterator implements DavPropertyNameIterator {
+
+        private Iterator iter;
+
+        private PropertyNameIterator() {
+            this.iter = set.iterator();
-        return prop;
+
+        public DavPropertyName nextPropertyName() {
+            return (DavPropertyName)iter.next();
+        }
+
+        public void remove() {
+            iter.remove();
+        }
+
+        public boolean hasNext() {
+            return iter.hasNext();
+        }
+
+        public Object next() {
+            return iter.next();
+        }

MOV26 UPD40 UPD40 UPD40 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS55 INS42 INS83 INS83 MOV43 INS59 MOV29 MOV83 MOV42 MOV44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 UPD42 INS8 MOV29 MOV83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 MOV43 INS42 INS8 INS83 INS42 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS42 INS14 INS43 INS42 INS21 MOV25 MOV60 INS61 INS65 INS65 INS65 INS43 INS42 INS41 MOV65 INS65 INS65 INS65 INS43 INS42 INS41 INS65 INS42 INS41 MOV43 UPD42 MOV41 UPD65 INS65 INS43 INS42 INS25 MOV41 INS65 INS41 INS65 INS41 INS65 INS41 UPD42 MOV42 INS83 MOV43 INS59 INS83 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS43 UPD66 UPD42 INS42 INS32 INS38 UPD43 MOV32 INS8 INS32 INS66 INS42 INS66 UPD42 MOV42 INS32 UPD66 UPD66 INS42 INS66 INS68 INS42 INS32 INS66 INS66 INS14 INS42 UPD66 UPD66 UPD66 INS66 INS68 UPD42 MOV42 MOV62 MOV8 INS68 INS32 INS68 INS32 INS68 INS42 INS42 INS21 INS42 INS41 INS21 MOV41 INS42 INS41 INS42 INS42 INS42 MOV32 UPD42 UPD42 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS69 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 UPD42 INS42 UPD42 INS42 INS42 INS42 INS42 INS69 UPD42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS11 INS32 INS32 INS32 INS42 INS42 MOV42 UPD42 MOV42 UPD42 UPD42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV43 INS42 INS43 MOV32 INS22 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 MOV11 INS52 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 DEL66 DEL65 DEL46 DEL66 DEL65 DEL42 DEL42 DEL46 DEL32 DEL40 DEL42 DEL33 DEL27 DEL38 DEL27 DEL46 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL32 DEL27 DEL42 DEL37 DEL43 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL45 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31 DEL42 DEL42 DEL48 DEL42 DEL65 DEL66 DEL65 DEL42 DEL11 DEL8 DEL8 DEL25 DEL8 DEL66 DEL66 DEL66 DEL66 DEL66 DEL36 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL48 DEL59 DEL60 DEL61 DEL8 DEL31