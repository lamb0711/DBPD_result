cleaning up root node creation

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159592 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.nodetype.EffectiveNodeType;
+import org.apache.jackrabbit.core.nodetype.PropDef;
+import javax.jcr.nodetype.ConstraintViolationException;
-        // @todo FIXME need to manually setup root node by creating mandatory jcr:primaryType property
-        NodeDefId nodeDefId;
-        PropDefId propDefId;
+        // FIXME need to manually setup root node by creating mandatory jcr:primaryType property
+        // @todo delegate setup of root node to NodeTypeInstanceHandler
+        // id of the root node's definition
+        NodeDefId nodeDefId;
+        // definition of jcr:primaryType property
+        PropDef propDef;
-            // FIXME relies on definition of nt:base:
-            // first property definition in nt:base is jcr:primaryType
-            propDefId = new PropDefId(ntReg.getNodeTypeDef(Constants.NT_BASE).getPropertyDefs()[0]);
+            EffectiveNodeType ent = ntReg.getEffectiveNodeType(Constants.REP_ROOT);
+            propDef = ent.getApplicablePropertyDef(Constants.JCR_PRIMARYTYPE,
+                    PropertyType.NAME, false);
-            String msg = "failed to create root node";
-            log.debug(msg);
+            String msg = "internal error: failed to create root node";
+            log.error(msg, nsnte);
+        } catch (ConstraintViolationException cve) {
+            String msg = "internal error: failed to create root node";
+            log.error(msg, cve);
+            throw new ItemStateException(msg, cve);
-        QName propName = Constants.JCR_PRIMARYTYPE;
-        rootState.addPropertyEntry(propName);
+        // create jcr:primaryType property
+        rootState.addPropertyEntry(propDef.getName());
-        PropertyState prop = createInstance(propName, rootNodeUUID);
+        PropertyState prop = createInstance(propDef.getName(), rootNodeUUID);
-        prop.setType(PropertyType.NAME);
-        prop.setMultiValued(false);
-        prop.setDefinitionId(propDefId);
+        prop.setType(propDef.getRequiredType());
+        prop.setMultiValued(propDef.isMultiple());
+        prop.setDefinitionId(new PropDefId(propDef));

INS26 INS26 INS26 INS40 INS40 INS40 UPD43 INS12 UPD42 UPD42 INS60 INS44 INS8 INS32 INS32 INS32 INS14 INS43 INS59 INS43 INS42 INS60 INS21 INS53 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 INS32 UPD42 INS32 INS42 INS43 INS59 INS32 INS14 UPD42 MOV42 INS42 INS42 INS42 INS40 UPD42 MOV42 UPD42 MOV42 UPD40 MOV40 INS40 INS9 UPD45 UPD42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 DEL32 DEL42 DEL32 DEL34 DEL2 DEL14 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL40 DEL9 DEL42