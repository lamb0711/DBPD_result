JCR-3858 NodeIterator.getSize(): compatibility with Jackrabbit 2.5

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1667317 13f79535-47bb-0310-9956-ffa450edef68

+    
+    private final boolean sizeEstimate;
+        this.sizeEstimate = index.getSizeEstimate();
-        // quick check
-        // if numResults is set, all relevant results have been fetched
-        if (numResults != -1) {
-            return;
+        if (!sizeEstimate) {
+            // quick check
+            // if numResults is set, all relevant results have been fetched
+            if (numResults != -1) {
+                return;
+            }
-                collectScoreNodes(result, offsetNodes, offset);
+                if (sizeEstimate) {
+                    collectScoreNodes(result, new ArrayList<ScoreNode[]>(), offset);                    
+                } else {
+                    collectScoreNodes(result, offsetNodes, offset);
+                }
-            // update numResults if all results have been fetched 
-            // if resultNodes.getSize() is strictly smaller than maxResultSize, it means that all results have been fetched
-            int resultSize = resultNodes.size();
-            if (resultSize < maxResultSize) {
-                if (resultNodes.isEmpty()) {
-                    // if there's no result nodes, the actual totalResults if smaller or equals than the offset
-                    totalResults = offsetNodes.size();
-                    numResults = 0;
+            if (sizeEstimate) {
+                // update numResults
+                numResults = result.getSize();                
+            } else {
+                // update numResults if all results have been fetched 
+                // if resultNodes.getSize() is strictly smaller than maxResultSize, it means that all results have been fetched
+                int resultSize = resultNodes.size();
+                if (resultSize < maxResultSize) {
+                    if (resultNodes.isEmpty()) {
+                        // if there's no result nodes, the actual totalResults if smaller or equals than the offset
+                        totalResults = offsetNodes.size();
+                        numResults = 0;
+                    }
+                    else {
+                        totalResults = resultSize + (int) offset;
+                        numResults = resultSize;
+                    }
-                else {
-                    totalResults = resultSize + (int) offset;
-                    numResults = resultSize;
+                else if (resultSize == limit) {
+                    // if there's "limit" results, we can't know the total size (which may be greater), but the result size is the limit
+                    numResults = (int) limit;
-            else if (resultSize == limit) {
-                // if there's "limit" results, we can't know the total size (which may be greater), but the result size is the limit
-                numResults = (int) limit;
-            }
+     * If the "sizeEstimate" options is enabled:
+     * Keep in mind that this number may get smaller if nodes are found in
+     * the result set which the current session has no permission to access.
+     * This might be a security problem.
-        return totalResults;
+        if (sizeEstimate) {
+            if (numResults == -1) {
+                return -1;
+            } else {
+                return numResults - invalid;
+            }
+        } else {
+            return totalResults;
+        }
+         * <p/>
+         * If the "sizeEstimate" options is enabled:
+         * This value may shrink when the query result encounters non-existing
+         * nodes or the session does not have access to a node.
-            return numResults;
+            if (sizeEstimate) {
+                int total = getTotalSize();
+                if (total == -1) {
+                    return -1;
+                }
+                long size = offset > total ? 0 : total - offset;
+                if (limit >= 0 && size > limit) {
+                    return limit;
+                } else {
+                    return size;
+                }                
+            } else {
+                return numResults;
+            }
-                    // if numResults is set, all relevant results have been fetched
-                    if (numResults != -1) {
-                        break;
+                    if (sizeEstimate) {
+                        // this check is only possible if we have numResults
+                        if (numResults != -1 && (nextPos + invalid) >= numResults) {
+                            break;
+                        }
+                    } else {
+                        // if numResults is set, all relevant results have been fetched
+                        if (numResults != -1) {
+                            break;
+                        }

INS23 INS83 INS83 INS39 INS59 INS8 INS42 INS21 INS25 INS25 INS8 INS7 INS38 INS8 INS66 INS66 INS66 INS66 INS42 INS8 MOV8 INS25 INS22 INS32 INS42 MOV25 INS25 INS25 INS66 INS66 INS66 INS66 INS42 INS8 MOV8 INS52 INS42 INS42 INS42 INS8 INS42 INS8 INS8 INS27 INS8 INS8 INS60 INS25 INS60 INS25 INS25 INS21 MOV60 MOV25 INS42 INS38 INS41 INS41 INS39 INS59 INS27 INS8 INS39 INS59 INS27 INS8 INS8 INS42 INS8 MOV8 INS7 INS34 INS38 INS27 INS42 INS32 INS42 INS38 INS41 INS42 INS16 INS27 INS27 INS41 INS41 INS25 INS21 INS42 INS32 INS34 INS42 INS42 INS42 INS34 INS38 INS27 INS34 INS27 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS8 INS8 INS32 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS25 MOV25 INS42 INS42 INS14 INS42 INS27 INS8 INS74 INS27 INS27 INS10 INS43 INS5 INS42 INS38 INS36 INS42 INS42 INS43 INS85 INS34 INS27 INS42 INS42 INS42