JCR-645

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@478892 13f79535-47bb-0310-9956-ffa450edef68

-import java.sql.SQLException;
-import java.sql.PreparedStatement;
-import java.util.List;
-import java.util.LinkedList;
-     * {@inheritDoc}
+     * Builds the SQL statements
-    protected List initPreparedStatements() throws SQLException {
-        List stmts = new LinkedList();
-        stmts.add(insertFileStmt = con.prepareStatement("insert into "
+    protected void buildSQLStatements() {
+        insertFileSQL = "insert into "
-                + "values (?, ?, ?, ?, ?)"));
+                + "values (?, ?, ?, ?, ?)";
-        stmts.add(insertFolderStmt = con.prepareStatement("insert into "
+        insertFolderSQL = "insert into "
-                + "values (?, nvl(?, ' '), ?, null)"));
+                + "values (?, nvl(?, ' '), ?, null)";
-        stmts.add(updateDataStmt = con.prepareStatement("update "
+        updateDataSQL = "update "
-                + "and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_LENGTH is not null";
-        stmts.add(updateLastModifiedStmt = con.prepareStatement("update "
+        updateLastModifiedSQL = "update "
-                + "and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_LENGTH is not null";
-        stmts.add(selectExistStmt = con.prepareStatement("select 1 from "
+        selectExistSQL = "select 1 from "
-                + "and FSENTRY_NAME = nvl(?, ' ')"));
+                + "and FSENTRY_NAME = nvl(?, ' ')";
-        stmts.add(selectFileExistStmt = con.prepareStatement("select 1 from "
+        selectFileExistSQL = "select 1 from "
-                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null";
-        stmts.add(selectFolderExistStmt = con.prepareStatement("select 1 from "
+        selectFolderExistSQL = "select 1 from "
-                + "and FSENTRY_NAME = nvl(?, ' ') and FSENTRY_LENGTH is null"));
+                + "and FSENTRY_NAME = nvl(?, ' ') and FSENTRY_LENGTH is null";
-        stmts.add(selectFileNamesStmt = con.prepareStatement("select FSENTRY_NAME from "
+        selectFileNamesSQL = "select FSENTRY_NAME from "
-                + "and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_LENGTH is not null";
-        stmts.add(selectFolderNamesStmt = con.prepareStatement("select FSENTRY_NAME from "
+        selectFolderNamesSQL = "select FSENTRY_NAME from "
-                + "and FSENTRY_LENGTH is null"));
+                + "and FSENTRY_LENGTH is null";
-        stmts.add(selectFileAndFolderNamesStmt = con.prepareStatement("select FSENTRY_NAME from "
+        selectFileAndFolderNamesSQL = "select FSENTRY_NAME from "
-                + "and FSENTRY_NAME != ' '"));
+                + "and FSENTRY_NAME != ' '";
-        stmts.add(selectChildCountStmt = con.prepareStatement("select count(FSENTRY_NAME) from "
+        selectChildCountSQL = "select count(FSENTRY_NAME) from "
-                + "and FSENTRY_NAME != ' '"));
+                + "and FSENTRY_NAME != ' '";
-        stmts.add(selectDataStmt = con.prepareStatement("select nvl(FSENTRY_DATA, empty_blob()) from "
+        selectDataSQL = "select nvl(FSENTRY_DATA, empty_blob()) from "
-                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null";
-        stmts.add(selectLastModifiedStmt = con.prepareStatement("select FSENTRY_LASTMOD from "
+        selectLastModifiedSQL = "select FSENTRY_LASTMOD from "
-                + "and FSENTRY_NAME = nvl(?, ' ')"));
+                + "and FSENTRY_NAME = nvl(?, ' ')";
-        stmts.add(selectLengthStmt = con.prepareStatement("select nvl(FSENTRY_LENGTH, 0) from "
+        selectLengthSQL = "select nvl(FSENTRY_LENGTH, 0) from "
-                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null";
-        stmts.add(deleteFileStmt = con.prepareStatement("delete from "
+        deleteFileSQL = "delete from "
-                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null";
-        stmts.add(deleteFolderStmt = con.prepareStatement("delete from "
+        deleteFolderSQL = "delete from "
-                + "or (FSENTRY_PATH like ?) "));
+                + "or (FSENTRY_PATH like ?) ";
-        stmts.add(copyFileStmt = con.prepareStatement("insert into "
+        copyFileSQL = "insert into "
-                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null"));
+                + "and FSENTRY_NAME = ? and FSENTRY_LENGTH is not null";
-        stmts.add(copyFilesStmt = con.prepareStatement("insert into "
+        copyFilesSQL = "insert into "
-                + "and FSENTRY_LENGTH is not null"));
-
-        return stmts;
+                + "and FSENTRY_LENGTH is not null";
+
-                    PreparedStatement stmt = null;
-                            stmt = updateDataStmt;
-                            synchronized (stmt) {
+                            synchronized (updateDataSQL) {
-                                stmt.setBlob(1, blob);
-                                stmt.setLong(2, System.currentTimeMillis());
-                                stmt.setLong(3, length);
-                                stmt.setString(4, parentDir);
-                                stmt.setString(5, name);
-                                stmt.executeUpdate();
+                                executeStmt(updateDataSQL,
+                                        new Object[]{
+                                            blob,
+                                            new Long(System.currentTimeMillis()),
+                                            new Long(length),
+                                            parentDir,
+                                            name
+                                        });
-                            stmt = insertFileStmt;
-                            stmt.setString(1, parentDir);
-                            stmt.setString(2, name);
-                            long length = tmpFile.length();
-                            in = new FileInputStream(tmpFile);
-                            blob = createTemporaryBlob(in);
-                            stmt.setBlob(3, blob);
-                            stmt.setLong(4, System.currentTimeMillis());
-                            stmt.setLong(5, length);
-                            stmt.executeUpdate();
+                            synchronized (insertFileSQL) {
+                                long length = tmpFile.length();
+                                in = new FileInputStream(tmpFile);
+                                blob = createTemporaryBlob(in);
+                                executeStmt(insertFileSQL,
+                                        new Object[]{
+                                            parentDir,
+                                            name,
+                                            blob,
+                                            new Long(System.currentTimeMillis()),
+                                            new Long(length)
+                                        });
+                            }
-
-                        if (stmt != null) {
-                            resetStatement(stmt);
-                        }
-                    PreparedStatement stmt = null;
-                            stmt = updateDataStmt;
-                            synchronized (stmt) {
+                            synchronized (updateDataSQL) {
-                                stmt.setBlob(1, blob);
-                                stmt.setLong(2, System.currentTimeMillis());
-                                stmt.setLong(3, length);
-                                stmt.setString(4, parentDir);
-                                stmt.setString(5, name);
-                                stmt.executeUpdate();
+                                executeStmt(updateDataSQL,
+                                        new Object[]{
+                                            blob,
+                                            new Long(System.currentTimeMillis()),
+                                            new Long(length),
+                                            parentDir,
+                                            name
+                                        });
-                            stmt = insertFileStmt;
-                            stmt.setString(1, parentDir);
-                            stmt.setString(2, name);
-                            long length = tmpFile.length();
-                            in = new FileInputStream(tmpFile);
-                            blob = createTemporaryBlob(in);
-                            stmt.setBlob(3, blob);
-                            stmt.setLong(4, System.currentTimeMillis());
-                            stmt.setLong(5, length);
-                            stmt.executeUpdate();
+                            synchronized (insertFileSQL) {
+                                long length = tmpFile.length();
+                                in = new FileInputStream(tmpFile);
+                                blob = createTemporaryBlob(in);
+                                executeStmt(insertFileSQL,
+                                        new Object[]{
+                                            parentDir,
+                                            name,
+                                            blob,
+                                            new Long(System.currentTimeMillis()),
+                                            new Long(length)
+                                        });
+                            }
-
-                        if (stmt != null) {
-                            resetStatement(stmt);
-                        }

INS39 UPD42 INS66 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 MOV7 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 MOV8 INS8 INS51 INS51 INS42 INS8 UPD42 INS42 INS8 UPD42 MOV60 MOV21 MOV21 INS21 INS21 MOV60 MOV21 MOV21 INS21 INS21 INS32 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS3 UPD42 MOV42 UPD42 MOV42 INS3 INS42 UPD42 MOV42 INS3 UPD42 MOV42 UPD42 MOV42 INS3 UPD42 MOV42 UPD42 MOV42 INS5 INS4 INS5 INS4 INS5 INS4 INS5 INS4 INS42 INS43 INS85 INS42 INS14 INS14 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS14 INS14 INS43 INS85 INS42 INS14 INS14 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS14 INS14 INS42 INS43 MOV32 INS43 INS42 INS42 INS43 MOV32 INS43 INS42 UPD42 MOV42 INS43 MOV32 INS43 INS42 INS42 INS43 MOV32 INS43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL41 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL34 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL7 DEL21 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25