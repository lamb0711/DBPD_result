JCR-4238: use StandardCharsets to avoid having to handle UnsupportedEncodingException

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1819271 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
+import java.nio.charset.StandardCharsets;
-            try {
-                final byte[] value = getString().getBytes("UTF-8");
-                return new Binary() {
-                    public int read(byte[] b, long position) {
-                        if (position >= value.length) {
-                            return -1;
-                        } else {
-                            int p = (int) position;
-                            int n = Math.min(b.length, value.length - p);
-                            System.arraycopy(value, p, b, 0, n);
-                            return n;
-                        }
+            final byte[] value = getString().getBytes(StandardCharsets.UTF_8);
+            return new Binary() {
+                public int read(byte[] b, long position) {
+                    if (position >= value.length) {
+                        return -1;
+                    } else {
+                        int p = (int) position;
+                        int n = Math.min(b.length, value.length - p);
+                        System.arraycopy(value, p, b, 0, n);
+                        return n;
-                    public InputStream getStream() {
-                        return new ByteArrayInputStream(value);
-                    }
-                    public long getSize() {
-                        return value.length;
-                    }
-                    public void dispose() {
-                    }
-                };
-            } catch (UnsupportedEncodingException ex) {
-                throw new RepositoryException("UTF-8 is not supported", ex);
-            }
+                }
+                public InputStream getStream() {
+                    return new ByteArrayInputStream(value);
+                }
+                public long getSize() {
+                    return value.length;
+                }
+                public void dispose() {
+                }
+            };
-                try {
-                    stream = new ByteArrayInputStream(getString().getBytes("UTF-8"));
-                } catch (UnsupportedEncodingException ex) {
-                    throw new RepositoryException("UTF-8 is not supported", ex);
-                }
+                stream = new ByteArrayInputStream(getString().getBytes(StandardCharsets.UTF_8));

MOV26 UPD40 MOV8 INS25 MOV27 MOV8 MOV8 MOV8 INS40 INS40 DEL45 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL25 DEL8 DEL45 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8