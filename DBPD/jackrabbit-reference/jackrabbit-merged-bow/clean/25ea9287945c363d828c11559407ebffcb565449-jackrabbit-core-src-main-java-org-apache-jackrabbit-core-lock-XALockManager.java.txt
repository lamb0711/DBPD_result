JCR-2183 - Provide overridables for lock checking
- Add public LockInfo class
- Make AbstractLockInfo package private
- Rename internal LockInfo classes to avoid confusion
- Add overridable in LockManagerImpl with default implementation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@790892 13f79535-47bb-0310-9956-ffa450edef68

-        return new XALock(this, info, node);
+        return new XALockImpl(this, info, node);
-        return new XALock(this, info, holder);
+        return new XALockImpl(this, info, holder);
-        XALock[] locks = new XALock[infos.length];
+        XALockImpl[] locks = new XALockImpl[infos.length];
-            locks[i] = new XALock(this, info, holder);
+            locks[i] = new XALockImpl(this, info, holder);
-    public boolean isLockHolder(Session session, NodeImpl node)
-            throws RepositoryException {
-        AbstractLockInfo info;
-        if (isInXA()) {
-            info = xaEnv.getLockInfo(node);
-        } else {
-            info = lockMgr.getLockInfo(node.getNodeId());
-        }
-        return info != null && info.getId().equals(node.getId())
-                && info.getLockHolder() == session;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
+            if (info != null && !info.isLockHolder(node.getSession())) {
+                throw new LockException("Node locked.");
+            }
-            info = lockMgr.getLockInfo(node.getNodeId());
-        }
-        if (info != null && info.getLockHolder() != node.getSession()) {
-            throw new LockException("Node locked.");
+        	lockMgr.checkLock(node);
-        SessionImpl sessionImpl = (SessionImpl) session;
-        checkLock(sessionImpl.getItemManager().getNode(path));
+        if (isInXA()) {
+	        SessionImpl sessionImpl = (SessionImpl) session;
+	        checkLock(sessionImpl.getItemManager().getNode(path));
+        } else {
+        	lockMgr.checkLock(path, session);
+        }
-
+    
-    public void lockTokenAdded(SessionImpl session, String lt) throws RepositoryException {
+    public void checkUnlock(Session session, NodeImpl node)
+    		throws LockException, RepositoryException {
+
-            xaEnv.addLockToken(session, lt);
+            AbstractLockInfo info = xaEnv.getLockInfo(node);
+            if (info == null || !info.getId().equals(node.getId())) {
+    	        throw new LockException("Node not locked: " + node);
+            }
+    	    if (!info.isLockHolder(session)) {
+    	        throw new LockException("Node not locked by session: " + node);
+    	    }
-            lockMgr.lockTokenAdded(session, lt);
+        	lockMgr.checkUnlock(session, node);
-    public void lockTokenRemoved(SessionImpl session, String lt) throws RepositoryException {
+    public void addLockToken(SessionImpl session, String lt) throws RepositoryException {
+        if (isInXA()) {
+            xaEnv.addLockToken(session, lt);
+        } else {
+            lockMgr.addLockToken(session, lt);
+        }
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void removeLockToken(SessionImpl session, String lt) throws RepositoryException {
-            lockMgr.lockTokenRemoved(session, lt);
+            lockMgr.removeLockToken(session, lt);
-            return info instanceof XAEnvironment.LockInfo;
+            return info instanceof XAEnvironment.XALockInfo;

MOV31 INS8 UPD39 UPD42 INS43 INS8 UPD42 UPD42 INS25 UPD42 MOV42 INS25 UPD5 INS32 MOV8 INS8 MOV32 INS8 INS8 UPD43 UPD43 UPD43 MOV25 INS42 INS21 INS60 INS25 INS25 INS21 UPD42 UPD42 UPD42 UPD5 INS32 INS32 INS43 INS59 UPD27 MOV27 MOV8 INS38 INS8 INS32 UPD43 INS38 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD27 INS38 INS53 INS32 INS53 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD43 UPD42 UPD43 INS32 MOV42 MOV42 MOV42 MOV32 INS14 MOV42 UPD42 MOV42 INS42 INS14 UPD40 UPD42 MOV42 UPD42 MOV42 MOV32 INS43 INS27 INS43 INS27 INS42 INS45 INS42 INS42 INS45 INS42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL32 DEL7 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL32 DEL42 DEL27 DEL27 DEL41 DEL8