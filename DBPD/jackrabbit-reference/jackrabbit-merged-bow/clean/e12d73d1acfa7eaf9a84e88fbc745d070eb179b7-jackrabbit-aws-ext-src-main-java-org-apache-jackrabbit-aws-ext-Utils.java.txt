JCR-3852: [jackrabbit-aws-ext] Refactor code to open S3 service & consolidate testcases
Patch from Shashank Gupta

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1665148 13f79535-47bb-0310-9956-ffa450edef68

+import com.amazonaws.services.s3.model.Region;
+     * The default value AWS bucket region.
+     */
+    public static final String DEFAULT_AWS_BUCKET_REGION = "us-standard";
+
+    /**
+     * constants to define endpoint to various AWS region
+     */
+    public static final String AWSDOTCOM = "amazonaws.com";
+
+    public static final String S3 = "s3";
+
+    public static final String DOT = ".";
+
+    public static final String DASH = "-";
+
+    /**
-        int connectionTimeOut = Integer.parseInt(prop.getProperty(S3Constants.S3_CONN_TIMEOUT));
-        int socketTimeOut = Integer.parseInt(prop.getProperty(S3Constants.S3_SOCK_TIMEOUT));
-        int maxConnections = Integer.parseInt(prop.getProperty(S3Constants.S3_MAX_CONNS));
-        int maxErrorRetry = Integer.parseInt(prop.getProperty(S3Constants.S3_MAX_ERR_RETRY));
-        ClientConfiguration cc = new ClientConfiguration();
-        String protocol = prop.getProperty(S3Constants.S3_CONN_PROTOCOL);
-        if ( protocol != null && protocol.equalsIgnoreCase("http")) {
-            cc.setProtocol(Protocol.HTTP);
+        AmazonS3Client s3service =  new AmazonS3Client(credentials, getClientConfiguration(prop));
+        String region = prop.getProperty(S3Constants.S3_REGION);
+        String endpoint = null;
+        String propEndPoint = prop.getProperty(S3Constants.S3_END_POINT);
+        if ((propEndPoint != null) & !"".equals(propEndPoint)) {
+            endpoint = propEndPoint;
+        } else {
+            if (DEFAULT_AWS_BUCKET_REGION.equals(region)) {
+                endpoint = S3 + DOT + AWSDOTCOM;
+            } else if (Region.EU_Ireland.toString().equals(region)) {
+                endpoint = "s3-eu-west-1" + DOT + AWSDOTCOM;
+            } else {
+                endpoint = S3 + DASH + region + DOT + AWSDOTCOM;
+            }
-        cc.setConnectionTimeout(connectionTimeOut);
-        cc.setSocketTimeout(socketTimeOut);
-        cc.setMaxConnections(maxConnections);
-        cc.setMaxErrorRetry(maxErrorRetry);
-        return new AmazonS3Client(credentials, cc);
+        /*
+         * setting endpoint to remove latency of redirection. If endpoint is
+         * not set, invocation first goes us standard region, which
+         * redirects it to correct location.
+         */
+        s3service.setEndpoint(endpoint);
+        LOG.info("S3 service endpoint [{}] ", endpoint);
+        return s3service;
+    private static ClientConfiguration getClientConfiguration(Properties prop) {
+        int connectionTimeOut = Integer.parseInt(prop.getProperty(S3Constants.S3_CONN_TIMEOUT));
+        int socketTimeOut = Integer.parseInt(prop.getProperty(S3Constants.S3_SOCK_TIMEOUT));
+        int maxConnections = Integer.parseInt(prop.getProperty(S3Constants.S3_MAX_CONNS));
+        int maxErrorRetry = Integer.parseInt(prop.getProperty(S3Constants.S3_MAX_ERR_RETRY));
+        ClientConfiguration cc = new ClientConfiguration();
+        String protocol = prop.getProperty(S3Constants.S3_CONN_PROTOCOL);
+        if (protocol != null && protocol.equalsIgnoreCase("http")) {
+            cc.setProtocol(Protocol.HTTP);
+        }
+        cc.setConnectionTimeout(connectionTimeOut);
+        cc.setSocketTimeout(socketTimeOut);
+        cc.setMaxConnections(maxConnections);
+        cc.setMaxErrorRetry(maxErrorRetry);
+        return cc;
+    }
+

INS26 MOV31 INS40 INS23 INS23 INS23 INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 MOV29 INS83 INS83 MOV43 INS42 MOV44 INS8 UPD83 INS43 INS42 INS44 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 MOV60 INS60 INS60 INS60 INS60 INS25 INS21 INS21 INS41 INS42 INS43 INS42 INS66 INS66 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS32 INS36 INS38 INS21 INS25 INS42 INS42 INS42 INS42 INS42 INS45 INS42 MOV43 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS27 INS32 INS7 INS32 INS8 INS25 INS42 INS42 INS42 INS33 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS32 INS8 INS8 INS7 INS32 INS42 INS42 INS21 INS21 INS42 INS27 INS40 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS27 INS42 INS27 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL14