JCR-309: Added the JackrabbitNodeTypeManager extension interface and a simple implementation in NodeTypeManagerImpl.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378211 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.JackrabbitNodeTypeManager;
+import org.apache.jackrabbit.core.nodetype.xml.NodeTypeReader;
+import org.xml.sax.InputSource;
+import org.xml.sax.SAXException;
-import javax.jcr.nodetype.NodeTypeManager;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Set;
-public class NodeTypeManagerImpl implements NodeTypeManager, Dumpable,
-        NodeTypeRegistryListener {
+public class NodeTypeManagerImpl implements JackrabbitNodeTypeManager,
+        Dumpable, NodeTypeRegistryListener {
+    //--------------------------------------------< JackrabbitNodeTypeManager >
+
+    /**
+     * Registers the node types defined in the given XML stream. This is a
+     * trivial implementation that just invokes the existing
+     * {@link NodeTypeReader} and {@link NodeTypeRegistry} methods and
+     * heuristically creates the returned node type array.
+     *
+     * {@inheritDoc}
+     */
+    public NodeType[] registerNodeTypes(InputSource in)
+            throws SAXException, RepositoryException {
+        try {
+            NodeTypeDef[] defs = NodeTypeReader.read(in.getByteStream());
+            ntReg.registerNodeTypes(Arrays.asList(defs));
+
+            Set types = new HashSet();
+            for (int i = 0; i < defs.length; i++) {
+                try {
+                    types.add(getNodeType(defs[i].getName()));
+                } catch (NoSuchNodeTypeException e) {
+                    // ignore
+                }
+            }
+            return (NodeType[]) types.toArray(new NodeType[types.size()]);
+        } catch (InvalidNodeTypeDefException e) {
+            throw new RepositoryException("Invalid node type definition", e);
+        } catch (IOException e) {
+            throw new SAXException("Error reading node type stream", e);
+        }
+    }
+
+    private static final String APPLICATION_XML = "application/xml";
+
+    /** {@inheritDoc} */
+    public NodeType[] registerNodeTypes(InputStream in, String contentType)
+            throws IOException, RepositoryException {
+        if (contentType.equalsIgnoreCase(JackrabbitNodeTypeManager.TEXT_XML)
+            || contentType.equalsIgnoreCase(APPLICATION_XML)) {
+            try {
+                return registerNodeTypes(new InputSource(in));
+            } catch (SAXException e) {
+                throw new IOException(e.getMessage());
+            }
+        } else {
+            throw new UnsupportedOperationException(
+                    "Unsupported content type: " + contentType);
+        }
+    }
+

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD43 INS31 INS23 INS31 UPD42 INS29 INS83 INS5 INS42 INS44 INS43 INS43 INS8 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS5 INS42 INS44 INS44 INS43 INS43 INS8 INS65 INS43 INS85 INS43 INS42 INS42 INS42 INS54 INS42 INS42 INS45 INS65 INS43 INS85 INS43 INS42 INS43 INS42 INS42 INS42 INS25 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS65 INS42 INS42 INS8 INS12 INS12 INS65 INS66 INS42 INS42 INS42 INS27 INS8 INS8 INS42 INS42 INS60 INS21 INS60 INS24 INS41 INS44 INS8 INS44 INS8 INS32 INS32 INS54 INS53 INS5 INS59 INS32 INS43 INS59 INS58 INS27 INS37 INS8 INS11 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS42 INS40 INS42 INS42 INS42 INS8 INS12 INS14 INS43 INS85 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS54 INS5 INS32 INS42 INS14 INS42 INS14 INS41 INS44 INS8 INS43 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS42 INS34 INS8 INS12 INS43 INS85 INS42 INS42 INS3 INS43 INS45 INS42 INS43 INS45 INS42 INS32 INS43 INS42 INS53 INS42 INS45 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS5 INS32 INS42 INS42 INS42 INS14 INS42 INS14 INS32 INS43 INS42 INS43 INS85 INS42 INS42 INS43 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS2 INS42 INS42 INS42