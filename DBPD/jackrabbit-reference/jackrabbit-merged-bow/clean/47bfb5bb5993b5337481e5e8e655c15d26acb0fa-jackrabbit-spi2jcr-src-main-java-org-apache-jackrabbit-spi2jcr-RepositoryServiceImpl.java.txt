JCR-2113 : WIP (Contribution by Alfusainey Jallow)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1640892 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.JackrabbitWorkspace;
+import org.apache.jackrabbit.spi.PrivilegeDefinition;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinitionImpl;
+import javax.jcr.security.Privilege;
+    @Override
+    public PrivilegeDefinition[] getPrivilegeDefinitions(SessionInfo sessionInfo) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        Session session = sInfo.getSession();
+        Workspace wsp = session.getWorkspace();
+        Collection<Privilege> privs;
+        if (wsp instanceof JackrabbitWorkspace) {
+            privs = Arrays.asList(((JackrabbitWorkspace) wsp).getPrivilegeManager().getRegisteredPrivileges());
+        } else {
+            Privilege jcrAll = session.getAccessControlManager().privilegeFromName(Privilege.JCR_ALL);
+            privs = new HashSet<Privilege>();
+            privs.add(jcrAll);
+            for (Privilege p : jcrAll.getAggregatePrivileges()) {
+                privs.add(p);
+            }
+        }
+
+        PrivilegeDefinition[] pDefs = new PrivilegeDefinition[privs.size()];
+        NamePathResolver npResolver = sInfo.getNamePathResolver();
+        int i = 0;
+        for (Privilege p : privs) {
+            Set<Name> aggrnames = null;
+            if (p.isAggregate()) {
+                aggrnames = new HashSet<Name>();
+                for (Privilege dap : p.getDeclaredAggregatePrivileges()) {
+                    aggrnames.add(npResolver.getQName(dap.getName()));
+                }
+            }
+            PrivilegeDefinition def = new PrivilegeDefinitionImpl(npResolver.getQName(p.getName()), p.isAbstract(), aggrnames);
+            pDefs[i++] = def;
+        }
+        return pDefs;
+    }
+
+    public PrivilegeDefinition[] getSupportedPrivileges(SessionInfo sessionInfo, NodeId nodeId) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        String path = (nodeId == null) ? null : pathForId(nodeId, sInfo);
+
+        Privilege[] privs = sInfo.getSession().getAccessControlManager().getSupportedPrivileges(path);
+        PrivilegeDefinition[] pDefs = new PrivilegeDefinition[privs.length];
+        NamePathResolver npResolver = sInfo.getNamePathResolver();
+        for (int i = 0; i < privs.length; i++) {
+            Set<Name> aggrnames = null;
+            if (privs[i].isAggregate()) {
+                aggrnames = new HashSet<Name>();
+                for (Privilege dap : privs[i].getDeclaredAggregatePrivileges()) {
+                    aggrnames.add(npResolver.getQName(dap.getName()));
+                }
+            }
+            PrivilegeDefinition def = new PrivilegeDefinitionImpl(npResolver.getQName(privs[i].getName()), privs[i].isAbstract(), aggrnames);
+            pDefs[i] = def;
+        }
+        return pDefs;
+    }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS78 INS83 INS5 INS42 INS44 INS43 INS8 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS42 INS43 INS85 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS25 INS60 INS60 INS60 INS70 INS41 INS43 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS24 INS41 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS74 INS59 INS62 INS8 INS8 INS5 INS59 INS43 INS59 INS39 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS5 INS59 INS5 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS42 INS43 INS21 INS60 INS21 INS21 INS70 INS43 INS85 INS42 INS3 INS42 INS42 INS32 INS42 INS34 INS43 INS42 INS60 INS25 INS60 INS21 INS42 INS42 INS32 INS42 INS42 INS16 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS3 INS42 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS43 INS59 INS7 INS32 INS44 INS32 INS8 INS42 INS5 INS32 INS42 INS42 INS42 INS74 INS59 INS32 INS8 INS43 INS59 INS7 INS42 INS42 INS36 INS33 INS32 INS42 INS32 INS42 INS42 INS42 INS5 INS40 INS42 INS42 INS42 INS34 INS74 INS59 INS32 INS8 INS43 INS59 INS7 INS42 INS32 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS21 INS43 INS85 INS42 INS42 INS43 INS43 INS42 INS33 INS42 INS42 INS21 INS70 INS42 INS42 INS14 INS2 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS43 INS85 INS43 INS43 INS42 INS33 INS2 INS42 INS21 INS70 INS42 INS42 INS14 INS2 INS42 INS42 INS42 INS32 INS32 INS42 INS40 INS74 INS42 INS32 INS42 INS42 INS42 INS7 INS44 INS32 INS8 INS43 INS32 INS32 INS42 INS42 INS37 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS44 INS32 INS8 INS43 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS43 INS42 INS2 INS42 INS21 INS42 INS42 INS42 INS32 INS2 INS42 INS36 INS42 INS42 INS42 INS74 INS42 INS32 INS42 INS42 INS74 INS42 INS42 INS42 INS32 INS2 INS42 INS42 INS42 INS11 INS43 INS43 INS42 INS42 INS32 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42