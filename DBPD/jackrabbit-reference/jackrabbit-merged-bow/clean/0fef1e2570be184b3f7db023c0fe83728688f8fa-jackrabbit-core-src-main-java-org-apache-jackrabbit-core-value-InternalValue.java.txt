JCR-2149 Data Store: remove kill switch "InternalValue.USE_DATA_STORE"

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784691 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.io.IOUtils;
-import java.io.File;
-     * If set to 'true', the data store is used when configured in repository.xml
-     */
-    public static final boolean USE_DATA_STORE =
-        Boolean.valueOf(System.getProperty("org.jackrabbit.useDataStore", "true")).booleanValue();
-
-    /**
-                if (USE_DATA_STORE) {
-                    BLOBFileValue blob = null;
-                    if (value instanceof BinaryValueImpl) {
-                        BinaryValueImpl bin = (BinaryValueImpl) value;
-                        DataIdentifier identifier = bin.getDataIdentifier();
-                        if (identifier != null) {
-                            // access the record to ensure it is not garbage collected
-                            if (store.getRecordIfStored(identifier) != null) {
-                                // it exists - so we don't need to stream it again
-                                // but we need to create a new object because the original
-                                // one might be in a different data store (repository)
-                                blob = BLOBInDataStore.getInstance(store, identifier);
-                            }
+                BLOBFileValue blob = null;
+                if (value instanceof BinaryValueImpl) {
+                    BinaryValueImpl bin = (BinaryValueImpl) value;
+                    DataIdentifier identifier = bin.getDataIdentifier();
+                    if (identifier != null) {
+                        // access the record to ensure it is not garbage collected
+                        if (store.getRecordIfStored(identifier) != null) {
+                            // it exists - so we don't need to stream it again
+                            // but we need to create a new object because the original
+                            // one might be in a different data store (repository)
+                            blob = BLOBInDataStore.getInstance(store, identifier);
-                    if (blob == null) {
-                        blob = getBLOBFileValue(store, value.getBinary().getStream(), true);
-                    }
-                    result = new InternalValue(blob);
-                } else if (value instanceof BLOBFileValue) {
-                    result = new InternalValue((BLOBFileValue) value);
-                } else {
-                    InputStream stream = value.getBinary().getStream();
-                    try {
-                        result = createTemporary(stream);
-                    } finally {
-                        IOUtils.closeQuietly(stream);
-                    }
+                if (blob == null) {
+                    blob = getBLOBFileValue(store, value.getBinary().getStream(), true);
+                }
+                result = new InternalValue(blob);
-        if (USE_DATA_STORE) {
-            return new InternalValue(BLOBInMemory.getInstance(value));
-        }
-        return new InternalValue(new BLOBValue(value));
+        return new InternalValue(BLOBInMemory.getInstance(value));
-        if (USE_DATA_STORE) {
-            return new InternalValue(getBLOBFileValue(null, value, true));
-        }
-        try {
-            return new InternalValue(new BLOBValue(value, true));
-        } catch (IOException e) {
-            throw new RepositoryException("Error creating temporary file", e);
-        }
+        return new InternalValue(getBLOBFileValue(null, value, true));
-        if (USE_DATA_STORE) {
-            return new InternalValue(getBLOBFileValue(store, value, false));
-        }
-        try {
-            return new InternalValue(new BLOBValue(value, false));
-        } catch (IOException e) {
-            throw new RepositoryException("Error creating file", e);
-        }
+        return new InternalValue(getBLOBFileValue(store, value, false));
-        if (USE_DATA_STORE) {
-            return new InternalValue(getBLOBFileValue(null, value, false));
-        }
-        try {
-            return new InternalValue(new BLOBValue(value, false));
-        } catch (IOException e) {
-            throw new RepositoryException("Error creating file", e);
-        }
+        return new InternalValue(getBLOBFileValue(null, value, false));
-        if (USE_DATA_STORE) {
-            return new InternalValue(BLOBInResource.getInstance(value));
-        }
-        return new InternalValue(new BLOBValue(value));
-    }
-
-    /**
-     * @param value
-     * @return
-     * @throws IOException
-     */
-    public static InternalValue create(File value) throws IOException {
-        assert !USE_DATA_STORE;
-        return new InternalValue(new BLOBValue(value));
+        return new InternalValue(BLOBInResource.getInstance(value));
-        assert USE_DATA_STORE && store != null;
-        if (USE_DATA_STORE) {
-            if (v.isImmutable()) {
-                return this;
-            }
+        if (v.isImmutable()) {
+            return this;
-        assert USE_DATA_STORE;
-                return new BLOBValue(getString().getBytes(InternalValueFactory.DEFAULT_ENCODING));
+                byte[] data = getString().getBytes(InternalValueFactory.DEFAULT_ENCODING);
+                return BLOBInMemory.getInstance(data);

MOV8 MOV8 MOV8 MOV8 MOV8 MOV25 MOV60 MOV25 MOV25 MOV21 INS60 INS5 INS59 INS32 INS39 INS85 INS42 MOV32 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL32 DEL42 DEL32 DEL59 DEL23 DEL42 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL11 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL25 DEL25 DEL42 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL41 DEL8 DEL42 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL9 DEL14 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL9 DEL14 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL9 DEL14 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL41 DEL8 DEL42 DEL65 DEL65 DEL42 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL38 DEL6 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL33 DEL27 DEL27 DEL6 DEL42 DEL8 DEL25 DEL42 DEL6 DEL42 DEL43 DEL14