Initial checkin of QueryManager with support for JCRQL (search implementation is not complete, some features are missing: searching for distinct same name sibling, sorting not yet implemented, indexing contains potential for optimizing)

Changed observation to support SynchronousEventListeners. The search registers itself as synchronous event listener. Also changed access checking on events sent out, because checking access on removed nodes need to be performed before they actually get removed.

Extended config.xml, which allows now to specify an index location for the QueryManager.

Added jar files needed for search.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47399 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.ItemManager;
-import org.apache.jackrabbit.core.NodeId;
-final class EventImpl implements Event {
+public final class EventImpl implements Event {
-    private final ItemManager itemMgr;
+    //private final ItemManager itemMgr;
-    EventImpl(SessionImpl session, ItemManager itemMgr, EventState eventState) {
+    EventImpl(SessionImpl session, /*ItemManager itemMgr, */ EventState eventState) {
-	this.itemMgr = itemMgr;
+	//this.itemMgr = itemMgr;
-	return itemMgr.getItem(new NodeId(eventState.getParentUUID())).getPath();
+	try {
+	    return eventState.getParentPath().toJCRPath(session.getNamespaceResolver()); //itemMgr.getItem(new NodeId(eventState.getParentUUID())).getPath();
+	} catch (NoPrefixDeclaredException e) {
+	    String msg = "internal error: encountered unregistered namespace in path";
+	    log.error(msg, e);
+	    throw new RepositoryException(msg, e);
+	}
-	} catch (NoPrefixDeclaredException npde) {
+	} catch (NoPrefixDeclaredException e) {
-	    log.error(msg, npde);
-	    throw new RepositoryException(msg, npde);
+	    log.error(msg, e);
+	    throw new RepositoryException(msg, e);
+     * Returns the uuid of the parent node.
+     *
+     * @return the uuid of the parent node.
+     */
+    public String getParentUUID() {
+	return eventState.getParentUUID();
+    }
+
+    /**
+     * Returns the UUID of a child node operation.
+     * If this <code>Event</code> was generated for a property
+     * operation this method returns <code>null</code>.
+     * @return the UUID of a child node operation.
+     */
+    public String getChildUUID() {
+	return eventState.getChildUUID();
+    }
+
+    /**

MOV31 INS83 INS31 INS31 MOV29 INS83 INS43 INS42 MOV43 INS8 INS29 INS83 MOV43 INS42 INS8 INS29 INS43 UPD42 INS42 INS54 INS65 UPD65 MOV65 INS41 INS65 INS65 INS42 INS8 INS12 INS66 UPD66 MOV32 INS66 INS66 INS66 INS66 INS32 INS41 INS44 INS8 UPD42 MOV42 UPD42 MOV42 INS32 INS43 INS42 INS60 INS21 INS53 UPD42 INS32 INS42 INS32 INS42 INS43 INS59 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS42 INS42 UPD42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL14 DEL32 DEL42 DEL32