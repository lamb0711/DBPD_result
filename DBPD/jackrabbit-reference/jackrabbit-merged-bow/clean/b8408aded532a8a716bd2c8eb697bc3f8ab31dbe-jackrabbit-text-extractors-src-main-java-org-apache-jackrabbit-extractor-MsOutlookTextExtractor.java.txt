JCR-1878: Use Apache Tika for text extraction

Use POI through Tika to avoid the Java 5 compilation errors.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@762823 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.io.InputStream;
-import java.io.Reader;
-import java.io.StringReader;
-
-import org.apache.poi.hsmf.MAPIMessage;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-public class MsOutlookTextExtractor extends AbstractTextExtractor {
+public class MsOutlookTextExtractor extends DefaultTextExtractor {
-    /**
-     * Logger instance.
-     */
-    private static final Logger logger =
-        LoggerFactory.getLogger(MsOutlookTextExtractor.class);
+    private static String[] TYPES = new String[] {
+        "application/vnd.ms-outlook"
+    };
-    /**
-     * Force loading of dependent class.
-     */
-    static {
-        MAPIMessage.class.getName();
-    }
-
-    /**
-     * Creates a new <code>MsOutlookTextExtractor</code> instance.
-     */
-    public MsOutlookTextExtractor() {
-        super(new String[]{"application/vnd.ms-outlook"});
-    }
-
-    //-------------------------------------------------------< TextExtractor >
-
-    /**
-     * {@inheritDoc}
-     * Returns an empty reader if an error occured extracting text from
-     * the outlook message.
-     */
-    public Reader extractText(InputStream stream,
-                              String type,
-                              String encoding) throws IOException {
-        try {
-        	MAPIMessage message = new MAPIMessage(stream);
-        	StringBuffer buffer = new StringBuffer();
-        	buffer.append(message.getDisplayFrom()).append('\n');
-        	buffer.append(message.getDisplayTo()).append('\n');
-        	buffer.append(message.getSubject()).append('\n');
-        	buffer.append(message.getTextBody());
-            return new StringReader(buffer.toString());
-        } catch (Exception e) {
-            logger.warn("Failed to extract Message content", e);
-            return new StringReader("");
-        } finally {
-            stream.close();
-        }
+    public String[] getContentTypes() {
+        return TYPES;

UPD43 UPD42 INS5 INS5 INS42 INS8 MOV43 INS85 UPD42 MOV3 MOV43 INS85 MOV41 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL57 DEL42 DEL32 DEL21 DEL8 DEL28 DEL66 DEL65 DEL29 DEL83 DEL42 DEL46 DEL8 DEL31 DEL65 DEL66 DEL66 DEL65 DEL29 DEL42 DEL43 DEL45 DEL14 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL13 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL13 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL13 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8