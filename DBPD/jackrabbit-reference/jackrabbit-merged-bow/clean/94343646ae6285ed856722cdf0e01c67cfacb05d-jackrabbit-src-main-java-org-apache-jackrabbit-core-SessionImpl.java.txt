explicitly check for absolute path rather than relying on implicit check when path is resolved

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@350252 13f79535-47bb-0310-9956-ffa450edef68

-        Path targetPath = null;
+        Path targetPath;
+        try {
+            targetPath = Path.create(absPath, getNamespaceResolver(), true);
+        } catch (MalformedPathException mpe) {
+            String msg = "invalid path: " + absPath;
+            log.debug(msg, mpe);
+            throw new RepositoryException(msg);
+        }
+        if (!targetPath.isAbsolute()) {
+            throw new RepositoryException("not an absolute path: " + absPath);
+        }
+
-                targetPath = Path.create(absPath, getNamespaceResolver(), true);
-            } catch (MalformedPathException mpe) {
-                String msg = "invalid path: " + absPath;
-                log.warn(msg, mpe);
-                throw new RepositoryException(msg);
-                if (targetPath == null) {
-                    targetPath = Path.create(absPath, getNamespaceResolver(), true);
-                }
-            } catch (MalformedPathException mpe) {
-                String msg = "invalid path: " + absPath;
-                log.warn(msg, mpe);
-                throw new RepositoryException(msg);
-                if (targetPath == null) {
-                    targetPath = Path.create(absPath, getNamespaceResolver(), true);
-                }
-            } catch (MalformedPathException mpe) {
-                String msg = "invalid path: " + absPath;
-                log.warn(msg, mpe);
-                throw new RepositoryException(msg);
-                if (targetPath == null) {
-                    targetPath = Path.create(absPath, getNamespaceResolver(), true);
-                }
-            } catch (MalformedPathException mpe) {
-                String msg = "invalid path: " + absPath;
-                log.warn(msg, mpe);
-                throw new RepositoryException(msg);
-            return getItemManager().getItem(Path.create(absPath, getNamespaceResolver(), true));
+            Path p = Path.create(absPath, getNamespaceResolver(), true);
+            if (!p.isAbsolute()) {
+                throw new RepositoryException("not an absolute path: " + absPath);
+            }
+            return getItemManager().getItem(p);
-            return getItemManager().itemExists(Path.create(absPath, getNamespaceResolver(), true));
+            Path p = Path.create(absPath, getNamespaceResolver(), true);
+            if (!p.isAbsolute()) {
+                throw new RepositoryException("not an absolute path: " + absPath);
+            }
+            return getItemManager().itemExists(p);
+            if (!srcPath.isAbsolute()) {
+                throw new RepositoryException("not an absolute path: " + srcAbsPath);
+            }
+            if (!destPath.isAbsolute()) {
+                throw new RepositoryException("not an absolute path: " + destAbsPath);
+            }
-            item = getItemManager().getItem(Path.create(parentAbsPath, getNamespaceResolver(), true));
+            Path p = Path.create(parentAbsPath, getNamespaceResolver(), true);
+            if (!p.isAbsolute()) {
+                throw new RepositoryException("not an absolute path: " + parentAbsPath);
+            }
+            item = getItemManager().getItem(p);

INS54 INS25 MOV8 MOV12 INS38 INS8 INS32 INS53 INS60 INS25 INS60 INS25 INS41 INS25 INS25 INS60 INS25 INS42 INS42 INS14 INS43 INS59 INS38 INS8 INS43 INS59 INS38 INS8 INS32 INS38 INS8 INS38 INS8 INS43 INS59 INS38 INS8 INS43 INS27 INS42 INS42 MOV32 INS32 INS53 MOV32 INS42 INS42 INS42 MOV32 INS32 INS53 MOV32 UPD42 MOV42 INS42 INS32 INS53 INS32 INS53 INS42 INS42 MOV32 INS32 INS53 UPD42 INS42 INS45 INS42 INS42 INS42 INS14 UPD42 MOV42 UPD42 MOV42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS43 INS27 INS43 INS27 INS43 INS27 INS43 INS27 INS43 INS27 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 DEL33 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL9 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL9 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL32 DEL9 DEL32 DEL32 DEL41