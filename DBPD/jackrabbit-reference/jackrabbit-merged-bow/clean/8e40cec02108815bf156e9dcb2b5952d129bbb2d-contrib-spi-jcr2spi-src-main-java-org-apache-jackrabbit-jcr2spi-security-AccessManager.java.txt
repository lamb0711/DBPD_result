div

- get rid of rootId stored with ISM, HierarchyManagers etc.
- remove corresponding method with WorkspaceManager and WorkspaceImpl

jcr2spi/state/ItemState

- move parent field from Node/PropertyState to ItemState
- move idFactory field from NodeState to ItemState
- let PropertyState build its id instead of calling parentstate method.
- minor reordering of status related methods
- remove modCount and its usage

jcr2spi/state/ItemStateManager

- add method getRootNode()

jcr2spi/security/AccessManager

- replace ItemId by ItemState

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431352 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.ItemId;
-import org.apache.jackrabbit.spi.NodeId;
+import org.apache.jackrabbit.jcr2spi.state.ItemState;
+import org.apache.jackrabbit.jcr2spi.state.NodeState;
-     * @param parentId The node id the existing ancestor.
+     * @param parentState The node state of the next existing ancestor.
-    // TODO: method can be removed, if jcr2spi uses spi-ids as well
-    boolean isGranted(NodeId parentId, Path relPath, String[] actions) throws ItemNotFoundException, RepositoryException;
+    boolean isGranted(NodeState parentState, Path relPath, String[] actions) throws ItemNotFoundException, RepositoryException;
-      * Determines whether the specified <code>permissions</code> are granted
-      * on the item with the specified path.
-      *
-      * @param itemId The id of an existing target item.
-      * @param actions An array of actions that need to be checked.
-      * @return <code>true</code> if the actions are granted; otherwise <code>false</code>
-      * @throws ItemNotFoundException if the target item does not exist
-      * @throws RepositoryException if another error occurs
-      */
-     boolean isGranted(ItemId itemId, String[] actions) throws ItemNotFoundException, RepositoryException;
+     * Determines whether the specified <code>permissions</code> are granted
+     * on the item with the specified path.
+     *
+     * @param itemState
+     * @param actions An array of actions that need to be checked.
+     * @return <code>true</code> if the actions are granted; otherwise <code>false</code>
+     * @throws ItemNotFoundException if the target item does not exist
+     * @throws RepositoryException if another error occurs
+     */
+     boolean isGranted(ItemState itemState, String[] actions) throws ItemNotFoundException, RepositoryException;
-     * @param id The id of an existing target item.
+     * @param itemState
-    boolean canRead(ItemId id) throws ItemNotFoundException, RepositoryException;
+    boolean canRead(ItemState itemState) throws ItemNotFoundException, RepositoryException;
-     * Returns true if the existing item with the given <code>ItemId</code> can
-     * be removed.
+     * Returns true if the existing item state can be removed.
-     * @param id The id of an existing target item.
+     * @param itemState
-    boolean canRemove(ItemId id) throws ItemNotFoundException, RepositoryException;
+    boolean canRemove(ItemState itemState) throws ItemNotFoundException, RepositoryException;

MOV26 UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 UPD66 UPD42 UPD42 DEL66 DEL66 DEL66 DEL66