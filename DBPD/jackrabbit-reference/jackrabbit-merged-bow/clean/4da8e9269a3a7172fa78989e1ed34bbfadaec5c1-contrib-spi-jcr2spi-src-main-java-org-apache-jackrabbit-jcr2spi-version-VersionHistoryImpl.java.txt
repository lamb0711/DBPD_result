work in progress

- operations: rename getAffectedIds to getAffectedStates
- operations: return ItemState params instead of ids whereever possible and
  let OperationVisitor deal with all kind of issues arising with SPI ids.
- AddNode/AddProperty operations: don't list state to be created as affected. Not required since operations are collected upon refresh/save, in which case a 'new' item can never be the starting point.
- transient move: let parent NodeState handle the move/renaming of child states
- transient reorder: let parent NodeState handle the reorder logic
- NodeState: remove unused methods and mark setParent private
- NodeImpl: protected getNodeId() no more used by subclasses in version package.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431887 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.NodeId;
-        try {
-            NodeState vState = getVersionEntry(versionName).getNodeState();
-            return (Version) itemMgr.getItem(vState);
-        } catch (ItemStateException e) {
-            // should not occur
-            throw new RepositoryException(e);
-        }
+        NodeState vState = getVersionState(versionName);
+        return (Version) itemMgr.getItem(vState);
-        ChildNodeEntry vEntry = getVersionEntryByLabel(getQLabel(label));
-        try {
-            return (Version) itemMgr.getItem(vEntry.getNodeState());
-        } catch (ItemStateException e) {
-            // should not occur
-            throw new RepositoryException(e);
-        }
+        NodeState vState = getVersionStateByLabel(getQLabel(label));
+        return (Version) itemMgr.getItem(vState);
-        ChildNodeEntry vEntry = getVersionEntry(versionName);
+        NodeState vState = getVersionState(versionName);
-        session.getVersionManager().addVersionLabel(getNodeId(), vEntry.getId(), qLabel, moveLabel);
+        session.getVersionManager().addVersionLabel(vhState, vState, qLabel, moveLabel);
-        ChildNodeEntry vEntry = getVersionEntryByLabel(getQLabel(label));
-
+        NodeState vState = getVersionStateByLabel(getQLabel(label));
-        session.getVersionManager().removeVersionLabel(getNodeId(), vEntry.getId(), qLabel);
+        session.getVersionManager().removeVersionLabel(vhState, vState, qLabel);
-                NodeId vId = getVersionEntryByLabel(qLabels[i]).getId();
-                return vUUID.equals(vId.getUUID());
+                String uuid = getVersionStateByLabel(qLabels[i]).getUUID();
+                return vUUID.equals(uuid);
-            NodeId vId = getVersionEntryByLabel(qLabels[i]).getId();
-            if (vUUID.equals(vId.getUUID())) {
+            String uuid = getVersionStateByLabel(qLabels[i]).getUUID();
+            if (vUUID.equals(uuid)) {
-        ChildNodeEntry vEntry = getVersionEntry(versionName);
-        session.getVersionManager().removeVersion(vEntry.getId(), getNodeId());
+        NodeState vState = getVersionState(versionName);
+        session.getVersionManager().removeVersion(vhState, vState);
-            // in the same workspace, a simple comparison of the ids is sufficient
+            // in the same workspace, a simple comparison of the UUIDs is sufficient.
-            return getNodeId().equals(other.getNodeId());
+            return vhState.getUUID().equals(other.vhState.getUUID());
-    private ChildNodeEntry getVersionEntry(String versionName) throws VersionException, RepositoryException {
+    private NodeState getVersionState(String versionName) throws VersionException, RepositoryException {
-                return vEntry;
+                return vEntry.getNodeState();
+        } catch (ItemStateException e) {
+            // should not occure
+            throw new RepositoryException(e);
-    private ChildNodeEntry getVersionEntryByLabel(QName qLabel) throws VersionException, RepositoryException {
+    private NodeState getVersionStateByLabel(QName qLabel) throws VersionException, RepositoryException {
-                return getVersionEntry(version.getName());
+                return getVersionState(version.getName());

MOV8 UPD43 UPD42 UPD43 UPD42 INS41 MOV60 MOV60 UPD42 UPD42 UPD43 INS11 UPD43 UPD43 UPD43 MOV12 INS32 UPD42 UPD42 INS43 INS32 UPD42 UPD42 MOV32 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 INS42 INS42 INS42 INS42 UPD42 UPD42 MOV42 UPD42 UPD43 UPD42 MOV8 UPD42 UPD42 UPD42 MOV42 UPD43 UPD42 INS42 UPD42 INS40 UPD42 MOV32 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL54 DEL32 DEL32 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL42 DEL41 DEL8