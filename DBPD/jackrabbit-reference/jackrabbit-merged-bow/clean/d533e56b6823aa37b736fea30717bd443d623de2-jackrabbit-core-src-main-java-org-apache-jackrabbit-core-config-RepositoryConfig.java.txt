JCR-2569: Implement jcr-jackrabbit://... repository URIs

Pass repository parameters from RepositoryFactoryImpl to RepositoryConfigurationParser

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@923653 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.jackrabbit.core.config.RepositoryConfigurationParser.REPOSITORY_CONF_VARIABLE;
+import static org.apache.jackrabbit.core.config.RepositoryConfigurationParser.REPOSITORY_HOME_VARIABLE;
+
+import org.apache.jackrabbit.core.RepositoryFactoryImpl;
+     * Returns the configuration of a repository with the home directory,
+     * configuration file, and other options as specified in the given
+     * configuration parser variables. 
+     * <p>
+     * The directory is created if it does not exist. If the repository
+     * configuration file does not exist, then it is created using the
+     * default Jackrabbit configuration settings.
+     *
+     * @since Apache Jackrabbit 2.1
+     * @param variables parser variables
+     * @return repository configuration
+     * @throws ConfigurationException on configuration errors
+     */
+    public static RepositoryConfig install(Properties variables)
+            throws IOException, ConfigurationException {
+        Properties copy = new Properties(variables);
+
+        String home = copy.getProperty(REPOSITORY_HOME_VARIABLE);
+        if (home == null) {
+            home = copy.getProperty(
+                    RepositoryFactoryImpl.REPOSITORY_HOME, "jackrabbit");
+            copy.setProperty(REPOSITORY_HOME_VARIABLE, home);
+        }
+        File dir = new File(home);
+
+        String conf = copy.getProperty(REPOSITORY_CONF_VARIABLE);
+        if (conf == null) {
+            conf = copy.getProperty(RepositoryFactoryImpl.REPOSITORY_CONF);
+        }
+        if (conf == null) {
+            conf = new File(dir, REPOSITORY_XML).getPath();
+        }
+        File xml = new File(conf);
+
+        installRepositorySkeleton(xml, dir);
+        return create(new InputSource(xml.toURI().toString()), copy);
+    }
+
+    /**
+        installRepositorySkeleton(xml, dir);
+        return create(xml, dir);
+    }
+
+    private static void installRepositorySkeleton(File xml, File dir)
+            throws IOException {
-
-        return create(xml, dir);
-     * Parses the given repository configuration document and returns the
-     * parsed and initialized repository configuration. The given repository
-     * home directory path will be used as the ${rep.home} parser variable.
-     * <p>
-     * Note that in addition to parsing the repository configuration, this
-     * method also initializes the configuration (creates the configured
-     * directories, etc.). The {@link ConfigurationParser} class should be
-     * used directly to just parse the configuration.
+     * Convenience method that invokes the
+     * {@link #create(InputSource, Properties)} method with the given
+     * repository home home directory path set as the ${rep.home} parser
+     * variable. Also all system properties are used as parser variables.
-        variables.setProperty(
-                RepositoryConfigurationParser.REPOSITORY_HOME_VARIABLE, home);
+        variables.setProperty(REPOSITORY_HOME_VARIABLE, home);
+        return create(xml, variables);
+    }
+
+    /**
+     * Parses the given repository configuration document using the given
+     * parser variables. Note that the ${rep.home} variable should be set
+     * by the caller!
+     * <p>
+     * Note that in addition to parsing the repository configuration, this
+     * method also initializes the configuration (creates the configured
+     * directories, etc.). The {@link ConfigurationParser} class should be
+     * used directly to just parse the configuration.
+     *
+     * @since Apache Jackrabbit 2.1
+     * @param xml repository configuration document
+     * @param variables parser variables
+     * @return repository configuration
+     * @throws ConfigurationException on configuration errors
+     */
+    public static RepositoryConfig create(InputSource xml, Properties variables)
+            throws ConfigurationException {

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS43 INS43 INS8 MOV29 INS83 INS83 MOV43 INS42 INS44 INS44 INS43 MOV43 INS8 UPD83 INS39 UPD42 INS29 INS83 INS83 INS43 INS42 INS44 MOV44 INS43 INS8 INS44 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS25 INS60 INS60 INS25 INS25 INS60 INS21 INS41 INS43 INS42 INS43 INS42 INS42 INS21 MOV41 INS65 MOV65 MOV65 MOV65 MOV65 INS42 INS43 INS42 INS42 MOV60 INS21 INS41 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS43 INS59 INS32 INS32 INS42 INS42 INS32 INS66 INS65 INS66 INS66 INS66 INS42 INS32 INS32 UPD66 UPD66 UPD66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS68 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS7 INS32 INS43 INS42 INS42 INS42 INS42 INS7 INS7 INS43 INS42 INS43 INS32 INS42 INS69 INS69 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS42 INS40 INS45 INS42 INS42 INS40 INS14 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21