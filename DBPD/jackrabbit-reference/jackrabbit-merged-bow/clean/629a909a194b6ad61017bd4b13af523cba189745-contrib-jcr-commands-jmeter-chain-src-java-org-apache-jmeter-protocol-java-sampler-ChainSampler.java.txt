Fix. parameters containing dynamic functions

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@219419 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jmeter.protocol.java.sampler.AbstractJavaSamplerClient;
-import org.apache.jmeter.protocol.java.sampler.JavaSamplerClient;
-import org.apache.jmeter.protocol.java.sampler.JavaSamplerContext;
- * A sampler for executing custom Commons Chain Commands 
+ * A sampler for executing custom Commons Chain Commands
-            }
+            } 
+            
+            updateCommand() ;
-     * The <code>createJavaClient()</code> method uses reflection to create
-     * the Command. If the class can not be found, the method returns a
-     * reference to <code>this</code> object.
-     * 
-        Class javaClass = Class.forName(
-            getClassname().trim(),
-            false,
-            Thread.currentThread().getContextClassLoader());
+        Class javaClass = Class.forName(getClassname().trim(), false, Thread
+            .currentThread().getContextClassLoader());
-        Map descrip = BeanUtils.describe(command);
-        Iterator iter = descrip.keySet().iterator();
-        while (iter.hasNext())
-        {
-            String key = (String) iter.next();
-            Object value = this.getArguments().getArgumentsAsMap().get(key);
-            if (value != null && value.toString().length()>0)
-            {
-                BeanUtils.setProperty(command, key, value);
-            }
-        }
-
+    
+    /**
+     * Updates the command attributes 
+     * @throws Exception
+     */
+    private void updateCommand() throws Exception {
+        Map descrip = BeanUtils.describe(command);
+        Iterator iter = descrip.keySet().iterator();
+        while (iter.hasNext())
+        {
+            String key = (String) iter.next();
+            Object value = this.getArguments().getArgumentsAsMap().get(key);
+            if (value != null && value.toString().length() > 0)
+            {
+                BeanUtils.setProperty(command, key, value);
+            }
+        }
+    }
-     * of JavaSampler. This method will loop through all of the other
-     * JavaSamplers which have been registered (automatically in the
+     * of ChainSampler. This method will loop through all of the other
+     * samplers which have been registered (automatically in the
-     * JavaSamplerClients to cleanup.
+     * ChainSamplerClients to cleanup.
-    /**
-     * A {@link JavaSamplerClient}implementation used for error handling. If an
-     * error occurs while creating the real JavaSamplerClient object, it is
-     * replaced with an instance of this class. Each time a sample occurs with
-     * this class, the result is marked as a failure so the user can see that
-     * the test failed.
-     */
-    class ErrorSamplerClient extends AbstractJavaSamplerClient
-    {
-        /**
-         * Return SampleResult with data on error.
-         * 
-         * @see JavaSamplerClient#runTest()
-         */
-        public SampleResult runTest(JavaSamplerContext context)
-        {
-            log.debug(whoAmI() + "\trunTest");
-            Thread.yield();
-            SampleResult results = new SampleResult();
-            results.setSuccessful(false);
-            results.setResponseData(("Class not found: " + getClassname()).getBytes());
-            results.setSampleLabel("ERROR: " + getClassname());
-            return results;
-        }
-    }

MOV31 UPD83 MOV43 INS42 INS43 INS39 UPD42 UPD66 MOV65 UPD42 MOV42 MOV60 MOV21 MOV25 MOV41 INS65 UPD66 UPD66 INS42 UPD66 UPD66 UPD66 INS21 INS32 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL68 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL32 DEL27 DEL36 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL41 DEL66 DEL66 DEL66 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL55