JCR-3098 Add hit miss statistics and logging to caches
 - patch by Bart van der Schans

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1182713 13f79535-47bb-0310-9956-ffa450edef68

+     * Cache access counter. Unike his counterpart {@link #accessCount}, this
+     * does not get reset.
+     * 
+     * It is used in the cases where a cache listener needs to call
+     * {@link Cache#resetAccessCount()}, but also needs a total access count. If
+     * you are sure that nobody calls reset, you can just use
+     * {@link #accessCount}.
+     */
+    private final AtomicLong totalAccessCount = new AtomicLong();
+
+    /**
+     * Cache miss counter.
+     */
+    private final AtomicLong missCount = new AtomicLong();
+
+    /**
-                listener.cacheAccessed();
+                listener.cacheAccessed(count);
+        totalAccessCount.incrementAndGet();
+    }
+
+    protected void recordCacheMiss() {
+        missCount.incrementAndGet();
+    
+    public long getTotalAccessCount(){
+        return totalAccessCount.get();
+    }
+
+    public long getMissCount() {
+        return missCount.get();
+    }
+
+    public void resetMissCount() {
+        missCount.set(0);
+    }
+    /**
+     * {@inheritDoc}
+     */
+    public String getCacheInfoAsString() {
+        long u = getMemoryUsed() / 1024;
+        long m = getMaxMemorySize() / 1024;
+        StringBuilder c = new StringBuilder();
+        c.append("Cache name=");
+        c.append(this.toString());
+        c.append(", elements=");
+        c.append(getElementCount());
+        c.append(", used memory=");
+        c.append(u);
+        c.append(", max memory=");
+        c.append(m);
+        c.append(", access=");
+        c.append(getTotalAccessCount());
+        c.append(", miss=");
+        c.append(getMissCount());
+        return c.toString();
+    }

INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS42 INS42 INS14 INS65 INS42 INS42 INS14 INS21 INS21 INS41 INS41 INS21 INS65 INS42 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS43 INS66 INS43 INS32 INS32 INS32 INS32 INS32 INS65 INS39 INS59 INS39 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS67 INS68 INS67 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS32 INS34 INS43 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42