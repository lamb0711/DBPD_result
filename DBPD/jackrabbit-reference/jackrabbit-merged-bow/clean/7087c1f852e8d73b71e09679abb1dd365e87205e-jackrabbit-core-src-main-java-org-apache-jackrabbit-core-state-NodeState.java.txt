JCR-1709: Remove Serializable on ItemState classes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@683244 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.commons.name.NameFactoryImpl;
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
-import java.io.Serializable;
-     * Serialization UID of this class.
-     */
-    static final long serialVersionUID = 4392375681805781770L;
-
-    /**
-    //-------------------------------------------------< Serializable support >
-    private void writeObject(ObjectOutputStream out) throws IOException {
-        // delegate to default implementation
-        out.defaultWriteObject();
-    }
-
-    private void readObject(ObjectInputStream in)
-            throws IOException, ClassNotFoundException {
-        // delegate to default implementation
-        in.defaultReadObject();
-    }
-
-    private static class ChildNodeEntries implements List, Cloneable, Serializable {
+    private static class ChildNodeEntries implements List, Cloneable {
-        //---------------------------------------------< Serializable support >
-        private void writeObject(ObjectOutputStream out) throws IOException {
-            // important: fields must be written in same order as they are
-            // read in readObject(ObjectInputStream)
-            out.writeShort(size()); // count
-            for (Iterator iter = iterator(); iter.hasNext();) {
-                NodeState.ChildNodeEntry entry =
-                        (NodeState.ChildNodeEntry) iter.next();
-                out.writeUTF(entry.getName().toString());   // name
-                out.writeUTF(entry.getId().toString());  // id
-            }
-        }
-
-        private void readObject(ObjectInputStream in) throws IOException {
-            entries = new LinkedMap();
-            nameMap = new HashMap();
-            // important: fields must be read in same order as they are
-            // written in writeObject(ObjectOutputStream)
-            short count = in.readShort();   // count
-            for (int i = 0; i < count; i++) {
-                Name name = NameFactoryImpl.getInstance().create(in.readUTF());    // name
-                String s = in.readUTF();   // id
-                add(name, NodeId.valueOf(s));
-            }
-        }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL43 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31