fixed issue that could cause (misleading) ItemNotFoundException being thrown during Item.save() when save() failed for some other legitimate reason

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@392978 13f79535-47bb-0310-9956-ffa450edef68

-    private void restoreTransientItems(Iterator iter)
-            throws RepositoryException {
+    private void restoreTransientItems(Iterator iter) {
-            if (stateMgr.isItemStateInAttic(id)) {
-                // If an item has been removed and then again created, the
-                // item is lost after persistTransientItems() and the
-                // TransientItemStateManager will bark because of a deleted
-                // state in its attic. We therefore have to forge a new item
-                // instance ourself.
-                if (itemState.isNode()) {
-                    item = itemMgr.createNodeInstance((NodeState) itemState);
+            try {
+                if (stateMgr.isItemStateInAttic(id)) {
+                    // If an item has been removed and then again created, the
+                    // item is lost after persistTransientItems() and the
+                    // TransientItemStateManager will bark because of a deleted
+                    // state in its attic. We therefore have to forge a new item
+                    // instance ourself.
+                    if (itemState.isNode()) {
+                        item = itemMgr.createNodeInstance((NodeState) itemState);
+                    } else {
+                        item = itemMgr.createPropertyInstance((PropertyState) itemState);
+                    }
+                    itemState.setStatus(ItemState.STATUS_NEW);
-                    item = itemMgr.createPropertyInstance((PropertyState) itemState);
+                    try {
+                        item = itemMgr.getItem(id);
+                    } catch (ItemNotFoundException infe) {
+                        // itemState probably represents a 'new' item and the
+                        // ItemImpl instance wrapping it has already been gc'ed;
+                        // we have to re-create the ItemImpl instance
+                        if (itemState.isNode()) {
+                            item = itemMgr.createNodeInstance((NodeState) itemState);
+                        } else {
+                            item = itemMgr.createPropertyInstance((PropertyState) itemState);
+                        }
+                        itemState.setStatus(ItemState.STATUS_NEW);
+                    }
-                itemState.setStatus(ItemState.STATUS_NEW);
-            } else {
-                item = itemMgr.getItem(id);
-            }
-            if (!item.isTransient()) {
-                // reapply transient changes (i.e. undo effect of item.makePersistent())
-                if (item.isNode()) {
-                    NodeImpl node = (NodeImpl) item;
-                    node.restoreTransient((NodeState) itemState);
-                } else {
-                    PropertyImpl prop = (PropertyImpl) item;
-                    prop.restoreTransient((PropertyState) itemState);
+                if (!item.isTransient()) {
+                    // reapply transient changes (i.e. undo effect of item.makePersistent())
+                    if (item.isNode()) {
+                        NodeImpl node = (NodeImpl) item;
+                        node.restoreTransient((NodeState) itemState);
+                    } else {
+                        PropertyImpl prop = (PropertyImpl) item;
+                        prop.restoreTransient((PropertyState) itemState);
+                    }
+            } catch (RepositoryException re) {
+                // something went wrong, log exception and carry on
+                String msg = itemMgr.safeGetJCRPath(id)
+                    + ": failed to restore transient state";
+                log.warn(msg, re);
-         * of calling Node.revert() or ItemImpl.setRemoved()
+         * of calling Item.refresh(false) or ItemImpl.setRemoved()
-                        String msg = safeGetJCRPath() + ": cannot revert a new item.";
+                        String msg = safeGetJCRPath() + ": cannot refresh a new item.";

INS54 INS8 INS12 MOV25 MOV25 INS44 INS8 INS8 MOV43 INS42 INS60 INS21 INS54 INS43 INS59 INS32 MOV8 INS12 INS42 INS42 INS27 INS42 INS42 INS42 INS42 UPD45 INS44 INS8 INS32 INS45 INS43 INS42 INS25 INS21 INS42 INS42 INS42 INS42 INS32 INS8 INS8 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS40 INS7 INS7 INS42 INS32 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS11 INS43 INS42 INS43 INS42 INS42 INS42