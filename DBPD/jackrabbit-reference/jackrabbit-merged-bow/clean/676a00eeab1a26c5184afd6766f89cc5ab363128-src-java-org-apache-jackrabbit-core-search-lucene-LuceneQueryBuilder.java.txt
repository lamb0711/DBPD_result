Implement location step with context position index.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156923 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.state.ItemStateManager;
+import org.apache.jackrabbit.core.search.QueryNode;
+     * The shared item state manager of the workspace.
+     */
+    private ItemStateManager sharedItemMgr;
+
+    /**
+     * @param sharedItemMgr the shared item state manager of the workspace.
+                               ItemStateManager sharedItemMgr,
+        this.sharedItemMgr = sharedItemMgr;
+     * @param sharedItemMgr the shared item state manager of the workspace.
+                                    ItemStateManager sharedItemMgr,
-        LuceneQueryBuilder builder = new LuceneQueryBuilder(root,
-                session, nsMappings, analyzer, propReg);
+        LuceneQueryBuilder builder = new LuceneQueryBuilder(root, session,
+                sharedItemMgr, nsMappings, analyzer, propReg);
+        // check for position predicate
+        QueryNode[] pred = node.getPredicates();
+        for (int i = 0; i < pred.length; i++) {
+            if (pred[i].getType() == QueryNode.TYPE_RELATION) {
+                RelationQueryNode pos = (RelationQueryNode) pred[i];
+                if (pos.getValueType() == QueryConstants.TYPE_POSITION) {
+                    node.setIndex(pos.getPositionValue());
+                }
+            }
+        }
+
-                    // @todo this will traverse the whole index, optimize!
+                    // todo this will traverse the whole index, optimize!
-                    andQuery.add(new ChildAxisQuery(context), true, false);
+                    andQuery.add(new ChildAxisQuery(sharedItemMgr, context, null, node.getIndex()), true, false);
-            // select child nodes
-            andQuery.add(new ChildAxisQuery(context), true, false);
-
-                andQuery.add(nameTest, true, false);
+                andQuery.add(new ChildAxisQuery(sharedItemMgr, context, nameTest.getTerm().text(), node.getIndex()), true, false);
+            } else {
+                // select child nodes
+                andQuery.add(new ChildAxisQuery(sharedItemMgr, context, null, node.getIndex()), true, false);
+            case QueryConstants.TYPE_POSITION:
+                // ignore position. is handled in the location step
+                return null;

INS26 INS26 INS40 INS40 INS23 INS29 INS83 INS43 INS59 INS44 INS44 INS65 INS42 INS42 INS65 INS43 INS42 INS21 INS65 INS43 INS42 INS60 INS24 INS66 INS42 INS66 INS42 INS7 INS42 INS66 INS42 MOV43 INS5 INS59 INS58 INS27 INS37 INS8 INS41 INS49 INS22 INS42 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS25 INS40 INS33 INS52 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS34 INS27 INS8 MOV27 INS8 MOV8 INS32 INS40 INS60 INS25 MOV21 INS2 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS11 INS32 INS40 INS21 INS14 INS43 INS2 INS42 INS42 INS32 MOV43 INS42 INS32 INS32 INS43 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 MOV43 INS42 INS33 INS32 INS42 INS42 INS42 INS42 DEL25