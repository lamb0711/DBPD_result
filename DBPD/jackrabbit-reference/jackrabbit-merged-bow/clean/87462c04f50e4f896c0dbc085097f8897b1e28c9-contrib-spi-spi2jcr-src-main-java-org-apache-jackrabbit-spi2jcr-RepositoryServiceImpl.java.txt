JCR-1007: Move common implementations of SPI interfaces to spi-commons module

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@553507 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.EventFilterImpl;
-import org.apache.jackrabbit.util.IteratorHelper;
+import javax.jcr.lock.Lock;
-     * items to be accessed upon a call to {@link getNodeInfo(SessionInfo, NodeId)}.
+     * items to be accessed upon a call to {@link #getNodeInfo(SessionInfo, NodeId)}.
-        return new QNodeDefinitionImpl(getNode(nodeId, sInfo).getDefinition(),
-                sInfo.getNamespaceResolver());
+        try {
+            return new QNodeDefinitionImpl(getNode(nodeId, sInfo).getDefinition(),
+                    sInfo.getNamespaceResolver());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-        return new QPropertyDefinitionImpl(
-                getProperty(propertyId, sInfo).getDefinition(),
-                sInfo.getNamespaceResolver(),
-                getQValueFactory());
+        try {
+            return new QPropertyDefinitionImpl(
+                    getProperty(propertyId, sInfo).getDefinition(),
+                    sInfo.getNamespaceResolver(),
+                    getQValueFactory());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-        NodeInfo info = new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
-        return info;
+        try {
+            return new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-            NodeInfo info = new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
+            NodeInfo info;
+            try {
+                info = new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver());
+            } catch (NameException e) {
+                throw new RepositoryException(e);
+            }
-                    itemInfos.add(new PropertyInfoImpl(property, idFactory, sInfo.getNamespaceResolver(), getQValueFactory()));
+                    try {
+                        itemInfos.add(new PropertyInfoImpl(property, idFactory, sInfo.getNamespaceResolver(), getQValueFactory()));
+                    } catch (NameException e) {
+                        throw new RepositoryException(e);
+                    }
-                    itemInfos.add(new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver()));
+                    try {
+                        itemInfos.add(new NodeInfoImpl(node, idFactory, sInfo.getNamespaceResolver()));
+                    } catch (NameException e) {
+                        throw new RepositoryException(e);
+                    }
-        while (children.hasNext()) {
-            childInfos.add(new ChildInfoImpl(children.nextNode(),
-                    sInfo.getNamespaceResolver()));
+        try {
+            while (children.hasNext()) {
+                childInfos.add(new ChildInfoImpl(children.nextNode(),
+                        sInfo.getNamespaceResolver()));
+            }
+        } catch (NameException e) {
+            throw new RepositoryException(e);
-        return new IteratorHelper(childInfos);
+        return childInfos.iterator();
-        return new PropertyInfoImpl(getProperty(propertyId, sInfo), idFactory,
-                sInfo.getNamespaceResolver(), getQValueFactory());
+        try {
+            return new PropertyInfoImpl(getProperty(propertyId, sInfo), idFactory,
+                    sInfo.getNamespaceResolver(), getQValueFactory());
+        } catch (NameException e) {
+            throw new RepositoryException(e);
+        }
-        return new LockInfoImpl(getNode(nodeId, sInfo), idFactory,
+        return new LockInfoImpl(getNode(nodeId, sInfo).getLock(), idFactory,
-                n.lock(deep, sessionScoped);
-                return new LockInfoImpl(n, idFactory, sInfo.getNamespaceResolver());
+                Lock lock = n.lock(deep, sessionScoped);
+                return new LockInfoImpl(lock, idFactory, sInfo.getNamespaceResolver());
-        for (NodeTypeIterator it = ntMgr.getAllNodeTypes(); it.hasNext(); ) {
-            NodeType nt = it.nextNodeType();
-            nodeTypes.add(new QNodeTypeDefinitionImpl(nt,
-                    sInfo.getNamespaceResolver(), getQValueFactory()));
+        try {
+            for (NodeTypeIterator it = ntMgr.getAllNodeTypes(); it.hasNext(); ) {
+                NodeType nt = it.nextNodeType();
+                nodeTypes.add(new QNodeTypeDefinitionImpl(nt,
+                        sInfo.getNamespaceResolver(), getQValueFactory()));
+            }
+        } catch (NameException e) {
+            throw new RepositoryException(e);

MOV26 INS26 UPD40 INS40 INS8 INS8 INS8 MOV60 INS54 MOV60 INS54 INS54 INS54 INS41 MOV60 INS54 INS54 MOV8 INS12 MOV8 INS12 INS8 INS12 INS8 INS12 INS32 MOV8 INS12 INS8 INS12 INS68 INS44 INS8 INS44 INS8 INS41 INS44 INS8 INS54 MOV61 INS44 INS8 INS42 INS42 INS44 INS8 INS32 MOV24 INS44 INS8 INS42 INS69 INS69 INS43 INS42 INS53 INS43 INS42 INS53 MOV14 INS43 INS42 INS53 INS8 INS12 INS43 INS42 INS53 INS43 INS42 INS53 MOV32 INS42 INS43 INS42 INS53 INS43 INS43 INS42 INS14 INS42 INS14 UPD42 MOV42 INS14 INS21 INS44 INS8 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS7 INS43 INS42 INS53 UPD43 MOV43 UPD42 MOV42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 MOV14 INS42 INS14 UPD42 INS42 INS42 INS43 INS42 INS8 INS8 INS60 INS42 INS54 INS54 INS43 INS59 MOV8 INS12 MOV8 INS12 INS42 INS42 MOV32 UPD42 INS44 INS8 INS44 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS14 INS42 INS14 INS43 INS42 INS43 INS42 INS42 INS42 DEL66 DEL43 DEL42 DEL59 DEL60 DEL42 DEL41 DEL14 DEL41 DEL21