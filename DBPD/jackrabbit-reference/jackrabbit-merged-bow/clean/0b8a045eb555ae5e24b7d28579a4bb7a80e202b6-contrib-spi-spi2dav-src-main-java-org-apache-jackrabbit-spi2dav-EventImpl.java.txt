work in progress

- add 'isSessionScoped' to LockInfo and RepositoryService.lock
- add index to NodeInfo
- evaluate EventIds upon call to getId, getParentId
- convert Method-Not-Allowed to ConstraintViolation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@467911 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.PropertyId;
-    private final ItemId itemId;
-    private final NodeId parentId;
+
+    private final SessionInfo sessionInfo;
+    private final URIResolver uriResolver;
+
+    private final String href;
+        this.uriResolver = uriResolver;
+        this.sessionInfo = sessionInfo;
-        String href = DomUtil.getChildTextTrim(eventElement, DavConstants.XML_HREF, DavConstants.NAMESPACE);
-        if (type == Event.NODE_ADDED || type == Event.NODE_REMOVED) {
-            itemId = uriResolver.getNodeId(href, sessionInfo);
-            String parentHref = Text.getRelativeParent(href, 1, true);
-            parentId = uriResolver.getNodeId(parentHref, sessionInfo);
-        } else {
-            itemId = uriResolver.getPropertyId(href, sessionInfo);
-            parentId = ((PropertyId)itemId).getParentId();
-        }
-        qPath = uriResolver.getQPath(Text.unescape(href), sessionInfo);
+        href = DomUtil.getChildTextTrim(eventElement, DavConstants.XML_HREF, DavConstants.NAMESPACE);
+        qPath = uriResolver.getQPath(href, sessionInfo);
-        return itemId;
+        try {
+            if (type == Event.NODE_ADDED || type == Event.NODE_REMOVED) {
+                return uriResolver.getNodeId(href, sessionInfo);
+            } else {
+                return uriResolver.getPropertyId(href, sessionInfo);
+            }
+        } catch (RepositoryException e) {
+            // should never occur
+            log.error("Internal error, while building id of Event.", e);
+            // TODO: check
+            throw new IllegalStateException();
+        }
-        return parentId;
+        try {
+            String parentHref = Text.getRelativeParent(href, 1, true);
+            return uriResolver.getNodeId(parentHref, sessionInfo);
+        } catch (RepositoryException e) {
+            // should never occur
+            log.error("Internal error, while building parentId of Event.", e);
+            // TODO: check
+            throw new IllegalStateException();
+        }
-        return itemId.getUUID();
+        return getItemId().getUUID();

INS23 UPD43 UPD43 INS83 INS83 MOV43 INS59 INS8 INS8 UPD42 UPD42 UPD42 UPD42 INS42 MOV21 MOV21 INS21 INS54 INS54 INS7 INS8 INS12 MOV8 INS12 INS22 INS42 INS22 INS42 INS42 MOV32 INS25 INS44 INS8 INS41 INS44 INS8 INS32 INS52 INS42 INS52 INS42 MOV42 MOV27 INS8 INS8 INS43 INS42 INS21 INS53 MOV32 INS43 INS42 INS21 INS53 UPD42 MOV42 MOV41 INS41 INS42 INS32 INS14 INS42 INS32 INS14 MOV32 MOV32 INS42 INS42 INS45 INS42 INS43 INS42 INS42 INS45 INS42 INS43 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL42 DEL59 DEL60 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL8 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL41 DEL8