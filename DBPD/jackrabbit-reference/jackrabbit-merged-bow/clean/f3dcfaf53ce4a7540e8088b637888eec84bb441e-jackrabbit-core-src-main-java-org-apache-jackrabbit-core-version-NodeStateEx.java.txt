JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-    private QName name;
+    private Name name;
-                       NodeState nodeState, QName name) {
+                       NodeState nodeState, Name name) {
-    public QName getName() {
+    public Name getName() {
-            QName propName = (QName) iter.next();
+            Name propName = (Name) iter.next();
-    public boolean hasProperty(QName name) {
+    public boolean hasProperty(Name name) {
-    public InternalValue[] getPropertyValues(QName name) {
+    public InternalValue[] getPropertyValues(Name name) {
-    public InternalValue getPropertyValue(QName name) {
+    public InternalValue getPropertyValue(Name name) {
-    public void setPropertyValue(QName name, InternalValue value)
+    public void setPropertyValue(Name name, InternalValue value)
-    public void setPropertyValues(QName name, int type, InternalValue[] values)
+    public void setPropertyValues(Name name, int type, InternalValue[] values)
-    public void setPropertyValues(QName name, int type, InternalValue[] values, boolean multiple)
+    public void setPropertyValues(Name name, int type, InternalValue[] values, boolean multiple)
-    private PropertyState getOrCreatePropertyState(QName name, int type, boolean multiValued)
+    private PropertyState getOrCreatePropertyState(Name name, int type, boolean multiValued)
-            return ntReg.getEffectiveNodeType((QName[]) set.toArray(new QName[set.size()]));
+            return ntReg.getEffectiveNodeType((Name[]) set.toArray(new Name[set.size()]));
-    public boolean hasNode(QName name) {
+    public boolean hasNode(Name name) {
-    public boolean removeNode(QName name) throws RepositoryException {
+    public boolean removeNode(Name name) throws RepositoryException {
-    public boolean removeNode(QName name, int index) throws RepositoryException {
+    public boolean removeNode(Name name, int index) throws RepositoryException {
-            QName name = (QName) iter.next();
+            Name name = (Name) iter.next();
-    public boolean removeProperty(QName name) throws RepositoryException {
+    public boolean removeProperty(Name name) throws RepositoryException {
-    public NodeStateEx getNode(QName name, int index) throws RepositoryException {
+    public NodeStateEx getNode(Name name, int index) throws RepositoryException {
-    public NodeStateEx addNode(QName nodeName, QName nodeTypeName,
+    public NodeStateEx addNode(Name nodeName, Name nodeTypeName,
-            node.setPropertyValue(QName.JCR_UUID, InternalValue.create(node.getNodeId().getUUID().toString()));
+            node.setPropertyValue(NameConstants.JCR_UUID, InternalValue.create(node.getNodeId().getUUID().toString()));
-    private NodeStateEx createChildNode(QName name, QName nodeTypeName, NodeId id)
+    private NodeStateEx createChildNode(Name name, Name nodeTypeName, NodeId id)
-        node.setPropertyValue(QName.JCR_PRIMARYTYPE, InternalValue.create(nodeTypeName));
+        node.setPropertyValue(NameConstants.JCR_PRIMARYTYPE, InternalValue.create(nodeTypeName));
-                QName propName = (QName) iter.next();
+                Name propName = (Name) iter.next();
-                QName propName = (QName) iter.next();
+                Name propName = (Name) iter.next();

INS26 UPD40 INS40 UPD43 UPD43 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD40 UPD43 UPD43 UPD42 UPD42 UPD40 UPD43 UPD5 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD5 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42