fixed bug that occured when setting a property but the property had already been created

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@105831 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.*;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.Map;
- * <li>checking access rights of associated <code>Session</code> in all methods.
+ * <li>respecting access rights of associated <code>Session</code> in all methods.
-     * @param path
-     * @return
+     * Checks if the item with the given path exists.
+     *
+     * @param path path to the item to be checked
+     * @return true if the specified item exists
+/*
+            // item exists but the session has not been granted read access
+            return false;
+        } catch (RepositoryException re) {
+            return false;
+        }
+*/
+        try {
+            // check sanity of session
+            session.sanityCheck();
+
+            ItemId id = hierMgr.resolvePath(path);
+
+            // check if state exists for the given item
+            if (!itemStateProvider.hasItemState(id)) {
+                return false;
+            }
+
+            // check privileges
+            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
+                // clear cache
+                if (isCached(id)) {
+                    evictItem(id);
+                }
+                // item exists but the session has not been granted read access
+                return false;
+            }
+        } catch (PathNotFoundException pnfe) {
+            return false;
+        } catch (ItemNotFoundException infe) {
+            return false;
-     * Checks if the item with the given id exists
+     * Checks if the item with the given id exists.
-     * @param id
-     * @return
+     * @param id id of the item to be checked
+     * @return true if the specified item exists
+/*
+            // item exists but the session has not been granted read access
+            return false;
+        } catch (RepositoryException re) {
+            return false;
+        }
+*/
+        try {
+            // check sanity of session
+            session.sanityCheck();
+
+            // check if state exists for the given item
+            if (!itemStateProvider.hasItemState(id)) {
+                return false;
+            }
+
+            // check privileges
+            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
+                // clear cache
+                if (isCached(id)) {
+                    evictItem(id);
+                }
+                // item exists but the session has not been granted read access
+                return false;
+            }
+        } catch (ItemNotFoundException infe) {
+            return false;

INS26 INS26 INS40 INS40 UPD40 UPD66 INS65 INS66 INS66 INS66 INS8 UPD66 INS66 INS66 INS8 INS21 INS60 INS25 INS25 MOV41 INS21 INS25 INS25 MOV41 INS32 INS43 INS59 INS38 INS8 INS38 INS8 UPD43 UPD42 INS32 INS38 INS8 INS38 INS8 INS42 INS42 INS42 INS42 INS32 INS32 INS41 INS32 INS25 INS41 UPD42 UPD9 INS42 INS42 INS32 INS41 INS32 INS25 MOV41 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS42 INS42 INS40 INS32 INS8 INS9 INS42 UPD42 MOV42 MOV42 INS9 INS32 INS42 INS42 INS40 INS32 INS8 UPD9 INS42 INS42 INS42 INS42 MOV21 INS42 INS42 INS42 INS42 INS21 INS32 UPD42 UPD42 INS42 INS42 DEL8 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12