work in progress

- operations: rename getAffectedIds to getAffectedStates
- operations: return ItemState params instead of ids whereever possible and
  let OperationVisitor deal with all kind of issues arising with SPI ids.
- AddNode/AddProperty operations: don't list state to be created as affected. Not required since operations are collected upon refresh/save, in which case a 'new' item can never be the starting point.
- transient move: let parent NodeState handle the move/renaming of child states
- transient reorder: let parent NodeState handle the reorder logic
- NodeState: remove unused methods and mark setParent private
- NodeImpl: protected getNodeId() no more used by subclasses in version package.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431887 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.NodeId;
+import org.apache.jackrabbit.jcr2spi.state.NodeState;
-    private final NodeId nodeId;
-    private final NodeId versionId;
+    private final NodeState nodeState;
+    private final NodeState versionState;
-    private ResolveMergeConflict(NodeId nodeId, NodeId versionId, boolean resolveDone) {
-        this.nodeId = nodeId;
-        this.versionId = versionId;
+    private ResolveMergeConflict(NodeState nodeState, NodeState versionState, boolean resolveDone) {
+        this.nodeState = nodeState;
+        this.versionState = versionState;
-        addAffectedItemId(nodeId);
-        addAffectedItemId(versionId);
+        // TODO: correct? needed?
+        addAffectedItemState(nodeState);
+        addAffectedItemState(versionState);
-    public NodeId getNodeId() {
-        return nodeId;
+    public NodeState getNodeState() {
+        return nodeState;
-    public NodeId getVersionId() {
-        return versionId;
+    public NodeState getVersionState() {
+        return versionState;
-     * @param nodeId
-     * @param versionId
+     * @param nodeState
+     * @param versionState
-    public static Operation create(NodeId nodeId, NodeId versionId, boolean resolveDone) {
-        ResolveMergeConflict up = new ResolveMergeConflict(nodeId, versionId, resolveDone);
+    public static Operation create(NodeState nodeState, NodeState versionState, boolean resolveDone) {
+        ResolveMergeConflict up = new ResolveMergeConflict(nodeState, versionState, resolveDone);

UPD40 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42