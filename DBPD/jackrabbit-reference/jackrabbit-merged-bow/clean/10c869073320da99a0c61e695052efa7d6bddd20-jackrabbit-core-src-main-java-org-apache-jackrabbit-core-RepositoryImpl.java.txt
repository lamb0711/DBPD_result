JCR-2640: Internal repository context

Add repository file system to RepositoryContext. No more need for the separate metaDataStore fs.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@948803 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.version.InternalVersionManager;
-    // the virtual repository file system
-    private final FileSystem repStore;
-
-    // sub file system where the repository stores meta data such as uuid of root node, etc.
-    private final FileSystem metaDataStore;
-
-            repStore = repConfig.getFileSystem();
-            String fsRootPath = "/meta";
-            try {
-                if (!repStore.exists(fsRootPath) || !repStore.isFolder(fsRootPath)) {
-                    repStore.createFolder(fsRootPath);
-                }
-            } catch (FileSystemException fse) {
-                String msg = "failed to create folder for repository meta data";
-                log.error(msg, fse);
-                throw new RepositoryException(msg, fse);
-            }
-            metaDataStore = new BasedFileSystem(repStore, fsRootPath);
+            FileSystem repStore = repConfig.getFileSystem();
+            context.setFileSystem(repStore);
-            context.setRootNodeId(loadRootNodeId(metaDataStore));
+            context.setRootNodeId(loadRootNodeId(repStore));
+        String fsRootPath = "/meta";
+        try {
+            if (!fs.exists(fsRootPath) || !fs.isFolder(fsRootPath)) {
+                fs.createFolder(fsRootPath);
+            }
+        } catch (FileSystemException fse) {
+            String msg = "failed to create folder for repository meta data";
+            log.error(msg, fse);
+            throw new RepositoryException(msg, fse);
+        }
+        fs = new BasedFileSystem(fs, fsRootPath);
+
-        if (repStore != null) {
-            try {
-                // close repository file system
-                repStore.close();
-            } catch (FileSystemException e) {
-                log.error("error while closing repository file system", e);
-            }
+        try {
+            // close repository file system
+            context.getFileSystem().close();
+        } catch (FileSystemException e) {
+            log.error("error while closing repository file system", e);
-     * Returns the repository file system.
-     * @return repository file system
-     */
-    protected FileSystem getFileSystem() {
-        return repStore;
-    }
-
-    /**

MOV60 MOV54 MOV21 MOV54 INS60 UPD42 MOV43 INS59 INS32 UPD42 INS42 MOV32 INS42 INS42 INS42 INS32 UPD42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL7 DEL42 DEL33 DEL27 DEL8 DEL25 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL41 DEL8 DEL31