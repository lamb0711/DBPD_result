JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Tree;
-import org.apache.jackrabbit.webdav.xml.Namespace;
+    @Override
+    public PrivilegeDefinition[] getPrivileges(SessionInfo sessionInfo, NodeId nodeId) throws RepositoryException {
+        String uri = (nodeId == null) ? uriResolver.getWorkspaceUri(sessionInfo.getWorkspaceName()) : getItemUri(nodeId, sessionInfo);
+        return internalGetUserPrivilegeDefinitions(sessionInfo, uri);
+    }
+    
+    private PrivilegeDefinition[] internalGetUserPrivilegeDefinitions(SessionInfo sessionInfo, String uri) throws RepositoryException {
+        DavPropertyNameSet nameSet = new DavPropertyNameSet();
+        nameSet.add(SecurityConstants.CURRENT_USER_PRIVILEGE_SET);
+        DavMethodBase method = null;
+        
+        // TODO
+        return new PrivilegeDefinition[0];
+    }
+    
-                NamePathResolver npResolver = getNamePathResolver(sessionInfo);
-                            aggrnames.add(npResolver.getQName(aggregate.getPrivilege().getName()));
+                            Name aggregateName = nameFactory.create(aggregate.getPrivilege().getNamespace().getURI(), 
+                                                                    aggregate.getPrivilege().getName());
+                            aggrnames.add(aggregateName);
+    @Override
+    public Tree createTree(SessionInfo sessionInfo, Batch batch, Name nodeName, Name primaryTypeName, String uniqueId) throws RepositoryException {
+        return new DocumentTree(nodeName, primaryTypeName, uniqueId, getNamePathResolver(sessionInfo));
+    }
+
-    /**
-     * The XML elements and attributes used in serialization
-     */
-    private static final Namespace SV_NAMESPACE = Namespace.getNamespace(Name.NS_SV_PREFIX, Name.NS_SV_URI);
-    private static final String NODE_ELEMENT = "node";
-    private static final String PROPERTY_ELEMENT = "property";
-    private static final String VALUE_ELEMENT = "value";
-    private static final String NAME_ATTRIBUTE = "name";
-    private static final String TYPE_ATTRIBUTE = "type";
-
-        /**
-         * @see Batch#addNode(NodeId, Name, Name, String)
-         */
+        @Override
-                Element nodeElement = DomUtil.addChildElement(body, NODE_ELEMENT, SV_NAMESPACE);
-                String nameAttr = resolver.getJCRName(nodeName);
-                DomUtil.setAttribute(nodeElement, NAME_ATTRIBUTE, SV_NAMESPACE, nameAttr);
-
-                // nodetype must never be null
-                Element propElement = DomUtil.addChildElement(nodeElement, PROPERTY_ELEMENT, SV_NAMESPACE);
-                String name = resolver.getJCRName(NameConstants.JCR_PRIMARYTYPE);
-                DomUtil.setAttribute(propElement, NAME_ATTRIBUTE, SV_NAMESPACE, name);
-                DomUtil.setAttribute(propElement, TYPE_ATTRIBUTE, SV_NAMESPACE, PropertyType.nameFromValue(PropertyType.NAME));
-                name = resolver.getJCRName(nodetypeName);
-                DomUtil.addChildElement(propElement, VALUE_ELEMENT, SV_NAMESPACE, name);
-                // optional uuid
-                if (uuid != null) {
-                    propElement = DomUtil.addChildElement(nodeElement, PROPERTY_ELEMENT, SV_NAMESPACE);
-                    name = resolver.getJCRName(NameConstants.JCR_UUID);
-                    DomUtil.setAttribute(propElement, NAME_ATTRIBUTE, SV_NAMESPACE, name);
-                    DomUtil.setAttribute(propElement, TYPE_ATTRIBUTE, SV_NAMESPACE, PropertyType.nameFromValue(PropertyType.STRING));
-                    DomUtil.addChildElement(propElement, VALUE_ELEMENT, SV_NAMESPACE, uuid);
-                }
+                BatchUtils.createNodeElement(body, nodeName, nodetypeName, uuid, resolver);
-        /**
-         * @see Batch#addProperty(NodeId, Name, QValue)
-         */
+        @Override
-        /**
-         * @see Batch#addProperty(NodeId, Name, QValue[])
-         */
+        @Override
-        /**
-         * @see Batch#setValue(PropertyId, QValue)
-         */
+        @Override
-        /**
-         * @see Batch#setValue(PropertyId, QValue[])
-         */
+        @Override
-        /**
-         * @see Batch#remove(ItemId)
-         */
+        @Override
-        /**
-         * @see Batch#reorderNodes(NodeId, NodeId, NodeId)
-         */
+        @Override
-        /**
-         * @see Batch#setMixins(NodeId, Name[])
-         */
+        @Override
-        /**
-         * @see Batch#setPrimaryType(NodeId, Name)
-         */
+        @Override
-        /**
-         * @see Batch#move(NodeId, NodeId, Name)
-         */
+        @Override
+
+        @Override
+        public void setTree(NodeId parentId, Tree tree) throws RepositoryException {
+            checkConsumed();
+
+            if (!(tree instanceof DocumentTree)) {
+                throw new RepositoryException("Invalid tree implementation " + tree.getClass().getName());
+            }
+            try {
+                // TODO: TOBEFIXED. WebDAV does not allow MKCOL for existing resource -> problem with SNS
+                // use fake name instead (see also #importXML)
+                Name fakeName = getNameFactory().create(Name.NS_DEFAULT_URI, UUID.randomUUID().toString());
+                String uri = getItemUri(parentId, fakeName, sessionInfo);
+                MkColMethod method = new MkColMethod(uri);
+
+                method.setRequestBody(((DocumentTree) tree).toDocument());
+
+                methods.add(method);
+            } catch (IOException e) {
+                throw new RepositoryException(e);
+            }
+        }

MOV26 UPD40 INS31 INS31 INS31 INS78 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS31 INS42 INS43 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS41 INS43 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 MOV43 INS42 MOV43 INS42 UPD42 MOV42 INS41 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS42 UPD42 MOV42 MOV43 INS59 INS32 INS42 UPD42 MOV42 MOV42 INS43 INS59 INS32 INS43 INS59 INS3 UPD42 MOV42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS25 INS54 UPD42 MOV42 INS16 INS42 INS42 INS42 INS42 UPD42 MOV42 INS14 INS42 INS42 INS40 UPD42 MOV42 UPD42 MOV42 INS33 INS5 INS34 INS43 INS42 INS42 INS42 MOV32 INS42 INS42 INS32 INS38 INS8 INS8 INS12 INS36 INS32 INS32 INS43 INS43 INS85 INS42 INS21 INS42 INS36 INS53 INS60 INS60 INS60 INS21 INS21 INS44 INS8 INS27 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS62 INS14 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS42 INS53 INS42 INS33 INS42 UPD42 MOV42 INS42 INS42 MOV42 MOV42 MOV42 INS42 MOV42 INS42 INS43 INS43 INS27 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS45 INS32 INS32 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS36 INS42 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS60 MOV43 INS59 INS42 MOV32 INS42 UPD42 INS42 INS32 INS32 INS42 INS32 UPD42 MOV42 INS42 INS42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL43 DEL40 DEL40 DEL32 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL42 DEL42 DEL42 DEL43 DEL69 DEL69 DEL69 DEL69 DEL68 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL40 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29