JCR-2841 - Avoid path resolution in case of non-wildcard ACEs (follow-up to JCR-2573)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1049520 13f79535-47bb-0310-9956-ffa450edef68

-        boolean canRead;
+        boolean canRead = false;
-                // TODO: check again if retrieving the path can be avoided
-                Path absPath = (path == null) ? session.getHierarchyManager().getPath(id) : path;
-                Result result = buildResult(node, isExistingNode, util.isAcItem(node), new EntryFilterImpl(principalNames, absPath, session));
-                canRead = result.grants(Permission.READ);
+                boolean isAcItem = util.isAcItem(node);
+                EntryFilterImpl filter;
+                if (path == null) {
+                    filter = new EntryFilterImpl(principalNames, id, session);
+                } else {
+                    filter = new EntryFilterImpl(principalNames, path, session);
+                }
+
+                if (isAcItem) {
+                    /* item defines ac content -> regular evaluation */
+                    Result result = buildResult(node, isExistingNode, util.isAcItem(node), filter);
+                    canRead = result.grants(Permission.READ);
+                } else {
+                    /*
+                     simplified evaluation focusing on READ permission. this allows
+                     to omit evaluation of parent node permissions that are
+                     required when calculating the complete set of permissions
+                     (see special treatment of remove, create or ac-specific
+                      permissions).
+                     */
+                    for (AccessControlEntry accessControlEntry : entryCollector.collectEntries(node, filter)) {
+                        ACLTemplate.Entry ace = (ACLTemplate.Entry) accessControlEntry;
+                        int entryBits = ace.getPrivilegeBits();
+                        if ((entryBits & Permission.READ) == Permission.READ) {
+                            canRead = ace.isAllow();
+                            break;
+                        }
+                    }
+                }

INS9 INS60 INS60 INS25 INS25 INS39 INS59 UPD43 MOV43 INS59 MOV27 INS8 INS8 INS42 INS8 INS8 INS42 INS32 UPD42 UPD42 MOV42 INS21 INS21 MOV60 MOV21 INS70 INS42 INS42 INS42 INS7 INS7 INS44 INS32 INS8 INS42 INS14 INS42 INS14 INS43 INS42 INS42 INS42 INS42 INS42 INS60 INS60 INS25 INS43 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS27 INS8 INS42 INS40 INS42 INS11 INS42 INS32 INS36 INS40 INS21 INS10 INS43 INS42 INS42 INS42 INS27 INS7 INS40 INS42 INS40 INS42 INS32 INS42 INS42 DEL42 DEL42 DEL42 DEL14 DEL36 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL16 DEL59 DEL60