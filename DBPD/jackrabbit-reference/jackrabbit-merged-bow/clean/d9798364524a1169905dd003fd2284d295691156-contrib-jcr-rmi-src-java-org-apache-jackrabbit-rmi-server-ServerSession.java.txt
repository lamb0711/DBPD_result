Cleaned up code by removing too fine-grained exception declarations.
The rationale for this is that internally the JCR-RMI layer only cares about
the RepositoryException/RemoteException difference.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155801 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.AccessDeniedException;
-import javax.jcr.InvalidItemStateException;
-import javax.jcr.InvalidSerializedDataException;
-import javax.jcr.ItemExistsException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.LoginException;
-import javax.jcr.NamespaceException;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.lock.LockException;
-import javax.jcr.nodetype.ConstraintViolationException;
-            throws LoginException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-    public String getNamespacePrefix(String uri) throws NamespaceException,
-            RepositoryException, RemoteException {
+    public String getNamespacePrefix(String uri)
+             throws RepositoryException, RemoteException {
-    public String[] getNamespacePrefixes() throws RepositoryException,
-            RemoteException {
+    public String[] getNamespacePrefixes()
+            throws RepositoryException, RemoteException {
-    public String getNamespaceURI(String prefix) throws NamespaceException,
-            RepositoryException, RemoteException {
+    public String getNamespaceURI(String prefix)
+            throws RepositoryException, RemoteException {
-            throws NamespaceException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-    public RemoteNode getNodeByUUID(String uuid) throws ItemNotFoundException,
-            RepositoryException, RemoteException {
+    public RemoteNode getNodeByUUID(String uuid)
+            throws RepositoryException, RemoteException {
-    public RemoteNode getRootNode() throws RepositoryException,
-            RemoteException {
+    public RemoteNode getRootNode()
+            throws RepositoryException, RemoteException {
-    public RemoteItem getItem(String path) throws PathNotFoundException,
-            RepositoryException, RemoteException {
+    public RemoteItem getItem(String path)
+            throws RepositoryException, RemoteException {
-    public boolean hasPendingChanges() throws RepositoryException,
-            RemoteException {
+    public boolean hasPendingChanges()
+            throws RepositoryException, RemoteException {
-    public void move(String from, String to) throws ItemExistsException,
-            PathNotFoundException, ConstraintViolationException,
-            RepositoryException, RemoteException {
+    public void move(String from, String to)
+            throws RepositoryException, RemoteException {
-    public void save() throws AccessDeniedException, LockException,
-            ConstraintViolationException, InvalidItemStateException,
-            RepositoryException, RemoteException {
+    public void save() throws RepositoryException, RemoteException {
-    public void refresh(boolean keepChanges) throws RepositoryException,
-            RemoteException {
+    public void refresh(boolean keepChanges)
+            throws RepositoryException, RemoteException {
-    public void importXML(String path, byte[] xml) throws IOException,
-            PathNotFoundException, ItemExistsException,
-            ConstraintViolationException, InvalidSerializedDataException,
-            RepositoryException, RemoteException {
+    public void importXML(String path, byte[] xml)
+            throws IOException, RepositoryException, RemoteException {
-    public byte[] exportDocView(String path, boolean binaryAsLink,
-            boolean noRecurse) throws InvalidSerializedDataException,
-            PathNotFoundException, IOException, RepositoryException,
-            RemoteException {
+    public byte[] exportDocView(
+            String path, boolean binaryAsLink, boolean noRecurse)
+            throws IOException, RepositoryException, RemoteException {
-    public byte[] exportSysView(String path, boolean binaryAsLink,
-            boolean noRecurse) throws PathNotFoundException, IOException,
-            RepositoryException, RemoteException {
+    public byte[] exportSysView(
+            String path, boolean binaryAsLink, boolean noRecurse)
+            throws IOException, RepositoryException, RemoteException {
+

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43