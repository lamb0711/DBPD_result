JCR-2028: JSR 283 JCR Path

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@772659 13f79535-47bb-0310-9956-ffa450edef68

-    private final NameResolver resolver;
+    private final NameResolver nameResolver;
+
+    /**
+     * Identifier resolver.
+     */
+    private final IdentifierResolver idResolver;
+     * @param pathFactory path factory.
-        this.pathFactory = pathFactory;
-        this.resolver = resolver;
+        this(pathFactory, resolver, null);
-     * Parses the prefixed JCR path and returns the resolved qualified path.
+     * Creates a parsing path resolver.
+     *
+     * @param pathFactory path factory.
+     * @param nameResolver name resolver.
+     * @param idResolver identifier resolver.
+     * @since JCR 2.0
+     */
+    public ParsingPathResolver(PathFactory pathFactory, NameResolver nameResolver,
+                               IdentifierResolver idResolver) {
+        this.pathFactory = pathFactory;
+        this.nameResolver = nameResolver;
+        this.idResolver = idResolver;
+    }
+
+    /**
+     * Parses the given JCR path and returns the resolved qualified path.
-        return PathParser.parse(path, resolver, pathFactory);
+        return PathParser.parse(path, nameResolver, idResolver, pathFactory);
+    }
+
+    /**
+     * Calls {@link PathParser#parse(String, NameResolver, IdentifierResolver, org.apache.jackrabbit.spi.PathFactory)}
+     * from the given <code>path</code>.
+     * 
+     * @see PathResolver#getQPath(String, boolean)
+     */
+    public Path getQPath(String path, boolean normalizeIdentifier) throws MalformedPathException, IllegalNameException, NamespaceException {
+        return PathParser.parse(path, nameResolver, idResolver, pathFactory, normalizeIdentifier);
-     * Returns the prefixed JCR path for the given qualified path.
+     * Returns the given JCR path for the given qualified path.
+            } else if (elements[i].denotesIdentifier()) {
+                buffer.append(elements[i].getString());
-                buffer.append(resolver.getJCRName(elements[i].getName()));
+                buffer.append(nameResolver.getJCRName(elements[i].getName()));

INS23 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS43 INS8 UPD42 INS65 INS42 INS42 INS65 INS17 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 MOV21 INS21 INS21 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS42 INS41 INS66 INS42 INS66 INS42 INS42 INS33 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS7 INS7 UPD66 INS66 INS65 INS66 INS68 INS42 INS32 UPD66 INS22 INS42 INS22 INS42 INS42 UPD42 INS68 INS42 INS42 INS69 INS69 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS69 INS69 INS69 INS69 INS43 INS39 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS40 INS25 INS32 INS8 MOV8 INS2 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS2 INS42 UPD42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21