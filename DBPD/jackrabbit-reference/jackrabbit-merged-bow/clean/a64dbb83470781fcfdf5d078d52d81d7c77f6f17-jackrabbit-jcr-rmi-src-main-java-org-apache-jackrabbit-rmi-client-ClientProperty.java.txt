JCR-2648: PropertyImpl.getNode() and NamePropertyTest use different exception than documented in the JCR API JavaDoc


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@952269 13f79535-47bb-0310-9956-ffa450edef68

-        try {
-            if (getType() != PropertyType.PATH) {
+
+        switch (getType()) {
+            case PropertyType.REFERENCE:
+            case PropertyType.WEAKREFERENCE:
-            } else if (value.startsWith("/")) {
-                return getSession().getNode(value);
-            } else {
-                return getParent().getNode(value);
-            }
-        } catch (RepositoryException e) {
-            // JCRRMI-15: Throw ValueFormatException where appropriate
-            if (e instanceof ItemNotFoundException
-                    || getType() == PropertyType.REFERENCE) {
-                throw e;
-            } else {
-                throw new ValueFormatException("Invalid identifier: " + value, e);
-            }
+
+            case PropertyType.PATH:
+                try {
+                    if (value.startsWith("/")) {
+                        return getSession().getNode(value);
+                    } else {
+                        return getParent().getNode(value);
+                    }
+                } catch (PathNotFoundException e) {
+                    throw new ItemNotFoundException(value);
+                }
+
+            case PropertyType.NAME:
+                try {
+                    return getParent().getNode(value);
+                } catch (PathNotFoundException e) {
+                    throw new ItemNotFoundException(value);
+                }
+
+            case PropertyType.STRING:
+                try {
+                    // interpret as identifier
+                    Value refValue = getSession().getValueFactory().createValue(value, PropertyType.REFERENCE);
+                    return getSession().getNodeByIdentifier(refValue.getString());
+                } catch (ItemNotFoundException e) {
+                    throw e;
+                } catch (RepositoryException e) {
+                    // try if STRING value can be interpreted as PATH value
+                    Value pathValue = getSession().getValueFactory().createValue(value, PropertyType.PATH);
+                    boolean absolute = value.startsWith("/");
+                    try {
+                        return (absolute) ? getSession().getNode(pathValue.getString()) : getParent().getNode(pathValue.getString());
+                    } catch (PathNotFoundException e1) {
+                        throw new ItemNotFoundException(pathValue.getString());
+                    }
+                }
+
+            default:
+                throw new ValueFormatException("Property value cannot be converted to a PATH, REFERENCE or WEAKREFERENCE: " + value);
-            if (value.startsWith("/")) {
-                return getSession().getProperty(value);
-            } else {
-                return getParent().getProperty(value);
+            try {
+                if (value.startsWith("/")) {
+                    return getSession().getProperty(value);
+                } else {
+                    return getParent().getProperty(value);
+                }
+            } catch (PathNotFoundException e) {
+                throw new ItemNotFoundException(value);

INS8 MOV60 INS50 MOV32 INS49 INS49 MOV41 INS49 MOV54 INS49 INS54 INS49 INS54 INS49 INS53 INS8 INS40 INS40 INS40 INS40 INS8 INS12 INS40 INS8 INS12 INS12 INS14 MOV60 INS54 MOV25 INS44 INS8 INS41 INS44 INS8 INS60 INS41 INS44 MOV8 MOV44 INS8 MOV43 INS27 MOV8 INS12 INS43 INS42 MOV53 INS32 INS43 INS42 INS53 INS43 INS59 INS32 INS43 INS42 INS60 INS60 INS54 INS45 INS42 INS44 INS8 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS43 INS59 INS39 INS59 INS8 INS12 INS43 INS42 INS53 MOV43 INS42 INS42 INS43 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS41 INS44 INS8 INS42 INS14 INS42 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS45 INS16 INS43 INS42 INS53 INS43 INS42 INS42 INS32 INS42 INS36 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL27 DEL8 DEL25 DEL45 DEL42 DEL27 DEL42 DEL42 DEL62 DEL42 DEL32 DEL40 DEL27 DEL27 DEL8 DEL25 DEL8 DEL8