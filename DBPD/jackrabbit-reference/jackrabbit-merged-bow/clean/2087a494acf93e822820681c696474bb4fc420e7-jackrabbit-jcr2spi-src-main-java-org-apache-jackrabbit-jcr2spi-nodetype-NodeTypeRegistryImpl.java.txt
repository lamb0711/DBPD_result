JCR-2064 Add new JSR283 features to CND reader/writer
JCR-2153 Introduce QValueConstraint and change return type of QPropertyDefinition.getValueConstraints()
JCR-2158 Consolidate CND related classes from SPI and Core


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785777 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.QValueConstraint;
-                    String[] vca = pd[i].getValueConstraints();
+                    QValueConstraint[] vca = pd[i].getValueConstraints();
-                            constraints.append(vca[n]);
+                            constraints.append(vca[n].getString());
-                        for (int n = 0; n < defVals.length; n++) {
+                        for (QValue defVal : defVals) {
-                                defaultValues.append(defVals[n].getString());
+                                defaultValues.append(defVal.getString());
-                                defaultValues.append(defVals[n].toString());
+                                defaultValues.append(defVal.toString());
-                for (int i = 0; i < nd.length; i++) {
+                for (QNodeDefinition aNd : nd) {
-                    ps.println(" (declared in " + nd[i].getDeclaringNodeType() + ") ");
-                    ps.println("\t\tName\t\t" + (nd[i].definesResidual() ? "*" : nd[i].getName().toString()));
-                    Name[] reqPrimaryTypes = nd[i].getRequiredPrimaryTypes();
+                    ps.println(" (declared in " + aNd.getDeclaringNodeType() + ") ");
+                    ps.println("\t\tName\t\t" + (aNd.definesResidual() ? "*" : aNd.getName().toString()));
+                    Name[] reqPrimaryTypes = aNd.getRequiredPrimaryTypes();
-                    Name defPrimaryType = nd[i].getDefaultPrimaryType();
+                    Name defPrimaryType = aNd.getDefaultPrimaryType();
-                    ps.println("\n\t\tAutoCreated\t" + nd[i].isAutoCreated());
-                    ps.println("\t\tMandatory\t" + nd[i].isMandatory());
-                    ps.println("\t\tOnVersion\t" + OnParentVersionAction.nameFromValue(nd[i].getOnParentVersion()));
-                    ps.println("\t\tProtected\t" + nd[i].isProtected());
-                    ps.println("\t\tAllowsSameNameSiblings\t" + nd[i].allowsSameNameSiblings());
+                    ps.println("\n\t\tAutoCreated\t" + aNd.isAutoCreated());
+                    ps.println("\t\tMandatory\t" + aNd.isMandatory());
+                    ps.println("\t\tOnVersion\t" + OnParentVersionAction.nameFromValue(aNd.getOnParentVersion()));
+                    ps.println("\t\tProtected\t" + aNd.isProtected());
+                    ps.println("\t\tAllowsSameNameSiblings\t" + aNd.allowsSameNameSiblings());

INS26 INS40 INS70 INS44 INS42 INS8 INS43 INS42 MOV21 MOV21 MOV21 MOV60 MOV25 MOV60 MOV25 MOV21 MOV21 MOV21 MOV21 MOV21 UPD5 INS42 UPD43 INS70 UPD42 INS44 INS42 INS8 INS42 INS42 INS43 INS42 MOV25 MOV54 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV32 MOV42 INS42 UPD42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24