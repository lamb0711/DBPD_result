- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.11 $, $Date: 2004/08/02 16:19:51 $
-	if (fsBase == null) {
-	    throw new IllegalArgumentException("invalid file system argument");
-	}
-	this.fsBase = fsBase;
+        if (fsBase == null) {
+            throw new IllegalArgumentException("invalid file system argument");
+        }
+        this.fsBase = fsBase;
-	if (relRootPath == null) {
-	    throw new IllegalArgumentException("invalid null path argument");
-	}
-	if (relRootPath.equals(SEPARATOR)) {
-	    throw new IllegalArgumentException("invalid path argument");
-	}
-	if (!relRootPath.startsWith(SEPARATOR)) {
-	    relRootPath = SEPARATOR + relRootPath;
-	}
-	if (relRootPath.endsWith(SEPARATOR)) {
-	    relRootPath = relRootPath.substring(0, relRootPath.length() - 1);
+        if (relRootPath == null) {
+            throw new IllegalArgumentException("invalid null path argument");
+        }
+        if (relRootPath.equals(SEPARATOR)) {
+            throw new IllegalArgumentException("invalid path argument");
+        }
+        if (!relRootPath.startsWith(SEPARATOR)) {
+            relRootPath = SEPARATOR + relRootPath;
+        }
+        if (relRootPath.endsWith(SEPARATOR)) {
+            relRootPath = relRootPath.substring(0, relRootPath.length() - 1);
-	}
-	this.basePath = relRootPath;
+        }
+        this.basePath = relRootPath;
-	if (path.startsWith(SEPARATOR)) {
-	    return basePath + path;
-	} else {
-	    return basePath + SEPARATOR + path;
-	}
+        if (path.startsWith(SEPARATOR)) {
+            return basePath + path;
+        } else {
+            return basePath + SEPARATOR + path;
+        }
-	// check base path
-	if (!fsBase.isFolder(basePath)) {
-	    fsBase.createFolder(basePath);
-	}
+        // check base path
+        if (!fsBase.isFolder(basePath)) {
+            fsBase.createFolder(basePath);
+        }
-	// do nothing; base file system should be closed explicitly
+        // do nothing; base file system should be closed explicitly
-	fsBase.copy(buildBasePath(srcPath), buildBasePath(destPath));
+        fsBase.copy(buildBasePath(srcPath), buildBasePath(destPath));
-	fsBase.createFolder(buildBasePath(folderPath));
+        fsBase.createFolder(buildBasePath(folderPath));
-	fsBase.deleteFile(buildBasePath(filePath));
+        fsBase.deleteFile(buildBasePath(filePath));
-	fsBase.deleteFolder(buildBasePath(folderPath));
+        fsBase.deleteFolder(buildBasePath(folderPath));
-	return fsBase.exists(buildBasePath(path));
+        return fsBase.exists(buildBasePath(path));
-	return fsBase.getInputStream(buildBasePath(filePath));
+        return fsBase.getInputStream(buildBasePath(filePath));
-	return fsBase.getOutputStream(buildBasePath(filePath));
+        return fsBase.getOutputStream(buildBasePath(filePath));
-	return fsBase.hasChildren(buildBasePath(path));
+        return fsBase.hasChildren(buildBasePath(path));
-	return fsBase.isFile(buildBasePath(path));
+        return fsBase.isFile(buildBasePath(path));
-	return fsBase.isFolder(buildBasePath(path));
+        return fsBase.isFolder(buildBasePath(path));
-	return fsBase.lastModified(buildBasePath(path));
+        return fsBase.lastModified(buildBasePath(path));
-	return fsBase.length(buildBasePath(filePath));
+        return fsBase.length(buildBasePath(filePath));
-	fsBase.touch(buildBasePath(filePath));
+        fsBase.touch(buildBasePath(filePath));
-	return fsBase.list(buildBasePath(folderPath));
+        return fsBase.list(buildBasePath(folderPath));
-	return fsBase.listFiles(buildBasePath(folderPath));
+        return fsBase.listFiles(buildBasePath(folderPath));
-	return fsBase.listFolders(buildBasePath(folderPath));
+        return fsBase.listFolders(buildBasePath(folderPath));
-	fsBase.move(buildBasePath(srcPath), buildBasePath(destPath));
+        fsBase.move(buildBasePath(srcPath), buildBasePath(destPath));

DEL66 DEL65 DEL66 DEL65