JCR-1160

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@581842 13f79535-47bb-0310-9956-ffa450edef68

-    private Move(NodeState srcNodeState, NodeState srcParentState, NodeState destParentState, QName destName) {
+    private final boolean sessionMove;
+
+    private Move(NodeState srcNodeState, NodeState srcParentState, NodeState destParentState, QName destName, boolean sessionMove) {
-        
+
+        this.sessionMove = sessionMove;
+
+        if (sessionMove) {
+            throw new UnsupportedOperationException("persisted() not implemented for transient modification.");
+        }
-        if (sessionMove) {
-            if (destEntry.hasPropertyEntry(destName)) {
-                throw new ItemExistsException("Move destination already exists (Property).");
-            }
-            if (destEntry.hasNodeEntry(destName)) {
-                NodeEntry existing = destEntry.getNodeEntry(destName, Path.INDEX_DEFAULT);
-                if (existing != null) {
-                    try {
-                        if (!existing.getNodeState().getDefinition().allowsSameNameSiblings()) {
-                            throw new ItemExistsException("Node existing at move destination does not allow same name siblings.");
-                        }
-                    } catch (ItemNotFoundException e) {
-                        // existing apparent not valid any more -> probably no conflict
+        if (destEntry.hasPropertyEntry(destName) && sessionMove) {
+            throw new ItemExistsException("Move destination already exists (Property).");
+        }
+        // force childnodeentries list to be present before the move is executed
+        // on the hierarchy entry.
+        if (destEntry.hasNodeEntry(destName)) {
+            NodeEntry existing = destEntry.getNodeEntry(destName, Path.INDEX_DEFAULT);
+            if (existing != null && sessionMove) {
+                try {
+                    if (!existing.getNodeState().getDefinition().allowsSameNameSiblings()) {
+                        throw new ItemExistsException("Node existing at move destination does not allow same name siblings.");
+                } catch (ItemNotFoundException e) {
+                    // existing apparent not valid any more -> probably no conflict
-        Move move = new Move(srcState, srcParentState, destParentState, destName);
+        Move move = new Move(srcState, srcParentState, destParentState, destName, sessionMove);

INS23 INS83 INS83 INS39 INS59 INS44 INS42 INS39 INS42 INS21 INS25 MOV25 MOV25 INS7 INS42 INS8 INS27 MOV43 INS22 INS42 INS53 MOV32 INS42 INS52 INS42 INS14 INS27 MOV43 INS42 INS43 INS45 MOV27 INS42 INS42 DEL42 DEL8 DEL25