JCR-2675: Node.hasProperty() with relative path can throw ClassCastException

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@966672 13f79535-47bb-0310-9956-ffa450edef68

-        Builder pb = new Builder(l);
+        Builder pb;
+        try {
+            pb = new Builder(l);
+        } catch (IllegalArgumentException iae) {
+             throw new RepositoryException(iae.getMessage());
+        }
-        Builder pb = new Builder(elements);
+        Builder pb;
+        try {
+            pb = new Builder(elements);
+        } catch (IllegalArgumentException iae) {
+             throw new RepositoryException(iae.getMessage());
+        }
-        Builder pb = new Builder(elements);
+        Builder pb;
+        try {
+            pb = new Builder(elements);
+        } catch (IllegalArgumentException iae) {
+             throw new RepositoryException(iae.getMessage());
+        }
-            Path.Element last = PARENT_ELEMENT;
-                if (elem.denotesParent() && !last.denotesParent()) {
-                    queue.removeLast();
-                    if (queue.isEmpty()) {
-                        last = PARENT_ELEMENT;
-                    } else {
-                        last = queue.getLast();
+                if (elem.denotesParent() && !queue.isEmpty() && !queue.getLast().denotesParent()) {
+                    if (queue.getLast().denotesRoot()) {
+                        throw new RepositoryException("Path cannot be normalized: " + this);
+                    queue.removeLast();
-                    last = elem;
-                    queue.add(last);
+                    queue.add(elem);
-         * or has a length less than 1;
+         * or has a zero length or would otherwise constitute an invalid path
-        private Builder(List<Path.Element> elemList) {
+        private Builder(List<Path.Element> elemList) throws IllegalArgumentException {
-         * or has a length less than 1;
+         * or has a zero length or would otherwise constitute an invalid path
-        private Builder(Path.Element[] elements) {
+        private Builder(Path.Element[] elements) throws IllegalArgumentException {
-                int parents = 0;
-                int named = 0;
+                int depth = 0;
-                        named++;
+                        depth++;
-                        parents++;
-                        if (absolute || named > 0) {
+                        depth--;
+                        if (absolute && depth < 0) {
+                            throw new IllegalArgumentException("Invalid path: Too many parent elements.");
+                        }
+                        if (absolute || (i > 0 && elements[i - 1].denotesName())) {
-                if (absolute && parents > named) {
-                    throw new IllegalArgumentException("Invalid path: Too many parent elements.");
-                }

INS54 INS54 INS54 INS43 INS43 INS8 INS12 INS8 INS12 INS8 INS12 INS42 INS42 INS21 INS44 INS8 INS21 INS44 INS8 INS21 INS44 INS8 UPD66 UPD66 INS7 INS43 INS42 INS53 INS7 INS43 INS42 INS53 INS7 INS43 INS42 INS53 INS42 MOV14 INS42 INS14 INS42 MOV14 INS42 INS14 INS42 MOV14 INS42 INS14 MOV21 INS43 INS32 INS43 INS32 INS43 INS32 INS38 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS32 MOV32 INS32 INS42 INS53 INS42 INS42 INS14 UPD42 INS43 INS27 UPD42 INS42 INS45 INS52 INS25 UPD37 INS27 MOV8 UPD42 INS42 INS27 INS36 INS42 INS34 INS27 MOV27 INS32 UPD42 INS2 INS42 INS42 INS27 INS42 INS34 DEL40 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL7 DEL21 DEL8 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL27 DEL27 DEL25