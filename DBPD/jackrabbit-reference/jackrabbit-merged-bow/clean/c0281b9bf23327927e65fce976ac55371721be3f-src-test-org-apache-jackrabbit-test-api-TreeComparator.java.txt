Improved test cases


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@165130 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.log4j.Level;
+    public void setSession(Session session) {
+        this.session = session;
+    }
+    
+            // todo
+            String pPath = null;
+            try {
+                pPath = pa.getPath();
+            } catch (RepositoryException e) {
+
+            }
+
-            try {
-                pb = b.getProperty(pName);
-                //fail if the property is there but should not be
-                if (skipBinary && pType == PropertyType.BINARY) {
-                    fail("Property '" + pName + "' must not be available if skipBinary=true.");
+            // avoid skipped properties
+            if (!propertySkipped(pName)) {
+                try {
+                    pb = b.getProperty(pName);
+                    //fail if the property is there but should not be
+                    if (skipBinary && pType == PropertyType.BINARY) {
+                        // todo
+                        fail("Property '" + pPath + "' must not be available if skipBinary=true.");
+                    }
+
+                } catch (RepositoryException e) {
+                    //fail if the property is not there but should
+                    if (!(skipBinary && pType == PropertyType.BINARY)) {
+                        // todo
+                        fail("Property '" + pPath + "' not available: " + e);
+                        fail("Property '" + pPath + "' not available: " + e);
+                    }
-            } catch (RepositoryException e) {
-                //fail if the property is not there but should
+                //if the property should be available and is available, then compare source and target value
-                    fail("Property '" + pName + "' not available: " + e);
+                    compareProperties(pa, pb);
-
-            //if the property should be available and is available, then compare source and target value
-            if (!(skipBinary && pType == PropertyType.BINARY)) {
-                compareProperties(pa, pb);
-            }
-
-
+
+    /**
+     * Checks if a given property should be skipped during xml import.
+     *  
+     * @param propertyName
+     * @return
+     */
+   public boolean propertySkipped(String propertyName) {
+        if (sc.propertySkipped.indexOf(" " + propertyName + " ") < 0) {
+            return false;
+        } else {
+            return true;
+        }
+    }

INS26 INS40 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS21 INS65 INS65 INS65 INS43 INS42 INS25 INS42 INS7 INS66 INS42 INS42 INS27 INS8 INS8 INS22 INS42 INS60 INS54 INS25 INS32 INS34 INS41 INS41 INS52 INS42 INS43 INS59 INS8 INS12 INS38 INS8 INS40 INS42 INS27 INS9 INS9 INS42 INS42 INS33 INS21 INS44 INS8 INS32 MOV54 MOV25 INS45 INS42 INS45 INS7 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS32 UPD42 INS42 INS27 UPD42 INS45 INS42 INS45 INS42