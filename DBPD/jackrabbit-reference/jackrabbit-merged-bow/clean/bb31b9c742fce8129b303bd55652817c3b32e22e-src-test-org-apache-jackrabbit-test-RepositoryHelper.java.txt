Extended helper and stub classes to support multiple instantiation. stub now also supports configuration on the api level.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125509 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.HashMap;
+     * Repository stub reference.
+     */
+    private RepositoryStub repoStub;
+
+    /**
+     * Overlay configuration.
+     */
+    private Map configuration = new HashMap();
+
+    /**
+     * Creates a repository helper with configuration from
+     * <code>repositoryStubImpl.properties</code> file.
+     */
+    public RepositoryHelper() {
+    }
+
+    /**
+     * Creates a repository helper with additional configuration parameters.
+     *
+     * @param config configuration which overlays the values from the property
+     *   file.
+     */
+    public RepositoryHelper(Map config) {
+        configuration.putAll(config);
+    }
+
+    /**
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository();
+            if (repoStub == null) {
+                repoStub = RepositoryStub.getInstance(configuration);
+            }
+            return repoStub.getRepository();
-        try {
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository().login(repStub.getSuperuserCredentials(), workspaceName);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to login to Repository.", e);
-        }
+        return getRepository().login(repoStub.getSuperuserCredentials(), workspaceName);
-        try {
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository().login(repStub.getReadWriteCredentials(), workspaceName);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to login to Repository.", e);
-        }
+        return getRepository().login(repoStub.getReadWriteCredentials(), workspaceName);
-        try {
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository().login(repStub.getReadOnlyCredentials(), workspaceName);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to login to Repository.", e);
-        }
+        return getRepository().login(repoStub.getReadOnlyCredentials(), workspaceName);
-        try {
-            return RepositoryStub.getInstance().getProperty(name);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to obtain Repository instance.", e);
-        }
+        // force assignment of repoStub
+        getRepository();
+        return repoStub.getProperty(name);

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS29 INS83 MOV43 INS59 INS29 INS83 INS43 INS59 INS29 MOV83 UPD42 MOV42 INS8 INS29 INS83 INS42 INS44 INS8 MOV29 INS83 MOV43 INS42 MOV44 MOV43 INS8 INS8 INS8 INS8 INS65 INS42 INS65 INS42 INS42 INS14 INS65 INS65 INS65 INS43 INS42 INS21 MOV41 MOV41 MOV41 INS21 MOV41 INS66 INS66 INS43 INS66 INS66 INS66 INS42 INS66 INS66 UPD42 MOV42 INS32 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS25 INS42 UPD42 MOV42 INS27 INS8 UPD42 UPD42 UPD42 INS42 INS33 INS21 UPD42 INS7 INS42 INS32 MOV42 MOV42 INS42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL32 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8