JCR-1510: [PATCH] more verbose exception messages (BatchedItemOperations)
    - Patch by Dave Brosius + some line wrapping

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@644653 13f79535-47bb-0310-9956-ffa450edef68

-            String msg = "invalid destination path (subscript in name element is not allowed)";
+            String msg =
+                "invalid destination path: " + safeGetJCRPath(destPath)
+                + " (subscript in name element is not allowed)";
-            String msg = "Cloning inside a workspace is only allowed for shareable nodes.";
+            String msg =
+                "Cloning inside a workspace is only allowed for shareable nodes; "
+                + safeGetJCRPath(srcPath) + " is not shareable.";
-            String msg = "This would create a share cycle.";
+            String msg =
+                "Cloning " + safeGetJCRPath(srcPath) + " to "
+                + safeGetJCRPath(destPath) + " would create a share cycle.";
-            String msg = "Adding a shareable node twice to the same parent is not supported.";
+            String msg =
+                "Adding a shareable node (" + safeGetJCRPath(srcPath)
+                + ") twice to the same parent is not supported.";
-            String msg = "invalid destination path (subscript in name element is not allowed)";
+            String msg =
+                "invalid copy destination path: " + safeGetJCRPath(destPath)
+                + " (subscript in name element is not allowed)";
-            throw new IllegalStateException("not in edit mode");
+            throw new IllegalStateException("cannot move path " + safeGetJCRPath(srcPath) + " because manager is not in edit mode");
-                String msg = safeGetJCRPath(destPath)
-                        + ": invalid destination path (cannot be descendant of source path)";
+                String msg =
+                    safeGetJCRPath(destPath) + ": invalid destination path"
+                    + " (cannot be descendant of source path)";
-            String msg = "invalid path: " + safeGetJCRPath(destPath);
+            String msg = "invalid path for move: " + safeGetJCRPath(destPath);
-            String msg = safeGetJCRPath(destPath)
-                    + ": invalid destination path (subscript in name element is not allowed)";
+            String msg =
+                safeGetJCRPath(destPath) + ": invalid destination path"
+                + " (subscript in name element is not allowed)";
-                String msg = "Moving a shareable node is not supported.";
+                String msg = "Moving a shareable node (" + safeGetJCRPath(srcPath) + " ) is not supported.";
-            throw new IllegalStateException("not in edit mode");
+            throw new IllegalStateException(
+                    "cannot remove node (" + safeGetJCRPath(nodePath)
+                    + ") because manager is not in edit mode");
-                throw new AccessDeniedException(safeGetJCRPath(parentState.getNodeId())
+                throw new AccessDeniedException(
+                        safeGetJCRPath(parentState.getNodeId())
-                throw new ConstraintViolationException(safeGetJCRPath(parentState.getNodeId())
+                throw new ConstraintViolationException(
+                        safeGetJCRPath(parentState.getNodeId())
-                    String msg = "internal error: failed to retrieve state of "
-                            + safeGetJCRPath(conflictingId);
+                    String msg =
+                        "internal error: failed to retrieve state of "
+                        + safeGetJCRPath(conflictingId);
-                    throw new ItemExistsException("cannot add child node '"
+                    throw new ItemExistsException(
+                            "cannot add child node '"
-                    throw new AccessDeniedException(safeGetJCRPath(targetPath)
+                    throw new AccessDeniedException(
+                            safeGetJCRPath(targetPath)
-                String msg = "internal error: failed to check access rights for "
-                        + safeGetJCRPath(targetPath);
+                String msg =
+                    "internal error: failed to check access rights for "
+                    + safeGetJCRPath(targetPath);
-                throw new ConstraintViolationException(safeGetJCRPath(parentId)
+                throw new ConstraintViolationException(
+                        safeGetJCRPath(parentId)
-                throw new ConstraintViolationException(safeGetJCRPath(targetPath)
+                throw new ConstraintViolationException(
+                        safeGetJCRPath(targetPath)
-                throw new ConstraintViolationException(safeGetJCRPath(targetPath)
+                throw new ConstraintViolationException(
+                        safeGetJCRPath(targetPath)
-                            throw new ReferentialIntegrityException(safeGetJCRPath(targetPath)
+                            throw new ReferentialIntegrityException(
+                                    safeGetJCRPath(targetPath)
-                        String msg = "internal error: failed to check references on "
-                                + safeGetJCRPath(targetPath);
+                        String msg =
+                            "internal error: failed to check references on "
+                            + safeGetJCRPath(targetPath);
-            throw new IllegalStateException("not in edit mode");
+            throw new IllegalStateException("cannot create node state for " + nodeName + " because manager is not in edit mode");
-                String msg = "an applicable node type could not be determined for "
-                        + nodeName;
+                String msg =
+                    "an applicable node type could not be determined for "
+                    + nodeName;
-            throw new IllegalStateException("not in edit mode");
+            throw new IllegalStateException(
+                    "cannot create property state for " + propName
+                    + " because manager is not in edit mode");
-            throw new VersionException(safeGetJCRPath(nodePath) + " is checked-in");
+            throw new VersionException(
+                    safeGetJCRPath(nodePath) + " is checked-in");
-            throw new ConstraintViolationException(safeGetJCRPath(nodePath)
-                    + ": node is protected");
+            throw new ConstraintViolationException(
+                    safeGetJCRPath(nodePath) + ": node is protected");
-            String msg = "internal error: failed to retrieve state of "
-                    + safeGetJCRPath(id);
+            String msg =
+                "internal error: failed to retrieve state of "
+                + safeGetJCRPath(id);
-                            String msg = "cannot remove ancestor node";
+                            String msg =
+                                "cannot remove node " + safeGetJCRPath(srcPath)
+                                + " because it is an ancestor of the destination";
-                    throw new IllegalArgumentException("unknown flag");
+                    throw new IllegalArgumentException(
+                            "unknown flag for copying node state: " + flag);
-                                String msg = "Remapped child is not shareable.";
+                                String msg = "Remapped child (" + safeGetJCRPath(srcPath) + ") is not shareable.";
-            String msg = "internal error: failed to copy state of " + srcState.getNodeId();
+            String msg =
+                "internal error: failed to copy state of "
+                + srcState.getNodeId();
-            String msg = "internal error: failed to build effective node type for node "
-                    + state.getNodeId();
+            String msg =
+                "internal error: failed to build effective node type for node "
+                + state.getNodeId();

MOV21 INS60 MOV21 MOV43 INS59 INS27 INS27 INS27 INS42 INS42 MOV42 INS27 INS27 INS27 MOV43 INS27 INS27 INS27 INS45 INS32 INS45 INS45 INS32 INS45 INS45 INS32 INS45 INS32 INS45 INS45 INS32 INS45 INS45 INS32 INS45 INS45 INS32 INS45 MOV43 INS45 UPD45 INS45 INS32 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD45 INS27 INS42 INS42 INS45 INS42 INS45 UPD45 INS45 INS32 INS45 INS42 INS42 INS27 INS45 INS32 INS45 INS42 INS42 INS27 INS45 INS32 INS45 INS42 INS42 DEL45 DEL45 DEL45 DEL45 DEL59 DEL60 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45