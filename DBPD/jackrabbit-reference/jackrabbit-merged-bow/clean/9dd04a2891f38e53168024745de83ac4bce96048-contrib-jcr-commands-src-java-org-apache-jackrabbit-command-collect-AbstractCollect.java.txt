jcr-97: Improve Checkstyle conformance

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@312896 13f79535-47bb-0310-9956-ffa450edef68

- * Copyright 2002-2004 The Apache Software Foundation.
+ * Copyright 2004-2005 The Apache Software Foundation or its licensors,
+ *                     as applicable.
- *   http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
- * 
-public abstract class AbstractCollect implements Command
-{
-	/** logger */
-	private static Log log = LogFactory.getLog(AbstractCollect.class);
+public abstract class AbstractCollect implements Command {
+    /** logger */
+    private static Log log = LogFactory.getLog(AbstractCollect.class);
-	// ---------------------------- < keys >
+    // ---------------------------- < keys >
-	/** path key. Default value is "." */
-	private String srcPathKey = "srcPath";
+    /** path key. Default value is "." */
+    private String srcPathKey = "srcPath";
-	/** context attribute key for the depth attribute. */
-	private String depthKey = "depth";
+    /** context attribute key for the depth attribute. */
+    private String depthKey = "depth";
-	/** context attribute key for the name pattern attribute. Default value is "*" */
-	private String namePatternKey = "namePattern";
+    /**
+     * context attribute key for the name pattern attribute. Default value is
+     * "*"
+     */
+    private String namePatternKey = "namePattern";
-	/** context attribute key for the destination attribute */
-	private String destKey = "collected";
+    /** context attribute key for the destination attribute */
+    private String destKey = "collected";
-	/**
-	 * @inheritDoc
-	 */
-	public final boolean execute(Context ctx) throws Exception
-	{
-		if (this.destKey == null || this.destKey.length() == 0)
-		{
-			throw new IllegalStateException("target variable is not set");
-		}
-		String relPath = (String) ctx.get(this.srcPathKey);
-		if (relPath == null)
-		{
-			relPath = ".";
-		}
-		String namePattern = (String) ctx.get(this.namePatternKey);
-		if (namePattern == null || namePattern.length() == 0)
-		{
-			namePattern = "*";
-		}
+    /**
+     * {@inheritDoc}
+     */
+    public final boolean execute(Context ctx) throws Exception {
+        if (this.destKey == null || this.destKey.length() == 0) {
+            throw new IllegalStateException("target variable is not set");
+        }
+        String relPath = (String) ctx.get(this.srcPathKey);
+        if (relPath == null) {
+            relPath = ".";
+        }
+        String namePattern = (String) ctx.get(this.namePatternKey);
+        if (namePattern == null || namePattern.length() == 0) {
+            namePattern = "*";
+        }
-		int depth = Integer.parseInt((String) ctx.get(this.depthKey));
+        int depth = Integer.parseInt((String) ctx.get(this.depthKey));
-		Node node = CommandHelper.getNode(ctx, relPath);
-		if (log.isDebugEnabled())
-		{
-			log.debug("collecting nodes from " + node.getPath() + " depth="
-					+ depth + " pattern=" + namePattern
-					+ " into target variable " + this.destKey);
-		}
+        Node node = CommandHelper.getNode(ctx, relPath);
+        if (log.isDebugEnabled()) {
+            log.debug("collecting nodes from " + node.getPath() + " depth="
+                    + depth + " pattern=" + namePattern
+                    + " into target variable " + this.destKey);
+        }
-		Collection items = new ArrayList();
-		ChildrenCollectorFilter collector = new ChildrenCollectorFilter(
-				namePattern, items, isCollectNodes(), isCollectProperties(),
-				depth);
-		collector.visit(node);
-		ctx.put(this.destKey, items.iterator());
+        Collection items = new ArrayList();
+        ChildrenCollectorFilter collector = new ChildrenCollectorFilter(
+            namePattern, items, isCollectNodes(), isCollectProperties(), depth);
+        collector.visit(node);
+        ctx.put(this.destKey, items.iterator());
-		return false;
-	}
+        return false;
+    }
-	/**
-	 * @return Returns the depthKey.
-	 */
-	public String getDepthKey()
-	{
-		return depthKey;
-	}
+    /**
+     * @return Returns the depthKey.
+     */
+    public String getDepthKey() {
+        return depthKey;
+    }
-	/**
-	 * @param depthKey
-	 *            Set the context attribute key for the depth attribute
-	 */
-	public void setDepthKey(String depthKey)
-	{
-		this.depthKey = depthKey;
-	}
+    /**
+     * @param depthKey
+     *        Set the context attribute key for the depth attribute
+     */
+    public void setDepthKey(String depthKey) {
+        this.depthKey = depthKey;
+    }
-	/**
-	 * @return Returns the namePatternKey.
-	 */
-	public String getNamePatternKey()
-	{
-		return namePatternKey;
-	}
+    /**
+     * @return Returns the namePatternKey.
+     */
+    public String getNamePatternKey() {
+        return namePatternKey;
+    }
-	/**
-	 * @param namePatternKey
-	 *            context attribute key for the name pattern attribute
-	 */
-	public void setNamePatternKey(String namePatternKey)
-	{
-		this.namePatternKey = namePatternKey;
-	}
+    /**
+     * @param namePatternKey
+     *        context attribute key for the name pattern attribute
+     */
+    public void setNamePatternKey(String namePatternKey) {
+        this.namePatternKey = namePatternKey;
+    }
-	/** Collect nodes flag */
-	protected abstract boolean isCollectNodes();
+    /**
+     * Collect nodes flag
+     * @return true if <code>Node</code> s must be collected
+     */
+    protected abstract boolean isCollectNodes();
-	/** Collect properties flag */
-	protected abstract boolean isCollectProperties();
+    /**
+     * Collect properties flag
+     * @return true if <code>Property</code> s must be collected
+     */
+    protected abstract boolean isCollectProperties();
-	public String getDestKey()
-	{
-		return destKey;
-	}
+    /**
+     * @return the destination key
+     */
+    public String getDestKey() {
+        return destKey;
+    }
-	public void setDestKey(String destKey)
-	{
-		this.destKey = destKey;
-	}
+    /**
+     * Sets the destination key
+     * @param destKey
+     *        the detination key
+     */
+    public void setDestKey(String destKey) {
+        this.destKey = destKey;
+    }
-	public String getSrcPathKey()
-	{
-		return srcPathKey;
-	}
+    /**
+     * @return the source path key
+     */
+    public String getSrcPathKey() {
+        return srcPathKey;
+    }
-	public void setSrcPathKey(String srcPathKey)
-	{
-		this.srcPathKey = srcPathKey;
-	}
+    /**
+     * Sets the source path key
+     * @param srcPathKey
+     *        the source path key
+     */
+    public void setSrcPathKey(String srcPathKey) {
+        this.srcPathKey = srcPathKey;
+    }

INS29 INS29 INS29 INS29 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 UPD66 INS66 INS65 UPD66 INS66 UPD66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 DEL65