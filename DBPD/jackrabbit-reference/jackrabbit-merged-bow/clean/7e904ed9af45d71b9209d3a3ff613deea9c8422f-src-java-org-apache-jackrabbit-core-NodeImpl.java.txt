oops, fix introduced new bug, reverting to previous state

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@105832 13f79535-47bb-0310-9956-ffa450edef68

-    // flag set in status passed to getOrCreateProperty if property was created
-    protected static final short CREATED = 0;
-
-    protected PropertyImpl getOrCreateProperty(String name, int type,
-                                               boolean multiValued,
-                                               BitSet status)
+    protected PropertyImpl getOrCreateProperty(String name, int type, boolean multiValued)
+        try {
+            return (PropertyImpl) getProperty(name);
+        } catch (PathNotFoundException pnfe) {
+            // fall through
+        }
+
+        // property does not exist yet...
-        return getOrCreateProperty(qName, type, multiValued, status);
+        // find definition for the specified property and create property
+        PropertyDefImpl def = getApplicablePropertyDef(qName, type, multiValued);
+        return createChildProperty(qName, type, def);
-    protected synchronized PropertyImpl getOrCreateProperty(QName name, int type,
-                                                            boolean multiValued,
-                                                            BitSet status)
+    protected PropertyImpl getOrCreateProperty(QName name, int type, boolean multiValued)
-        status.clear();
-
-        PropertyId propId = new PropertyId(((NodeState) state).getUUID(), name);
-        if (itemMgr.itemExists(propId)) {
-            return getProperty(name);
+        try {
+            return (PropertyImpl) getProperty(name);
+        } catch (ItemNotFoundException e) {
+            // does not exist yet:
+            // find definition for the specified property and create property
+            PropertyDefImpl def = getApplicablePropertyDef(name, type, multiValued);
+            return createChildProperty(name, type, def);
-        // does not exist yet:
-        // find definition for the specified property and create property
-        PropertyDefImpl def = getApplicablePropertyDef(name, type, multiValued);
-        PropertyImpl prop = createChildProperty(name, type, def);
-        status.set(CREATED);
-        return prop;
-
-    protected void removeChildProperty(String propName) throws RepositoryException {
-        QName qName;
-        try {
-            qName = QName.fromJCRName(propName, session.getNamespaceResolver());
-        } catch (IllegalNameException ine) {
-            throw new RepositoryException("invalid property name: " + propName, ine);
-        } catch (UnknownPrefixException upe) {
-            throw new RepositoryException("invalid property name: " + propName, upe);
-        }
-        removeChildProperty(qName);
-    }
-
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
-        try {
-            if (value == null) {
-                prop.internalSetValue((InternalValue[]) null, type);
-            } else {
-                prop.internalSetValue(new InternalValue[]{value}, type);
-            }
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
+        PropertyImpl prop = getOrCreateProperty(name, type, false);
+        if (value == null) {
+            prop.internalSetValue((InternalValue[]) null, type);
+        } else {
+            prop.internalSetValue(new InternalValue[]{value}, type);
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
-        try {
-            prop.internalSetValue(values, type);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, type, true);
+        prop.internalSetValue(values, type);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.NAME, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.NAME, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.NAME, true, status);
-        try {
-            prop.setValue(values);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.NAME, true);
+        prop.setValue(values);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
-        try {
-            prop.setValue(values);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, type, true);
+        prop.setValue(values);
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, type, false);
+        prop.setValue(value);
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
-        try {
-            prop.setValue(values);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, type, true);
+        prop.setValue(values);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.STRING, true, status);
-        try {
-            prop.setValue(values);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.STRING, true);
+        prop.setValue(values);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.STRING, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.STRING, false);
+        prop.setValue(value);
-
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, type, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.BINARY, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.BINARY, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.BOOLEAN, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.BOOLEAN, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.DOUBLE, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.DOUBLE, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.LONG, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.LONG, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.DATE, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.DATE, false);
+        prop.setValue(value);
-        BitSet status = new BitSet();
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.REFERENCE, false, status);
-        try {
-            prop.setValue(value);
-        } catch (RepositoryException re) {
-            if (status.get(CREATED)) {
-                // setting value failed, get rid of newly created property
-                removeChildProperty(name);
-            }
-            // rethrow
-            throw re;
-        }
+        PropertyImpl prop = getOrCreateProperty(name, PropertyType.REFERENCE, false);
+        prop.setValue(value);

MOV8 INS54 INS60 INS41 INS54 MOV21 MOV60 MOV25 INS60 MOV41 MOV21 MOV21 INS60 MOV21 INS41 MOV21 INS60 MOV21 MOV41 MOV21 MOV21 MOV21 MOV21 MOV41 MOV21 INS60 MOV21 MOV41 MOV21 MOV21 MOV41 MOV21 MOV21 MOV41 MOV21 INS60 MOV21 MOV41 MOV21 MOV21 MOV41 MOV21 MOV41 MOV21 MOV21 MOV21 MOV21 MOV41 MOV21 MOV21 MOV41 MOV21 MOV21 MOV41 INS8 INS12 INS43 INS59 INS32 MOV8 INS12 MOV43 INS59 MOV43 MOV43 MOV59 INS42 MOV43 MOV59 MOV43 MOV43 MOV43 MOV59 MOV32 MOV43 MOV43 MOV43 MOV59 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 INS41 INS44 INS8 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 INS44 INS8 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS11 INS43 INS42 INS42 MOV42 MOV42 MOV42 INS11 INS43 INS42 MOV60 MOV41 INS42 INS42 INS42 INS9 INS43 INS32 INS42 MOV43 MOV32 UPD42 MOV42 MOV32 INS42 UPD42 MOV42 INS42 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL32 DEL41 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL25 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL54