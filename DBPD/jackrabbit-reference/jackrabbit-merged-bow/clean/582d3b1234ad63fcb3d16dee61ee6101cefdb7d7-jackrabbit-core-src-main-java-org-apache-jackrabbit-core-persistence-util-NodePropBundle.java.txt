JCR-2762: Optimize bundle serialization

Remove the direct reference from NodePropBundle to BundleBinding to make it easier to later refactor the BundleBinding class.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1002601 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
+import java.util.HashSet;
-     * the bundle binding that handles this bundle
-     */
-    private final BundleBinding binding;
-
-    /**
-     * @param binding the bundle binding
+     *
-    public NodePropBundle(BundleBinding binding, NodeId id) {
-        this.binding = binding;
+    public NodePropBundle(NodeId id) {
-     * @param binding the bundle binding
+     *
-    public NodePropBundle(BundleBinding binding, NodeState state) {
-        this(binding, (NodeId) state.getId());
+    public NodePropBundle(NodeState state) {
+        this(state.getNodeId());
+     *
+     * @param blobStore BLOB store from where to delete previous property value
-    public void addProperty(PropertyState state) {
-        PropertyEntry old = properties.put(state.getName(), new PropertyEntry(state));
+    @SuppressWarnings("deprecation")
+    public void addProperty(PropertyState state, BLOBStore blobStore) {
+        PropertyEntry old =
+            properties.put(state.getName(), new PropertyEntry(state));
-            old.destroy(binding.getBlobStore());
+            old.destroy(blobStore);
+     *
+     * @param blobStore BLOB store from where to delete property values
-    public void removeAllProperties() {
-        Iterator<Name> iter = properties.keySet().iterator();
-        while (iter.hasNext()) {
-            Name name = (Name) iter.next();
-            removeProperty(name);
-            iter = properties.keySet().iterator();
+    @SuppressWarnings("deprecation")
+    public void removeAllProperties(BLOBStore blobStore) {
+        for (Name name : new HashSet<Name>(properties.keySet())) {
+            removeProperty(name, blobStore);
+     *
+     * @param blobStore BLOB store from where to delete the property value
-    public void removeProperty(Name name) {
-        PropertyEntry pe = (PropertyEntry) properties.remove(name);
+    @SuppressWarnings("deprecation")
+    public void removeProperty(Name name, BLOBStore blobStore) {
+        PropertyEntry pe = properties.remove(name);
-            pe.destroy(binding.getBlobStore());
+            pe.destroy(blobStore);
+        @SuppressWarnings("deprecation")
-            if (blobIds != null) {
-                for (int i = 0; i < blobIds.length; i++) {
-                    if (blobIds[i] != null) {
-                        try {
-                            blobStore.remove(blobIds[i]);
-                            log.debug("removed blob {}", blobIds[i]);
-                        } catch (Exception e) {
-                            log.error("Ingoring error while removing blob {}", blobIds[i], e);
-                        }
+            for (int i = 0; blobIds != null && i < blobIds.length; i++) {
+                if (blobIds[i] != null) {
+                    try {
+                        blobStore.remove(blobIds[i]);
+                        log.debug("removed blob {}", blobIds[i]);
+                    } catch (Exception e) {
+                        log.error("Ignoring error while removing blob " + blobIds[i], e);
+
+

UPD40 INS31 INS79 INS44 MOV29 INS79 MOV83 MOV39 MOV42 INS44 INS8 INS79 INS44 INS65 INS42 INS45 INS43 INS42 INS65 INS42 INS45 INS43 INS42 INS70 INS65 INS42 INS45 INS43 INS42 INS79 MOV8 INS32 INS42 INS66 INS42 INS42 INS66 INS42 INS44 INS14 INS8 INS42 INS66 INS42 MOV43 INS42 INS45 MOV42 UPD42 MOV42 INS43 INS42 UPD74 MOV74 MOV32 MOV21 MOV32 INS27 MOV42 UPD43 MOV27 MOV27 UPD42 MOV42 UPD42 INS42 UPD42 MOV42 INS27 INS45 MOV2 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL32 DEL11 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL61 DEL8 DEL31 DEL42 DEL43 DEL11 DEL42 DEL32 DEL45 DEL25 DEL8