JCR-1705: Reduce memory usage of transient nodes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@691603 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.util.EmptyLinkedMap;
+import java.util.Map;
-    // insertion-ordered map of entries (key=NodeId, value=entry)
+    /**
+     * Insertion-ordered map of entries
+     * (key=NodeId, value=entry)
+     */
-    // map used for lookup by name
-    // (key=name, value=either a single entry or a list of sns entries)
-    private HashMap nameMap;
+
+    /**
+     * Map used for lookup by name
+     * (key=name, value=either a single entry or a list of sns entries)
+     */
+    private Map nameMap;
+
+    /**
+     * Indicates whether the entries and nameMap are shared with another
+     * ChildNodeEntries instance.
+     */
+    private boolean shared;
-        entries = new LinkedMap();
-        nameMap = new HashMap();
+        init();
+        ensureModifiable();
+        ensureModifiable();
-        nameMap.clear();
-        entries.clear();
+        init();
+
-        ChildNodeEntries clone = new ChildNodeEntries();
-        clone.entries = (LinkedMap) entries.clone();
-        clone.nameMap = new HashMap(nameMap.size());
-        for (Iterator it = nameMap.keySet().iterator(); it.hasNext();) {
-            Object key = it.next();
-            Object obj = nameMap.get(key);
-            if (obj instanceof ArrayList) {
-                // clone List
-                obj = ((ArrayList) obj).clone();
+        try {
+            ChildNodeEntries clone = (ChildNodeEntries) super.clone();
+            if (nameMap != Collections.EMPTY_MAP) {
+                clone.shared = true;
+                shared = true;
-            clone.nameMap.put(key, obj);
+            return clone;
+        } catch (CloneNotSupportedException e) {
+            // never happens, this class is cloneable
+            throw new InternalError();
-        return clone;
+    }
+
+    //-------------------------------------------------------------< internal >
+
+    /**
+     * Initializes the name and entries map with unmodifiable empty instances.
+     */
+    private void init() {
+        nameMap = Collections.EMPTY_MAP;
+        entries = EmptyLinkedMap.INSTANCE;
+        shared = false;
+    }
+
+    /**
+     * Ensures that the {@link #nameMap} and {@link #entries} map are
+     * modifiable.
+     */
+    private void ensureModifiable() {
+        if (nameMap == Collections.EMPTY_MAP) {
+            nameMap = new HashMap();
+            entries = new LinkedMap();
+        } else if (shared) {
+            entries = (LinkedMap) entries.clone();
+            nameMap = (Map) ((HashMap) nameMap).clone();
+            for (Iterator it = nameMap.entrySet().iterator(); it.hasNext(); ) {
+                Map.Entry entry = (Map.Entry) it.next();
+                Object value = entry.getValue();
+                if (value instanceof ArrayList) {
+                    entry.setValue(((ArrayList) value).clone());
+                }
+            }
+            shared = false;
+        }

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS29 INS29 UPD43 INS29 INS83 INS39 INS59 INS8 MOV29 MOV83 MOV39 MOV42 INS8 MOV29 INS83 MOV43 INS42 INS8 INS29 INS83 INS39 INS42 MOV8 INS29 UPD83 INS39 UPD42 INS8 INS65 INS65 UPD42 INS65 INS42 INS21 INS21 INS21 INS21 INS54 INS65 INS21 INS21 INS65 INS25 INS66 INS66 INS66 INS66 INS66 INS66 INS32 INS32 INS32 INS32 INS8 INS12 INS66 INS7 INS7 INS7 INS66 INS65 INS66 INS65 INS66 INS66 INS27 MOV8 MOV21 INS25 INS42 INS42 INS42 INS42 MOV60 INS25 MOV41 INS44 INS8 INS42 INS40 INS42 INS40 INS42 INS9 INS67 INS67 INS42 INS40 INS42 MOV8 MOV43 INS27 INS8 INS43 INS42 INS53 INS42 INS42 INS21 INS11 INS42 INS40 INS21 INS21 INS42 INS14 INS7 MOV43 INS48 INS7 INS7 INS43 INS42 INS42 INS11 INS42 INS9 INS42 INS40 INS9 INS42 INS9 INS42 INS43 INS32 UPD43 INS42 INS36 UPD42 MOV42 INS40 UPD42 INS11 UPD42 UPD42 INS11 UPD42 INS43 MOV32 UPD42 UPD42 INS32 MOV43 INS42 INS40 INS42 INS42 MOV32 UPD42 DEL31 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL40 DEL40 DEL42 DEL32 DEL14 DEL42 DEL42 DEL42 DEL7 DEL40 DEL42 DEL42 DEL42 DEL32 DEL21