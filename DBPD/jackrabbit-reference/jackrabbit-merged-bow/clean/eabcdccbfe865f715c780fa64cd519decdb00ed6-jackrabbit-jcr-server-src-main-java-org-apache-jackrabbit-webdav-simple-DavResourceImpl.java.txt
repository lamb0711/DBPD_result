JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.property.PropEntry;
-import java.util.Iterator;
-    public DavProperty getProperty(DavPropertyName name) {
+    public DavProperty<?> getProperty(DavPropertyName name) {
-            properties.add(new DefaultDavProperty(DavPropertyName.DISPLAYNAME, getDisplayName()));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.DISPLAYNAME, getDisplayName()));
-            properties.add(new DefaultDavProperty(DavPropertyName.ISCOLLECTION, "1"));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.ISCOLLECTION, "1"));
-            properties.add(new DefaultDavProperty(DavPropertyName.ISCOLLECTION, "0"));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.ISCOLLECTION, "0"));
-        Set parentElements = getParentElements();
+        Set<ParentElement> parentElements = getParentElements();
-        an empty lockdiscovery will be returned in the response. */
+        an empty lock discovery will be returned in the response. */
-    public void setProperty(DavProperty property) throws DavException {
+    public void setProperty(DavProperty<?> property) throws DavException {
-    private void alterProperty(Object prop) throws DavException {
+    private void alterProperty(PropEntry prop) throws DavException {
-            List l = new ArrayList(1);
-            l.add(prop);
-            alterProperties(l);
-            Map failure = config.getPropertyManager().alterProperties(getPropertyImportContext(l), isCollection());
+            List<? extends PropEntry> list = Collections.singletonList(prop);
+            alterProperties(list);
+            Map<? extends PropEntry, ?> failure = config.getPropertyManager().alterProperties(getPropertyImportContext(list), isCollection());
-    public MultiStatusResponse alterProperties(List changeList) throws DavException {
+    public MultiStatusResponse alterProperties(List<? extends PropEntry> changeList) throws DavException {
-            Map failures = config.getPropertyManager().alterProperties(getPropertyImportContext(changeList), isCollection());
+            Map<? extends PropEntry, ?> failures = config.getPropertyManager().alterProperties(getPropertyImportContext(changeList), isCollection());
-               and them to the multistatus response respecting the resulte of the
+               and them to the multistatus response respecting the result of the
-            Iterator it = changeList.iterator();
-            while (it.hasNext()) {
-                Object o = it.next();
+            for (PropEntry propEntry : changeList) {
-                if (failures.containsKey(o)) {
-                    Object error = failures.get(o);
+                if (failures.containsKey(propEntry)) {
+                    Object error = failures.get(propEntry);
-                        ? new JcrDavException((RepositoryException) error).getErrorCode()
-                        : DavServletResponse.SC_INTERNAL_SERVER_ERROR;
+                            ? new JcrDavException((RepositoryException) error).getErrorCode()
+                            : DavServletResponse.SC_INTERNAL_SERVER_ERROR;
-                if (o instanceof DavProperty) {
-                    msr.add(((DavProperty) o).getName(), statusCode);
+                if (propEntry instanceof DavProperty) {
+                    msr.add(((DavProperty<?>) propEntry).getName(), statusCode);
-                    msr.add((DavPropertyName) o, statusCode);
+                    msr.add((DavPropertyName) propEntry, statusCode);
-        ArrayList list = new ArrayList();
+        ArrayList<DavResource> list = new ArrayList<DavResource>();
-                // should not occure
+                // should not occur
-                // should not occure
+                // should not occur
-    public Set getParentElements() {
+    public Set<ParentElement> getParentElements() {
-                Set ps = new HashSet();
+                Set<ParentElement> ps = new HashSet<ParentElement>();
-        return Collections.EMPTY_SET;
+        return Collections.emptySet();
-    protected PropertyImportContext getPropertyImportContext(List changeList) {
+    protected PropertyImportContext getPropertyImportContext(List<? extends PropEntry> changeList) {
-            String[] sLockTokens = session.getLockTokens();
-            for (int i = 0; i < sLockTokens.length; i++) {
-                if (sLockTokens[i].equals(lock.getToken())) {
+            for (String sLockToken : session.getLockTokens()) {
+                if (sLockToken.equals(lock.getToken())) {
-                properties.add(new DefaultDavProperty(DavPropertyName.GETCONTENTLANGUAGE, contentLanguage));
+                properties.add(new DefaultDavProperty<String>(DavPropertyName.GETCONTENTLANGUAGE, contentLanguage));
-                properties.add(new DefaultDavProperty(DavPropertyName.GETCONTENTLENGTH, contentLength + ""));
+                properties.add(new DefaultDavProperty<String>(DavPropertyName.GETCONTENTLENGTH, contentLength + ""));
-                properties.add(new DefaultDavProperty(DavPropertyName.GETCONTENTTYPE, contentType));
+                properties.add(new DefaultDavProperty<String>(DavPropertyName.GETCONTENTTYPE, contentType));
-            properties.add(new DefaultDavProperty(DavPropertyName.CREATIONDATE, created));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.CREATIONDATE, created));
-            properties.add(new DefaultDavProperty(DavPropertyName.GETLASTMODIFIED, lastModified));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.GETLASTMODIFIED, lastModified));
-                properties.add(new DefaultDavProperty(DavPropertyName.GETETAG, etag));
+                properties.add(new DefaultDavProperty<String>(DavPropertyName.GETETAG, etag));
-                properties.add((DavProperty)propertyValue);
+                properties.add((DavProperty<?>)propertyValue);
-                properties.add(new DefaultDavProperty(pName, propertyValue));
+                properties.add(new DefaultDavProperty<Object>(pName, propertyValue));
-        private final List changeList;
+        private final List<? extends PropEntry> changeList;
-        private ProperyImportCtx(List changeList) {
+        private ProperyImportCtx(List<? extends PropEntry> changeList) {
-        public List getChangeList() {
+        public List<? extends PropEntry> getChangeList() {

MOV26 UPD40 INS74 INS74 MOV43 INS76 INS74 UPD43 INS74 MOV43 INS43 INS74 INS74 INS74 INS74 MOV43 INS76 UPD42 MOV43 INS76 INS74 INS42 INS32 MOV43 INS76 MOV43 INS76 INS74 MOV43 INS76 MOV43 INS43 INS60 INS43 INS70 MOV43 INS43 INS42 INS42 INS43 INS70 INS43 MOV43 INS76 INS43 INS42 INS74 INS59 INS74 INS42 INS74 INS44 INS42 MOV8 INS42 INS74 INS42 INS44 MOV32 MOV8 INS42 INS42 INS43 UPD42 MOV42 MOV43 INS76 INS42 INS32 UPD42 MOV43 INS76 INS76 MOV43 INS76 INS76 INS43 INS42 MOV43 INS43 MOV43 INS42 INS74 INS74 INS42 INS74 INS74 INS74 INS43 UPD42 MOV42 UPD42 MOV42 MOV42 INS43 INS43 UPD42 MOV42 INS42 INS74 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS42 INS42 UPD42 INS42 UPD42 UPD42 MOV43 INS43 INS42 INS74 INS74 INS74 MOV42 INS42 MOV42 INS42 INS74 INS74 INS74 INS42 INS42 INS42 INS42 INS74 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS43 MOV43 INS76 MOV43 MOV43 MOV43 INS43 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS42 INS74 UPD42 MOV43 INS76 DEL42 DEL42 DEL43 DEL34 DEL14 DEL59 DEL60 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL40 DEL42 DEL42 DEL2 DEL85 DEL5 DEL42 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24