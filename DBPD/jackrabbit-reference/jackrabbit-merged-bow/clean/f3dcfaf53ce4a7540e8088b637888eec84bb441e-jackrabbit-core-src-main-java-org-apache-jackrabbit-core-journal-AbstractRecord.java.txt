JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameFormat;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.PathFormat;
-import org.apache.jackrabbit.name.UnknownPrefixException;
-import org.apache.jackrabbit.name.IllegalNameException;
-import org.apache.jackrabbit.name.MalformedPathException;
+import org.apache.jackrabbit.conversion.MalformedPathException;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.conversion.NamePathResolver;
-import org.apache.jackrabbit.core.nodetype.compact.CompactNodeTypeDefWriter;
+import org.apache.jackrabbit.core.nodetype.compact.CompactNodeTypeDefWriter;
+import org.apache.jackrabbit.name.PathFactoryImpl;
+import org.apache.jackrabbit.namespace.NamespaceResolver;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.Path;
-import java.util.ArrayList;
-import java.util.List;
-import java.io.StringWriter;
+import javax.jcr.NamespaceException;
+import java.io.StringWriter;
+import java.util.ArrayList;
+import java.util.List;
-    protected final NamespaceResolver resolver;
+    protected final NamespaceResolver nsResolver;
+
+    /**
+     * Name and Path resolver.
+     */
+    protected final NamePathResolver resolver;
-    public AbstractRecord(NamespaceResolver resolver) {
+    public AbstractRecord(NamespaceResolver nsResolver, NamePathResolver resolver) {
+        this.nsResolver = nsResolver;
-    public void writeQName(QName name) throws JournalException {
+    public void writeQName(Name name) throws JournalException {
-            writeString(NameFormat.format(name, resolver));
-        } catch (NoPrefixDeclaredException e) {
+            writeString(resolver.getJCRName(name));
+        } catch (NamespaceException e) {
-    public void writePathElement(Path.PathElement element) throws JournalException {
+    public void writePathElement(Path.Element element) throws JournalException {
-            writeString(PathFormat.format(path, resolver));
-        } catch (NoPrefixDeclaredException e) {
+            writeString(resolver.getJCRPath(path));
+        } catch (NamespaceException e) {
-            CompactNodeTypeDefWriter writer = new CompactNodeTypeDefWriter(sw, resolver, true);
+            CompactNodeTypeDefWriter writer = new CompactNodeTypeDefWriter(sw, nsResolver, resolver, true);
-    public QName readQName() throws JournalException {
+    public Name readQName() throws JournalException {
-            return NameFormat.parse(readString(), resolver);
-        } catch (UnknownPrefixException e) {
+            return resolver.getQName(readString());
+        } catch (NameException e) {
-        } catch (IllegalNameException e) {
+        } catch (NamespaceException e) {
-    public Path.PathElement readPathElement() throws JournalException {
+    public Path.Element readPathElement() throws JournalException {
-            QName name = NameFormat.parse(readString(), resolver);
+            Name name = resolver.getQName(readString());
-                return Path.PathElement.create(name, index);
+                return PathFactoryImpl.getInstance().createElement(name, index);
-                return Path.PathElement.create(name);
+                return PathFactoryImpl.getInstance().createElement(name);
-        } catch (UnknownPrefixException e) {
+        } catch (NameException e) {
-        } catch (IllegalNameException e) {
+        } catch (NamespaceException e) {
-            return PathFormat.parse(readString(), resolver);
+            return resolver.getQPath(readString());
+        } catch (NamespaceException e) {
+            String msg = "Malformed path error while reading path.";
+            throw new JournalException(msg, e);
+        } catch (NameException e) {
+            String msg = "Malformed path error while reading path.";
+            throw new JournalException(msg, e);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS23 INS59 INS29 INS83 INS83 INS43 MOV59 INS44 UPD43 UPD43 INS42 INS65 INS42 UPD42 INS43 INS42 INS21 UPD43 UPD43 UPD42 UPD40 INS66 INS42 INS7 UPD42 UPD40 INS12 INS12 INS22 INS42 INS44 INS8 INS44 INS8 INS52 INS42 UPD43 UPD43 MOV43 UPD43 UPD43 UPD43 UPD43 UPD43 INS43 INS42 INS60 INS53 INS43 INS42 INS60 INS53 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS43 INS59 INS14 INS42 INS43 INS59 INS14 UPD42 UPD42 UPD42 UPD42 MOV43 INS42 UPD42 UPD42 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS42 INS32 UPD42 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL40 DEL40 DEL42