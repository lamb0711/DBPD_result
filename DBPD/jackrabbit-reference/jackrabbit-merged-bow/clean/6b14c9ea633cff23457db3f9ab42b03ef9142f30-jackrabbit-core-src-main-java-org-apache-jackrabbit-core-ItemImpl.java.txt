JCR-1104 : JSR 283 support
JCR-1171 : Contribute Pluggable Permission and User Management to Jackrabbit

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638834 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.authorization.Permission;
-import org.apache.jackrabbit.core.state.ItemStateListener;
-                // transient item is not 'new', therefore it has to be 'modified'
-
+                /* transient item is not 'new', therefore it has to be 'modified'
+                   detect the effective set of modification:
+                   - child additions -> add_node perm on the child
+                   - property additions, modifications or removals -> set_property permission
+                   note: removed items are checked later on.
+                */
-                ItemId id = itemState.getId();
-                if (!accessMgr.isGranted(id, AccessManager.WRITE)) {
-                    String msg = itemMgr.safeGetJCRPath(id)
-                            + ": not allowed to modify item";
+                Path path = stateMgr.getHierarchyMgr().getPath(itemState.getId());
+                boolean isGranted = true;
+                if (itemState.isNode()) {
+                    // modified node state -> check possible modifications
+                    NodeState nState = (NodeState) itemState;
+                    for (Iterator it = nState.getAddedChildNodeEntries().iterator();
+                         it.hasNext() && isGranted;) {
+                        Name nodeName = ((NodeState.ChildNodeEntry) it.next()).getName();
+                        isGranted = accessMgr.isGranted(path, nodeName, Permission.ADD_NODE);
+                    }
+                    for (Iterator it = nState.getAddedPropertyNames().iterator();
+                         it.hasNext() && isGranted;) {
+                        Name propName = (Name) it.next();
+                        isGranted = accessMgr.isGranted(path, propName, Permission.SET_PROPERTY);
+                    }
+                } else {
+                    isGranted = accessMgr.isGranted(path, Permission.SET_PROPERTY);
+                }
+
+                if (!isGranted) {
+                    String msg = itemMgr.safeGetJCRPath(path) + ": not allowed to modify item";
-            ItemId id = itemState.getId();
+            Path path = stateMgr.getAtticAwareHierarchyMgr().getPath(itemState.getId());
-            if (!accessMgr.isGranted(id, AccessManager.REMOVE)) {
-                String msg = itemMgr.safeGetJCRPath(id)
+            int permission = (itemState.isNode()) ? Permission.REMOVE_NODE : Permission.REMOVE_PROPERTY;
+            if (!accessMgr.isGranted(path, permission)) {
+                String msg = itemMgr.safeGetJCRPath(path)

MOV26 UPD40 INS25 INS60 MOV27 INS8 UPD43 INS39 INS59 MOV60 INS60 MOV25 MOV25 UPD42 UPD42 INS32 INS42 INS16 UPD43 INS39 INS59 INS32 INS8 INS8 INS32 INS42 MOV32 INS36 INS40 INS40 UPD42 INS42 UPD42 UPD42 INS32 INS42 INS9 INS42 INS42 INS60 INS24 INS24 INS21 INS42 INS42 INS42 INS32 INS32 INS42 MOV32 INS43 INS59 INS58 INS27 INS8 INS58 INS27 INS8 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS59 INS32 INS42 INS60 INS21 INS43 INS59 INS32 INS42 INS60 INS21 INS42 INS32 UPD42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS7 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS7 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS11 INS42 INS32 UPD42 INS42 INS42 INS36 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS40 INS11 INS42 INS42 INS42 INS43 INS32 INS40 INS42 INS42 DEL8 DEL42 DEL42 DEL42 DEL40 DEL32 DEL40