JCR-1677: Allow workspace creation over cluster

Patch by Matej Knopp

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@711238 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.cluster.WorkspaceEventChannel;
+import org.apache.jackrabbit.core.cluster.WorkspaceListener;
+import org.apache.jackrabbit.core.xml.ClonedInputSource;
+import java.io.StringReader;
-        implements JackrabbitRepository, SessionListener, EventListener {
+        implements JackrabbitRepository, SessionListener, EventListener, WorkspaceListener {
+     * Chanel for posting create workspace messages.
+     */
+    private WorkspaceEventChannel createWorkspaceEventChannel;
+
+    /**
+                
+                createWorkspaceEventChannel = clusterNode;
+                clusterNode.setListener(this);
+            // needed to get newly created workspace config file content when runnin in clustered environment
+            StringBuffer workspaceConfigContent = clusterNode != null ? new StringBuffer() : null;
+
-            WorkspaceConfig config = repConfig.createWorkspaceConfig(workspaceName);
+            WorkspaceConfig config = repConfig.createWorkspaceConfig(workspaceName, workspaceConfigContent);
+            WorkspaceInfo info = createWorkspaceInfo(config);
+            wspInfos.put(workspaceName, info);
+
+            if (workspaceConfigContent != null && createWorkspaceEventChannel != null) {
+                // notify other cluster node that workspace has been created
+                InputSource s = new InputSource(new StringReader(workspaceConfigContent.toString()));
+                createWorkspaceEventChannel.workspaceCreated(workspaceName, new ClonedInputSource(s));
+            }
+        }
+    }
+
+    public void externalWorkspaceCreated(String workspaceName,
+            InputSource configTemplate) throws RepositoryException {
+
+        createWorkspaceInternal(workspaceName, configTemplate);
+    }
+
+    /**
+     * Creates a workspace with the given name and given workspace configuration
+     * template.
+     * 
+     * The difference between this method and {@link #createWorkspace(String, InputSource)}
+     * is that the later notifies the other cluster node that workspace has been created
+     * whereas this method only creates the workspace.
+     *
+     * @param workspaceName  name of the new workspace
+     * @param configTemplate the workspace configuration template of the new
+     *                       workspace
+     * @throws RepositoryException if a workspace with the given name already
+     *                             exists or if another error occurs
+     * @see SessionImpl#createWorkspace(String,InputSource)
+     */
+    private void createWorkspaceInternal(String workspaceName,
+                                   InputSource configTemplate)
+            throws RepositoryException {
+        synchronized (wspInfos) {
+            if (wspInfos.containsKey(workspaceName)) {
+                throw new RepositoryException("workspace '"
+                        + workspaceName + "' already exists.");
+            }
+
+            // create the workspace configuration
+            WorkspaceConfig config = repConfig.createWorkspaceConfig(workspaceName, configTemplate);
-
+    
-        synchronized (wspInfos) {
-            if (wspInfos.containsKey(workspaceName)) {
-                throw new RepositoryException("workspace '"
-                        + workspaceName + "' already exists.");
-            }
-            // create the workspace configuration
-            WorkspaceConfig config = repConfig.createWorkspaceConfig(workspaceName, configTemplate);
-            WorkspaceInfo info = createWorkspaceInfo(config);
-            wspInfos.put(workspaceName, info);
+        if (createWorkspaceEventChannel == null) {
+            createWorkspaceInternal(workspaceName, configTemplate);
+        }
+        else {
+        
+            ClonedInputSource template = new ClonedInputSource(configTemplate);
+            createWorkspaceInternal(workspaceName, template.cloneInputSource());
+            createWorkspaceEventChannel.workspaceCreated(workspaceName, template);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS31 INS42 INS29 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 UPD83 UPD42 MOV29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS25 INS66 INS42 INS42 INS32 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS68 INS42 INS42 INS27 INS8 INS8 INS60 INS25 INS42 INS42 INS42 INS68 INS42 INS42 INS69 INS69 INS42 INS33 INS21 INS60 INS21 INS21 INS43 INS59 INS27 INS8 INS42 INS69 INS69 INS43 INS43 INS32 INS43 INS59 INS32 INS32 INS21 INS21 INS42 INS42 INS16 INS27 INS27 INS60 INS21 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS7 INS32 INS27 INS14 INS33 INS42 INS42 INS33 INS42 INS33 INS43 INS59 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS33 INS43 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS14 INS43 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42