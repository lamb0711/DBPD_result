JCR-2111: JSR 283 Node Identifier

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774702 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.util.Text;
-    /**
-     * Subclassed need to define a PathFactory used to create IDs
-     *
-     * @return a implementation of <code>PathFactory</code>.
-     */
-    protected abstract PathFactory getPathFactory();
+    private static final char DELIMITER = '@';
+    //----------------------------------------------------------< IdFactory >---
+    /**
+     * @see IdFactory#toJcrIdentifier(NodeId)
+     */
+    public String toJcrIdentifier(NodeId nodeId) {
+        // TODO improve
+        String uniqueId = nodeId.getUniqueID();
+        Path path = nodeId.getPath();
+        if (path == null) {
+            return uniqueId;
+        } else if (uniqueId == null) {
+            return DELIMITER + path.toString();
+        } else {
+            StringBuffer bf = new StringBuffer();
+            bf.append(Text.escape(uniqueId, DELIMITER));
+            bf.append(DELIMITER);
+            bf.append(path.toString());
+            return bf.toString();
+        }
+    }
+
+    /**
+     * @see IdFactory#fromJcrIdentifier(String)
+     */
+    public NodeId fromJcrIdentifier(String jcrIdentifier) {
+        // TODO improve
+        int pos = jcrIdentifier.indexOf(DELIMITER);
+        switch (pos) {
+            case -1:
+                return createNodeId(jcrIdentifier);
+            case 0:
+                return createNodeId((String) null, getPathFactory().create(jcrIdentifier.substring(1)));
+            default:
+                String uniqueId = Text.unescape(jcrIdentifier.substring(0, pos), DELIMITER);
+                Path path = getPathFactory().create(jcrIdentifier.substring(pos+1));
+                return createNodeId(uniqueId, path);
+        }        
+    }
+
+    //--------------------------------------------------------------------------
+    /**
+     * Subclassed need to define a PathFactory used to create IDs
+     *
+     * @return a implementation of <code>PathFactory</code>.
+     */
+    protected abstract PathFactory getPathFactory();
+

INS26 MOV31 INS40 INS23 INS31 INS31 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS42 INS13 INS65 INS42 INS43 INS42 INS60 INS60 INS25 INS65 INS42 INS43 INS42 INS60 INS50 INS68 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS68 INS42 INS39 INS59 INS42 INS49 INS41 INS49 INS41 INS49 INS60 INS60 INS41 INS42 INS42 INS69 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS41 INS27 INS8 INS8 INS42 INS42 INS69 INS42 INS32 INS38 INS32 INS34 INS32 INS43 INS59 INS43 INS59 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS41 INS60 INS21 INS21 INS21 INS41 INS43 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS11 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS43 INS33 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42