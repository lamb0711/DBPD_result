JCR-1438: Replace Config classes with factories 

Replaced FileSystemConfig with FileSystemFactory.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@688207 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.fs.FileSystemFactory;
+import javax.jcr.RepositoryException;
-public class RepositoryConfig {
+public class RepositoryConfig implements FileSystemFactory {
-     * Repository file system configuration.
+     * Repository file system factory.
-    private final FileSystemConfig fsc;
+    private final FileSystemFactory fsf;
-     * @param fsc file system configuration
+     * @param fsf file system factory
-    public RepositoryConfig(String home, SecurityConfig sec, FileSystemConfig fsc,
+    public RepositoryConfig(
+            String home, SecurityConfig sec, FileSystemFactory fsf,
-        this.fsc = fsc;
+        this.fsf = fsf;
-            // a configuration directoy had been specified; search for
+            // a configuration directory had been specified; search for
-            FileSystem fs = fsc.createFileSystem();
-                if (!fs.exists(workspaceConfigDirectory)) {
-                    fs.createFolder(workspaceConfigDirectory);
-                } else {
-                    String[] dirNames = fs.listFolders(workspaceConfigDirectory);
-                    for (int i = 0; i < dirNames.length; i++) {
-                        String configDir = workspaceConfigDirectory
-                                + FileSystem.SEPARATOR + dirNames[i];
-                        WorkspaceConfig wc = loadWorkspaceConfig(fs, configDir);
-                        if (wc != null) {
-                            addWorkspaceConfig(wc);
+                FileSystem fs = fsf.getFileSystem();
+                try {
+                    if (!fs.exists(workspaceConfigDirectory)) {
+                        fs.createFolder(workspaceConfigDirectory);
+                    } else {
+                        String[] dirNames = fs.listFolders(workspaceConfigDirectory);
+                        for (int i = 0; i < dirNames.length; i++) {
+                            String configDir = workspaceConfigDirectory
+                            + FileSystem.SEPARATOR + dirNames[i];
+                            WorkspaceConfig wc = loadWorkspaceConfig(fs, configDir);
+                            if (wc != null) {
+                                addWorkspaceConfig(wc);
+                            }
-                    }
+                    }
+                } finally {
+                    fs.close();
-            } catch (FileSystemException e) {
+            } catch (Exception e) {
-            } finally {
-                try {
-                    fs.close();
-                } catch (FileSystemException ignore) {
-                }
-            virtualFS = fsc.createFileSystem();
+            try {
+                virtualFS = fsf.getFileSystem();
+            } catch (RepositoryException e) {
+                throw new ConfigurationException("File system configuration error", e);
+            }
-     * Returns the repository file system configuration.
+     * Creates and returns the configured repository file system.
-     * @return file system configuration
+     * @return the configured {@link FileSystem}
+     * @throws RepositoryException if the file system can not be created
-    public FileSystemConfig getFileSystemConfig() {
-        return fsc;
+    public FileSystem getFileSystem() throws RepositoryException {
+        return fsf.getFileSystem();

INS26 INS26 INS40 INS40 INS43 INS42 UPD43 UPD43 UPD42 INS43 UPD42 UPD42 UPD43 UPD42 INS65 UPD42 INS42 UPD66 UPD42 UPD66 UPD42 INS8 UPD66 UPD66 INS65 INS42 INS66 INS32 UPD42 MOV12 INS54 INS42 INS42 INS42 UPD42 INS8 INS12 INS60 INS54 MOV21 INS44 INS8 MOV43 INS59 MOV8 MOV8 UPD43 INS43 INS42 INS53 INS42 INS32 UPD42 INS42 INS14 INS42 INS42 UPD42 UPD42 INS43 INS45 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL42