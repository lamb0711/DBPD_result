JCR-54: Switched from JDOM to standard DOM in Jackrabbit configuration handling.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@160449 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-import org.jdom.Document;
-import org.jdom.Element;
-import org.jdom.JDOMException;
-import org.jdom.input.SAXBuilder;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+import org.xml.sax.SAXException;
-        Element element = parent.getChild(SEARCH_INDEX_ELEMENT);
-        if (element != null) {
-            // Search implementation class
-            String className =
-                getAttribute(element, CLASS_ATTRIBUTE, DEFAULT_QUERY_HANDLER);
+        NodeList children = parent.getChildNodes();
+        for (int i = 0; i < children.getLength(); i++) {
+            Node child = children.item(i);
+            if (child.getNodeType() == Node.ELEMENT_NODE
+                    && SEARCH_INDEX_ELEMENT.equals(child.getNodeName())) {
+                Element element = (Element) child;
-            // Search parameters
-            Properties parameters = parseParameters(element);
+                // Search implementation class
+                String className = getAttribute(
+                        element, CLASS_ATTRIBUTE, DEFAULT_QUERY_HANDLER);
-            // File system implementation
-            FileSystemConfig fsc = new FileSystemConfig(
-                    parseBeanConfig(element, FILE_SYSTEM_ELEMENT));
+                // Search parameters
+                Properties parameters = parseParameters(element);
-            return new SearchConfig(className, parameters, fsc);
-        } else {
-            return null;
+                // File system implementation
+                FileSystemConfig fsc = new FileSystemConfig(
+                        parseBeanConfig(element, FILE_SYSTEM_ELEMENT));
+
+                return new SearchConfig(className, parameters, fsc);
+            }
+        return null;
-        Iterator iterator = element.getChildren(PARAM_ELEMENT).iterator();
-        while (iterator.hasNext()) {
-            Element parameter = (Element) iterator.next();
-            String name = parameter.getAttributeValue(NAME_ATTRIBUTE);
-            if (name == null) {
-                throw new ConfigurationException("Parameter name not set.");
+        NodeList children = element.getChildNodes();
+        for (int i = 0; i < children.getLength(); i++) {
+            Node child = children.item(i);
+            if (child.getNodeType() == Node.ELEMENT_NODE
+                    && PARAM_ELEMENT.equals(child.getNodeName())) {
+                Element parameter = (Element) child;
+                String name = parameter.getAttribute(NAME_ATTRIBUTE);
+                if (name == null) {
+                    throw new ConfigurationException("Parameter name not set");
+                }
+                String value = parameter.getAttribute(VALUE_ATTRIBUTE);
+                if (value == null) {
+                    throw new ConfigurationException("Parameter value not set");
+                }
+                parameters.put(name, replaceVariables(value));
-            String value = parameter.getAttributeValue(VALUE_ATTRIBUTE);
-            if (value == null) {
-                throw new ConfigurationException("Parameter value not set.");
-            }
-            parameters.put(name, replaceVariables(value));
-            SAXBuilder builder = new SAXBuilder();
+            DocumentBuilderFactory factory =
+                DocumentBuilderFactory.newInstance();
+            DocumentBuilder builder = factory.newDocumentBuilder();
-            Document document = builder.build(xml);
-            return document.getRootElement();
-        } catch (JDOMException e) {
+            Document document = builder.parse(xml);
+            return document.getDocumentElement();
+        } catch (ParserConfigurationException e) {
+            throw new ConfigurationException(
+                    "Unable to create configuration XML parser", e);
+        } catch (SAXException e) {
-        Element element = parent.getChild(name);
-        if (element != null) {
-            return element;
-        } else {
-            throw new ConfigurationException(
-                    "Configuration element " + name + " not found in "
-                    + parent.getName() + ".");
+        NodeList children = parent.getChildNodes();
+        for (int i = 0; i < children.getLength(); i++) {
+            Node child = children.item(i);
+            if (child.getNodeType() == Node.ELEMENT_NODE
+                    && name.equals(child.getNodeName())) {
+                return (Element) child;
+            }
+        throw new ConfigurationException(
+                "Configuration element " + name + " not found in "
+                + parent.getNodeName() + ".");
-        String value = element.getAttributeValue(name);
+        String value = element.getAttribute(name);
-                    + element.getName() + ".");
+                    + element.getNodeName() + ".");
-        String value = element.getAttributeValue(name);
+        String value = element.getAttribute(name);

MOV26 INS26 INS26 INS26 UPD40 INS40 INS40 UPD40 UPD40 UPD40 UPD40 INS40 INS8 INS8 INS60 INS24 MOV41 MOV60 INS60 INS24 MOV41 INS24 MOV53 INS43 INS59 INS58 INS27 INS37 MOV8 INS43 INS59 INS58 INS27 INS37 MOV8 INS12 INS43 INS58 INS27 INS37 INS8 MOV43 MOV43 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS25 INS60 INS44 INS8 INS42 UPD42 INS39 INS59 INS42 INS32 INS42 INS60 INS25 MOV43 INS42 INS42 INS42 INS34 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS34 INS42 INS42 UPD43 INS27 MOV8 MOV25 MOV60 INS43 INS59 UPD43 INS43 INS42 INS53 UPD43 UPD42 INS42 INS34 INS42 INS42 INS43 INS59 INS27 MOV8 UPD42 UPD42 INS42 UPD42 INS27 INS32 INS60 UPD42 UPD42 INS27 INS32 INS42 INS42 INS32 UPD42 INS32 UPD42 INS42 INS14 UPD42 INS42 INS42 INS32 INS27 INS32 UPD42 INS43 UPD42 UPD42 UPD42 INS32 INS40 INS42 INS42 INS32 MOV43 INS59 UPD42 MOV42 UPD42 MOV42 UPD42 INS32 INS40 INS42 INS42 INS32 MOV43 MOV43 MOV27 MOV43 MOV27 INS42 INS42 INS42 INS42 UPD42 MOV43 INS45 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS32 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS11 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 UPD42 INS43 INS42 MOV43 INS42 UPD42 UPD42 INS42 UPD45 UPD45 DEL42 DEL33 DEL27 DEL8 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL61 DEL42 DEL43 DEL14 DEL42 DEL42 DEL42 DEL33 DEL27 DEL8 DEL25