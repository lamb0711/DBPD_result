JCR-1745: Mark pending nodes in IndexingQueue directly in index

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@697873 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.lucene.index.Term;
+import org.apache.lucene.index.TermDocs;
+     * @throws IOException if an error occurs while reading from the index.
-    void initialize(MultiIndex index) {
+    void initialize(MultiIndex index) throws IOException {
+        // check index for nodes that need to be reindexed
+        CachingMultiIndexReader reader = index.getIndexReader();
+        try {
+            TermDocs tDocs = reader.termDocs(
+                    new Term(FieldNames.REINDEXING_REQUIRED, ""));
+            try {
+                while (tDocs.next()) {
+                    queueStore.addUUID(reader.document(tDocs.doc(),
+                            FieldSelectors.UUID).get(FieldNames.UUID));
+                }
+            } finally {
+                tDocs.close();
+            }
+        } finally {
+            reader.release();
+        }
+                log.debug("added node {}. New size of indexing queue: {}",
+                        uuid, new Integer(pendingDocuments.size()));
-                try {
-                    queueStore.removeUUID(uuids[i]);
-                } catch (IOException ex) {
-                    log.warn("Unable to remove node {} from indexing queue",
-                            uuids[i], ex);
-                }
+                queueStore.removeUUID(uuids[i]);
-     * @throws IOException if an error occurs removing the document from the
-     *                     queue.
-    public synchronized Document removeDocument(String uuid) throws IOException {
+    public synchronized Document removeDocument(String uuid) {
-     * @throws IOException an error occurs while adding the document to this
-     *                     queue.
-    public synchronized Document addDocument(Document doc) throws IOException {
+    public synchronized Document addDocument(Document doc) {
-     *
-     * @throws IOException if an error occurs while closing this queue.
-    public synchronized void close() throws IOException {
+    public synchronized void close() {
-     * Commits any pending changes to this queue store to disk.
-     *
-     * @throws IOException if an error occurs while writing pending changes to
-     *                     disk.
-     */
-    public synchronized void commit() throws IOException {
-        checkInitialized();
-        queueStore.commit();
-    }
-
-    /**
+
+    //----------------------------< testing only >------------------------------
+
+    /**
+     * <b>This method is for testing only!</b>
+     *
+     * @return the number of the currently pending documents.
+     */
+    synchronized int getNumPendingDocuments() {
+        return pendingDocuments.size();
+    }

INS26 INS26 MOV31 INS40 INS40 MOV43 UPD39 UPD42 INS65 INS60 INS54 UPD65 INS41 INS42 INS66 INS43 INS59 INS8 INS8 UPD66 UPD66 INS32 INS42 INS42 INS32 INS60 INS54 INS21 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS43 INS59 INS8 INS8 INS32 INS42 INS42 INS32 INS61 INS21 INS42 INS42 INS21 MOV8 INS42 INS42 INS14 INS32 INS8 INS32 INS32 MOV21 INS43 INS40 INS45 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS45 INS42 INS14 INS42 INS32 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS32 INS40 INS42 INS42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL2 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL42 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL66 DEL65 DEL42 DEL66 DEL83 DEL42 DEL43 DEL42 DEL32 DEL21 DEL32 DEL21