- improved versioning

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@122838 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.QName;
-
-import javax.jcr.RepositoryException;
+import javax.jcr.version.VersionException;
- * This Class represents a frozen versionable child node, that was created
+ * This interface defines a frozen versionable child node, that was created
-public class InternalFrozenVersionHistory extends InternalFreeze {
+public interface InternalFrozenVersionHistory extends InternalFreeze {
-     * the underlaying persistence node
-     */
-    private PersistentNode node;
-
-    /**
-     * Creates a new frozen version history.
+     * Returns the id of the version history that was assigned to the node at
+     * the time it was versioned.
-     * @param node
+     * @return the id of the version history
-    protected InternalFrozenVersionHistory(InternalFreeze parent, PersistentNode node) {
-        super(parent);
-        this.node = node;
-    }
+    public String getVersionHistoryId();
-     * Returns the name of this frozen version history
+     * Returns the version history that was assigned to the node at
+     * the time it was versioned.
-     * @return
-     */
-    public QName getName() {
-        return node.getName();
-    }
-
-    /**
-     * Returns the version history that was versioned with this node.
-     *
-     * @return
-     * @throws RepositoryException
-     */
-    public String getVersionHistoryId()
-            throws RepositoryException {
-        return (String) node.getPropertyValue(VersionManager.PROPNAME_VERSION_HISTORY).internalValue();
-    }
-
-    /**
-     * Returns the version history that was versioned with this node.
-     *
-     * @return
-     * @throws RepositoryException
+     * @return the internal version history.
+     * @throws VersionException if the history cannot be retrieved.
-            throws RepositoryException {
-        return getVersionManager().getVersionHistory(getVersionHistoryId());
-    }
+            throws VersionException;
-    public String getBaseVersionId() throws RepositoryException {
-        return (String) node.getPropertyValue(VersionManager.PROPNAME_BASE_VERSION).internalValue();
-    }
+    /**
+     * Returns the id of the base version that was assigned to the node at
+     * the time it was versioned.
+     *
+     * @return the id of the base version
+     */
+    public String getBaseVersionId();
-    public InternalVersion getBaseVesion()
-            throws RepositoryException {
-        return getVersionManager().getVersion(getVersionHistoryId(), getBaseVersionId());
-    }
+    /**
+     * Returns the base version that was assigned to the node at
+     * the time it was versioned.
+     *
+     * @return the inernal base version
+     * @throws VersionException if the version could not be retrieved
+     */
+    public InternalVersion getBaseVesion() throws VersionException;

UPD40 INS31 MOV43 UPD42 MOV43 UPD42 UPD43 MOV43 INS42 INS29 MOV83 MOV43 MOV42 UPD43 MOV43 UPD66 UPD42 INS65 INS65 INS65 UPD42 UPD66 INS66 INS66 UPD66 INS66 INS66 UPD42 INS66 UPD66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL42 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL46 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL11 DEL41 DEL8 DEL42 DEL65 DEL42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL83 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL11 DEL41 DEL8 DEL31 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31