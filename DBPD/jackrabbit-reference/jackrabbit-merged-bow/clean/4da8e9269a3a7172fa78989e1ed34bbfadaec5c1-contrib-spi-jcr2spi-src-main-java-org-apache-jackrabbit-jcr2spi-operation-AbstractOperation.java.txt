work in progress

- operations: rename getAffectedIds to getAffectedStates
- operations: return ItemState params instead of ids whereever possible and
  let OperationVisitor deal with all kind of issues arising with SPI ids.
- AddNode/AddProperty operations: don't list state to be created as affected. Not required since operations are collected upon refresh/save, in which case a 'new' item can never be the starting point.
- transient move: let parent NodeState handle the move/renaming of child states
- transient reorder: let parent NodeState handle the reorder logic
- NodeState: remove unused methods and mark setParent private
- NodeImpl: protected getNodeId() no more used by subclasses in version package.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431887 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.ItemId;
-import org.apache.jackrabbit.spi.NodeId;
+import org.apache.jackrabbit.jcr2spi.state.NodeState;
-    private final Collection affectedIds = new ArrayList();
+    private final Collection affectedStates = new ArrayList();
-    public Collection getAffectedItemIds() {
-        return Collections.unmodifiableCollection(affectedIds);
+    public Collection getAffectedItemStates() {
+        return Collections.unmodifiableCollection(affectedStates);
-     * Adds an affected <code>ItemId</code>.
+     * Adds an affected <code>ItemState</code>.
-     * @param affectedId the <code>ItemId</code>s of the affected item.
+     * @param affectedState the <code>ItemState</code>s of the affected item.
-    protected void addAffectedItemId(ItemId affectedId) {
-        affectedIds.add(affectedId);
+    protected void addAffectedItemState(ItemState affectedState) {
+        affectedStates.add(affectedState);
-    protected static NodeId getNodeId(Path nodePath, HierarchyManager hierMgr, NamespaceResolver nsResolver) throws PathNotFoundException, RepositoryException {
+    protected static NodeState getNodeState(Path nodePath, HierarchyManager hierMgr, NamespaceResolver nsResolver) throws PathNotFoundException, RepositoryException {
-        return (NodeId)itemState.getId();
+        return (NodeState) itemState;

MOV26 UPD40 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD66 UPD42 UPD66 UPD42 UPD42 UPD42 UPD42 UPD43 INS42 UPD42 DEL40 DEL26 DEL42 DEL42 DEL32