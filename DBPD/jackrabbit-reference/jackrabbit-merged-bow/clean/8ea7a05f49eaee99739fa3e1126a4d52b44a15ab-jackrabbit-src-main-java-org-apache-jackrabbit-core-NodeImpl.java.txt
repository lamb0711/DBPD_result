JCR-469: Problem with child order after restoring of parent


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@416629 13f79535-47bb-0310-9956-ffa450edef68

+        // the absense of an index does not make sense here, so check
+        if (index <= 0) {
+            index = 1;
+        }
+
-        // check state of this instance
-        sanityCheck();
-
-        if (!getPrimaryNodeType().hasOrderableChildNodes()) {
-            throw new UnsupportedRepositoryOperationException("child node ordering not supported on node " + safeGetJCRPath());
-        }
-
-        // check arguments
-        if (srcName.equals(destName)) {
-            // there's nothing to do
-            return;
-        }
+        orderBefore(insertName, beforeName);
+    }
+
+    /**
+     * {@inheritDoc}
+     * @param srcName
+     * @param dstName
+     */
+    public synchronized void orderBefore(Path.PathElement srcName,
+                                         Path.PathElement dstName)
+            throws UnsupportedRepositoryOperationException, VersionException,
+            ConstraintViolationException, ItemNotFoundException, LockException,
+            RepositoryException {
+
+        // check state of this instance
+        sanityCheck();
+
+        if (!getPrimaryNodeType().hasOrderableChildNodes()) {
+            throw new UnsupportedRepositoryOperationException("child node ordering not supported on node " + safeGetJCRPath());
+        }
+
+        // check arguments
+        if (srcName.equals(dstName)) {
+            // there's nothing to do
+            return;
+        }
-        if (!hasNode(srcName)) {
+        if (!hasNode(srcName.getName(), srcName.getIndex())) {
-        if (destName != null && !hasNode(destName)) {
+        if (dstName != null && !hasNode(dstName.getName(), dstName.getIndex())) {
-                    + " has no child node with name " + destName);
+                    + " has no child node with name " + dstName);
-                if (entry.getName().equals(insertName.getName())
-                        && (entry.getIndex() == insertName.getIndex()
-                        || insertName.getIndex() == 0 && entry.getIndex() == 1)) {
+                if (entry.getName().equals(srcName.getName())
+                        && (entry.getIndex() == srcName.getIndex()
+                        || srcName.getIndex() == 0 && entry.getIndex() == 1)) {
-            if (destInd == -1 && beforeName != null) {
-                if (entry.getName().equals(beforeName.getName())
-                        && (entry.getIndex() == beforeName.getIndex()
-                        || beforeName.getIndex() == 0 && entry.getIndex() == 1)) {
+            if (destInd == -1 && dstName != null) {
+                if (entry.getName().equals(dstName.getName())
+                        && (entry.getIndex() == dstName.getIndex()
+                        || dstName.getIndex() == 0 && entry.getIndex() == 1)) {
+            NodeImpl restoredChild = null;
-                NodeImpl n = addNode(f.getName(), f);
-                n.restoreFrozenState(f, vsel, restored, removeExisting);
+                restoredChild = addNode(f.getName(), f);
+                restoredChild.restoreFrozenState(f, vsel, restored, removeExisting);
-                NodeImpl node;
-                    node = addNode(child.getName(), v.getFrozenNode());
+                    restoredChild = addNode(child.getName(), v.getFrozenNode());
-                    node = session.getNodeById(nodeId);
+                    restoredChild = session.getNodeById(nodeId);
-                        node.internalRestore(v, vsel, removeExisting);
+                        restoredChild.internalRestore(v, vsel, removeExisting);
-                        log.error("  child path: " + node.safeGetJCRPath());
+                        log.error("  child path: " + restoredChild.safeGetJCRPath());
+            // ensure proper odering (issue JCR-469)
+            if (restoredChild != null
+                    && getPrimaryNodeType().hasOrderableChildNodes()) {
+                orderBefore(restoredChild.getPrimaryPath().getNameElement(), null);
+            }

INS31 MOV29 INS83 INS83 INS39 INS42 MOV44 MOV44 INS43 INS43 INS43 INS43 INS43 INS43 INS8 INS29 INS44 INS44 INS25 INS42 INS42 INS42 INS42 INS42 INS42 MOV60 MOV54 MOV60 MOV25 INS21 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS27 INS8 INS32 INS65 INS42 INS42 INS40 INS40 MOV25 INS42 INS34 INS21 INS42 INS42 INS42 UPD42 INS60 INS25 INS7 INS32 INS32 UPD42 MOV27 INS27 MOV8 MOV43 INS59 INS27 INS8 INS42 INS34 MOV42 INS42 INS42 INS42 INS32 INS32 MOV27 INS27 INS42 INS33 INS21 INS27 INS32 INS21 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV8 INS42 INS33 MOV8 INS7 INS42 INS33 INS32 INS42 INS32 INS42 MOV32 UPD42 INS42 INS42 INS32 INS33 INS32 INS42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL33 DEL27 DEL27 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60