- ImportHandler & specialized friends now rely on default SAX2 Namespace support
- Doc/SysViewImportHandler are now processing ignorableWhitespace events

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@160189 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.IllegalNameException;
-import org.apache.jackrabbit.core.UnknownPrefixException;
+import java.io.IOException;
-            QName nodeName;
-            if (namespaceURI != null && !"".equals(namespaceURI)) {
-                nodeName = new QName(namespaceURI, localName);
-            } else {
-                try {
-                    nodeName = QName.fromJCRName(qName, nsContext);
-                } catch (IllegalNameException ine) {
-                    throw new SAXException("illegal node name: " + qName, ine);
-                } catch (UnknownPrefixException upe) {
-                    throw new SAXException("illegal node name: " + qName, upe);
-                }
-            }
+            QName nodeName = new QName(namespaceURI, localName);
-                QName propName;
-                if (atts.getURI(i) != null && !"".equals(atts.getURI(i))) {
-                    propName = new QName(atts.getURI(i), atts.getLocalName(i));
-                } else {
-                    try {
-                        propName = QName.fromJCRName(atts.getQName(i), nsContext);
-                    } catch (IllegalNameException ine) {
-                        throw new SAXException("illegal property name: "
-                                + atts.getQName(i), ine);
-                    } catch (UnknownPrefixException upe) {
-                        throw new SAXException("illegal property name: "
-                                + atts.getQName(i), upe);
-                    }
-                }
+                QName propName = new QName(atts.getURI(i), atts.getLocalName(i));
+    public void ignorableWhitespace(char ch[], int start, int length)
+            throws SAXException {
+        /**
+         * buffer data reported by the ignorableWhitespace event;
+         * will be processed in endElement and startElement method
+         */
+        if (textHandler == null) {
+            textHandler = new StringBufferValue();
+        }
+        textHandler.append(ch, start, length);
+    }
+
+    /**
+     * {@inheritDoc}
+     */

MOV26 UPD40 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS44 MOV43 INS8 INS65 INS39 INS42 INS85 INS39 INS42 INS39 INS42 INS25 INS21 INS65 INS27 INS8 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS7 MOV14 INS42 INS14 INS43 MOV14 INS42 DEL40 DEL26 DEL42 DEL33 DEL27 DEL45 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL45 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL27 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25