JCR-2713 -  UserManagement: Don't read cached memberships if session has pending (group) changes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@984830 13f79535-47bb-0310-9956-ffa450edef68

-    //------------------------------------------------------------< private >---
+    /**
+     * Collects the declared memberships for the specified identifier of an
+     * authorizable using the specified session.
+     * 
+     * @param authorizableNodeIdentifier
+     * @param session
+     * @return
+     * @throws RepositoryException
+     */
+    Collection<String> collectDeclaredMembership(String authorizableNodeIdentifier, Session session) throws RepositoryException {
+        Collection<String> groupNodeIds = collectDeclaredMembershipFromReferences(authorizableNodeIdentifier, session);
+        if (groupNodeIds == null) {
+            groupNodeIds = collectDeclaredMembershipFromTraversal(authorizableNodeIdentifier, session);
+        }
+        return groupNodeIds;
+    }
+     * Collects the complete memberships for the specified identifier of an
+     * authorizable using the specified session.
+     *
+     * @param authorizableNodeIdentifier
+     * @param session
+     * @return
+     * @throws RepositoryException
+     */
+    Collection<String> collectMembership(String authorizableNodeIdentifier, Session session) throws RepositoryException {
+        Set<String> groupNodeIds = new HashSet<String>();
+        memberOf(authorizableNodeIdentifier, groupNodeIds, session);
+        return groupNodeIds;
+    }
+
+    //------------------------------------------------------------< private >---
+    /**
-                groupNodeIds = collectDeclaredMembershipFromReferences(authorizableNodeIdentifier, session);
-                if (groupNodeIds == null) {
-                    groupNodeIds = collectDeclaredMembershipFromTraversal(authorizableNodeIdentifier, session);
-                }
+                groupNodeIds = collectDeclaredMembership(authorizableNodeIdentifier, session);
+    /**
+     * 
+     * @param authorizableNodeIdentifier
+     * @param groupNodeIds
+     * @throws RepositoryException
+     */
+    /**
+     * 
+     * @param authorizableNodeIdentifier
+     * @param groupNodeIds
+     * @param session
+     * @throws RepositoryException
+     */
+    private void memberOf(String authorizableNodeIdentifier, Collection<String> groupNodeIds, Session session) throws RepositoryException {
+        Collection<String> declared = collectDeclaredMembership(authorizableNodeIdentifier, session);
+        for (String identifier : declared) {
+            if (groupNodeIds.add(identifier)) {
+                memberOf(identifier, groupNodeIds, session);
+            }
+        }
+    }
+
+    /**
+     * 
+     * @param authorizableNodeIdentifier
+     * @param session
+     * @return
+     * @throws RepositoryException
+     */
-

INS31 INS31 INS31 INS29 INS74 INS42 INS44 INS44 INS43 MOV8 INS29 INS74 INS42 INS44 INS44 INS43 INS8 INS29 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS43 INS42 INS42 INS60 INS41 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS74 INS42 INS43 INS42 INS42 INS60 INS70 INS65 INS65 INS65 INS65 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS43 INS43 INS42 MOV32 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS42 INS42 INS42 INS42 INS74 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS43 INS43 INS21 MOV21 INS42 INS42 INS42 INS21 INS42 INS42 INS7 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL7 DEL21