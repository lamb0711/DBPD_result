applying patch from angela, fixing:

[JCR-122] cannot PUT changes to a resource in the simple webdav server
[JCR-123] Webdav: Error when accessing Simple-Server
[JCR-126] Jcr-Server Module: Remove Dependency from Jackrabbit-Core


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@180346 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.util.Text;
-import org.apache.jackrabbit.JcrConstants;
-import org.apache.commons.chain.Context;
-import org.apache.commons.chain.Command;
+import org.apache.jackrabbit.util.Text;
-import javax.jcr.RepositoryException;
-public class ZIPImportCommand implements Command, JcrConstants {
+public class ZIPImportCommand extends AbstractCommand {
+     * flag, indicating if zip should be extracted recusively
+     */
+    private boolean recursive = false;
+            
+    /**
-    public boolean execute(Context context) throws Exception {
+    public boolean execute(AbstractContext context) throws Exception {
-     * Executes this command. It checks if this command can handle the content
-     * type and delegates it to {@link #importResource}. If the import is
-     * successfull, the input stream of the importcontext is cleared.
-     *
-     * @param context the import context
-     * @return false
-     * @throws Exception if an error occurrs
+     * Override default behaviour and abort chain if input is processed.
+     * @param context
+     * @return
+     * @throws Exception
+        if (!canHandle(context.getContentType())) {
+            // ignore imports
+            return false;
+        }
+        // disable this command for further subcommands if recursive is false
+        context.enableCommand(getId(), recursive);
+
-        if (!canHandle(context.getContentType())) {
-            // ignore imports
-            return false;
+        if (importResource(context, parentNode, in)) {
+            context.setInputStream(null);
+            return true;
-        importResource(parentNode, in);
-        context.setInputStream(null);
-        return true;
+        return false;
-    private void importResource(Node parentNode, InputStream in)
+
+    public boolean importResource(ImportContext context, Node parentNode, InputStream in)
-                mkDirs(parentNode, Text.makeValidJCRPath(entry.getName()));
+                AbstractImportCommand.mkDirs(context, parentNode, Text.makeValidJCRPath(entry.getName()));
-                Node parent = mkDirs(parentNode, Text.getRelativeParent(path, 1));
+                Node parent = AbstractImportCommand.mkDirs(context, parentNode, Text.getRelativeParent(path, 1));
-                ImportContext subctx = new ImportContext(parent);
+                ImportContext subctx = context.createSubContext(parent);
-    }
-
-    /**
-     * Creates collection recursively.
-     *
-     * @param root
-     * @param relPath
-     * @return
-     * @throws RepositoryException
-     */
-    private Node mkDirs(Node root, String relPath) throws RepositoryException {
-        String[] seg = Text.explode(relPath, '/');
-        for (int i=0; i< seg.length; i++) {
-            if (!root.hasNode(seg[i])) {
-                // not quite correct
-                ImportContext subctx = new ImportContext(root);
-                subctx.setSystemId(seg[i]);
-                try {
-                    ImportCollectionChain.getChain().execute(subctx);
-                } catch (Exception e) {
-                    throw new RepositoryException(e);
-                }
-            }
-            root = root.getNode(seg[i]);
-        }
-        return root;
+        return true;
+
+    /**
+     * Sets if the zips should be extracted again
+     * @param recursive
+     */
+    public void setRecursive(boolean recursive) {
+        this.recursive = recursive;
+    }

MOV31 UPD40 UPD43 INS23 UPD42 INS29 INS83 INS39 INS59 MOV25 UPD83 UPD39 INS44 UPD83 INS39 INS42 INS44 INS8 INS65 INS42 INS9 UPD43 INS21 INS25 INS41 INS43 INS42 INS41 INS39 UPD42 MOV42 MOV21 INS66 UPD42 UPD66 INS32 INS32 INS8 INS9 INS42 INS9 UPD66 UPD42 INS42 INS42 INS32 INS42 MOV42 INS42 MOV42 MOV42 MOV21 MOV41 INS22 INS42 INS42 INS52 INS42 MOV43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL66 DEL66 DEL42 DEL67 DEL65 DEL66 DEL66 DEL66 DEL66 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL42 DEL65 DEL65 DEL42 DEL65 DEL42 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL13 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL24 DEL42 DEL41 DEL8