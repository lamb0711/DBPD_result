JCR-4157: jackrabbit-jcr-server: code cleanup

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1800752 13f79535-47bb-0310-9956-ffa450edef68

-            
+
-        new JsonParser(hndlr).parse("{\"a\":"+diffValue+"}");
-        
+        new JsonParser(hndlr).parse("{\"a\":" + diffValue + "}");
+
-        	ImportNode n;
-        	if (st.isEmpty()) {
-        		try {
-            		n = new ImportNode(parent.getPath(), key);        			
-        		} catch (RepositoryException e) {
-        			throw new DiffException(e.getMessage(), e);
-        		}
+            ImportNode n;
+            if (st.isEmpty()) {
+                try {
+                    n = new ImportNode(parent.getPath(), key);
+                } catch (RepositoryException e) {
+                    throw new DiffException(e.getMessage(), e);
+                }
-        	} else {
-        		ImportItem obj = st.peek();
-                n = new ImportNode(obj.getPath(), key);                                                    
-                if (obj instanceof ImportNode) {                        
-                	((ImportNode) obj).addNode(n);                    
-                } else {                
-                	throw new DiffException("Invalid DIFF format: The JSONArray may only contain simple values.");                    
-                }        		
-        	}
+            } else {
+                ImportItem obj = st.peek();
+                n = new ImportNode(obj.getPath(), key);
+                if (obj instanceof ImportNode) {
+                    ((ImportNode) obj).addNode(n);
+                } else {
+                    throw new DiffException("Invalid DIFF format: The JSONArray may only contain simple values.");
+                }
+            }
-                
+
-        
+
-        
+
-        	return path;
+            return path;
-        
+
-        }        
-        
+        }
+
-            		this.value = extractValuesFromRequest(getPath())[0];
-            	} else {
-            		this.value = value;
-            	}                        	
+                    this.value = extractValuesFromRequest(getPath())[0];
+                } else {
+                    this.value = value;
+                }
-            	throw new DiffException(e.getMessage(), e);
+                throw new DiffException(e.getMessage(), e);
-            try {            	
+            try {
-                contentHandler.startElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX+":"+VALUE, new AttributesImpl());
+                contentHandler.startElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX + ":" + VALUE, new AttributesImpl());
-                contentHandler.endElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX+":"+VALUE);
-            } catch(SAXException e) {
+                contentHandler.endElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX + ":" + VALUE);
+            } catch (SAXException e) {
-            	// Multi-valued property with values present in the request multi-part             	
-            	if (values.size() == 0) {            	
-            		values = Arrays.asList(extractValuesFromRequest(getPath()));            	   
-            	}
-            	
+                // Multi-valued property with values present in the request
+                // multi-part
+                if (values.size() == 0) {
+                    values = Arrays.asList(extractValuesFromRequest(getPath()));
+                }
+
-                    contentHandler.startElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX+":"+VALUE, new AttributesImpl());
+                    contentHandler.startElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX + ":" + VALUE, new AttributesImpl());
-                    contentHandler.endElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX+":"+VALUE);
+                    contentHandler.endElement(Name.NS_SV_URI, VALUE, Name.NS_SV_PREFIX + ":" + VALUE);
-            } catch(SAXException e) {
+            } catch (SAXException e) {

