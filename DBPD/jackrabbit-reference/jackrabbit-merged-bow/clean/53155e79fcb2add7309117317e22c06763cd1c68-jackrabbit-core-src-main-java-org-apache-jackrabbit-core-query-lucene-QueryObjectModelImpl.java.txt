JCR-2076: JSR 283: Joins
- columns

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@781369 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+import java.util.ArrayList;
+
+import javax.jcr.nodetype.PropertyDefinition;
+import javax.jcr.query.qom.QueryObjectModelFactory;
+import org.apache.jackrabbit.core.nodetype.NodeTypeManagerImpl;
+import org.apache.jackrabbit.core.nodetype.NodeTypeImpl;
+import org.apache.jackrabbit.core.nodetype.PropertyDefinitionImpl;
-import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.commons.query.qom.SelectorImpl;
-        ColumnImpl[] columns = qomTree.getColumns();
-        Name[] selectProps = new Name[columns.length];
-        for (int i = 0; i < columns.length; i++) {
-            selectProps[i] = columns[i].getPropertyQName();
+        List<ColumnImpl> columns = new ArrayList<ColumnImpl>();
+        // expand columns without name
+        for (ColumnImpl column : qomTree.getColumns()) {
+            if (column.getColumnName() == null) {
+                QueryObjectModelFactory qomFactory = session.getWorkspace().getQueryManager().getQOMFactory();
+                NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+                SelectorImpl selector = qomTree.getSelector(column.getSelectorQName());
+                NodeTypeImpl nt = ntMgr.getNodeType(selector.getNodeTypeQName());
+                for (PropertyDefinition pd : nt.getPropertyDefinitions()) {
+                    PropertyDefinitionImpl propDef = (PropertyDefinitionImpl) pd;
+                    if (!propDef.definesResidual() && !propDef.isMultiple()) {
+                        String sn = selector.getSelectorName();
+                        String pn = propDef.getName();
+                        columns.add((ColumnImpl) qomFactory.column(sn, pn, sn + "." + pn));
+                    }
+                }
+            } else {
+                columns.add(column);
+            }
-                this, query, null, selectProps, orderProps, orderSpecs,
+                this, query, null, columns.toArray(new ColumnImpl[columns.size()]),
+                orderProps, orderSpecs,

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS70 INS74 INS44 MOV32 INS8 INS43 INS43 INS14 INS43 INS42 INS25 INS32 INS42 INS42 INS74 INS42 INS27 INS8 INS8 INS42 INS42 INS3 INS43 INS43 INS32 INS33 INS60 INS60 INS60 MOV60 INS70 INS21 MOV5 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS44 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 INS43 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS11 INS38 INS38 INS60 INS60 MOV21 INS42 INS42 INS43 INS42 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS27 INS42 INS45 INS42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL32 DEL7 DEL39 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42