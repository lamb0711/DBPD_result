JCR-2699: Improve read/write concurrency

Evict old entries more aggressively

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1004652 13f79535-47bb-0310-9956-ffa450edef68

+        E<V> previous;
+
-            E<V> previous = segment.put(key, new E<V>(value, size));
-            if (previous != null) {
-                recordSizeChange(-previous.size);
-                return previous.value;
-            } else {
-                return null;
-            }
+            previous = segment.put(key, new E<V>(value, size));
+        }
+
+        if (previous != null) {
+            recordSizeChange(-previous.size);
+            shrinkIfNeeded();
+            return previous.value;
+        } else {
+            shrinkIfNeeded();
+            return null;
+        shrinkIfNeeded();
+    }
+    /**
+     * Removes old entries from the cache until the cache is small enough.
+     */
+    private void shrinkIfNeeded() {
-                    Map.Entry<K, E<V>> entry = iterator.next();
-                    // automatically the last entry if the cache is
-                    // too big
+                    // evict the last entry if the cache is too big
+                    Map.Entry<K, E<V>> entry = iterator.next();

INS31 MOV8 MOV29 MOV78 INS83 INS39 INS42 MOV44 INS8 INS29 UPD83 UPD42 MOV60 INS51 MOV21 INS21 INS65 INS42 INS8 INS32 INS66 MOV21 INS21 INS21 INS21 INS42 INS7 INS32 INS32 INS42 MOV32 INS42 INS42 DEL42 DEL51 DEL8