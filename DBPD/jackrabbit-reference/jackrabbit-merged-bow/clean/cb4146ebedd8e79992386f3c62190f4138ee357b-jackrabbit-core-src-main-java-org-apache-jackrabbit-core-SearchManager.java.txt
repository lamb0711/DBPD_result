JCR-1612: Reintroduce NamespaceStorage and namespace-caching

Preparing for NamespaceStorage by simplifying NamespaceRegistryImpl.

The safeRegisterNamespace method was only used by SearchManagerImpl,
so moved it to there as a private utility method.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@681088 13f79535-47bb-0310-9956-ffa450edef68

-        nsReg.safeRegisterNamespace(NS_XS_PREFIX, NS_XS_URI);
+        safeRegisterNamespace(NS_XS_PREFIX, NS_XS_URI);
-                String prefix = null;
-                for (int i = 0; prefix == null; i++) {
-                    try {
-                        nsReg.getURI(NS_FN_OLD_PREFIX + i);
-                    } catch (NamespaceException e) {
-                        // not mapped to uri
+                String prefix = NS_FN_OLD_PREFIX;
+                try {
+                    // Find a free prefix
+                    for (int i = 2; true; i++) {
+                        nsReg.getURI(prefix);
+                } catch (NamespaceException e) {
+                    // Re-map the old fn URI to that prefix
+                    nsReg.registerNamespace(prefix, NS_FN_OLD_URI);
-                nsReg.registerNamespace(prefix, NS_FN_OLD_URI);
-            nsReg.safeRegisterNamespace(NS_FN_OLD_PREFIX, NS_FN_OLD_URI);
+            safeRegisterNamespace(NS_FN_OLD_PREFIX, NS_FN_OLD_URI);
-        nsReg.safeRegisterNamespace(NS_FN_PREFIX, NS_FN_URI);
+        safeRegisterNamespace(NS_FN_PREFIX, NS_FN_URI);
+     * Registers a namespace using the given prefix hint. Does nothing
+     * if the namespace is already registered. If the given prefix hint
+     * is not yet registered as a prefix, then it is used as the prefix
+     * of the registered namespace. Otherwise a unique prefix is generated
+     * based on the given hint.
+     *
+     * @param prefixHint the prefix hint
+     * @param uri the namespace URI
+     * @throws NamespaceException if an illegal attempt is made to register
+     *                            a mapping
+     * @throws RepositoryException if an unexpected error occurs
+     * @see #registerNamespace(String, String)
+     */
+    private void safeRegisterNamespace(String prefixHint, String uri)
+            throws NamespaceException, RepositoryException {
+        try {
+            // Check if the namespace is already registered
+            nsReg.getPrefix(uri);
+            // ... it is, so do nothing.
+        } catch (NamespaceException e1) {
+            // ... it is not, try to find a unique prefix.
+            String prefix = prefixHint;
+            try {
+                for (int suffix = 2; true; suffix++) {
+                    // Is this prefix already registered?
+                    nsReg.getURI(prefix);
+                    // ... it is, generate a new prefix and try again.
+                    prefix = prefixHint + suffix;
+                }
+            } catch (NamespaceException e2) {
+                // ... it is not, register the namespace with this prefix.
+                nsReg.registerNamespace(prefix, uri);
+            }
+        }
+    }
+
+    /**

INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS42 INS54 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS68 INS42 INS42 INS8 INS12 INS42 INS69 INS69 INS21 INS44 INS8 INS43 INS43 INS32 INS43 INS42 INS60 INS54 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS12 INS8 INS12 INS42 INS42 INS42 INS24 INS44 INS8 INS42 INS24 MOV44 INS8 INS58 INS9 INS37 INS8 INS43 INS42 INS21 MOV58 INS9 MOV37 MOV8 MOV21 INS39 INS59 INS42 INS21 INS21 INS42 INS32 INS21 INS42 INS34 INS32 INS7 INS42 INS42 INS42 INS42 UPD34 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 DEL42 DEL33 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL24 DEL42 DEL42