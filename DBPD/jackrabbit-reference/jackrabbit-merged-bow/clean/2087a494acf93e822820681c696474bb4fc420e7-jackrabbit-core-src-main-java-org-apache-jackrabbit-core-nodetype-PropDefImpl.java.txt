JCR-2064 Add new JSR283 features to CND reader/writer
JCR-2153 Introduce QValueConstraint and change return type of QPropertyDefinition.getValueConstraints()
JCR-2158 Consolidate CND related classes from SPI and Core


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785777 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.QPropertyDefinition;
+import org.apache.jackrabbit.spi.QValueConstraint;
+import org.apache.jackrabbit.spi.QValue;
+import org.apache.jackrabbit.spi.commons.QPropertyDefinitionImpl;
+import javax.jcr.RepositoryException;
+
-    private ValueConstraint[] valueConstraints = ValueConstraint.EMPTY_ARRAY;
+    private QValueConstraint[] valueConstraints = QValueConstraint.EMPTY_ARRAY;
+    public PropDefImpl(QPropertyDefinition pd) {
+        super(pd);
+        requiredType = pd.getRequiredType();
+        valueConstraints = pd.getValueConstraints();
+        QValue[] vs = pd.getDefaultValues();
+        if (vs != null) {
+            defaultValues = new InternalValue[vs.length];
+            for (int i=0; i<vs.length; i++) {
+                try {
+                    defaultValues[i] = InternalValue.create(vs[i]);
+                } catch (RepositoryException e) {
+                    throw new IllegalStateException("Error while converting default values.", e);
+                }
+            }
+        }
+        multiple = pd.isMultiple();
+        fullTextSearchable = pd.isFullTextSearchable();
+        queryOrderable = pd.isQueryOrderable();
+        queryOperators = pd.getAvailableQueryOperators();
+    }
+
+    /**
+     * Returns the QPropertyDefinition of this PropDef
+     * @return the QPropertyDefinition
+     */
+    public QPropertyDefinition getQPropertyDefinition() {
+        return new QPropertyDefinitionImpl(
+                getName(),
+                getDeclaringNodeType(),
+                isAutoCreated(),
+                isMandatory(),
+                getOnParentVersion(),
+                isProtected(),
+                getDefaultValues(),
+                isMultiple(),
+                getRequiredType(),
+                getValueConstraints(),
+                getAvailableQueryOperators(),
+                isFullTextSearchable(),
+                isQueryOrderable()
+        );
+    }
+
-    public void setValueConstraints(ValueConstraint[] valueConstraints) {
+    public void setValueConstraints(QValueConstraint[] valueConstraints) {
-            this.valueConstraints = ValueConstraint.EMPTY_ARRAY;
+            this.valueConstraints = QValueConstraint.EMPTY_ARRAY;
-    public ValueConstraint[] getValueConstraints() {
+    public QValueConstraint[] getValueConstraints() {

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 UPD5 INS83 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 UPD5 UPD43 UPD40 INS43 INS42 INS46 INS21 INS21 INS60 INS25 INS21 INS21 INS21 INS21 INS65 INS65 INS42 INS41 UPD5 UPD43 UPD42 INS42 INS42 INS7 INS7 INS5 INS59 INS27 INS8 INS7 INS7 INS7 INS7 INS66 INS66 INS14 UPD43 UPD42 INS42 INS32 INS42 INS32 INS43 INS85 INS42 INS32 INS42 INS33 INS21 INS24 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS54 UPD40 INS5 INS40 INS42 INS34 INS8 INS12 INS43 INS85 INS21 INS44 INS8 INS42 INS7 INS43 INS42 INS53 INS2 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS2 INS43 INS45 INS42 INS42 INS42 INS42