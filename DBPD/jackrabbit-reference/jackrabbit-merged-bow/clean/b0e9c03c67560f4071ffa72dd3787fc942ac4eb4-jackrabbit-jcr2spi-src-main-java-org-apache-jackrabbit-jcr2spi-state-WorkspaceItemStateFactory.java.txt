JCR-1244: No need for NodeReferences in jcr2spi
    - Applied the proposed patch

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@605155 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashSet;
-import java.util.Set;
-import java.util.Arrays;
-    public NodeReferences getNodeReferences(NodeState nodeState) {
+    public PropertyId[] getNodeReferences(NodeState nodeState) {
-        if (entry.getUniqueID() == null || !entry.hasPropertyEntry(NameConstants.JCR_UUID)) {
+        if (entry.getUniqueID() == null
+                || !entry.hasPropertyEntry(NameConstants.JCR_UUID)) {
-            return EmptyNodeReferences.getInstance();
+            return new PropertyId[0];
-            return new NodeReferencesImpl(nInfo.getReferences());
+            return nInfo.getReferences();
-            // ignore
+            log.debug("Unable to determine references to {}", nodeState);
+            return new PropertyId[0];
-        // exception or no matching entry found.
-        log.debug("Unable to determine references for NodeState " + nodeState);
-        return EmptyNodeReferences.getInstance();
-    //-----------------------------------------------------< NodeReferences >---
-    /**
-     * <code>NodeReferences</code> represents the references (i.e. properties of
-     * type <code>REFERENCE</code>) to a particular node (denoted by its unique ID).
-     */
-    private class NodeReferencesImpl implements NodeReferences {
-
-        private PropertyId[] references;
-
-        /**
-         * Private constructor
-         *
-         * @param references
-         */
-        private NodeReferencesImpl(PropertyId[] references) {
-            this.references = references;
-        }
-
-        //-------------------------------------------------< NodeReferences >---
-        /**
-         * @see NodeReferences#isEmpty()
-         */
-        public boolean isEmpty() {
-            return references.length <= 0;
-        }
-
-        /**
-         * @see NodeReferences#iterator()
-         */
-        public Iterator iterator() {
-            if (references.length > 0) {
-                Set referenceIds = new HashSet();
-                referenceIds.addAll(Arrays.asList(references));
-                return Collections.unmodifiableSet(referenceIds).iterator();
-            } else {
-                return Collections.EMPTY_SET.iterator();
-            }
-        }
-    }

MOV5 INS3 MOV32 INS21 INS41 INS5 INS34 INS32 INS3 INS43 INS85 INS42 INS42 INS45 INS42 MOV5 INS34 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL42 DEL32 DEL42 DEL43 DEL14 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL83 DEL42 DEL59 DEL23 DEL66 DEL65 DEL42 DEL65 DEL29 DEL83 DEL42 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL39 DEL42 DEL40 DEL34 DEL27 DEL41 DEL8 DEL31 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL40 DEL34 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL40 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL31 DEL55