JCR-334: Use the DOM3 implementation registry instead of a direct reference to the Xerces XMLSchemaLoader class, to avoid using the old Xerces 2.4.0 implementation that Maven 1.0.2 incorrectly puts in the class path.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@383794 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.xerces.impl.xs.XMLSchemaLoader;
+import org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;
+import org.apache.xerces.xs.XSImplementation;
+import org.apache.xerces.xs.XSLoader;
+
-        XMLSchemaLoader loader = new XMLSchemaLoader();
-        String uri = file.toURI().toString();
-        XSModel xsModel = loader.loadURI(uri);
+        try {
+            // Find an XMLSchema loader instance
+            DOMImplementationRegistry registry =
+                DOMImplementationRegistry.newInstance();
+            XSImplementation implementation = (XSImplementation)
+                registry.getDOMImplementation("XS-Loader");
+            XSLoader loader = implementation.createXSLoader(null);
-        // Convert top level complex type definitions to node types
-        XSNamedMap map = xsModel.getComponents(XSConstants.TYPE_DEFINITION);
-        for (int i = 0; i < map.getLength(); i++) {
-            XSTypeDefinition tDef = (XSTypeDefinition) map.item(i);
-            checkAndConvert(tDef, null, null);
-        }
-        // Convert local (anonymous) complex type defs found in top level element declarations
-        map = xsModel.getComponents(XSConstants.ELEMENT_DECLARATION);
-        for (int i = 0; i < map.getLength(); i++) {
-            XSElementDeclaration eDec = (XSElementDeclaration) map.item(i);
-            XSTypeDefinition tDef = eDec.getTypeDefinition();
-            checkAndConvert(tDef, eDec.getNamespace(), eDec.getName());
+            // Load the XML Schema
+            String uri = file.toURI().toString();
+            XSModel xsModel = loader.loadURI(uri);
+
+            // Convert top level complex type definitions to node types
+            XSNamedMap map = xsModel.getComponents(XSConstants.TYPE_DEFINITION);
+            for (int i = 0; i < map.getLength(); i++) {
+                XSTypeDefinition tDef = (XSTypeDefinition) map.item(i);
+                checkAndConvert(tDef, null, null);
+            }
+            //  Convert local (anonymous) complex type defs found in top level element declarations
+            map = xsModel.getComponents(XSConstants.ELEMENT_DECLARATION);
+            for (int i = 0; i < map.getLength(); i++) {
+                XSElementDeclaration eDec = (XSElementDeclaration) map.item(i);
+                XSTypeDefinition tDef = eDec.getTypeDefinition();
+                checkAndConvert(tDef, eDec.getNamespace(), eDec.getName());
+            }
+        } catch (ClassNotFoundException e) {
+            throw new SchemaConversionException("XSLoader not found", e);
+        } catch (InstantiationException e) {
+            throw new SchemaConversionException("XSLoader instantiation error", e);
+        } catch (IllegalAccessException e) {
+            throw new SchemaConversionException("XSLoader access error", e);

MOV26 INS26 INS26 INS40 INS40 UPD40 INS8 INS54 MOV8 INS12 INS12 INS12 INS60 INS60 INS44 INS8 INS44 INS8 INS44 INS8 INS43 INS59 INS43 INS59 UPD43 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS42 INS32 INS42 INS42 INS11 UPD42 INS32 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS42 INS43 INS32 INS42 INS42 INS33 INS43 INS45 INS42 INS43 INS45 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 DEL42 DEL43 DEL14