JCR-2134 Data Store: avoid creating temporary files

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@783243 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.data.DataStoreException;
+                    if (value instanceof QValueValue) {
+                        QValueValue qvv = (QValueValue) value;
+                        QValue qv = qvv.getQValue();
+                        if (qv instanceof InternalValue) {
+                            InternalValue iv = (InternalValue) qv;
+                            
+                            iv.getBLOBFileValue();
+                        }
+                    }
+    
+    static InternalValue getInternalValue(DataIdentifier identifier, DataStore store) throws DataStoreException {
+        // access the record to ensure it is not garbage collected
+        if (store.getRecordIfStored(identifier) != null) {
+            // it exists - so we don't need to stream it again
+            // but we need to create a new object because the original
+            // one might be in a different data store (repository)
+            BLOBFileValue blob = BLOBInDataStore.getInstance(store, identifier);
+            return new InternalValue(blob);
+        }
+        return null;
+    }
+     * Create an internal value that is stored in the data store (if enabled).
+     * 
+     * @param value the input stream
+     * @return the internal value
+     */
+    public static InternalValue create(InputStream value, DataStore store) throws RepositoryException {
+        if (USE_DATA_STORE) {
+            return new InternalValue(getBLOBFileValue(store, value, false));
+        }
+        try {
+            return new InternalValue(new BLOBValue(value, false));
+        } catch (IOException e) {
+            throw new RepositoryException("Error creating file", e);
+        }
+    }
+
+    /**
-            vf = new ValueFactoryImpl(resolver);
+            vf = new ValueFactoryImpl(resolver, null);

INS26 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS54 INS42 INS42 INS27 INS8 INS33 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS8 INS8 INS12 INS32 INS33 INS60 INS41 INS41 INS41 INS44 INS8 INS25 INS42 INS42 INS42 INS43 INS59 INS14 INS14 INS14 INS43 INS42 INS53 INS62 INS8 INS42 INS42 INS32 INS43 INS42 INS43 INS32 INS43 INS14 INS42 INS14 INS42 INS43 INS60 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS43 INS42 INS9 INS43 INS45 INS42 INS33 INS42 INS43 INS59 INS43 INS59 INS62 INS8 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS43 INS60 INS21 INS43 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS43 INS42 INS42