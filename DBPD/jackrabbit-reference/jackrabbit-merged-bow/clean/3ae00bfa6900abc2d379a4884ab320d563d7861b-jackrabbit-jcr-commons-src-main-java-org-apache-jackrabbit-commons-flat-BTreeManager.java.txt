JCR-2688: Provide utility for handling large number of child nodes/properties
applied Jukka's patch with some modifications

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@982695 13f79535-47bb-0310-9956-ffa450edef68

-import static org.apache.jackrabbit.commons.iterator.Iterators.filterIterator;
-import static org.apache.jackrabbit.commons.iterator.Iterators.nodes;
-import static org.apache.jackrabbit.commons.iterator.Iterators.properties;
-
-import org.apache.jackrabbit.commons.iterator.Predicate;
+import java.util.NoSuchElementException;
+    @SuppressWarnings("unchecked")
-        return getSizedIterator(nodes(nodes), nodes.getSize());
+        return getSizedIterator(nodes, nodes.getSize());
-     * Returns a {@link SizedIterator} of the properties of <code>node</code> which
-     * excludes the <code>jcr.primaryType</code> property.
+     * Returns a {@link SizedIterator} of the properties of <code>node</code>
+     * which excludes the <code>jcr.primaryType</code> property.
-    protected SizedIterator<Property> getProperties(final Node node) throws RepositoryException {
+    protected SizedIterator<Property> getProperties(Node node) throws RepositoryException {
-        Iterator<Property> filtered = filterIterator(properties(properties), new Predicate<Property>() {
-            public boolean evaluate(Property property) {
-                try {
-                    return !JcrConstants.JCR_PRIMARYTYPE.equals(property.getName());
+        Iterator<Property> filteredIterator = new Iterator<Property>() {
+            Property next = null;
+
+            public boolean hasNext() {
+                while (next == null && properties.hasNext()) {
+                    Property p = properties.nextProperty();
+                    try {
+                        if (!JcrConstants.JCR_PRIMARYTYPE.equals(p.getName())) {
+                            next = p;
+                        }
+                    }
+                    catch (RepositoryException ignore) {
+                        next = p;
+                    }
-                catch (RepositoryException ignore) {
-                    return true;
+
+                return next != null;
+            }
+
+            public Property next() {
+                if (hasNext()) {
+                    Property property = next;
+                    next = null;
+                    return property;
+                }
+                else {
+                    throw new NoSuchElementException();
-        });
+
+            public void remove() {
+                throw new UnsupportedOperationException();
+            }
+        };
-        return getSizedIterator(filtered, size > 0 ? size - 1 : size);
+        return getSizedIterator(filteredIterator, size > 0 ? size - 1 : size);
-     * correctly reflect the number of items in <code>iterator</code>.ï¿½
+     * correctly reflect the number of items in <code>iterator</code>.

MOV26 UPD40 INS79 INS42 INS45 UPD66 UPD66 INS74 INS59 UPD66 MOV42 INS43 INS43 INS42 INS14 UPD42 INS42 INS42 MOV74 INS1 INS23 MOV31 INS31 INS31 INS43 INS59 UPD42 INS8 INS83 MOV43 INS42 INS8 INS83 INS39 INS42 INS8 UPD42 MOV42 INS42 INS33 INS61 INS41 INS25 INS53 INS27 INS8 INS27 INS32 INS8 INS8 INS14 INS27 INS32 INS60 MOV54 INS42 INS33 INS42 INS60 INS21 INS41 INS53 INS43 INS42 INS33 INS42 INS42 MOV43 INS59 INS43 INS59 INS7 INS42 INS14 INS42 INS42 INS32 INS25 INS42 INS42 INS42 INS42 INS33 INS43 INS42 INS42 INS38 INS8 INS21 INS42 MOV32 INS21 INS7 INS7 INS42 INS42 UPD42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL83 DEL38 DEL41 DEL9 DEL41 DEL42 DEL44 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL43 DEL74 DEL1 DEL14 DEL32 DEL59