- adding better extensibility for the repository properties handling

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@327221 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * the name of the filesystem resource containing the properties of the
+     * repository.
+     */
+
+    /**
+     * the repository properties.
+     */
-        repProps = new Properties();
-        loadRepProps();
+        repProps = loadRepProps();
-            storeRepProps();
+            storeRepProps(repProps);
-     * Returns an <code>InputStream</code> on a <code>Properties</code> resource
-     * which contains the default properties for the repository. This method is
-     * only called once during repository initialization.
+     * Sets the default properties of the repository.
-     * The <code>InputStream</code> returned is closed by the caller.
-     * <p/>
-     * This method returns an <code>InputStream</code> on the
-     * <code>org/apache/jackrabbit/core/repository.properties</code> resource
-     * found in the class path.
+     * This method loads the <code>Properties</code> from the
+     * <code>com/day/crx/core/repository.properties</code> resource
+     * found in the class path and (re)sets the statistics properties, if not
+     * present.
-     * @return <code>InputStream</code> on a <code>Properties</code> resource
-     *         or <code>null</code> if the resource does not exist.
+     * @param props the properties object to load
+     *
+     * @throws RepositoryException if the properties can not be aquired
-    protected InputStream getDefaultRepositoryProperties() {
-        return RepositoryImpl.class.getResourceAsStream("repository.properties");
+    protected void setDefaultRepositoryProperties(Properties props)
+            throws RepositoryException {
+        InputStream in = RepositoryImpl.class.getResourceAsStream("repository.properties");
+        try {
+            props.load(in);
+            in.close();
+
+            // set counts
+            if (!props.containsKey(STATS_NODE_COUNT_PROPERTY)) {
+                props.setProperty(STATS_NODE_COUNT_PROPERTY, Long.toString(nodesCount));
+            }
+            if (!props.containsKey(STATS_PROP_COUNT_PROPERTY)) {
+                props.setProperty(STATS_PROP_COUNT_PROPERTY, Long.toString(propsCount));
+            }
+        } catch (IOException e) {
+            String msg = "Failed to load repository properties: " +e.toString();
+            log.error(msg);
+            throw new RepositoryException(msg, e);
+        }
-    private void loadRepProps() throws RepositoryException {
+
+    /**
+     * Loads the repository properties by the following steps:
+     * 1. if the {@link #PROPERTIES_RESOURCE} exists in the meta data store,
+     *    the properties are loaded from that resource.
+     * 2. the {@link #setDefaultRepositoryProperties(Properties)} is called,
+     *    in order to set the repository properties. they could be newer than
+     *    the ones stored in the resource.
+     * 3. the {@link #storeRepProps(Properties)} is called, in order to persist
+     *    the generated properties.
+     *
+     * @return the newly loaded repository properties
+     *
+     * @throws RepositoryException
+     */
+    protected Properties loadRepProps() throws RepositoryException {
-            repProps.clear();
-            if (!propFile.exists() || propFile.length() == 0) {
-                // initialize properties with pre-defined values
-                InputStream in = getDefaultRepositoryProperties();
-                if (in != null) {
-                    try {
-                        repProps.load(in);
-                    } finally {
-                        in.close();
-                    }
+            Properties props = new Properties();
+            if (propFile.exists()) {
+                InputStream in = propFile.getInputStream();
+                try {
+                    props.load(in);
+                } finally {
+                    in.close();
-
-                // set counts
-                repProps.setProperty(STATS_NODE_COUNT_PROPERTY, Long.toString(nodesCount));
-                repProps.setProperty(STATS_PROP_COUNT_PROPERTY, Long.toString(propsCount));
-
-                // persist properties
-                storeRepProps();
-                return;
+            // now set the default props
+            setDefaultRepositoryProperties(props);
-            InputStream in = propFile.getInputStream();
-            try {
-                repProps.load(in);
-            } finally {
-                in.close();
-            }
+            // and store
+            storeRepProps(props);
+
+            return props;
+
-    private void storeRepProps() throws RepositoryException {
+    /**
+     * Stores the properties to a persistent resource in the meta filesytem.
+     *
+     * @throws RepositoryException
+     */
+    protected void storeRepProps(Properties props) throws RepositoryException {
-                repProps.store(os, null);
+                props.store(os, null);

INS29 INS29 INS39 UPD42 INS44 INS43 INS8 INS29 UPD83 INS43 INS29 UPD83 INS44 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS54 INS65 INS65 INS65 INS42 INS65 INS65 INS43 INS42 INS66 INS66 INS66 INS7 UPD66 UPD66 UPD66 UPD66 INS66 INS42 UPD66 MOV66 INS42 UPD66 MOV66 INS42 MOV43 INS59 INS8 INS12 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS42 INS42 INS42 MOV32 INS42 MOV32 INS21 INS21 INS25 INS25 INS44 INS8 INS67 INS68 INS68 MOV60 MOV25 MOV21 MOV21 INS41 INS32 INS32 INS38 INS8 INS38 INS8 INS43 INS42 INS60 INS21 INS53 INS42 INS42 INS69 INS42 INS69 UPD43 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV21 INS32 MOV21 INS42 INS43 INS59 INS32 INS14 INS43 INS43 UPD42 INS42 MOV14 MOV60 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 MOV8 UPD42 UPD42 INS45 INS32 INS42 UPD42 INS42 INS42 UPD42 DEL42 DEL7 DEL21 DEL66 DEL66 DEL66 DEL66 DEL65 DEL41 DEL8 DEL39 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL38 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL41 DEL8 DEL25 DEL8 DEL54