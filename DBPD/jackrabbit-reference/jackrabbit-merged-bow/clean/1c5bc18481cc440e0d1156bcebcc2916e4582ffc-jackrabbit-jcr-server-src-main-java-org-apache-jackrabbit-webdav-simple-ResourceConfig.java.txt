JCR-2272: Update branch to match latest trunk.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/branches/JCR-2272@1176340 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.server.io.CopyMoveHandler;
+import org.apache.jackrabbit.server.io.CopyMoveManager;
+import org.apache.jackrabbit.server.io.CopyMoveManagerImpl;
+    private static final String ELEMENT_COPYMOVEMANAGER = "copymovemanager";
+    private static final String ELEMENT_COPYMOVEHANDLER = "copymovehandler";
+
+    private CopyMoveManager cmManager;
+            // copymovemanager config entry
+            el = DomUtil.getChildElement(config, ELEMENT_COPYMOVEMANAGER, null);
+            if (el != null) {
+                Object inst = buildClassFromConfig(el);
+                if (inst != null && inst instanceof CopyMoveManager) {
+                    cmManager = (CopyMoveManager) inst;
+                    // get optional 'copymovehandler' child elements and populate
+                    // the copy move manager with the instances
+                    ElementIterator iohElements = DomUtil.getChildren(el, ELEMENT_COPYMOVEHANDLER, null);
+                    while (iohElements.hasNext()) {
+                        Element iohEl = iohElements.nextElement();
+                        inst = buildClassFromConfig(iohEl);
+                        if (inst != null && inst instanceof CopyMoveHandler) {
+                            CopyMoveHandler handler = (CopyMoveHandler) inst;
+                            setParameters(handler, iohEl);
+                            cmManager.addCopyMoveHandler(handler);
+                        } else {
+                            log.warn("Not a valid CopyMoveHandler : " + getClassName(iohEl));
+                        }
+                    }
+                } else {
+                    log.warn("'copymovemanager' element does not define a valid CopyMoveManager.");
+                }
+            } else {
+                log.debug("'copymovemanager' element is missing.");
+            }
+
+     *
+     * @return
+     */
+    public CopyMoveManager getCopyMoveManager() {
+        if (cmManager == null) {
+            log.debug("Missing copymove-manager > building default.");
+            cmManager = CopyMoveManagerImpl.getDefaultManager();
+        }
+        return cmManager;
+    }
+
+    /**

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS65 INS42 INS25 INS41 INS27 INS8 INS42 INS21 INS25 INS42 INS33 INS21 INS21 INS7 INS27 INS8 INS8 INS32 INS7 INS42 INS32 INS42 INS33 INS60 INS25 INS21 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS33 INS43 INS59 INS27 INS8 INS8 INS32 INS42 INS42 INS42 INS42 INS32 INS27 INS62 INS21 INS60 INS61 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS33 INS42 INS43 INS7 INS43 INS59 INS32 INS8 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS25 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS33 INS43 INS59 INS7 INS27 INS8 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS27 INS62 INS60 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS43 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS43 INS42 INS45 INS32 INS42 INS42 INS42