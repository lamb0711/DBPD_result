JCR-2308: Allow reuse of Q*DefinitionBuilder in QItemDefinitionsBuilder

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816120 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.commons.cnd.AbstractItemTypeDefinitionsBuilder.AbstractNodeDefinitionBuilder;
-import org.apache.jackrabbit.commons.cnd.AbstractItemTypeDefinitionsBuilder.AbstractNodeTypeDefinitionBuilder;
-import org.apache.jackrabbit.commons.cnd.AbstractItemTypeDefinitionsBuilder.AbstractPropertyDefinitionBuilder;
+import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractNodeDefinitionBuilder;
+import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractNodeTypeDefinitionBuilder;
+import org.apache.jackrabbit.commons.cnd.DefinitionBuilderFactory.AbstractPropertyDefinitionBuilder;
- * parser's constructor takes a {@link AbstractItemTypeDefinitionsBuilder} for
+ * parser's constructor takes a {@link DefinitionBuilderFactory} for
-    private final AbstractItemTypeDefinitionsBuilder<T, N> builder;
+    private final DefinitionBuilderFactory<T, N> factory;
-     * @param builder builder for creating new definitions and handling namespaces
+     * @param factory builder for creating new definitions and handling namespaces
-            AbstractItemTypeDefinitionsBuilder<T, N> builder) throws ParseException {
+            DefinitionBuilderFactory<T, N> factory) throws ParseException {
-        this(r, systemId, null, builder);
+        this(r, systemId, null, factory);
-     * @param builder builder for creating new definitions and handling namespaces
+     * @param factory builder for creating new definitions and handling namespaces
-            AbstractItemTypeDefinitionsBuilder<T, N> builder) throws ParseException {
+            DefinitionBuilderFactory<T, N> factory) throws ParseException {
-        this.builder = builder;
+        this.factory = factory;
-            builder.setNamespaceMapping(nsMapping);
+            factory.setNamespaceMapping(nsMapping);
-        return builder.getNamespaceMapping();
+        return factory.getNamespaceMapping();
-                AbstractNodeTypeDefinitionBuilder<T> ntd = builder.newNodeTypeDefinitionBuilder();
+                AbstractNodeTypeDefinitionBuilder<T> ntd = factory.newNodeTypeDefinitionBuilder();
-            builder.setNamespace(prefix, uri);
+            factory.setNamespace(prefix, uri);

UPD40 UPD40 UPD40 UPD74 UPD43 UPD42 UPD74 UPD42 UPD74 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42