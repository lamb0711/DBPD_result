JCR-890: concurrent read-only access to a session

Add SessionItemOperation for the itemExists(), getItem(), and remove() methods in Session.

Allow return values from SessionOperations (using generics to avoid type casts).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@981771 13f79535-47bb-0310-9956-ffa450edef68

-     *
-     * @param name
-     * @param value
-     * @return
-     * @throws ValueFormatException
-     * @throws VersionException
-     * @throws LockException
-     * @throws ConstraintViolationException
-     * @throws RepositoryException
-            throws ValueFormatException, VersionException, LockException,
-            ConstraintViolationException, RepositoryException {
-        SetPropertyOperation operation =
-            new SetPropertyOperation(name, value, false);
-        sessionContext.getSessionState().perform(operation);
-        return operation.getProperty();
+            throws RepositoryException {
+        return sessionContext.getSessionState().perform(
+                new SetPropertyOperation(name, value, false));
-        SetPropertyOperation operation =
-            new SetPropertyOperation(session.getQName(name), value, true);
-        sessionContext.getSessionState().perform(operation);
-        return operation.getProperty();
+        return sessionContext.getSessionState().perform(
+                new SetPropertyOperation(session.getQName(name), value, true));
-        SetPropertyOperation operation =
-            new SetPropertyOperation(session.getQName(name), value, false);
-        sessionContext.getSessionState().perform(operation);
-        return operation.getProperty();
+        return sessionContext.getSessionState().perform(
+                new SetPropertyOperation(session.getQName(name), value, false));
-    private class SetPropertyOperation implements SessionOperation {
+    private class SetPropertyOperation implements SessionOperation<PropertyImpl> {
-        private volatile PropertyImpl property = null;
-
-         * @return the <code>Property</code> object set, or <code>null</code> if
-         *         this method was used to remove a property (by setting its value
-         *         to <code>null</code>).
-         */
-        public PropertyImpl getProperty() {
-            return property;
-        }
-
-        /**
+         * @return the <code>Property</code> object set,
+         *         or <code>null</code> if this operation was used to remove
+         *         a property (by setting its value to <code>null</code>)
-        public void perform(SessionContext context) throws RepositoryException {
+        public PropertyImpl perform(SessionContext context)
+                throws RepositoryException {
-            property =
+            PropertyImpl property =
+            return property;

INS74 MOV43 MOV43 MOV43 INS32 INS65 INS60 MOV41 MOV32 UPD42 MOV14 MOV32 INS42 MOV14 MOV32 UPD42 MOV14 INS66 INS66 INS66 INS43 INS59 INS42 INS42 MOV32 DEL42 DEL65 DEL42 DEL65 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL83 DEL83 DEL42 DEL33 DEL59 DEL23 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31 DEL39 DEL42 DEL7 DEL21