JCR-1590: JSR 283: Locking

- move lock token handling from Session to LockManager.java
- add more tests
- adjust tests in jcr2spi 

TODO:
- sessionscoped locks still expose the lock token
- fixing that needs some more adjustments in jcr2spi and the spi
- timeout handling

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@736658 13f79535-47bb-0310-9956-ffa450edef68

-     * Lock tokens
-     */
-    protected final Set lockTokens = new HashSet();
-
-    /**
-        addLockToken(lt, true);
-    }
-
-    /**
-     * Internal implementation of {@link #addLockToken(String)}. Additionally
-     * takes a parameter indicating whether the lock manager needs to be
-     * informed.
-     */
-    public void addLockToken(String lt, boolean notify) {
-        synchronized (lockTokens) {
-            if (lockTokens.add(lt) && notify) {
-                try {
-                    getLockManager().lockTokenAdded(this, lt);
-                } catch (RepositoryException e) {
-                    log.error("Lock manager not available.", e);
-                }
-            }
+        try {
+            wsp.get283LockManager().addLockToken(lt);
+        } catch (RepositoryException e) {
+            log.debug("Error while adding lock token.");
-        synchronized (lockTokens) {
-            String[] result = new String[lockTokens.size()];
-            lockTokens.toArray(result);
-            return result;
+        try {
+            return wsp.get283LockManager().getLockTokens();
+        } catch (RepositoryException e) {
+            log.debug("Error while accessing lock tokens.");
+            return new String[0];
-        removeLockToken(lt, true);
-    }
-
-    /**
-     * Internal implementation of {@link #removeLockToken(String)}. Additionally
-     * takes a parameter indicating whether the lock manager needs to be
-     * informed.
-     */
-    public void removeLockToken(String lt, boolean notify) {
-        synchronized (lockTokens) {
-            if (lockTokens.remove(lt) && notify) {
-                try {
-                    getLockManager().lockTokenRemoved(this, lt);
-                } catch (RepositoryException e) {
-                    log.error("Lock manager not available.", e);
-                }
-            }
+        try {
+            wsp.get283LockManager().removeLockToken(lt);
+        } catch (RepositoryException e) {
+            log.debug("Error while removing lock token.");

MOV29 MOV44 INS8 MOV29 INS8 MOV29 MOV44 INS8 MOV54 INS54 MOV54 INS8 INS12 INS44 INS41 MOV44 INS8 INS43 INS42 INS32 MOV21 MOV41 UPD42 INS42 INS32 UPD42 MOV42 INS3 UPD42 INS42 UPD42 UPD42 UPD45 INS42 INS42 UPD42 UPD42 INS45 MOV5 INS34 INS42 UPD42 UPD42 UPD45 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL39 DEL42 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL66 DEL66 DEL65 DEL29 DEL52 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL27 DEL8 DEL25 DEL8 DEL51 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL32 DEL3 DEL59 DEL60 DEL8 DEL51 DEL8 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL66 DEL66 DEL65 DEL29 DEL52 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL27 DEL8 DEL25 DEL8 DEL51 DEL8