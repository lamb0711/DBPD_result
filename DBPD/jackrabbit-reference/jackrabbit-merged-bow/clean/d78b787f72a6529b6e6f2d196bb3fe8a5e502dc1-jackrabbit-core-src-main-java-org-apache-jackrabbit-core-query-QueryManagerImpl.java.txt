JCR-1104: JSR 283 support
- JQOM work in progress

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@572945 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.query.jsr283.PreparedQuery;
+import org.apache.jackrabbit.core.query.jsr283.qom.QueryObjectModelFactory;
+import org.apache.jackrabbit.core.query.qom.QueryObjectModelFactoryImpl;
+     * The <code>QueryObjectModelFactory</code> for this query manager.
+     */
+    private final QueryObjectModelFactoryImpl qomFactory;
+
+    /**
+        this.qomFactory = new QueryObjectModelFactoryImpl(session, searchMgr);
+    //---------------------------< JSR 283 >------------------------------------
+
+    /**
+     * Creates a new prepared query by specifying the query
+     * <code>statement</code> itself and the <code>language</code> in which the
+     * query is stated. If the query statement is syntactically invalid, given
+     * the language specified, an <code>InvalidQueryException</code> is thrown.
+     * The language parameter must be a string from among those returned by
+     * <code>QueryManager.getSupportedQueryLanguages()</code>; if it is not,
+     * then an <code>InvalidQueryException</code> is thrown.
+     *
+     * @param statement a <code>String</code>
+     * @param language  a <code>String</code>
+     * @return a <code>PreparedQuery</code> object
+     * @throws InvalidQueryException if the query statement is syntactically
+     *                               invalid or the specified language is not
+     *                               supported
+     * @throws RepositoryException   if another error occurs
+     * @since JCR 2.0
+     */
+    public PreparedQuery createPreparedQuery(String statement, String language)
+            throws InvalidQueryException, RepositoryException {
+        sanityCheck();
+        return searchMgr.createPreparedQuery(session, itemMgr, statement, language);
+    }
+
+    /**
+     * Returns a <code>QueryObjectModelFactory</code> with which a JCR-JQOM
+     * query can be built programmatically.
+     *
+     * @return a <code>QueryObjectModelFactory</code> object
+     * @since JCR 2.0
+     */
+    public QueryObjectModelFactory getQOMFactory() {
+        return qomFactory;
+    }
+
+    //---------------------------< internal >-----------------------------------
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS41 INS65 INS65 INS65 INS42 INS41 INS66 INS7 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS32 INS66 INS66 INS66 INS66 INS42 INS22 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS43 INS42 INS42 INS42