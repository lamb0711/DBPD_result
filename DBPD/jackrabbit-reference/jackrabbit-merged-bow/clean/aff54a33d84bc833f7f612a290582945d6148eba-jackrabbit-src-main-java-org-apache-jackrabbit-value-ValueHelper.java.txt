- jdbc-based FileSystem implementation
- some minor fixes/cleanups

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@345937 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
+import java.io.IOException;
+import java.io.FilterInputStream;
-            // pass InputStream to BinaryValue constructor
-            return new BinaryValue(new InputStream() {
-                File f = tmpFile;
-                InputStream in = new FileInputStream(f);
+            // pass InputStream wrapper to BinaryValue constructor
+            return new BinaryValue(new FilterInputStream(new FileInputStream(tmpFile)) {
-                public int available() throws IOException {
-                    return in.available();
-                }
+                File f = tmpFile;
-                    // now it's safe to prepare temp file to be gc'ed
+                    // temp file can now safely be removed
+                    f.delete();
-
-                public synchronized void mark(int readlimit) {
-                    in.mark(readlimit);
-                }
-
-                public boolean markSupported() {
-                    return in.markSupported();
-                }
-
-                public int read(byte b[]) throws IOException {
-                    return in.read(b);
-                }
-
-                public int read(byte b[], int off, int len) throws IOException {
-                    return in.read(b, off, len);
-                }
-
-                public synchronized void reset() throws IOException {
-                    in.reset();
-                }
-
-                public long skip(long n) throws IOException {
-                    return in.skip(n);
-                }
-
-                public int read() throws IOException {
-                    return in.read();
-                }
+/*
+            ByteArrayOutputStream baos = new ByteArrayOutputStream();
+            Base64.decode(reader, baos);
+            // no need to close ByteArrayOutputStream
+            //baos.close();
+            return new BinaryValue(baos.toByteArray());
+*/

MOV26 INS26 INS40 UPD43 MOV14 UPD42 UPD42 INS21 INS32 INS42 INS42 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL85 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL85 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31