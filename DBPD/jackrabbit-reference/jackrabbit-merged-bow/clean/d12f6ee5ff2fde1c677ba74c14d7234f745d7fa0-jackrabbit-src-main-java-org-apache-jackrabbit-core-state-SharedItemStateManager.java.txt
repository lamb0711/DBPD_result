JCR-335 Deadlock caused by versioning operations within transaction


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@383935 13f79535-47bb-0310-9956-ffa450edef68

+         * Flag indicating whether we are holding write lock.
+         */
+        private boolean holdingWriteLock;
+
+        /**
+            holdingWriteLock = true;
-            boolean holdingWriteLock = true;
-
+                    holdingWriteLock = false;
-            local.disconnect();
+            try {
+                local.disconnect();
-            for (Iterator iter = shared.modifiedStates(); iter.hasNext();) {
-                ItemState state = (ItemState) iter.next();
-                try {
-                    state.copy(loadItemState(state.getId()));
-                } catch (ItemStateException e) {
+                for (Iterator iter = shared.modifiedStates(); iter.hasNext();) {
+                    ItemState state = (ItemState) iter.next();
+                    try {
+                        state.copy(loadItemState(state.getId()));
+                    } catch (ItemStateException e) {
+                        state.discard();
+                    }
+                }
+                for (Iterator iter = shared.deletedStates(); iter.hasNext();) {
+                    ItemState state = (ItemState) iter.next();
+                    try {
+                        state.copy(loadItemState(state.getId()));
+                    } catch (ItemStateException e) {
+                        state.discard();
+                    }
+                }
+                for (Iterator iter = shared.addedStates(); iter.hasNext();) {
+                    ItemState state = (ItemState) iter.next();
-            }
-            for (Iterator iter = shared.deletedStates(); iter.hasNext();) {
-                ItemState state = (ItemState) iter.next();
-                try {
-                    state.copy(loadItemState(state.getId()));
-                } catch (ItemStateException e) {
-                    state.discard();
+            } finally {
+                if (holdingWriteLock) {
+                    rwLock.writeLock().release();
+                    holdingWriteLock = false;
-            for (Iterator iter = shared.addedStates(); iter.hasNext();) {
-                ItemState state = (ItemState) iter.next();
-                state.discard();
-            }
-            rwLock.writeLock().release();

INS23 INS29 INS83 INS39 INS59 INS8 INS65 INS42 INS21 INS54 INS66 INS7 MOV8 INS8 INS42 INS9 INS25 INS42 INS8 INS21 MOV21 INS21 INS7 INS7 INS42 INS9 INS42 INS9 DEL39 DEL42 DEL9 DEL59 DEL60