work in progress

- missing escaping of item name when building uri.
- let RS parse the eventdiscovery. don't pass sessioninfo and resolvers
  to the various event related classes.
- removing of id/uri-cache entries must remove the corresponding
  entry in the other cache as well.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@472821 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.observation.DefaultEventType;
+import org.apache.jackrabbit.name.Path;
+import org.apache.jackrabbit.spi.Event;
+    private static void initMethod(DavMethod method, BatchImpl batchImpl, boolean addIfHeader) {
+        initMethod(method, batchImpl.sessionInfo,  addIfHeader);
+
+        // add batchId as separate header
+        CodedUrlHeader ch = new CodedUrlHeader(TransactionConstants.HEADER_TRANSACTIONID, batchImpl.batchId);
+        method.setRequestHeader(ch.getHeaderName(), ch.getHeaderValue());
+    }
+
-        if (href.endsWith("/")) {
+        if (href.endsWith("/") && !requestURI.endsWith("/")) {
-        String subscrId = subscribe(subscrUri, S_INFO, null, sessionInfo);
+        String subscrId = subscribe(subscrUri, S_INFO, null, sessionInfo, null);
-                    initMethod(method, batchImpl.sessionInfo, true);
-                    // add batchId as separate header
-                    CodedUrlHeader ch = new CodedUrlHeader(TransactionConstants.HEADER_TRANSACTIONID, batchImpl.batchId);
-                    method.setRequestHeader(ch.getHeaderName(), ch.getHeaderValue());
+                    initMethod(method, batchImpl, true);
+            // TODO: not correct. pass tokens in order avoid new session to be created TOBEFIXED
+            initMethod(method, sessionInfo, true);
-            subscriptionId = subscribe(rootUri, subscriptionInfo, null, sessionInfo);
+            subscriptionId = subscribe(rootUri, subscriptionInfo, null, sessionInfo, null);
-    private String subscribe(String uri, SubscriptionInfo subscriptionInfo, String subscriptionId, SessionInfo sessionInfo) throws RepositoryException {
+    private String subscribe(String uri, SubscriptionInfo subscriptionInfo,
+                             String subscriptionId, SessionInfo sessionInfo,
+                             String batchId) throws RepositoryException {
+
+            if (batchId != null) {
+                // add batchId as separate header
+                CodedUrlHeader ch = new CodedUrlHeader(TransactionConstants.HEADER_TRANSACTIONID, batchId);
+                method.setRequestHeader(ch.getHeaderName(), ch.getHeaderValue());
+            }
+
-                    bundles.add(new EventBundleImpl(it.nextElement(), uriResolver, sessionInfo));
+                    Element bundleElement = it.nextElement();
+                    String value = DomUtil.getAttribute(bundleElement, ObservationConstants.XML_EVENT_IS_LOCAL, NAMESPACE);
+                    boolean isLocal = (value != null) ? Boolean.valueOf(value).booleanValue() : false;
+
+                    bundles.add(new EventBundleImpl(buildEventList(bundleElement, sessionInfo), isLocal));
+    private List buildEventList(Element bundleElement, SessionInfo sessionInfo) {
+        List events = new ArrayList();
+        ElementIterator eventElementIterator = DomUtil.getChildren(bundleElement, ObservationConstants.XML_EVENT, ObservationConstants.NAMESPACE);
+        while (eventElementIterator.hasNext()) {
+            Element evElem = eventElementIterator.nextElement();
+            Element typeEl = DomUtil.getChildElement(evElem, ObservationConstants.XML_EVENTTYPE, ObservationConstants.NAMESPACE);
+            EventType[] et = DefaultEventType.createFromXml(typeEl);
+            if (et.length == 0 || et.length > 1) {
+                // should not occur.
+                log.error("Ambigous event type definition: expected one single eventtype.");
+                continue;
+            }
+
+            String href = DomUtil.getChildTextTrim(evElem, DavConstants.XML_HREF, DavConstants.NAMESPACE);
+
+            int type;
+            Path eventPath;
+            try {
+                type = SubscriptionImpl.getJcrEventType(et[0]);
+                eventPath = uriResolver.getQPath(href, sessionInfo);
+            } catch (DavException e) {
+                // should not occur
+                log.error("Internal error while building Event", e);
+                continue;
+            } catch (RepositoryException e) {
+                // should not occur
+                log.error("Internal error while building Event", e);
+                continue;
+            }
+
+            ItemId eventId = null;
+            try {
+                if (type == Event.NODE_ADDED || type == Event.NODE_REMOVED) {
+                    eventId = uriResolver.getNodeId(href, sessionInfo);
+                } else {
+                    eventId = uriResolver.getPropertyId(href, sessionInfo);
+                }
+            } catch (RepositoryException e) {
+                log.warn("Unable to build event itemId: ", e);
+            }
+            String parentHref = Text.getRelativeParent(href, 1, true);
+            NodeId parentId = null;
+            try {
+                parentId = uriResolver.getNodeId(parentHref, sessionInfo);
+            } catch (RepositoryException e) {
+                log.warn("Unable to build event parentId: ", e);
+            }
+
+            events.add(new EventImpl(eventId, eventPath, parentId, type, evElem));
+        }
+
+        return events;
+    }
+
-                initMethod(method, sessionInfo, false);
+                initMethod(method, sessionInfo, true);
-                subscriptionId = subscribe(subscrUri, S_INFO, null, sessionInfo);
+                subscriptionId = subscribe(subscrUri, S_INFO, null, sessionInfo, batchId);
-                // todo: check if 'initmethod' would work (ev. conflict with TxId header).
-                String[] locktokens = sessionInfo.getLockTokens();
-                if (locktokens != null && locktokens.length > 0) {
-                    IfHeader ifH = new IfHeader(locktokens);
-                    method.setRequestHeader(ifH.getHeaderName(), ifH.getHeaderValue());
-                }
+                initMethod(method, sessionInfo, true);
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS44 INS83 INS43 INS42 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS39 INS42 INS21 MOV60 MOV21 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS61 INS41 INS42 INS42 INS32 INS27 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS40 INS42 MOV32 INS38 INS21 INS25 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS60 INS60 INS60 INS25 INS60 INS60 INS60 INS54 INS60 INS54 INS60 INS60 INS54 INS21 INS32 INS33 INS32 INS27 INS8 INS43 INS42 INS42 INS42 INS40 INS40 INS43 INS59 INS43 INS59 INS5 INS59 INS27 INS8 INS43 INS59 INS39 INS59 INS43 INS59 INS8 INS12 INS12 INS43 INS59 INS8 INS12 MOV43 INS59 INS43 INS59 INS8 INS12 INS32 MOV21 INS42 INS42 INS45 INS42 INS42 INS42 INS9 INS42 INS33 INS60 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS27 INS27 INS21 INS18 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS21 INS44 INS8 INS44 INS8 INS42 INS42 INS33 INS25 INS44 INS8 INS42 INS32 INS42 INS42 INS33 INS21 INS44 INS8 INS42 INS42 INS14 INS33 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS40 INS34 INS40 INS34 INS32 INS42 INS42 INS42 INS40 INS40 INS7 INS7 INS43 INS42 INS21 INS18 INS43 INS42 INS21 INS18 INS27 INS8 INS8 INS43 INS42 INS21 INS42 INS42 INS42 INS34 INS9 INS7 INS43 INS42 INS21 INS43 INS42 INS42 INS42 INS42 INS42 UPD9 UPD42 UPD42 UPD42 MOV42 INS9 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS60 INS60 INS60 INS42 INS42 INS45 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS27 INS27 INS21 INS21 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS39 INS59 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS40 INS7 INS7 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 INS16 INS42 INS34 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS36 INS32 INS9 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL8 DEL25