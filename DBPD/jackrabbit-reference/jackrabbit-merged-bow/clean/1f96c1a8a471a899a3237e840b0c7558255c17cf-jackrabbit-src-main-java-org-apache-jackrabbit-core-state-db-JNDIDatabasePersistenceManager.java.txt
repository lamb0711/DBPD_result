JCR-595 Refactoring of the Persistence Managers (+changing some eol-styles)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@467925 13f79535-47bb-0310-9956-ffa450edef68

-import java.sql.Connection;
-import java.sql.SQLException;
-
-import javax.naming.InitialContext;
-import javax.naming.NamingException;
-import javax.sql.DataSource;
-
- * Database persistence manager that uses JNDI to acquire the database
- * connection. The JNDI location of the {@link DataSource} to be used in
- * given as the <code>dataSourceLocation</code> configuration property.
- * See the {@link SimpleDbPersistenceManager} for more configuration
- * details.
- * <p>
- * <strong>WARNING:</strong> The acquired database connection is kept
- * for the entire lifetime of the persistence manager instance. The
- * configured data source should be prepared for this.
- */
-public class JNDIDatabasePersistenceManager extends DatabasePersistenceManager {
-
-    /**
-     * JNDI location of the data source used to acquire database connections.
-     */
-    private String dataSourceLocation;
-
-    //----------------------------------------------------< setters & getters >
-
-    /**
-     * Returns the JNDI location of the data source.
-     *
-     * @return data source location
-     */
-    public String getDataSourceLocation() {
-        return dataSourceLocation;
-    }
-
-    /**
-     * Sets the JNDI location of the data source.
-     *
-     * @param dataSourceLocation data source location
-     */
-    public void setDataSourceLocation(String dataSourceLocation) {
-        this.dataSourceLocation = dataSourceLocation;
-    }
-
-    //-------------------------------------------< DatabasePersistenceManager >
-
-    /**
-     * Returns a JDBC connection from a {@link DataSource} acquired from JNDI
-     * with the configured data source location.
-     *
-     * @return new database connection
-     * @throws NamingException if the given data source location does not exist
-     * @throws SQLException if a database access error occurs
-     * @see DatabasePersistenceManager#getConnection()
-     */
-    protected Connection getConnection() throws NamingException, SQLException {
-        InitialContext ic = new InitialContext();
-        DataSource dataSource = (DataSource) ic.lookup(dataSourceLocation);
-        return dataSource.getConnection();
-    }
-
-}
+ * Legacy class kept for backward compatibility reasons.
+  * @deprecated use {@link org.apache.jackrabbit.core.persistence.db.JNDIDatabasePersistenceManager}
+  *             instead.
+  */
+public class JNDIDatabasePersistenceManager
+        extends org.apache.jackrabbit.core.persistence.db.JNDIDatabasePersistenceManager {
+}

UPD43 INS65 INS65 INS40 UPD66 MOV66 UPD66 MOV66 MOV65 UPD66 MOV66 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL66 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL42 DEL65 DEL66 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31