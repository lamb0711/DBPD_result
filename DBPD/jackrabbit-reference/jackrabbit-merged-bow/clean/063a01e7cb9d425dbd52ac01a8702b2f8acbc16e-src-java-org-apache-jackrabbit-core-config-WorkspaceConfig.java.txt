- refactored WorkspaceConfig and cleaned-up per-workspace objects 
  held in RepositoryImpl
- added PersistenceManagerConfig, RepositoryImpl.WorkspaceInfo, PMContext
- changed PersistenceManager initialization

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@106580 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.collections.BeanMap;
-import org.apache.jackrabbit.core.state.PersistenceManager;
-import java.util.Iterator;
-import java.util.List;
-     * persistence manager of the workspace
+     * configuration for the persistence manager
-    private PersistenceManager persistMgr;
+    private PersistenceManagerConfig pmConfig;
-     * configuration for the search manager.
+     * configuration for the search manager
-        Element fsConfig = wspElem.getChild(FILE_SYSTEM_ELEMENT);
-        wspFS = createFileSystem(fsConfig, vars);
+        Element fsElem = wspElem.getChild(FILE_SYSTEM_ELEMENT);
+        wspFS = createFileSystem(fsElem, vars);
-        // search config
+        // persistence manager config
+        Element pmElem = wspElem.getChild(PERSISTENCE_MANAGER_ELEMENT);
+        pmConfig = new PersistenceManagerConfig(pmElem, vars);
+
+        // search config (optional)
-
-        // persistence manager
-        String className = wspElem.getChild(PERSISTENCE_MANAGER_ELEMENT).getAttributeValue(CLASS_ATTRIB);
-        // read the PersistenceManager properties from the
-        // param elements in the config
-        HashMap params = new HashMap();
-        List paramList = wspElem.getChild(PERSISTENCE_MANAGER_ELEMENT).getChildren(PARAM_ELEMENT);
-        for (Iterator i = paramList.iterator(); i.hasNext();) {
-            Element param = (Element) i.next();
-            String paramName = param.getAttributeValue(NAME_ATTRIB);
-            String paramValue = param.getAttributeValue(VALUE_ATTRIB);
-            // replace variables in param value
-            params.put(paramName, replaceVars(paramValue, vars));
-        }
-        // finally do create the persistence manager
-        try {
-            Class c = Class.forName(className);
-            persistMgr = (PersistenceManager) c.newInstance();
-            // set the properties of the persistence manager object from the
-            // param hashmap
-            BeanMap bm = new BeanMap(persistMgr);
-            Iterator iter = params.keySet().iterator();
-            while (iter.hasNext()) {
-                Object name = iter.next();
-                Object value = params.get(name);
-                bm.put(name, value);
-            }
-            persistMgr.init(this);
-        } catch (Exception e) {
-            log.error("Cannot instantiate implementing class " + className, e);
-            throw new RepositoryException("Cannot instantiate implementing class " + className, e);
-        }
-     * Returns the workspace's persistence manager.
+     * Returns the configuration of the persistence manager.
-     * @return the persistence manager
+     * @return the <code>PersistenceManagerConfig</code> for this workspace
-    public PersistenceManager getPersistenceManager() {
-        return persistMgr;
+    public PersistenceManagerConfig getPersistenceManagerConfig() {
+        return pmConfig;
-     * @return the <code>SearchConfig</code> for this workspace.
+     * @return the <code>SearchConfig</code> for this workspace

UPD43 MOV60 UPD43 UPD42 UPD42 UPD42 MOV21 UPD42 UPD66 UPD66 UPD43 UPD66 UPD66 UPD42 UPD66 UPD42 UPD42 UPD42 MOV32 UPD42 INS14 UPD42 INS43 INS42 INS42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL43 DEL42 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL61 DEL42 DEL42 DEL52 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL42 DEL32 DEL21 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54