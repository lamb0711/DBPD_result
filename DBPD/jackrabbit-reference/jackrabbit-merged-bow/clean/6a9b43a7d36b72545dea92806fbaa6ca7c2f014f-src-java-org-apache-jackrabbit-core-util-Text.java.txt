- minor path/qname adjustments

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125923 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+    /**
+     * returns an array of strings decomposed of the original string, split at
+     * every occurance of 'ch'. if 2 'ch' follow each other with no intermediate
+     * characters, empty "" entries are avoided.
+     *
+     * @param str the string to decompose
+     * @param ch the character to use a split pattern
+     * @return an array of strings
+     */
+    public static String[] explode(String str, int ch) {
+        return explode(str,ch,false);
+    }
+
+    /**
+     * returns an array of strings decomposed of the original string, split at
+     * every occurance of 'ch'.
+     * @param str the string to decompose
+     * @param ch the character to use a split pattern
+     * @param respectEmpty if <code>true</code>, empty elements are generated
+     * @return an array of strings
+     */
+    public static String[] explode(String str, int ch, boolean respectEmpty) {
+        if (str == null || str.length()==0) {
+            return new String[0];
+        }
+
+        ArrayList strings = new ArrayList();
+        int pos     = 0;
+        int lastpos = 0;
+
+        // add snipples
+        while ((pos = str.indexOf(ch, lastpos)) >= 0) {
+            if (pos-lastpos>0 || respectEmpty)
+                strings.add(str.substring(lastpos, pos));
+            lastpos = pos+1;
+        }
+        // add rest
+        if (lastpos < str.length()) {
+            strings.add(str.substring(lastpos));
+        } else if (respectEmpty && lastpos==str.length()) {
+            strings.add("");
+        }
+
+        // return stringarray
+        return (String[]) strings.toArray(new String[strings.size()]);
+    }
+

INS26 INS40 INS31 INS31 INS29 INS83 INS83 INS5 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS5 INS42 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS43 INS85 INS43 INS42 INS39 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS43 INS85 INS43 INS42 INS39 INS42 INS39 INS42 INS25 INS60 INS60 INS60 INS61 INS25 INS41 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS27 INS8 INS43 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS27 INS8 INS25 INS11 INS42 INS42 INS42 INS9 INS27 INS27 INS41 INS42 INS42 INS14 INS42 INS34 INS42 INS34 INS36 INS34 INS25 INS21 INS42 INS32 INS21 INS27 INS8 INS5 INS32 INS42 INS33 INS32 INS34 INS3 INS43 INS7 INS27 INS21 INS7 INS42 INS42 INS32 INS42 INS27 INS21 INS43 INS85 INS42 INS42 INS3 INS42 INS42 INS5 INS34 INS42 INS42 INS32 INS27 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS5 INS32 INS43 INS85 INS42 INS42 INS42 INS42 INS27 INS34 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42