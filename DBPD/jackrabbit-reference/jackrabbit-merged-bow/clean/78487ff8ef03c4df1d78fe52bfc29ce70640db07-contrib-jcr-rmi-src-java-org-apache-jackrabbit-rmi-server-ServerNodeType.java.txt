JCR-RMI: Use remote iterators instead of arrays to avoid memory and network problems with large result sets.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@365458 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.nodetype.NodeDefinition;
+    /**
+     * Utility method for creating an array of remote references for
+     * local node definitions. The remote references are created using the
+     * remote adapter factory.
+     * <p>
+     * A <code>null</code> input is treated as an empty array.
+     *
+     * @param defs local node definition array
+     * @return remote node definition array
+     * @throws RemoteException on RMI errors
+     */
+    private RemoteNodeDefinition[] getRemoteNodeDefArray(NodeDefinition[] defs)
+            throws RemoteException {
+        if (defs != null) {
+            RemoteNodeDefinition[] remotes =
+                new RemoteNodeDefinition[defs.length];
+            for (int i = 0; i < defs.length; i++) {
+                remotes[i] = getFactory().getRemoteNodeDefinition(defs[i]);
+            }
+            return remotes;
+        } else {
+            return new RemoteNodeDefinition[0]; // for safety
+        }
+    }
+
+    /**
+     * Utility method for creating an array of remote references for
+     * local property definitions. The remote references are created using the
+     * remote adapter factory.
+     * <p>
+     * A <code>null</code> input is treated as an empty array.
+     *
+     * @param defs local property definition array
+     * @return remote property definition array
+     * @throws RemoteException on RMI errors
+     */
+    private RemotePropertyDefinition[] getRemotePropertyDefArray(
+            PropertyDefinition[] defs) throws RemoteException {
+        if (defs != null) {
+            RemotePropertyDefinition[] remotes =
+                new RemotePropertyDefinition[defs.length];
+            for (int i = 0; i < defs.length; i++) {
+                remotes[i] = getFactory().getRemotePropertyDefinition(defs[i]);
+            }
+            return remotes;
+        } else {
+            return new RemotePropertyDefinition[0]; // for safety
+        }
+    }
+
+

INS26 INS40 INS31 INS31 INS29 INS83 INS5 INS42 INS44 INS43 INS8 INS29 INS83 INS5 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS42 INS25 INS65 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS42 INS25 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS85 INS27 INS8 INS8 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS85 INS27 INS8 INS8 INS42 INS42 INS33 INS60 INS24 INS41 INS41 INS42 INS42 INS33 INS60 INS24 INS41 INS41 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS3 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS3 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS5 INS34 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS5 INS34 INS42 INS5 INS40 INS42 INS34 INS7 INS43 INS85 INS42 INS5 INS40 INS42 INS34 INS7 INS43 INS85 INS43 INS85 INS2 INS32 INS42 INS43 INS85 INS2 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42