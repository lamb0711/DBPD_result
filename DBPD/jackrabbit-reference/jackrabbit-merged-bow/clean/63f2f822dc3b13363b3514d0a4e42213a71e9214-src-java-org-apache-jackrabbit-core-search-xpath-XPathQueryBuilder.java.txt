grouped frequently used constants scattered around in various source files into Constants interface

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@153503 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.search.QueryRootNode;
-import org.apache.jackrabbit.core.search.PathQueryNode;
-import org.apache.jackrabbit.core.search.LocationStepQueryNode;
-import org.apache.jackrabbit.core.search.QueryNode;
-import org.apache.jackrabbit.core.search.AndQueryNode;
-import org.apache.jackrabbit.core.search.NAryQueryNode;
-import org.apache.jackrabbit.core.search.OrQueryNode;
-import org.apache.jackrabbit.core.search.RelationQueryNode;
-import org.apache.jackrabbit.core.search.NotQueryNode;
-import org.apache.jackrabbit.core.search.TextsearchQueryNode;
-import org.apache.jackrabbit.core.search.NodeTypeQueryNode;
-import org.apache.jackrabbit.core.search.OrderQueryNode;
-import org.apache.jackrabbit.core.NamespaceResolver;
-import org.apache.jackrabbit.core.QName;
-import org.apache.jackrabbit.core.SearchManager;
-import org.apache.jackrabbit.core.NoPrefixDeclaredException;
-import org.apache.jackrabbit.core.IllegalNameException;
-import org.apache.jackrabbit.core.UnknownPrefixException;
+import org.apache.jackrabbit.core.*;
+import org.apache.jackrabbit.core.search.*;
-import org.apache.jackrabbit.core.NamespaceRegistryImpl;
-import org.apache.jackrabbit.core.nodetype.NodeTypeRegistry;
-import java.util.List;
+import java.util.List;
-    /** QName for 'fn:not' */
+    /**
+     * QName for 'fn:not'
+     */
-    /** QName for 'not' as defined in XPath 1.0 (no prefix) */
+    /**
+     * QName for 'not' as defined in XPath 1.0 (no prefix)
+     */
-    /** QName for xs:dateTime */
+    /**
+     * QName for xs:dateTime
+     */
-    /** QName for jcrfn:like */
+    /**
+     * QName for jcrfn:like
+     */
-    /** QName for jcrfn:contains */
+    /**
+     * QName for jcrfn:contains
+     */
-    /** QName for jcr:root */
+    /**
+     * QName for jcr:root
+     */
-    /** String constant for operator 'eq' */
+    /**
+     * String constant for operator 'eq'
+     */
-    /** String constant for operator 'ne' */
+    /**
+     * String constant for operator 'ne'
+     */
-    /** String constant for operator 'gt' */
+    /**
+     * String constant for operator 'gt'
+     */
-    /** String constant for operator 'ge' */
+    /**
+     * String constant for operator 'ge'
+     */
-    /** String constant for operator 'lt' */
+    /**
+     * String constant for operator 'lt'
+     */
-    /** String constant for operator 'le' */
+    /**
+     * String constant for operator 'le'
+     */
-    /** String constant for operator '=' */
+    /**
+     * String constant for operator '='
+     */
-    /** String constant for operator '!=' */
+    /**
+     * String constant for operator '!='
+     */
-    /** String constant for operator '>' */
+    /**
+     * String constant for operator '>'
+     */
-    /** String constant for operator '>=' */
+    /**
+     * String constant for operator '>='
+     */
-    /** String constant for operator '<' */
+    /**
+     * String constant for operator '<'
+     */
-    /** String constant for operator '<=' */
+    /**
+     * String constant for operator '<='
+     */
-    /** The root <code>QueryNode</code> */
+    /**
+     * The root <code>QueryNode</code>
+     */
-    /** The {@link org.apache.jackrabbit.core.NamespaceResolver} in use */
+    /**
+     * The {@link org.apache.jackrabbit.core.NamespaceResolver} in use
+     */
-    /** List of exceptions that are created while building the query tree */
+    /**
+     * List of exceptions that are created while building the query tree
+     */
+     *
-     * @param resolver the namespace resolver to use.
+     * @param resolver  the namespace resolver to use.
+     *
-     * @param resolver the namespace resolver to use.
+     * @param resolver  the namespace resolver to use.
-     * @param root the root of the query node tree.
+     *
+     * @param root     the root of the query node tree.
-     *   into a String representation due to restrictions in XPath.
+     *                               into a String representation due to restrictions in XPath.
+     *
+     *
-     *  <code>XPathVisitor</code>.
+     *             <code>XPathVisitor</code>.
-     *  <code>data</code>.
+     *         <code>data</code>.
-                        && ((SimpleNode) node.jjtGetChild(0)) .getId() == JJTDESCENDING) {
+                        && ((SimpleNode) node.jjtGetChild(0)).getId() == JJTDESCENDING) {
-     * @param node the current node in the xpath syntax tree.
+     *
+     * @param node   the current node in the xpath syntax tree.
-     * @param node the current node in the xpath syntax tree.
+     *
+     * @param node      the current node in the xpath syntax tree.
-     *   <code>RelationQueryNode</code>.
+     *                  <code>RelationQueryNode</code>.
-     * @param node a comparison expression node.
+     *
+     * @param node      a comparison expression node.
-        if (rqn.getProperty().equals(NodeTypeRegistry.JCR_PRIMARY_TYPE)) {
+        if (rqn.getProperty().equals(Constants.JCR_PRIMARYTYPE)) {
+     *
-     * @param node must be of type string, decimal, double or integer; otherwise
-     *   an InvalidQueryException is added to {@link #exceptions}.
+     *
+     * @param node      must be of type string, decimal, double or integer; otherwise
+     *                  an InvalidQueryException is added to {@link #exceptions}.
-     * @param node the function node from the xpath tree.
+     *
+     * @param node      the function node from the xpath tree.
+     *

MOV26 UPD40 UPD40 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26