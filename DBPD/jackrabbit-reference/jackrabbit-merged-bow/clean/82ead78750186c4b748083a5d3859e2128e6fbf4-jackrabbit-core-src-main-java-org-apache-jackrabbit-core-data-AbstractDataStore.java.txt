JCR-3534: Efficient copying of binaries across repositories with the same data store

Move the getReference() method from DataIdentifier to DataRecord to make identifier handling easier

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1481964 13f79535-47bb-0310-9956-ffa450edef68

-        if (secret != null) {
-            int colon = reference.indexOf(':');
-            if (colon != -1) {
-                String identifier = reference.substring(0, colon);
-                String signature = reference.substring(colon + 1);
-                if (signature.equals(sign(identifier))) {
-                    return new DataIdentifier(identifier, reference);
-                }
+        int colon = reference.indexOf(':');
+        if (colon != -1) {
+            DataIdentifier identifier =
+                    new DataIdentifier(reference.substring(0, colon));
+            if (reference.equals(getReferenceFromIdentifier(identifier))) {
+                return identifier;
-    protected DataIdentifier createIdentifier(final String identifier) {
+    protected String getReferenceFromIdentifier(DataIdentifier identifier) {
-            return new DataIdentifier(identifier) {
-                public String getReference() {
-                    return identifier + ':' + sign(identifier);
-                }
-            };
-        } else {
-            return new DataIdentifier(identifier);
-        }
-    }
+            try {
+                String id = identifier.toString();
-    private String sign(String identifier) {
-        try {
-            Mac mac = Mac.getInstance(ALGORITHM);
-            mac.init(new SecretKeySpec(secret.getBytes("UTF-8"), ALGORITHM));
-            return encodeHexString(mac.doFinal(identifier.getBytes("UTF-8")));
-        } catch (Exception e) {
-            // TODO: log a warning about this exception
-            return null;
+                Mac mac = Mac.getInstance(ALGORITHM);
+                mac.init(new SecretKeySpec(secret.getBytes("UTF-8"), ALGORITHM));
+                byte[] hash = mac.doFinal(id.getBytes("UTF-8"));
+
+                return id + ':' + encodeHexString(hash);
+            } catch (Exception e) {
+                // TODO: log a warning about this exception
+            }
+        return null;

MOV8 UPD83 UPD42 INS8 MOV41 MOV43 INS25 MOV41 MOV27 MOV8 UPD43 MOV42 INS14 UPD42 INS60 INS60 INS41 MOV43 MOV32 UPD42 INS42 MOV43 INS59 INS5 INS59 INS27 INS42 INS32 INS39 INS85 INS42 INS32 INS42 INS13 INS32 INS42 UPD42 MOV42 MOV42 MOV42 MOV32 INS42 INS42 UPD42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL27 DEL32 DEL59 DEL60 DEL42 DEL42 DEL14 DEL42 DEL33 DEL27 DEL25 DEL8 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL13 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL1 DEL14 DEL41 DEL8 DEL42 DEL14 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL32 DEL32 DEL41