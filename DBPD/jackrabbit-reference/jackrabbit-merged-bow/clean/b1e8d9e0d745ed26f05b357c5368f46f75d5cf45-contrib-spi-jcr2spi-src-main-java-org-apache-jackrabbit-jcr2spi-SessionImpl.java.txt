work in progress

- replace ItemImpl by Item in ItemManager interface and adjust
  usages.
- change all setters on ItemState and derived classes from public to
  package private
- NodeState: use collection return value instead of set/list whereever possible
- WorkspaceManager: put ItemStateFactory to a separate class and
  remove unused inner class NodeReferenceImpl 
- add methods to NodeState/PropertyState that avoids return a null
  QItemDefinition and remove corresponding methods from NodeTypeManagerImpl
- remove ItemDefinitionManager.
- VersionHistoryImpl: add safety check if cne for root version really exists
- Fix ImporterImpl: ItemState.getDefinition() may return 'null' value.
  use method instead, that sets the definition if it is still missing.
- javadoc and code formatting


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430031 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.nodetype.ItemDefinitionManager;
+import org.apache.jackrabbit.jcr2spi.nodetype.NodeTypeRegistry;
+import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-        NodeImpl node = getNodeById(getIdFactory().createNodeId(uuid));
-        if (node.isNodeType(QName.MIX_REFERENCEABLE)) {
+        Node node = getNodeById(getIdFactory().createNodeId(uuid));
+        if (node instanceof NodeImpl && ((NodeImpl)node).isNodeType(QName.MIX_REFERENCEABLE)) {
+            // fall back
+            try {
+                String mixReferenceable = NameFormat.format(QName.MIX_REFERENCEABLE, getNamespaceResolver());
+                if (node.isNodeType(mixReferenceable)) {
+                    return node;
+                }
+            } catch (NoPrefixDeclaredException e) {
+                // should not occur.
+                throw new RepositoryException(e);
+            }
-    private NodeImpl getNodeById(NodeId id) throws ItemNotFoundException, RepositoryException {
+    private Node getNodeById(NodeId id) throws ItemNotFoundException, RepositoryException {
-            return (NodeImpl) getItemManager().getItem(state);
+            Item item = getItemManager().getItem(state);
+            if (item.isNode()) {
+                return (Node) item;
+            } else {
+                log.error("NodeId '" + id + " does not point to a Node");
+                throw new ItemNotFoundException(id.toString());
+            }
-    public ItemDefinitionManager getItemDefinitionManager() {
-        return ntManager;
+    public NodeTypeRegistry getNodeTypeRegistry() {
+        return workspace.getNodeTypeRegistry();

INS26 INS26 UPD40 INS40 INS40 UPD43 UPD43 UPD42 UPD42 UPD42 INS43 INS27 INS8 INS32 INS42 INS62 INS32 INS54 MOV53 INS60 INS25 INS42 INS42 INS42 INS43 INS36 MOV42 MOV40 INS8 INS12 INS43 INS59 INS32 INS8 INS8 INS42 INS11 INS60 INS25 INS44 INS8 INS42 INS42 MOV32 INS42 INS42 MOV41 INS21 INS53 MOV43 INS42 INS43 INS59 INS32 MOV8 INS43 INS42 INS53 INS32 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS41 INS42 INS14 UPD43 INS42 INS42 INS42 INS27 INS43 INS32 INS42 INS42 INS40 INS32 INS42 INS43 INS42 UPD42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL42