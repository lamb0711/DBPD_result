JCR-1849: EventJournal

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@713964 13f79535-47bb-0310-9956-ffa450edef68

-        // create NodeType instances from names
-        NodeTypeImpl[] nodeTypes;
-        if (nodeTypeName == null) {
-            nodeTypes = null;
-        } else {
-            NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
-            nodeTypes = new NodeTypeImpl[nodeTypeName.length];
-            for (int i = 0; i < nodeTypes.length; i++) {
-                nodeTypes[i] = (NodeTypeImpl) ntMgr.getNodeType(nodeTypeName[i]);
-            }
-        }
-
-        Path path;
-        try {
-            path = session.getQPath(absPath).getNormalizedPath();
-        } catch (NameException e) {
-            String msg = "invalid path syntax: " + absPath;
-            log.debug(msg);
-            throw new RepositoryException(msg, e);
-        }
-        NodeId[] ids = null;
-        if (uuid != null) {
-            ids = new NodeId[uuid.length];
-            for (int i = 0; i < uuid.length; i++) {
-                ids[i] = NodeId.valueOf(uuid[i]);
-            }
-        }
-        EventFilter filter = new EventFilter(itemMgr,
-                session,
-                eventTypes,
-                path,
-                isDeep,
-                ids,
-                nodeTypes,
-                noLocal);
+        EventFilter filter = createEventFilter(eventTypes, absPath,
+                isDeep, uuid, nodeTypeName, noLocal);
+    /**
+     * Creates a new event filter with the given restrictions.
+     *
+     * @param eventTypes A combination of one or more event type constants encoded as a bitmask.
+     * @param absPath an absolute path.
+     * @param isDeep a <code>boolean</code>.
+     * @param uuid array of UUIDs.
+     * @param nodeTypeName array of node type names.
+     * @param noLocal a <code>boolean</code>.
+     * @return the event filter with the given restrictions.
+     * @throws RepositoryException if an error occurs.
+     */
+    public EventFilter createEventFilter(int eventTypes,
+                                         String absPath,
+                                         boolean isDeep,
+                                         String[] uuid,
+                                         String[] nodeTypeName,
+                                         boolean noLocal)
+            throws RepositoryException {
+        // create NodeType instances from names
+        NodeTypeImpl[] nodeTypes;
+        if (nodeTypeName == null) {
+            nodeTypes = null;
+        } else {
+            NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+            nodeTypes = new NodeTypeImpl[nodeTypeName.length];
+            for (int i = 0; i < nodeTypes.length; i++) {
+                nodeTypes[i] = (NodeTypeImpl) ntMgr.getNodeType(nodeTypeName[i]);
+            }
+        }
+
+        Path path;
+        try {
+            path = session.getQPath(absPath).getNormalizedPath();
+        } catch (NameException e) {
+            String msg = "invalid path syntax: " + absPath;
+            log.debug(msg);
+            throw new RepositoryException(msg, e);
+        }
+        if (!path.isAbsolute()) {
+            throw new RepositoryException("absPath must be absolute");
+        }
+        NodeId[] ids = null;
+        if (uuid != null) {
+            ids = new NodeId[uuid.length];
+            for (int i = 0; i < uuid.length; i++) {
+                ids[i] = NodeId.valueOf(uuid[i]);
+            }
+        }
+        // create filter
+        return new EventFilter(itemMgr, session, eventTypes, path,
+                isDeep, ids, nodeTypes, noLocal);
+    }
+

MOV31 INS31 MOV29 INS83 INS39 INS42 MOV44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS29 MOV43 UPD42 INS39 INS42 INS43 INS42 INS39 INS42 INS5 INS42 INS5 INS42 INS39 INS42 INS42 INS60 MOV21 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS25 INS41 INS42 INS43 INS85 INS43 INS85 INS43 INS59 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS38 INS8 MOV14 INS42 INS42 INS42 INS42 INS32 INS32 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS45 INS42 DEL39 DEL42 DEL59 DEL60