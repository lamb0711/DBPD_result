JCR-2892 Large fetch sizes have potentially deleterious effects on VM memory requirements when using Oracle

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1182667 13f79535-47bb-0310-9956-ffa450edef68

+    
+    /**
+     * The default fetchSize is '0'. This means the fetchSize Hint will be ignored 
+     */
+    private int fetchSize = 0;
+     * @param dataSrc the {@link DataSource} on which this instance acts
+     * @param checkWithUserName whether the username is to be used for the {@link #tableExists(String)} method
+     * @param block whether the helper should transparently block on DB connection loss (otherwise it throws exceptions)
+     * @param fetchSize the fetchSize that will be used per default
+     */
+    protected ConnectionHelper(DataSource dataSrc, boolean checkWithUserName, boolean block, int fetchSize) {
+        dataSource = dataSrc;
+        checkTablesWithUserName = checkWithUserName;
+        blockOnConnectionLoss = block;
+        this.fetchSize = fetchSize;
+    }
+
+    /**
-     * @param returnGeneratedKeys whether generated keys should be returned
-            int fetchSize = 10000;
-            if (0 < maxRows && maxRows < fetchSize) {
-                fetchSize = maxRows; // JCR-3090
+            int currentFetchSize = this.fetchSize;
+            if (0 < maxRows && maxRows < currentFetchSize) {
+            	currentFetchSize = maxRows; // JCR-3090
-            stmt.setFetchSize(fetchSize);
+            stmt.setFetchSize(currentFetchSize);
-    /**
+	/**

INS23 INS31 INS29 INS83 INS39 INS59 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS42 INS34 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS21 INS21 INS21 INS21 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS7 INS7 INS7 INS7 INS42 INS68 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS69 INS52 INS42 INS43 INS42 INS22 UPD42 INS42 INS52 INS42 UPD42 UPD42 DEL42 DEL66 DEL65 DEL42 DEL34