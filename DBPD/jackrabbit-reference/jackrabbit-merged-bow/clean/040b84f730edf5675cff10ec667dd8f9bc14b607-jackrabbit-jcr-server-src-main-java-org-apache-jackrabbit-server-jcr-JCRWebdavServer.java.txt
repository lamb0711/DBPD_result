JCR-3027 - apply modified patch (original author: chad davis)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1151397 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
-import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
-    private final SessionCache cache = new SessionCache();
+    private final SessionCache cache;
+        cache = new SessionCache();
+    }
+
+    /**
+     * Creates a new JCRWebdavServer that operates on the given repository.
+     *
+     * @param repository
+     * @param concurrencyLevel 
+     */
+    public JCRWebdavServer(Repository repository, SessionProvider sessionProvider, int concurrencyLevel) {
+        this.repository = repository;
+        this.sessionProvider = sessionProvider;
+        cache = new SessionCache(concurrencyLevel);
-        private Map<DavSession, Set<Object>> sessionMap = new HashMap<DavSession, Set<Object>>();
-        private Map<Object, DavSession> referenceToSessionMap = new HashMap<Object, DavSession>();
+        private static final int CONCURRENCY_LEVEL_DEFAULT = 50;
+        private static final int INITIAL_CAPACITY = 50;
+    	private static final int INITIAL_CAPACITY_REF_TO_SESSION = 3 * INITIAL_CAPACITY;
+    	
+        private ConcurrentMap<DavSession, Set<Object>> sessionMap;
+        private ConcurrentMap<Object, DavSession> referenceToSessionMap;
+         * Create a new session cache with the {@link #CONCURRENCY_LEVEL_DEFAULT default concurrency level}.
+         */
+        private SessionCache() {
+            this(CONCURRENCY_LEVEL_DEFAULT);
+        }
+
+        /**
+         * Create a new session cache with the specified the level of concurrency
+         * for this server.
+         * 
+         * @param cacheConcurrencyLevel A positive int value specifying the
+         * concurrency level of the server.
+         */
+        private SessionCache(int cacheConcurrencyLevel) {
+        	sessionMap = new ConcurrentHashMap<DavSession, Set<Object>>(INITIAL_CAPACITY, .75f, cacheConcurrencyLevel);
+        	referenceToSessionMap = new ConcurrentHashMap<Object, DavSession>(INITIAL_CAPACITY_REF_TO_SESSION, .75f, cacheConcurrencyLevel);
+        }
+        
+        /**
+                
+                // TODO: review again if using ConcurrentMap#putIfAbsent() was more appropriate.

MOV26 MOV26 UPD40 UPD40 INS31 INS29 INS83 INS42 INS44 INS44 INS44 INS8 INS23 INS23 INS23 INS31 INS31 INS21 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS21 INS21 INS21 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 UPD74 MOV74 UPD74 MOV74 INS29 INS83 INS42 INS8 INS29 INS83 INS42 INS44 INS8 INS7 INS66 INS42 INS42 INS66 INS42 INS42 INS7 INS7 INS7 INS42 INS34 INS42 INS34 INS42 INS27 UPD43 UPD43 INS65 INS17 INS65 INS65 INS39 INS42 INS21 INS21 INS42 MOV14 INS22 INS42 INS22 INS42 INS42 INS14 INS34 INS42 UPD42 UPD42 INS66 INS65 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS7 INS7 INS52 INS42 INS52 INS42 INS43 INS42 INS67 INS66 INS42 INS14 INS42 INS14 INS42 INS42 UPD74 MOV74 INS42 INS34 INS42 UPD74 MOV74 INS42 INS34 INS42 UPD43 UPD43 UPD42 UPD42 DEL14 DEL14