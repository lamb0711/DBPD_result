JCR-1156 DatabaseJournal refactoring for subclassing capability
  - Missing license in OracleDatabaseJournal.java


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@581150 13f79535-47bb-0310-9956-ffa450edef68

+     * Default journal table name, used to check schema completeness.
+     */
+    private static final String DEFAULT_JOURNAL_TABLE = "JOURNAL";
+
+    /**
-     * Schema object prefix, bean property.
-     */
-    protected String schemaObjectPrefix;
-
-    /**
+     * SQL statement returning all revisions within a range.
+     */
+    protected String selectRevisionsStmtSQL;
+
+    /**
+     * SQL statement updating the global revision.
+     */
+    protected String updateGlobalStmtSQL;
+
+    /**
+     * SQL statement returning the global revision.
+     */
+    protected String selectGlobalStmtSQL;
+
+    /**
+     * SQL statement appending a new record.
+     */
+    protected String insertRevisionStmtSQL;
+
+    /**
+     * Schema object prefix, bean property.
+     */
+    protected String schemaObjectPrefix;
+
+    /**
+            buildSQLStatements();
-        DatabaseMetaData metaData = connection.getMetaData();
-        String tableName = schemaObjectPrefix + "JOURNAL";
-        if (metaData.storesLowerCaseIdentifiers()) {
-            tableName = tableName.toLowerCase();
-        } else if (metaData.storesUpperCaseIdentifiers()) {
-            tableName = tableName.toUpperCase();
-        }
-
-        ResultSet rs = metaData.getTables(null, null, tableName, null);
-        boolean schemaExists;
-        try {
-            schemaExists = rs.next();
-        } finally {
-            rs.close();
-        }
-
-        if (!schemaExists) {
+        if (!schemaExists(connection.getMetaData())) {
+     * Checks whether the required table(s) exist in the schema. May be
+     * overridden by subclasses to allow different table names.
+     *
+     * @param metaData database meta data
+     * @return <code>true</code> if the schema exists
+     * @throws SQLException if an SQL error occurs
+     */
+    protected boolean schemaExists(DatabaseMetaData metaData)
+            throws SQLException {
+
+        String tableName = schemaObjectPrefix + DEFAULT_JOURNAL_TABLE;
+        if (metaData.storesLowerCaseIdentifiers()) {
+            tableName = tableName.toLowerCase();
+        } else if (metaData.storesUpperCaseIdentifiers()) {
+            tableName = tableName.toUpperCase();
+        }
+
+        ResultSet rs = metaData.getTables(null, null, tableName, null);
+
+        try {
+            return rs.next();
+        } finally {
+            rs.close();
+        }
+    }
+
+    /**
-     * Builds and prepares the SQL statements.
+     * Builds the SQL statements. May be overridden by subclasses to allow
+     * different table and/or column names.
+     */
+    protected void buildSQLStatements() {
+        selectRevisionsStmtSQL =
+                "select REVISION_ID, JOURNAL_ID, PRODUCER_ID, REVISION_DATA " +
+                "from " + schemaObjectPrefix + "JOURNAL " +
+                "where REVISION_ID > ?";
+        updateGlobalStmtSQL =
+                "update " + schemaObjectPrefix + "GLOBAL_REVISION " +
+                "set revision_id = revision_id + 1";
+        selectGlobalStmtSQL =
+                "select revision_id " +
+                "from " + schemaObjectPrefix + "GLOBAL_REVISION";
+        insertRevisionStmtSQL =
+                "insert into " + schemaObjectPrefix + "JOURNAL" +
+                "(REVISION_ID, JOURNAL_ID, PRODUCER_ID, REVISION_DATA) " +
+                "values (?,?,?,?)";
+    }
+
+    /**
+     * Prepares the SQL statements.
-        selectRevisionsStmt = connection.prepareStatement(
-                "select REVISION_ID, JOURNAL_ID, PRODUCER_ID, REVISION_DATA " +
-                "from " + schemaObjectPrefix + "JOURNAL " +
-                "where REVISION_ID > ?");
-        updateGlobalStmt = connection.prepareStatement(
-                "update " + schemaObjectPrefix + "GLOBAL_REVISION " +
-                "set revision_id = revision_id + 1");
-        selectGlobalStmt = connection.prepareStatement(
-                "select revision_id " +
-                "from " + schemaObjectPrefix + "GLOBAL_REVISION");
-        insertRevisionStmt = connection.prepareStatement(
-                "insert into " + schemaObjectPrefix + "JOURNAL" +
-                "(REVISION_ID, JOURNAL_ID, PRODUCER_ID, REVISION_DATA) " +
-                "values (?,?,?,?)");
+        selectRevisionsStmt = connection.prepareStatement(selectRevisionsStmtSQL);
+        updateGlobalStmt = connection.prepareStatement(updateGlobalStmtSQL);
+        selectGlobalStmt = connection.prepareStatement(selectGlobalStmtSQL);
+        insertRevisionStmt = connection.prepareStatement(insertRevisionStmtSQL);

MOV23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 UPD83 UPD42 MOV29 INS83 INS39 INS42 MOV43 INS8 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS65 INS65 INS65 MOV43 INS42 INS42 INS60 MOV25 MOV60 MOV54 INS65 INS21 INS21 INS21 INS21 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 MOV43 INS59 INS66 INS66 UPD66 INS7 INS7 INS7 INS7 INS21 INS32 INS42 INS27 INS41 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 UPD42 MOV27 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL45 DEL27 DEL59 DEL60 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32