Remove shared properties and child node entries. Does not work anymore with new design.

TODO: To optimize transient performance lightweight proxy item states should be created in transient space, which delegate access to overlayed state.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429634 13f79535-47bb-0310-9956-ffa450edef68

-     * Set to <code>true</code> if {@link #childNodeEntries} are shared between
-     * different <code>NodeState</code> instance.
-     */
-    private boolean sharedChildNodeEntries = false;
-
-    /**
-     * Set to <code>true</code> if {@link #properties} is shared between
-     * different <code>NodeState</code> instances.
-     */
-    private boolean sharedPropertyNames = false;
-
-    /**
-            parent = nodeState.parent;
+            parent = nodeState.parent; // TODO: parent from wrong ism layer
-            properties = nodeState.properties;
-            sharedPropertyNames = true;
-            nodeState.sharedPropertyNames = true;
-            childNodeEntries = nodeState.childNodeEntries;
-            sharedChildNodeEntries = true;
-            nodeState.sharedChildNodeEntries = true;
+            // re-create property references
+            properties.clear(); // TODO: any more cleanup work to do? try some kind of merging?
+            for (Iterator it = nodeState.getPropertyNames().iterator(); it.hasNext(); ) {
+                addPropertyName((QName) it.next());
+            }
+            // re-create child node entries
+            childNodeEntries.clear(); // TODO: any mre cleanup work to do? try some kind of merging?
+            for (Iterator it = nodeState.getChildNodeEntries().iterator(); it.hasNext(); ) {
+                ChildNodeEntry cne = (ChildNodeEntry) it.next();
+                childNodeEntries.add(cne.getName(), cne.getId());
+            }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (nodeEntries instanceof ChildNodeEntries) {
-            // optimization
-            ChildNodeEntries entries = (ChildNodeEntries) nodeEntries;
-            childNodeEntries = (ChildNodeEntries) entries.clone();
-            sharedChildNodeEntries = false;
-        } else {
-            if (sharedChildNodeEntries) {
-                childNodeEntries = new ChildNodeEntries();
-                sharedChildNodeEntries = false;
-            } else {
-                childNodeEntries.removeAll();
-            }
-            childNodeEntries.addAll(nodeEntries);
-
+        // re-create child node entries
+        childNodeEntries.clear(); // TODO: any mre cleanup work to do? try some kind of merging?
+        for (Iterator it = nodeEntries.iterator(); it.hasNext(); ) {
+            ChildNodeEntry cne = (ChildNodeEntry) it.next();
+            childNodeEntries.add(cne.getName(), cne.getId());
-        if (sharedPropertyNames) {
-            properties = (HashMap) properties.clone();
-            sharedPropertyNames = false;
-        }
-        if (sharedPropertyNames) {
-            properties = (HashMap) properties.clone();
-            sharedPropertyNames = false;
-        }
-        if (sharedPropertyNames) {
-            properties = new HashMap();
-            sharedPropertyNames = false;
-        } else {
-            properties.clear();
-        }
+        properties.clear();

INS31 INS31 MOV29 MOV83 MOV83 MOV39 MOV42 MOV44 INS8 MOV29 INS83 INS83 INS39 INS42 MOV8 MOV8 INS51 INS21 INS24 MOV42 INS8 INS32 INS58 INS32 INS8 MOV60 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 INS24 MOV21 INS24 INS42 INS42 INS43 INS59 UPD42 MOV42 UPD42 MOV42 INS60 MOV21 INS32 INS58 INS32 INS8 INS32 INS58 INS32 INS8 UPD42 MOV42 UPD42 MOV42 INS32 INS43 INS59 INS42 INS42 INS43 INS59 INS42 INS42 MOV21 INS42 INS42 INS43 INS59 INS42 INS42 INS60 MOV21 INS42 INS42 INS42 INS42 INS11 UPD42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS43 INS59 INS43 INS32 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 INS42 INS11 INS32 INS42 INS42 INS42 INS11 UPD42 INS32 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 UPD43 MOV43 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 DEL66 DEL42 DEL67 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL66 DEL42 DEL67 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL42 DEL40 DEL7 DEL40 DEL9 DEL7 DEL42 DEL40 DEL7 DEL42 DEL9 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL40 DEL9 DEL7 DEL21 DEL8 DEL51 DEL8 DEL31 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL43 DEL62 DEL43 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL43 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8