JCR-2415: Update Lucene to 3.0
- Merge all from JCR-2415-lucene-3.0 at 1064038 (reintegration)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1064058 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.core.query.lucene.hits.AbstractHitCollector;
-import org.apache.lucene.search.HitCollector;
-import org.apache.lucene.search.Weight;
-import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.lucene.search.Weight;
-import java.util.Set;
-import java.util.Map;
-import java.util.TreeMap;
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeMap;
+@SuppressWarnings("serial")
-    protected Weight createWeight(Searcher searcher) {
+    public Weight createWeight(Searcher searcher) {
-    private class DescendantSelfAxisWeight implements Weight {
+    private class DescendantSelfAxisWeight extends Weight {
-        public Scorer scorer(IndexReader reader) throws IOException {
-            contextScorer = contextQuery.weight(searcher).scorer(reader);
-            subScorer = subQuery.weight(searcher).scorer(reader);
+        public Scorer scorer(IndexReader reader, boolean scoreDocsInOrder,
+                boolean topScorer) throws IOException {
+            contextScorer = contextQuery.weight(searcher).scorer(reader, scoreDocsInOrder, topScorer);
+            subScorer = subQuery.weight(searcher).scorer(reader, scoreDocsInOrder, topScorer);
+         * The next document id to be returned
+         */
+        private int currentDoc = -1;
+
+        /**
-        /**
-         * {@inheritDoc}
-         */
-        public boolean next() throws IOException {
-            collectContextHits();
-            if (!subScorer.next() || contextHits.isEmpty()) {
-                return false;
+        @Override
+        public int nextDoc() throws IOException {
+            if (currentDoc == NO_MORE_DOCS) {
+                return currentDoc;
-            int nextDoc = subScorer.doc();
-            while (nextDoc > -1) {
-                if (isValid(nextDoc)) {
-                    return true;
+            collectContextHits();
+            currentDoc = subScorer.nextDoc();
+            if (contextHits.isEmpty()) {
+                currentDoc = NO_MORE_DOCS;
+            }
+            while (currentDoc != NO_MORE_DOCS) {
+                if (isValid(currentDoc)) {
+                    return currentDoc;
-                nextDoc = subScorer.next() ? subScorer.doc() : -1;
+                currentDoc = subScorer.nextDoc();
-            return false;
+            return currentDoc;
-        /**
-         * {@inheritDoc}
-         */
-        public int doc() {
-            return subScorer.doc();
+        @Override
+        public int docID() {
+            return currentDoc;
-        /**
-         * {@inheritDoc}
-         */
+        @Override
-        /**
-         * {@inheritDoc}
-         */
-        public boolean skipTo(int target) throws IOException {
-            boolean match = subScorer.skipTo(target);
-            if (match) {
-                collectContextHits();
-                return isValid(subScorer.doc()) || next();
+        @Override
+        public int advance(int target) throws IOException {
+            if (currentDoc == NO_MORE_DOCS) {
+                return currentDoc;
+            }
+
+            currentDoc = subScorer.nextDoc();
+            if (currentDoc == NO_MORE_DOCS) {
+                return NO_MORE_DOCS;
-                return false;
+                collectContextHits();
+                return isValid(currentDoc) ? currentDoc : nextDoc();
-                contextScorer.score(new HitCollector() {
-                    public void collect(int doc, float score) {
+                contextScorer.score(new AbstractHitCollector() {
+                    @Override
+                    protected void collect(int doc, float score) {
-         * @throws UnsupportedOperationException this implementation always
-         *                                       throws an <code>UnsupportedOperationException</code>.
-         */
-        public Explanation explain(int doc) throws IOException {
-            throw new UnsupportedOperationException();
-        }
-
-        /**

MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 INS79 INS42 INS45 UPD83 INS23 INS31 INS44 INS44 INS29 INS83 INS39 INS59 INS78 MOV83 UPD39 MOV39 UPD42 MOV42 MOV43 MOV8 MOV21 INS78 UPD42 INS78 INS78 UPD39 UPD42 INS39 INS42 INS39 INS42 INS65 INS42 MOV38 INS42 INS21 INS25 INS42 INS42 INS42 INS25 INS21 INS66 UPD27 INS7 MOV32 INS8 UPD27 INS42 INS42 INS27 INS8 INS7 INS27 INS8 INS42 INS42 INS42 INS32 INS21 UPD42 INS42 INS42 INS42 INS41 INS42 INS32 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 INS7 INS42 MOV42 UPD42 MOV42 INS42 INS16 INS42 INS42 UPD42 UPD42 INS32 INS32 INS42 INS32 INS42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD43 UPD42 INS78 UPD83 INS42 DEL42 DEL42 DEL32 DEL38 DEL9 DEL39 DEL42 DEL32 DEL59 DEL60 DEL9 DEL32 DEL42 DEL42 DEL32 DEL34 DEL38 DEL16 DEL9 DEL65 DEL65 DEL29 DEL31 DEL65 DEL65 DEL29 DEL42 DEL42 DEL32 DEL65 DEL65 DEL29 DEL65 DEL65 DEL29 DEL39 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL32 DEL32 DEL27 DEL9 DEL41 DEL8 DEL42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31