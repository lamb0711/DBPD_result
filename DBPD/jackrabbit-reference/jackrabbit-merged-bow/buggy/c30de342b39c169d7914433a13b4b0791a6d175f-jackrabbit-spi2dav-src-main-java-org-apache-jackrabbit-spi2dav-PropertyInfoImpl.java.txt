JCR-2453 - Break the spi2dav dependency to jcr-server

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1002639 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.commons.webdav.JcrRemotingConstants;
+import org.apache.jackrabbit.commons.webdav.ValueUtil;
-import org.apache.jackrabbit.webdav.DavException;
-import org.apache.jackrabbit.webdav.jcr.ItemResourceConstants;
-import org.apache.jackrabbit.webdav.jcr.property.ValuesProperty;
+import org.apache.jackrabbit.webdav.property.DavProperty;
-            throws RepositoryException, DavException, IOException, NameException {
+            throws RepositoryException, IOException, NameException {
-        String typeName = propSet.get(ItemResourceConstants.JCR_TYPE).getValue().toString();
+        String typeName = propSet.get(JcrRemotingConstants.JCR_TYPE_LN, ItemResourceConstants.NAMESPACE).getValue().toString();
-        if (propSet.contains(ItemResourceConstants.JCR_VALUE)) {
-            ValuesProperty vp = new ValuesProperty(propSet.get(ItemResourceConstants.JCR_VALUE), type, valueFactory);
-            Value jcrValue = vp.getJcrValue(type, valueFactory);
-            if (jcrValue == null) {
+        DavProperty<?> prop = propSet.get(JcrRemotingConstants.JCR_VALUE_LN, ItemResourceConstants.NAMESPACE);
+        if (prop != null) {
+            Value[] jcrValues = ValueUtil.valuesFromXml(prop.getValue(), type, valueFactory);
+            if (jcrValues == null || jcrValues.length == 0) {
-                    qv = qValueFactory.create(jcrValue.getStream());
+                    qv = qValueFactory.create(jcrValues[0].getStream());
-                    qv = ValueFormat.getQValue(jcrValue, resolver, qValueFactory);
+                    qv = ValueFormat.getQValue(jcrValues[0], resolver, qValueFactory);
-            ValuesProperty vp = new ValuesProperty(propSet.get(ItemResourceConstants.JCR_VALUES), type, valueFactory);
-            Value[] jcrValues = vp.getJcrValues(type, valueFactory);
+            prop = propSet.get(JcrRemotingConstants.JCR_VALUES_LN, ItemResourceConstants.NAMESPACE);
+            if (prop == null) {
+                throw new RepositoryException("Item with id " + id.toString() + " doesn't represent a valid property.");
+            }
+            Value[] jcrValues = ValueUtil.valuesFromXml(prop.getValue(), type, valueFactory);

MOV26 MOV26 UPD40 UPD40 UPD40 INS60 INS74 INS59 INS27 INS43 INS76 INS42 INS32 INS42 INS33 INS21 INS25 INS42 INS42 INS42 INS40 INS40 INS5 INS27 INS7 INS27 INS8 INS43 INS85 UPD42 INS27 INS27 INS42 INS32 INS42 INS33 INS53 INS40 UPD40 MOV42 INS42 INS42 INS32 UPD42 MOV42 MOV33 INS40 INS34 MOV42 MOV42 INS40 UPD40 MOV40 INS14 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS43 INS27 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS32 INS45 INS42 INS42 INS2 INS2 INS42 INS34 INS42 INS34 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL14 DEL59 DEL60 DEL43 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL32 DEL42 DEL42 DEL14 DEL59 DEL60