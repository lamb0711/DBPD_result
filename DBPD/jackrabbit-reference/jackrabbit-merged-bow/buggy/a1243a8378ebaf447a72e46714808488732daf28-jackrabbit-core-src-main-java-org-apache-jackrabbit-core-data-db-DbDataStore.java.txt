JCR-1825 DbDataStore doesn't support concurrent reads

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@708598 13f79535-47bb-0310-9956-ffa450edef68

- *     &lt;param name="{@link #setCopyWhenReading(int) copyWhenReading}" value="true"/>
+ *     &lt;param name="{@link #setCopyWhenReading(boolean) copyWhenReading}" value="true"/>
-     * The digest algorithm used to uniquely identify records.
-     */
-    protected static final String DIGEST = "SHA-1";
-
-    /**
-     * Logger instance
-     */
-    private static Logger log = LoggerFactory.getLogger(DbDataStore.class);
-
-    /**
+    
+    /**
+     * Write to a temporary file to get the length (slow, but always works).
+     * This is the default setting.
+     */
+    public static final String STORE_TEMP_FILE = "tempFile";
+
+    /**
+     * Call PreparedStatement.setBinaryStream(..., -1)
+     */
+    public static final String STORE_SIZE_MINUS_ONE = "-1";
+
+    /**
+     * Call PreparedStatement.setBinaryStream(..., Integer.MAX_VALUE)
+     */
+    public static final String STORE_SIZE_MAX = "max";
+    
+    /**
+     * The digest algorithm used to uniquely identify records.
+     */
+    protected static final String DIGEST = "SHA-1";
+    
+    /**
+     * The prefix used for temporary objects.
+     */
+    protected static final String TEMP_PREFIX = "TEMP_";
+
+    /**
+     * Logger instance
+     */
+    private static Logger log = LoggerFactory.getLogger(DbDataStore.class);
-     * The prefix used for temporary objects.
-     */
-    protected static final String TEMP_PREFIX = "TEMP_";
-
-    /**
-     * Write to a temporary file to get the length (slow, but always works).
-     * This is the default setting.
-     */
-    public static final String STORE_TEMP_FILE = "tempFile";
-
-    /**
-     * Call PreparedStatement.setBinaryStream(..., -1)
-     */
-    public static final String STORE_SIZE_MINUS_ONE = "-1";
-
-    /**
-     * Call PreparedStatement.setBinaryStream(..., Integer.MAX_VALUE)
-     */
-    public static final String STORE_SIZE_MAX = "max";
-
-    /**
-    private boolean copyWhenReading = true;
+    protected boolean copyWhenReading = true;
-            conn.closeSilently(rs);
+            DatabaseHelper.closeSilently(rs);
-            conn.closeSilently(rs);
+            DatabaseHelper.closeSilently(rs);
-            conn.closeSilently(rs);
+            DatabaseHelper.closeSilently(rs);
-            InputStream result = null;
+            DbResources dbResource = null;
-                result = new ByteArrayInputStream(new byte[0]);
+                stream = new ByteArrayInputStream(new byte[0]);
+                dbResource = new DbResources(stream);
+                DatabaseHelper.closeSilently(rs);
+                putBack(conn);
+            } else if (copyWhenReading) {
+                // If we copy while reading, create a temp file and close the stream
+                File temp = moveToTempFile(stream);
+                stream = new TempFileInputStream(temp);
+                dbResource = new DbResources(stream);
-                result = new BufferedInputStream(stream);
-                if (copyWhenReading) {
-                    File temp = moveToTempFile(result);
-                    result = new TempFileInputStream(temp);
-                }
+                stream = new BufferedInputStream(stream);
+                dbResource = new DbResources(conn, rs, stream, this);
-
-            DbResources dbResources = new DbResources(conn, rs, prep, result, this);
-            return dbResources;
+            return dbResource;

MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 UPD83 MOV25 UPD39 INS25 UPD42 UPD42 UPD42 UPD42 UPD42 INS33 INS21 MOV42 MOV8 INS8 INS7 INS21 INS21 INS21 MOV21 INS21 UPD42 INS42 INS14 INS7 INS32 INS32 INS7 INS43 INS42 UPD42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS14 INS42 UPD42 INS43 INS42 MOV43 INS42 INS42 INS42 INS52 INS42 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL52 DEL14 DEL25 DEL8