JCR-3064 - modified patch originally posted by alex parvulescu, omitting some calls to SystemSession.getNode during ac-evaluation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181648 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.security.AccessControlEntry;
-import java.util.List;
-    private final Map<NodeId, CacheEntry> cache;
+    private final Map<NodeId, Entries> cache;
-    protected List<AccessControlEntry> getEntries(NodeImpl node) throws RepositoryException {
-        List<AccessControlEntry> entries;
+    protected Entries getEntries(NodeImpl node) throws RepositoryException {
+        Entries entries;
-            CacheEntry ce = cache.get(nodeId);
-            if (ce != null) {
-                entries = ce.entries;
-            } else {
+            entries = cache.get(nodeId);
+            if (entries == null) {
-    protected List<AccessControlEntry> getEntries(NodeId nodeId) throws RepositoryException {
-        List<AccessControlEntry> entries;
+    protected Entries getEntries(NodeId nodeId) throws RepositoryException {
+        Entries entries;
-            CacheEntry ce = cache.get(nodeId);
-            if (ce != null) {
-                entries = ce.entries;
-            } else {
+            entries = cache.get(nodeId);
+            if (entries == null) {
-    private List<AccessControlEntry> updateCache(NodeImpl node) throws RepositoryException {
-        List<AccessControlEntry> entries = super.getEntries(node);
+    private Entries updateCache(NodeImpl node) throws RepositoryException {
+        Entries entries = super.getEntries(node);
-            // build a new cacheEntry and add it to the cache
-            CacheEntry ce = new CacheEntry(entries, nextId);
-            cache.put(node.getNodeId(), ce);
+            // adjust the 'nextId' to point to the next access controlled
+            // ancestor node instead of the parent and remember the entries.
+            entries.setNextId(nextId);
+            cache.put(node.getNodeId(), entries);
-            log.debug("Update cache for node with ID {0}: {1}", node, ce);
+            log.debug("Update cache for node with ID {0}: {1}", node, entries);
-     * Returns the id of the next access-controlled ancestor if the specified
-     * is contained in the cache. Otherwise the method of the super-class is called.
-     *
-     * @param nodeId The id of the node.
-     * @return the id of the next access-controlled ancestor if the specified
-     * is contained in the cache; otherwise the id of the parent.
-     * @throws RepositoryException
-     * @see EntryCollector#getParentId(org.apache.jackrabbit.core.id.NodeId)
-     */
-    @Override
-    protected NodeId getParentId(NodeId nodeId) throws RepositoryException {
-        synchronized (monitor) {
-            CacheEntry ce = cache.get(nodeId);
-            if (ce != null) {
-                return ce.nextAcNodeId;
-            } else {
-                // no cache entry
-                return super.getParentId(nodeId);
-            }
-        }
-    }
-
-    /**
+    @SuppressWarnings("unchecked")
-                    CacheEntry ce = cache.remove(nodeId);
+                    Entries ce = cache.remove(nodeId);
-                        NodeId nextId = ce.nextAcNodeId;
-                        for (CacheEntry entry : cache.values()) {
-                            if (nodeId.equals(entry.nextAcNodeId)) {
-                                entry.nextAcNodeId = nextId;
+                        NodeId nextId = ce.getNextId();
+                        for (Entries entry : cache.values()) {
+                            if (nodeId.equals(entry.getNextId())) {
+                                entry.setNextId(nextId);
-
-    //--------------------------------------------------------------------------
-    /**
-     *
-     */
-    private static class CacheEntry {
-
-        private final List<AccessControlEntry> entries;
-        private NodeId nextAcNodeId;
-
-        private CacheEntry(List<AccessControlEntry> entries, NodeId nextAcNodeId) {
-            this.entries = entries;
-            this.nextAcNodeId = nextAcNodeId;
-        }
-
-        @Override
-        public String toString() {
-            StringBuilder sb = new StringBuilder();
-            sb.append("size = ").append(entries.size()).append(", ");
-            sb.append("nextAcNodeId = ").append(nextAcNodeId);
-            return sb.toString();
-        }
-    }

UPD74 INS43 INS43 INS43 INS79 UPD43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS45 UPD42 INS43 INS43 INS43 UPD42 MOV42 INS21 UPD42 MOV42 INS21 UPD42 MOV42 INS21 INS7 UPD27 INS7 UPD27 INS32 INS42 MOV32 UPD42 INS42 MOV32 UPD42 INS42 INS42 INS42 UPD42 UPD42 UPD43 UPD42 INS32 UPD43 INS42 INS42 UPD42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL42 DEL65 DEL42 DEL42 DEL40 DEL43 DEL69 DEL68 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL41 DEL8 DEL42 DEL42 DEL48 DEL41 DEL8 DEL25 DEL8 DEL51 DEL8 DEL31 DEL40 DEL40 DEL40 DEL42 DEL7 DEL29 DEL83 DEL83 DEL42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL55