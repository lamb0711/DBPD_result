JCR-2166: Provide query support for WEAKREFERENCE reverse lookup

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@787183 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import java.util.Collections;
+import org.apache.jackrabbit.core.query.QueryManagerImpl;
+import org.apache.jackrabbit.util.ISO9075;
-        return getWeakReferences(null);
+        // check state of this instance
+        sanityCheck();
+
+        Value ref = getSession().getValueFactory().createValue(this, true);
+        List<Property> props = new ArrayList<Property>();
+        QueryManagerImpl qm = (QueryManagerImpl) session.getWorkspace().getQueryManager();
+        for (Node n : qm.getWeaklyReferringNodes(this)) {
+            for (PropertyIterator it = n.getProperties(); it.hasNext(); ) {
+                Property p = it.nextProperty();
+                if (p.getType() == PropertyType.WEAKREFERENCE) {
+                    Collection<Value> refs;
+                    if (p.isMultiple()) {
+                        refs = Arrays.asList(p.getValues());
+                    } else {
+                        refs = Collections.singleton(p.getValue());
+                    }
+                    if (refs.contains(ref)) {
+                        props.add(p);
+                    }
+                }
+            }
+        }
+        return new PropertyIteratorAdapter(props);
+        if (name == null) {
+            return getWeakReferences();
+        }
+
-        // TODO tweak query implemention in order to support WEAKREFERENCE reverse lookup
+            StringBuilder stmt = new StringBuilder();
+            stmt.append("//*[@").append(ISO9075.encode(name));
+            stmt.append(" = '").append(data.getId()).append("']");
-                    "//*[jcr:contains(., '" + data.getId() + "')]",
-                    //"//*[@*='" + data.getId() + "']",
-                    Query.XPATH);
+                    stmt.toString(), Query.XPATH);
-                for (PropertyIterator pit = n.getProperties(); pit.hasNext();) {
-                    Property p = pit.nextProperty();
-                    if (name != null && !name.equals(p.getName())) {
-                        continue;
-                    }
-                    if (p.getType() == PropertyType.WEAKREFERENCE) {
-                        boolean containsId = false;
-                        if (p.isMultiple()) {
-                            // multi-valued
-                            Value[] v = p.getValues();
-                            for (int i = 0; i < v.length; i++) {
-                                if (getIdentifier().equals(v[i].getString())) {
-                                    containsId = true;
-                                    break;
-                                }
-                            }
-                        } else {
-                            // single-valued
-                            if (getIdentifier().equals(p.getString())) {
-                                containsId = true;
-                            }
-                        }
-                        if (containsId) {
-                            l.add(p);
-                        }
-                    }
-                }
+                l.add(n.getProperty(name));

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS21 INS60 INS60 INS60 INS70 INS41 INS25 INS32 MOV43 INS59 INS74 INS59 INS43 INS59 INS44 INS32 INS8 INS14 INS27 INS8 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS11 INS43 INS42 INS42 UPD42 MOV42 INS52 INS24 INS43 INS42 INS42 INS33 INS41 INS21 INS21 INS60 INS24 INS32 INS42 INS52 INS9 INS42 INS42 INS74 INS43 INS32 INS42 MOV58 INS32 INS8 INS42 INS32 INS43 INS32 INS32 MOV43 INS59 MOV58 MOV32 INS8 INS32 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS60 INS25 INS42 INS42 UPD42 INS14 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 MOV60 MOV21 INS42 INS42 INS42 INS42 INS42 UPD42 MOV43 INS59 MOV27 INS8 INS43 UPD42 MOV42 UPD42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV42 MOV32 MOV32 UPD42 MOV42 MOV32 INS40 INS42 INS32 INS60 INS25 INS25 INS42 UPD42 INS42 INS45 UPD42 UPD42 INS32 INS42 INS42 INS74 INS59 MOV32 INS8 INS8 INS32 INS8 UPD42 MOV42 INS42 INS42 INS43 INS43 INS42 INS21 INS21 INS42 INS42 INS42 INS21 INS42 INS42 INS7 INS7 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 DEL33 DEL32 DEL41 DEL42 DEL45 DEL45 DEL27 DEL40 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL32 DEL32 DEL38 DEL27 DEL18 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL85 DEL5 DEL42 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL32 DEL32 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL24 DEL8 DEL32 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL8 DEL25 DEL8 DEL25 DEL8 DEL24 DEL8 DEL24