Make versioning transactional
- Added specialized XAVersion and XAVersionHistory objects that refresh their internal state when needed
- Defined new observation interface in order to have VersionManagerImpl use standard event dispatching
  instead of writing its own
- Added test cases verifying isolation of versioning operations in transactions


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368026 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeImpl;
-import org.apache.log4j.Logger;
-import javax.jcr.Item;
-import javax.jcr.RepositoryException;
-import javax.jcr.UnsupportedRepositoryOperationException;
-import javax.jcr.NodeIterator;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.version.Version;
-import javax.jcr.version.VersionHistory;
-import java.util.Calendar;
-public class VersionImpl extends NodeImpl implements Version {
-
-    /**
-     * the default logger.
-     */
-    private static Logger log = Logger.getLogger(VersionImpl.class);
+public class VersionImpl extends AbstractVersion {
-    protected final InternalVersion version;
+    private final InternalVersion version;
+
-     * {@inheritDoc}
-     */
-    public Calendar getCreated() throws RepositoryException {
-        return version.getCreated();
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public Version[] getSuccessors() throws RepositoryException {
-        // need to wrap it around proper node
-        InternalVersion[] suc = version.getSuccessors();
-        Version[] ret = new Version[suc.length];
-        for (int i = 0; i < suc.length; i++) {
-            ret[i] = (Version) session.getNodeByUUID(suc[i].getId());
-        }
-        return ret;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public Version[] getPredecessors() throws RepositoryException {
-        // need to wrap it around proper node
-        InternalVersion[] pred = version.getPredecessors();
-        Version[] ret = new Version[pred.length];
-        for (int i = 0; i < pred.length; i++) {
-            ret[i] = (Version) session.getNodeByUUID(pred[i].getId());
-        }
-        return ret;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public String getUUID() throws UnsupportedRepositoryOperationException, RepositoryException {
-        return version.getId();
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public VersionHistory getContainingHistory() throws RepositoryException {
-        return (VersionHistory) getParent();
-    }
-
-    /**
-    public InternalVersion getInternalVersion() {
+    protected InternalVersion getInternalVersion() {
-
-    /**
-     * Returns the frozen node of this version
-     *
-     * @return
-     * @throws RepositoryException
-     */
-    public InternalFrozenNode getFrozenNode() throws RepositoryException {
-        return version.getFrozenNode();
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public boolean isSame(Item otherItem) {
-        if (otherItem instanceof VersionImpl) {
-            // since all versions live in the same workspace, we can compare the uuids
-            return ((VersionImpl) otherItem).version.getId().equals(version.getId());
-        } else {
-            return false;
-        }
-    }
-
-    //--------------------------------------< Overwrite "protected" methods >---
-
-
-    /**
-     * Always throws a {@link javax.jcr.nodetype.ConstraintViolationException} since this node
-     * is protected.
-     *
-     * @throws javax.jcr.nodetype.ConstraintViolationException
-     */
-    public void update(String srcWorkspaceName) throws ConstraintViolationException {
-        String msg = "update operation not allowed on a version node: " + safeGetJCRPath();
-        log.debug(msg);
-        throw new ConstraintViolationException(msg);
-    }
-
-    /**
-     * Always throws a {@link javax.jcr.nodetype.ConstraintViolationException} since this node
-     * is protected.
-     *
-     * @throws javax.jcr.nodetype.ConstraintViolationException
-     */
-    public NodeIterator merge(String srcWorkspace, boolean bestEffort)
-            throws ConstraintViolationException {
-        String msg = "merge operation not allowed on a version node: " + safeGetJCRPath();
-        log.debug(msg);
-        throw new ConstraintViolationException(msg);
-    }
-

UPD43 UPD42 UPD83 UPD83 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL23 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL32 DEL11 DEL7 DEL21 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL32 DEL11 DEL7 DEL21 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL32 DEL11 DEL41 DEL8 DEL31 DEL66 DEL65 DEL65 DEL42 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL22 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL9 DEL41 DEL8 DEL25 DEL8 DEL31 DEL66 DEL40 DEL65 DEL66 DEL66 DEL65 DEL40 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL45 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL31 DEL66 DEL40 DEL65 DEL66 DEL66 DEL65 DEL40 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL45 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL31