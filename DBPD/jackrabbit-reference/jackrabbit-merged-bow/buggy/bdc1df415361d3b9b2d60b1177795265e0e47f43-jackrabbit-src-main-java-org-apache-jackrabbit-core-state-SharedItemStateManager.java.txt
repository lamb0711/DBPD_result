JCR-552 Move listeners from item state to item state managers


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@438851 13f79535-47bb-0310-9956-ffa450edef68

+     * State change dispatcher.
+     */
+    private final transient StateChangeDispatcher dispatcher = new StateChangeDispatcher();
+
+    /**
+
+     * <p/>
+     * Notifications are received for items that this manager created itself or items that are
+     * managed by one of the virtual providers.
-        cache.cache(created);
+        if (created.getContainer() == this) {
+            // shared state was created
+            cache.cache(created);
+        }
+        dispatcher.notifyStateCreated(created);
+     * <p/>
+     * Notifications are received for items that this manager created itself or items that are
+     * managed by one of the virtual providers.
-        // not interested
+        dispatcher.notifyStateModified(modified);
+     * <p/>
+     * Notifications are received for items that this manager created itself or items that are
+     * managed by one of the virtual providers.
-        destroyed.removeListener(this);
-        cache.evict(destroyed.getId());
+        if (destroyed.getContainer() == this) {
+            // shared state was destroyed
+            cache.evict(destroyed.getId());
+        }
+        dispatcher.notifyStateDestroyed(destroyed);
+     * <p/>
+     * Notifications are received for items that this manager created itself or items that are
+     * managed by one of the virtual providers.
-        discarded.removeListener(this);
-        cache.evict(discarded.getId());
+        if (discarded.getContainer() == this) {
+            // shared state was discarded
+            cache.evict(discarded.getId());
+        }
+        dispatcher.notifyStateDiscarded(discarded);
+
+        prov.addListener(this);
+    /**
+     * Add an <code>ItemStateListener</code>
+     * @param listener the new listener to be informed on modifications
+     */
+    public void addListener(ItemStateListener listener) {
+        dispatcher.addListener(listener);
+    }
+
+    /**
+     * Remove an <code>ItemStateListener</code>
+     * @param listener an existing listener
+     */
+    public void removeListener(ItemStateListener listener) {
+        dispatcher.removeListener(listener);
+    }
+
+
-        state.addListener(this);
+        state.setContainer(this);
-                // register as listener
-                state.addListener(this);
+                // set parent container
+                state.setContainer(this);
-        state.addListener(this);
+        state.setContainer(this);

INS23 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS8 INS8 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS42 INS14 INS25 INS21 INS21 INS25 INS21 INS25 INS21 INS21 INS65 INS65 INS43 INS42 INS21 INS65 INS65 INS43 INS42 INS21 INS66 INS43 INS66 INS66 INS66 INS27 MOV8 INS32 INS66 INS66 INS66 INS32 INS66 INS66 INS66 INS27 MOV8 INS32 INS66 INS66 INS66 INS27 MOV8 INS32 INS32 INS66 INS42 INS66 INS42 INS32 INS66 INS42 INS66 INS42 INS32 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL42 DEL52 DEL32 DEL21 DEL42 DEL42 DEL52 DEL32 DEL21