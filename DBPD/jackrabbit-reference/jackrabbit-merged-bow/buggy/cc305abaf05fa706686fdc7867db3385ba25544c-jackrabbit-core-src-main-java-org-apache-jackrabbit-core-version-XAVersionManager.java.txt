JCR-1592 - JSR 283: Activities


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784261 13f79535-47bb-0310-9956-ffa450edef68

-            NodeStateEx state = createVersionHistory(node, copiedFrom);
+            NodeStateEx state = internalCreateVersionHistory(node, copiedFrom);
+    public NodeId createActivity(Session session, String title)
+            throws RepositoryException {
+
+        if (isInXA()) {
+            NodeStateEx state = internalCreateActivity(title);
+            InternalActivityImpl activity =
+                new InternalActivityImpl(vMgr, state);
+            xaItems.put(state.getNodeId(), activity);
+            return state.getNodeId();
+        }
+        return vMgr.createActivity(session, title);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void removeActivity(Session session, NodeId nodeId)
+            throws RepositoryException {
+
+        if (isInXA()) {
+            InternalActivityImpl act = (InternalActivityImpl) getItem(nodeId);
+            internalRemoveActivity(act);
+        }
+        vMgr.removeActivity(session, nodeId);
+    }
+
+    /**
+     * {@inheritDoc}
+     * <p/>
+     * Before modifying activity, make a local copy of it.
+     */
+    protected void internalRemoveActivity(InternalActivityImpl activity)
+            throws VersionException, RepositoryException {
+        if (activity.getVersionManager() != this) {
+            activity = makeLocalCopy(activity);
+            xaItems.put(activity.getId(), activity);
+        }
+        super.internalRemoveActivity(activity);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public Version checkout(NodeImpl node) throws RepositoryException {
+        return vMgr.checkout(node);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
-                version = checkin((InternalVersionHistoryImpl) vh, node, false);
+                version = internalCheckin((InternalVersionHistoryImpl) vh, node, false);
-                version = checkin((InternalVersionHistoryImpl) vh, node, true);
+                version = internalCheckin((InternalVersionHistoryImpl) vh, node, true);
-            removeVersion(vh, versionName);
+            internalRemoveVersion(vh, versionName);
-    protected InternalVersion checkin(InternalVersionHistoryImpl history,
+    protected InternalVersion internalCheckin(InternalVersionHistoryImpl history,
-        InternalVersion version = super.checkin(history, node, simple);
+        InternalVersion version = super.internalCheckin(history, node, simple);
-    protected void removeVersion(InternalVersionHistoryImpl history, Name name)
+    protected void internalRemoveVersion(InternalVersionHistoryImpl history, Name name)
-        super.removeVersion(history, name);
+        super.internalRemoveVersion(history, name);
+    @SuppressWarnings("unchecked")
-            Map xaItems = (Map) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
+            Map<NodeId, InternalVersionItem> xaItems =
+                    (Map<NodeId, InternalVersionItem>) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
+     * Make a local copy of an internal version item. This will recreate the
+     * (global) version item with state information from our own state
+     * manager.
+     * @param act source
+     * @return the new copy
+     * @throws RepositoryException if an error occurs
+     */
+    private InternalActivityImpl makeLocalCopy(InternalActivityImpl act)
+            throws RepositoryException {
+        ReadLock lock = acquireReadLock();
+        try {
+            NodeState state = (NodeState) stateMgr.getItemState(act.getId());
+            NodeStateEx stateEx = new NodeStateEx(stateMgr, ntReg, state, null);
+            return new InternalActivityImpl(this, stateEx);
+        } catch (ItemStateException e) {
+            throw new RepositoryException("Unable to make local copy", e);
+        } finally {
+            lock.release();
+        }
+    }
+
+    /**

INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS43 INS8 UPD42 UPD42 INS79 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS41 INS65 INS43 INS42 INS43 INS42 INS42 INS25 INS21 INS65 INS43 INS42 INS42 INS42 INS25 INS21 INS65 INS42 INS43 INS42 INS42 INS41 INS42 INS45 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 INS54 INS65 INS42 INS42 INS32 INS8 INS32 INS65 INS42 INS42 INS32 INS8 INS32 INS65 INS66 INS66 INS42 INS27 INS8 INS48 INS65 INS42 INS32 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS59 INS8 INS12 INS8 INS42 INS60 INS60 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS32 INS52 INS21 INS21 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS32 INS60 INS60 INS41 INS44 INS8 INS21 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS42 INS42 INS7 INS32 UPD42 INS74 INS42 INS43 INS59 INS43 INS59 INS14 INS43 INS42 INS53 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS21 MOV21 UPD42 MOV43 INS43 INS43 INS42 INS42 INS11 INS42 INS42 INS14 INS43 INS52 INS42 INS42 INS14 INS42 INS42 UPD42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS74 INS43 INS32 INS43 INS42 INS42 INS42 INS33 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV43 INS43 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 MOV11 INS42 INS9 UPD42 UPD9 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL7 DEL21