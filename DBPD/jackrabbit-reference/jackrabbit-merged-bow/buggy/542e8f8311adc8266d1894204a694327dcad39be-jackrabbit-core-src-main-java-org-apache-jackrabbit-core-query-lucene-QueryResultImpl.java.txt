JCR-2010: Retrieve row path via hierarchy manager instead of node

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@758193 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeImpl;
-import javax.jcr.Node;
+     * @throws RepositoryException if an error occurs while reading from the
+     *                             repository.
-        return getNodeIterator();
+        return new NodeIteratorImpl(itemMgr, getScoreNodes(), 0);
-        return new RowIteratorImpl(getNodeIterator(), selectProps,
-                queryImpl.getSelectorNames(), itemMgr, session,
+        return new RowIteratorImpl(getScoreNodes(), selectProps,
+                queryImpl.getSelectorNames(), itemMgr,
+                index.getContext().getHierarchyManager(), session,
-     * Creates a node iterator over the result nodes.
+     * Creates a {@link ScoreNodeIterator} over the query result.
-     * @return a node iterator over the result nodes.
+     * @return a {@link ScoreNodeIterator} over the query result.
-    private ScoreNodeIterator getNodeIterator() {
+    private ScoreNodeIterator getScoreNodes() {
-            return new DocOrderNodeIteratorImpl(itemMgr, resultNodes, 0);
+            return new DocOrderScoreNodeIterator(itemMgr, resultNodes, 0);
-            return new LazyScoreNodeIterator(0);
+            return new LazyScoreNodeIteratorImpl();
+     *
+     * @return the total number of hits.
-    private final class LazyScoreNodeIterator implements ScoreNodeIterator {
+    private final class LazyScoreNodeIteratorImpl implements ScoreNodeIterator {
-        private NodeImpl next;
+        private ScoreNode[] next;
-        private final int selectorIndex;
-
-        private LazyScoreNodeIterator(int selectorIndex) {
-            this.selectorIndex = selectorIndex;
-        }
-
-        /**
-         * {@inheritDoc}
-         */
-        public float getScore() {
-            initialize();
-            if (!hasNext()) {
-                throw new NoSuchElementException();
-            }
-            return ((ScoreNode[]) resultNodes.get(position))[selectorIndex].getScore();
-        }
-
-        /**
-         * {@inheritDoc}
-         */
-        public ScoreNode[] getScoreNodes() {
-            initialize();
-            if (!hasNext()) {
-                throw new NoSuchElementException();
-            }
-            return (ScoreNode[]) resultNodes.get(position);
-        }
-
-        /**
-         * {@inheritDoc}
-         */
-        public NodeImpl nextNodeImpl() {
+        public ScoreNode[] nextScoreNodes() {
-            NodeImpl n = next;
+            ScoreNode[] sn = next;
-            return n;
-        }
-
-        /**
-         * {@inheritDoc}
-         */
-        public Node nextNode() {
-            return nextNodeImpl();
+            return sn;
-            return nextNodeImpl();
+            return nextScoreNodes();
-                ScoreNode[] sn = (ScoreNode[]) resultNodes.get(nextPos);
-                try {
-                    next = (NodeImpl) itemMgr.getItem(sn[selectorIndex].getNodeId());
-                } catch (RepositoryException e) {
-                    log.warn("Exception retrieving Node with UUID: "
-                            + sn[selectorIndex].getNodeId() + ": " + e.toString());
-                    // remove score node and try next
-                    resultNodes.remove(nextPos);
-                    invalid++;
-                }
+                next = (ScoreNode[]) resultNodes.get(nextPos);

UPD42 UPD42 INS65 INS65 MOV5 MOV5 UPD42 INS42 INS66 INS66 INS14 INS66 INS65 UPD66 INS66 INS65 UPD66 INS66 INS43 INS42 INS32 INS34 INS32 INS42 INS42 MOV5 UPD42 INS42 UPD42 MOV42 UPD42 INS32 INS42 UPD42 UPD42 MOV21 INS42 INS42 UPD43 UPD43 UPD42 UPD42 MOV11 DEL40 DEL26 DEL40 DEL26 DEL32 DEL34 DEL42 DEL43 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL42 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL38 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL2 DEL42 DEL32 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL38 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL11 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL42 DEL43 DEL42 DEL43 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL32 DEL11 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL2 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL37 DEL21 DEL8 DEL12 DEL54