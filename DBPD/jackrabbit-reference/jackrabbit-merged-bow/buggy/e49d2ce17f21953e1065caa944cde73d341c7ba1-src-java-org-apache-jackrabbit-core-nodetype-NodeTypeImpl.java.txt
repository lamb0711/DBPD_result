porting to v0.16.4 of the jsr170 specification

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@161260 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.nodetype.NodeDef;
+import javax.jcr.nodetype.NodeDefinition;
-import javax.jcr.nodetype.PropertyDef;
+import javax.jcr.nodetype.PropertyDefinition;
-    public NodeDefImpl getApplicableChildNodeDef(QName nodeName)
+    public NodeDefinitionImpl getApplicableChildNodeDefinition(QName nodeName)
-        return getApplicableChildNodeDef(nodeName, null);
+        return getApplicableChildNodeDefinition(nodeName, null);
-    public NodeDefImpl getApplicableChildNodeDef(QName nodeName, QName nodeTypeName)
+    public NodeDefinitionImpl getApplicableChildNodeDefinition(QName nodeName,
+                                                               QName nodeTypeName)
-        return new NodeDefImpl(ent.getApplicableChildNodeDef(nodeName, nodeTypeName),
+        return new NodeDefinitionImpl(ent.getApplicableChildNodeDef(nodeName, nodeTypeName),
-    public PropertyDefImpl getApplicablePropertyDef(QName propertyName, int type,
-                                                    boolean multiValued)
+    public PropertyDefinitionImpl getApplicablePropertyDefinition(QName propertyName,
+                                                                  int type,
+                                                                  boolean multiValued)
-        return new PropertyDefImpl(ent.getApplicablePropertyDef(propertyName, type, multiValued),
+        return new PropertyDefinitionImpl(
+                ent.getApplicablePropertyDef(propertyName, type, multiValued),
-     * of this node type) where <code>{@link NodeDef#isAutoCreate()}</code>
+     * of this node type) where <code>{@link NodeDefinition#isAutoCreated()}</code>
-     * @see NodeDef#isAutoCreate
+     * @see NodeDefinition#isAutoCreated
-    public NodeDef[] getAutoCreateNodeDefs() {
-        ChildNodeDef[] cnda = ent.getAutoCreateNodeDefs();
-        NodeDef[] nodeDefs = new NodeDef[cnda.length];
+    public NodeDefinition[] getAutoCreatedNodeDefinitions() {
+        NodeDef[] cnda = ent.getAutoCreateNodeDefs();
+        NodeDefinition[] nodeDefs = new NodeDefinition[cnda.length];
-            nodeDefs[i] = new NodeDefImpl(cnda[i], ntMgr, nsResolver);
+            nodeDefs[i] = new NodeDefinitionImpl(cnda[i], ntMgr, nsResolver);
-     * of this node type) where <code>{@link PropertyDef#isAutoCreate()}</code>
+     * of this node type) where <code>{@link PropertyDefinition#isAutoCreated()}</code>
-     * @see PropertyDef#isAutoCreate
+     * @see PropertyDefinition#isAutoCreated
-    public PropertyDef[] getAutoCreatePropertyDefs() {
+    public PropertyDefinition[] getAutoCreatedPropertyDefinitions() {
-        PropertyDef[] propDefs = new PropertyDef[pda.length];
+        PropertyDefinition[] propDefs = new PropertyDefinition[pda.length];
-            propDefs[i] = new PropertyDefImpl(pda[i], ntMgr, nsResolver);
+            propDefs[i] = new PropertyDefinitionImpl(pda[i], ntMgr, nsResolver);
-     * of this node type) where <code>{@link PropertyDef#isMandatory()}</code>
+     * of this node type) where <code>{@link PropertyDefinition#isMandatory()}</code>
-     * @see PropertyDef#isMandatory
+     * @see PropertyDefinition#isMandatory
-    public PropertyDef[] getMandatoryPropertyDefs() {
+    public PropertyDefinition[] getMandatoryPropertyDefinitions() {
-        PropertyDef[] propDefs = new PropertyDef[pda.length];
+        PropertyDefinition[] propDefs = new PropertyDefinition[pda.length];
-            propDefs[i] = new PropertyDefImpl(pda[i], ntMgr, nsResolver);
+            propDefs[i] = new PropertyDefinitionImpl(pda[i], ntMgr, nsResolver);
-     * of this node type) where <code>{@link NodeDef#isMandatory()}</code>
+     * of this node type) where <code>{@link NodeDefinition#isMandatory()}</code>
-     * @see NodeDef#isMandatory
+     * @see NodeDefinition#isMandatory
-    public NodeDef[] getMandatoryNodeDefs() {
-        ChildNodeDef[] cnda = ent.getMandatoryNodeDefs();
-        NodeDef[] nodeDefs = new NodeDef[cnda.length];
+    public NodeDefinition[] getMandatoryNodeDefinitions() {
+        NodeDef[] cnda = ent.getMandatoryNodeDefs();
+        NodeDefinition[] nodeDefs = new NodeDefinition[cnda.length];
-            nodeDefs[i] = new NodeDefImpl(cnda[i], ntMgr, nsResolver);
+            nodeDefs[i] = new NodeDefinitionImpl(cnda[i], ntMgr, nsResolver);
-    public static void checkSetPropertyValueConstraints(PropertyDefImpl def,
+    public static void checkSetPropertyValueConstraints(PropertyDefinitionImpl def,
-    public NodeDef[] getChildNodeDefs() {
-        ChildNodeDef[] cnda = ent.getAllNodeDefs();
-        NodeDef[] nodeDefs = new NodeDef[cnda.length];
+    public NodeDefinition[] getChildNodeDefinitions() {
+        NodeDef[] cnda = ent.getAllNodeDefs();
+        NodeDefinition[] nodeDefs = new NodeDefinition[cnda.length];
-            nodeDefs[i] = new NodeDefImpl(cnda[i], ntMgr, nsResolver);
+            nodeDefs[i] = new NodeDefinitionImpl(cnda[i], ntMgr, nsResolver);
-    public PropertyDef[] getPropertyDefs() {
+    public PropertyDefinition[] getPropertyDefinitions() {
-        PropertyDef[] propDefs = new PropertyDef[pda.length];
+        PropertyDefinition[] propDefs = new PropertyDefinition[pda.length];
-            propDefs[i] = new PropertyDefImpl(pda[i], ntMgr, nsResolver);
+            propDefs[i] = new PropertyDefinitionImpl(pda[i], ntMgr, nsResolver);
-    public NodeDef[] getDeclaredChildNodeDefs() {
-        ChildNodeDef[] cnda = ntd.getChildNodeDefs();
-        NodeDef[] nodeDefs = new NodeDef[cnda.length];
+    public NodeDefinition[] getDeclaredChildNodeDefinitions() {
+        NodeDef[] cnda = ntd.getChildNodeDefs();
+        NodeDefinition[] nodeDefs = new NodeDefinition[cnda.length];
-            nodeDefs[i] = new NodeDefImpl(cnda[i], ntMgr, nsResolver);
+            nodeDefs[i] = new NodeDefinitionImpl(cnda[i], ntMgr, nsResolver);
-            PropertyDefImpl def;
+            PropertyDefinitionImpl def;
-                def = getApplicablePropertyDef(name, value.getType(), false);
+                def = getApplicablePropertyDefinition(name, value.getType(), false);
-                def = getApplicablePropertyDef(name, PropertyType.UNDEFINED, false);
+                def = getApplicablePropertyDefinition(name, PropertyType.UNDEFINED, false);
-            PropertyDefImpl def;
+            PropertyDefinitionImpl def;
-                def = getApplicablePropertyDef(name, type, true);
+                def = getApplicablePropertyDefinition(name, type, true);
-                def = getApplicablePropertyDef(name, PropertyType.UNDEFINED, true);
+                def = getApplicablePropertyDefinition(name, PropertyType.UNDEFINED, true);
-    public PropertyDef[] getDeclaredPropertyDefs() {
+    public PropertyDefinition[] getDeclaredPropertyDefinitions() {
-        PropertyDef[] propDefs = new PropertyDef[pda.length];
+        PropertyDefinition[] propDefs = new PropertyDefinition[pda.length];
-            propDefs[i] = new PropertyDefImpl(pda[i], ntMgr, nsResolver);
+            propDefs[i] = new PropertyDefinitionImpl(pda[i], ntMgr, nsResolver);

UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 INS5 UPD42 UPD5 UPD42 UPD5 UPD42 INS5 UPD42 INS5 UPD42 UPD5 UPD42 INS5 UPD42 UPD5 UPD42 UPD42 UPD42 UPD42 INS43 INS85 UPD43 UPD43 INS43 INS85 UPD43 INS43 INS85 UPD43 INS43 INS85 UPD43 INS42 MOV5 UPD5 UPD42 UPD5 UPD42 UPD5 INS42 MOV5 UPD5 UPD42 INS42 MOV5 UPD5 UPD42 UPD5 INS42 MOV5 UPD5 UPD42 UPD5 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD5 UPD42 UPD42 UPD42 UPD5 UPD42 UPD42 UPD5 UPD42 UPD42 UPD5 UPD42 UPD5 UPD42 UPD5 UPD42 UPD5 UPD43 UPD43 UPD42 UPD5 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5