- some minor refactoring
- added shutDownOnClose parameter to DerbyFileSystem

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@476176 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.fs.FileSystemException;
+import java.sql.Connection;
- * <li><code>user</code>: the database user (default: <code>""</code>)</li>
- * <li><code>password</code>: the user's password (default: <code>""</code>)</li>
+ * <li><code>user</code>: the database user (default: <code>null</code>)</li>
+ * <li><code>password</code>: the user's password (default: <code>null</code>)</li>
+ * <li><code>shutdownOnClose</code>: if <code>true</code> (the default) the
+ * database is shutdown when the last connection is closed;
+ * set this to <code>false</code> when using a standalone database</li>
+     * Flag indicating whether this derby database should be shutdown on close.
+     */
+    protected boolean shutdownOnClose;
+
+    /**
-        schemaObjectPrefix = "";
-        user = "";
-        password = "";
+        shutdownOnClose = true;
+    //----------------------------------------------------< setters & getters >
+
+    public boolean getShutdownOnClose() {
+        return shutdownOnClose;
+    }
+
+    public void setShutdownOnClose(boolean shutdownOnClose) {
+        this.shutdownOnClose = shutdownOnClose;
+    }
+
+
-     * {@inheritDoc}
+     * Closes the given connection and shuts down the embedded Derby
+     * database if <code>shutdownOnClose</code> is set to true.
+     *
+     * @param connection database connection
+     * @throws SQLException if an error occurs
+     * @see DatabaseFileSystem#closeConnection(Connection)
-    public void close() throws FileSystemException {
-        if (!initialized) {
-            throw new IllegalStateException("not initialized");
-        }
-
+    protected void closeConnection(Connection connection) throws SQLException {
-        String url;
-        try {
-            url = con.getMetaData().getURL();
-        } catch (SQLException e) {
-            String msg = "error closing file system";
-            log.error(msg, e);
-            throw new FileSystemException(msg, e);
-        }
-
+        String url = connection.getMetaData().getURL();
-        // call base class implementation
-        super.close();
+        // we have to reset the connection to 'autoCommit=true' before closing it;
+        // otherwise Derby would mysteriously complain about some pending uncommitted
+        // changes which can't possibly be true.
+        // @todo further investigate
+        connection.setAutoCommit(true);
+        connection.close();
-        // now it's safe to shutdown the embedded Derby database
-        try {
-            DriverManager.getConnection(url);
-        } catch (SQLException e) {
-            // a shutdown command always raises a SQLException
-            log.info(e.getMessage());
+        if (shutdownOnClose) {
+            // now it's safe to shutdown the embedded Derby database
+            try {
+                DriverManager.getConnection(url);
+            } catch (SQLException e) {
+                // a shutdown command always raises a SQLException
+                log.info(e.getMessage());
+            }

MOV26 UPD40 INS23 INS31 INS31 INS29 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 UPD83 UPD42 INS44 MOV43 UPD66 UPD66 INS66 INS66 INS66 INS65 INS42 INS41 INS39 INS42 INS21 INS65 INS65 INS65 INS65 INS43 INS42 INS60 MOV21 INS21 INS25 INS66 INS42 INS7 INS66 INS66 INS42 INS66 INS42 INS66 INS68 UPD42 MOV42 MOV43 INS59 INS32 INS42 INS8 UPD42 INS9 INS22 INS42 INS42 INS42 INS69 MOV42 INS32 UPD42 UPD42 INS9 INS42 INS42 MOV54 INS52 INS42 INS43 MOV32 MOV42 INS42 UPD42 DEL45 DEL42 DEL45 DEL7 DEL21 DEL42 DEL45 DEL7 DEL21 DEL65 DEL65 DEL43 DEL42 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL44 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL48 DEL21