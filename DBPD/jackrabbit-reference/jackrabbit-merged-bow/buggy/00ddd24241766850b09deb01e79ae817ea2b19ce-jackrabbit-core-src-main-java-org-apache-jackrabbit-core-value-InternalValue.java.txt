JCR-926: new configuration parameter, bugfixes, and improved test coverage

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@574543 13f79535-47bb-0310-9956-ffa450edef68

-     * Byte arrays smaller or equal this size are always kept in memory
+     * Temporary binary values smaller or equal this size are kept in memory
-    private static final int MIN_BLOB_FILE_SIZE = Integer.parseInt(System.getProperty("org.jackrabbit.minBlobFileSize", "100"));
+    private static final int MIN_BLOB_FILE_SIZE = 1024;
-    private final Object val;
+    private Object val;
-        if (USE_DATA_STORE) {
-            return new InternalValue(BLOBInTempFile.getInstance(value, false));
-        }                
+        assert !USE_DATA_STORE;
-        byte[] buffer = new byte[MIN_BLOB_FILE_SIZE];
-        int pos = 0, len = MIN_BLOB_FILE_SIZE;
-        while (pos < MIN_BLOB_FILE_SIZE) {
+        int maxMemorySize;
+        if (store != null) {
+            maxMemorySize = store.getMinRecordLength() - 1;
+        } else {
+            maxMemorySize = MIN_BLOB_FILE_SIZE;
+        }
+        maxMemorySize = Math.max(0, maxMemorySize);
+        byte[] buffer = new byte[maxMemorySize];
+        int pos = 0, len = maxMemorySize;
+        while (pos < maxMemorySize) {
-        if (pos < MIN_BLOB_FILE_SIZE) {
+        if (pos < maxMemorySize) {
+    public void store(DataStore dataStore) throws RepositoryException, IOException {
+        assert USE_DATA_STORE;
+        assert dataStore != null;
+        assert type == PropertyType.BINARY;
+        BLOBFileValue v = (BLOBFileValue) val;
+        if (v instanceof BLOBInDataStore) {
+            // already in the data store, OK
+            return;
+        } else if (v instanceof BLOBInMemory) {
+            if (v.getLength() < dataStore.getMinRecordLength()) {
+                // in memory and does not make sense to store, OK
+                return;
+            }
+        }
+        // store the temp file to the data store, or (theoretically) load it in memory
+        val = getBLOBFileValue(dataStore, v.getStream());
+    }
+

INS23 INS31 MOV29 MOV83 MOV83 MOV83 MOV39 INS59 INS83 INS39 INS42 INS44 INS43 INS43 INS8 MOV42 INS34 INS6 INS60 INS25 INS21 INS43 INS42 INS42 INS42 INS6 INS6 INS6 INS60 INS25 INS21 UPD66 INS38 INS39 INS59 INS27 INS8 INS8 INS7 MOV5 INS42 INS42 INS27 INS27 INS43 INS59 INS62 INS8 INS25 INS7 INS42 INS42 INS42 INS33 INS21 INS21 INS42 INS32 UPD42 UPD42 UPD42 INS42 INS33 INS42 INS40 INS42 INS42 INS11 INS42 INS43 INS41 INS62 INS8 INS42 INS32 INS7 INS7 INS42 INS42 INS34 INS42 MOV5 UPD42 INS43 INS42 INS42 INS42 INS43 INS25 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS27 INS42 INS42 INS42 INS42 INS27 INS8 UPD42 UPD42 INS32 INS34 INS32 INS32 INS41 INS42 INS42 INS42 INS42 INS42 INS42 DEL32 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL9 DEL32 DEL14 DEL41 DEL8 DEL25 DEL45 DEL45