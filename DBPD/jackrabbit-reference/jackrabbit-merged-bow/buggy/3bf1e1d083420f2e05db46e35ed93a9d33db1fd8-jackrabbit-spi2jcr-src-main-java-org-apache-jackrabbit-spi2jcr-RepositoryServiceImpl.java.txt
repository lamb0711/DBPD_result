JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Tree;
+    @Override
+    public PrivilegeDefinition[] getPrivileges(SessionInfo sessionInfo, NodeId nodeId) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        String path = (nodeId == null) ? null : pathForId(nodeId, sInfo);
+        NamePathResolver npResolver = sInfo.getNamePathResolver();
+        
+        Privilege[] privs = sInfo.getSession().getAccessControlManager().getPrivileges(path);
+        List<PrivilegeDefinition> pDefs = new ArrayList<PrivilegeDefinition>(privs.length);
+        for (Privilege priv : privs) {
+            Name privName = npResolver.getQName(priv.getName());
+            Set<Name> aggrNames = null;
+            if (priv.isAggregate()) {
+                aggrNames = new HashSet<Name>();
+                for (Privilege dap : priv.getDeclaredAggregatePrivileges()) {
+                    aggrNames.add(npResolver.getQName(dap.getName()));
+                }
+            }
+            PrivilegeDefinition def = new PrivilegeDefinitionImpl(privName, priv.isAbstract(), aggrNames);
+            pDefs.add(def);
+        }
+        return pDefs.toArray(new PrivilegeDefinition[pDefs.size()]);
+    }
+    
+    @Override
+    public Tree createTree(SessionInfo sessionInfo, Batch batch, Name nodeName, Name primaryTypeName, String uniqueId) throws RepositoryException {
+        return new XmlTree(nodeName, primaryTypeName, uniqueId, getSessionInfoImpl(sessionInfo).getNamePathResolver());
+    }
+
+        //----------------------------------------------------------< Batch >---
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        public void setTree(final NodeId parentId, Tree tree) throws RepositoryException {
+            if (!(tree instanceof XmlTree)) {
+                throw new RepositoryException("Unknown Tree implementation: " + tree.getClass().getName());
+            }
+
+            final XmlTree xmlTree = (XmlTree) tree;
+            executeGuarded(new Callable() {
+                public Object run() throws RepositoryException {
+                    Session s = sInfo.getSession();
+                    Node parent = getParent(parentId, sInfo);
+                    String xml = xmlTree.toXML();;
+                    InputStream in = new ByteArrayInputStream(xml.getBytes());
+                    try {
+                        s.importXML(parent.getPath(), in, ImportUUIDBehavior.IMPORT_UUID_COLLISION_THROW);
+                    } catch (IOException e) {
+                        throw new RepositoryException(e.getMessage(), e);
+                    } finally {
+                        try {
+                            in.close();
+                        } catch (IOException e) {
+                            throw new RepositoryException(e.getMessage(), e);
+                        }
+                    }
+                    return null;
+                }
+            });
+        }
+
+        //----------------------------------------------------------------------

INS26 INS40 INS31 INS31 INS78 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS31 INS42 INS43 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS70 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS5 INS59 INS74 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS83 INS43 INS42 INS43 INS42 INS42 INS25 INS60 INS21 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS60 INS25 INS60 INS21 INS42 INS42 INS3 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS38 INS8 INS83 INS43 INS59 INS32 INS42 INS42 INS36 INS33 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS74 INS40 INS42 INS43 INS59 INS74 INS59 INS32 INS8 INS43 INS59 INS32 INS5 INS32 INS42 INS32 INS42 INS36 INS53 INS42 INS42 INS11 INS42 INS14 INS27 INS42 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS43 INS42 INS33 INS42 INS42 INS21 INS70 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS62 INS14 INS43 INS42 INS43 INS1 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS7 INS44 INS32 INS8 INS43 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS27 INS42 INS42 INS31 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS83 INS43 INS42 INS43 INS8 INS74 INS42 INS32 INS32 INS42 INS42 INS42 INS60 INS60 INS60 INS20 INS60 INS54 INS41 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS8 INS33 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS21 INS44 INS8 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS43 INS42 INS53 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS14 INS21 INS44 INS8 INS42 INS42 INS43 INS32 INS42 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS32 INS42 INS42 INS42 INS42