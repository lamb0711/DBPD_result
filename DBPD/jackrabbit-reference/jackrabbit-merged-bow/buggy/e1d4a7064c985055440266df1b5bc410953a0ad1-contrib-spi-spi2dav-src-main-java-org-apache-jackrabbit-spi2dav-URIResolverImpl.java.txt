JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.PathFormat;
-import org.apache.jackrabbit.name.MalformedPathException;
-import org.apache.jackrabbit.name.NameFormat;
-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NamespaceResolver;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.name.NameConstants;
-    private final NamespaceResolver nsResolver;
+    private final NamePathResolver resolver;
-                    NamespaceResolver nsResolver, Document domFactory) {
+                    NamePathResolver resolver, Document domFactory) {
-        this.nsResolver = nsResolver;
+        this.resolver = resolver;
-                try {
-                    String jcrPath = PathFormat.format(path, nsResolver);
-                    if (!path.isAbsolute() && !uriBuffer.toString().endsWith("/")) {
-                        uriBuffer.append("/");
-                    }
-                    uriBuffer.append(Text.escapePath(jcrPath));
-                } catch (NoPrefixDeclaredException e) {
-                    throw new RepositoryException(e);
+                String jcrPath = resolver.getJCRPath(path);
+                if (!path.isAbsolute() && !uriBuffer.toString().endsWith("/")) {
+                    uriBuffer.append("/");
+                uriBuffer.append(Text.escapePath(jcrPath));
-            QName qName = service.getQName(propSet, nsResolver);
-            if (qName == QName.ROOT) {
-                nodeId = service.getIdFactory().createNodeId((String) null, Path.ROOT);
+            Name qName = service.getQName(propSet, resolver);
+            if (NameConstants.ROOT.equals(qName)) {
+                nodeId = service.getIdFactory().createNodeId((String) null, service.getPathFactory().getRootPath());
-                nodeId = service.getIdFactory().createNodeId(parentId, Path.create(qName, index));
+                nodeId = service.getIdFactory().createNodeId(parentId, service.getPathFactory().create(qName, index));
-            QName name = NameFormat.parse(propSet.get(ItemResourceConstants.JCR_NAME).getValue().toString(), nsResolver);
+            Name name = resolver.getQName(propSet.get(ItemResourceConstants.JCR_NAME).getValue().toString());
-            return PathFormat.parse(Text.unescape(jcrPath), nsResolver);
-        } catch (MalformedPathException e) {
+            return resolver.getQPath(Text.unescape(jcrPath));
+        } catch (NameException e) {
-            PropertyId propertyId = service.getIdFactory().createPropertyId(parentId, NameFormat.parse(propName, nsResolver));
+            Name name = resolver.getQName(propName);
+            PropertyId propertyId = service.getIdFactory().createPropertyId(parentId, name);

MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 INS60 UPD42 MOV8 UPD43 INS32 UPD43 UPD43 INS43 INS59 UPD42 INS40 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 UPD42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL40 DEL27 DEL40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32