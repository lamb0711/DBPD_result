JCR-1733: add support for WebDAV BIND protocol to simple webdav servlet, includes client compontents and test cases (requires the o.a.j.api.jsr283 extensions for shareable node support as defined in JSR-283)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@700097 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.bind.RebindInfo;
+import org.apache.jackrabbit.webdav.bind.UnbindInfo;
+import org.apache.jackrabbit.webdav.bind.BindableResource;
+import org.apache.jackrabbit.webdav.bind.BindInfo;
+            case DavMethods.DAV_REBIND:
+                doRebind(request, response, resource);
+                break;
+            case DavMethods.DAV_UNBIND:
+                doUnbind(request, response, resource);
+                break;
+            case DavMethods.DAV_BIND:
+                doBind(request, response, resource);
+                break;
-        int status = validateDestination(destResource, request);
+        int status = validateDestination(destResource, request, true);
-        int status = validateDestination(destResource, request);
+        int status = validateDestination(destResource, request, true);
+     * The BIND method
+     *
+     * @param request
+     * @param response
+     * @param resource the collection resource to which a new member will be added
+     * @throws IOException
+     * @throws DavException
+     */
+    protected void doBind(WebdavRequest request, WebdavResponse response,
+                          DavResource resource) throws IOException, DavException {
+
+        if (!resource.exists()) {
+            response.sendError(DavServletResponse.SC_NOT_FOUND);
+        }
+        BindInfo bindInfo = request.getBindInfo();
+        DavResource oldBinding = getResourceFactory().createResource(request.getHrefLocator(bindInfo.getHref()), request, response);
+        if (!(oldBinding instanceof BindableResource)) {
+            response.sendError(DavServletResponse.SC_METHOD_NOT_ALLOWED);
+            return;
+        }
+        DavResource newBinding = getResourceFactory().createResource(request.getMemberLocator(bindInfo.getSegment()), request, response);
+        int status = validateDestination(newBinding, request, false);
+        if (status > DavServletResponse.SC_NO_CONTENT) {
+            response.sendError(status);
+            return;
+        }
+        ((BindableResource) oldBinding).bind(resource, newBinding);
+        response.setStatus(status);
+    }
+
+    /**
+     * The REBIND method
+     *
+     * @param request
+     * @param response
+     * @param resource the collection resource to which a new member will be added
+     * @throws IOException
+     * @throws DavException
+     */
+    protected void doRebind(WebdavRequest request, WebdavResponse response,
+                            DavResource resource) throws IOException, DavException {
+
+        if (!resource.exists()) {
+            response.sendError(DavServletResponse.SC_NOT_FOUND);
+        }
+        RebindInfo rebindInfo = request.getRebindInfo();
+        DavResource oldBinding = getResourceFactory().createResource(request.getHrefLocator(rebindInfo.getHref()), request, response);
+        if (!(oldBinding instanceof BindableResource)) {
+            response.sendError(DavServletResponse.SC_METHOD_NOT_ALLOWED);
+            return;
+        }
+        DavResource newBinding = getResourceFactory().createResource(request.getMemberLocator(rebindInfo.getSegment()), request, response);
+        int status = validateDestination(newBinding, request, false);
+        if (status > DavServletResponse.SC_NO_CONTENT) {
+            response.sendError(status);
+            return;
+        }
+        ((BindableResource) oldBinding).rebind(resource, newBinding);
+        response.setStatus(status);
+    }
+
+    /**
+     * The UNBIND method
+     *
+     * @param request
+     * @param response
+     * @param resource the collection resource from which a member will be removed
+     * @throws IOException
+     * @throws DavException
+     */
+    protected void doUnbind(WebdavRequest request, WebdavResponse response,
+                            DavResource resource) throws IOException, DavException {
+
+        UnbindInfo unbindInfo = request.getUnbindInfo();
+        DavResource srcResource = getResourceFactory().createResource(request.getMemberLocator(unbindInfo.getSegment()), request, response);
+        resource.removeMember(srcResource);
+    }
+
+    /**
-    private int validateDestination(DavResource destResource, WebdavRequest request)
+    private int validateDestination(DavResource destResource, WebdavRequest request, boolean checkHeader)
-        String destHeader = request.getHeader(HEADER_DESTINATION);
-        if (destHeader == null || "".equals(destHeader)) {
-            return DavServletResponse.SC_BAD_REQUEST;
+        if (checkHeader) {
+            String destHeader = request.getHeader(HEADER_DESTINATION);
+            if (destHeader == null || "".equals(destHeader)) {
+                return DavServletResponse.SC_BAD_REQUEST;
+            }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS44 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS25 INS60 INS60 INS25 INS60 INS60 INS25 INS21 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS25 INS60 INS60 INS25 INS60 INS60 INS25 INS21 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS21 INS39 INS42 INS25 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS66 INS42 INS42 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS38 INS8 INS43 INS59 INS43 INS59 INS38 INS8 INS43 INS59 INS39 INS59 INS27 INS8 INS32 INS32 INS66 INS42 INS42 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS38 INS8 INS43 INS59 INS43 INS59 INS38 INS8 INS43 INS59 INS39 INS59 INS27 INS8 INS32 INS32 INS66 INS42 INS42 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS8 INS40 INS32 INS40 INS32 INS40 INS32 INS32 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS36 INS21 INS41 INS42 INS42 INS32 INS42 INS32 INS42 INS40 INS21 INS41 INS36 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS36 INS21 INS41 INS42 INS42 INS32 INS42 INS32 INS42 INS40 INS21 INS41 INS36 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 MOV60 MOV25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS9 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS62 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS62 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS11 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42