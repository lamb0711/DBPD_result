JCR-2453 - Break the spi2dav dependency to jcr-server

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1002639 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.commons.webdav.ValueUtil;
-import org.apache.jackrabbit.webdav.xml.DomUtil;
-import java.util.ArrayList;
-import java.util.List;
- * <code>ValuesProperty</code> extends {@link org.apache.jackrabbit.webdav.property.DavProperty} providing
- * utilities to handle the multiple values of the property item represented
- * by this resource.
+ * <code>ValuesProperty</code> implements {@link org.apache.jackrabbit.webdav.property.DavProperty}
+ * providing utilities to handle the value(s) of a JCR property item resource.
+ * In case the property is multivalued the DavProperty value consists of
+ * an element named {@link #JCR_VALUES} otherwise its name is {@link #JCR_VALUE}.
-        // retrieve jcr-values from child 'value'-element(s)
-        List<Element> valueElements = new ArrayList<Element>();
-        Object propValue = property.getValue();
-        if (propValue == null) {
-            jcrValues = new Value[0];
-        } else { /* not null propValue */
-            if (isValueElement(propValue)) {
-                valueElements.add((Element) propValue);
-            } else if (propValue instanceof List) {
-                for (Object el : ((List<?>) property.getValue())) {
-                    /* make sure, only Elements with name 'value' are used for
-                    * the 'value' field. any other content (other elements, text,
-                    * comment etc.) is ignored. NO bad-request/conflict error is
-                    * thrown.
-                    */
-                    if (isValueElement(el)) {
-                        valueElements.add((Element) el);
-                    }
-                }
-            }
-            /* fill the 'value' with the valid 'value' elements found before */
-            jcrValues = new Value[valueElements.size()];
-            int i = 0;
-            for (Element element : valueElements) {
-                jcrValues[i] = getJcrValue(element, defaultType, valueFactory);
-                i++;
-            }
-        }
-    }
-
-    private static boolean isValueElement(Object obj) {
-        return obj instanceof Element && XML_VALUE.equals(((Element)obj).getLocalName());
+        jcrValues = ValueUtil.valuesFromXml(property.getValue(), defaultType, valueFactory);
-     *
-     * @param valueElement
-     * @param defaultType
-     * @return
-     * @throws ValueFormatException
-     * @throws RepositoryException
-     */
-    private static Value getJcrValue(Element valueElement, int defaultType,
-                                     ValueFactory valueFactory)
-        throws ValueFormatException, RepositoryException {
-        if (valueElement == null) {
-            return null;
-        }
-        // make sure the value is never 'null'
-        String value = DomUtil.getText(valueElement, "");
-        String typeStr = DomUtil.getAttribute(valueElement, ATTR_VALUE_TYPE, ItemResourceConstants.NAMESPACE);
-        int type = (typeStr == null) ? defaultType : PropertyType.valueFromName(typeStr);
-        // deserialize value ->> see #toXml where values are serialized
-        return ValueHelper.deserialize(value, type, true, valueFactory);
-    }
-
-    /**
-     * @throws ValueFormatException if convertion of the internal jcr values to
+     * @throws ValueFormatException if converting the internal jcr values to
-        return jcrValues;
+        return vs;
-                String type = PropertyType.nameFromValue(v.getType());
-                String serializedValue = ValueHelper.serialize(v, true);
-                Element xmlValue = DomUtil.createElement(document, XML_VALUE, ItemResourceConstants.NAMESPACE, serializedValue);
-                DomUtil.setAttribute(xmlValue, ATTR_VALUE_TYPE, ItemResourceConstants.NAMESPACE, type);
+                Element xmlValue = ValueUtil.valueToXml(v, document);

MOV26 UPD40 INS29 INS83 INS42 INS65 INS8 UPD66 MOV66 MOV65 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS65 INS66 INS65 INS66 MOV46 MOV25 MOV21 INS67 INS67 UPD66 UPD42 INS42 INS42 INS42 UPD42 UPD42 MOV32 MOV43 UPD42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL65 DEL29 DEL83 DEL42 DEL42 DEL42 DEL2 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL21 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL8 DEL25 DEL25 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL37 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL32 DEL27 DEL41 DEL8 DEL31 DEL42 DEL65 DEL42 DEL65 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL42 DEL42 DEL32 DEL16 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21