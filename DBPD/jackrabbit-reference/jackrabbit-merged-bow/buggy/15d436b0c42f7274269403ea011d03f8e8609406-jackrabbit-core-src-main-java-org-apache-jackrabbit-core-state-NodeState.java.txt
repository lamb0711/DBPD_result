JCR-2707: improve performance when saving a node with a large number of child nodes (e.g. > 10k child node entries)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@984411 13f79535-47bb-0310-9956-ffa450edef68

+    //-------------------------------------------------------< public methods >
-    protected synchronized void copy(ItemState state, boolean syncModCount) {
+    public synchronized void copy(ItemState state, boolean syncModCount) {
-    //-------------------------------------------------------< public methods >
-     * Renames a new <code>ChildNodeEntry</code>.
+     * Renames a  <code>ChildNodeEntry</code> by removing the old entry and
+     * appending the new entry to the end of the list.
-     * @return <code>true</code> if the entry was sucessfully renamed;
+     * @return <code>true</code> if the entry was successfully renamed;
-     * @param nodeEntries list of {@link ChildNodeEntry} or
-     * a {@link ChildNodeEntries} list.
+     * @param nodeEntries list of {@link ChildNodeEntry}s
-            if (nodeEntries instanceof ChildNodeEntries) {
-                // optimization
-                ChildNodeEntries entries = (ChildNodeEntries) nodeEntries;
-                childNodeEntries = (ChildNodeEntries) entries.clone();
-            } else {
-                childNodeEntries.removeAll();
-                childNodeEntries.addAll(nodeEntries);
-            }
+            childNodeEntries.removeAll();
+            childNodeEntries.addAll(nodeEntries);

UPD83 UPD66 INS66 UPD66 UPD66 MOV8 DEL66 DEL42 DEL65 DEL66 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL25 DEL8