JCR-1588 JSR 283: Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@748247 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.api.security.principal.NoSuchPrincipalException;
+import org.apache.jackrabbit.core.security.authorization.JackrabbitAccessControlPolicy;
-                getPrincipal(nodePath);
+                Principal p = getPrincipal(nodePath);
+                if (p == null) {
+                    throw new AccessControlException("Access control modification not allowed at " + nodePath);
+                }
-        } else {
-            // nodePath not below rep:accesscontrol -> not editable
-            return new AccessControlPolicy[0];
+
+        // nodePath not below rep:accesscontrol -> not editable
+        return new AccessControlPolicy[0];
-    public AccessControlPolicy[] editAccessControlPolicies(Principal principal) throws RepositoryException {
+    public JackrabbitAccessControlPolicy[] editAccessControlPolicies(Principal principal) throws RepositoryException {
-            throw new AccessControlException("Unknown principal.");
+            throw new AccessControlException("Cannot edit access control: " + principal.getName() +" isn't a known principal.");
-        return new AccessControlPolicy[] {createTemplate(acNode)};
+        return new JackrabbitAccessControlPolicy[] {createTemplate(acNode)};
+            Name ntName = (i < segms.length-1) ? NT_REP_ACCESS_CONTROL : NT_REP_PRINCIPAL_ACCESS_CONTROL;
-                node = node.getNode(nName);
-                if (!node.isNodeType(NT_REP_ACCESS_CONTROL)) {
+                NodeImpl n = node.getNode(nName);
+                if (!n.isNodeType(ntName)) {
-                    throw new RepositoryException("Internal error: Unexpected nodetype " + node.getPrimaryNodeType().getName() + " below /rep:accessControl");
+                    throw new RepositoryException("Error while creating access control node: Expected nodetype " + session.getJCRName(ntName) + " below /rep:accessControl, was " + node.getPrimaryNodeType().getName() + " instead");
+                node = n;
-                node = addNode(node, nName, NT_REP_ACCESS_CONTROL);
+                node = addNode(node, nName, ntName);
-        String name = Text.unescapeIllegalJcrChars(Text.getName(pathToACNode));
+        String name = getPrincipalName(pathToACNode);
-        if (!pMgr.hasPrincipal(name)) {
-            throw new AccessControlException("Unknown principal.");
+        if (pMgr.hasPrincipal(name)) {
+            return pMgr.getPrincipal(name);
+        } else {
+            return null;
-        return pMgr.getPrincipal(name);
+    }
+
+    private static String getPrincipalName(String pathToACNode) {
+        return Text.unescapeIllegalJcrChars(Text.getName(pathToACNode));
-        return node != null && node.isNodeType(NT_REP_ACCESS_CONTROL) && node.hasNode(N_POLICY);
+        return node != null && node.isNodeType(NT_REP_PRINCIPAL_ACCESS_CONTROL) && node.hasNode(N_POLICY);
-    private static AccessControlPolicy createTemplate(NodeImpl acNode) throws RepositoryException {
-        if (!acNode.isNodeType(NT_REP_ACCESS_CONTROL)) {
-            throw new RepositoryException("Expected node of type rep:AccessControl.");
+    private JackrabbitAccessControlPolicy createTemplate(NodeImpl acNode) throws RepositoryException {
+        if (!acNode.isNodeType(NT_REP_PRINCIPAL_ACCESS_CONTROL)) {
+            String msg = "Unable to edit Access Control at "+ acNode.getPath()+ ". Expected node of type rep:PrinicipalAccessControl, was " + acNode.getPrimaryNodeType().getName();
+            log.debug(msg);
+            throw new AccessControlException(msg);
-        Principal principal = null;
-        String principalName = Text.unescapeIllegalJcrChars(acNode.getName());
-        PrincipalManager pMgr = ((SessionImpl) acNode.getSession()).getPrincipalManager();
-        if (pMgr.hasPrincipal(principalName)) {
-            try {
-                principal = pMgr.getPrincipal(principalName);
-            } catch (NoSuchPrincipalException e) {
-                // should not get here. 
-            }
-        }
+        Principal principal = getPrincipal(acNode.getPath());
+            // use fall back in order to be able to get/remove the policy
+            String principalName = getPrincipalName(acNode.getPath());

MOV26 UPD40 INS31 INS31 UPD5 MOV83 MOV83 MOV43 INS42 INS44 INS8 MOV29 INS83 UPD43 MOV43 MOV42 MOV44 MOV43 MOV8 MOV41 UPD43 INS43 INS42 INS41 UPD42 INS25 INS60 UPD42 INS43 MOV32 INS8 INS42 MOV32 MOV38 INS8 MOV43 INS59 UPD5 INS60 INS42 INS32 MOV41 INS41 INS60 INS21 MOV53 INS42 INS32 INS60 UPD43 INS43 INS59 MOV21 INS42 INS42 INS33 UPD42 MOV43 INS59 INS32 MOV42 INS32 INS43 INS59 INS60 INS25 INS27 UPD42 INS42 INS42 INS16 INS60 UPD42 INS42 INS27 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS45 INS32 INS45 INS36 INS42 INS42 INS43 INS59 INS45 INS32 INS45 INS32 INS42 INS32 INS42 INS42 MOV32 INS42 INS33 INS53 INS42 INS42 INS27 INS42 INS42 MOV32 INS42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 INS42 INS42 INS14 INS42 INS27 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS43 INS27 INS40 INS34 MOV32 INS42 INS45 INS42 UPD45 INS32 UPD45 INS45 INS42 INS42 INS42 DEL21 DEL8 DEL45 DEL38 DEL45 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL32 DEL11 DEL36 DEL32 DEL59 DEL60 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL31