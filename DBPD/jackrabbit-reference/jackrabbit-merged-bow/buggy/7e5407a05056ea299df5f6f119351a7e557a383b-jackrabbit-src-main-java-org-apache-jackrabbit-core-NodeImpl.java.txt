[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

+    /** the definition of this node */
-                    return new PropertyId(thisState.getUUID(), propName);
+                    return new PropertyId(thisState.getNodeId(), propName);
-                        return new NodeId(cne.getUUID());
+                        return cne.getId();
-                genValues = new InternalValue[]{InternalValue.create(thisState.getUUID())};
+                genValues = new InternalValue[]{
+                        InternalValue.create(thisState.getNodeId().getUUID().toString())
+                };
-        String parentUUID = ((NodeState) state).getUUID();
+        NodeId parentId = (NodeId) state.getId();
-                    stateMgr.createTransientPropertyState(parentUUID, name,
+                    stateMgr.createTransientPropertyState(parentId, name,
-                                                    String uuid)
+                                                    NodeId id)
-        String parentUUID = ((NodeState) state).getUUID();
+        NodeId parentId = (NodeId) state.getId();
-            if (uuid == null) {
-                uuid = UUID.randomUUID().toString();    // version 4 uuid
+            if (id == null) {
+                id = new NodeId(UUID.randomUUID());
-                    stateMgr.createTransientNodeState(uuid, nodeType.getQName(),
-                            parentUUID, ItemState.STATUS_NEW);
+                    stateMgr.createTransientNodeState(id, nodeType.getQName(),
+                            parentId, ItemState.STATUS_NEW);
-        thisState.addChildNodeEntry(name, nodeState.getUUID());
+        thisState.addChildNodeEntry(name, nodeState.getNodeId());
-    protected void renameChildNode(QName oldName, int index, String uuid,
+    protected void renameChildNode(QName oldName, int index, NodeId id,
-        PropertyId propId = new PropertyId(thisState.getUUID(), propName);
+        PropertyId propId = new PropertyId(thisState.getNodeId(), propName);
-        NodeId childId = new NodeId(entry.getUUID());
+        NodeId childId = entry.getId();
-                NodeId childId = new NodeId(entry.getUUID());
+                NodeId childId = entry.getId();
-            PropertyId propId = new PropertyId(thisState.getUUID(), propName);
+            PropertyId propId = new PropertyId(thisState.getNodeId(), propName);
-        thisState.setParentUUID(null);
+        thisState.setParentId(null);
-                                       String uuid)
+                                       NodeId id)
-        return parentNode.internalAddChildNode(nodeName, nodeType, uuid);
+        return parentNode.internalAddChildNode(nodeName, nodeType, id);
-                                            NodeTypeImpl nodeType, String uuid)
+                                            NodeTypeImpl nodeType, NodeId id)
-            NodeId newId = new NodeId(cne.getUUID());
+            NodeId newId = cne.getId();
-        return createChildNode(nodeName, def, nodeType, uuid);
+        return createChildNode(nodeName, def, nodeType, id);
-            prop = (PropertyImpl) itemMgr.getItem(new PropertyId(thisState.getUUID(), QName.JCR_MIXINTYPES));
+            prop = (PropertyImpl) itemMgr.getItem(new PropertyId(thisState.getNodeId(), QName.JCR_MIXINTYPES));
-            // parent uuid's
-            persistentState.setParentUUID(transientState.getParentUUID());
+            // parent id's
+            persistentState.setParentId(transientState.getParentId());
-        thisState.setParentUUID(transientState.getParentUUID());
+        thisState.setParentId(transientState.getParentId());
-            PropertyImpl prop = (PropertyImpl) itemMgr.getItem(new PropertyId(thisState.getUUID(), propName));
+            PropertyImpl prop = (PropertyImpl) itemMgr.getItem(
+                    new PropertyId(thisState.getNodeId(), propName));
-            NodeImpl node = (NodeImpl) itemMgr.getItem(new NodeId(entry.getUUID()));
+            NodeImpl node = (NodeImpl) itemMgr.getItem(entry.getId());
-    public String internalGetUUID() {
-        return ((NodeState) state).getUUID();
+    public UUID internalGetUUID() {
+        return ((NodeId) state.getId()).getUUID();
-        NodeId nodeId = new NodeId(cne.getUUID());
-            return (NodeImpl) itemMgr.getItem(nodeId);
+            return (NodeImpl) itemMgr.getItem(cne.getId());
-        NodeId nodeId = new NodeId(cne.getUUID());
-
-        return itemMgr.itemExists(nodeId);
+        return itemMgr.itemExists(cne.getId());
-        PropertyId propId = new PropertyId(thisState.getUUID(), name);
+        PropertyId propId = new PropertyId(thisState.getNodeId(), name);
-        PropertyId propId = new PropertyId(thisState.getUUID(), name);
+        PropertyId propId = new PropertyId(thisState.getNodeId(), name);
-                                         String uuid)
+                                         UUID uuid)
-        return internalAddChildNode(nodeName, nt, uuid);
+        return internalAddChildNode(nodeName, nt, new NodeId(uuid));
+    /**
+     * Return the id of this <code>Node</code>.
+     *
+     * @return the id of this <code>Node</code>
+     */
+    public NodeId getNodeId() {
+        return (NodeId) id;
+    }
+
-        if (state.getParentUUID() == null) {
+        if (state.getId() == null) {
-        String parentUUID = state.getParentUUID();
-        if (parentUUID == null) {
+        NodeId parentId = state.getParentId();
+        if (parentId == null) {
-        return (Node) itemMgr.getItem(new NodeId(parentUUID));
+        return (Node) itemMgr.getItem(parentId);
-            NodeReferencesId targetId = new NodeReferencesId(((NodeId) id).getUUID());
+            NodeReferencesId targetId = new NodeReferencesId((NodeId) id);
-        return ((NodeState) state).getUUID();
+        return internalGetUUID().toString();
-        String parentUUID = state.getParentUUID();
-        if (parentUUID == null) {
+        NodeId parentId = state.getParentId();
+        if (parentId == null) {
-                    (NodeState) stateMgr.getItemState(new NodeId(parentUUID));
+                    (NodeState) stateMgr.getItemState(parentId);
-                    parent.getChildNodeEntry(((NodeState) state).getUUID());
+                    parent.getChildNodeEntry((NodeId) state.getId());
-        String uuid = frozen.getFrozenUUID();
+        UUID uuid = frozen.getFrozenUUID();
-        NodeImpl node = internalAddChildNode(name, nt, uuid);
+        NodeImpl node = internalAddChildNode(name, nt, new NodeId(uuid));
-        String uuid = frozen.getFrozenUUID();
+        UUID uuid = frozen.getFrozenUUID();
-        NodeImpl node = internalAddNode(relPath, nt, uuid);
+        NodeImpl node = internalAddNode(relPath, nt, new NodeId(uuid));
-            String uuid = child.internalGetUUID();
+            NodeId id = (NodeId) child.getId();
-                    dstNode = (NodeImpl) session.getNodeByUUID(uuid);
+                    dstNode = session.getNodeById(id);
-                uuid = null;
+                id = null;
-                dstNode = internalAddChildNode(child.getQName(), (NodeTypeImpl) child.getPrimaryNodeType(), uuid);
+                dstNode = internalAddChildNode(child.getQName(), (NodeTypeImpl) child.getPrimaryNodeType(), id);
-        UUID uuid = new UUID(((NodeId) version.getId()).getUUID());
+        UUID uuid = ((NodeId) version.getId()).getUUID();
-            String uuid = freeze.getFrozenUUID();
-            if (uuid != null && !uuid.equals(getUUID())) {
+            UUID uuid = freeze.getFrozenUUID();
+            if (!internalGetUUID().equals(uuid)) {
-                VersionHistory history = (VersionHistory) session.getNodeByUUID(f.getVersionHistoryId());
-                String nodeId = history.getVersionableUUID();
+                VersionHistory history = (VersionHistory) session.getNodeById(f.getVersionHistoryId());
+                NodeId nodeId = NodeId.valueOf(history.getVersionableUUID());
-                if (itemMgr.itemExists(new NodeId(nodeId))) {
-                    NodeImpl n = (NodeImpl) session.getNodeByUUID(nodeId);
+                if (itemMgr.itemExists(nodeId)) {
+                    NodeImpl n = session.getNodeById(nodeId);

INS31 INS29 UPD43 INS29 INS83 INS43 INS42 INS8 INS65 UPD43 UPD42 UPD43 UPD42 MOV43 UPD42 MOV43 UPD42 UPD42 INS41 UPD43 INS65 INS65 INS42 INS41 INS66 MOV43 UPD42 MOV43 UPD42 MOV43 MOV43 INS32 MOV43 MOV43 UPD42 INS66 INS66 MOV11 MOV43 UPD43 UPD43 UPD43 MOV43 UPD42 INS11 UPD42 INS11 INS32 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 MOV14 UPD42 UPD42 INS32 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV32 UPD43 MOV43 INS32 MOV43 INS32 UPD42 MOV43 MOV42 UPD42 MOV42 MOV43 UPD42 MOV43 MOV43 INS42 INS42 MOV43 MOV43 INS42 UPD42 UPD42 INS42 MOV43 INS42 UPD42 MOV43 INS14 INS14 UPD43 MOV43 INS38 UPD42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 UPD42 INS32 UPD42 MOV43 INS32 UPD42 UPD42 INS43 INS42 INS43 INS42 UPD42 UPD42 INS11 MOV32 UPD42 UPD42 UPD42 MOV43 MOV42 UPD42 MOV42 UPD42 MOV43 MOV43 INS42 INS42 INS32 MOV43 INS11 MOV43 INS11 INS42 INS42 INS43 INS32 INS32 UPD42 MOV42 UPD42 INS14 INS32 UPD42 INS32 INS42 UPD42 MOV42 INS43 INS42 INS42 MOV43 INS32 INS42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV43 MOV32 MOV43 MOV32 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS32 UPD42 UPD42 INS42 INS42 MOV32 UPD42 INS32 INS32 INS32 UPD42 INS32 MOV42 UPD42 MOV42 MOV32 INS42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 INS32 MOV42 INS42 DEL32 DEL14 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL42 DEL11 DEL36 DEL32 DEL42 DEL32 DEL32 DEL14 DEL32 DEL14 DEL42 DEL43 DEL42 DEL43 DEL32 DEL14 DEL32 DEL14 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL59 DEL60 DEL41 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL14 DEL36 DEL42 DEL32 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL42 DEL14 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL32 DEL11 DEL14 DEL42 DEL43 DEL32 DEL42 DEL33 DEL27 DEL38 DEL27 DEL42 DEL42 DEL42 DEL14 DEL32 DEL42 DEL43 DEL32 DEL11