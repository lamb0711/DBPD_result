JCR-2076: JSR 283: Joins
- orderings (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@782644 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.lucene.search.SortComparator;
+import org.apache.lucene.search.SortComparatorSource;
-        public final Map valuesMap;
+        public final Map<Integer, Comparable> valuesMap;
-                return valuesMap == null ? null : (Comparable) valuesMap.get(new Integer(i));
+                return valuesMap == null ? null : valuesMap.get(i);
-        private Map getValuesMap(Comparable[] values, int setValues) {
-            Map map = new HashMap(setValues);
+        private Map<Integer, Comparable> getValuesMap(Comparable[] values, int setValues) {
+            Map<Integer, Comparable> map = new HashMap<Integer, Comparable>(setValues);
-                    map.put(new Integer(i), values[i]);
+                    map.put(i, values[i]);
-    private final Map cache = new WeakHashMap();
+    private final Map<IndexReader, Map<Key, ValueIndex>> cache = new WeakHashMap<IndexReader, Map<Key, ValueIndex>>();
-                                    SortComparator comparator)
+                                    SortComparatorSource comparator)
-                                  String prefix, SortComparator comparer) {
+                      String prefix, SortComparatorSource comparer) {
-            HashMap readerCache = (HashMap) cache.get(reader);
+            Map<Key, ValueIndex> readerCache = cache.get(reader);
-            return (ValueIndex) readerCache.get(key);
+            return readerCache.get(key);
-    Object store(IndexReader reader, String field, String prefix,
-                 SortComparator comparer, ValueIndex value) {
+    ValueIndex store(IndexReader reader, String field, String prefix,
+                 SortComparatorSource comparer, ValueIndex value) {
-            HashMap readerCache = (HashMap) cache.get(reader);
+            Map<Key, ValueIndex> readerCache = cache.get(reader);
-                readerCache = new HashMap();
+                readerCache = new HashMap<Key, ValueIndex>();
-                return ComparableBoolean.valueOf(Boolean.valueOf(value).booleanValue());
+                return Boolean.valueOf(value);
-                return new Long(DateField.stringToTime(value));
+                return DateField.stringToTime(value);
-                return new Long(LongField.stringToLong(value));
+                return LongField.stringToLong(value);
-                return new Double(DoubleField.stringToDouble(value));
+                return DoubleField.stringToDouble(value);
-        private final SortComparator comparator;
+        private final SortComparatorSource comparator;
-        Key(String field, String prefix, SortComparator comparator) {
+        Key(String field, String prefix, SortComparatorSource comparator) {

UPD40 INS74 MOV43 INS74 INS74 MOV43 INS43 INS74 UPD43 UPD43 UPD43 UPD43 MOV43 INS43 INS43 MOV43 MOV43 MOV43 INS42 INS43 INS43 INS43 INS74 UPD42 UPD42 UPD42 UPD42 UPD43 INS42 INS42 INS74 INS42 INS42 INS42 MOV43 INS43 INS74 MOV32 MOV32 MOV32 MOV32 UPD42 MOV43 INS43 INS43 INS42 INS43 INS43 INS43 INS74 MOV32 INS74 INS42 INS42 INS74 INS42 INS42 INS42 INS43 INS43 INS43 MOV32 INS43 INS43 INS43 MOV32 INS32 MOV43 MOV43 INS43 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 INS42 MOV42 MOV42 INS42 INS42 INS42 INS74 MOV43 INS43 INS43 INS42 INS42 DEL42 DEL14 DEL32 DEL11 DEL42 DEL14 DEL43 DEL42 DEL43 DEL11 DEL11 DEL42 DEL43 DEL43 DEL42 DEL43 DEL11 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL14 DEL42 DEL43 DEL14 DEL42 DEL43 DEL14