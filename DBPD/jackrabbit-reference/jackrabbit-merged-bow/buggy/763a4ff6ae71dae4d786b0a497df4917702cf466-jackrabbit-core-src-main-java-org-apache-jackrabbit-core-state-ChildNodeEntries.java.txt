JCR-2087: Upgrade to Java 5 as the base platform

Various cleanups here and there.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@793283 13f79535-47bb-0310-9956-ffa450edef68

-    private Map nameMap;
+    private Map<Name, Object> nameMap;
-        if (obj instanceof ArrayList) {
+        if (obj instanceof ArrayList<?>) {
-        if (obj instanceof ArrayList) {
+        if (obj instanceof ArrayList<?>) {
-            ArrayList siblings = (ArrayList) obj;
+            ArrayList<ChildNodeEntry> siblings = (ArrayList<ChildNodeEntry>) obj;
-                return (ChildNodeEntry) siblings.get(index - 1);
+                return siblings.get(index - 1);
-        List siblings = null;
+        List<Object> siblings = null;
-            if (obj instanceof ArrayList) {
+            if (obj instanceof ArrayList<?>) {
-                siblings = (ArrayList) obj;
+                siblings = (ArrayList<Object>) obj;
-                siblings = new ArrayList();
+                siblings = new ArrayList<Object>();
-    void addAll(List entriesList) {
-        Iterator iter = entriesList.iterator();
-        while (iter.hasNext()) {
-            ChildNodeEntry entry = (ChildNodeEntry) iter.next();
+    void addAll(List<ChildNodeEntry> entriesList) {
+        for (ChildNodeEntry entry : entriesList) {
-        List siblings = (ArrayList) obj;
+        List<ChildNodeEntry> siblings = (ArrayList<ChildNodeEntry>) obj;
-        ChildNodeEntry removedEntry = (ChildNodeEntry) siblings.remove(index - 1);
+        ChildNodeEntry removedEntry = siblings.remove(index - 1);
-            ChildNodeEntry oldEntry = (ChildNodeEntry) siblings.get(i);
+            ChildNodeEntry oldEntry = siblings.get(i);
-        List result = new ArrayList();
-        Iterator iter = iterator();
-        while (iter.hasNext()) {
-            ChildNodeEntry entry = (ChildNodeEntry) iter.next();
+        List<ChildNodeEntry> result = new ArrayList<ChildNodeEntry>();
+        for (ChildNodeEntry entry : this) {
-
-        List result = new ArrayList();
-        Iterator iter = iterator();
-        while (iter.hasNext()) {
-            ChildNodeEntry entry = (ChildNodeEntry) iter.next();
+        List<ChildNodeEntry> result = new ArrayList<ChildNodeEntry>();
+        for (ChildNodeEntry entry : this) {
-
-    public ListIterator listIterator() {
+    public ListIterator<ChildNodeEntry> listIterator() {
-    public ListIterator listIterator(int index) {
+    public ListIterator<ChildNodeEntry> listIterator(int index) {
-        ListIterator iter = new EntriesIterator();
+        ListIterator<ChildNodeEntry> iter = new EntriesIterator();
-    public List subList(int fromIndex, int toIndex) {
+    public List<ChildNodeEntry> subList(int fromIndex, int toIndex) {
-        return Collections.unmodifiableList(new ArrayList(this).subList(fromIndex, toIndex));
+        return Collections.unmodifiableList(new ArrayList<ChildNodeEntry>(this).subList(fromIndex, toIndex));
-            nameMap = new HashMap();
+            nameMap = new HashMap<Name, Object>();
-            nameMap = (Map) ((HashMap) nameMap).clone();
+            nameMap = (Map<Name, Object>) ((HashMap<Name, Object>) nameMap).clone();
-    class EntriesIterator implements ListIterator {
+    class EntriesIterator implements ListIterator<ChildNodeEntry> {
-        public Object next() {
+        public ChildNodeEntry next() {
-            return mapIter.getValue();
+            return (ChildNodeEntry) mapIter.getValue();
-        public Object previous() {
+        public ChildNodeEntry previous() {
-            return mapIter.getValue();
+            return (ChildNodeEntry) mapIter.getValue();
-        public void add(Object o) {
+        public void add(ChildNodeEntry o) {
-        public void set(Object o) {
+        public void set(ChildNodeEntry o) {

INS74 INS74 INS74 INS74 INS74 MOV43 INS43 INS43 INS74 INS70 INS70 INS70 MOV43 INS43 MOV43 INS43 INS43 INS43 MOV43 INS43 MOV43 MOV43 MOV8 MOV8 INS42 INS42 INS74 INS43 INS43 INS44 INS42 MOV8 INS74 MOV43 INS74 INS44 INS52 MOV8 INS74 INS44 INS52 MOV8 INS42 INS42 INS74 MOV42 INS42 INS42 MOV41 MOV41 MOV43 MOV43 INS74 INS74 MOV43 MOV43 MOV42 INS42 MOV43 INS42 INS43 INS43 MOV32 INS43 INS43 MOV43 INS42 INS43 INS43 MOV43 INS42 MOV43 INS43 INS11 INS11 MOV43 INS76 MOV43 INS76 INS74 MOV42 INS42 INS74 MOV43 MOV42 INS42 INS74 MOV42 INS42 INS74 INS42 MOV43 MOV32 MOV43 MOV32 MOV43 INS43 INS74 MOV43 INS43 MOV32 MOV43 INS43 MOV43 INS43 INS74 INS42 INS74 MOV32 MOV43 INS76 INS42 INS42 INS42 MOV43 INS43 INS74 MOV43 INS43 INS42 MOV43 INS43 INS43 INS74 INS42 INS74 INS74 INS42 INS42 MOV43 INS43 INS43 MOV43 MOV43 MOV43 MOV43 INS42 INS42 INS42 UPD42 MOV42 INS74 MOV43 INS43 MOV43 INS42 DEL11 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL43 DEL11 DEL11 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL43