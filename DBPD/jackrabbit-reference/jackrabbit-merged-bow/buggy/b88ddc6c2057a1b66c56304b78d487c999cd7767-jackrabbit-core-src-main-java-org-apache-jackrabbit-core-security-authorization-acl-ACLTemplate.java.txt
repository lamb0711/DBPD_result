JCR-1588: JSR 283 Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@713975 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.security.principal.NoSuchPrincipalException;
+import org.apache.jackrabbit.core.security.principal.PrincipalImpl;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+    private static final Logger log = LoggerFactory.getLogger(ACLTemplate.class);
+
+            try {
+                String principalName = aceNode.getProperty(AccessControlConstants.P_PRINCIPAL_NAME).getString();
+                Principal princ = null;
+                if (principalMgr.hasPrincipal(principalName)) {
+                    try {
+                        princ = principalMgr.getPrincipal(principalName);
+                    } catch (NoSuchPrincipalException e) {
+                        // should not get here.
+                    }
+                }
+                if (princ == null) {
+                    log.debug("Principal with name " + principalName + " unknown to PrincipalManager.");
+                    princ = new PrincipalImpl(principalName);
+                }
-            String principalName = aceNode.getProperty(AccessControlConstants.P_PRINCIPAL_NAME).getString();
-            Principal princ = principalMgr.getPrincipal(principalName);
-
-            Value[] privValues = aceNode.getProperty(AccessControlConstants.P_PRIVILEGES).getValues();
-            Privilege[] privs = new Privilege[privValues.length];
-            for (int i = 0; i < privValues.length; i++) {
-                privs[i] = acMgr.privilegeFromName(privValues[i].getString());
+                Value[] privValues = aceNode.getProperty(AccessControlConstants.P_PRIVILEGES).getValues();
+                Privilege[] privs = new Privilege[privValues.length];
+                for (int i = 0; i < privValues.length; i++) {
+                    privs[i] = acMgr.privilegeFromName(privValues[i].getString());
+                }
+                // create a new ACEImpl (omitting validation check)
+                Entry ace = new Entry(
+                        princ,
+                        privs,
+                        aceNode.isNodeType(AccessControlConstants.NT_REP_GRANT_ACE));
+                // add the entry
+                internalAdd(ace);
+            } catch (RepositoryException e) {
+                log.debug("Failed to build ACE from content.", e.getMessage());
-            // create a new ACEImpl (omitting validation check)
-            Entry ace = new Entry(
-                    princ,
-                    privs,
-                    aceNode.isNodeType(AccessControlConstants.NT_REP_GRANT_ACE));
-            // add the entry
-            internalAdd(ace);
-                Principal princ = principalMgr.getPrincipal(principalName);
+                Principal princ = null;
+                if (principalMgr.hasPrincipal(principalName)) {
+                    try {
+                        princ = principalMgr.getPrincipal(principalName);
+                    } catch (NoSuchPrincipalException e) {
+                        // should not get here
+                    }
+                }
+                if (princ == null) {
+                    log.warn("Principal with name " + principalName + " unknown to PrincipalManager.");
+                    princ = new PrincipalImpl(principalName);
+                }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 INS42 INS42 INS32 INS42 INS42 INS57 INS43 INS54 INS42 INS8 INS12 MOV60 MOV60 INS25 INS25 MOV60 MOV60 MOV24 MOV60 MOV21 INS44 INS8 INS25 INS25 INS32 INS8 INS27 INS8 INS43 INS42 INS21 INS32 INS8 INS27 INS8 INS33 INS42 INS42 INS42 INS54 INS42 INS33 INS21 INS21 INS42 INS32 INS33 INS42 INS42 INS42 INS54 INS42 INS33 INS21 INS21 INS8 INS12 INS32 INS7 INS42 INS42 INS45 INS32 INS8 INS12 INS32 INS7 INS21 INS44 INS8 INS42 INS42 INS27 INS42 INS14 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS27 INS42 INS14 INS7 INS43 INS42 INS45 INS42 INS45 INS43 INS42 INS7 INS43 INS42 INS45 INS42 INS45 INS43 INS42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS42 INS42