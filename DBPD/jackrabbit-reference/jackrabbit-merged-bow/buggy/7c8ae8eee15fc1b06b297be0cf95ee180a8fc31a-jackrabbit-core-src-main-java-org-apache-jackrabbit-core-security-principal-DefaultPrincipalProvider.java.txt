JCR-1588: 283 Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@689499 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
+    private final String pPrincipalName;
+            pPrincipalName = resolver.getJCRName(UserManagerImpl.P_PRINCIPAL_NAME);
+            pPrincipalName = "rep:principalName";
-        return findPrincipals("", searchType);
+        return findPrincipals(null, searchType);
-                mship = new ListOrderedSet();
-                collectGroupMembership(userPrincipal, mship);
+                mship = collectGroupMembership(userPrincipal);
-    private Set collectGroupMembership(Principal princ, Set membership) {
-        String princName = princ.getName();
-        if (!hasPrincipal(princName)) {
-            return Collections.EMPTY_SET;
-        }
-        try {
-            Authorizable auth = userManager.getAuthorizable(princ);
-            if (auth != null) {
-                Iterator itr = auth.memberOf();
-                while (itr.hasNext()) {
-                    Group group = (Group) itr.next();
-                    membership.add(group.getPrincipal());
+    private Set collectGroupMembership(Principal princ) {
+        Set membership = new ListOrderedSet();
+            try {
+                Authorizable auth = userManager.getAuthorizable(princ);
+                if (auth != null) {
+                    addToCache(princ);
+                    Iterator itr = auth.memberOf();
+                    while (itr.hasNext()) {
+                        Group group = (Group) itr.next();
+                        Principal gp = group.getPrincipal();
+                        addToCache(gp);
+                        membership.add(gp);
+                    }
+                } else {
+                    log.debug("Cannot find authorizable for principal " + princ.getName());
-            } else {
-                log.debug("Cannot find authorizable for principal " + princ.getName());
+            } catch (RepositoryException e) {
+                log.warn("Failed to determine membership for " + princ.getName(), e.getMessage());
-        } catch (RepositoryException e) {
-            log.warn("Failed to determine membership for " + princName, e.getMessage());
-        }
-                Iterator itr = userManager.findUsers(simpleFilter);
+                Iterator itr = userManager.findAuthorizables(pPrincipalName, simpleFilter, UserManager.SEARCH_TYPE_USER);
-                Iterator itr = userManager.findGroups(simpleFilter);
+                Iterator itr = userManager.findAuthorizables(pPrincipalName, simpleFilter, UserManager.SEARCH_TYPE_GROUP);
-                    return ((Authorizable) authorizableItr.next()).getPrincipal();
+                    Principal p = ((Authorizable) authorizableItr.next()).getPrincipal();
+                    addToCache(p);
+                    return p;

INS23 INS83 INS83 MOV43 INS59 INS42 MOV43 INS21 INS21 INS33 UPD42 MOV14 INS7 INS7 INS42 INS32 INS42 INS45 INS21 INS21 INS42 INS42 INS40 INS7 INS32 INS60 INS21 MOV42 INS32 INS42 INS42 INS60 INS21 MOV32 INS43 INS59 INS32 INS42 MOV42 MOV42 INS43 INS59 INS32 UPD42 INS42 INS40 UPD42 INS42 INS40 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 DEL40 DEL26 DEL45 DEL7 DEL21 DEL42 DEL32 DEL21 DEL42 DEL44 DEL42 DEL42 DEL32 DEL38 DEL40 DEL41 DEL8 DEL25 DEL42