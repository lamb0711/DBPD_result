[JCR-181] jcr-server should honor a webdav request's Content-Type and Content-Language headers
[JCR-200] move log4j initialization out of RepositoryStartupServlet

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@240176 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.PropertyConfigurator;
-import org.apache.log4j.Logger;
-import org.apache.jackrabbit.core.config.RepositoryConfig;
+import org.apache.jackrabbit.core.config.RepositoryConfig;
+import org.apache.log4j.Logger;
-import javax.servlet.http.HttpServlet;
-import javax.servlet.ServletException;
-import javax.jcr.*;
+import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
-import java.io.*;
-import java.util.Properties;
-import java.util.Enumeration;
-import java.rmi.registry.Registry;
-import java.rmi.registry.LocateRegistry;
-import java.rmi.Naming;
-import java.rmi.RemoteException;
-import java.rmi.AlreadyBoundException;
-import java.rmi.Remote;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServlet;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.rmi.AlreadyBoundException;
+import java.rmi.Naming;
+import java.rmi.Remote;
+import java.rmi.RemoteException;
+import java.rmi.registry.LocateRegistry;
+import java.rmi.registry.Registry;
+import java.util.Enumeration;
+import java.util.Properties;
-    private static Logger log;
+    private static final Logger log = Logger.getLogger(RepositoryStartupServlet.class);
-	initLog4J();
-     * Initializes Log4J
-     * @throws ServletException
-     */
-    private void initLog4J() throws ServletException {
-	// setup log4j
-	String log4jConfig = getServletConfig().getInitParameter(INIT_PARAM_LOG4J_CONFIG);
-	InputStream in = getServletContext().getResourceAsStream(log4jConfig);
-	if (in==null) {
-	    // try normal init
-	    PropertyConfigurator.configure(log4jConfig);
-	} else {
-	    try {
-		Properties log4jProperties = new Properties();
-		log4jProperties.load(in);
-		in.close();
-		PropertyConfigurator.configure(log4jProperties);
-	    } catch (IOException e) {
-		throw new ServletException("Unable to load log4jProperties: " + e.toString());
-	    }
-	}
-	log = Logger.getLogger(RepositoryStartupServlet.class);
-    }
-
-    /**

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 UPD40 UPD40 UPD40 INS40 INS40 INS40 INS40 INS83 MOV32 DEL42 DEL32 DEL21 DEL66 DEL65 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL7 DEL21 DEL8 DEL31