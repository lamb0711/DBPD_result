JCR-1592 - JSR 283: Activities


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784261 13f79535-47bb-0310-9956-ffa450edef68

-    private void setMixinTypesProperty(Set mixinNames) throws RepositoryException {
+    private void setMixinTypesProperty(Set<Name> mixinNames) throws RepositoryException {
+                if (hasProperty(NameConstants.JCR_ACTIVITY)) {
+                    removeChildProperty(NameConstants.JCR_ACTIVITY);
+                }
-        Property[] props = new Property[2];
+        Property[] props = new Property[3];
+                NodeImpl activity = (NodeImpl) session.getWorkspace().getVersionManager().getActivity();
+                Version baseVersion = session.getVersionManager().checkout(this);
-                                InternalValue.create(new UUID(getBaseVersion().getUUID()))
+                                InternalValue.create(new UUID(baseVersion.getUUID()))
+                if (activity != null) {
+                    props[2] = internalSetProperty(NameConstants.JCR_ACTIVITY,
+                            InternalValue.create(activity.getNodeId().getUUID()));
+                }
-                for (int i = 0; i < props.length; i++) {
-                    if (props[i] != null) {
-                        props[i].save();
+                for (Property prop : props) {
+                    if (prop != null) {
+                        prop.save();
-                for (int i = 0; i < props.length; i++) {
-                    if (props[i] != null) {
+                for (Property prop : props) {
+                    if (prop != null) {
-                            props[i].refresh(false);
+                            prop.refresh(false);
-        for (int i = 0; i < mxNames.length; i++) {
-            node.addMixin(mxNames[i]);
+        for (Name mxName : mxNames) {
+            node.addMixin(mxName);
-        for (int i = 0; i < mxNames.length; i++) {
-            node.addMixin(mxNames[i]);
+        for (Name mxName : mxNames) {
+            node.addMixin(mxName);
-     * @param version
-     * @param vsel    the version selector that will select the correct version for
-     *                OPV=Version child nodes.
-     * @throws UnsupportedRepositoryOperationException
-     *
-     * @throws RepositoryException
+     * @param version version to restore
+     * @param vsel the version selector that will select the correct version for
+     * OPV=Version child nodes.
+     * @param removeExisting remove existing flag
+     * @throws RepositoryException if an error occurs
-            throws UnsupportedRepositoryOperationException, RepositoryException {
+            throws RepositoryException {
-     * @param version
-     * @param vsel           the version selector that will select the correct version for
-     *                       OPV=Version child nodes.
-     * @param removeExisting
-     * @throws RepositoryException
+     * @param version version to restore
+     * @param vsel the version selector that will select the correct version for
+     * OPV=Version child nodes.
+     * @param removeExisting remove existing flag
+     * @return array of restored versions
+     * @throws RepositoryException if an error occurs
-    protected Version[] internalRestore(VersionImpl version, VersionSelector vsel,
+    public Version[] internalRestore(VersionImpl version, VersionSelector vsel,
-        HashSet restored = new HashSet();
+        HashSet<Version> restored = new HashSet<Version>();
-        return (Version[]) restored.toArray(new Version[restored.size()]);
+        return restored.toArray(new Version[restored.size()]);
-     * @param freeze
-     * @param vsel
-     * @param removeExisting
-     * @throws RepositoryException
+     * @param freeze the frozen node
+     * @param vsel version selector
+     * @param restored set of restored versions
+     * @param removeExisting remove existing flag
+     * @throws RepositoryException if an error occurs
-    void restoreFrozenState(InternalFrozenNode freeze, VersionSelector vsel, Set restored, boolean removeExisting)
+    public void restoreFrozenState(InternalFrozenNode freeze, VersionSelector vsel, 
+                            Set<Version> restored, boolean removeExisting)
-        setMixinTypesProperty(new HashSet(Arrays.asList(mixinNames)));
+        setMixinTypesProperty(new HashSet<Name>(Arrays.asList(mixinNames)));
-        HashSet propNames = new HashSet();
-        for (int i = 0; i < props.length; i++) {
-            PropertyState prop = props[i];
+        HashSet<Name> propNames = new HashSet<Name>();
+        for (PropertyState prop : props) {
+            // skip properties that should not to be reverted back
+            if (prop.getName().equals(NameConstants.JCR_ACTIVITY)) {
+                continue;
+            }
-                        props[i].getName(), prop.getValues(), prop.getType());
+                        prop.getName(), prop.getValues(), prop.getType());
-                internalSetProperty(props[i].getName(), prop.getValues()[0]);
+                internalSetProperty(prop.getName(), prop.getValues()[0]);
-        for (int j = 0; j < mixinNames.length; j++) {
-            NodeTypeImpl mixin = ntMgr.getNodeType(mixinNames[j]);
+        for (Name mixinName : mixinNames) {
+            NodeTypeImpl mixin = ntMgr.getNodeType(mixinName);
-            for (int i = 0; i < pda.length; i++) {
-                PropertyDefinitionImpl pd = (PropertyDefinitionImpl) pda[i];
+            for (PropertyDefinition aPda : pda) {
+                PropertyDefinitionImpl pd = (PropertyDefinitionImpl) aPda;
-        for (int i = 0; i < frozenNodes.length; i++) {
-            InternalFreeze child = frozenNodes[i];
+        for (InternalFreeze child : frozenNodes) {
-                        // check if one of this restoretrees node
+                        // check if one of this restore trees node
-                                    + " exists outside of restored tree: "
-                                    + existing);
+                                            + " exists outside of restored tree: "
+                                            + existing);
-                                + " outside of restored tree: " + n);
+                                        + " outside of restored tree: " + n);
-                                + child.getName() + " using " + vsel;
+                                    + child.getName() + " using " + vsel;
-            // ensure proper odering (issue JCR-469)
+            // ensure proper ordering (issue JCR-469)
-     * @param prop
-     * @throws RepositoryException
+     * @param prop property to copy from
+     * @throws RepositoryException if an error occurs

UPD83 INS83 INS74 INS70 INS70 UPD65 INS65 INS65 INS74 INS70 INS70 INS70 MOV43 INS43 MOV5 INS44 INS42 INS8 INS44 INS42 INS8 INS66 UPD66 UPD42 INS66 INS66 INS66 UPD66 INS66 INS66 INS66 INS74 MOV32 INS66 INS66 INS42 INS66 INS66 INS66 MOV43 INS43 INS74 INS44 INS42 MOV8 INS44 INS42 MOV8 INS44 INS42 MOV8 INS66 INS66 INS42 INS43 INS42 MOV21 INS43 INS42 MOV21 MOV43 INS43 INS42 MOV43 INS43 MOV43 INS42 INS25 INS43 INS42 INS70 MOV43 INS42 MOV5 UPD34 INS42 INS42 INS42 INS74 INS74 INS42 INS74 INS32 INS8 INS42 INS44 INS42 MOV8 INS25 INS60 INS60 INS25 INS70 INS70 INS42 INS42 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS32 INS42 INS40 INS18 INS43 INS42 INS32 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS44 INS42 INS8 INS44 INS42 MOV8 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 MOV43 INS42 INS40 INS21 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS42 MOV25 INS43 INS42 INS32 INS43 INS32 INS32 INS42 INS52 INS7 INS42 INS42 INS42 INS42 MOV43 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS2 INS32 INS42 INS42 INS32 INS42 INS42 INS34 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS42 DEL32 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL11 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24