JCR-2790: jcr:like on node name

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1030038 13f79535-47bb-0310-9956-ffa450edef68

+     * Factory for term values.
+     */
+    private final TermValueFactory tvf;
+
+    /**
-     * @param propName  the embedded jcr property name or <code>null</code> if
-     *                  there is not embedded property name.
+     * @param tvf       the term value factory.
-                            String propName,
+                            TermValueFactory tvf,
+        this.tvf = tvf;
-                    && Character.isLetterOrDigit(pattern.charAt(idx))) {
+                    && (Character.isLetterOrDigit(pattern.charAt(idx)) || pattern.charAt(idx) == ':')) {
-            if (propName == null) {
-                prefix = pattern.substring(0, idx);
-            } else {
-                prefix = FieldNames.createNamedValue(propName, pattern.substring(0, idx));
-            }
+            prefix = tvf.createValue(pattern.substring(0, idx));
-            prefix = FieldNames.createNamedValue(propName, "");
+            prefix = tvf.createValue("");
-            setEnum(new LowerUpperCaseTermEnum(reader, field, propName, pattern, transform));
+            setEnum(new LowerUpperCaseTermEnum(reader, field, pattern, transform));
-                                      String propName,
-                        String prefix = FieldNames.createNamedValue(propName, "");
-                        String limit = FieldNames.createNamedValue(propName, "\uFFFF");
+                        String prefix = tvf.createValue("");
+                        String limit = tvf.createValue("\uFFFF");
-                        String prefix = FieldNames.createNamedValue(propName, lowerLimit.toString());
+                        String prefix = tvf.createValue(lowerLimit.toString());
-                        String limit = FieldNames.createNamedValue(propName, upperLimit.toString());
+                        String limit = tvf.createValue(upperLimit.toString());
-                        prefix = FieldNames.createNamedValue(propName, patternPrefix.toUpperCase());
+                        prefix = tvf.createValue(patternPrefix.toUpperCase());
-                        limit = FieldNames.createNamedValue(propName, upperLimit.toString());
+                        limit = tvf.createValue(upperLimit.toString());
+
+    public static class TermValueFactory {
+
+        /**
+         * Creates a term value from the given string. This implementation
+         * simply returns the given string. Sub classes my apply some
+         * transformation to the string.
+         *
+         * @param s the string.
+         * @return the term value to use in the query.
+         */
+        public String createValue(String s) {
+            return s;
+        }
+    }

INS23 INS55 INS29 INS83 INS83 INS43 INS59 INS83 INS83 INS42 INS31 INS65 INS42 INS42 INS43 INS42 INS21 INS29 INS83 MOV43 INS42 MOV44 INS8 INS66 UPD42 UPD66 INS42 INS7 INS65 INS65 INS65 UPD42 INS41 INS22 INS42 MOV21 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS52 INS42 INS36 INS27 UPD42 UPD42 UPD42 UPD42 MOV32 INS27 INS32 INS13 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL66 DEL42 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL34 DEL42 DEL32 DEL7 DEL21 DEL8 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42