JCR-3395 : separate entries used for permission eval from ACEs exposed in JCR

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1370139 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.id.NodeId;
-import org.apache.jackrabbit.core.security.authorization.GlobPattern;
-     * The id of the access controlled node or <code>null</code> if this
-     * ACLTemplate isn't created for an existing access controlled node.
-     * Used for the Entry#isLocal(NodeId) call only in order to avoid calls
-     * to {@link javax.jcr.Node#getPath()}.
-     */
-    private final NodeId id;
-
-    /**
-     *
+     * Namespace sensitive name of the REP_GLOB property in standard JCR form.
-        this.id = null;
-     * @throws RepositoryException if an error occurs
-     */
-    ACLTemplate(NodeImpl aclNode) throws RepositoryException {
-        this(aclNode, ((aclNode != null) ? aclNode.getParent().getPath() : null));
-    }
-
-    /**
-     * Create a {@link ACLTemplate} that is used to edit an existing ACL
-     * node.
-     *
-     * @param aclNode node
-        this.id = aclNode.getParentId();
-        private final GlobPattern pattern;
-
-            pattern = calculatePattern();
-            pattern = calculatePattern();
-            pattern = calculatePattern();
-            pattern = calculatePattern();
-        }
-
-        private GlobPattern calculatePattern() throws RepositoryException {
-            if (path == null) {
-                return null; // no pattern for repo-level aces.
-            } else {
-                GlobPattern p;
-                Value glob = getRestrictions().get(P_GLOB);
-                if (glob != null) {
-                    p = GlobPattern.create(path, glob.getString());
-                } else {
-                    p = GlobPattern.create(path);
-                }
-                return p;
-            }
-        }
-        
-        /**
-         * @param nodeId
-         * @return <code>true</code> if this entry is defined on the node
-         * at <code>nodeId</code>
-         */
-        boolean isLocal(NodeId nodeId) {
-            return id != null && id.equals(nodeId);
-        }
-
-        /**
-         * 
-         * @param jcrPath
-         * @return
-         */
-        boolean matches(String jcrPath) {
-            return pattern != null && pattern.matches(jcrPath);

INS65 INS66 DEL40 DEL26 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL40 DEL42 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL66 DEL42 DEL65 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL16 DEL36 DEL17 DEL8 DEL31 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL65 DEL66 DEL66 DEL65 DEL29 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL42 DEL65 DEL65 DEL29 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31