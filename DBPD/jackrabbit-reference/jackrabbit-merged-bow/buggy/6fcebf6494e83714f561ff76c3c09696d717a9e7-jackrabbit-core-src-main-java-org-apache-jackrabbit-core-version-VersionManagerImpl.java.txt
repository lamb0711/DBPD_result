JCR-2000: Deadlock on concurrent commits

Use DefaultISMLocking as the versioning lock to get the same JCR-1334 support for versioning as was already implemented for default workspace locking.

Make all transactions acquire the versioning lock regardless of whether versioning changes are included in the transaction. This prevents potential deadlocks as even a non-versioning commit will access the version store for reference checks.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@750011 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.state.ISMLocking.ReadLock;
-        acquireReadLock();
+        ReadLock lock = acquireReadLock();
-            releaseReadLock();
+            lock.release();
-        acquireReadLock();
+        ReadLock lock = acquireReadLock();
-            releaseReadLock();
+            lock.release();
-        acquireReadLock();
+        ReadLock lock = acquireReadLock();
-            releaseReadLock();
+            lock.release();
-        acquireReadLock();
+        ReadLock lock = acquireReadLock();
-            releaseReadLock();
+            lock.release();
-        acquireReadLock();
+        ReadLock lock = acquireReadLock();
-            releaseReadLock();
+            lock.release();

INS26 INS40 INS60 INS60 INS60 INS60 INS60 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 DEL21 DEL21 DEL21 DEL21 DEL21