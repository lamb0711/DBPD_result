JCR-1007: Move common implementations of SPI interfaces to spi-commons module

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@553507 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.PropertyInfo;
-import org.apache.jackrabbit.spi.PropertyId;
+import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.name.PathFormat;
+import org.apache.jackrabbit.name.MalformedPathException;
+import org.apache.jackrabbit.name.IllegalNameException;
+import org.apache.jackrabbit.name.UnknownPrefixException;
-class PropertyInfoImpl extends ItemInfoImpl implements PropertyInfo {
-
-    /**
-     * The property info of the underlying property.
-     */
-    private final PropertyId propertyId;
-
-    /**
-     * The type of the property.
-     */
-    private final int type;
-
-    /**
-     * The multiValued flag.
-     */
-    private final boolean isMultiValued;
-
-    /**
-     * The values of this property info.
-     */
-    private final QValue[] values;
+class PropertyInfoImpl
+        extends org.apache.jackrabbit.spi.commons.PropertyInfoImpl {
-                            QValueFactory qValueFactory) throws RepositoryException {
-        super(property, idFactory, nsResolver);
-        this.propertyId = idFactory.createPropertyId(property, nsResolver);
-        // TODO: build QValues upon (first) usage only.
-        this.type = property.getType();
-        this.isMultiValued = property.getDefinition().isMultiple();
+                            QValueFactory qValueFactory)
+            throws RepositoryException, MalformedPathException, IllegalNameException, UnknownPrefixException {
+        super(idFactory.createNodeId(property.getParent(), nsResolver),
+                NameFormat.parse(property.getName(), nsResolver),
+                PathFormat.parse(property.getPath(), nsResolver),
+                idFactory.createPropertyId(property, nsResolver),
+                property.getType(), property.getDefinition().isMultiple(),
+                getValues(property, nsResolver, qValueFactory)); // TODO: build QValues upon (first) usage only.
+    }
+
+    /**
+     * Returns the QValues for the <code>property</code>.
+     *
+     * @param property   the property.
+     * @param nsResolver the namespace resolver.
+     * @param factory    the value factory.
+     * @return the values of the property.
+     * @throws RepositoryException if an error occurs while reading the values.
+     */
+    private static QValue[] getValues(Property property,
+                                      NamespaceResolver nsResolver,
+                                      QValueFactory factory)
+            throws RepositoryException {
+        boolean isMultiValued = property.getDefinition().isMultiple();
+        QValue[] values;
-            this.values = new QValue[jcrValues.length];
+            values = new QValue[jcrValues.length];
-                this.values[i] = ValueFormat.getQValue(jcrValues[i],
-                        nsResolver, qValueFactory);
+                values[i] = ValueFormat.getQValue(jcrValues[i],
+                        nsResolver, factory);
-            this.values = new QValue[]{
-                ValueFormat.getQValue(property.getValue(), nsResolver, qValueFactory)};
+            values = new QValue[]{
+                ValueFormat.getQValue(property.getValue(), nsResolver, factory)};
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public PropertyId getId() {
-        return propertyId;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public int getType() {
-        return type;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public boolean isMultiValued() {
-        return isMultiValued;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public QValue[] getValues() {
-
-    /**
-     * {@inheritDoc}
-     */
-    public boolean denotesNode() {
-        return false;
-    }

MOV26 MOV26 INS26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS40 INS43 INS31 INS40 MOV29 INS83 INS42 MOV44 MOV44 MOV44 MOV44 MOV43 INS43 INS43 INS43 INS8 INS29 INS83 UPD83 MOV5 INS42 INS44 INS44 INS44 INS43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS46 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 MOV41 INS32 INS32 INS32 MOV32 MOV32 INS32 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS39 INS59 MOV5 MOV59 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 DEL43 DEL43 DEL66 DEL65 DEL29 DEL83 DEL83 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL23 DEL42 DEL42 DEL42 DEL42 DEL46 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31 DEL65 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31