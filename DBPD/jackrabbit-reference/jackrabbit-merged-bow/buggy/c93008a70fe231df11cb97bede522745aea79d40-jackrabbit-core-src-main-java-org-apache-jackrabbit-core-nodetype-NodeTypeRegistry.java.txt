JCR-699: Clustering: re-registration of nodetypes is not synchronized


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@541585 13f79535-47bb-0310-9956-ffa450edef68

-    public synchronized void registerNodeTypes(Collection ntDefs)
+    public void registerNodeTypes(Collection ntDefs)
+
+        registerNodeTypes(ntDefs, false);
+    }
+
+    /**
+     * Internal implementation of {@link #registerNodeTypes(Collection)}
+     *
+     * @param ntDefs a collection of <code>NodeTypeDef<code> objects
+     * @param external whether this invocation should be considered external
+     * @throws InvalidNodeTypeDefException if the given node type definition is invalid.
+     * @throws RepositoryException if a repository error occurs.
+     */
+    private synchronized void registerNodeTypes(Collection ntDefs, boolean external)
+            throws InvalidNodeTypeDefException, RepositoryException {
+
-        // inform cluster
-        if (eventChannel != null) {
+        // inform cluster if this is not an external invocation
+        if (!external && eventChannel != null) {
-    public synchronized void unregisterNodeTypes(Collection ntNames)
+    public void unregisterNodeTypes(Collection ntNames)
+
+        unregisterNodeTypes(ntNames, false);
+    }
+
+    /**
+     * Internal implementation of {@link #unregisterNodeTypes(Collection)}
+     *
+     * @param ntNames a collection of <code>QName</code> objects denoting the
+     *                node types to be unregistered
+     * @param external whether this invocation should be considered external
+     * @throws NoSuchNodeTypeException if any of the specified names does not
+     *                                 denote a registered node type.
+     * @throws RepositoryException if another error occurs
+     */
+    private synchronized void unregisterNodeTypes(Collection ntNames, boolean external)
+            throws NoSuchNodeTypeException, RepositoryException {
+
+        // inform cluster if this is not an external invocation
+        if (!external && eventChannel != null) {
+            eventChannel.unregistered(ntNames);
+        }
+
-     * @param ntd
-     * @return
-     * @throws NoSuchNodeTypeException
-     * @throws InvalidNodeTypeDefException
-     * @throws RepositoryException
+     * Reregister a node type.
+     * @param ntd node type definition
+     * @return the new effective node type
+     * @throws NoSuchNodeTypeException if <code>ntd</code> refers to an
+     *                                 unknown node type
+     * @throws InvalidNodeTypeDefException if the node type definition
+     *                                     is invalid
+     * @throws RepositoryException if another error occurs
-    public synchronized EffectiveNodeType reregisterNodeType(NodeTypeDef ntd)
+    public EffectiveNodeType reregisterNodeType(NodeTypeDef ntd)
+
+        return reregisterNodeType(ntd, false);
+    }
+
+    /**
+     * Internal implementation of {@link #reregisterNodeType(NodeTypeDef)}.
+     *
+     * @param ntd node type definition
+     * @param external whether this invocation should be considered external
+     * @return the new effective node type
+     * @throws NoSuchNodeTypeException if <code>ntd</code> refers to an
+     *                                 unknown node type
+     * @throws InvalidNodeTypeDefException if the node type definition
+     *                                     is invalid
+     * @throws RepositoryException if another error occurs
+     */
+    private synchronized EffectiveNodeType reregisterNodeType(NodeTypeDef ntd,
+                                                              boolean external)
+            throws NoSuchNodeTypeException, InvalidNodeTypeDefException,
+            RepositoryException {
+
+            // inform cluster if this is not an external invocation
+            if (!external && eventChannel != null) {
+                eventChannel.reregistered(ntd);
+            }
+
-        // validate and register new node type definitions
-        internalRegister(ntDefs);
-        // persist new node type definitions
-        for (Iterator iter = ntDefs.iterator(); iter.hasNext();) {
-            NodeTypeDef ntDef = (NodeTypeDef) iter.next();
-            customNTDefs.add(ntDef);
-        }
-        persistCustomNodeTypeDefs(customNTDefs);
-        // notify listeners
-        for (Iterator iter = ntDefs.iterator(); iter.hasNext();) {
-            NodeTypeDef ntDef = (NodeTypeDef) iter.next();
-            notifyRegistered(ntDef.getName());
-        }
+        registerNodeTypes(ntDefs, true);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void externalReregistered(NodeTypeDef ntDef)
+            throws NoSuchNodeTypeException, InvalidNodeTypeDefException,
+            RepositoryException {
+
+        reregisterNodeType(ntDef, true);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void externalUnregistered(Collection ntNames)
+            throws RepositoryException, NoSuchNodeTypeException {
+
+        unregisterNodeTypes(ntNames, true);

INS31 INS31 INS31 INS31 INS31 INS31 MOV29 MOV83 MOV39 UPD42 MOV42 MOV44 MOV43 MOV43 INS8 INS29 UPD83 INS44 INS44 INS43 INS43 MOV29 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS29 UPD83 INS44 INS29 INS83 INS43 INS42 INS44 INS43 INS43 INS43 INS8 UPD83 INS44 MOV29 INS83 INS39 INS42 MOV44 MOV43 MOV43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS43 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS43 INS8 MOV21 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS25 INS65 INS65 INS65 INS65 INS65 INS65 UPD42 MOV42 INS43 INS42 INS42 INS42 INS42 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS43 INS42 INS42 UPD42 MOV42 INS42 INS21 INS65 INS43 INS42 INS42 INS42 INS21 INS66 INS65 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS27 UPD42 MOV42 INS32 INS66 INS65 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS27 INS8 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 MOV42 INS32 INS66 INS65 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS32 INS65 MOV42 INS32 INS65 INS42 INS32 UPD42 INS9 INS68 INS38 MOV27 UPD42 MOV42 UPD42 MOV42 INS9 INS68 INS38 INS27 INS21 UPD42 MOV42 UPD42 MOV42 INS9 INS68 INS25 UPD42 MOV42 UPD42 MOV42 INS9 UPD42 MOV42 UPD42 MOV42 INS9 UPD42 MOV42 UPD42 MOV42 INS9 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS33 INS32 INS42 INS69 INS27 INS8 INS43 INS43 INS42 INS42 INS42 INS43 INS38 INS27 INS21 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL32 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL32 DEL21 DEL42 DEL43 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL43 DEL42 DEL43 DEL32 DEL11 DEL59 DEL60 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31