JCR-1154: Throw DataStoreException instead of IOException

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@591286 13f79535-47bb-0310-9956-ffa450edef68

+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+    
+    /** Logger instance */
+    private static Logger log = LoggerFactory.getLogger(PropertyState.class);
-                    values[i] = InternalValue.create(new InputStream() {
-
-                        private long consumed = 0;
-
-                        public int read() throws IOException {
-                            if (consumed >= length) {
-                                return -1;  // eof
-                            }
-                            int b = stream.read();
-                            consumed++;
-                            return b;
-                        }
-
-                        public int read(byte[] b, int off, int len) throws IOException {
-                            if (consumed >= length) {
-                                return -1;  // eof
-                            }
-                            if ((consumed + len) > length) {
-                                len = (int) (length - consumed);
-                            }
-                            int read = stream.read(b, off, len);
-                            consumed += read;
-                            return read;
-                        }
-
-                        public long skip(long n) throws IOException {
-                            if (consumed >= length && n > 0) {
-                                return -1;  // eof
-                            }
-                            if ((consumed + n) > length) {
-                                n = length - consumed;
-                            }
-                            long skipped = stream.skip(n);
-                            consumed += skipped;
-                            return skipped;
-                        }
-
-                        public void close() {
-                            // nop
-                        }
-                    });
+                    try {
+                        values[i] = createInternalValueFromInputStream(stream, length);
+                    } catch (RepositoryException e) {
+                        String msg = "Failed to create internal value: " + e.getMessage();
+                        log.error(msg, e);
+                        throw new IOException(msg);
+                    }
+                    
+    
+    private InternalValue createInternalValueFromInputStream(final InputStream stream, final long length) throws RepositoryException {
+        return InternalValue.create(new InputStream() {
+            
+            private long consumed = 0;
+
+            public int read() throws IOException {
+                if (consumed >= length) {
+                    return -1;  // eof
+                }
+                int b = stream.read();
+                consumed++;
+                return b;
+            }
+
+            public int read(byte[] b, int off, int len) throws IOException {
+                if (consumed >= length) {
+                    return -1;  // eof
+                }
+                if ((consumed + len) > length) {
+                    len = (int) (length - consumed);
+                }
+                int read = stream.read(b, off, len);
+                consumed += read;
+                return read;
+            }
+
+            public long skip(long n) throws IOException {
+                if (consumed >= length && n > 0) {
+                    return -1;  // eof
+                }
+                if ((consumed + n) > length) {
+                    n = length - consumed;
+                }
+                long skipped = stream.skip(n);
+                consumed += skipped;
+                return skipped;
+            }
+
+            public void close() {
+                // nop
+            }
+        });
+    }

INS26 INS26 INS40 INS40 INS23 INS31 INS29 INS83 INS83 INS43 INS59 INS83 INS39 INS42 MOV44 MOV43 MOV8 INS43 INS42 INS44 INS44 INS43 MOV8 INS65 INS42 INS42 INS32 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS42 INS41 INS66 INS42 INS42 INS57 INS42 MOV32 INS43 INS42 INS8 MOV60 MOV60 INS54 INS8 INS12 INS21 INS44 INS8 INS7 INS43 INS42 INS60 INS21 INS53 MOV2 INS32 INS42 INS43 INS59 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS43 INS42 INS45 INS32 INS42 INS42 INS42 DEL7 DEL21 DEL39 DEL42