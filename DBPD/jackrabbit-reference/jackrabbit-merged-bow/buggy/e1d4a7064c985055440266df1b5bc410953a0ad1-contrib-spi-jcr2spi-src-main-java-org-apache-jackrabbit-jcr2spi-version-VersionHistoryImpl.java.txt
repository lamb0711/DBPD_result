JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.name.NameConstants;
-        labelNodeEntry = vhEntry.getNodeEntry(QName.JCR_VERSIONLABELS, Path.INDEX_DEFAULT, true);
+        labelNodeEntry = vhEntry.getNodeEntry(NameConstants.JCR_VERSIONLABELS, Path.INDEX_DEFAULT, true);
-        return getProperty(QName.JCR_VERSIONABLEUUID).getString();
+        return getProperty(NameConstants.JCR_VERSIONABLEUUID).getString();
-        NodeEntry vEntry = vhEntry.getNodeEntry(QName.JCR_ROOTVERSION, Path.INDEX_DEFAULT, true);
+        NodeEntry vEntry = vhEntry.getNodeEntry(NameConstants.JCR_ROOTVERSION, Path.INDEX_DEFAULT, true);
-            if (!QName.JCR_VERSIONLABELS.equals(entry.getQName())) {
+            if (!NameConstants.JCR_VERSIONLABELS.equals(entry.getName())) {
-        QName qLabel = getQLabel(label);
+        Name qLabel = getQLabel(label);
-        QName qLabel = getQLabel(label);
+        Name qLabel = getQLabel(label);
-        QName l = getQLabel(label);
-        QName[] qLabels = getQLabels();
+        Name l = getQLabel(label);
+        Name[] qLabels = getQLabels();
-        QName l = getQLabel(label);
+        Name l = getQLabel(label);
-        QName[] qLabels = getQLabels();
+        Name[] qLabels = getQLabels();
-        QName[] qLabels = getQLabels();
+        Name[] qLabels = getQLabels();
-            try {
-                labels[i] = NameFormat.format(qLabels[i], session.getNamespaceResolver());
-            } catch (NoPrefixDeclaredException e) {
-                // unexpected error. should not occur.
-                throw new RepositoryException(e);
-            }
+            labels[i] = session.getNameResolver().getJCRName(qLabels[i]);
-        QName[] qLabels = getQLabels();
+        Name[] qLabels = getQLabels();
-                try {
-                    vlabels.add(NameFormat.format(qLabels[i], session.getNamespaceResolver()));
-                } catch (NoPrefixDeclaredException e) {
-                    // should never occur
-                    throw new RepositoryException("Unexpected error while accessing version label", e);
-                }
+                vlabels.add(session.getNameResolver().getJCRName(qLabels[i]));
-    private QName[] getQLabels() throws RepositoryException {
+    private Name[] getQLabels() throws RepositoryException {
-        List labelQNames = new ArrayList();
+        List labelNames = new ArrayList();
-            if (! QName.JCR_PRIMARYTYPE.equals(pe.getQName()) &&
-                ! QName.JCR_MIXINTYPES.equals(pe.getQName())) {
-                labelQNames.add(pe.getQName());
+            if (! NameConstants.JCR_PRIMARYTYPE.equals(pe.getName()) &&
+                ! NameConstants.JCR_MIXINTYPES.equals(pe.getName())) {
+                labelNames.add(pe.getName());
-        return (QName[]) labelQNames.toArray(new QName[labelQNames.size()]);
+        return (Name[]) labelNames.toArray(new Name[labelNames.size()]);
-            QName vQName = NameFormat.parse(versionName, session.getNamespaceResolver());
+            Name vName = session.getNameResolver().getQName(versionName);
-            NodeEntry vEntry = vhEntry.getNodeEntry(vQName, Path.INDEX_DEFAULT, true);
+            NodeEntry vEntry = vhEntry.getNodeEntry(vName, Path.INDEX_DEFAULT, true);
-        } catch (NameException e) {
+        } catch (org.apache.jackrabbit.conversion.NameException e) {
-    private Version getVersionByLabel(QName qLabel) throws VersionException, RepositoryException {
+    private Version getVersionByLabel(Name qLabel) throws VersionException, RepositoryException {
-    private QName getQLabel(String label) throws RepositoryException {
+    private Name getQLabel(String label) throws RepositoryException {
-            return NameFormat.parse(label, session.getNamespaceResolver());
+            return session.getNameResolver().getQName(label);

UPD40 UPD40 UPD40 UPD40 UPD5 UPD43 UPD43 UPD43 UPD42 UPD43 UPD43 UPD43 UPD5 UPD43 UPD5 UPD5 MOV8 UPD5 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD42 UPD5 UPD40 UPD40 UPD40 UPD42 UPD42 UPD42 UPD42 INS8 UPD43 UPD42 UPD43 UPD43 MOV2 MOV21 UPD42 UPD5 UPD42 UPD42 INS40 INS42 INS42 UPD40 INS42 UPD43 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 MOV2 UPD40 UPD40 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42