work in progress

jcr2spi
- HierarchyManager: fixing methods with ItemId param
- HierarchyManagerImpl(s): removing unused methods
- ItemManagerImpl: replacing NodeId as cacheKey
- ItemImpl: remove ISM field

jcr2spi/xml
- ImporterImpl renamed to SessionImporter (used for s-import only)
- xml import: Use UUID String instead of creating NodeIds
- ReferenceChangeTracker: remove usage of spi NodeId

jcr2spi/state
- SessionItemStateManager: ValueFactory not needed since QPropertyDefinition returns qualified values.

jcr2spi/util
- LogUtil: add 'saveGetJCRName' utility method

jcr2spi/locking
- locking: LockManager to use NodeState instead of NodeId
- locking: removing locktoken from Session checks if Session is lock holder

jcr2spi/query
- NodeIteratorImpl: fix commented code, that allows to retrieve
  search results from IdIterator returned from QueryInfo
- minor reformatting, javadoc

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430791 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.operation.AddLabel;
-import org.apache.jackrabbit.jcr2spi.operation.Operation;
-import org.apache.jackrabbit.jcr2spi.operation.RemoveLabel;
-import org.apache.jackrabbit.jcr2spi.operation.Remove;
+        this.vhState = state;
+
-        vhState = state;
-        if (vhState.hasChildNodeEntry(QName.JCR_VERSIONLABELS)) {
-            ChildNodeEntry lnEntry = vhState.getChildNodeEntry(QName.JCR_VERSIONLABELS, Path.INDEX_DEFAULT);
+        if (state.hasChildNodeEntry(QName.JCR_VERSIONLABELS)) {
+            ChildNodeEntry lnEntry = state.getChildNodeEntry(QName.JCR_VERSIONLABELS, Path.INDEX_DEFAULT);
-        NodeState vState = getVersionState(versionName);
-        return (Version) itemMgr.getItem(vState);
+        try {
+            NodeState vState = getVersionEntry(versionName).getNodeState();
+            return (Version) itemMgr.getItem(vState);
+        } catch (ItemStateException e) {
+            // should not occur
+            throw new RepositoryException(e);
+        }
+            // should not occur
-        // TODO: ev. delegate to versionmanager
-        Operation op = AddLabel.create(vhState.getNodeId(), vEntry.getId(), qLabel, moveLabel);
-        itemStateMgr.execute(op);
+        // delegate to version manager that operates on workspace directely
+        session.getVersionManager().addVersionLabel(vhState.getNodeId(), vEntry.getId(), qLabel, moveLabel);
-        // TODO: ev. delegate to versionmanager
-        Operation op = RemoveLabel.create(vhState.getNodeId(), vEntry.getId(), qLabel);
-        itemStateMgr.execute(op);
+
+        // delegate to version manager that operates on workspace directely
+        session.getVersionManager().removeVersionLabel(vhState.getNodeId(), vEntry.getId(), qLabel);
-    public void removeVersion(String versionName) throws ReferentialIntegrityException, AccessDeniedException, UnsupportedRepositoryOperationException, VersionException, RepositoryException {
-        NodeState vState = getVersionState(versionName);
-        // TODO: ev. delegate to versionmanager
-        Operation rm = Remove.create(vState);
-        itemStateMgr.execute(rm);
+    public void removeVersion(String versionName) throws RepositoryException {
+        ChildNodeEntry vEntry = getVersionEntry(versionName);
+        session.getVersionManager().removeVersion(vEntry.getId(), vhState.getNodeId());
-     * @param versionName
-     * @return
-     * @throws VersionException
-     * @throws RepositoryException
-     */
-    private NodeState getVersionState(String versionName) throws VersionException, RepositoryException {
-        try {
-            return getVersionEntry(versionName).getNodeState();
-        } catch (ItemStateException e) {
-            throw new RepositoryException(e);
-        }
-    }
-
-    /**
-     *

INS8 INS54 INS21 MOV8 MOV12 MOV32 MOV32 UPD43 INS32 INS22 UPD42 INS32 INS42 INS32 INS42 UPD42 UPD42 INS32 UPD42 MOV42 INS32 INS32 INS52 INS42 MOV43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV32 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL65 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL41 DEL8 DEL54 DEL8 DEL31