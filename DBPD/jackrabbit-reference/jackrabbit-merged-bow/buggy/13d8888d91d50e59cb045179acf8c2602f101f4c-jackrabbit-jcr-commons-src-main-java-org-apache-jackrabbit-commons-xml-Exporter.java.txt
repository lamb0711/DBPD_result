JCR-1607: Add a NamespaceHelper in jcr-commons
    - Use NamespaceHelper in jcr-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@657028 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.commons.NamespaceHelper;
-     * The <code>jcr</code> namespace URI.
-     */
-    protected static final String JCR = "http://www.jcp.org/jcr/1.0";
-
-    /**
-     * The <code>nt</code> namespace URI.
-     */
-    private static final String NT = "http://www.jcp.org/jcr/nt/1.0";
-
-    /**
-     * The <code>mix</code> namespace URI.
-     */
-    private static final String MIX = "http://www.jcp.org/jcr/mix/1.0";
-
-    /**
+     * Namespace helper.
+     */
+    protected final NamespaceHelper helper;
+
+    /**
+        this.helper = new NamespaceHelper(session);
-            Value share =
-                factory.createValue(getJCRName(NT, "share"), PropertyType.NAME);
-            exportProperty(JCR, "primaryType", share);
-            exportProperty(JCR, "uuid", factory.createValue(node.getUUID()));
+            exportProperty(
+                    NamespaceHelper.JCR, "primaryType",
+                    factory.createValue(
+                            helper.getJcrName("nt:share"), PropertyType.NAME));
+            exportProperty(
+                    NamespaceHelper.JCR, "uuid",
+                    factory.createValue(node.getUUID()));
-            exportProperty(properties, JCR, "primaryType");
-            exportProperty(properties, JCR, "mixinTypes");
-            exportProperty(properties, JCR, "uuid");
+            exportProperty(properties, helper.getJcrName("jcr:primaryType"));
+            exportProperty(properties, helper.getJcrName("jcr:mixinTypes"));
+            exportProperty(properties, helper.getJcrName("jcr:uuid"));
-                String uri = null;
-                int colon = name.indexOf(':');
-                if (colon != -1) {
-                    uri = session.getNamespaceURI(name.substring(0, colon));
-                    name = name.substring(colon + 1);
-                }
-                exportProperty(uri, name, (Property) entry.getValue());
+                exportProperty(name, (Property) entry.getValue());
-        share = node.isNodeType(getJCRName(MIX, "shareable"))
+        share = node.isNodeType(helper.getJcrName("mix:shareable"))
-            exportNode(JCR, "root", node);
+            exportNode(NamespaceHelper.JCR, "root", node);
-     * @param uri property namespace
-     * @param local property name
+     * @param name property name
-    private void exportProperty(Map properties, String uri, String local)
+    private void exportProperty(Map properties, String name)
-        Property property = (Property) properties.remove(getJCRName(uri, local));
+        Property property = (Property) properties.remove(name);
-            exportProperty(uri, local, property);
+            exportProperty(name, property);
-     * @param uri property namespace
-     * @param local property name
+     * @param name property name
-    private void exportProperty(String uri, String local, Property property)
+    private void exportProperty(String name, Property property)
+        String uri = null;
+        String local = name;
+        int colon = name.indexOf(':');
+        if (colon != -1) {
+            uri = session.getNamespaceURI(name.substring(0, colon));
+            local = name.substring(colon + 1);
+        }
+
-     * Returns the prefixed JCR name for the given namespace URI and local
-     * name.
-     *
-     * @param uri namespace URI (must not be the empty namespace)
-     * @param name local name
-     * @return prefixed JCR name
-     * @throws RepositoryException if a JCR namespace mapping is not available
-     */
-    protected String getJCRName(String uri, String name)
-            throws RepositoryException {
-        return session.getNamespacePrefix(uri) + ":" + name;
-    }
-
-    /**

INS26 MOV23 INS40 UPD43 MOV44 UPD42 UPD42 INS21 UPD42 MOV42 UPD42 MOV60 INS60 MOV60 MOV25 UPD66 INS7 UPD42 MOV43 UPD42 MOV43 INS59 INS22 INS14 INS21 INS42 INS42 INS52 INS42 INS43 INS42 INS32 MOV43 INS42 INS42 INS40 INS45 INS32 INS40 INS32 INS32 INS32 INS40 UPD42 MOV42 UPD42 UPD42 MOV42 MOV42 MOV32 MOV40 UPD42 MOV42 INS42 UPD45 MOV45 UPD42 MOV42 INS42 UPD45 MOV45 UPD42 MOV42 INS42 UPD45 MOV45 UPD42 UPD42 UPD45 UPD42 UPD42 UPD45 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL45 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL66 DEL65 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL41 DEL8 DEL31