JCR-1765: Config: make all elements in the security configuration optional

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@704324 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.security.simple.SimpleSecurityManager;
-     * Parses the security manager configuration. Returns default
-     * configuration based on the {@link SimpleSecurityManager} class if
-     * a security manager is not explicitly configured.
+     * Parses the security manager configuration.
-     * @see <a href="https://issues.apache.org/jira/browse/JCR-1765">JCR-1765</a>
-     * @return the security manager configuration.
+     * @return the security manager configuration or <code>null</code>.
-        BeanConfig bc = new BeanConfig(
-                SimpleSecurityManager.class.getName(), new Properties());
-        String wspAttr = "security";
-        BeanConfig wac = null;
+        // Optional security manager config entry
+        Element smElement = getElement(security, SECURITY_MANAGER_ELEMENT, false);
+        if (smElement != null) {
+            BeanConfig bc = parseBeanConfig(smElement);
+            String wspAttr = getAttribute(smElement, WSP_NAME_ATTRIBUTE, null);
-        Element element = getElement(security, SECURITY_MANAGER_ELEMENT, false);
-        if (element != null) {
-            bc = parseBeanConfig(security, SECURITY_MANAGER_ELEMENT);
-
-            wspAttr = getAttribute(element, WSP_NAME_ATTRIBUTE, null);
-
-            if (getElement(element, WORKSPACE_ACCESS_ELEMENT, false) != null) {
-                wac = parseBeanConfig(element, WORKSPACE_ACCESS_ELEMENT);
+            BeanConfig wac = null;
+            Element element = getElement(smElement, WORKSPACE_ACCESS_ELEMENT, false);
+            if (element != null) {
+                wac = parseBeanConfig(smElement, WORKSPACE_ACCESS_ELEMENT);
+            return new SecurityManagerConfig(bc, wspAttr, wac);
+        } else {
+            return null;
-
-        return new SecurityManagerConfig(bc, wspAttr, wac);
-     * @return the access manager configuration.
+     * @return the access manager configuration or <code>null</code>.
-        return new AccessManagerConfig(
-                parseBeanConfig(security, ACCESS_MANAGER_ELEMENT));
+        // Optional access manager config entry
+        Element accessMgr = getElement(security, ACCESS_MANAGER_ELEMENT, false);
+        if (accessMgr != null) {
+            return new AccessManagerConfig(parseBeanConfig(accessMgr));
+        } else {
+            return null;
+        }
-     * @return the login module configuration.
+     * @return the login module configuration or <code>null</code>.

INS8 INS25 INS60 INS25 UPD66 UPD66 INS27 MOV8 INS8 UPD66 INS43 INS59 INS27 INS8 INS8 UPD66 UPD42 INS42 INS33 INS60 INS60 MOV60 INS60 INS25 MOV41 INS41 INS42 INS42 INS32 INS42 INS33 MOV41 INS41 MOV43 INS59 MOV43 INS59 INS43 INS59 MOV27 MOV8 INS33 INS42 INS42 INS42 INS9 INS33 INS42 INS32 INS42 INS32 INS42 INS42 INS32 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV33 MOV42 UPD42 MOV42 MOV42 MOV9 UPD42 UPD42 DEL40 DEL26 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL42 DEL43 DEL14 DEL14 DEL59 DEL60 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL32 DEL7 DEL21 DEL32 DEL33 DEL27 DEL25 DEL25 DEL42 DEL8