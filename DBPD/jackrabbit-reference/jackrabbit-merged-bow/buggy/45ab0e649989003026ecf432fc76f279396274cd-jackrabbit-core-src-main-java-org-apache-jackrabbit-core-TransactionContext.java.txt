JCR-1334 Deadlock due different Thread access in same Transaction

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@734400 13f79535-47bb-0310-9956-ffa450edef68

+import javax.transaction.xa.Xid;
+
+import java.util.Arrays;
+     * The per thread associated Xid
+     */
+    private static ThreadLocal CURRENT_XID = new ThreadLocal();
+
+    /**
+    * The Xid
+    */
+   private final Xid xid;
+   
+    /**
+     * @param xid associated xid
-    public TransactionContext(InternalXAResource[] resources, int timeout) {
+    public TransactionContext(Xid xid, InternalXAResource[] resources, int timeout) {
+        this.xid = xid;
+        bindCurrentXid();
+        bindCurrentXid();
+        cleanCurrentXid();
+        bindCurrentXid();
+        cleanCurrentXid();
+    
+    /**
+     * Helper Method to bind the {@link Xid} associated with this {@link TransactionContext}
+     * to the {@link #CURRENT_XID} ThreadLocal
+     * @param methodName
+     */
+    private void bindCurrentXid() {
+        CURRENT_XID.set(xid);
+    }
+
+    /**
+     * Helper Method to clean the {@link Xid} associated with this {@link TransactionContext}
+     * from the {@link #CURRENT_XID} ThreadLocal
+     * @param methodName
+     */
+    private void cleanCurrentXid() {
+        CURRENT_XID.set(null);
+    }
+    
+    /**
+     * Returns the {@link Xid} bind to the {@link #CURRENT_XID} ThreadLocal
+     * @return current Xid or null
+     */
+    public static Xid getCurrentXid() {
+        return (Xid) CURRENT_XID.get();
+    }
+    
+    /**
+     * Helper Method to check if the given {@link Xid} has the same globalTransactionId
+     * as the current {@link Xid} bind to the {@link #CURRENT_XID} ThreadLocal
+     * @param xid Xid to check
+     * @param fallback if either the given {@link Xid} or the current {@link Xid} is null we can not check if they 
+     *        are same, the fallback value will be returned
+     * @return true if the same otherwise false
+     */
+    public static boolean isCurrentXid(Xid xid, boolean fallback) {
+        Xid currentXid = (Xid) CURRENT_XID.get();
+        return fallback ? true : (currentXid == null || xid == null) ? fallback : Arrays.equals(xid.getGlobalTransactionId(), currentXid.getGlobalTransactionId());  
+    }

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS44 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS83 INS43 INS42 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS42 INS42 INS14 INS65 INS42 INS42 INS65 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS65 INS65 INS21 INS65 INS65 INS21 INS65 INS65 INS42 INS41 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS60 INS41 INS66 INS43 INS66 INS42 INS66 INS42 INS7 INS32 INS32 INS32 INS32 INS32 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS32 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS32 INS66 INS65 INS66 INS65 INS66 INS66 INS11 INS66 INS65 INS66 INS66 INS65 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS42 INS43 INS59 INS16 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS67 INS42 INS42 INS42 INS42 INS42 INS67 INS42 INS42 INS33 INS42 INS67 INS43 INS32 INS42 INS42 INS67 INS42 INS42 INS42 INS42 INS11 INS42 INS9 INS16 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS36 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS32 INS27 INS27 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS33