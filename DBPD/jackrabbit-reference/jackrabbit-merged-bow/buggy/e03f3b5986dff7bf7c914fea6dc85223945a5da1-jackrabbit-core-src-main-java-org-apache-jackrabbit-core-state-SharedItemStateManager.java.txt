Revert: JCR-2699: Improve read/write concurrency  It's better to allow the occasional cache overwrite than to block concurrent threads. The locking in SessionState and SISM already prevent concurrent read/write operations that could possibly lead to inconsistencies.

=> the log warnings "overwriting cached entry" do indicate that, at any given time, 
there might be multiple ItemState instances in the 'shared' layer representing the same 
item. there's a risk of data loss/inconsistency since all but one instance are stale copies.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1036117 13f79535-47bb-0310-9956-ffa450edef68

-            state.setContainer(this);
-            cache.cache(state);
+            synchronized (this) {
+                // Use a double check to ensure that the cache entry is
+                // not created twice. We don't synchronize the entire
+                // method to allow the first cache retrieval to proceed
+                // even when another thread is loading a new item state.
+                ItemState cachedState = cache.retrieve(id);
+                if (cachedState == null) {
+                    // put it in cache
+                    cache.cache(state);
+                    // set parent container
+                    state.setContainer(this);
+                } else {
+                    state = cachedState;
+                }
+            }

INS51 INS52 INS8 INS60 INS25 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS32 INS42 INS33 MOV21 MOV21 INS21 INS42 INS42 INS42 INS7 INS42 INS42