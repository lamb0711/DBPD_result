JCR-97: Improved Checkstyle conformance in various ways.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@164552 13f79535-47bb-0310-9956-ffa450edef68

-    private static final Pattern PATH_ELEMENT_PATTERN = Pattern.compile("(\\.)|(\\.\\.)|(([^ /:\\[\\]*'\"|](?:[^/:\\[\\]*'\"|]*[^ /:\\[\\]*'\"|])?):)?([^ /:\\[\\]*'\"|](?:[^/:\\[\\]*'\"|]*[^ /:\\[\\]*'\"|])?)(\\[([1-9]\\d*)\\])?");
+    private static final Pattern PATH_ELEMENT_PATTERN =
+        Pattern.compile("(\\.)|"
+                + "(\\.\\.)|"
+                + "(([^ /:\\[\\]*'\"|](?:[^/:\\[\\]*'\"|]*[^ /:\\[\\]*'\"|])?):)?"
+                + "([^ /:\\[\\]*'\"|](?:[^/:\\[\\]*'\"|]*[^ /:\\[\\]*'\"|])?)"
+                + "(\\[([1-9]\\d*)\\])?");
-    public static Path create(QName name, int index) {
+    public static Path create(QName name, int index)
+            throws IllegalArgumentException {
-                            throw new MalformedPathException("'" + jcrPath + "' is not a valid path: '" + elem + "' specifies an illegal namespace prefix");
+                            throw new MalformedPathException(
+                                    "'" + jcrPath + "' is not a valid path: '"
+                                    + elem + "' specifies an illegal namespace prefix");
-                        throw new MalformedPathException("'" + jcrPath + "' is not a valid path: '" + elem + "' specifies an unmapped namespace prefix");
+                        throw new MalformedPathException(
+                                "'" + jcrPath + "' is not a valid path: '"
+                                + elem + "' specifies an unmapped namespace prefix");
-                throw new MalformedPathException("'" + jcrPath + "' is not a valid path: '" + elem + "' is not a legal path element");
+                throw new MalformedPathException(
+                        "'" + jcrPath + "' is not a valid path: '"
+                        + elem + "' is not a legal path element");
-    public Path getAncestor(int degree) throws PathNotFoundException {
+    public Path getAncestor(int degree)
+            throws IllegalArgumentException, PathNotFoundException {
-    public static Path valueOf(String s) {
+    public static Path valueOf(String s) throws IllegalArgumentException {
-        private PathElement(QName name) {
+        private PathElement(QName name) throws IllegalArgumentException {
-        private PathElement(QName name, int index) {
+        private PathElement(QName name, int index) throws IllegalArgumentException {
-        public static PathElement fromString(String s) {
+        public static PathElement fromString(String s) throws IllegalArgumentException {

INS43 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS43 INS27 INS42 INS42 INS42 INS45 INS45 INS45 INS45 INS45 DEL45