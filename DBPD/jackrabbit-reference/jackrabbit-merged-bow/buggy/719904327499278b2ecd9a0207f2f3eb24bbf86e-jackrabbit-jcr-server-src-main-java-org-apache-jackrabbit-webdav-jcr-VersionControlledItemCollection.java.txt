JCR-2519: spi2davex: use srcWorkspaceName to build srcPath for clone and copy
JCR-2104: JSR 283 Full Versioning 
- jcr2spi: simplify VersionManager.checkpoint if Node is already checkedin
- spi2dav: implement shallow merge
- spi2dav: fix bug in merge (besteffort <-> DAV:no-auto-merge)
- spi2dav: fix bug in restore (nodeId may point to non-existing node -> extract existing parent + relPath
- jcr-server: implement shallow merge
- jcr-server: fix merge. for 1:1 remoting the MERGE response body should list the failed ids instead of the affected resource [DeltaV specified behaviour that doesn't make sense for remoting over SPI]
- jcr-server: prefer VersionManager over deprecated version methods
- jcr-server: fix restore with relPath



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@916278 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.DavConstants;
+import javax.jcr.version.VersionManager;
+            VersionManager vMgr = getVersionManager();
+            String path = item.getPath();
+
-                        n.cancelMerge((Version) getRepositorySession().getNodeByUUID(value.getString()));
+                        vMgr.cancelMerge(path, (Version) getRepositorySession().getNodeByIdentifier(value.getString()));
-                    Version version = (Version) session.getNodeByUUID(value.getString());
+                    Version version = (Version) session.getNodeByIdentifier(value.getString());
-                            n.doneMerge(version);
+                            vMgr.doneMerge(path, version);
-                            n.cancelMerge(version);
+                            vMgr.cancelMerge(path, version);
-            Version v = ((Node) item).checkin();
+            Version v = getVersionManager().checkin(item.getPath());
-            ((Node) item).checkout();
+            getVersionManager().checkout(item.getPath());
+                } else if (node.hasNode(relPath)) {
+                    Version v = node.getNode(relPath).getVersionHistory().getVersion(versionName);
+                    node.restore(v, relPath, removeExisting);
-                    Version v = node.getVersionHistory().getVersion(versionName);
+                    Version v = (Version) getRepositorySession().getNode(versionPath);
-            Node node = (Node)item;
-
-            // register eventListener in order to be able to report all
-            // modified resources.
-            EventListener el = new EListener(mergeInfo.getPropertyNameSet(), ms);
-            registerEventListener(el, node.getPath());
-
+            // NOTE: RFC requires that all modified resources are reported in the
+            // multistatus response. this doesn't work however with the remoting
+            // there is no way to distinguish the 'failedId's from any other
+            // resources that got modified by this merge operation -> omitted.
+            
-            NodeIterator failed = node.merge(workspaceName, !mergeInfo.isNoAutoMerge());
-            // unregister the event listener again
-            unregisterEventListener(el);
+            String depth = DomUtil.getChildTextTrim(mergeInfo.getMergeElement(), DavConstants.XML_DEPTH, DavConstants.NAMESPACE);
+            boolean isShallow = "0".equals(depth);
+
+            NodeIterator failed = getVersionManager().merge(item.getPath(), workspaceName, !mergeInfo.isNoAutoMerge(), isShallow);
+
+    private VersionManager getVersionManager() throws RepositoryException {
+        return getRepositorySession().getWorkspace().getVersionManager();
+    }

INS26 INS26 INS40 INS40 INS31 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS41 MOV60 INS32 INS60 INS60 INS60 INS32 INS42 INS43 INS59 INS43 INS59 UPD43 INS39 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS32 UPD42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 UPD42 MOV42 INS25 INS42 INS42 INS32 INS40 INS40 INS45 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 MOV8 INS8 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV43 INS42 INS42 INS42 INS60 INS21 INS43 INS59 INS32 MOV43 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 UPD42 INS43 INS32 INS32 INS42 INS32 INS42 INS42 UPD42 UPD42 INS42 UPD42 INS42 MOV42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL43 DEL32 DEL42 DEL14 DEL42 DEL42 DEL32 DEL21