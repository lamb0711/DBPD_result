redesigned transaction support & PersistenceManager

orginal code contributed by dominique pfister, required a lot of tweaking to make it run & work; not thoroughly tested

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126221 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.collections.ReferenceMap;
-import org.apache.jackrabbit.core.util.uuid.UUID;
-import org.apache.jackrabbit.core.virtual.*;
+import org.apache.jackrabbit.core.util.uuid.UUID;
+import org.apache.jackrabbit.core.virtual.VirtualItemStateProvider;
+import org.apache.jackrabbit.core.virtual.VirtualNodeState;
+import org.apache.jackrabbit.core.virtual.VirtualPropertyState;
-import org.apache.commons.collections.ReferenceMap;
-import javax.jcr.RepositoryException;
-import javax.jcr.nodetype.ConstraintViolationException;
-import java.util.Map;
+import javax.jcr.RepositoryException;
+import java.util.Map;
+     *
-    public VersionItemStateProvider(VersionManager vMgr, NodeTypeManagerImpl ntMgr, String rootId, String parentId)  throws RepositoryException {
+    public VersionItemStateProvider(VersionManager vMgr, NodeTypeManagerImpl ntMgr, String rootId, String parentId) throws RepositoryException {
-    //--------------------------------------------------< ItemStateProvider >---
-
+    //-----------------------------------------------------< ItemStateManager >
-     * @see ItemStateProvider#hasItemState(org.apache.jackrabbit.core.ItemId)
+     * @see ItemStateManager#hasItemState(org.apache.jackrabbit.core.ItemId)
-     * @see ItemStateProvider#getItemState(org.apache.jackrabbit.core.ItemId)
+     * @see ItemStateManager#getItemState(ItemId)
-     * virtual item state provider do not have attics.
-     *
-     * @throws NoSuchItemStateException always
+     * @see ItemStateManager#getNodeReferences(NodeId)
-    public ItemState getItemStateInAttic(ItemId id) throws NoSuchItemStateException {
-        // never has states in attic
-        throw new NoSuchItemStateException(id.toString());
+    public NodeReferences getNodeReferences(NodeId targetId)
+            throws NoSuchItemStateException, ItemStateException {
+
+        //@todo return node references
+        throw new NoSuchItemStateException(targetId.getUUID());
-     * virtual item state provider do not have attics.
-     *
-     * @return <code>false</code>
+     * @see ItemStateManager#beginUpdate
-    public boolean hasItemStateInAttic(ItemId id) {
-        // never has states in attic
-        return false;
+    public UpdateOperation beginUpdate() throws ItemStateException {
+        throw new ItemStateException("Update not available");
-
-     * @see VirtualItemStateProvider#isVirtualRoot(org.apache.jackrabbit.core.ItemId)
+     * @see VirtualItemStateProvider#isVirtualRoot(ItemId)
-     * @see org.apache.jackrabbit.core.virtual.VirtualItemStateProvider#getVirtualRootId()
+     * @see VirtualItemStateProvider#getVirtualRootId()
-     * @see VirtualItemStateProvider#getNodeState(org.apache.jackrabbit.core.NodeId)
+     * @see VirtualItemStateProvider#getNodeState(NodeId)
-        if (state==null) {
+        if (state == null) {
-                    state = createNodeState(
-                            parent,
+                    state = createNodeState(parent,
-                    state = createNodeState(
-                            parent,
+                    state = createNodeState(parent,
-     * @see VirtualItemStateProvider#hasPropertyState(org.apache.jackrabbit.core.PropertyId)
+     * @see VirtualItemStateProvider#hasPropertyState(PropertyId)
-     * @see VirtualItemStateProvider#getPropertyState(org.apache.jackrabbit.core.PropertyId)
+     * @see VirtualItemStateProvider#getPropertyState(PropertyId)
-     * @see VirtualItemStateProvider#createPropertyState(org.apache.jackrabbit.core.virtual.VirtualNodeState, org.apache.jackrabbit.core.QName, int, boolean)
+     * @see VirtualItemStateProvider#createPropertyState(VirtualNodeState, QName, int, boolean)
-     * @see VirtualItemStateProvider#createNodeState(org.apache.jackrabbit.core.virtual.VirtualNodeState, org.apache.jackrabbit.core.QName, String, org.apache.jackrabbit.core.QName)
+     * @see VirtualItemStateProvider#createNodeState(VirtualNodeState, QName, String, QName)
+     *
-     * mapps a frozen node
+     * maps a frozen node
+     *
-        if (node.getFrozenUUID()!=null) {
+        if (node.getFrozenUUID() != null) {
-        for (int i=0; i<props.length; i++) {
+        for (int i = 0; i < props.length; i++) {
-        for (int i=0; i<nodes.length; i++) {
+        for (int i = 0; i < nodes.length; i++) {

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 UPD40 UPD40 UPD43 UPD42 INS43 INS43 UPD42 INS43 INS8 UPD65 UPD42 UPD43 UPD42 INS42 UPD65 INS42 UPD42 MOV42 INS53 INS68 UPD42 INS67 INS14 UPD66 UPD42 UPD42 INS42 INS42 INS69 INS42 INS42 INS43 INS45 INS42 UPD43 INS43 UPD42 UPD42 INS42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL39 DEL43 DEL42 DEL44 DEL9 DEL41 DEL8 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40