- Removed JCRQL implementation
- Added proper QName support to search
- redesigned parsing and formating of queries (better separation of abstract query tree and concrete syntax)
- Some improvements in SQL: colon is now supported in identifier without having to use double quotes, LIKE now supports escaping

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125778 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.util.ISO8601;
-import java.util.Calendar;
+import org.apache.jackrabbit.core.QName;
+
-import java.util.TimeZone;
-    private String property;
+    private QName property;
-    public RelationQueryNode(QueryNode parent, String property, long value, int operation) {
+    public RelationQueryNode(QueryNode parent, QName property, long value, int operation) {
-    public RelationQueryNode(QueryNode parent, String property, double value, int operation) {
+    public RelationQueryNode(QueryNode parent, QName property, double value, int operation) {
-    public RelationQueryNode(QueryNode parent, String property, Date value, int operation) {
+    public RelationQueryNode(QueryNode parent, QName property, Date value, int operation) {
-    public RelationQueryNode(QueryNode parent, String property, String value, int operation) {
+    public RelationQueryNode(QueryNode parent, QName property, String value, int operation) {
-    public String getProperty() {
+    public QName getProperty() {
-    public void setProperty(String name) {
+    public void setProperty(QName name) {
-    /**
-     * Returns a JCRQL representation for this query node.
-     *
-     * @return a JCRQL representation for this query node.
-     */
-    public String toJCRQLString() {
-        StringBuffer sb = new StringBuffer();
-        if (property.indexOf(' ') > -1) {
-            sb.append("\"" + property + "\"");
-        } else {
-            sb.append(property);
-        }
-
-        if (operation == OPERATION_EQ) {
-            sb.append(" = ");
-        } else if (operation == OPERATION_GE) {
-            sb.append(" >= ");
-        } else if (operation == OPERATION_GT) {
-            sb.append(" > ");
-        } else if (operation == OPERATION_LE) {
-            sb.append(" <= ");
-        } else if (operation == OPERATION_LIKE) {
-            sb.append(" LIKE ");
-        } else if (operation == OPERATION_LT) {
-            sb.append(" < ");
-        } else if (operation == OPERATION_NE) {
-            sb.append(" <> ");
-        } else {
-            throw new RuntimeException("invalid operation: " + operation);
-        }
-
-
-        if (type == TYPE_LONG) {
-            sb.append(valueLong);
-        } else if (type == TYPE_DOUBLE) {
-            sb.append(valueDouble);
-        } else if (type == TYPE_STRING) {
-            sb.append("\"").append(valueString).append("\"");
-        } else if (type == TYPE_DATE || type == TYPE_TIMESTAMP) {
-            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
-            cal.setTime(valueDate);
-            sb.append(ISO8601.format(cal));
-        } else {
-            throw new RuntimeException("Invalid type: " + type);
-        }
-        return sb.toString();
-    }
-
-    /**
-     * Returns a JCR SQL representation for this query node.
-     *
-     * @return a JCR SQL representation for this query node.
-     */
-    public String toJCRSQLString() {
-        StringBuffer sb = new StringBuffer();
-        sb.append("\"" + property + "\"");
-
-        if (operation == OPERATION_EQ) {
-            sb.append(" = ");
-        } else if (operation == OPERATION_GE) {
-            sb.append(" >= ");
-        } else if (operation == OPERATION_GT) {
-            sb.append(" > ");
-        } else if (operation == OPERATION_LE) {
-            sb.append(" <= ");
-        } else if (operation == OPERATION_LIKE) {
-            sb.append(" LIKE ");
-        } else if (operation == OPERATION_LT) {
-            sb.append(" < ");
-        } else if (operation == OPERATION_NE) {
-            sb.append(" <> ");
-        } else {
-            throw new RuntimeException("invalid operation: " + operation);
-        }
-
-
-        if (type == TYPE_LONG) {
-            sb.append(valueLong);
-        } else if (type == TYPE_DOUBLE) {
-            sb.append(valueDouble);
-        } else if (type == TYPE_STRING) {
-            sb.append("'").append(valueString.replaceAll("'", "''")).append("'");
-        } else if (type == TYPE_DATE || type == TYPE_TIMESTAMP) {
-            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
-            cal.setTime(valueDate);
-            sb.append("TIMESTAMP '").append(ISO8601.format(cal)).append("'");
-        } else {
-            throw new RuntimeException("Invalid type: " + type);
-        }
-        return sb.toString();
-    }
-
-    /**
-     * Returns an XPath representation for this query node.
-     *
-     * @return an XPath representation for this query node.
-     */
-    public String toXPathString() {
-        StringBuffer sb = new StringBuffer();
-        // @todo use escaping for property name
-        sb.append("@" + property);
-
-        if (operation == OPERATION_EQ) {
-            sb.append(" = ");
-        } else if (operation == OPERATION_GE) {
-            sb.append(" >= ");
-        } else if (operation == OPERATION_GT) {
-            sb.append(" > ");
-        } else if (operation == OPERATION_LE) {
-            sb.append(" <= ");
-        } else if (operation == OPERATION_LIKE) {
-            // @todo make namespace aware
-            sb.insert(0, "jcrfn:like(").append(",");
-        } else if (operation == OPERATION_LT) {
-            sb.append(" < ");
-        } else if (operation == OPERATION_NE) {
-            sb.append(" != ");
-        } else {
-            throw new RuntimeException("invalid operation: " + operation);
-        }
-
-
-        if (type == TYPE_LONG) {
-            sb.append(valueLong);
-        } else if (type == TYPE_DOUBLE) {
-            sb.append(valueDouble);
-        } else if (type == TYPE_STRING) {
-            sb.append("'").append(valueString.replaceAll("'", "''")).append("'");
-        } else if (type == TYPE_DATE || type == TYPE_TIMESTAMP) {
-            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
-            cal.setTime(valueDate);
-            // @todo make namespace aware
-            sb.append("xs:dateTime('").append(ISO8601.format(cal)).append("')");
-        } else {
-            throw new RuntimeException("Invalid type: " + type);
-        }
-        return sb.toString();
-    }

MOV26 UPD40 UPD43 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL13 DEL32 DEL34 DEL38 DEL27 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL34 DEL45 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL27 DEL42 DEL42 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31