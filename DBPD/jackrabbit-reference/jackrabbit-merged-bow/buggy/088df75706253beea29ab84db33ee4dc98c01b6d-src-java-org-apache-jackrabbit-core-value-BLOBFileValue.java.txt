BLOBFileValue: added new method: discard() and provided cleaner semantics

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@178432 13f79535-47bb-0310-9956-ffa450edef68

- * is backed by a file. Unlike <code>BinaryValue</code> it has no
+ * is backed by a resource or . Unlike <code>BinaryValue</code> it has no
-     * flag indicating if this instance is backed by a temp file
+     * flag indicating if this instance is backed by a temporarily allocated resource/buffer
-    private final boolean tmpFile;
+    private final boolean temp;
-        tmpFile = true;
+        // this instance is backed by a temporarily allocated resource/buffer
+        temp = true;
-     * @param bytes byte buffer to be represented as a <code>BLOBFileValue</code> instance
+     * @param bytes byte array to be represented as a <code>BLOBFileValue</code>
+     * instance
-        this.buffer = bytes;
-        this.file = null;
-        this.fsResource = null;
-        this.tmpFile = true;
+        buffer = new byte[bytes.length];
+        System.arraycopy(bytes, 0, buffer, 0, bytes.length);
+        file = null;
+        fsResource = null;
+        // this instance is backed by a temporarily allocated buffer
+        temp = true;
-
-        tmpFile = false;
+        // this instance is not backed by temporarily allocated resource/buffer
+        temp = false;
-
-        tmpFile = false;
+        // this instance is not backed by temporarily allocated resource/buffer
+        temp = false;
-     * Returns <code>true</code> it this <code>BLOBFileValue</code> is backed
-     * by a temporary file.
+     * Frees temporarily allocated resources such as temporary file, buffer, etc.
+     * If this <code>BLOBFileValue</code> is backed by a persistent resource
+     * calling this method will have no effect.
-     * @return <code>true</code> it this <code>BLOBFileValue</code> is backed
-     *         by a temporary file.
+     * @see #delete()
+     * @see #delete(boolean)
-    public boolean isTempFile() {
-        return tmpFile;
+    public void discard() {
+        if (!temp) {
+            // do nothing if this instance is not backed by temporarily
+            // allocated resource/buffer
+            return;
+        }
+        if (file != null) {
+            // this instance is backed by a temp file
+            file.delete();
+        } else if (buffer != null) {
+            // this instance is backed by a in-memory buffer
+            buffer = EMPTY_BYTE_ARRAY;
+        }
-     * Deletes the file backing this <code>BLOBFileValue</code>.
+     * Deletes the persistent resource backing this <code>BLOBFileValue</code>.
+     * <p/>
+     * If this <code>BLOBFileValue</code> is <i>not</i> backed by a persistent
+     * resource calling this method will have no effect.
+     *
+     * @see #discard()
-        delete(false);
+        if (!temp) {
+            delete(false);
+        }
-     * Deletes the file backing this <code>BLOBFileValue</code>.
+     * Deletes the persistent resource backing this <code>BLOBFileValue</code>.

UPD39 INS42 INS8 INS8 UPD66 UPD42 INS21 UPD65 INS65 INS25 INS25 INS65 INS25 UPD66 UPD66 INS66 INS32 INS66 UPD66 UPD66 INS68 INS68 INS38 INS8 INS27 INS8 INS25 UPD66 INS66 INS66 INS66 INS68 INS38 MOV8 UPD66 UPD42 INS42 INS3 INS42 INS42 INS42 INS34 INS42 INS34 INS40 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS69 INS42 INS41 INS42 INS33 INS21 INS27 INS8 INS42 INS42 INS5 INS40 INS39 INS32 INS42 INS33 INS21 INS39 INS85 INS42 INS42 INS7 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL66 DEL66 DEL42 DEL42 DEL41 DEL8