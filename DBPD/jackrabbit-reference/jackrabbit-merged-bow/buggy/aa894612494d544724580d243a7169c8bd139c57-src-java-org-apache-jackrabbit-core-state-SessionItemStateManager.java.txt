- adapted versioning again to spec 0.15
- added VirtualItemStateManager for reflecting virtual content


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55615 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.virtual.VirtualItemStateProvider;
+    private VirtualItemStateProvider[] virtualProviders = new VirtualItemStateProvider[0];
+    /**
+     * Adds a new virtual item state provider
+     * @param prov
+     */
+    public synchronized void addVirtualItemStateProvider(VirtualItemStateProvider prov) {
+        VirtualItemStateProvider[] provs = new VirtualItemStateProvider[virtualProviders.length+1];
+        System.arraycopy(virtualProviders, 0, provs, 0, virtualProviders.length);
+        provs[virtualProviders.length] = prov;
+        virtualProviders = provs;
+    }
+
+        // check if there is a virtual state for the specified item
+        for (int i=0; i<virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return virtualProviders[i].getItemState(id);
+            }
+        }
+
-        try {
-            // check if there's transient state for the specified item
+
+        // check if there's transient state for the specified item
+        if (transientStateMgr.hasItemState(id)) {
-        } catch (NoSuchItemStateException nsise) {
-            // check if there's persistent state for the specified item
+        }
+
+        // check if there's persistent state for the specified item
+        if (persistentStateMgr.hasItemState(id)) {
+
+        throw new NoSuchItemStateException(id.toString());
-        try {
-            getItemState(id);
-            return true;
-        } catch (ItemStateException ise) {
-            return false;
+        return transientStateMgr.hasItemStateInAttic(id)
+                || transientStateMgr.hasItemState(id)
+                || persistentStateMgr.hasItemState(id)
+                || hasVirtualItemState(id);
+    }
+
+    /**
+     * Checks if there is a virtual item state
+     * @param id
+     * @return
+     */
+    private boolean hasVirtualItemState(ItemId id) {
+        for (int i=0; i<virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return true;
+            }
+        return false;
-        try {
-            getItemStateInAttic(id);
-            return true;
-        } catch (ItemStateException ise) {
-            return false;
-        }
+        return transientStateMgr.hasItemStateInAttic(id);

INS26 INS40 INS23 INS31 INS31 INS31 INS83 INS5 INS59 INS29 MOV83 INS83 INS39 INS42 INS44 INS8 MOV29 INS83 MOV39 MOV42 MOV44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS43 INS85 INS42 INS3 INS65 INS65 INS43 INS42 INS60 INS21 INS21 INS21 INS24 INS25 INS25 INS53 INS41 INS65 INS65 INS65 UPD43 MOV43 UPD42 MOV42 INS24 MOV41 INS41 INS42 INS5 INS34 INS66 INS42 INS42 INS5 INS59 INS32 INS7 INS7 INS58 INS27 INS37 INS8 INS32 MOV8 INS32 MOV8 INS14 INS27 INS66 INS42 UPD42 INS58 INS27 INS37 INS8 INS32 INS43 INS85 INS43 INS85 INS42 INS3 INS42 INS42 INS42 INS34 INS42 INS34 INS40 INS2 INS42 INS42 INS42 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS32 INS32 INS32 INS32 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS5 INS27 INS42 INS40 INS42 INS34 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS32 MOV8 INS43 INS85 INS40 INS34 INS2 INS42 INS42 INS41 INS2 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS2 INS42 INS42 INS42 INS42 DEL42 DEL44 DEL12 DEL54 DEL42 DEL42 DEL32 DEL21 DEL32 DEL21 DEL9 DEL41 DEL8 DEL44 DEL9 DEL41 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54