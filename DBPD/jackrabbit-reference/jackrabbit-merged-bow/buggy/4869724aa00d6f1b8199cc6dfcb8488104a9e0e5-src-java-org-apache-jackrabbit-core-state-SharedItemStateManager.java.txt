- moved virtual nodestate providers down to shared states (part of solving JCR-45)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156034 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.virtual.VirtualItemStateProvider;
+     * Virtual item state providers
+     */
+    private VirtualItemStateProvider[] virtualProviders = new VirtualItemStateProvider[0];
+
+    /**
+    /**
+     * Adds a new virtual item state provider
+     *
+     * @param prov
+     */
+    public synchronized void addVirtualItemStateProvider(VirtualItemStateProvider prov) {
+        VirtualItemStateProvider[] provs = new VirtualItemStateProvider[virtualProviders.length + 1];
+        System.arraycopy(virtualProviders, 0, provs, 0, virtualProviders.length);
+        provs[virtualProviders.length] = prov;
+        virtualProviders = provs;
+    }
+
-    protected NodeState getNodeState(NodeId id)
+    private NodeState getNodeState(NodeId id)
-    protected PropertyState getPropertyState(PropertyId id)
+    private PropertyState getPropertyState(PropertyId id)
+        // check the virtual root ids (needed for overlay)
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].isVirtualRoot(id)) {
+                return virtualProviders[i].getItemState(id);
+            }
+        }
+        // check internal first
+        if (hasNonVirtualItemState(id)) {
+            return getNonVirtualItemState(id);
+        }
+        // check if there is a virtual state for the specified item
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return virtualProviders[i].getItemState(id);
+            }
+        }
+        throw new NoSuchItemStateException(id.toString());
+    }
+    /**
+     * returns the item state for the given id without considering virtual
+     * item state providers.
+     */
+    private ItemState getNonVirtualItemState(ItemId id)
+            throws NoSuchItemStateException, ItemStateException {
+        // check the virtual root ids (needed for overlay)
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].isVirtualRoot(id)) {
+                return true;
+            }
+        }
+        // check if this manager has the item state
+        if (hasNonVirtualItemState(id)) {
+            return true;
+        }
+        // otherwise check virtual ones
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * Checks if this itemstate manager has the given item state without
+     * considering the virtual item state managers.
+     */
+    private boolean hasNonVirtualItemState(ItemId id) {
+        if (isCached(id)) {
+            return true;
+        }
-        NodeReferences refs;
+        // todo: add caching
+        // check persistence manager
-            refs = persistMgr.load(id);
-        } catch (NoSuchItemStateException nsise) {
-            refs = new NodeReferences(id);
+            return persistMgr.load(id);
+        } catch (NoSuchItemStateException e) {
+            // ignore
-
-        return refs;
+        // check virtual providers
+        for (int i = 0; i < virtualProviders.length; i++) {
+            try {
+                return virtualProviders[i].getNodeReferences(id);
+            } catch (NoSuchItemStateException e) {
+                // ignore
+            }
+        }
+        // create new one
+        return new NodeReferences(id);

INS26 MOV31 INS40 INS23 INS31 INS31 INS31 INS29 INS83 INS5 INS59 INS29 INS39 UPD42 INS44 UPD83 UPD83 MOV29 INS83 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS29 UPD83 UPD42 MOV29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 UPD83 UPD42 MOV29 INS83 INS83 MOV43 INS42 MOV44 MOV43 MOV43 INS8 INS65 INS43 INS85 INS42 INS3 INS65 INS65 INS43 INS42 INS21 MOV21 INS21 INS42 INS43 INS42 INS42 INS42 INS24 INS25 INS24 INS53 INS65 INS43 INS42 INS25 INS24 INS25 INS24 INS41 INS65 INS54 INS24 INS41 INS66 INS42 INS5 INS34 INS66 INS42 INS42 INS5 INS32 INS7 INS42 INS58 INS27 INS37 INS8 INS32 INS8 INS58 INS27 INS37 INS8 INS14 INS66 INS66 INS42 INS32 INS8 INS58 INS27 INS37 INS8 INS32 INS8 INS58 INS27 INS37 INS8 INS9 INS66 INS66 MOV8 INS12 INS58 INS27 INS37 INS8 MOV14 INS43 INS85 INS43 INS85 UPD42 INS3 INS42 INS42 INS42 INS34 INS42 INS34 INS40 INS2 INS42 INS42 INS42 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS41 INS39 INS59 INS42 INS40 INS42 INS25 MOV43 INS32 INS42 INS42 INS41 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS41 INS39 INS59 INS42 INS40 INS42 INS25 INS41 INS44 INS8 INS39 INS59 INS42 INS40 INS42 INS54 INS42 UPD42 MOV42 INS5 INS27 INS42 INS40 INS42 INS34 INS32 INS8 INS32 INS42 INS34 INS32 INS8 INS42 INS42 INS9 INS42 INS34 INS32 INS8 INS9 INS42 INS34 INS32 INS8 MOV32 INS43 INS42 INS42 INS34 INS8 INS12 INS43 INS85 INS40 INS34 INS2 INS42 INS42 INS41 INS42 INS42 INS2 INS42 INS42 INS41 INS2 INS42 INS42 INS41 INS2 INS42 INS42 INS41 INS42 INS41 INS44 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS9 INS32 INS43 INS42 INS2 INS42 INS42 INS2 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL43 DEL42 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL41 DEL83 DEL83 DEL42 DEL7 DEL21