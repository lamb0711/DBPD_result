JCR-2104: JSR 283 Versioning
   - VersionHistory.getAllFrozenNodes()  (move iteratoradaptor from core to jcr-commons), VersionHistory.getVersionableIdentifier()
   - Version.getFrozenNode, Version.getLinearPredecessor()
   - VersionManager (work in progress): 170-methods, shallow merge, checkpoint
      -> extend SPI interfaces accordingly

JCR-2003: JCR2SPI / SPI: Add support for JCR 2.0
   - Session.hasPermission()
   - Node.getProperties/getNodes with glob
   - Node.getIdentifier()

JCR-2004: Update SPI locking to match JCR 2.0
   - separate JCR LockManager from the internal lock manager

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@773828 13f79535-47bb-0310-9956-ffa450edef68

+    Version checkpoint() throws RepositoryException {
+        checkIsVersionable();
+        checkHasPendingChanges();
+        checkIsLocked();
+        NodeEntry newVersion = session.getVersionStateManager().checkpoint(getNodeState());
+        return (Version) getItemManager().getItem(newVersion);
+    }
+    
+        return merge(srcWorkspace, bestEffort, false);
+    }
+
+
+    /**
+     * TODO: Issue 728 of the pfd... this method is a leftover and will be removed in the final version.
+     * -> change to package protected then
+     */
+    public NodeIterator merge(String srcWorkspace, boolean bestEffort, boolean isShallow) throws RepositoryException {
-        Iterator failedIds = session.getVersionStateManager().merge(getNodeState(), srcWorkspace, bestEffort);
+        Iterator failedIds = session.getVersionStateManager().merge(getNodeState(), srcWorkspace, bestEffort, isShallow);
-        // TODO: implementation missing
-        throw new UnsupportedRepositoryOperationException("JCR-1104");
+        checkStatus();
+        // TODO: check again and add SPI method to create Node-Identifier from String
+        return getNodeEntry().getId().toString();
-        // TODO: implementation missing
-        throw new UnsupportedRepositoryOperationException("JCR-1104");
+        checkStatus();
+        List nodes = new ArrayList();
+        // traverse child nodes using a filtering collector
+        accept(new ChildrenCollectorFilter(nameGlobs, nodes, true, false, 1));
+        return new NodeIteratorAdapter(nodes);
-        // TODO: implementation missing
-        throw new UnsupportedRepositoryOperationException("JCR-1104");
+        checkStatus();
+        List properties = new ArrayList();
+        // traverse child properties using a filtering collector
+        accept(new ChildrenCollectorFilter(nameGlobs, properties, true, false, 1));
+        return new PropertyIteratorAdapter(properties);
-     * @see javax.jcr.Node#getSharedSet()
-     */
-    public NodeIterator getSharedSet() throws RepositoryException {
-        // TODO: implementation missing
-        throw new UnsupportedRepositoryOperationException("JCR-1104");
-    }
-
-    /**
-     * TODO: Issue 728 of the pfd... this method is a leftover and will be removed in the final version.
+     * @see javax.jcr.Node#getSharedSet()
-    public NodeIterator merge(String srcWorkspace, boolean bestEffort, boolean isShallow) throws RepositoryException {
+    public NodeIterator getSharedSet() throws RepositoryException {
+    // TODO: protected due to usage within VersionImpl, VersionHistoryImpl (check for alternatives)
+    /**
+     *
+     * @param nodeName
+     * @param index
+     * @return
+     * @throws PathNotFoundException
+     * @throws RepositoryException
+     */
+    protected Node getNode(Name nodeName, int index) throws PathNotFoundException, RepositoryException {
+        checkStatus();
+        try {
+            NodeEntry nEntry = getNodeEntry().getNodeEntry(nodeName, index);
+            if (nEntry == null) {
+                throw new PathNotFoundException(LogUtil.saveGetJCRName(nodeName, session.getNameResolver()));
+            }
+            return (Node) getItemManager().getItem(nEntry);
+        } catch (AccessDeniedException e) {
+            throw new PathNotFoundException(LogUtil.saveGetJCRName(nodeName, session.getNameResolver()));
+        }
+    }
+

MOV31 MOV31 INS31 INS31 INS43 INS42 INS43 INS8 MOV29 INS83 MOV43 INS42 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 INS43 INS8 INS29 INS44 UPD83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS21 INS21 INS21 INS60 INS41 INS42 INS41 INS65 INS39 INS42 INS21 INS41 INS21 INS60 INS21 INS41 INS21 INS60 INS21 INS41 UPD65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 UPD39 UPD42 INS42 INS21 INS54 INS32 INS32 INS32 INS43 INS59 INS11 INS32 INS66 INS66 INS32 INS32 INS32 INS43 INS59 INS32 INS14 INS32 INS43 INS59 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS9 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS14 UPD43 MOV43 INS42 INS42 INS42 INS42 INS14 INS42 INS14 UPD43 MOV43 INS42 INS42 INS60 INS25 INS41 INS44 INS8 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS42 INS9 INS9 INS34 UPD42 INS43 INS43 INS42 INS42 INS9 INS9 INS34 UPD42 INS43 INS59 INS27 INS8 INS11 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 MOV53 INS43 INS32 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS32 INS42 UPD43 INS32 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL45 DEL14 DEL53 DEL45 DEL14 DEL53 DEL66 DEL42 DEL45 DEL8