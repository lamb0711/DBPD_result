JCR-2105: JSR 283 NodeType Management (work in progress)
JCR-1483: Move common node type functionality to jackrabbit-spi-commons

NOTE: intermediate checkin to avoid additional conflicts with stefans work


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774294 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.jcr2spi.nodetype;
+package org.apache.jackrabbit.spi.commons.nodetype;
-import javax.jcr.nodetype.NoSuchNodeTypeException;
+import javax.jcr.nodetype.NoSuchNodeTypeException;
- * All method calls are delegated to the wrapped {@link QItemDefinition},
+ * All method calls are delegated to the wrapped {@link org.apache.jackrabbit.spi.QItemDefinition},
-     * The node type manager of this session.
-     */
-    protected final NodeTypeManagerImpl ntMgr;
-
-    /**
+        /**
+     * The node type manager of this session.
+     */
+    protected final AbstractNodeTypeManager ntMgr;
+
-     * Package private constructor
+     * Package private constructor to create a definition that is based on
+     * a template.
-     * @param ntMgr      node type manager
-    ItemDefinitionImpl(QItemDefinition itemDef, NodeTypeManagerImpl ntMgr,
-                       NamePathResolver resolver) {
-        this.itemDef = itemDef;
-        this.ntMgr = ntMgr;
-        this.resolver = resolver;
+    ItemDefinitionImpl(QItemDefinition itemDef, NamePathResolver resolver) {
+        this(itemDef, null, resolver);
-    //-------------------------------------------------------< ItemDefinition >
+    /**
+     * Package private constructor to create a definition that is based on
+     * an existing node type.
+     *
+     * @param itemDef
+     * @param ntMgr
+     * @param resolver
+     */
+    ItemDefinitionImpl(QItemDefinition itemDef, AbstractNodeTypeManager ntMgr, NamePathResolver resolver) {
+        this.itemDef = itemDef;
+        this.resolver = resolver;
+        this.ntMgr = ntMgr;
+    }
+
+    //-----------------------------------------------------< ItemDefinition >---
-        try {
-            return ntMgr.getNodeType(itemDef.getDeclaringNodeType());
-        } catch (NoSuchNodeTypeException e) {
-            // should never get here
-            log.error("declaring node type does not exist", e);
+        if (ntMgr == null) {
+            // only a template
+        } else {
+            try {
+                return ntMgr.getNodeType(itemDef.getDeclaringNodeType());
+            } catch (NoSuchNodeTypeException e) {
+                // should never get here
+                log.error("declaring node type does not exist", e);
+                return null;
+            }
-}
-
+}

MOV26 MOV23 UPD40 INS31 UPD43 MOV29 INS42 INS44 INS44 INS8 INS29 MOV21 INS8 UPD42 INS43 INS42 INS43 INS42 INS17 INS65 INS65 INS65 INS65 UPD43 INS25 INS40 UPD66 INS66 INS42 INS42 INS42 INS33 INS42 INS66 INS66 INS42 INS42 INS42 UPD42 INS27 INS8 MOV8 INS42 INS33 INS41 INS33 DEL42 DEL42 DEL66 DEL65