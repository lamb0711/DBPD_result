JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.httpclient.methods.multipart.PartBase;
-import org.apache.jackrabbit.commons.webdav.JcrValueType;
+import org.apache.jackrabbit.spi.Tree;
-    private static final String DEFAULT_CHARSET = "UTF-8";
-
+    public Tree createTree(SessionInfo sessionInfo, Batch batch, Name nodeName, Name primaryTypeName, String uniqueId) throws RepositoryException {
+        return new JsonTree(nodeName, primaryTypeName, uniqueId, getNamePathResolver(sessionInfo));
+    }
+
+    @Override
-            addPart(PARAM_DIFF, buf.toString());
+            Utils.addPart(PARAM_DIFF, buf.toString(), parts);
-        /**
-         * @inheritDoc
-         */
+        @Override
-            wr.write(getJsonKey(JcrConstants.JCR_PRIMARYTYPE));
+            wr.write(Utils.getJsonKey(JcrConstants.JCR_PRIMARYTYPE));
-                wr.write(getJsonKey(JcrConstants.JCR_UUID));
+                wr.write(Utils.getJsonKey(JcrConstants.JCR_UUID));
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
-        /**
-         * @inheritDoc
-         */
+        @Override
+        @Override
+        public void setTree(NodeId parentId, Tree contentTree) throws RepositoryException {
+            assertMethod();
+            if (!(contentTree instanceof JsonTree)) {
+                throw new RepositoryException("Invalid Tree implementation : " + contentTree.getClass().getName());
+            }
+
+            Path normalizedPath = getPathFactory().create(getPath(parentId, sessionInfo), contentTree.getName(), true);
+            String jcrPath = getNamePathResolver(sessionInfo).getJCRPath(normalizedPath);
+            appendDiff(SYMBOL_ADD_NODE, jcrPath, ((JsonTree) contentTree).toJsonString(parts));
+        }
+
+        //----------------------------------------------------------------------
-            String strValue = getJsonString(value);
+            String strValue = Utils.getJsonString(value);
-                addPart(jcrPropPath, value, resolver);
+                Utils.addPart(jcrPropPath, value, resolver, parts);
-                String str = getJsonString(values[i]);
+                String str = Utils.getJsonString(values[i]);
-                    addPart(jcrPropPath, values[i], resolver);
+                    Utils.addPart(jcrPropPath, values[i], resolver, parts);
-                    removeParts(jcrPropPath);
+                    Utils.removeParts(jcrPropPath, parts);
-        /**
-         *
-         * @param paramName
-         * @param value
-         */
-        private void addPart(String paramName, String value) {
-            parts.add(new StringPart(paramName, value, DEFAULT_CHARSET));
-        }
-
-        /**
-         *
-         * @param paramName
-         * @param value
-         * @param resolver
-         * @throws RepositoryException
-         */
-        private void addPart(String paramName, QValue value, NamePathResolver resolver) throws RepositoryException {
-            Part part;
-            switch (value.getType()) {
-                case PropertyType.BINARY:
-                    part = new BinaryPart(paramName, new BinaryPartSource(value), JcrValueType.contentTypeFromType(PropertyType.BINARY), DEFAULT_CHARSET);
-                    break;
-                case PropertyType.NAME:
-                    part = new StringPart(paramName, resolver.getJCRName(value.getName()), DEFAULT_CHARSET);
-                    break;
-                case PropertyType.PATH:
-                    part = new StringPart(paramName, resolver.getJCRPath(value.getPath()), DEFAULT_CHARSET);
-                    break;
-                default:
-                    part = new StringPart(paramName, value.getString(), DEFAULT_CHARSET);
-            }
-            String ctype = JcrValueType.contentTypeFromType(value.getType());
-            ((PartBase) part).setContentType(ctype);
-
-            parts.add(part);
-        }
-
-        private void removeParts(String paramName) {
-            for (Iterator<Part> it = parts.iterator(); it.hasNext();) {
-                Part part = it.next();
-                if (part.getName().equals(paramName)) {
-                    it.remove();
-                }
-            }
-        }
-
-        private String getJsonKey(String str) {
-            return JsonUtil.getJsonString(str) + ":";
-        }
-
-        private String getJsonString(QValue value) throws RepositoryException {
-            String str;
-            switch (value.getType()) {
-                case PropertyType.STRING:
-                    str = JsonUtil.getJsonString(value.getString());
-                    break;
-                case PropertyType.BOOLEAN:
-                case PropertyType.LONG:
-                    str = value.getString();
-                    break;
-                case PropertyType.DOUBLE:
-                    double d = value.getDouble();
-                    if (Double.isNaN(d) || Double.isInfinite(d)) {
-                    // JSON cannot specifically handle this property type...
-                        str = null;
-                    } else {
-                        str = value.getString();
-                        if (str.indexOf('.') == -1) {
-                            str += ".0";
-                        }
-                    }
-                    break;
-                default:
-                    // JSON cannot specifically handle this property type...
-                    str = null;
-            }
-            return str;
-        }
-

MOV26 UPD40 INS31 MOV31 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 MOV44 MOV43 INS8 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 UPD42 INS41 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 UPD83 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD43 UPD42 UPD43 UPD42 INS21 INS25 INS60 INS43 INS42 INS42 INS42 INS32 UPD42 UPD42 INS32 INS38 INS8 INS43 INS59 MOV43 INS32 INS43 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS36 INS53 UPD42 MOV42 INS42 INS32 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS62 INS14 INS32 UPD42 MOV42 INS32 INS32 INS9 INS32 UPD42 MOV42 UPD42 MOV42 MOV36 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS43 UPD43 MOV43 INS27 UPD42 MOV42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV42 MOV32 INS42 UPD42 MOV42 UPD42 INS45 INS32 UPD43 UPD42 UPD42 UPD42 MOV32 INS32 MOV42 UPD42 UPD42 INS42 INS42 INS42 INS42 MOV42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL65 DEL29 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL40 DEL49 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL40 DEL32 DEL42 DEL14 DEL7 DEL21 DEL10 DEL40 DEL49 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL14 DEL7 DEL21 DEL10 DEL40 DEL49 DEL42 DEL43 DEL42 DEL42 DEL32 DEL32 DEL42 DEL14 DEL7 DEL21 DEL10 DEL49 DEL42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL14 DEL7 DEL21 DEL50 DEL42 DEL43 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL65 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL40 DEL49 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL10 DEL40 DEL49 DEL40 DEL49 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL10 DEL40 DEL49 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL33 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL13 DEL32 DEL34 DEL38 DEL27 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL10 DEL49 DEL42 DEL33 DEL7 DEL21 DEL50 DEL42 DEL41 DEL8 DEL31