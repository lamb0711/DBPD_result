JCR-2640: Internal repository context

Decouple SessionImpl from the details of workspace and data store handling in RepositoryImpl.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@948851 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.RepositoryImpl.WorkspaceInfo;
-import org.apache.jackrabbit.core.persistence.IterablePersistenceManager;
-import org.apache.jackrabbit.core.persistence.PersistenceManager;
-import org.apache.jackrabbit.core.version.InternalVersionManagerImpl;
-                wspConfig, rep.getWorkspaceStateManager(wspName));
+                wspConfig,
+                repositoryContext.getWorkspaceManager().getWorkspaceStateManager(wspName));
-        versionMgr = createVersionManager(rep);
+        versionMgr = createVersionManager();
-    protected InternalVersionManager createVersionManager(RepositoryImpl rep)
+    protected InternalVersionManager createVersionManager()
-
-            workspaceName = rep.getConfig().getDefaultWorkspaceName();
+            workspaceName =
+                repositoryContext.getWorkspaceManager().getDefaultWorkspaceName();
-        for (String name : rep.getWorkspaceNames()) {
+        for (String name : repositoryContext.getWorkspaceManager().getWorkspaceNames()) {
-        rep.createWorkspace(workspaceName);
+        repositoryContext.getWorkspaceManager().createWorkspace(workspaceName);
-    protected void createWorkspace(String workspaceName,
-                                   InputSource configTemplate)
+    protected void createWorkspace(
+            String workspaceName, InputSource configTemplate)
-        rep.createWorkspace(workspaceName, configTemplate);
+        repositoryContext.getWorkspaceManager().createWorkspace(
+                workspaceName, configTemplate);
-        ArrayList<PersistenceManager> pmList = new ArrayList<PersistenceManager>();
-        InternalVersionManagerImpl vm = repositoryContext.getInternalVersionManager();
-        PersistenceManager pm = vm.getPersistenceManager();
-        pmList.add(pm);
-        String[] wspNames = rep.getWorkspaceNames();
-        Session[] sessions = new Session[wspNames.length];
-        for (int i = 0; i < wspNames.length; i++) {
-            String wspName = wspNames[i];
-            WorkspaceInfo wspInfo = rep.getWorkspaceInfo(wspName);
-            // this will initialize the workspace if required
-            SessionImpl session =
-                SystemSession.create(repositoryContext, wspInfo.getConfig());
-            // mark this session as 'active' so the workspace does not get disposed
-            // by the workspace-janitor until the garbage collector is done
-            rep.onSessionCreated(session);
-            // the workspace could be disposed again, so re-initialize if required
-            // afterwards it will not be disposed because a session is registered
-            wspInfo.initialize();
-            sessions[i] = session;
-            pm = wspInfo.getPersistenceManager();
-            pmList.add(pm);
-        }
-        IterablePersistenceManager[] ipmList = new IterablePersistenceManager[pmList.size()];
-        for (int i = 0; i < pmList.size(); i++) {
-            pm = pmList.get(i);
-            if (!(pm instanceof IterablePersistenceManager)) {
-                ipmList = null;
-                break;
+        final GarbageCollector gc = rep.createDataStoreGarbageCollector();
+        // Auto-close if the main session logs out
+        addListener(new SessionListener() {
+            public void loggedOut(SessionImpl session) {
-            ipmList[i] = (IterablePersistenceManager) pm;
-        }
-        GarbageCollector gc = new GarbageCollector(
-                repositoryContext.getDataStore(), this, ipmList, sessions);
+            public void loggingOut(SessionImpl session) {
+                gc.close();
+            }
+        });
-            return rep.login(otherCredentials, getWorkspace().getName());
+            return getRepository().login(
+                    otherCredentials, getWorkspace().getName());

INS21 INS83 MOV43 INS32 INS32 INS32 INS32 UPD42 INS42 INS14 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 INS43 INS1 INS32 UPD42 MOV42 INS31 INS31 INS32 UPD42 MOV42 INS42 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 UPD42 MOV42 UPD42 UPD42 INS43 INS42 MOV43 INS42 MOV21 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL7 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL43 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL2 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL42 DEL33 DEL7 DEL21 DEL10 DEL8 DEL25 DEL42 DEL42 DEL2 DEL42 DEL43 DEL42 DEL11 DEL7 DEL21 DEL8 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL52 DEL42 DEL42 DEL14 DEL59 DEL60