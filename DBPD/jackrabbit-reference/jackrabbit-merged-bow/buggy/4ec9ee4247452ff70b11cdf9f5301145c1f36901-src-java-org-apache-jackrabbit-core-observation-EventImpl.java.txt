- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
+import org.apache.log4j.Logger;
- *
- * @author Marcel Reutegger
- * @version $Revision: 1.6 $
-	this.session = session;
-	this.eventState = eventState;
+        this.session = session;
+        this.eventState = eventState;
-	return eventState.getType();
+        return eventState.getType();
-	try {
-	    return eventState.getParentPath().toJCRPath(session.getNamespaceResolver());
-	} catch (NoPrefixDeclaredException e) {
-	    String msg = "internal error: encountered unregistered namespace in path";
-	    log.error(msg, e);
-	    throw new RepositoryException(msg, e);
-	}
+        try {
+            return eventState.getParentPath().toJCRPath(session.getNamespaceResolver());
+        } catch (NoPrefixDeclaredException e) {
+            String msg = "internal error: encountered unregistered namespace in path";
+            log.error(msg, e);
+            throw new RepositoryException(msg, e);
+        }
-	try {
-	    return eventState.getChildItemQName().toJCRName(session.getNamespaceResolver());
-	} catch (NoPrefixDeclaredException e) {
-	    // should never get here...
-	    String msg = "internal error: encountered unregistered namespace in name";
-	    log.error(msg, e);
-	    throw new RepositoryException(msg, e);
-	}
+        try {
+            return eventState.getChildItemQName().toJCRName(session.getNamespaceResolver());
+        } catch (NoPrefixDeclaredException e) {
+            // should never get here...
+            String msg = "internal error: encountered unregistered namespace in name";
+            log.error(msg, e);
+            throw new RepositoryException(msg, e);
+        }
-	return eventState.getUserId();
+        return eventState.getUserId();
-	return eventState.getParentUUID();
+        return eventState.getParentUUID();
+     *
-	return eventState.getChildUUID();
+        return eventState.getChildUUID();
-	if (stringValue == null) {
-	    StringBuffer sb = new StringBuffer();
-	    sb.append("Event: Path: ");
-	    try {
-		sb.append(getNodePath());
-	    } catch (RepositoryException e) {
-		log.error("Exception retrieving path: " + e);
-		sb.append("[Error retrieving path]");
-	    }
-	    sb.append(", ").append(EventState.valueOf(getType())).append(": ");
-	    try {
-		sb.append(getChildName());
-	    } catch (RepositoryException e) {
-		log.error("Exception retrieving child item name: " + e);
-		sb.append("[Error retrieving child item name]");
-	    }
-	    sb.append(", UserId: ").append(getUserId());
-	    stringValue = sb.toString();
-	}
-	return stringValue;
+        if (stringValue == null) {
+            StringBuffer sb = new StringBuffer();
+            sb.append("Event: Path: ");
+            try {
+                sb.append(getNodePath());
+            } catch (RepositoryException e) {
+                log.error("Exception retrieving path: " + e);
+                sb.append("[Error retrieving path]");
+            }
+            sb.append(", ").append(EventState.valueOf(getType())).append(": ");
+            try {
+                sb.append(getChildName());
+            } catch (RepositoryException e) {
+                log.error("Exception retrieving child item name: " + e);
+                sb.append("[Error retrieving child item name]");
+            }
+            sb.append(", UserId: ").append(getUserId());
+            stringValue = sb.toString();
+        }
+        return stringValue;
-	return eventState.hashCode() ^ session.hashCode();
+        return eventState.hashCode() ^ session.hashCode();
-	if (this == obj) {
-	    return true;
-	}
-	if (obj instanceof EventImpl) {
-	    EventImpl other = (EventImpl) obj;
-	    return this.eventState.equals(other.eventState)
-		    && this.session.equals(other.session);
-	}
-	return false;
+        if (this == obj) {
+            return true;
+        }
+        if (obj instanceof EventImpl) {
+            EventImpl other = (EventImpl) obj;
+            return this.eventState.equals(other.eventState)
+                    && this.session.equals(other.session);
+        }
+        return false;

MOV26 DEL66 DEL65 DEL66 DEL65