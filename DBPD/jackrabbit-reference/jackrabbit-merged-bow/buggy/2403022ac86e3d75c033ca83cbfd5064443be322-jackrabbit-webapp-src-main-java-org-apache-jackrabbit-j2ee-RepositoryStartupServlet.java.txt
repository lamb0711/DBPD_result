JCR-686 change some access-level modifiers to allow for better subclassing


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@489363 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.Repository;
-import javax.jcr.RepositoryException;
-import javax.naming.InitialContext;
-import javax.naming.NamingException;
-import javax.servlet.ServletException;
-import javax.servlet.http.HttpServlet;
+import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
+import javax.naming.InitialContext;
+import javax.naming.NamingException;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServlet;
+
-}
+    /**
+     * optional class for RMI, will only be used, if RMI server is present
+     */
+    protected static abstract class RemoteFactoryDelegater {
-/**
- * optional class for RMI, will only be used, if RMI server is present
- */
-abstract class RemoteFactoryDelegater {
-
-    public abstract Remote createRemoteRepository(Repository repository)
-            throws RemoteException;
-}
-/**
- * optional class for RMI, will only be used, if RMI server is present
- */
-class RMIRemoteFactoryDelegater extends RemoteFactoryDelegater {
-
-    // only used to enforce linking upon Class.forName()
-    static String FactoryClassName = ServerAdapterFactory.class.getName();
-
-    public Remote createRemoteRepository(Repository repository)
-            throws RemoteException {
-        return new ServerAdapterFactory().getRemoteRepository(repository);
+        public abstract Remote createRemoteRepository(Repository repository)
+                throws RemoteException;
+    /**
+     * optional class for RMI, will only be used, if RMI server is present
+     */
+    protected static class RMIRemoteFactoryDelegater extends RemoteFactoryDelegater {
+
+        // only used to enforce linking upon Class.forName()
+        static String FactoryClassName = ServerAdapterFactory.class.getName();
+
+        public Remote createRemoteRepository(Repository repository)
+                throws RemoteException {
+            return new ServerAdapterFactory().getRemoteRepository(repository);
+        }
+    }
+
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS55 INS55 MOV29 INS83 INS83 INS83 INS42 MOV31 MOV29 INS83 INS83 INS42 MOV43 MOV23 MOV31 DEL83 DEL42 DEL55 DEL42 DEL55