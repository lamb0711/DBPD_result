JCR-1104 : JSR 283 support (security work in progress)

- user API: add distinction between declared and indirect group membership
- user Impl: move group membership to authorizable node type
- javadoc
- minor fixes/improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@651624 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.spi.commons.conversion.NameResolver;
+import org.apache.jackrabbit.util.Text;
+    private final String pGroupName;
+
-        // listen to any modifications for users and groups
+        // listen to modifications of group-membership
+        String[] ntNames = new String[1];
+        if (securitySession instanceof SessionImpl) {
+            NameResolver resolver = (SessionImpl) securitySession;
+            ntNames[0] = resolver.getJCRName(UserManagerImpl.NT_REP_USER);
+            pGroupName = resolver.getJCRName(UserManagerImpl.P_GROUPS);
+        } else {
+            ntNames[0] = "rep:User";
+            pGroupName = "rep:groups";
+        }
-                Event.NODE_ADDED | Event.NODE_REMOVED | Event.PROPERTY_ADDED | Event.PROPERTY_CHANGED | Event.PROPERTY_REMOVED,
+                Event.NODE_REMOVED | Event.PROPERTY_ADDED | Event.PROPERTY_CHANGED | Event.PROPERTY_REMOVED,
-                null,
+                ntNames,
-        // simple rule: flush all cached
+        // superclass: flush all cached
-        synchronized (membershipCache) {
-            membershipCache.clear();
+
+        // membership cache:
+        while (eventIterator.hasNext()) {
+            Event ev = eventIterator.nextEvent();
+            int type = ev.getType();
+            if (type == Event.PROPERTY_ADDED || type == Event.PROPERTY_CHANGED
+                    || type == Event.PROPERTY_REMOVED) {
+                try {
+                    if (pGroupName.equals(Text.getName(ev.getPath()))) {
+                        synchronized (membershipCache) {
+                            membershipCache.clear();
+                        }
+                        break;
+                    }
+                } catch (RepositoryException e) {
+                    // should never get here
+                    log.warn(e.getMessage());
+                }
+            }
-                    Principal groupPrinc = group.getPrincipal();
-                    if (membership.add(groupPrinc)) {
-                        membership.addAll(collectGroupMembership(groupPrinc, membership));
-                    } else {
-                        String msg = "Cyclic group membership detected with Group " + groupPrinc.getName();
-                        log.error(msg);
-                    }
+                    membership.add(group.getPrincipal());

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS83 INS83 INS43 INS59 INS8 INS42 INS42 INS60 INS25 MOV21 INS61 INS5 INS59 INS62 INS8 INS8 INS32 INS8 INS43 INS85 INS42 INS3 INS42 INS43 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS5 INS34 INS42 INS43 INS59 INS7 INS7 INS7 INS7 INS43 INS59 INS39 INS59 INS27 INS8 MOV43 INS85 INS42 INS42 INS11 INS2 INS32 INS42 INS32 INS2 INS45 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS27 INS27 INS54 INS43 INS42 INS42 INS34 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS34 INS42 INS42 INS42 INS42 INS27 INS27 INS42 INS40 INS8 INS12 INS8 INS42 INS42 INS40 INS42 INS40 INS25 INS44 INS8 MOV60 MOV21 INS32 MOV8 INS43 INS42 INS21 INS42 INS42 INS32 INS10 INS42 INS32 UPD42 MOV32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL40 DEL33 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL8 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8