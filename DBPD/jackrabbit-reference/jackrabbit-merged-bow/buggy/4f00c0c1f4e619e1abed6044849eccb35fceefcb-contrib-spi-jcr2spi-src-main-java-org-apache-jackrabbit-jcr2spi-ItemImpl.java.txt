work in progress

JCR2SPI
--------------------------------------------------------------

- reorder ItemState/NodeState/PropertyState in order to group
  methods by state types (overlayed workspace state vs. session/transient states)
- add utility methods that allow to determine and validate the
  type of ItemState.
- move childitementry classes to separate package and force usage
  of interface methods
- add checks for state type to ItemManager implementation
- add checks for state type to LockManager
- fix Node.getMixinTypes()
- rename ItemState.pull to 'reset'. remove todo asking for a careful
  merging of wsp-State and introduce a new method 'merge'.

SPI
--------------------------------------------------------------------

- rename login as suggested by julian
- add method dispose(SessionInfo) 
- rename ItemId.getRelativePath to getPath

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@454423 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.state.Status;
-import org.apache.jackrabbit.spi.ItemId;
-        return state.getStatus() == ItemState.STATUS_NEW;
+        return state.getStatus() == Status.NEW;
-        return state.getStatus() == ItemState.STATUS_EXISTING_MODIFIED;
+        return state.getStatus() == Status.EXISTING_MODIFIED;
-                ItemId thisId = state.getOverlayedState().getId();
-                ItemId otherId = other.state.getOverlayedState().getId();
-                return thisId.equals(otherId);
+                ItemState wspState = state.getWorkspaceState();
+                ItemState otherWspState = other.state.getWorkspaceState();
+
+                if (wspState != null && otherWspState != null) {
+                    return wspState.getId().equals(otherWspState.getId());
+                }
+                /* else:
+                - if both wsp-states are null, the items are both transiently
+                  added and are only the same if they are obtained from the same
+                  session. in this case, their states must be the same object,
+                  which is covered above.
+                - either of the two items does not have a workspace state.
+                  therefore the items cannot be the same, since one has been
+                  transiently added in one but not the other session.
+                  */
-            case ItemState.STATUS_NEW:
+            case Status.NEW:
-            case ItemState.STATUS_STALE_DESTROYED:
+            case Status.STALE_DESTROYED:
-             * - ItemState.STATUS_EXISTING : modifications reverted or saved
-             * - ItemState.STATUS_EXISTING_MODIFIED : transient modification
-             * - ItemState.STATUS_STALE_MODIFIED : external modifications while transient changes pending
-             * - ItemState.MODIFIED : externaly modified -> marker for sessionISM states only
+             * - Status#EXISTING : modifications reverted or saved
+             * - Status#EXISTING_MODIFIED : transient modification
+             * - Status#STALE_MODIFIED : external modifications while transient changes pending
+             * - Status#MODIFIED : externaly modified -> marker for sessionISM states only
-            case ItemState.STATUS_EXISTING:
-            case ItemState.STATUS_EXISTING_MODIFIED:
-            case ItemState.STATUS_STALE_MODIFIED:
-            case ItemState.STATUS_MODIFIED:
+            case Status.EXISTING:
+            case Status.EXISTING_MODIFIED:
+            case Status.STALE_MODIFIED:
+            case Status.MODIFIED:
-             * - STATUS_EXISTING_REMOVED : transient removal
-             * - STATUS_REMOVED : permanent removal. item will never get back to life
-             * - STATUS_STALE_DESTROYED : permanent removal. item will never get back to life
+             * - Status#EXISTING_REMOVED : transient removal
+             * - Status#REMOVED : permanent removal. item will never get back to life
+             * - Status#STALE_DESTROYED : permanent removal. item will never get back to life
-            case ItemState.STATUS_EXISTING_REMOVED:
+            case Status.EXISTING_REMOVED:
-            case ItemState.STATUS_REMOVED:
-            case ItemState.STATUS_STALE_DESTROYED:
+            case Status.REMOVED:
+            case Status.STALE_DESTROYED:
-            case ItemState.STATUS_NEW:
+            case Status.NEW:

MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS25 UPD43 UPD43 INS27 INS8 UPD42 UPD42 INS32 UPD42 UPD42 INS32 INS27 INS27 MOV41 MOV42 UPD42 MOV42 MOV40 UPD42 MOV42 INS42 INS33 INS42 INS33 INS32 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32