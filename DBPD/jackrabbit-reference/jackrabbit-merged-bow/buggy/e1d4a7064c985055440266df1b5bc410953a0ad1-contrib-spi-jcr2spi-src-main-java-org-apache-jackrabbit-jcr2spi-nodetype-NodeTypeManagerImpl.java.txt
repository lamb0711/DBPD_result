JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.IllegalNameException;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.UnknownPrefixException;
-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.namespace.NamespaceResolver;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.Name;
+import javax.jcr.NamespaceException;
+    private NamePathResolver resolver() {
+        return mgrProvider.getNamePathResolver();
+    }
+
-    public NodeTypeImpl getNodeType(QName name) throws NoSuchNodeTypeException {
+    public NodeTypeImpl getNodeType(Name name) throws NoSuchNodeTypeException {
-    public boolean hasNodeType(QName nodeTypeName) {
+    public boolean hasNodeType(Name nodeTypeName) {
-                ndi = new NodeDefinitionImpl(def, this, nsResolver());
+                ndi = new NodeDefinitionImpl(def, this, resolver());
-                pdi = new PropertyDefinitionImpl(def, this, nsResolver(), valueFactory);
+                pdi = new PropertyDefinitionImpl(def, this, resolver(), valueFactory);
-    public void nodeTypeRegistered(QName ntName) {
+    public void nodeTypeRegistered(Name ntName) {
-    public void nodeTypeReRegistered(QName ntName) {
+    public void nodeTypeReRegistered(Name ntName) {
-            String name = NameFormat.format(ntName, nsResolver());
+            String name = resolver().getJCRName(ntName);
-        } catch (NameException e) {
+        } catch (NamespaceException e) {
-    public void nodeTypeUnregistered(QName ntName) {
+    public void nodeTypeUnregistered(Name ntName) {
-            String name = NameFormat.format(ntName, nsResolver());
+            String name = resolver().getJCRName(ntName);
-        } catch (NameException e) {
+        } catch (NamespaceException e) {
-        QName[] ntNames = ntReg.getRegisteredNodeTypes();
+        Name[] ntNames = ntReg.getRegisteredNodeTypes();
-        QName[] ntNames = ntReg.getRegisteredNodeTypes();
+        Name[] ntNames = ntReg.getRegisteredNodeTypes();
-        QName[] ntNames = ntReg.getRegisteredNodeTypes();
+        Name[] ntNames = ntReg.getRegisteredNodeTypes();
-            QName qName = NameFormat.parse(nodeTypeName, nsResolver());
+            Name qName = resolver().getQName(nodeTypeName);
-        } catch (UnknownPrefixException upe) {
-            throw new NoSuchNodeTypeException(nodeTypeName, upe);
-        } catch (IllegalNameException ine) {
-            throw new NoSuchNodeTypeException(nodeTypeName, ine);
+        } catch (NamespaceException e) {
+            throw new NoSuchNodeTypeException(nodeTypeName, e);
+        } catch (NameException e) {
+            throw new NoSuchNodeTypeException(nodeTypeName, e);

MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 INS31 INS83 INS43 INS42 INS8 MOV29 MOV29 INS42 INS41 UPD43 UPD43 UPD43 UPD43 UPD43 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD5 UPD5 UPD5 INS42 INS42 INS44 UPD43 UPD43 UPD43 MOV44 UPD43 INS43 INS42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 INS42 UPD42 UPD42 INS32 UPD42 INS32 UPD42 INS32 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 DEL40 DEL26 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44