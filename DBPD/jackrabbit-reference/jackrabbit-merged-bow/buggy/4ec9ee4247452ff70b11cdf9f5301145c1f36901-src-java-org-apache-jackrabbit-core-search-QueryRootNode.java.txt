- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
+import java.util.List;
- *
- * @author Marcel Reutegger
- * @version $Revision:  $, $Date:  $
-    /** The path sub query */
+    /**
+     * The path sub query
+     */
-    /** The list of nodeType constraints. Might be null */
+    /**
+     * The list of nodeType constraints. Might be null
+     */
-    /** The list of property names to select. Might be null */
+    /**
+     * The list of property names to select. Might be null
+     */
-    /** Sub node that defines constraints. Might be null */
+    /**
+     * Sub node that defines constraints. Might be null
+     */
-    /** The textsearch clause. Might be null */
+    /**
+     * The textsearch clause. Might be null
+     */
-    /** The list of property names to order the result nodes. Might be null */
+    /**
+     * The list of property names to order the result nodes. Might be null
+     */
-	super(null);
+        super(null);
-	return locationNode;
+        return locationNode;
+     *
-	this.locationNode = locationNode;
+        this.locationNode = locationNode;
+     *
-	selectProperties.add(propName);
+        selectProperties.add(propName);
+     *
-	return (String[]) selectProperties.toArray(new String[selectProperties.size()]);
+        return (String[]) selectProperties.toArray(new String[selectProperties.size()]);
+     *
-	return constraintNode;
+        return constraintNode;
+     *
-	return textsearchNode;
+        return textsearchNode;
+     *
-	this.textsearchNode = textsearchNode;
+        this.textsearchNode = textsearchNode;
+     *
-	return orderNode;
+        return orderNode;
+     *
-	this.orderNode = orderNode;
+        this.orderNode = orderNode;
-	StringBuffer sb = new StringBuffer("SELECT *");
-	String comma = "";
-	if (nodeTypes.size() > 0) {
-	    sb.append(" FROM");
-	}
-	for (Iterator it = nodeTypes.iterator(); it.hasNext();) {
-	    NodeTypeQueryNode nodeType = (NodeTypeQueryNode) it.next();
-	    sb.append(comma);
-	    sb.append(" ").append(nodeType.getValue());
-	    comma = ",";
-	}
-	if (locationNode != null) {
-	    sb.append(" ").append(locationNode.toJCRQLString());
-	}
-	if (constraintNode != null) {
-	    sb.append(" WHERE ").append(constraintNode.toJCRQLString());
-	}
-	return sb.toString();
+        StringBuffer sb = new StringBuffer("SELECT *");
+        String comma = "";
+        if (nodeTypes.size() > 0) {
+            sb.append(" FROM");
+        }
+        for (Iterator it = nodeTypes.iterator(); it.hasNext();) {
+            NodeTypeQueryNode nodeType = (NodeTypeQueryNode) it.next();
+            sb.append(comma);
+            sb.append(" ").append(nodeType.getValue());
+            comma = ",";
+        }
+        if (locationNode != null) {
+            sb.append(" ").append(locationNode.toJCRQLString());
+        }
+        if (constraintNode != null) {
+            sb.append(" WHERE ").append(constraintNode.toJCRQLString());
+        }
+        return sb.toString();
-	return "";
+        return "";

MOV26 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL65 DEL66 DEL65