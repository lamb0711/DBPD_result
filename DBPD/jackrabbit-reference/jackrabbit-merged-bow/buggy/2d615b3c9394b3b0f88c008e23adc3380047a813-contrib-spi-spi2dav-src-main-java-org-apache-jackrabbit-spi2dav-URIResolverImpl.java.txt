work in progress

- NodeInfo does not load information about child-node-entries
  -> add separate SPI call
  -> add initial draft ChildInfo interface
  -> ChildNodeEntries are not built upon creation of the NodeState
  -> ItemStateFactory: add method to retrieve ChildNodeEntries

- respect CacheBehaviour while persisting transient modifications

- LockInfo.getNodeId() -> not used so far -> remove

- SessionItemStateManager: getHierarchyManager() only used by SessionImpl -> moved

- Improve TODO comments
- Javadoc


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@482657 13f79535-47bb-0310-9956-ffa450edef68

-        if (propSet.contains(ItemResourceConstants.JCR_UUID)) {
-            String uuid = propSet.get(ItemResourceConstants.JCR_UUID).getValue().toString();
+        String uuid = getUUID(propSet);
+        if (uuid != null) {
-            DavProperty nameProp = propSet.get(ItemResourceConstants.JCR_NAME);
-            if (nameProp != null && nameProp.getValue() != null) {
-                // not root node. Note that 'unespacing' is not required since
-                // the jcr:name property does not provide the value in escaped form.
-                String jcrName = nameProp.getValue().toString();
-                int index = Path.INDEX_UNDEFINED;
-                DavProperty indexProp = propSet.get(ItemResourceConstants.JCR_INDEX);
-                if (indexProp != null && indexProp.getValue() != null) {
-                    index = Integer.parseInt(indexProp.getValue().toString());
-                }
-                try {
-                    QName qName = NameFormat.parse(jcrName, nsResolver);
-                    nodeId = service.getIdFactory().createNodeId(parentId, Path.create(qName, index));
-                } catch (NameException e) {
-                    throw new RepositoryException(e);
-                }
+            QName qName = getQName(propSet);
+            if (qName == QName.ROOT) {
+                nodeId = service.getIdFactory().createNodeId((String) null, Path.ROOT);
-                // TODO: TO_BE_FIXED.... special case: root node
-                return service.getIdFactory().createNodeId((String) null, Path.ROOT);
+                int index = getIndex(propSet);
+                nodeId = service.getIdFactory().createNodeId(parentId, Path.create(qName, index));
-
+    String getUUID(DavPropertySet propSet) {
+        if (propSet.contains(ItemResourceConstants.JCR_UUID)) {
+            return propSet.get(ItemResourceConstants.JCR_UUID).getValue().toString();
+        } else {
+            return null;
+        }
+    }
+
+    QName getQName(DavPropertySet propSet) throws RepositoryException {
+        DavProperty nameProp = propSet.get(ItemResourceConstants.JCR_NAME);
+        if (nameProp != null && nameProp.getValue() != null) {
+            // not root node. Note that 'unespacing' is not required since
+            // the jcr:name property does not provide the value in escaped form.
+            String jcrName = nameProp.getValue().toString();
+            try {
+                return NameFormat.parse(jcrName, nsResolver);
+            } catch (NameException e) {
+                throw new RepositoryException(e);
+            }
+        } else {
+            return QName.ROOT;
+        }
+    }
+
+    int getIndex(DavPropertySet propSet) {
+        int index = Path.INDEX_UNDEFINED;
+        DavProperty indexProp = propSet.get(ItemResourceConstants.JCR_INDEX);
+        if (indexProp != null && indexProp.getValue() != null) {
+            index = Integer.parseInt(indexProp.getValue().toString());
+        }
+        return index;
+    }
+

INS31 INS31 INS31 MOV43 INS42 INS44 INS8 MOV43 INS42 INS44 INS43 MOV8 INS39 INS42 INS44 MOV8 INS60 INS25 INS43 INS42 INS25 INS43 INS42 INS42 INS43 INS42 INS41 INS43 INS59 INS27 MOV8 INS8 INS42 MOV32 INS8 INS8 INS42 INS8 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 MOV25 INS41 INS41 MOV60 MOV54 INS41 INS42 INS42 INS43 INS59 INS27 MOV8 MOV8 MOV32 INS33 INS8 INS40 INS42 INS42 INS32 INS42 INS40 INS21 INS41 INS42 INS42 INS7 INS39 MOV32 INS42 MOV32 UPD42 INS32 INS42 INS42 DEL42 DEL59 DEL60 DEL41