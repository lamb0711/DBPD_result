- add commons-codec dependency to client project.xml
- add concurrent dependency to jcr2spi project.xml
- remove events again from operation methods on RepositoryService.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@472888 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.state.ChangeLog;
-import org.apache.jackrabbit.spi.EventIterator;
+import org.apache.jackrabbit.spi.EventFilter;
+import java.util.Collection;
+import java.util.Collections;
+        private final EventFilter eventFilter;
+            eventFilter = wspManager.createEventFilter(Event.PROPERTY_REMOVED,
+                    lockHoldingState.getQPath(), false, null, null, true);
+
+        /**
+         * @see InternalEventListener#getEventFilters()
+         */
+        public Collection getEventFilters() {
+            return Collections.singletonList(eventFilter);
+        }
+
+        /**
+         * @see InternalEventListener#onEvent(EventBundle)
+         */
-            for (EventIterator it = eventBundle.getEvents(); it.hasNext(); ) {
-                Event ev = it.nextEvent();
-                // if the jcr:lockIsDeep property related to this Lock got removed,
-                // we assume that the lock has been released.
-                // TODO: not correct to compare nodeIds
-                if (ev.getType() == Event.PROPERTY_REMOVED
-                    && QName.JCR_LOCKISDEEP.equals(ev.getQPath().getNameElement().getName())
-                    && lockHoldingState.getNodeId().equals(ev.getParentId())) {
-
-                    // this lock has been release by someone else (and not by
-                    // a call to LockManager#unlock -> clean up and set isLive
-                    // flag to false.
-                    unlocked();
-                    break;
-                }
-            }
-        }
-
-        public void onEvent(EventBundle eventBundle, ChangeLog changeLog) {
-            // nothing to do. not interested in transient modifications
+            // this lock has been release by someone else (and not by
+            // a call to LockManager#unlock -> clean up and set isLive
+            // flag to false.
+            unlocked();

MOV26 MOV26 INS26 UPD40 UPD40 INS40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 MOV83 MOV39 MOV42 MOV44 MOV8 UPD42 MOV42 INS42 INS21 INS65 UPD42 MOV42 INS41 INS65 MOV25 INS7 INS68 INS32 INS68 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS69 INS42 INS42 INS40 INS32 INS9 INS33 INS33 INS9 INS43 INS42 INS42 INS42 DEL10 DEL83 DEL39 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL40 DEL27 DEL40 DEL42 DEL32 DEL32 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL25 DEL8 DEL24 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31