JCR-363: Node.setProperty(String, ...) implementation not according to the specification

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@387211 13f79535-47bb-0310-9956-ffa450edef68

+     * @param exactTypeMatch
+                                               boolean exactTypeMatch,
-        return getOrCreateProperty(qName, type, multiValued, status);
+        return getOrCreateProperty(qName, type, multiValued, exactTypeMatch, status);
+     * @param exactTypeMatch
+                                                            boolean exactTypeMatch,
-        PropertyDefinitionImpl def = getApplicablePropertyDefinition(name, type, multiValued);
+        PropertyDefinitionImpl def = getApplicablePropertyDefinition(
+                name, type, multiValued, exactTypeMatch);
-            PropertyDefinitionImpl def = getApplicablePropertyDefinition(QName.JCR_MIXINTYPES, PropertyType.NAME, true);
+            PropertyDefinitionImpl def = getApplicablePropertyDefinition(
+                    QName.JCR_MIXINTYPES, PropertyType.NAME, true, true);
+     * @param exactTypeMatch
-                                                                     boolean multiValued)
+                                                                     boolean multiValued,
+                                                                     boolean exactTypeMatch)
-        PropDef pd = getEffectiveNodeType().getApplicablePropertyDef(propertyName, type, multiValued);
+        PropDef pd;
+        if (exactTypeMatch || type == PropertyType.UNDEFINED) {
+            pd = getEffectiveNodeType().getApplicablePropertyDef(
+                    propertyName, type, multiValued);
+        } else {
+            try {
+                // try to find a definition with matching type first
+                pd = getEffectiveNodeType().getApplicablePropertyDef(
+                        propertyName, type, multiValued);
+            } catch (ConstraintViolationException cve) {
+                // none found, now try by ignoring the type
+                pd = getEffectiveNodeType().getApplicablePropertyDef(
+                        propertyName, PropertyType.UNDEFINED, multiValued);
+            }
+        }
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, false, true, status);
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, true, true, status);
+        // check state of this instance
+        sanityCheck();
+
+        // check pre-conditions for setting property
+        checkSetProperty();
+
-        return setProperty(name, values, type);
+
+        BitSet status = new BitSet();
+        PropertyImpl prop = getOrCreateProperty(name, type, true, false, status);
+        try {
+            prop.setValue(values);
+        } catch (RepositoryException re) {
+            if (status.get(CREATED)) {
+                // setting value failed, get rid of newly created property
+                removeChildProperty(name);
+            }
+            // rethrow
+            throw re;
+        }
+        return prop;
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, true, true, status);
-            prop.setValue(values);
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+                prop.setValue(ValueHelper.convert(values, type));
+            } else {
+                prop.setValue(values);
+            }
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, false, false, status);
+        // check state of this instance
+        sanityCheck();
+
+        // check pre-conditions for setting property
+        checkSetProperty();
+
-        return setProperty(name, values, type);
+
+        BitSet status = new BitSet();
+        PropertyImpl prop = getOrCreateProperty(name, type, true, false, status);
+        try {
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+                prop.setValue(ValueHelper.convert(values, type));
+            } else {
+                prop.setValue(values);
+            }
+        } catch (RepositoryException re) {
+            if (status.get(CREATED)) {
+                // setting value failed, get rid of newly created property
+                removeChildProperty(name);
+            }
+            // rethrow
+            throw re;
+        }
+        return prop;
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, true, true, status);
-            if (type == PropertyType.UNDEFINED) {
-                prop.setValue(values);
-            } else {
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+            } else {
+                prop.setValue(values);
-        return setProperty(name, values, PropertyType.UNDEFINED);
+        // check state of this instance
+        sanityCheck();
+
+        // check pre-conditions for setting property
+        checkSetProperty();
+
+        BitSet status = new BitSet();
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.STRING, true, false, status);
+        try {
+            prop.setValue(values);
+        } catch (RepositoryException re) {
+            if (status.get(CREATED)) {
+                // setting value failed, get rid of newly created property
+                removeChildProperty(name);
+            }
+            // rethrow
+            throw re;
+        }
+        return prop;
-        PropertyImpl prop = getOrCreateProperty(name, type, true, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, true, true, status);
-            if (type == PropertyType.UNDEFINED) {
-                prop.setValue(values);
-            } else {
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+            } else {
+                prop.setValue(values);
-        /**
-         * if the target property is not of type STRING then a
-         * best-effort conversion is tried
-         */
-        return setProperty(name, value, PropertyType.UNDEFINED);
+        // check state of this instance
+        sanityCheck();
+
+        // check pre-conditions for setting property
+        checkSetProperty();
+
+        BitSet status = new BitSet();
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.STRING, false, false, status);
+        try {
+            prop.setValue(value);
+        } catch (RepositoryException re) {
+            if (status.get(CREATED)) {
+                // setting value failed, get rid of newly created property
+                removeChildProperty(name);
+            }
+            // rethrow
+            throw re;
+        }
+        return prop;
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, false, true, status);
-            if (type == PropertyType.UNDEFINED) {
-                prop.setValue(value);
-            } else {
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+            } else {
+                prop.setValue(value);
-        PropertyImpl prop = getOrCreateProperty(name, type, false, status);
+        PropertyImpl prop = getOrCreateProperty(name, type, false, true, status);
-            if (type == PropertyType.UNDEFINED) {
-                prop.setValue(value);
-            } else {
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+            } else {
+                prop.setValue(value);
+        // check state of this instance
+        sanityCheck();
+
+        // check pre-conditions for setting property
+        checkSetProperty();
+
-        return setProperty(name, value, type);
+
+        BitSet status = new BitSet();
+        PropertyImpl prop = getOrCreateProperty(name, type, false, false, status);
+        try {
+            if (prop.getDefinition().getRequiredType() == PropertyType.UNDEFINED
+                    && type != PropertyType.UNDEFINED) {
+                prop.setValue(ValueHelper.convert(value, type));
+            } else {
+                prop.setValue(value);
+            }
+        } catch (RepositoryException re) {
+            if (status.get(CREATED)) {
+                // setting value failed, get rid of newly created property
+                removeChildProperty(name);
+            }
+            // rethrow
+            throw re;
+        }
+        return prop;
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.BINARY, false, status);
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.BINARY, false, false, status);
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.BOOLEAN, false, status);
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.BOOLEAN, false, false, status);
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.DOUBLE, false, status);
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.DOUBLE, false, false, status);
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.LONG, false, status);
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.LONG, false, false, status);
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.DATE, false, status);
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.DATE, false, false, status);
-        PropertyImpl prop = getOrCreateProperty(name, PropertyType.REFERENCE, false, status);
+        PropertyImpl prop = getOrCreateProperty(
+                name, PropertyType.REFERENCE, false, true, status);

MOV31 MOV31 MOV31 MOV31 INS31 INS31 INS31 INS31 INS44 INS44 INS44 INS8 MOV29 MOV43 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 INS83 MOV43 INS42 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV8 MOV44 MOV29 MOV43 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV43 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV29 MOV83 MOV43 MOV42 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV8 MOV29 INS83 MOV43 INS42 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV8 MOV29 INS83 MOV43 INS42 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 INS8 INS65 INS39 INS42 INS65 INS39 INS42 INS65 INS39 INS42 INS25 INS21 INS21 INS60 INS60 INS54 INS41 INS21 INS21 MOV60 INS60 INS54 MOV41 MOV21 MOV21 INS60 INS60 MOV54 INS41 MOV21 MOV21 MOV60 MOV41 INS60 MOV41 MOV21 MOV21 MOV60 INS60 INS54 MOV41 MOV21 MOV21 MOV60 INS54 MOV41 MOV21 MOV21 MOV60 MOV25 INS60 INS60 INS54 INS41 MOV21 MOV21 INS21 INS21 MOV41 INS21 INS21 MOV60 MOV41 INS21 INS21 INS60 INS41 MOV21 MOV21 MOV60 MOV60 INS54 INS41 INS42 INS42 INS42 INS27 INS8 INS8 INS32 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS32 INS32 INS43 INS59 INS8 INS12 INS43 INS59 MOV43 INS59 INS42 MOV12 INS43 INS59 INS8 MOV43 INS59 MOV8 MOV12 MOV43 MOV8 INS12 INS43 INS59 MOV43 INS59 INS8 INS12 INS42 MOV43 INS32 INS32 INS43 INS32 INS32 INS43 INS32 INS32 INS43 INS59 INS43 INS42 INS8 INS12 INS42 INS42 INS42 MOV27 INS21 INS54 INS42 UPD42 MOV42 INS42 INS42 INS14 INS42 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS25 INS44 INS8 INS42 INS42 INS14 INS42 INS32 MOV8 MOV8 INS42 INS42 INS14 INS25 INS42 INS32 MOV8 MOV8 INS44 INS8 INS42 INS42 INS14 INS42 INS32 INS25 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS21 INS44 INS8 INS42 INS40 INS7 INS8 INS12 INS9 INS9 INS43 INS42 MOV42 INS42 INS9 INS9 INS42 INS32 INS43 INS42 INS25 INS53 INS42 INS42 INS42 INS9 INS9 INS42 INS27 INS8 INS8 INS43 INS42 INS25 INS53 INS9 INS43 UPD42 MOV42 MOV42 MOV42 INS9 INS9 INS42 INS27 INS9 INS27 INS43 INS40 INS9 UPD9 INS9 INS27 INS8 INS8 UPD40 INS9 UPD42 MOV42 MOV42 INS42 INS9 INS9 UPD42 MOV42 INS27 INS9 INS27 INS43 INS42 INS25 INS53 INS43 UPD42 MOV42 MOV42 UPD42 MOV42 INS9 INS9 INS42 INS27 INS8 INS8 INS43 INS42 INS25 INS53 UPD40 INS9 UPD40 INS9 UPD40 INS9 UPD40 INS9 INS43 UPD40 INS9 INS40 INS9 INS32 INS43 INS42 INS25 INS53 INS42 MOV32 INS21 INS44 INS8 INS42 INS42 INS42 MOV42 INS42 INS32 INS8 INS42 INS27 INS27 INS21 INS21 INS42 INS32 INS8 INS42 INS42 INS27 INS27 INS27 INS27 INS42 INS27 INS27 INS21 INS21 INS27 INS27 INS27 INS27 INS42 INS32 INS8 INS42 INS42 INS27 INS27 INS21 INS21 INS42 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS42 INS9 INS7 INS43 INS42 INS21 INS42 INS42 INS42 INS21 INS32 INS40 INS42 INS40 INS32 INS32 INS42 INS42 INS42 INS21 INS32 MOV40 INS42 INS40 INS32 MOV40 INS42 INS40 INS32 INS40 INS42 INS40 INS32 INS32 INS32 MOV40 INS42 INS40 INS32 MOV40 INS42 INS40 INS42 INS42 INS42 INS21 INS32 INS40 INS42 INS40 INS32 INS32 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS21 INS42 INS32 INS42 INS7 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 DEL42 DEL32 DEL41 DEL42 DEL27 DEL42 DEL32 DEL41 DEL42 DEL42 DEL27 DEL40 DEL32 DEL41 DEL42 DEL27 DEL40 DEL32 DEL41 DEL54 DEL8 DEL31 DEL83 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL31 DEL83 DEL42 DEL31 DEL42