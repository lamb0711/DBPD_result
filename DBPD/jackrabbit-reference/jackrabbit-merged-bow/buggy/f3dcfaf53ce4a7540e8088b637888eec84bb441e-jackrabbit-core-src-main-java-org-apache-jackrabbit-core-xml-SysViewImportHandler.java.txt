JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameFactoryImpl;
+import org.apache.jackrabbit.name.NameConstants;
+import javax.jcr.NamespaceException;
-    private QName currentPropName;
+    private Name currentPropName;
-     * @param nsContext
-        QName[] mixinNames = null;
+        Name[] mixinNames = null;
-            mixinNames = (QName[]) state.mixinNames.toArray(
-                    new QName[state.mixinNames.size()]);
+            mixinNames = (Name[]) state.mixinNames.toArray(
+                    new Name[state.mixinNames.size()]);
-        QName name = new QName(namespaceURI, localName);
+        Name name = NameFactoryImpl.getInstance().create(namespaceURI, localName);
-        if (name.equals(QName.SV_NODE)) {
+        if (name.equals(NameConstants.SV_NODE)) {
-            String svName = getAttribute(atts, QName.SV_NAME);
+            String svName = getAttribute(atts, NameConstants.SV_NAME);
-                state.nodeName = NameFormat.parse(svName, nsContext);
+                state.nodeName = resolver.getQName(svName);
+            } catch (NamespaceException e) {
+                throw new SAXException(new InvalidSerializedDataException("illegal node name: " + name, e));
-        } else if (name.equals(QName.SV_PROPERTY)) {
+        } else if (name.equals(NameConstants.SV_PROPERTY)) {
-            String svName = getAttribute(atts, QName.SV_NAME);
+            String svName = getAttribute(atts, NameConstants.SV_NAME);
-                currentPropName = NameFormat.parse(svName, nsContext);
+                currentPropName = resolver.getQName(svName);
+            } catch (NamespaceException e) {
+                throw new SAXException(new InvalidSerializedDataException("illegal property name: " + name, e));
-            String type = getAttribute(atts, QName.SV_TYPE);
+            String type = getAttribute(atts, NameConstants.SV_TYPE);
-        } else if (name.equals(QName.SV_VALUE)) {
+        } else if (name.equals(NameConstants.SV_VALUE)) {
-            currentPropValue = new BufferedStringValue(nsContext);
+            currentPropValue = new BufferedStringValue(resolver);
-        QName name = new QName(namespaceURI, localName);
+        Name name = NameFactoryImpl.getInstance().create(namespaceURI, localName);
-        if (name.equals(QName.SV_NODE)) {
+        if (name.equals(NameConstants.SV_NODE)) {
-        } else if (name.equals(QName.SV_PROPERTY)) {
+        } else if (name.equals(NameConstants.SV_PROPERTY)) {
-            if (currentPropName.equals(QName.JCR_PRIMARYTYPE)) {
+            if (currentPropName.equals(NameConstants.JCR_PRIMARYTYPE)) {
-                    state.nodeTypeName = NameFormat.parse(s, nsContext);
+                    state.nodeTypeName = resolver.getQName(s);
+                } catch (NamespaceException e) {
+                    throw new SAXException(new InvalidSerializedDataException("illegal node type name: " + s, e));
-            } else if (currentPropName.equals(QName.JCR_MIXINTYPES)) {
+            } else if (currentPropName.equals(NameConstants.JCR_MIXINTYPES)) {
-                        QName mixin = NameFormat.parse(s, nsContext);
+                        Name mixin = resolver.getQName(s);
+                    } catch (NamespaceException e) {
+                        throw new SAXException(new InvalidSerializedDataException("illegal mixin type name: " + s, e));
-            } else if (currentPropName.equals(QName.JCR_UUID)) {
+            } else if (currentPropName.equals(NameConstants.JCR_UUID)) {
-        } else if (name.equals(QName.SV_VALUE)) {
+        } else if (name.equals(NameConstants.SV_VALUE)) {
-        QName nodeName;
+        Name nodeName;
-        QName nodeTypeName;
+        Name nodeTypeName;
-    private static String getAttribute(Attributes attributes, QName name) {
+    private static String getAttribute(Attributes attributes, Name name) {

INS26 INS26 UPD40 UPD40 UPD40 INS40 INS40 UPD43 UPD42 UPD43 UPD43 UPD43 UPD5 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 INS32 UPD40 UPD42 INS32 UPD40 UPD42 INS32 INS42 INS42 INS42 INS12 UPD40 INS32 INS42 INS42 INS42 UPD40 INS42 INS42 INS44 INS8 INS12 UPD40 INS42 INS42 UPD40 UPD5 UPD40 INS43 INS42 INS53 INS44 INS8 UPD40 UPD43 INS42 INS14 UPD40 INS43 INS42 INS53 UPD40 INS12 UPD40 UPD42 UPD5 UPD42 UPD42 INS43 INS14 INS42 INS14 UPD42 INS44 INS8 UPD40 UPD43 INS42 INS43 INS27 INS42 UPD42 UPD42 INS43 INS14 INS43 INS42 INS53 UPD42 INS42 INS45 INS42 INS42 INS43 INS27 INS42 INS42 INS14 INS12 INS42 INS45 INS42 UPD42 UPD42 INS43 INS14 INS44 INS8 INS42 INS43 INS27 INS42 UPD43 INS43 INS42 INS53 INS42 INS45 INS42 UPD42 INS42 INS14 UPD42 UPD42 INS43 INS14 INS42 INS43 INS27 INS42 INS42 INS45 INS42 DEL42 DEL65 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL42