JCR-623 - Clustering
+ Don't log changes that occur before cluster node is started
+ Handle missing added nodes in external notifications more gracefully


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@486557 13f79535-47bb-0310-9956-ffa450edef68

+     * Status constant.
+     */
+    private static final int NONE = 0;
+
+    /**
+     * Status constant.
+     */
+    private static final int STARTED = 1;
+
+    /**
+     * Status constant.
+     */
+    private static final int STOPPED = 2;
+
+    /**
-     * Flag indicating whether this cluster node is stopped.
+     * Status flag, one of {@link #NONE}, {@link #STARTED} or {@link #STOPPED}.
-    private boolean stopped;
+    private int status;
-        sync();
+        if (status == NONE) {
+            sync();
-        Thread t = new Thread(this, "ClusterNode-" + clusterNodeId);
-        t.setDaemon(true);
-        t.start();
+            Thread t = new Thread(this, "ClusterNode-" + clusterNodeId);
+            t.setDaemon(true);
+            t.start();
+
+            status = STARTED;
+        }
-                if (stopped) {
+                if (status == STOPPED) {
-        stopped = true;
+        status = STOPPED;
+        if (status != STARTED) {
+            log.info("not started: lock operation ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: unlock operation ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: update create ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: update prepare ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: update commit ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: update cancel ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: namespace operation ignored.");
+            return;
+        }
+        if (status != STARTED) {
+            log.info("not started: nodetype operation ignored.");
+            return;
+        }

INS23 INS23 INS23 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS83 INS39 INS59 UPD39 INS8 INS8 INS65 INS42 INS34 INS65 INS42 INS34 INS65 INS42 INS34 UPD42 INS25 INS25 INS25 INS25 INS25 INS25 INS25 MOV21 INS25 INS25 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS65 UPD66 INS27 MOV8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS67 INS67 INS67 INS42 INS42 INS21 UPD42 INS42 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS42 INS42 INS42 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS27 INS42 INS42 DEL42 DEL9 DEL8