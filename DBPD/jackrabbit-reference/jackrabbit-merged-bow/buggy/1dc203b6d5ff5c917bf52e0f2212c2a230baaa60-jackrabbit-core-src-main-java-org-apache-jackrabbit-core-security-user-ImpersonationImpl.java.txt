minor improvement: 
- replace test for AdminPrincipal
- remove SystemPrincipal usage

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1076596 13f79535-47bb-0310-9956-ffa450edef68

+import java.security.acl.Group;
-import org.apache.jackrabbit.core.security.SystemPrincipal;
-import org.apache.jackrabbit.core.security.principal.AdminPrincipal;
-        if (principal instanceof AdminPrincipal || principal instanceof SystemPrincipal) {
-            log.warn("Admin and System principal are already granted impersonation.");
-            return false;
-        }
-
-            log.warn("Cannot grant impersonation to a principal that is a Group " +
-                      "or an unknown Authorizable.");
+            log.warn("Cannot grant impersonation to a principal that is a Group or an unknown Authorizable.");
+            return false;
+        }
+
+        // make sure the given principal doesn't refer to the admin user.
+        if (user.userManager.isAdminId(auth.getID())) {
+            log.warn("Admin principal is already granted impersonation.");
-        if (principal instanceof AdminPrincipal || principal instanceof SystemPrincipal) {
-            log.warn("Admin and System principal are always granted impersonation.");
-            return false;
-        }
-
-        //shortcut admin/system -> always allowed
-        if (!subject.getPrincipals(AdminPrincipal.class).isEmpty()
-                || !subject.getPrincipals(SystemPrincipal.class).isEmpty()) {
-            return true;
-        }
-        boolean allows = false;
-        try {
-            Set<String> impersonators = getImpersonatorNames();
-            allows = impersonators.removeAll(principalNames);
-        } catch (RepositoryException e) {
-            // should never get here
-            log.debug(e.getMessage());
+        boolean allows;
+        Set<String> impersonators = getImpersonatorNames();
+        allows = impersonators.removeAll(principalNames);
+
+        if (!allows) {
+            // check if subject belongs to administrator user
+            for (Principal p : subject.getPrincipals()) {
+                if (p instanceof Group) {
+                    continue;
+                }
+                Authorizable a = userManager.getAuthorizable(p);
+                if (user.equals(a)) {
+                    allows = false;
+                    break;
+                } else if (a != null && userManager.isAdminId(a.getID())) {
+                    allows = true;
+                    break;
+                }
+            }

MOV26 UPD40 MOV25 INS60 MOV60 MOV21 INS25 MOV27 INS32 INS39 INS59 INS38 INS8 INS40 INS42 INS32 INS42 INS42 INS70 INS42 INS42 INS44 INS32 INS8 UPD45 INS45 INS43 INS42 MOV42 MOV42 INS25 MOV60 INS25 UPD42 MOV42 INS62 MOV8 INS43 INS32 INS8 INS25 INS42 INS43 INS18 INS42 UPD42 INS32 INS42 INS42 INS42 INS21 INS10 INS27 INS8 UPD42 MOV42 INS42 INS42 INS42 INS7 INS27 INS32 INS21 INS10 INS42 INS9 INS42 INS33 UPD42 MOV42 UPD42 MOV42 MOV32 INS7 UPD42 UPD42 INS42 INS9 DEL40 DEL26 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL27 DEL45 DEL45 DEL27 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL32 DEL38 DEL43 DEL57 DEL32 DEL42 DEL32 DEL38 DEL27 DEL25 DEL9 DEL41 DEL39 DEL9 DEL8 DEL42 DEL43 DEL42 DEL44 DEL32 DEL21 DEL8 DEL12 DEL54