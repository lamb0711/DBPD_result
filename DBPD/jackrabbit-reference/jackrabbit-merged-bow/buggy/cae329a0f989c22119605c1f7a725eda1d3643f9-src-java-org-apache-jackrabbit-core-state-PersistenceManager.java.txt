reworked transaction support, contributed by dominique

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@151380 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.ItemId;
-import org.apache.jackrabbit.core.QName;
-
-import java.util.Iterator;
+import org.apache.jackrabbit.core.PropertyId;
-     * @param uuid          the UUID of the this node
-     * @param nodeTypeName  node type of this node
-     * @param parentUUID    the UUID of the parent node
+     * @param id node id
-    public NodeState createNew(String uuid, QName nodeTypeName,
-                               String parentUUID);
+    public NodeState createNew(NodeId id);
-     * @param name          name of the property
-     * @param parentUUID    the uuid of the parent node
+     * @param id property id
-    public PropertyState createNew(QName name, String parentUUID);
+    public PropertyState createNew(PropertyId id);
-     * @param uuid uuid of the node to load
+     * @param id node id
-    public NodeState load(String uuid)
+    public NodeState load(NodeId id)
-     * @param name name of the property
-     * @param parentUUID the uuid of the parent node
+     * @param id property id
-    public PropertyState load(QName name, String parentUUID)
+    public PropertyState load(PropertyId id)
-     * @param targetId node target id
-     * @return loaded references object
+     * @param id node target id
-    public NodeReferences load(NodeId targetId)
+    public NodeReferences load(NodeReferencesId id)
-     * Determines if there's <code>ItemState</code> data for the given item.
+     * Determines if there's <code>NodeState</code> data
+     * for the given item.
-    public boolean exists(ItemId id) throws ItemStateException;
+    public boolean exists(NodeId id) throws ItemStateException;
+
+    /**
+     * Determines if there's <code>PropertyState</code> data
+     * for the given item.
+     * @param id
+     * @return
+     * @throws ItemStateException
+     */
+    public boolean exists(PropertyId id) throws ItemStateException;
-    public boolean referencesExist(NodeId targetId) throws ItemStateException;
+    public boolean exists(NodeReferencesId targetId) throws ItemStateException;
-     * Save all modified states and node references, atomically.
-     * @param states states that have been modified
-     * @param refsIterator refs to store
+     * Save all states and node references, atomically.
+     * @param changeLog change log containing states that were changed
-    public void store(Iterator states, Iterator refsIterator)
-            throws ItemStateException;
-
+    public void store(ChangeLog changeLog) throws ItemStateException;

MOV26 UPD40 INS31 INS31 MOV29 MOV83 MOV43 MOV42 MOV44 INS44 INS29 INS83 INS39 INS42 MOV44 INS43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 INS43 INS42 INS65 INS65 INS65 INS65 UPD42 UPD42 MOV42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD66 UPD42 UPD42 UPD66 UPD42 UPD42 UPD66 UPD42 UPD42 UPD66 UPD42 UPD42 INS42 INS66 INS66 INS42 INS42 UPD66 INS66 UPD42 UPD42 UPD66 UPD42 UPD66 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL31 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44