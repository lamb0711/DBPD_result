Initial checkin of QueryManager with support for JCRQL (search implementation is not complete, some features are missing: searching for distinct same name sibling, sorting not yet implemented, indexing contains potential for optimizing)

Changed observation to support SynchronousEventListeners. The search registers itself as synchronous event listener. Also changed access checking on events sent out, because checking access on removed nodes need to be performed before they actually get removed.

Extended config.xml, which allows now to specify an index location for the QueryManager.

Added jar files needed for search.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47399 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.observation.ObservationManagerFactory;
-	EventStateCollection events = new EventStateCollection(session);
+	WorkspaceImpl wsp = (WorkspaceImpl) session.getWorkspace();
+	ObservationManagerFactory obsFactory = rep.getObservationManagerFactory(wsp.getName());
+	EventStateCollection events = obsFactory.createEventStateCollection(session,
+		session.getItemStateManager(), session.getHierarchyManager());
-	WorkspaceImpl wsp = (WorkspaceImpl) session.getWorkspace();
+		    events.createEventStates(transientState);
+	    // prepare for event dispatch
+	    // this will check access rights on items that will be removed
+	    events.prepare();
+
-	rep.getObservationManagerFactory(wsp.getName()).dispatchEvents(events);
+	events.dispatch();

INS26 INS40 MOV60 INS60 INS60 UPD43 MOV43 INS59 MOV43 MOV59 UPD42 INS42 MOV32 INS32 INS21 UPD42 UPD42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS32 INS42 INS42 INS42 DEL42 DEL14 DEL60