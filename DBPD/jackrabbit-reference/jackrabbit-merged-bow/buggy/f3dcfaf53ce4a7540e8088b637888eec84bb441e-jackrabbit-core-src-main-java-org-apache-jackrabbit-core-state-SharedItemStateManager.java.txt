JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-    private NodeState createInstance(NodeId id, QName nodeTypeName,
+    private NodeState createInstance(NodeId id, Name nodeTypeName,
-        NodeState rootState = createInstance(rootNodeId, QName.REP_ROOT, null);
-        NodeState jcrSystemState = createInstance(RepositoryImpl.SYSTEM_ROOT_NODE_ID, QName.REP_SYSTEM, rootNodeId);
+        NodeState rootState = createInstance(rootNodeId, NameConstants.REP_ROOT, null);
+        NodeState jcrSystemState = createInstance(RepositoryImpl.SYSTEM_ROOT_NODE_ID, NameConstants.REP_SYSTEM, rootNodeId);
-            EffectiveNodeType ent = ntReg.getEffectiveNodeType(QName.REP_ROOT);
-            propDef = ent.getApplicablePropertyDef(QName.JCR_PRIMARYTYPE,
+            EffectiveNodeType ent = ntReg.getEffectiveNodeType(NameConstants.REP_ROOT);
+            propDef = ent.getApplicablePropertyDef(NameConstants.JCR_PRIMARYTYPE,
-            jcrSystemDefId = ent.getApplicableChildNodeDef(QName.JCR_SYSTEM, QName.REP_SYSTEM, ntReg).getId();
+            jcrSystemDefId = ent.getApplicableChildNodeDef(NameConstants.JCR_SYSTEM, NameConstants.REP_SYSTEM, ntReg).getId();
-        prop.setValues(new InternalValue[]{InternalValue.create(QName.REP_ROOT)});
+        prop.setValues(new InternalValue[]{InternalValue.create(NameConstants.REP_ROOT)});
-        primaryTypeProp.setValues(new InternalValue[]{InternalValue.create(QName.REP_SYSTEM)});
+        primaryTypeProp.setValues(new InternalValue[]{InternalValue.create(NameConstants.REP_SYSTEM)});
-        rootState.addChildNodeEntry(QName.JCR_SYSTEM, RepositoryImpl.SYSTEM_ROOT_NODE_ID);
+        rootState.addChildNodeEntry(NameConstants.JCR_SYSTEM, RepositoryImpl.SYSTEM_ROOT_NODE_ID);
-        jcrSystemState.addChildNodeEntry(QName.JCR_VERSIONSTORAGE, RepositoryImpl.VERSION_STORAGE_NODE_ID);
+        jcrSystemState.addChildNodeEntry(NameConstants.JCR_VERSIONSTORAGE, RepositoryImpl.VERSION_STORAGE_NODE_ID);
-        jcrSystemState.addChildNodeEntry(QName.JCR_NODETYPES, RepositoryImpl.NODETYPES_NODE_ID);
+        jcrSystemState.addChildNodeEntry(NameConstants.JCR_NODETYPES, RepositoryImpl.NODETYPES_NODE_ID);
-    private PropertyState createInstance(QName propName, NodeId parentId) {
+    private PropertyState createInstance(Name propName, NodeId parentId) {
-        QName primary = state.getNodeTypeName();
+        Name primary = state.getNodeTypeName();
-        if (mixins.contains(QName.MIX_REFERENCEABLE)
-                || mixins.contains(QName.MIX_VERSIONABLE)
-                || primary.equals(QName.NT_RESOURCE)) {
+        if (mixins.contains(NameConstants.MIX_REFERENCEABLE)
+                || mixins.contains(NameConstants.MIX_VERSIONABLE)
+                || primary.equals(NameConstants.NT_RESOURCE)) {
-        QName[] types = new QName[mixins.size() + 1];
+        Name[] types = new Name[mixins.size() + 1];
-            return ntReg.getEffectiveNodeType(types).includesNodeType(QName.MIX_REFERENCEABLE);
+            return ntReg.getEffectiveNodeType(types).includesNodeType(NameConstants.MIX_REFERENCEABLE);

INS26 UPD40 INS40 UPD43 UPD43 UPD42 UPD42 UPD43 UPD5 UPD40 UPD40 UPD40 UPD42 UPD43 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD5 UPD43 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD40 UPD40