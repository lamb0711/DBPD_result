work in progress

JCR2SPI
--------------------------------------------------------------

- reorder ItemState/NodeState/PropertyState in order to group
  methods by state types (overlayed workspace state vs. session/transient states)
- add utility methods that allow to determine and validate the
  type of ItemState.
- move childitementry classes to separate package and force usage
  of interface methods
- add checks for state type to ItemManager implementation
- add checks for state type to LockManager
- fix Node.getMixinTypes()
- rename ItemState.pull to 'reset'. remove todo asking for a careful
  merging of wsp-State and introduce a new method 'merge'.

SPI
--------------------------------------------------------------------

- rename login as suggested by julian
- add method dispose(SessionInfo) 
- rename ItemId.getRelativePath to getPath

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@454423 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.jcr2spi.state;
+package org.apache.jackrabbit.jcr2spi.state.entry;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateFactory;
+import org.apache.jackrabbit.jcr2spi.state.NodeState;
+import org.apache.jackrabbit.jcr2spi.state.PropertyState;
+import org.apache.jackrabbit.jcr2spi.state.NoSuchItemStateException;
+import org.apache.jackrabbit.jcr2spi.state.ItemState;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateException;
-class PropertyReference extends ChildItemReference implements ChildPropertyEntry {
+public class PropertyReference extends ChildItemReference implements ChildPropertyEntry {
+     * Creates a new <code>ChildPropertyEntry</code>.
+     *
+     * @param parent
+     * @param name
+     * @param isf
+     * @param idFactory
+     * @return new <code>ChildPropertyEntry</code>
+     */
+    public static ChildPropertyEntry create(NodeState parent, QName name, ItemStateFactory isf, IdFactory idFactory) {
+        return new PropertyReference(parent, name, isf, idFactory);
+    }
+
+    /**
+     * Creates a new <code>ChildPropertyEntry</code> for an property state that
+     * already exists.
+     *
+     * @param propState
+     * @param isf
+     * @param idFactory
+     * @return new <code>ChildPropertyEntry</code>
+     */
+    public static ChildPropertyEntry create(PropertyState propState, ItemStateFactory isf, IdFactory idFactory) {
+        return new PropertyReference(propState, isf, idFactory);
+    }
+
+    /**
-    public PropertyReference(NodeState parent, QName name, ItemStateFactory isf, IdFactory idFactory) {
+    private PropertyReference(NodeState parent, QName name, ItemStateFactory isf, IdFactory idFactory) {
-    public PropertyReference(PropertyState propState, ItemStateFactory isf, IdFactory idFactory) {
+    private PropertyReference(PropertyState propState, ItemStateFactory isf, IdFactory idFactory) {

INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS83 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 UPD83 UPD83 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS66 INS42 INS42 INS42 INS42 INS66 INS42 INS42 INS42 INS42 INS14 INS66 INS66 INS42 INS42 INS42 INS66 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42