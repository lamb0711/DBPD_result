[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.NodeId;
+import org.apache.jackrabbit.core.ItemId;
-    protected QName name;
-    protected InternalValue[] values;
-    protected int type;
-    protected boolean multiValued;
-
-    protected PropDefId defId;
+    /**
+     * the id of this property state
+     */
+    private PropertyId id;
-     * Create a new <code>PropertyState</code>
+     * the internal values
+     */
+    private InternalValue[] values;
+
+    /**
+     * the type of this property state
+     */
+    private int type;
+
+    /**
+     * flag indicating if this is a multivalue property
+     */
+    private boolean multiValued;
+
+    /**
+     * the property definition id
+     */
+    private PropDefId defId;
+
+    /**
+     * Constructs a new property state that is initially connected to an
+     * overlayed state.
-        super(initialStatus, isTransient);
-
-        connect(overlayedState);
+        super(overlayedState, initialStatus, isTransient);
-     * @param name          name of the property
-     * @param parentUUID    the uuid of the parent node
+     * @param id            id of the property
-    public PropertyState(QName name, String parentUUID, int initialStatus,
-                         boolean isTransient) {
-        super(parentUUID, new PropertyId(parentUUID, name), initialStatus, isTransient);
-        this.name = name;
+    public PropertyState(PropertyId id, int initialStatus, boolean isTransient) {
+        super(initialStatus, isTransient);
+        this.id = id;
-            super.copy(state);
-
-            name = propState.getName();
-            type = propState.getType();
-            defId = propState.getDefinitionId();
-            values = propState.getValues();
-            multiValued = propState.isMultiValued();
+            id = propState.id;
+            type = propState.type;
+            defId = propState.defId;
+            values = propState.values;
+            multiValued = propState.multiValued;
+     * {@inheritDoc}
+     */
+    public ItemId getId() {
+        return id;
+    }
+
+    /**
+     * Returns the id of this property state.
+     * @return the id of this property state.
+     */
+    public PropertyId getPropertyId() {
+        return id;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public NodeId getParentId() {
+        return id.getParentId();
+    }
+
+    /**
-        return name;
+        return id.getName();
-        out.writeUTF(name.toString());
+        out.writeUTF(getName().toString());
-        name = QName.valueOf(in.readUTF());
+        QName name = QName.valueOf(in.readUTF());

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS29 UPD83 UPD43 INS29 UPD83 INS29 UPD83 INS29 UPD83 INS29 UPD83 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS65 UPD42 UPD42 INS65 INS65 INS65 INS65 INS46 MOV43 UPD42 MOV46 INS65 INS42 INS41 INS65 INS65 INS42 INS41 INS65 INS42 INS41 INS60 INS66 INS66 INS66 INS66 INS66 UPD66 INS66 INS42 INS42 INS42 UPD42 UPD66 INS65 INS42 INS66 INS66 INS42 INS65 INS32 INS32 MOV43 INS59 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 INS32 UPD42 INS40 INS40 INS40 INS40 INS40 UPD42 MOV42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL14 DEL42 DEL42 DEL46 DEL42 DEL42 DEL48 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL7 DEL21