- Implemented a lucene Directory which works on top of the jackrabbit FileSystem abstraction.
- Changed location of lucene locks to index directory, instead of user temp dir.
- Changed order of module shutdown in RepositryImpl. shutdown sequence is now: observation, search, filesystem.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@53863 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.fs.FileSystemResource;
+import org.apache.jackrabbit.core.fs.FileSystemException;
-import java.io.*;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.BufferedOutputStream;
-    private final File storage;
+    private final FileSystemResource storage;
-    public NamespaceMappings(File file) throws IOException {
+    public NamespaceMappings(FileSystemResource file) throws IOException {
-        if (storage.exists()) {
-            InputStream in = new FileInputStream(storage);
-            try {
-                Properties props = new Properties();
-                log.debug("loading namespace mappings...");
-                props.load(in);
+        try {
+            if (storage.exists()) {
+                InputStream in = storage.getInputStream();
+                try {
+                    Properties props = new Properties();
+                    log.debug("loading namespace mappings...");
+                    props.load(in);
-                // read mappings from properties
-                Iterator iter = props.keySet().iterator();
-                while (iter.hasNext()) {
-                    String prefix = (String) iter.next();
-                    String uri = props.getProperty(prefix);
-                    log.debug(prefix + " -> " + uri);
-                    prefixToURI.put(prefix, uri);
-                    uriToPrefix.put(uri, prefix);
+                    // read mappings from properties
+                    Iterator iter = props.keySet().iterator();
+                    while (iter.hasNext()) {
+                        String prefix = (String) iter.next();
+                        String uri = props.getProperty(prefix);
+                        log.debug(prefix + " -> " + uri);
+                        prefixToURI.put(prefix, uri);
+                        uriToPrefix.put(uri, prefix);
+                    }
+                    prefixCount = props.size();
+                    log.debug("namespace mappings loaded.");
+                } finally {
+                    in.close();
-                prefixCount = props.size();
-                log.debug("namespace mappings loaded.");
-            } finally {
-                in.close();
+        } catch (FileSystemException e) {
+            throw new IOException(e.getMessage());
-        storage.getParentFile().mkdirs();
-        OutputStream out = new BufferedOutputStream(new FileOutputStream(storage));
-
+        OutputStream out = null;
+            storage.makeParentDirs();
+            out = new BufferedOutputStream(storage.getOutputStream());
+        } catch (FileSystemException e) {
+            throw new IOException(e.getMessage());

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 INS40 UPD43 INS8 UPD42 UPD43 INS54 UPD42 MOV8 INS12 INS12 INS44 INS8 INS33 INS21 INS21 INS44 INS8 INS43 INS42 INS53 INS32 INS7 INS43 INS42 INS53 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS14 INS43 INS32 MOV43 INS32 INS43 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL14