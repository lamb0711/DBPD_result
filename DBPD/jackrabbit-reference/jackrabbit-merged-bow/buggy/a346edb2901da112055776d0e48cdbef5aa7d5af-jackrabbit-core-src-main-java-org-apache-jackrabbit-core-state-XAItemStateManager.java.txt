JCR-1484: Node.getReferences() does not properly reflect saved but not yet committed changes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638363 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.collections.iterators.FilterIterator;
+import org.apache.commons.collections.Predicate;
-        ChangeLog changeLog = getChangeLog();
-        if (changeLog != null) {
-            NodeReferences refs = changeLog.get(id);
-            if (refs != null) {
-                return refs;
-            }
-        }
-        return super.getNodeReferences(id);
+        return getReferences(id);
-        ChangeLog changeLog = getChangeLog();
-        if (changeLog != null) {
-            if (changeLog.get(id) != null) {
-                return true;
-            }
+        try {
+            NodeReferences refs = getReferences(id);
+            return refs.getReferences().size() > 0;
+        } catch (ItemStateException e) {
+            return false;
-        return super.hasNodeReferences(id);
+     * Returns the node references for the given <code>id</code>.
+     *
+     * @param id the node references id.
+     * @return the node references for the given <code>id</code>.
+     * @throws ItemStateException if an error occurs while reading from the
+     *                            underlying shared item state manager.
+     */
+    private NodeReferences getReferences(NodeReferencesId id)
+            throws ItemStateException {
+        NodeReferences refs;
+        try {
+            refs = super.getNodeReferences(id);
+        } catch (NoSuchItemStateException e) {
+            refs = new NodeReferences(id);
+        }
+        // apply changes from change log
+        ChangeLog changes = getChangeLog();
+        if (changes != null) {
+            UUID uuid = id.getTargetId().getUUID();
+            // check removed reference properties
+            for (Iterator it = filterReferenceProperties(changes.deletedStates());
+                 it.hasNext(); ) {
+                PropertyState prop = (PropertyState) it.next();
+                InternalValue[] values = prop.getValues();
+                for (int i = 0; i < values.length; i++) {
+                    if (values[i].getUUID().equals(uuid)) {
+                        refs.removeReference(prop.getPropertyId());
+                        break;
+                    }
+                }
+            }
+            // check added reference properties
+            for (Iterator it = filterReferenceProperties(changes.addedStates());
+                 it.hasNext(); ) {
+                PropertyState prop = (PropertyState) it.next();
+                InternalValue[] values = prop.getValues();
+                for (int i = 0; i < values.length; i++) {
+                    if (values[i].getUUID().equals(uuid)) {
+                        refs.addReference(prop.getPropertyId());
+                        break;
+                    }
+                }
+            }
+            // check modified properties
+            for (Iterator it = changes.modifiedStates(); it.hasNext(); ) {
+                ItemState state = (ItemState) it.next();
+                if (state.isNode()) {
+                    continue;
+                }
+                try {
+                    PropertyState old = (PropertyState) sharedStateMgr.getItemState(state.getId());
+                    if (old.getType() == PropertyType.REFERENCE) {
+                        // remove if one of the old values references the node
+                        InternalValue[] values = old.getValues();
+                        for (int i = 0; i < values.length; i++) {
+                            if (values[i].getUUID().equals(uuid)) {
+                                refs.removeReference(old.getPropertyId());
+                                break;
+                            }
+                        }
+                    }
+                } catch (NoSuchItemStateException e) {
+                    // property is stale
+                }
+
+                PropertyState prop = (PropertyState) state;
+                if (prop.getType() == PropertyType.REFERENCE) {
+                    // add if modified value references node
+                    InternalValue[] values = prop.getValues();
+                    for (int i = 0; i < values.length; i++) {
+                        if (values[i].getUUID().equals(uuid)) {
+                            refs.addReference(prop.getPropertyId());
+                            break;
+                        }
+                    }
+                }
+            }
+        }
+        return refs;
+    }
+
+    /**
+     * Takes an iterator over {@link ItemState}s and returns a new iterator that
+     * filters out all but REFERENCE {@link PropertyState}s.
+     *
+     * @param itemStates item state source iterator.
+     * @return iterator over reference property states.
+     */
+    private Iterator filterReferenceProperties(Iterator itemStates) {
+        return new FilterIterator(itemStates, new Predicate() {
+            public boolean evaluate(Object object) {
+                ItemState state = (ItemState) object;
+                if (!state.isNode()) {
+                    PropertyState prop = (PropertyState) state;
+                    return prop.getType() == PropertyType.REFERENCE;
+                }
+                return false;
+            }
+        });
+    }
+
+    /**

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS8 MOV29 MOV83 MOV39 MOV42 MOV44 INS8 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS8 MOV25 INS41 MOV25 INS54 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 INS54 MOV60 MOV25 MOV41 INS65 INS65 INS65 INS42 INS43 INS42 MOV41 INS32 INS8 INS12 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS8 INS12 INS8 INS66 INS65 INS66 INS66 INS65 INS66 INS42 INS66 INS66 INS42 INS14 UPD42 MOV42 MOV42 INS60 INS41 INS44 INS8 INS42 INS42 INS21 INS44 INS8 UPD42 UPD42 INS60 INS24 INS24 INS24 INS42 INS42 INS43 INS42 INS14 MOV43 INS59 INS27 INS43 INS42 INS41 INS7 INS43 INS42 INS21 INS43 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS58 INS32 INS8 INS42 INS43 INS1 INS42 INS32 INS32 INS34 INS42 INS9 INS42 MOV48 INS42 INS7 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS60 INS24 INS43 INS59 INS42 INS42 INS60 INS60 INS24 INS43 INS59 INS42 INS42 INS60 INS25 INS54 INS60 INS25 INS42 INS31 INS42 INS42 INS32 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS32 INS43 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS32 INS43 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS32 INS43 INS59 INS32 INS8 INS8 INS12 INS43 INS59 INS27 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS11 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 MOV25 INS42 INS32 INS42 INS42 INS11 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS18 INS60 INS25 INS44 INS8 INS42 INS42 INS11 INS32 INS40 INS60 INS24 INS43 INS42 INS60 INS25 INS41 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS34 INS32 INS8 INS43 INS32 INS43 INS59 INS27 INS8 INS43 INS42 INS43 INS42 INS42 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS43 INS59 INS38 INS8 INS9 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 INS21 INS10 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS10 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS40 INS60 INS24 INS42 INS42 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS11 INS32 INS60 INS41 INS2 UPD42 MOV42 INS32 INS2 INS42 INS32 INS43 INS32 INS42 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS34 INS32 INS8 INS43 INS42 INS42 INS42 INS43 INS59 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS32 INS42 INS42 INS21 INS10 INS42 INS42 INS42 INS11 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS32 INS8 INS2 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS10 INS42 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL25 DEL41 DEL8 DEL8 DEL31 DEL42 DEL32 DEL33 DEL27 DEL9 DEL41 DEL8 DEL42 DEL42 DEL48