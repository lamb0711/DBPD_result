JCR-2865: a dead lock in DefaultISMLocking

Use an older 2.1 version of the DefaultISMLocking as a separate VersioningLock class in the version manager.

This decouples the read-write lock functionality in the version manager from the more performance-critical ISM locking and fixes the accidental deadlocks caused by the ISM locking optimizations.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1065599 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.state.DefaultISMLocking;
-import org.apache.jackrabbit.core.state.ISMLocking.ReadLock;
-import org.apache.jackrabbit.core.state.ISMLocking.WriteLock;
-    private final DefaultISMLocking rwLock = new DefaultISMLocking();
+    private final VersioningLock rwLock = new VersioningLock();
-        ReadLock lock = acquireReadLock();
+        VersioningLock.ReadLock lock = acquireReadLock();
-    protected WriteLock acquireWriteLock() {
+    protected VersioningLock.WriteLock acquireWriteLock() {
-                return rwLock.acquireWriteLock(null);
+                return rwLock.acquireWriteLock();
-    protected ReadLock acquireReadLock() {
+    protected VersioningLock.ReadLock acquireReadLock() {
-                return rwLock.acquireReadLock(null);
+                return rwLock.acquireReadLock();
-        private final WriteLock lock;
+        private final VersioningLock.WriteLock lock;
-        public WriteOperation(WriteLock lock) {
+        public WriteOperation(VersioningLock.WriteLock lock) {
-        WriteLock lock = acquireWriteLock();
+        VersioningLock.WriteLock lock = acquireWriteLock();
-        ReadLock lock = acquireReadLock();
+        VersioningLock.ReadLock lock = acquireReadLock();

UPD43 UPD43 UPD43 UPD42 INS40 INS40 UPD43 UPD43 UPD43 INS40 UPD43 UPD43 UPD43 UPD42 INS40 INS40 INS40 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL33 DEL42 DEL33 DEL42 DEL42 DEL42 DEL42