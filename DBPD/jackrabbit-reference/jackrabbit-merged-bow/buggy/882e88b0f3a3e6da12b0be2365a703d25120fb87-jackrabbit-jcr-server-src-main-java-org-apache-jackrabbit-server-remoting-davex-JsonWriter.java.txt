JCR-3551: DavEx cannot handle Double.NaN properties. The DavEx server now sends NaN and Infinity as type-hinted strings and spi2devex sends them as parts.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1467363 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.io.Writer;
+import java.util.Collection;
-import java.io.Writer;
-import java.io.IOException;
-import java.util.Collection;
-            if (requiresTypeInfo(type) || (isMultiple && p.getValues().length == 0)) {
+            if (requiresTypeInfo(p) || (isMultiple && p.getValues().length == 0)) {
-                   reflects the type. 
+                   reflects the type.
-    private static boolean requiresTypeInfo(int type) {
-        switch (type) {
+    private static boolean requiresTypeInfo(Property p) throws RepositoryException {
+        switch (p.getType()) {
+            case PropertyType.DOUBLE:
+                /* Double.NaN, Double.POSITIVE_INFINITY and Double.NEGATIVE_INFINITY
+                   are not defined in JSON, so they have to be serialized as type-hinted strings.
+                 */
+                if (p.isMultiple()) {
+                    for (Value val : p.getValues()) {
+                        double doubleValue = val.getDouble();
+                        if (Double.isInfinite(doubleValue) || Double.isNaN(doubleValue)) {
+                            return true;
+                        }
+                    }
+                    return false;
+                } else {
+                    double doubleValue = p.getDouble();
+                    return Double.isInfinite(doubleValue) || Double.isNaN(doubleValue);
+                }
-            case PropertyType.DOUBLE:
+            case PropertyType.DOUBLE:
+                double d = v.getDouble();
+                String str = v.getString();
+                if (Double.isNaN(d) || Double.isInfinite(d)) {
+                    str = JsonUtil.getJsonString(str);
+                }
+                writer.write(str);
+                break;

MOV26 MOV26 MOV26 INS43 INS43 INS42 INS42 MOV49 INS42 INS32 INS25 INS49 INS60 INS60 INS25 INS21 INS10 INS42 INS42 INS40 INS32 INS8 INS8 INS39 INS59 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS70 INS41 INS60 INS41 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS21 INS42 INS42 INS42 INS44 INS32 INS8 INS9 INS39 INS59 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 UPD42 INS43 INS42 INS42 INS42 INS60 INS25 INS42 INS32 INS32 INS32 INS42 INS32 INS42 INS39 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 DEL39 DEL42 DEL42