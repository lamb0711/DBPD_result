JCR-688: Apply the new Resolver interfaces in jackrabbit-core.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@496140 13f79535-47bb-0310-9956-ffa450edef68

-            QName name = NameFormat.parse(versionName, session.getNamespaceResolver());
+            QName name = session.getQName(versionName);
-            QName qLabel = NameFormat.parse(label, session.getNamespaceResolver());
-            InternalVersion v = getInternalVersionHistory().getVersionByLabel(qLabel);
+            QName qLabel = session.getQName(label);
+            InternalVersion v =
+                getInternalVersionHistory().getVersionByLabel(qLabel);
-            session.getVersionManager().setVersionLabel(this,
-                    NameFormat.parse(versionName, session.getNamespaceResolver()),
-                    NameFormat.parse(label, session.getNamespaceResolver()),
-                    move);
+            session.getVersionManager().setVersionLabel(
+                    this, session.getQName(versionName),
+                    session.getQName(label), move);
-            Version existing = session.getVersionManager().setVersionLabel(this,
-                    null,
-                    NameFormat.parse(label, session.getNamespaceResolver()),
-                    true);
+            Version existing = session.getVersionManager().setVersionLabel(
+                    this, null, session.getQName(label), true);
-        try {
-            QName[] labels = getInternalVersionHistory().getVersionLabels();
-            String[] ret = new String[labels.length];
-            for (int i = 0; i < labels.length; i++) {
-                ret[i] = NameFormat.format(labels[i], session.getNamespaceResolver());
-            }
-            return ret;
-        } catch (NoPrefixDeclaredException e) {
-            throw new IllegalArgumentException("Unable to resolve label name: " + e.toString());
+        QName[] labels = getInternalVersionHistory().getVersionLabels();
+        String[] ret = new String[labels.length];
+        for (int i = 0; i < labels.length; i++) {
+            ret[i] = session.getJCRName(labels[i]);
+        return ret;
-        try {
-            QName[] labels = ((VersionImpl) version).getInternalVersion().getLabels();
-            String[] ret = new String[labels.length];
-            for (int i = 0; i < labels.length; i++) {
-                ret[i] = NameFormat.format(labels[i], session.getNamespaceResolver());
-            }
-            return ret;
-        } catch (NoPrefixDeclaredException e) {
-            throw new IllegalArgumentException("Unable to resolve label name: " + e.toString());
+        QName[] labels = ((VersionImpl) version).getInternalVersion().getLabels();
+        String[] ret = new String[labels.length];
+        for (int i = 0; i < labels.length; i++) {
+            ret[i] = session.getJCRName(labels[i]);
+        return ret;
-            QName qLabel = NameFormat.parse(label, session.getNamespaceResolver());
+            QName qLabel = session.getQName(label);
-            QName qLabel = NameFormat.parse(label, session.getNamespaceResolver());
+            QName qLabel = session.getQName(label);
-            session.getVersionManager().removeVersion(this,
-                    NameFormat.parse(versionName, session.getNamespaceResolver()));
+            session.getVersionManager().removeVersion(
+                    this, session.getQName(versionName));

MOV8 MOV8 MOV21 MOV43 MOV43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32