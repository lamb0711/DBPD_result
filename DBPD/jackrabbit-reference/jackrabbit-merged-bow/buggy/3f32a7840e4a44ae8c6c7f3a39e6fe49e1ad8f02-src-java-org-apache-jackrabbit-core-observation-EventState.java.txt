Initial checkin of QueryManager with support for JCRQL (search implementation is not complete, some features are missing: searching for distinct same name sibling, sorting not yet implemented, indexing contains potential for optimizing)

Changed observation to support SynchronousEventListeners. The search registers itself as synchronous event listener. Also changed access checking on events sent out, because checking access on removed nodes need to be performed before they actually get removed.

Extended config.xml, which allows now to specify an index location for the QueryManager.

Added jar files needed for search.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47399 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.Path;
+import org.apache.jackrabbit.core.nodetype.NodeTypeImpl;
+     * The path of the parent node associated with this event.
+     */
+    private final Path parentPath;
+
+    /**
+     * The UUID of a child node, in case this EventState is of type
+     * {@link javax.jcr.observation.EventType#CHILD_NODE_ADDED} or
+     * {@link javax.jcr.observation.EventType#CHILD_NODE_REMOVED}.
+     */
+    private final String childUUID;
+
+    /**
+     * The node type of the parent node.
+     */
+    private final NodeTypeImpl nodeType;
+
+    /**
-     * @param parentUUID the uuid of the parent node associated with this event.
+     * @param parentUUID the uuid of the parent node associated with this
+     *                   event.
+     * @param parentPath the path of the parent node associated with this
+     *                   event.
+     * @param childUUID  the uuid of the child node associated with this event.
+     *                   If the event type is one of: <code>PROPERTY_ADDED</code>,
+     *                   <code>PROPERTY_CHANGED</code> or <code>PROPERTY_REMOVED</code>
+     *                   this parameter must be <code>null</code>.
-     * @param session    the {@link javax.jcr.Session} that
-     *                   caused this event.
+     * @param nodeType   the node type of the parent node.
+     * @param session    the {@link javax.jcr.Session} that caused this event.
-    private EventState(long type, String parentUUID, QName childName, Session session) {
+    private EventState(long type,
+		       String parentUUID,
+		       Path parentPath,
+		       String childUUID,
+		       QName childName,
+		       NodeTypeImpl nodeType,
+		       Session session) {
+	long mask = (EventType.PROPERTY_ADDED | EventType.PROPERTY_CHANGED | EventType.PROPERTY_REMOVED);
+	if ((type & mask) > 0) {
+	    if (childUUID != null) {
+		throw new IllegalArgumentException("childUUID only allowed for Node events.");
+	    }
+	} else {
+	    if (childUUID == null) {
+		throw new IllegalArgumentException("childUUID must not be null for Node events.");
+	    }
+	}
+	this.parentPath = parentPath;
+	this.childUUID = childUUID;
+	this.nodeType = nodeType;
+     * @param parentPath the path of the parent node associated with
+     *                   this <code>EventState</code>.
+     * @param childUUID  the uuid of the child node associated with this event.
+     * @param nodeType   the node type of the parent node.
-    public static EventState createChildNodeAdded(String parentUUID,
-						  QName childName,
-						  Session session) {
+    public static EventState childNodeAdded(String parentUUID,
+					    Path parentPath,
+					    String childUUID,
+					    QName childName,
+					    NodeTypeImpl nodeType,
+					    Session session) {
+		parentPath,
+		childUUID,
+		nodeType,
+     * @param parentPath the path of the parent node associated with
+     *                   this <code>EventState</code>.
+     * @param childUUID  the uuid of the child node associated with this event.
+     * @param nodeType   the node type of the parent node.
-    public static EventState createChildNodeRemoved(String parentUUID,
-						    QName childName,
-						    Session session) {
+    public static EventState childNodeRemoved(String parentUUID,
+					      Path parentPath,
+					      String childUUID,
+					      QName childName,
+					      NodeTypeImpl nodeType,
+					      Session session) {
+		parentPath,
+		childUUID,
+		nodeType,
+     * @param parentPath the path of the parent node associated with
+     *                   this <code>EventState</code>.
+     * @param nodeType   the node type of the parent node.
-    public static EventState createPropertyAdded(String parentUUID,
-						 QName childName,
-						 Session session) {
+    public static EventState propertyAdded(String parentUUID,
+					   Path parentPath,
+					   QName childName,
+					   NodeTypeImpl nodeType,
+					   Session session) {
+		parentPath,
+		null,
+		nodeType,
+     * @param parentPath the path of the parent node associated with
+     *                   this <code>EventState</code>.
+     * @param nodeType   the node type of the parent node.
-    public static EventState createPropertyRemoved(String parentUUID,
-						   QName childName,
-						   Session session) {
+    public static EventState propertyRemoved(String parentUUID,
+					     Path parentPath,
+					     QName childName,
+					     NodeTypeImpl nodeType,
+					     Session session) {
+		parentPath,
+		null,
+		nodeType,
+     * @param parentPath the path of the parent node associated with
+     *                   this <code>EventState</code>.
+     * @param nodeType   the node type of the parent node.
-    public static EventState createPropertyChanged(String parentUUID,
-						   QName childName,
-						   Session session) {
+    public static EventState propertyChanged(String parentUUID,
+					     Path parentPath,
+					     QName childName,
+					     NodeTypeImpl nodeType,
+					     Session session) {
+		parentPath,
+		null,
+		nodeType,
+     * Returns the path of the parent node.
+     * @return the path of the parent node.
+     */
+    public Path getParentPath() {
+	return parentPath;
+    }
+
+    /**
+     * Returns the UUID of a child node operation.
+     * If this <code>EventState</code> was generated for a property
+     * operation this method returns <code>null</code>.
+     * @return the UUID of a child node operation.
+     */
+    public String getChildUUID() {
+	return childUUID;
+    }
+
+    /**
+     * Returns the node type of the parent node associated with this event.
+     *
+     * @return the node type of the parent associated with this event.
+     */
+    public NodeTypeImpl getNodeType() {
+	return nodeType;
+    }
+
+    /**

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS44 INS44 INS44 UPD42 INS44 INS44 INS44 UPD42 INS44 INS44 INS44 UPD42 INS44 INS44 UPD42 INS44 INS44 UPD42 INS44 INS44 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS25 INS21 INS21 INS21 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS65 INS65 INS43 INS42 INS43 INS42 INS65 INS65 INS43 INS42 INS43 INS42 INS65 INS65 INS43 INS42 INS43 INS42 INS65 INS65 INS42 INS41 INS65 INS65 INS42 INS41 INS65 INS65 INS42 INS41 INS66 INS66 INS65 INS66 INS65 INS66 INS66 UPD66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 UPD66 INS42 INS42 INS42 INS39 INS59 INS27 INS8 INS8 INS7 INS7 INS7 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS67 INS67 INS42 INS36 INS36 INS34 INS25 INS25 INS22 INS42 INS22 INS42 INS22 INS42 MOV43 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 INS42 INS33 INS42 MOV43 INS42 INS33 INS42 MOV43 INS42 INS33 INS42 INS40 INS42 INS40 INS42 INS27 INS27 INS27 INS8 INS27 INS8 INS52 INS42 INS52 INS42 INS52 INS42 INS40 INS40 INS40 INS42 INS42 INS42 INS33 INS53 INS42 INS33 INS53 INS14 INS14 INS43 INS45 INS43 INS45 INS42 INS42 DEL66