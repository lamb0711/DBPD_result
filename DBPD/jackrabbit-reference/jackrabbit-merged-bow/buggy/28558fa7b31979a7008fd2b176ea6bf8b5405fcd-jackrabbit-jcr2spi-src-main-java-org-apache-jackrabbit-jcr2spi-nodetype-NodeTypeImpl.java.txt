JCR-1591: JSR 283 NodeType Management 
JCR-2105: JSR 283 NodeType Management 

- Node.addNode must check for nt being mixin or abstract
   core: moved to internalAddNode in order to have the check upon
   Node.addNode as well as upon SessionImport
   jcr2spi: delegated to effective node type 
- Node.canAddMixin should be symmetric to Node.addMixin
- NodeType.canAddNode should check for nt being mixin or abstract
   both in core and jcr2spi the check is delegated to the effective node
   type.
   jcr2spi in addition called by all every add-node incl;
   core: in addition called by workspace operations only)

- added and fixed TCK tests


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@780989 13f79535-47bb-0310-9956-ffa450edef68

-        return definitionProvider().getQPropertyDefinition(getQName(), propertyName, type, multiValued);
+        return definitionProvider().getQPropertyDefinition(ntd.getName(), propertyName, type, multiValued);
-     * Returns the 'internal', i.e. the fully qualified name.
+     * Returns the node type definition.
-     * @return the qualified name
+     * @return the qualified definition
-    private Name getQName() {
-        return ntd.getName();
+    QNodeTypeDefinition getDefinition() {
+        return ntd;
-            ent.checkAddNodeConstraints(resolver().getQName(childNodeName),
-                resolver().getQName(nodeTypeName), definitionProvider());
+            Name ntName = resolver().getQName(nodeTypeName);
+            QNodeTypeDefinition def = ntMgr.getNodeTypeDefinition(ntName);
+            ent.checkAddNodeConstraints(resolver().getQName(childNodeName), def, definitionProvider());

INS43 UPD42 INS42 UPD66 UPD66 INS42 INS60 INS60 MOV42 MOV42 MOV43 INS59 INS43 INS59 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL83