Fix for JCR-1325 and review support for Collection & Map. 
The mapping definition can be simplified with parameterized collections and maps. In this case the ElementClass setting is not necessary.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@650283 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-import java.util.Vector;
-import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableArrayList;
-import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableSet;
-import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableVector;
-import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableHashMap;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableCollectionImpl;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableMapImpl;
-            if (manageableObjectsClass.equals(ArrayList.class)) {
-                return new ManageableArrayList();
-            }
+        	// if the class is an interface, try to find the default class implementation
+        	if (manageableObjectsClass.isInterface())
+        	{
-            if (manageableObjectsClass.equals(Vector.class)) {
-                return new ManageableVector();
-            }
+        		Class defaultImplementation  = ReflectionUtils.getDefaultImplementation(manageableObjectsClass);
+        		if (manageableObjectsClass == null)
+        		{
+        			new JcrMappingException("No default implementation for the interface " + manageableObjectsClass);
+        		}
+        		else
+        		{
+        			manageableObjectsClass = defaultImplementation;
+        		}
+        	}
-            if (manageableObjectsClass.equals(HashSet.class)) {
-                return new ManageableSet();
-            }
+        	//if the class is implementing the Collection interface
+        	if (ReflectionUtils.implementsInterface(manageableObjectsClass, Collection.class))
+        	{
+        		return new ManageableCollectionImpl((Collection) ReflectionUtils.newInstance(manageableObjectsClass));
+        	}
-            if (manageableObjectsClass.equals(Collection.class) || manageableObjectsClass.equals(List.class)) {
-                return new ManageableArrayList();
-            }
+        	//if the class is implementing the Map interface
+        	if (ReflectionUtils.implementsInterface(manageableObjectsClass, Map.class))
+        	{
+        		return new ManageableMapImpl((Map) ReflectionUtils.newInstance(manageableObjectsClass));
+        	}
-            if (manageableObjectsClass.equals(Set.class)) {
-                return new ManageableSet();
-            }
-
-            if (manageableObjectsClass.equals(Map.class) || manageableObjectsClass.equals(HashMap.class)) {
-            	return new ManageableHashMap();
-            }
-            if (object.getClass().equals(ArrayList.class)) {
-                ManageableArrayList manageableArrayList = new ManageableArrayList();
-                manageableArrayList.addAll((Collection) object);
-                return manageableArrayList;
-            }
+        	//if the class is implementing the Collection interface
+        	if (ReflectionUtils.implementsInterface(object.getClass(), Collection.class))
+        	{
+        		return new ManageableCollectionImpl((Collection) object);
+        	}
-            if (object.getClass().equals(Vector.class)) {
-                ManageableVector manageableVector = new ManageableVector();
-                manageableVector.addAll((Collection) object);
+        	//if the class is implementing the Map interface
+        	if (ReflectionUtils.implementsInterface(object.getClass(), Map.class))
+        	{
+        		return new ManageableMapImpl((Map) object);
+        	}
-                return manageableVector;
-            }
-
-            if (object.getClass().equals(HashSet.class)) {
-                return new ManageableSet((Set) object);
-            }
-
-            if (object.getClass().equals(Collection.class)
-                || object.getClass().equals(List.class)) {
-                ManageableArrayList manageableArrayList = new ManageableArrayList();
-                manageableArrayList.addAll((Collection) object);
-
-                return manageableArrayList;
-            }
-            if (object.getClass().equals(Set.class)) {
-                return new ManageableSet((Set) object);
-            }
-
-            if (object.getClass().equals(Map.class)
-            	|| object.getClass().equals(HashMap.class)	){
-                return new ManageableHashMap((Map)object);
-            }

UPD40 UPD40 INS25 INS25 INS25 MOV32 INS8 MOV32 INS8 MOV32 MOV8 INS32 UPD42 INS60 INS25 UPD42 INS42 UPD42 INS41 UPD42 INS42 UPD42 UPD42 INS42 MOV32 MOV57 UPD42 MOV42 INS42 MOV32 MOV57 INS43 INS59 UPD27 MOV27 MOV8 INS8 INS14 UPD42 MOV42 INS42 INS32 INS42 INS33 INS21 INS21 INS43 INS11 UPD43 INS11 UPD43 MOV11 UPD43 UPD42 MOV42 INS42 MOV42 INS14 INS7 UPD42 MOV42 INS43 INS32 UPD42 INS43 INS32 UPD42 UPD42 UPD43 MOV43 INS27 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD42 INS45 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL57 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL14 DEL41 DEL43 DEL14 DEL41 DEL8 DEL25 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL43 DEL14 DEL41 DEL8 DEL25 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL43 DEL14 DEL41 DEL8 DEL25 DEL25 DEL42 DEL42 DEL43 DEL57 DEL32 DEL43 DEL14 DEL41 DEL8 DEL25 DEL42 DEL43 DEL57 DEL32 DEL27 DEL25 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL57 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL57 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL43 DEL42 DEL43 DEL42 DEL11 DEL14 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL57 DEL32 DEL27