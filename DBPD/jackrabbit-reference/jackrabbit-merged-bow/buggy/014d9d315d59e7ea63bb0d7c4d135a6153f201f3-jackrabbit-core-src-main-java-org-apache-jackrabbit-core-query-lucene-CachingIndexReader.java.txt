#0000 - JCR-1232: Merge UUID to NodeId

Replace UUID references with NodeId alternatives from o.a.j.core.query.lucene.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@793015 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.uuid.UUID;
+import org.apache.jackrabbit.core.id.NodeId;
-import java.util.Iterator;
-     * Maps document number to node UUID.
+     * Maps document number to node id.
-    private final Map docNumber2uuid;
+    private final Map<Integer, NodeId> docNumber2id;
+    @SuppressWarnings("unchecked")
-        this.docNumber2uuid = Collections.synchronizedMap(new LRUMap(
-                Math.max(10, delegatee.maxDoc() / 100)));
+        this.docNumber2id = Collections.synchronizedMap(
+                new LRUMap(Math.max(10, delegatee.maxDoc() / 100)));
-     * Uses the {@link #docNumber2uuid} cache for document lookups that are only
+     * Uses the {@link #docNumber2id} cache for document lookups that are only
-            UUID uuid = (UUID) docNumber2uuid.get(docNum);
-            if (uuid == null) {
+            NodeId id = docNumber2id.get(docNum);
+            if (id == null) {
-                uuid = UUID.fromString(doc.get(FieldNames.UUID));
-                docNumber2uuid.put(docNum, uuid);
+                id = new NodeId(doc.get(FieldNames.UUID));
+                docNumber2id.put(docNum, id);
-                doc.add(new Field(FieldNames.UUID, uuid.toString(),
+                doc.add(new Field(FieldNames.UUID, id.toString(),
-            final Map docs = new HashMap();
+            final Map<Object, NodeInfo> docs = new HashMap<Object, NodeInfo>();
-                    UUID uuid = UUID.fromString(term.text());
+                    NodeId id = new NodeId(term.text());
-                            NodeInfo info = new NodeInfo(doc, uuid);
-                            docs.put(new Integer(doc), info);
+                            NodeInfo info = new NodeInfo(doc, id);
+                            docs.put(doc, info);
-                    UUID uuid = UUID.fromString(term.text());
+                    NodeId id = new NodeId(term.text());
-                            info.parent = uuid;
+                            info.parent = id;
-                            docs.put(info.uuid, info);
+                            docs.put(info.id, info);
-            Iterator it = docs.values().iterator();
-            while (it.hasNext()) {
-                NodeInfo info = (NodeInfo) it.next();
-                NodeInfo parent = (NodeInfo) docs.get(info.parent);
+            for (NodeInfo info : docs.values()) {
+                NodeInfo parent = docs.get(info.parent);
-        final UUID uuid;
+        final NodeId id;
-        UUID parent;
+        NodeId parent;
-        public NodeInfo(int docId, UUID uuid) {
+        public NodeInfo(int docId, NodeId id) {
-            this.uuid = uuid;
+            this.id = id;

UPD40 INS74 INS79 MOV43 MOV43 INS43 UPD42 INS42 INS45 UPD43 UPD43 UPD66 INS42 INS70 UPD42 UPD42 UPD42 UPD43 UPD42 INS74 INS44 MOV32 MOV8 UPD42 UPD42 UPD42 UPD43 MOV43 INS43 MOV43 MOV43 INS42 UPD42 UPD42 UPD42 INS32 UPD42 INS42 INS74 MOV43 UPD42 UPD42 MOV42 MOV42 MOV42 MOV43 INS43 MOV43 MOV32 UPD42 INS14 UPD42 UPD42 INS42 INS43 MOV32 INS42 UPD42 UPD43 UPD43 UPD42 UPD42 INS14 UPD42 UPD42 INS14 INS43 MOV32 INS43 MOV32 INS42 INS42 MOV43 INS42 UPD42 UPD40 MOV43 UPD42 DEL40 DEL26 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL11 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61