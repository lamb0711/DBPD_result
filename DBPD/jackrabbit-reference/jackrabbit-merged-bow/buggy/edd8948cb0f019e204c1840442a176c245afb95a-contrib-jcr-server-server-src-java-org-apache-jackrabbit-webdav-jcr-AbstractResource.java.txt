JCR-249, JCR-253

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@331281 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.server.io.IOUtil;
+import org.apache.jackrabbit.webdav.io.OutputContext;
+import java.io.OutputStream;
+import java.io.IOException;
-    private long modificationTime = DavResource.UNDEFINED_MODIFICATIONTIME;
+    private long modificationTime = new Date().getTime();
-     * Returns the path of the underlaying repository item or the item to
+     * Returns the path of the underlying repository item or the item to
-     * @return path of the underlaying repository item.
+     * @return path of the underlying repository item.
-     * @see org.apache.jackrabbit.webdav.DavResource#getStream()
-    public InputStream getStream() {
+    InputStream getStream() {
+     * @see DavResource#spool(OutputContext)
+     */
+    public void spool(OutputContext outputContext) throws IOException {
+        if (!initedProps) {
+            initProperties();
+        }
+
+        // export properties
+        outputContext.setModificationTime(getModificationTime());
+        DavProperty etag = getProperty(DavPropertyName.GETETAG);
+        if (etag != null) {
+            outputContext.setETag(String.valueOf(etag.getValue()));
+        }
+        DavProperty contentType = getProperty(DavPropertyName.GETCONTENTTYPE);
+        if (contentType != null) {
+            outputContext.setContentType(String.valueOf(contentType.getValue()));
+        }
+        DavProperty contentLength = getProperty(DavPropertyName.GETCONTENTLENGTH);
+        if (contentLength != null) {
+            try {
+                long length = Long.parseLong(contentLength.getValue() + "");
+                if (length > 0) {
+                    outputContext.setContentLength(length);
+                }
+            } catch (NumberFormatException e) {
+                log.error("Could not build content length from property value '" + contentLength.getValue() + "'");
+            }
+        }
+        DavProperty contentLanguage = getProperty(DavPropertyName.GETCONTENTLANGUAGE);
+        if (contentLanguage != null) {
+            outputContext.setContentLanguage(contentLanguage.getValue().toString());
+        }
+
+        // spool content
+        InputStream in = getStream();
+        OutputStream out = outputContext.getOutputStream();
+        if (in != null && out != null) {
+            try {
+                IOUtil.spool(in, out);
+            } finally {
+                // also close stream if not sending content
+                try {
+                    in.close();
+                } catch (IOException e) {
+                    // ignore
+                }
+            }
+        }
+    }
+
+    /**

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS32 INS65 INS43 INS42 INS42 INS25 INS21 INS60 INS25 INS60 INS25 INS60 INS25 INS60 INS25 INS60 INS60 INS25 INS14 INS42 UPD66 UPD66 INS68 INS42 INS38 INS8 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS42 INS42 INS69 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS27 INS54 INS42 INS43 INS32 INS42 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS40 INS8 INS12 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS8 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS60 INS25 INS44 INS8 INS42 INS42 INS32 INS21 INS54 INS42 INS42 INS32 INS42 INS42 INS32 INS39 INS59 INS27 INS8 INS43 INS42 INS21 INS32 INS42 INS32 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS21 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS27 INS32 INS42 INS42 INS27 INS32 INS43 INS42 INS32 INS45 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL40 DEL42 DEL68 DEL65 DEL83