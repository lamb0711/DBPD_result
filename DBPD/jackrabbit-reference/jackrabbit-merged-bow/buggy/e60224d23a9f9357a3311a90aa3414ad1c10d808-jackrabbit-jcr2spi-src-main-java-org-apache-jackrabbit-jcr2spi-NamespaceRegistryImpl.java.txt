JCR-1612: Reintroduce NamespaceStorage and namespace-caching

Restore a simple repository-level namespace cache.

Personally I think this kind of caching should be up to a remoting layer to implement if needed. But as discussed in JCR-1612 I'm restoring caching functionality for now.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@705932 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import javax.jcr.NamespaceRegistry;
-import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.NamespaceRegistry;
-    private static Logger log = LoggerFactory.getLogger(NamespaceRegistryImpl.class);
-
+    /**
+     * The namespace storage.
+     */
+    private final Map prefixToUri = new HashMap();
+
+    private final Map uriToPrefix = new HashMap();
+
-    public void registerNamespace(String prefix, String uri) throws NamespaceException, UnsupportedRepositoryOperationException, RepositoryException {
+    public synchronized void registerNamespace(String prefix, String uri)
+            throws RepositoryException {
+        reloadNamespaces();
-    public void unregisterNamespace(String prefix) throws NamespaceException, UnsupportedRepositoryOperationException, RepositoryException {
+    public synchronized void unregisterNamespace(String prefix)
+            throws RepositoryException {
+        reloadNamespaces();
-    public String[] getPrefixes() throws RepositoryException {
-        Collection prefixes = storage.getRegisteredNamespaces().keySet();
-        return (String[]) prefixes.toArray(new String[prefixes.size()]);
+    public synchronized String[] getPrefixes() throws RepositoryException {
+        reloadNamespaces();
+        return (String[]) prefixToUri.keySet().toArray(new String[prefixToUri.size()]);
-    public String[] getURIs() throws RepositoryException {
-        Collection uris = storage.getRegisteredNamespaces().values();
-        return (String[]) uris.toArray(new String[uris.size()]);
+    public synchronized String[] getURIs() throws RepositoryException {
+        reloadNamespaces();
+        return (String[]) uriToPrefix.keySet().toArray(new String[uriToPrefix.size()]);
-    public String getURI(String prefix) throws NamespaceException {
-        // try to load the uri
-        try {
-            return storage.getURI(prefix);
-        } catch (RepositoryException ex) {
-            log.debug("Internal error while loading registered namespaces.");
-            throw new NamespaceException(prefix + ": is not a registered namespace prefix.");
+    public synchronized String getURI(String prefix)
+            throws RepositoryException {
+        String uri = (String) prefixToUri.get(prefix);
+        if (uri == null) {
+            // Not found, try loading latest state from storage
+            reloadNamespaces();
+            uri = (String) prefixToUri.get(prefix);
+        if (uri == null) {
+            // Still not found, it's not a known prefix
+            throw new NamespaceException("Namespace not found: " + prefix);
+        }
+        return uri;
-    public String getPrefix(String uri) throws NamespaceException {
-        // try to load the prefix
-        try {
-            return storage.getPrefix(uri);
-        } catch (RepositoryException ex) {
-            log.debug("Internal error while loading registered namespaces.");
-            throw new NamespaceException(uri + ": is not a registered namespace uri.");
+    public synchronized String getPrefix(String uri) throws RepositoryException {
+        String prefix = (String) uriToPrefix.get(uri);
+        if (prefix == null) {
+            // Not found, try loading latest state from storage
+            reloadNamespaces();
+            prefix = (String) uriToPrefix.get(uri);
+        }
+        if (prefix == null) {
+            // Still not found, it's not a known URI
+            throw new NamespaceException("Namespace not found: " + uri);
+        }
+        return prefix;
+    }
+
+    //-------------------------------------------------------------< private >
+
+    /**
+     * Clears the current namespace cache and loads new mappings from
+     * the underlying namespace storage.
+     *
+     * @throws RepositoryException if new mappings could not be loaded
+     */
+    private synchronized void reloadNamespaces() throws RepositoryException {
+        Map namespaces = storage.getRegisteredNamespaces();
+
+        prefixToUri.clear();
+        uriToPrefix.clear();
+
+        Iterator iterator = namespaces.entrySet().iterator();
+        while (iterator.hasNext()) {
+            Map.Entry entry = (Map.Entry) iterator.next();
+            prefixToUri.put(entry.getKey(), entry.getValue());
+            uriToPrefix.put(entry.getValue(), entry.getKey());

MOV26 MOV26 UPD40 UPD40 UPD40 INS23 INS23 INS31 INS29 MOV83 UPD83 MOV83 UPD43 MOV43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS83 INS83 MOV43 INS8 INS83 UPD43 INS29 INS83 INS83 INS39 INS42 MOV43 INS8 INS65 UPD42 UPD42 MOV42 INS14 INS42 INS42 INS14 INS21 INS21 INS21 INS21 INS60 INS25 INS25 INS41 UPD42 INS60 INS25 INS25 INS41 INS65 INS65 MOV60 INS21 INS21 INS60 INS61 INS66 INS43 INS43 INS32 INS32 INS32 INS32 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS66 INS66 INS42 INS66 UPD43 INS32 INS32 INS43 INS59 INS32 INS8 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS11 INS42 INS33 INS21 MOV21 INS42 INS33 MOV53 INS42 INS42 INS11 INS42 INS33 INS21 MOV21 INS42 INS33 MOV53 UPD42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS21 INS32 INS32 INS43 INS32 INS32 INS7 INS43 INS32 INS32 INS7 INS32 INS42 INS43 INS59 INS32 INS32 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS11 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS11 INS42 INS42 INS40 INS42 INS11 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 UPD42 UPD42 INS43 INS32 INS45 INS43 INS32 INS45 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS40 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL23 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL45 DEL32 DEL45 DEL43 DEL32 DEL41 DEL8 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL45 DEL32 DEL45 DEL32 DEL41 DEL8 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32