JCR-805: Introduce a temprary cache for intermediate query results

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520878 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.HashMap;
- * In case there are no filters, this MatchAllScores simply collects
- * all documents in the index that are not marked as deleted.
+        PerQueryCache cache = PerQueryCache.getInstance();
+        Map readerCache = (Map) cache.get(MatchAllScorer.class, reader);
+        if (readerCache == null) {
+            readerCache = new HashMap();
+            cache.put(MatchAllScorer.class, reader, readerCache);
+        }
+        // get BitSet for field
+        docFilter = (BitSet) readerCache.get(field);
+
+        if (docFilter != null) {
+            // use cached BitSet;
+            return;
+        }
+
+        // otherwise calculate new
+
+        // put BitSet into cache
+        readerCache.put(field, docFilter);

INS26 INS26 INS40 INS40 INS60 INS60 INS25 INS21 INS25 INS21 INS43 INS59 INS43 INS59 INS27 INS8 INS7 INS27 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS33 INS21 INS21 INS42 INS11 INS42 INS33 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS7 INS32 INS43 INS32 INS42 INS42 INS42 INS57 INS42 INS42 INS14 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 DEL66 DEL66