JCR-325: docview roundtripping does not work with multivalue non-string properties

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@384197 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.util.Text;
+     * <p/>
+     * See also {@link DocViewSAXEventGenerator#leaving(javax.jcr.Node, int)}
+     * regarding special handling of multi-valued properties on export.
-/*
-                // @todo should attribute value be interpreted as LIST type (i.e. multi-valued property)?
-                String[] strings = Text.explode(attrValue, ' ', true);
-                propValues = new Value[strings.length];
-                for (int j = 0; j < strings.length; j++) {
-                    // decode encoded blanks in value
-                    strings[j] = Text.replace(strings[j], "_x0020_", " ");
-                    propValues[j] = InternalValue.create(strings[j]);
+
+                if (attrValue.startsWith("\n")) {
+                    // assume multi-valued property:
+                    // a leading line-feed (a valid whitespace NMTOKENS delimiter)
+                    // is interpreted as a hint that this attribute value is of
+                    // type NMTOKENS.
+                    // see DocViewSAXEventGenerator#leaving(Node, int)
+                    attrValue = attrValue.substring(1);
+                    String[] strings = Text.explode(attrValue, ' ', true);
+                    propValues = new Importer.TextValue[strings.length];
+                    for (int j = 0; j < strings.length; j++) {
+                        // decode encoded blanks in value
+                        strings[j] = Text.replace(strings[j], "_x0020_", " ");
+                        propValues[j] = new StringValue(strings[j]);
+                    }
+                } else {
+                    // assume single-valued property
+                    propValues = new Importer.TextValue[1];
+                    propValues[0] = new StringValue(attrValue);
-*/
+
-                        } catch (NameException be) {
+                        } catch (NameException ne) {
-                                    + attrValue, be);
+                                    + attrValue, ne);
-                    if (attrValue.length() > 0) {
-                        try {
-                            mixinTypes =
-                                    new QName[]{QName.fromJCRName(attrValue, nsContext)};
-                        } catch (NameException be) {
-                            throw new SAXException("illegal jcr:mixinTypes value: "
-                                    + attrValue, be);
+                    if (propValues.length > 0) {
+                        mixinTypes = new QName[propValues.length];
+                        for (int j = 0; j < propValues.length; j++) {
+                            String val = ((StringValue) propValues[j]).retrieve();
+                            try {
+                                mixinTypes[j] = QName.fromJCRName(val, nsContext);
+                            } catch (NameException ne) {
+                                throw new SAXException("illegal jcr:mixinTypes value: "
+                                        + val, ne);
+                            }
-                    propValues = new Importer.TextValue[1];
-                    propValues[0] = new StringValue(atts.getValue(i));

INS26 INS40 INS66 INS66 INS65 INS66 INS68 INS42 INS42 INS69 INS69 INS43 INS39 INS25 INS40 INS32 INS8 MOV8 INS42 INS42 INS45 INS21 INS60 INS21 INS24 INS7 INS5 INS59 INS7 INS58 INS27 INS37 INS8 INS8 INS42 INS32 INS43 INS85 INS42 INS32 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS21 INS8 MOV21 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS13 INS9 INS5 INS40 INS42 INS34 INS7 INS7 INS42 INS40 MOV21 INS24 INS43 INS85 INS2 INS32 INS2 INS14 INS44 INS58 INS27 INS37 INS8 INS40 INS42 INS42 INS42 INS42 INS2 INS45 INS45 INS42 INS42 INS43 INS2 MOV43 INS42 INS39 INS59 INS42 INS40 INS42 INS60 MOV54 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS34 INS43 INS59 INS8 INS12 UPD42 INS42 INS42 INS32 INS21 MOV44 MOV8 INS36 INS42 INS7 UPD42 INS11 INS2 INS32 INS43 INS2 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL4 DEL8 DEL42 DEL44 DEL12 DEL8