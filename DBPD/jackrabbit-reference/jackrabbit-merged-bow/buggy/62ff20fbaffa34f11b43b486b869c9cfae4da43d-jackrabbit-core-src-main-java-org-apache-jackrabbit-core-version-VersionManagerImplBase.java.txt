JCR-2865: a dead lock in DefaultISMLocking

Use an older 2.1 version of the DefaultISMLocking as a separate VersioningLock class in the version manager.

This decouples the read-write lock functionality in the version manager from the more performance-critical ISM locking and fixes the accidental deadlocks caused by the ISM locking optimizations.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1065599 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.state.DefaultISMLocking;
-import org.apache.jackrabbit.core.state.ISMLocking;
-    private final DefaultISMLocking rwLock = new DefaultISMLocking();
+    private final VersioningLock rwLock = new VersioningLock();
-        private final ISMLocking.WriteLock lock;
+        private final VersioningLock.WriteLock lock;
-        public WriteOperation(ISMLocking.WriteLock lock) {
+        public WriteOperation(VersioningLock.WriteLock lock) {
-    protected ISMLocking.WriteLock acquireWriteLock() {
+    protected VersioningLock.WriteLock acquireWriteLock() {
-                return rwLock.acquireWriteLock(null);
+                return rwLock.acquireWriteLock();
-    protected ISMLocking.ReadLock acquireReadLock() {
+    protected VersioningLock.ReadLock acquireReadLock() {
-                return rwLock.acquireReadLock(null);
+                return rwLock.acquireReadLock();
-        ISMLocking.WriteLock lock = acquireWriteLock();
+        VersioningLock.WriteLock lock = acquireWriteLock();

UPD43 UPD43 UPD43 UPD42 UPD43 UPD40 UPD40 UPD43 UPD40 UPD43 UPD43 UPD42 UPD40 UPD40 DEL40 DEL26 DEL40 DEL26 DEL33 DEL33