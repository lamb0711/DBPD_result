JCR-3206 work in progress ...

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1291222 13f79535-47bb-0310-9956-ffa450edef68

-    public Value getDescriptorValue(String key) {
-        throw new RuntimeException("TODO: JCRRMI-26");
+    /** {@inheritDoc} */
+    public synchronized Value getDescriptorValue(String key) {
+        try {
+            return remote.getDescriptorValue(key);
+        } catch (RemoteException e1) {
+            try {
+                remote = getRemoteRepository();
+                return remote.getDescriptorValue(key);
+            } catch (RemoteException e2) {
+                remote = new BrokenRemoteRepository(e2);
+                throw new RemoteRuntimeException(e2);
+            }
+        }
-    public Value[] getDescriptorValues(String key) {
-        throw new RuntimeException("TODO: JCRRMI-26");
+    /** {@inheritDoc} */
+    public synchronized Value[] getDescriptorValues(String key) {
+        try {
+            return remote.getDescriptorValues(key);
+        } catch (RemoteException e1) {
+            try {
+                remote = getRemoteRepository();
+                return remote.getDescriptorValues(key);
+            } catch (RemoteException e2) {
+                remote = new BrokenRemoteRepository(e2);
+                throw new RemoteRuntimeException(e2);
+            }
+        }
-    public boolean isSingleValueDescriptor(String key) {
-        throw new RuntimeException("TODO: JCRRMI-26");
+    /** {@inheritDoc} */
+    public synchronized boolean isSingleValueDescriptor(String key) {
+        try {
+            return remote.isSingleValueDescriptor(key);
+        } catch (RemoteException e1) {
+            try {
+                remote = getRemoteRepository();
+                return remote.isSingleValueDescriptor(key);
+            } catch (RemoteException e2) {
+                remote = new BrokenRemoteRepository(e2);
+                throw new RemoteRuntimeException(e2);
+            }
+        }
-    public boolean isStandardDescriptor(String key) {
-        throw new RuntimeException("TODO: JCRRMI-26");
+    /** {@inheritDoc} */
+    public synchronized boolean isStandardDescriptor(String key) {
+        try {
+            return remote.isStandardDescriptor(key);
+        } catch (RemoteException e1) {
+            try {
+                remote = getRemoteRepository();
+                return remote.isStandardDescriptor(key);
+            } catch (RemoteException e2) {
+                remote = new BrokenRemoteRepository(e2);
+                throw new RemoteRuntimeException(e2);
+            }
+        }

INS29 INS83 INS8 INS29 INS83 INS8 INS29 INS83 MOV44 INS8 INS29 INS83 MOV44 INS8 INS65 INS54 INS65 INS54 INS65 INS54 INS65 INS54 INS65 INS66 INS8 INS12 INS65 INS66 INS8 INS12 INS65 INS66 INS8 INS12 INS65 INS66 INS8 INS12 INS41 INS44 INS8 INS41 INS44 INS8 INS41 INS44 INS8 INS41 INS44 INS8 INS32 INS43 INS42 INS54 INS32 INS43 INS42 INS54 INS32 INS43 INS42 INS54 INS32 INS43 INS42 INS54 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS8 INS12 INS21 INS41 INS44 INS8 INS21 INS41 INS44 INS8 INS21 INS41 INS44 INS8 INS21 INS41 INS44 INS8 INS7 INS32 INS43 INS42 INS21 MOV53 INS7 INS32 INS43 INS42 INS21 MOV53 INS7 INS32 INS43 INS42 INS21 MOV53 INS7 INS32 INS43 INS42 INS21 MOV53 INS42 INS32 INS42 INS42 INS42 INS42 INS7 INS42 INS32 INS42 INS42 INS42 INS42 INS7 INS42 INS32 INS42 INS42 INS42 INS42 INS7 INS42 INS32 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS14 UPD43 INS42 INS42 INS42 INS14 UPD43 INS42 INS42 INS42 INS14 UPD43 INS42 INS42 INS42 INS14 UPD43 INS42 INS43 INS42 UPD42 INS43 INS42 UPD42 INS43 INS42 UPD42 INS43 INS42 UPD42 INS42 INS42 INS42 INS42 DEL45 DEL8 DEL45 DEL8 DEL45 DEL8 DEL45 DEL8