more work on value constraints

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@109359 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.nodetype.NodeDefImpl;
-import org.apache.jackrabbit.core.nodetype.NodeTypeImpl;
-import org.apache.jackrabbit.core.nodetype.NodeTypeRegistry;
-import org.apache.jackrabbit.core.nodetype.PropertyDefImpl;
+import org.apache.jackrabbit.core.nodetype.*;
-                    if (def.getValueConstraints() != null) {
+                    String[] constraints = def.getValueConstraints();
+                    if (constraints != null) {
+
+                        // need to manually check REFERENCE value constraints
+                        // as this requires a session (target node needs to
+                        // be checked)
+                        if (def.getRequiredType() == PropertyType.REFERENCE) {
+                            for (int i = 0; i < values.length; i++) {
+                                boolean satisfied = false;
+                                try {
+                                    UUID targetUUID = (UUID) values[i].internalValue();
+                                    Node targetNode = session.getNodeByUUID(targetUUID.toString());
+                                    // constraints are OR-ed, i.e. at least one
+                                    // has to be satisfied
+                                    for (int j = 0; j < constraints.length; j++) {
+                                        // a REFERENCE value constraint specifies
+                                        // the name of the required node type of
+                                        // the target node
+                                        String ntName = constraints[j];
+                                        if (targetNode.isNodeType(ntName)) {
+                                            satisfied = true;
+                                            break;
+                                        }
+                                    }
+                                } catch (RepositoryException re) {
+                                    String msg = prop.safeGetJCRPath()
+                                            + ": failed to check REFERENCE value constraint";
+                                    log.error(msg, re);
+                                    throw new ConstraintViolationException(msg, re);
+                                }
+                                if (!satisfied) {
+                                    String msg = prop.safeGetJCRPath()
+                                            + ": does not satisfy the value constraint "
+                                            + constraints[0];   // just report the 1st
+                                    log.warn(msg);
+                                    throw new ConstraintViolationException(msg);
+                                }
+                            }
+                        }

UPD40 INS60 INS5 INS59 INS8 INS43 INS85 INS42 MOV32 INS42 MOV60 MOV54 INS25 INS42 INS27 INS8 INS32 INS40 INS24 INS42 INS42 INS58 INS27 INS37 INS8 INS39 INS59 INS42 INS40 INS42 INS60 INS54 INS25 INS42 INS34 INS39 INS59 INS8 INS12 INS38 INS8 INS42 INS9 INS60 INS60 INS24 INS44 INS8 INS42 INS60 INS21 INS53 INS43 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS43 INS42 INS60 INS21 INS53 INS43 INS59 INS32 INS14 INS42 INS42 INS11 INS42 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS42 INS43 INS59 INS32 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS34 INS43 INS59 INS32 MOV8 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS45 INS2 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS21 INS10 INS32 INS45 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS9 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26