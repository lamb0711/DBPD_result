adding Locking support contributed by Dominique Pfister

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156949 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.lock.LockManager;
+        // check lock status
+        parentNode.checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
+        // check lock status
+        checkLock();
+
-            throws RepositoryException {
+            throws LockException, RepositoryException {
+
+        // check lock status
+        checkLock();
+
+                        // check lock status of current parent
+                        ((NodeImpl) dstNode.getParent()).checkLock();
+
-            String msg = "Unable to checkin node. Node has pending changes: " + safeGetJCRPath();
+            String msg = "Unable to lock node. Node has pending changes: " + safeGetJCRPath();
-        // @todo implement locking support
-        throw new UnsupportedRepositoryOperationException();
+        LockManager lockMgr = ((WorkspaceImpl) session.getWorkspace()).getLockManager();
+        Lock lock = lockMgr.lock(this, isDeep, isSessionScoped);
+
+        try {
+            internalSetProperty(JCR_LOCKOWNER,
+                    InternalValue.create(session.getUserId()));
+            internalSetProperty(JCR_LOCKISDEEP,
+                    InternalValue.create(isDeep));
+            save();
+
+        } catch (RepositoryException e) {
+
+            // An error occurred, so remove lock
+            lockMgr.unlock(this);
+            throw e;
+        }
+        return lock;
-        // @todo implement locking support
-        throw new UnsupportedRepositoryOperationException();
+        LockManager lockMgr = ((WorkspaceImpl) session.getWorkspace()).getLockManager();
+        return lockMgr.getLock(this);
-            String msg = "Unable to checkin node. Node has pending changes: " + safeGetJCRPath();
+            String msg = "Unable to unlock node. Node has pending changes: " + safeGetJCRPath();
-        // @todo implement locking support
-        throw new UnsupportedRepositoryOperationException();
+        LockManager lockMgr = ((WorkspaceImpl) session.getWorkspace()).getLockManager();
+        lockMgr.unlock(this);
+
+        removeChildProperty(JCR_LOCKOWNER);
+        removeChildProperty(JCR_LOCKISDEEP);
+        save();
-        // @todo implement locking support
-        return false;
+        checkLockable();
+
+        LockManager lockMgr = ((WorkspaceImpl) session.getWorkspace()).getLockManager();
+        return lockMgr.holdsLock(this);
-        // @todo implement locking support
-        return false;
+        LockManager lockMgr = ((WorkspaceImpl) session.getWorkspace()).getLockManager();
+        return lockMgr.isLocked(this);
+
+    /**
+     * Check whether this node is locked by somebody else.
+     *
+     * @throws LockException       if this node is locked by somebody else
+     * @throws RepositoryException if some other error occurs
+     */
+    protected void checkLock() throws LockException, RepositoryException {
+        LockManager lockMgr = ((WorkspaceImpl) session.getWorkspace()).getLockManager();
+        lockMgr.checkLock(this);
+    }

INS26 INS40 INS31 MOV21 MOV21 MOV21 MOV21 MOV21 INS43 MOV29 MOV43 MOV43 MOV43 MOV29 MOV43 MOV43 MOV43 MOV29 MOV43 MOV29 MOV43 INS29 INS83 INS39 INS42 INS43 INS43 INS8 INS21 INS21 INS21 INS21 INS21 INS21 MOV60 MOV41 INS21 MOV60 MOV41 INS21 INS21 INS21 MOV60 MOV41 INS21 INS21 MOV60 MOV41 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS21 MOV21 MOV21 INS60 INS60 INS54 INS41 MOV21 INS60 INS41 MOV21 MOV21 INS60 INS21 INS21 INS21 INS21 MOV21 INS21 INS60 MOV21 INS60 INS65 INS65 INS65 INS42 INS42 INS60 INS21 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS43 INS59 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS66 INS42 INS66 INS42 INS66 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS21 INS21 INS21 INS44 INS8 UPD42 MOV42 INS42 INS32 INS42 INS42 INS52 UPD42 MOV42 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS52 INS36 INS42 INS42 INS42 INS52 INS42 INS42 INS32 INS32 INS32 INS43 INS42 INS21 INS53 INS36 INS42 INS36 INS42 INS36 INS42 INS36 INS42 INS36 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS42 UPD42 MOV42 INS32 INS42 INS11 INS11 INS11 INS11 INS11 UPD45 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS52 INS43 INS32 UPD45 INS43 INS32 INS43 INS32 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS32 INS36 INS42 INS11 INS43 INS32 INS42 INS42 INS42 DEL43 DEL14 DEL53 DEL43 DEL14 DEL53 DEL43 DEL14 DEL53 DEL9 DEL9