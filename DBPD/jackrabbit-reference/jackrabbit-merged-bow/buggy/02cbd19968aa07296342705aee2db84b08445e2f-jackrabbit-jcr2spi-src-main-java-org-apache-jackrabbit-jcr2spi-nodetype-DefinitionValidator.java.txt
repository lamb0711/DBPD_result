JCR-2105: JSR 283 NodeType Management (work in progress)
JCR-1483: Move common node type functionality to jackrabbit-spi-commons

NOTE: intermediate checkin to avoid additional conflicts with stefans work


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774294 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.commons.nodetype.InvalidNodeTypeDefException;
+import javax.jcr.nodetype.InvalidNodeTypeDefinitionException;
-     * @throws InvalidNodeTypeDefException
+     * @throws InvalidNodeTypeDefinitionException
-        throws InvalidNodeTypeDefException, RepositoryException {
+        throws InvalidNodeTypeDefinitionException, RepositoryException {
-            throw new InvalidNodeTypeDefException(msg.toString());
+            throw new InvalidNodeTypeDefinitionException(msg.toString());
-     * @throws InvalidNodeTypeDefException
+     * @throws InvalidNodeTypeDefinitionException
-            throws InvalidNodeTypeDefException, RepositoryException {
+            throws InvalidNodeTypeDefinitionException, RepositoryException {
-            throw new InvalidNodeTypeDefException(msg);
+            throw new InvalidNodeTypeDefinitionException(msg);
-                    throw new InvalidNodeTypeDefException(msg);
+                    throw new InvalidNodeTypeDefinitionException(msg);
-                    throw new InvalidNodeTypeDefException(msg);
+                    throw new InvalidNodeTypeDefinitionException(msg);
-                    throw new InvalidNodeTypeDefException(msg);
+                    throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg, e);
+                throw new InvalidNodeTypeDefinitionException(msg, e);
-                throw new InvalidNodeTypeDefException(msg, e);
+                throw new InvalidNodeTypeDefinitionException(msg, e);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                            throw new InvalidNodeTypeDefException(msg);
+                            throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                throw new InvalidNodeTypeDefException(msg);
+                throw new InvalidNodeTypeDefinitionException(msg);
-                    throw new InvalidNodeTypeDefException(msg);
+                    throw new InvalidNodeTypeDefinitionException(msg);
-                    throw new InvalidNodeTypeDefException(msg, e);
+                    throw new InvalidNodeTypeDefinitionException(msg, e);
-                    throw new InvalidNodeTypeDefException(msg, e);
+                    throw new InvalidNodeTypeDefinitionException(msg, e);
-                        throw new InvalidNodeTypeDefException(msg);
+                        throw new InvalidNodeTypeDefinitionException(msg);
-                        throw new InvalidNodeTypeDefException(msg);
+                        throw new InvalidNodeTypeDefinitionException(msg);
-                        throw new InvalidNodeTypeDefException(msg, e);
+                        throw new InvalidNodeTypeDefinitionException(msg, e);
-                        throw new InvalidNodeTypeDefException(msg, e);
+                        throw new InvalidNodeTypeDefinitionException(msg, e);
-                throw new InvalidNodeTypeDefException(msg, e);
+                throw new InvalidNodeTypeDefinitionException(msg, e);
-                throw new InvalidNodeTypeDefException(msg, e);
+                throw new InvalidNodeTypeDefinitionException(msg, e);
-     * @throws InvalidNodeTypeDefException
+     * @throws InvalidNodeTypeDefinitionException
-        throws InvalidNodeTypeDefException, RepositoryException {
+        throws InvalidNodeTypeDefinitionException, RepositoryException {
-                throw new InvalidNodeTypeDefException("circular inheritance detected: " + buf.toString());
+                throw new InvalidNodeTypeDefinitionException("circular inheritance detected: " + buf.toString());
-                throw new InvalidNodeTypeDefException("Unknown supertype: " + stName);
+                throw new InvalidNodeTypeDefinitionException("Unknown supertype: " + stName);
-     * @throws InvalidNodeTypeDefException
+     * @throws InvalidNodeTypeDefinitionException
-        throws InvalidNodeTypeDefException {
+        throws InvalidNodeTypeDefinitionException {
-                throw new InvalidNodeTypeDefException("circular node auto-creation detected: "
+                throw new InvalidNodeTypeDefinitionException("circular node auto-creation detected: "
-                throw new InvalidNodeTypeDefException(msg, e);
+                throw new InvalidNodeTypeDefinitionException(msg, e);
-                throw new InvalidNodeTypeDefException(msg, e);
+                throw new InvalidNodeTypeDefinitionException(msg, e);

MOV26 UPD40 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42