Cleaned up code by removing too fine-grained exception declarations.
The rationale for this is that internally the JCR-RMI layer only cares about
the RepositoryException/RemoteException difference.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155801 13f79535-47bb-0310-9956-ffa450edef68

-        if (remotes == null) {
+        if (remotes != null) {
+            Property[] properties = new Property[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                properties[i] = factory.getProperty(session, remotes[i]);
+            }
+            return new ArrayPropertyIterator(properties);
+        } else {
-
-        Property[] properties = new Property[remotes.length];
-        for (int i = 0; i < remotes.length; i++) {
-            properties[i] = factory.getProperty(session, remotes[i]);
-        }
-        return new ArrayPropertyIterator(properties);
-        if (remotes == null) {
+        if (remotes != null) {
+            Node[] nodes = new Node[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                nodes[i] = factory.getNode(session, remotes[i]);
+            }
+            return new ArrayNodeIterator(nodes);
+        } else {
-
-        Node[] nodes = new Node[remotes.length];
-        for (int i = 0; i < remotes.length; i++) {
-            nodes[i] = factory.getNode(session, remotes[i]);
-        }
-        return new ArrayNodeIterator(nodes);
-        if (remotes == null) {
+        if (remotes != null) {
+            NodeType[] types = new NodeType[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                types[i] = factory.getNodeType(remotes[i]);
+            }
+            return types;
+        } else {
-
-        NodeType[] types = new NodeType[remotes.length];
-        for (int i = 0; i < remotes.length; i++) {
-            types[i] = factory.getNodeType(remotes[i]);
-        }
-        return types;
-        if (remotes == null) {
+        if (remotes != null) {
+            NodeDef[] defs = new NodeDef[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                defs[i] = factory.getNodeDef(remotes[i]);
+            }
+            return defs;
+        } else {
-
-        NodeDef[] defs = new NodeDef[remotes.length];
-        for (int i = 0; i < remotes.length; i++) {
-            defs[i] = factory.getNodeDef(remotes[i]);
-        }
-        return defs;
-        if (remotes == null) {
+        if (remotes != null) {
+            PropertyDef[] defs = new PropertyDef[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                defs[i] = factory.getPropertyDef(remotes[i]);
+            }
+            return defs;
+        } else {
-
-        PropertyDef[] defs = new PropertyDef[remotes.length];
-        for (int i = 0; i < remotes.length; i++) {
-            defs[i] = factory.getPropertyDef(remotes[i]);
-        }
-        return defs;

UPD27 INS8 UPD27 INS8 UPD27 INS8 UPD27 INS8 UPD27 INS8 MOV60 MOV24 MOV41 MOV60 MOV24 MOV41 MOV60 MOV24 MOV41 MOV60 MOV24 MOV41 MOV60 MOV24 MOV41