re-implementing Workspace methods clone, copy, importXML [work in progress...]
plus various minor fixes and cosmetical changes



git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158927 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.InternalValue;
-import javax.jcr.StringValue;
-import javax.jcr.Value;
-                Value[] values =
-                        new Value[]{new StringValue(text.toString())};
+                InternalValue[] values = new InternalValue[1];
+                values[0] = InternalValue.create(text.toString());
-                        new Importer.PropInfo(JCR_XMLCHARACTERS, PropertyType.STRING, values);
+                        new Importer.PropInfo(JCR_XMLCHARACTERS,
+                                PropertyType.STRING, values);
-                        throw new SAXException("illegal property name: " + atts.getQName(i), ine);
+                        throw new SAXException("illegal property name: "
+                                + atts.getQName(i), ine);
-                        throw new SAXException("illegal property name: " + atts.getQName(i), upe);
+                        throw new SAXException("illegal property name: "
+                                + atts.getQName(i), upe);
-                Value[] propValues;
+                InternalValue[] propValues;
-                    propValues[j] = new StringValue(strings[j]);
+                    propValues[j] = InternalValue.create(strings[j]);
-                    try {
-                        nodeTypeName = QName.fromJCRName(attrValue, nsContext);
-                    } catch (BaseException be) {
-                        throw new SAXException("illegal jcr:primaryType value: " + attrValue, be);
+                    if (attrValue.length() > 0) {
+                        try {
+                            nodeTypeName = QName.fromJCRName(attrValue, nsContext);
+                        } catch (BaseException be) {
+                            throw new SAXException("illegal jcr:primaryType value: "
+                                    + attrValue, be);
+                        }
-                    try {
-                        mixinTypes = new QName[]{QName.fromJCRName(attrValue, nsContext)};
-                    } catch (BaseException be) {
-                        throw new SAXException("illegal jcr:mixinTypes value: " + attrValue, be);
+                    if (attrValue.length() > 0) {
+                        try {
+                            mixinTypes =
+                                    new QName[]{QName.fromJCRName(attrValue, nsContext)};
+                        } catch (BaseException be) {
+                            throw new SAXException("illegal jcr:mixinTypes value: "
+                                    + attrValue, be);
+                        }
-                    uuid = attrValue;
+                    if (attrValue.length() > 0) {
+                        uuid = attrValue;
+                    }
-                    propValues = new Value[]{new StringValue(atts.getValue(i))};
-                    props.add(new Importer.PropInfo(propName, PropertyType.STRING, propValues));
+                    propValues = new InternalValue[1];
+                    propValues[0] = InternalValue.create(atts.getValue(i));
+                    props.add(new Importer.PropInfo(propName,
+                            PropertyType.UNDEFINED, propValues));

MOV26 UPD40 INS21 UPD5 INS7 UPD5 INS8 UPD43 INS2 INS32 UPD43 INS25 INS8 UPD42 UPD5 INS34 INS42 INS34 INS42 INS42 MOV32 UPD42 INS27 MOV8 INS25 INS8 UPD43 INS32 INS34 INS27 MOV8 INS25 INS21 UPD42 INS42 INS42 INS32 INS34 INS27 MOV8 INS7 INS42 INS42 INS32 INS34 INS2 INS32 INS42 INS42 UPD5 INS34 INS42 INS34 INS42 INS42 MOV32 UPD40 UPD43 UPD42 DEL40 DEL26 DEL42 DEL43 DEL14 DEL4 DEL42 DEL43 DEL14 DEL4