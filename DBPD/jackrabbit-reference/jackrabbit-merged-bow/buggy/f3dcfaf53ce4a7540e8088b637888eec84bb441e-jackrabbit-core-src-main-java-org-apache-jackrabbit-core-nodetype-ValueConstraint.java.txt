JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.MalformedPathException;
-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.PathFormat;
-import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.conversion.MalformedPathException;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.Name;
+import javax.jcr.NamespaceException;
+     * @param resolver
-    public String getDefinition(NamespaceResolver nsResolver) {
+    public String getDefinition(NamePathResolver resolver) {
-                                         NamespaceResolver nsResolver)
+                                         NamePathResolver resolver)
-                return new NameConstraint(definition, nsResolver);
+                return new NameConstraint(definition, resolver);
-                return new PathConstraint(definition, nsResolver);
+                return new PathConstraint(definition, resolver);
-                return new ReferenceConstraint(definition, nsResolver);
+                return new ReferenceConstraint(definition, resolver);
-    PathConstraint(String definition, NamespaceResolver nsResolver)
+    PathConstraint(String definition, NamePathResolver resolver)
-            path = PathFormat.parse(definition, nsResolver);
-        } catch (MalformedPathException mpe) {
+            path = resolver.getQPath(definition);
+        } catch (NameException e) {
-            throw new InvalidConstraintException(msg, mpe);
+            throw new InvalidConstraintException(msg, e);
+        } catch (NamespaceException e) {
+            String msg = "invalid path expression specified as value constraint: "
+                    + definition;
+            log.debug(msg);
+            throw new InvalidConstraintException(msg, e);
-    public String getDefinition(NamespaceResolver nsResolver) {
+    public String getDefinition(NamePathResolver resolver) {
-            String p = PathFormat.format(path, nsResolver);
+            String p = resolver.getJCRPath(path);
-        } catch (NoPrefixDeclaredException npde) {
+        } catch (NamespaceException e) {
-    final QName name;
+    final Name name;
-    NameConstraint(String definition, NamespaceResolver nsResolver)
+    NameConstraint(String definition, NamePathResolver resolver)
-            NameFormat.checkFormat(definition);
-            name = NameFormat.parse(definition, nsResolver);
+            name = resolver.getQName(definition);
+        } catch (NamespaceException e) {
+            String msg = "invalid name specified as value constraint: "
+                    + definition;
+            log.debug(msg);
+            throw new InvalidConstraintException(msg, e);
-    public String getDefinition(NamespaceResolver nsResolver) {
+    public String getDefinition(NamePathResolver resolver) {
-            return NameFormat.format(name, nsResolver);
-        } catch (NoPrefixDeclaredException npde) {
+            return resolver.getJCRName(name);
+        } catch (NamespaceException e) {
-                QName n = value.getQName();
+                Name n = value.getQName();
-    final QName ntName;
+    final Name ntName;
-    ReferenceConstraint(String definition, NamespaceResolver nsResolver) throws InvalidConstraintException {
+    ReferenceConstraint(String definition, NamePathResolver resolver) throws InvalidConstraintException {
-            ntName = NameFormat.parse(definition, nsResolver);
+            ntName = resolver.getQName(definition);
+        } catch (NamespaceException e) {
+            String msg = "invalid node type name specified as value constraint: "
+                    + definition;
+            log.debug(msg);
+            throw new InvalidConstraintException(msg, e);
-    public String getDefinition(NamespaceResolver nsResolver) {
+    public String getDefinition(NamePathResolver resolver) {
-            return NameFormat.format(ntName, nsResolver);
-        } catch (NoPrefixDeclaredException npde) {
+            return resolver.getJCRName(ntName);
+        } catch (NamespaceException e) {
-    QName getNodeTypeName() {
+    Name getNodeTypeName() {

MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD43 UPD43 INS65 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 INS12 UPD42 UPD42 INS8 INS12 UPD42 UPD42 INS12 UPD42 INS44 INS8 MOV21 INS44 INS8 UPD43 INS44 INS8 UPD42 UPD42 UPD42 UPD43 UPD42 INS43 INS42 INS60 INS21 INS53 UPD43 UPD42 INS7 INS43 INS42 INS60 INS21 INS53 UPD43 UPD42 UPD42 INS43 INS42 INS60 INS21 INS53 UPD43 UPD42 UPD42 INS42 INS43 INS59 INS32 INS14 UPD42 INS42 INS32 INS42 INS43 INS59 INS32 INS14 UPD42 UPD42 UPD42 INS42 INS43 INS59 INS32 INS14 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS27 UPD42 MOV42 INS42 INS42 INS43 INS42 INS42 UPD42 UPD42 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42