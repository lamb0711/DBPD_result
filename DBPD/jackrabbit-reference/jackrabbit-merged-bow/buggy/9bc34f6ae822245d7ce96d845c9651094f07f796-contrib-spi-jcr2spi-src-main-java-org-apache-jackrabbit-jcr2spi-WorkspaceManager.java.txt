- new interface EffectiveNodeTypeProvider
- new interface ItemDefinitionProvider
- limit access to NodeTypeRegistry and simplify the NodeTypeRegistry
  interface.
- avoid duplicate code dealing with logic of EffectiveNodeType
  and retrieval of QItemDefinitions.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520408 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.nodetype.ItemDefinitionProvider;
+import org.apache.jackrabbit.jcr2spi.nodetype.ItemDefinitionProviderImpl;
+import org.apache.jackrabbit.jcr2spi.nodetype.EffectiveNodeTypeProvider;
+    private final ItemDefinitionProvider definitionProvider;
-        ntRegistry = createNodeTypeRegistry(nsRegistry, repositoryDescriptors);
+        QNodeDefinition rootNodeDef = service.getNodeDefinition(sessionInfo, service.getRootId(sessionInfo));
+        ntRegistry = createNodeTypeRegistry(rootNodeDef, nsRegistry, repositoryDescriptors);
+        definitionProvider = createDefinitionProvider(rootNodeDef, getEffectiveNodeTypeProvider());
+    public ItemDefinitionProvider getItemDefinitionProvider() {
+        return definitionProvider;
+    }
+
+    public EffectiveNodeTypeProvider getEffectiveNodeTypeProvider() {
+        return (NodeTypeRegistryImpl) ntRegistry;
+    }
+
-        ItemStateFactory isf = new WorkspaceItemStateFactory(service, sessionInfo, this);
-        TransientItemStateFactory tisf = new TransientISFactory(isf, ntReg);
+        ItemStateFactory isf = new WorkspaceItemStateFactory(service, sessionInfo, getItemDefinitionProvider());
+        TransientItemStateFactory tisf = new TransientISFactory(isf, getItemDefinitionProvider());
-    private NodeTypeRegistry createNodeTypeRegistry(NamespaceRegistry nsRegistry, Map descriptors) throws RepositoryException {
-        QNodeDefinition rootNodeDef = service.getNodeDefinition(sessionInfo, service.getRootId(sessionInfo));
+    private NodeTypeRegistry createNodeTypeRegistry(QNodeDefinition rootNodeDef, NamespaceRegistry nsRegistry, Map descriptors) throws RepositoryException {
+     *
+     * @param ntReg
+     * @return
+     */
+    private ItemDefinitionProvider createDefinitionProvider(QNodeDefinition rootDefinition, EffectiveNodeTypeProvider entProvider) {
+        return new ItemDefinitionProviderImpl(rootDefinition, entProvider, service, sessionInfo);
+    }
+
+    /**

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS44 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS42 MOV60 INS21 INS42 INS41 INS42 INS41 INS43 INS42 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS7 INS42 INS11 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL52 DEL42