JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.namespace.NamespaceResolver;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.conversion.NamePathResolver;
+     * the current name/path resolver
+     */
+    private final NamePathResolver npResolver;
+
+    /**
+     * @param npResolver
-    public CompactNodeTypeDefWriter(Writer out, NamespaceResolver r) {
-        this(out, r, false);
+    public CompactNodeTypeDefWriter(Writer out, NamespaceResolver r, NamePathResolver npResolver) {
+        this(out, r, npResolver, false);
+     * @param npResolver
-     *        written.
-    public CompactNodeTypeDefWriter(Writer out, NamespaceResolver r, boolean includeNS) {
+    public CompactNodeTypeDefWriter(Writer out, NamespaceResolver r, NamePathResolver npResolver, boolean includeNS) {
+        this.npResolver = npResolver;
+     * @param npResolver
-    public static void write(List l, NamespaceResolver r, Writer out)
+    public static void write(List l, NamespaceResolver r, NamePathResolver npResolver, Writer out)
-        CompactNodeTypeDefWriter w = new CompactNodeTypeDefWriter(out, r, true);
+        CompactNodeTypeDefWriter w = new CompactNodeTypeDefWriter(out, r, npResolver, true);
-        QName[] sta = ntd.getSupertypes();
+        Name[] sta = ntd.getSupertypes();
-                    out.write(escape(dva[i].toJCRValue(resolver).getString()));
+                    out.write(escape(dva[i].toJCRValue(npResolver).getString()));
-            String vc = vca[0].getDefinition(resolver);
+            String vc = vca[0].getDefinition(npResolver);
-                vc = vca[i].getDefinition(resolver);
+                vc = vca[i].getDefinition(npResolver);
-        QName name = nd.getName();
+        Name name = nd.getName();
-    private void writeItemDefName(QName name) throws IOException {
+    private void writeItemDefName(Name name) throws IOException {
-    private void writeRequiredTypes(QName[] reqTypes) throws IOException {
+    private void writeRequiredTypes(Name[] reqTypes) throws IOException {
-    private void writeDefaultType(QName defType) throws IOException {
+    private void writeDefaultType(Name defType) throws IOException {
-    private String resolve(QName qname) throws IOException {
+    private String resolve(Name qname) throws IOException {
-            if (prefix != null && !prefix.equals(QName.NS_EMPTY_PREFIX)) {
+            if (prefix != null && !prefix.equals(Name.NS_EMPTY_PREFIX)) {
-            String resolvedName = prefix + ISO9075.encode(qname).getLocalName();
+            String encLocalName = ISO9075.encode(qname.getLocalName());
+            String resolvedName = prefix + encLocalName;

INS26 UPD40 UPD40 INS40 INS23 INS29 INS83 INS83 INS43 INS59 INS44 INS44 INS44 INS65 INS42 INS42 INS65 INS43 INS42 INS65 INS43 INS42 INS21 INS65 INS43 INS42 UPD43 UPD5 UPD43 UPD43 INS66 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 MOV43 UPD5 UPD43 UPD42 UPD43 UPD42 UPD42 INS22 INS42 UPD43 UPD42 UPD42 INS60 INS52 INS42 MOV43 INS42 UPD42 INS43 INS59 UPD42 INS32 INS42 INS42 INS27 UPD42 MOV42 MOV42 INS32 INS42 INS42 UPD40 MOV42 MOV42 UPD42 UPD42 DEL66 DEL42 DEL32 DEL32 DEL27