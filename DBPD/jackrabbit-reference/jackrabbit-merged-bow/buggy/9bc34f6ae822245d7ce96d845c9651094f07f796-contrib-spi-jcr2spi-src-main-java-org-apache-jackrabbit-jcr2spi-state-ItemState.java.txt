- new interface EffectiveNodeTypeProvider
- new interface ItemDefinitionProvider
- limit access to NodeTypeRegistry and simplify the NodeTypeRegistry
  interface.
- avoid duplicate code dealing with logic of EffectiveNodeType
  and retrieval of QItemDefinitions.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520408 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.nodetype.EffectiveNodeType;
-import org.apache.jackrabbit.jcr2spi.nodetype.NodeTypeRegistry;
-import org.apache.jackrabbit.jcr2spi.nodetype.NodeTypeConflictException;
+import org.apache.jackrabbit.jcr2spi.nodetype.ItemDefinitionProvider;
-    // TODO: find better solution..... needed to retrieve definition.
-    private final NodeTypeRegistry ntReg;
+    final ItemDefinitionProvider definitionProvider;
-                        ItemStateFactory isf, NodeTypeRegistry ntReg) {
+                        ItemStateFactory isf, ItemDefinitionProvider definitionProvider) {
-        this.ntReg = ntReg;
+        this.definitionProvider = definitionProvider;
-        this.ntReg = overlayedState.ntReg;
+        this.definitionProvider = overlayedState.definitionProvider;
-
-    EffectiveNodeType getEffectiveParentNodeType() throws RepositoryException {
-        try {
-            /*
-            for NEW-states the definition is always set upon creation.
-            for all other states the definion must be retrieved only taking
-            the effective nodetypes present on the parent into account
-            any kind of transiently added mixins must not have an effect
-            on the definition retrieved for an state that has been persisted
-            before. The effective NT must be evaluated as if it had been
-            evaluated upon creating the workspace state.
-            */
-            return getNodeTypeRegistry().getEffectiveNodeType(getParent().getNodeTypeNames());
-        } catch (NodeTypeConflictException e) {
-            throw new RepositoryException("Error while accessing Definition ", e);
-        }
-    }
-
-    NodeTypeRegistry getNodeTypeRegistry() {
-        return ntReg;
-    }

UPD40 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD40 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31