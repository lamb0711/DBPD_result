JCR-2140: Baselines & Configurations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@797094 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Arrays;
-import java.util.HashSet;
-            if (child.getState().getMixinTypeNames().contains(NameConstants.REP_BASELINE)) {
-                v = new InternalBaselineImpl(this, child, child.getName());
-            } else {
-                v = new InternalVersionImpl(this, child, child.getName());
+            try {
+                NodeStateEx frozen = child.getNode(NameConstants.JCR_FROZENNODE, 1);
+                Name frozenType = frozen.getPropertyValue(NameConstants.JCR_FROZENPRIMARYTYPE).getName();
+                if (NameConstants.NT_CONFIGURATION.equals(frozenType)) {
+                    v = new InternalBaselineImpl(this, child, child.getName());
+                } else {
+                    v = new InternalVersionImpl(this, child, child.getName());
+                }
+            } catch (RepositoryException e) {
+                throw new InternalError("Version does not have a jcr:frozenNode: " + child.getNodeId());
-     * @param configuration the set of versions in case a configuration is checked in
-    InternalVersionImpl checkin(Name name, NodeStateEx src, Set<NodeId> configuration)
+    InternalVersionImpl checkin(Name name, NodeStateEx src)
-        // check configuration
-        if (configuration != null) {
-            vNode.setMixins(new HashSet<Name>(Arrays.asList(NameConstants.REP_BASELINE)));
-            InternalValue[] values = new InternalValue[configuration.size()];
-            int i=0;
-            for (NodeId id: configuration) {
-                values[i++] = InternalValue.create(id);
-            }
-            vNode.setPropertyValues(NameConstants.REP_BASEVERSIONS, PropertyType.REFERENCE, values, true);
-        }
-        InternalVersionImpl version = configuration == null
-                ? new InternalVersionImpl(this, vNode, name)
-                : new InternalBaselineImpl(this, vNode, name);
+        boolean isConfiguration = src.getEffectiveNodeType().includesNodeType(NameConstants.NT_CONFIGURATION);
+        InternalVersionImpl version = isConfiguration
+                ? new InternalBaselineImpl(this, vNode, name)
+                : new InternalVersionImpl(this, vNode, name);
-        if (nodeState.getNodeTypeName().equals(NameConstants.NT_CONFIGURATION)) {
-            // add baseline mixin for configurations
-            vNode.setMixins(new HashSet<Name>(Arrays.asList(NameConstants.REP_BASELINE)));
-        }

INS60 INS8 UPD39 MOV39 INS59 INS54 INS42 INS32 MOV14 MOV8 INS12 INS32 UPD42 MOV42 UPD40 MOV40 INS42 INS60 INS60 INS44 INS8 UPD42 MOV42 UPD42 MOV42 INS43 INS59 MOV43 INS59 INS32 INS43 INS42 INS53 INS42 INS42 INS32 INS42 INS32 INS40 UPD42 MOV42 UPD42 MOV42 INS42 INS14 INS42 INS42 INS40 INS34 INS32 INS42 INS43 INS27 INS42 INS42 INS40 INS42 INS45 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL32 DEL42 DEL40 DEL32 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL43 DEL74 DEL42 DEL42 DEL40 DEL32 DEL14 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL59 DEL60 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL37 DEL2 DEL42 DEL32 DEL7 DEL21 DEL8 DEL70 DEL42 DEL40 DEL42 DEL9 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL40 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25