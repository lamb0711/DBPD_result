JCR-820: Add support for query result highlighting
- initial version

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@523251 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+     * If set to <code>true</code> the fulltext field is stored and and a term
+     * vector is created with offset information.
+     */
+    protected boolean supportHighlighting = false;
+
+    /**
+     * If set to <code>true</code> additional information is stored in the index
+     * to support highlighting using the rep:excerpt pseudo property.
+     *
+     * @param b <code>true</code> to enable highlighting support.
+     */
+    public void setSupportHighlighting(boolean b) {
+        supportHighlighting = b;
+    }
+
+    /**
-                doc.add(new Field(FieldNames.FULLTEXT, reader));
+                doc.add(createFulltextField(reader));
-            doc.add(new Field(FieldNames.FULLTEXT,
-                    stringValue,
-                    Field.Store.NO,
-                    Field.Index.TOKENIZED,
-                    Field.TermVector.NO));
+            doc.add(createFulltextField(stringValue));
+
+    /**
+     * Creates a fulltext field for the string <code>value</code>.
+     *
+     * @param value the string value.
+     * @return a lucene field.
+     */
+    protected Field createFulltextField(String value) {
+        if (supportHighlighting) {
+            // store field compressed if greater than 16k
+            Field.Store stored;
+            if (value.length() > 0x4000) {
+                stored = Field.Store.COMPRESS;
+            } else {
+                stored = Field.Store.YES;
+            }
+            return new Field(FieldNames.FULLTEXT, value, stored,
+                    Field.Index.TOKENIZED, Field.TermVector.WITH_OFFSETS);
+        } else {
+            return new Field(FieldNames.FULLTEXT, value,
+                    Field.Store.NO, Field.Index.TOKENIZED);
+        }
+    }
+
+    /**
+     * Creates a fulltext field for the reader <code>value</code>.
+     *
+     * @param value the reader value.
+     * @return a lucene field.
+     */
+    protected Field createFulltextField(Reader value) {
+        if (supportHighlighting) {
+            // need to create a string value
+            StringBuffer textExtract = new StringBuffer();
+            char[] buffer = new char[1024];
+            int len;
+            try {
+                while ((len = value.read(buffer)) > -1) {
+                    textExtract.append(buffer, 0, len);
+                }
+            } catch (IOException e) {
+                log.warn("Exception reading value for fulltext field: " +
+                        e.getMessage());
+                log.debug("Dump:", e);
+            } finally {
+                try {
+                    value.close();
+                } catch (IOException e) {
+                    // ignore
+                }
+            }
+            return createFulltextField(textExtract.toString());
+        } else {
+            return new Field(FieldNames.FULLTEXT, value);
+        }
+    }

INS26 INS40 INS23 INS31 INS31 INS31 INS29 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS65 INS42 INS9 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS66 INS66 INS66 INS66 INS42 INS66 INS7 INS66 INS42 INS66 INS66 INS42 INS42 INS8 INS8 INS66 INS42 INS66 INS66 INS42 INS42 INS8 INS8 INS42 INS42 INS60 INS25 INS41 INS41 INS60 INS60 INS60 INS54 INS41 INS41 INS43 INS59 INS27 INS8 INS8 INS14 INS14 INS43 INS59 INS5 INS59 INS39 INS59 INS8 INS12 INS8 INS32 INS14 INS32 INS40 INS42 INS32 INS34 INS21 INS21 MOV43 INS40 INS42 INS42 INS40 INS40 MOV43 INS40 INS42 INS40 INS40 INS42 INS42 INS14 INS39 INS85 INS42 INS3 INS42 INS61 INS44 INS8 INS54 INS42 INS32 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS43 INS5 INS34 INS27 INS8 INS43 INS42 INS21 INS21 INS8 INS12 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS40 INS42 INS39 INS85 INS36 INS38 INS21 INS42 INS32 INS32 INS21 INS44 INS8 INS42 INS42 INS7 INS34 INS32 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS32 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL42 DEL14 DEL40 DEL42 DEL40 DEL40 DEL40 DEL14