reworked transaction support, contributed by dominique

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@151380 13f79535-47bb-0310-9956-ffa450edef68

-                NodeId id = NodeId.valueOf(s);
+                NodeReferencesId id = (NodeReferencesId) NodeReferencesId.valueOf(s);
-                NodeId id = (NodeId) iterKeys.next();
+                NodeReferencesId id = (NodeReferencesId) iterKeys.next();
-    public synchronized NodeState load(String uuid)
+    public synchronized NodeState load(NodeId id)
-        NodeId id = new NodeId(uuid);
-
-            NodeState state = createNew(uuid, null, null);
+            NodeState state = createNew(id);
-    public synchronized PropertyState load(QName name, String parentUUID)
+    public synchronized PropertyState load(PropertyId id)
-        PropertyId id = new PropertyId(parentUUID, name);
-
-            PropertyState state = createNew(name, parentUUID);
+            PropertyState state = createNew(id);
-    public synchronized NodeReferences load(NodeId targetId)
+    public synchronized NodeReferences load(NodeReferencesId id)
-        byte[] data = (byte[]) refsStore.get(targetId);
+        byte[] data = (byte[]) refsStore.get(id);
-            throw new NoSuchItemStateException(targetId.toString());
+            throw new NoSuchItemStateException(id.getUUID());
-            NodeReferences refs = new NodeReferences(targetId);
+            NodeReferences refs = new NodeReferences(id);
-            String msg = "failed to load references: " + targetId;
+            String msg = "failed to load references: " + id.getUUID();
-     * @see PersistenceManager#exists(ItemId id)
+     * @see PersistenceManager#exists(PropertyId id)
-    public boolean exists(ItemId id) throws ItemStateException {
+    public boolean exists(PropertyId id) throws ItemStateException {
-
-     * @see PersistenceManager#referencesExist(NodeId targetId)
+     * @see PersistenceManager#exists(PropertyId id)
-    public boolean referencesExist(NodeId targetId) throws ItemStateException {
+    public boolean exists(NodeId id) throws ItemStateException {
+        return stateStore.containsKey(id);
+    }
-        return refsStore.containsKey(targetId);
+    /**
+     * @see PersistenceManager#exists(NodeReferencesId targetId)
+     */
+    public boolean exists(NodeReferencesId id) throws ItemStateException {
+        if (!initialized) {
+            throw new IllegalStateException("not initialized");
+        }
+        return refsStore.containsKey(id);

INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 MOV43 UPD42 MOV43 INS42 UPD43 UPD42 INS65 INS43 INS42 INS42 INS25 INS41 UPD43 UPD43 UPD42 UPD42 INS68 INS42 INS38 INS8 INS32 UPD42 UPD42 INS42 INS42 INS69 INS42 INS53 INS42 INS42 INS42 UPD42 UPD42 MOV43 MOV43 INS42 INS14 UPD43 UPD43 UPD42 INS43 INS45 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 MOV43 UPD42 INS42 UPD42 INS11 UPD42 INS32 INS43 INS32 UPD43 INS42 INS42 INS42 UPD42 MOV42 MOV42 MOV42 UPD42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL33 DEL33 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42