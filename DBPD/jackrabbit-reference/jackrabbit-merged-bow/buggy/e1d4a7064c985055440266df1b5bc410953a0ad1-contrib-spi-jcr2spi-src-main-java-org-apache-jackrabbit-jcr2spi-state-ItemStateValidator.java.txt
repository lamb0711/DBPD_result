JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.NamespaceResolver;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.PathFactory;
+    private final PathFactory pathFactory;
-    public ItemStateValidator(ManagerProvider mgrProvider) {
+    public ItemStateValidator(ManagerProvider mgrProvider, PathFactory pathFactory) {
+        this.pathFactory = pathFactory;
-        QName[] requiredPrimaryTypes = def.getRequiredPrimaryTypes();
+        Name[] requiredPrimaryTypes = def.getRequiredPrimaryTypes();
-            if (!nodeState.hasPropertyName(pd.getQName())) {
+            if (!nodeState.hasPropertyName(pd.getName())) {
-                        + ": mandatory property " + pd.getQName()
+                        + ": mandatory property " + pd.getName()
-            if (!nodeState.getNodeEntry().hasNodeEntry(cnd.getQName())) {
+            if (!nodeState.getNodeEntry().hasNodeEntry(cnd.getName())) {
-                        + ": mandatory child node " + cnd.getQName()
+                        + ": mandatory child node " + cnd.getName()
-     * @see LogUtil#safeGetJCRPath(ItemState,NamespaceResolver)
+     * @see LogUtil#safeGetJCRPath(ItemState,org.apache.jackrabbit.conversion.PathResolver)
-        return LogUtil.safeGetJCRPath(itemState, mgrProvider.getNamespaceResolver());
+        return LogUtil.safeGetJCRPath(itemState, mgrProvider.getPathResolver());
-        checkWriteProperty(parent, propState.getQName(), def, options);
+        checkWriteProperty(parent, propState.getName(), def, options);
-    public void checkAddProperty(NodeState parentState, QName propertyName, QPropertyDefinition definition, int options)
+    public void checkAddProperty(NodeState parentState, Name propertyName, QPropertyDefinition definition, int options)
-    private void checkWriteProperty(NodeState parentState, QName propertyName, QPropertyDefinition definition, int options)
+    private void checkWriteProperty(NodeState parentState, Name propertyName, QPropertyDefinition definition, int options)
-            Path relPath = Path.create(propertyName, Path.INDEX_UNDEFINED);
+            Path relPath = pathFactory.create(propertyName);
-    public void checkAddNode(NodeState parentState, QName nodeName,
-                             QName nodeTypeName, int options)
+    public void checkAddNode(NodeState parentState, Name nodeName,
+                             Name nodeTypeName, int options)
-            Path relPath = Path.create(nodeName, Path.INDEX_UNDEFINED);
+            Path relPath = pathFactory.create(nodeName);
-    private void checkCollision(NodeState parentState, QName propertyName) throws ItemExistsException, RepositoryException {
+    private void checkCollision(NodeState parentState, Name propertyName) throws ItemExistsException, RepositoryException {
-                throw new ItemExistsException("Property '" + pe.getQName() + "' already exists.");
+                throw new ItemExistsException("Property '" + pe.getName() + "' already exists.");
-    private void checkCollision(NodeState parentState, QName nodeName, QName nodeTypeName) throws RepositoryException, ConstraintViolationException, NoSuchNodeTypeException {
+    private void checkCollision(NodeState parentState, Name nodeName, Name nodeTypeName) throws RepositoryException, ConstraintViolationException, NoSuchNodeTypeException {

UPD40 UPD40 UPD40 INS23 INS83 INS83 INS43 INS59 INS44 INS42 INS42 INS43 INS42 INS21 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS42 INS7 UPD5 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS22 INS42 UPD43 INS52 INS42 UPD42 UPD43 UPD42 UPD42 INS40 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL40 DEL40