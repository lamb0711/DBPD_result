Add more timing debug information to memberOf() related calls


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1517711 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * The initial size of this cache (TODO: make configurable)
+     */
+    private static final int MAX_INITIAL_CACHE_SIZE = 1024;
+
+    /**
+     * The maximum size of this cache (TODO: make configurable)
+     */
+    private static final int MAX_CACHE_SIZE = 5000;
+
-        cache = new GrowingLRUMap(1024, 5000);
+        cache = new GrowingLRUMap(MAX_INITIAL_CACHE_SIZE, MAX_CACHE_SIZE);
+        log.debug("Membership cache initialized. Max Size = {}", MAX_CACHE_SIZE);
+            log.debug("Membership cache cleared because of observation event.");
+     * Returns the size of the membership cache
+     * @return the size
+     */
+    synchronized int getSize() {
+        return cache.size();
+    }
+
+    /**
+        final long t0 = System.nanoTime();
+
+
+        final long t1 = System.nanoTime();
+        if (log.isDebugEnabled()) {
+            log.debug("  collected {} groups for {} via references in {}us", new Object[]{
+                    groupNodeIds == null ? -1 : groupNodeIds.size(),
+                    authorizableNodeIdentifier,
+                    (t1-t0) / 1000
+            });
+        }
+
+
+            final long t2 = System.nanoTime();
+            if (log.isDebugEnabled()) {
+                log.debug("  collected {} groups for {} via traversal in {}us", new Object[]{
+                        groupNodeIds == null ? -1 : groupNodeIds.size(),
+                        authorizableNodeIdentifier,
+                        (t2-t1) / 1000
+                });
+            }
+        final long t0 = System.nanoTime();
+
+
+        boolean wasCached = true;
+            wasCached = false;
+
+        if (log.isDebugEnabled()) {
+            final long t1 = System.nanoTime();
+            log.debug("Membership cache {} {} declared memberships of {} in {}us. cache size = {}", new Object[]{
+                    wasCached ? "returns" : "collected",
+                    groupNodeIds.size(),
+                    authorizableNodeIdentifier,
+                    (t1-t0) / 1000,
+                    cache.size()
+            });
+        }

INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS8 INS8 INS65 INS42 INS34 INS65 INS42 INS34 INS21 INS65 INS65 INS41 INS60 MOV60 INS60 INS25 INS25 MOV41 INS60 INS60 INS25 INS66 INS66 INS32 INS66 INS66 INS32 INS83 INS39 INS59 INS83 INS39 INS59 INS32 INS8 MOV27 INS8 INS83 INS39 INS59 INS39 INS59 INS32 INS8 INS42 INS42 INS45 INS42 INS21 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS21 MOV21 INS60 MOV25 INS42 INS32 INS42 INS9 INS21 INS42 INS42 INS60 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS83 INS39 INS59 INS32 INS42 INS42 INS7 INS83 INS39 INS59 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS3 INS42 INS32 INS42 INS42 INS21 INS42 INS9 INS42 INS32 INS42 INS42 INS45 INS3 INS5 INS4 INS42 INS42 INS32 INS42 INS42 INS5 INS4 INS43 INS85 INS16 INS42 INS27 INS42 INS42 INS45 INS3 INS43 INS85 INS16 INS32 INS42 INS27 INS32 INS42 INS27 INS38 INS32 INS36 INS34 INS5 INS4 INS42 INS42 INS45 INS45 INS42 INS42 INS36 INS34 INS42 INS42 INS42 INS33 INS34 INS42 INS42 INS27 INS43 INS85 INS16 INS42 INS27 INS27 INS42 INS42 INS42 INS27 INS38 INS32 INS36 INS34 INS42 INS42 INS42 INS33 INS34 INS42 INS42 INS27 INS42 INS42 DEL34 DEL34 DEL8