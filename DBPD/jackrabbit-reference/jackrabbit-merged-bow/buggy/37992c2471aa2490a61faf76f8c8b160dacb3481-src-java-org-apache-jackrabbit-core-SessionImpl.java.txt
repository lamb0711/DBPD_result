first implementation of jta support

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55234 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.config.WorkspaceConfig;
+import org.apache.jackrabbit.core.observation.EventStateCollection;
+import org.apache.jackrabbit.core.state.PersistentItemStateProvider;
-import org.apache.jackrabbit.core.config.WorkspaceConfig;
-     * Package private constructor.
+     * Protected constructor.
-    SessionImpl(RepositoryImpl rep, Credentials credentials, WorkspaceConfig wspConfig)
+    protected SessionImpl(RepositoryImpl rep, Credentials credentials,
+                          WorkspaceConfig wspConfig)
-        itemStateMgr = new SessionItemStateManager(rep.getRootNodeUUID(), wsp.getPersistentStateManager(), getNamespaceResolver());
+
+        itemStateMgr = createSessionItemStateManager(wsp.getPersistentStateManager());
-        itemMgr = new ItemManager(itemStateMgr, hierMgr, this, ntMgr.getRootNodeDefinition(), rep.getRootNodeUUID());
-        accessMgr = new AccessManagerImpl(credentials, hierMgr, getNamespaceResolver());
+        itemMgr = createItemManager(itemStateMgr, hierMgr);
+        accessMgr = createAccessManager(credentials, hierMgr);
-        itemMgr = new ItemManager(itemStateMgr, hierMgr, this, ntMgr.getRootNodeDefinition(), rep.getRootNodeUUID());
+        itemMgr = createItemManager(itemStateMgr, hierMgr);
+    }
+
+    /**
+     * Create the session item state manager.
+     *
+     * @return session item state manager
+     */
+    protected SessionItemStateManager createSessionItemStateManager(PersistentItemStateProvider provider) {
+
+        return new SessionItemStateManager(rep.getRootNodeUUID(), provider, getNamespaceResolver());
+    }
+
+    /**
+     * Create the item manager.
+     *
+     * @return item manager
+     */
+    protected ItemManager createItemManager(SessionItemStateManager itemStateMgr,
+                                            HierarchyManager hierMgr) {
+
+        return new ItemManager(itemStateMgr, hierMgr, this,
+                ntMgr.getRootNodeDefinition(), rep.getRootNodeUUID());
+    }
+
+    /**
+     * Create the access manager.
+     *
+     * @return access manager
+     */
+    protected AccessManagerImpl createAccessManager(Credentials credentials,
+                                                    HierarchyManager hierMgr) {
+        return new AccessManagerImpl(credentials, hierMgr, getNamespaceResolver());
-    AccessManagerImpl getAccessManager() {
+    protected AccessManagerImpl getAccessManager() {
-    ItemManager getItemManager() {
+    protected ItemManager getItemManager() {
-    SessionItemStateManager getItemStateManager() {
+    protected SessionItemStateManager getItemStateManager() {
-    HierarchyManager getHierarchyManager() {
+    protected HierarchyManager getHierarchyManager() {
+     * Dispatch events belonging to a save operation.
+     *
+     * @param events events to dispatch as result of a successful save
+     *               operation
+     */
+    protected void dispatch(EventStateCollection events) {
+        events.dispatch();
+    }
+
+    /**
-        itemMgr.dump(ps);
+        getItemManager().dump(ps);
-        return (Node) itemMgr.getRootNode();
+        return getItemManager().getRootNode();
-            NodeImpl node = (NodeImpl) itemMgr.getItem(new NodeId(uuid));
+            NodeImpl node = (NodeImpl) getItemManager().getItem(new NodeId(uuid));
-            return itemMgr.getItem(Path.create(absPath, getNamespaceResolver(), true));
+            return getItemManager().getItem(Path.create(absPath, getNamespaceResolver(), true));
-            itemMgr.getItem(Path.create(absPath, getNamespaceResolver(), true));
+            getItemManager().getItem(Path.create(absPath, getNamespaceResolver(), true));
-        itemMgr.getRootNode().save();
+        getItemManager().getRootNode().save();
-            itemStateMgr.disposeAllTransientItemStates();
+            getItemStateManager().disposeAllTransientItemStates();
-        itemMgr.getRootNode().refresh(keepChanges);
+        getItemManager().getRootNode().refresh(keepChanges);
-        return itemStateMgr.hasAnyTransientItemStates();
+        return getItemStateManager().hasAnyTransientItemStates();
-            ItemImpl item = itemMgr.getItem(srcPath);
+            ItemImpl item = getItemManager().getItem(srcPath);
-            srcParentNode = (NodeImpl) itemMgr.getItem(srcParentPath);
+            srcParentNode = (NodeImpl) getItemManager().getItem(srcParentPath);
-            destParentNode = (NodeImpl) itemMgr.getItem(destParentPath);
+            destParentNode = (NodeImpl) getItemManager().getItem(destParentPath);
-            ItemImpl item = itemMgr.getItem(destPath);
+            ItemImpl item = getItemManager().getItem(destPath);
-            item = itemMgr.getItem(Path.create(parentAbsPath, getNamespaceResolver(), true));
+            item = getItemManager().getItem(Path.create(parentAbsPath, getNamespaceResolver(), true));
-        itemStateMgr.disposeAllTransientItemStates();
+        getItemStateManager().disposeAllTransientItemStates();

MOV26 INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS83 INS83 INS83 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS65 INS65 INS43 INS42 INS21 UPD66 INS66 INS66 INS42 INS14 INS66 INS66 INS42 INS42 MOV14 INS66 INS66 INS42 INS42 MOV14 INS66 INS42 INS66 INS66 INS42 INS32 INS32 INS8 MOV8 INS32 INS32 INS32 INS32 INS43 INS32 INS42 INS32 INS42 INS42 INS32 INS32 MOV42 INS41 INS21 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 MOV32 MOV9 INS32 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 INS32 INS42 MOV32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 MOV43 MOV43 INS32 INS32 INS32 UPD42 MOV42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL14 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL14 DEL42 DEL43 DEL32 DEL11 DEL42 DEL42 DEL32 DEL21 DEL8