JCR-1799 updating events swallowed (CacheBehavior.OBSERVATION)   	
JCR-1783 incomplete changelog when combining move with removal of new destination parent

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@704361 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.operation.Operation;
+import org.apache.jackrabbit.jcr2spi.operation.SetPropertyValue;
+import javax.jcr.InvalidItemStateException;
-    public PropertyId getId() {
+    public PropertyId getId() throws InvalidItemStateException, RepositoryException {
-    public PropertyId getWorkspaceId() {
+    public PropertyId getWorkspaceId() throws InvalidItemStateException, RepositoryException {
-     * @inheritDoc
-     * @inheritDoc
-        removeEntry(this);
-        if (getStatus() != Status.STALE_DESTROYED) {
-            parent.internalRemovePropertyEntry(getName());
+        ItemState state = internalGetItemState();
+        int status = getStatus();
+        if (state != null) {
+            if (status == Status.EXISTING_MODIFIED) {
+                state.setStatus(Status.STALE_DESTROYED);
+            } else {
+                state.setStatus(Status.REMOVED);
+                parent.internalRemoveChildEntry(this);
+            }
+        } else {
+            // unresolved
+            parent.internalRemoveChildEntry(this);
+        }
+    }
+
+    /**
+     * @see HierarchyEntry#complete(Operation)
+     */
+    public void complete(Operation operation) throws RepositoryException {
+        if (!(operation instanceof SetPropertyValue)) {
+            throw new IllegalArgumentException();
+        }
+        SetPropertyValue op = (SetPropertyValue) operation;
+        if (op.getPropertyState().getHierarchyEntry() != this) {
+            throw new IllegalArgumentException();
+        }
+        switch (operation.getStatus()) {
+            case Operation.STATUS_PERSISTED:
+                /*
+                NOTE: Property can only be the changelog target, if it was
+                      existing and has been modified. removal, add and implicit modification
+                      of protected properties must be persisted by save on parent.
+                */
+                op.getPropertyState().setStatus(Status.EXISTING);
+                break;
+            case Operation.STATUS_UNDO:
+                revert();
+                break;
+            default:
+                // ignore

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS43 INS43 INS43 INS43 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS42 INS42 INS60 INS60 INS25 INS65 INS43 INS42 INS42 INS25 INS60 INS25 INS50 INS43 INS59 INS39 INS59 INS27 INS8 INS8 INS68 INS42 INS38 INS8 INS43 INS59 INS27 INS8 INS32 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS42 INS42 INS32 INS42 MOV32 INS42 INS33 MOV25 INS21 INS42 INS42 INS69 INS36 INS53 INS42 INS42 INS11 INS32 INS52 INS53 INS42 INS42 INS40 INS32 INS40 INS32 UPD42 MOV42 UPD27 INS8 INS32 INS43 INS62 INS14 INS43 INS42 INS32 INS42 INS14 INS32 INS42 INS40 INS42 INS42 UPD40 INS21 INS21 INS42 INS42 INS52 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 UPD42 INS52 DEL65 DEL65 DEL42 DEL32 DEL52 DEL32 DEL21