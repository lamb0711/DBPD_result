JCR-622: Added a "safe" client repository adapter that automatically reloads broken remote repository reference.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@527797 13f79535-47bb-0310-9956-ffa450edef68

-import javax.naming.NamingException;
- * @author Jukka Zitting
-     * repository is looked up from the RMI registry using the given URL and
-     * wrapped into a {@link ClientRepository ClientRepository} adapter.
+     * repository is looked up from the RMI registry using the given URL by
+     * the returned {@link SafeClientRepository} instance.
-     * @throws ClassCastException    if the URL points to an unknown object
-     * @throws MalformedURLException if the URL is malformed
-     * @throws NotBoundException     if the URL points to nowhere
-     * @throws RemoteException       on RMI errors
-    public synchronized Repository getRepository(String url) throws
-            ClassCastException, MalformedURLException,
-            NotBoundException, RemoteException {
-        RemoteRepository remote = (RemoteRepository) Naming.lookup(url);
-        return factory.getRepository(remote);
+    public Repository getRepository(final String url) {
+        return new SafeClientRepository(factory) {
+
+            protected RemoteRepository getRemoteRepository()
+                    throws RemoteException {
+                try {
+                    return (RemoteRepository) Naming.lookup(url);
+                } catch (MalformedURLException e) {
+                    throw new RemoteException("Malformed URL: " + url, e);
+                } catch (NotBoundException e) {
+                    throw new RemoteException("No target found: " + url, e);
+                } catch (ClassCastException e) {
+                    throw new RemoteException("Unknown target: " + url, e);
+                }
+            }
+            
+        };
-     * Utility method for looking up the URL within the given RefAddr object.
-     * Feeds the content of the RefAddr object to
-     * {@link #getRepository(String) getRepository(String)} and wraps all
-     * errors to {@link NamingException NamingExceptions}.
-     * <p>
-     * Used by {@link #getObjectInstance(Object, Name, Context, Hashtable) getObjectInstance()}.
-     *
-     * @param url the URL reference
-     * @return repository client
-     * @throws NamingException on all errors
-     */
-    private Repository getRepository(RefAddr url) throws NamingException {
-        try {
-            return getRepository((String) url.getContent());
-        } catch (Exception ex) {
-            throw new NamingException(ex.getMessage());
-        }
-    }
-
-    /**
-     * JNDI factory method for creating JCR-RMI clients. Looks up a
-     * remote repository using the reference parameter "url" as the RMI URL
-     * and returns a client wrapper for the remote repository.
+     * JNDI factory method for creating JCR-RMI clients. Creates a lazy
+     * client repository instance that uses the reference parameter "url"
+     * as the RMI URL where the remote repository is looked up when accessed.
-     * @throws NamingException on all errors
-            Object object, Name name, Context context, Hashtable environment)
-            throws NamingException {
+            Object object, Name name, Context context, Hashtable environment) {
-            if (Repository.class.getName().equals(reference.getClassName())) {
-                RefAddr url = reference.get(URL_PARAMETER);
-                if (url != null) {
-                    return getRepository(url);
-                }
+            RefAddr url = reference.get(URL_PARAMETER);
+            if (url != null && url.getContent() != null) {
+                return getRepository(url.getContent().toString());

INS31 MOV29 MOV83 MOV43 MOV42 MOV44 INS8 INS83 INS41 UPD66 UPD66 UPD66 INS14 UPD66 UPD66 UPD66 UPD42 INS43 INS42 INS1 MOV60 MOV25 UPD42 MOV42 INS31 INS27 INS83 MOV43 INS42 MOV43 INS8 MOV27 INS27 INS54 MOV32 INS33 MOV8 INS12 INS12 MOV12 INS32 INS44 INS8 INS44 INS8 INS32 INS42 MOV11 MOV43 INS42 INS53 MOV43 INS42 INS53 MOV43 UPD42 MOV42 INS42 INS14 INS14 INS43 INS27 INS42 INS43 INS27 INS42 UPD43 INS27 INS42 UPD42 MOV42 INS45 INS42 UPD42 MOV42 INS45 INS42 UPD42 INS45 INS42 DEL40 DEL26 DEL66 DEL65 DEL66 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL32 DEL83 DEL31 DEL66 DEL66 DEL42 DEL43 DEL69 DEL68 DEL66 DEL65 DEL66 DEL66 DEL42 DEL66 DEL65 DEL66 DEL66 DEL66 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL42 DEL43 DEL11 DEL32 DEL41 DEL8 DEL54 DEL8 DEL31 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL43 DEL57 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL8 DEL25