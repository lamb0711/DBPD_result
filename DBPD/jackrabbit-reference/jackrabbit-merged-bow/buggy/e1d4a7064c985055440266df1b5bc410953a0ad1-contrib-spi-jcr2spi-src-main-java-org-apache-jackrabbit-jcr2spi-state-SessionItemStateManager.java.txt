JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-        QName propertyName = operation.getPropertyName();
+        Name propertyName = operation.getPropertyName();
-        QName[] mixinNames = operation.getMixinNames();
+        Name[] mixinNames = operation.getMixinNames();
-        PropertyEntry mixinEntry = nEntry.getPropertyEntry(QName.JCR_MIXINTYPES);
+        PropertyEntry mixinEntry = nEntry.getPropertyEntry(NameConstants.JCR_MIXINTYPES);
-                QPropertyDefinition pd = defProvider.getQPropertyDefinition(nState, QName.JCR_MIXINTYPES, PropertyType.NAME, true);
+                QPropertyDefinition pd = defProvider.getQPropertyDefinition(nState, NameConstants.JCR_MIXINTYPES, PropertyType.NAME, true);
-                addPropertyState(nState, pd.getQName(), pd.getRequiredType(), mixinValue, pd, options);
+                addPropertyState(nState, pd.getName(), pd.getRequiredType(), mixinValue, pd, options);
-    private void addPropertyState(NodeState parent, QName propertyName,
+    private void addPropertyState(NodeState parent, Name propertyName,
-    private void addNodeState(NodeState parent, QName nodeName, QName nodeTypeName,
+    private void addNodeState(NodeState parent, Name nodeName, Name nodeTypeName,
-            QPropertyDefinition pDef = defProvider.getQPropertyDefinition(QName.MIX_REFERENCEABLE, QName.JCR_UUID, PropertyType.STRING, false);
-            addPropertyState(nodeState, QName.JCR_UUID, PropertyType.STRING, value, pDef, 0);
+            QPropertyDefinition pDef = defProvider.getQPropertyDefinition(NameConstants.MIX_REFERENCEABLE, NameConstants.JCR_UUID, PropertyType.STRING, false);
+            addPropertyState(nodeState, NameConstants.JCR_UUID, PropertyType.STRING, value, pDef, 0);
-            if (!nodeState.hasPropertyName(pd.getQName())) {
+            if (!nodeState.hasPropertyName(pd.getName())) {
-                    addPropertyState(nodeState, pd.getQName(), pd.getRequiredType(), autoValue, pd, propOptions);
+                    addPropertyState(nodeState, pd.getName(), pd.getRequiredType(), autoValue, pd, propOptions);
-            addNodeState(nodeState, nd.getQName(), nd.getDefaultPrimaryType(), null, nd, opt);
+            addNodeState(nodeState, nd.getName(), nd.getDefaultPrimaryType(), null, nd, opt);
-            QName declaringNT = def.getDeclaringNodeType();
-            QName name = def.getQName();
-            if (QName.MIX_REFERENCEABLE.equals(declaringNT) && QName.JCR_UUID.equals(name)) {
+            Name declaringNT = def.getDeclaringNodeType();
+            Name name = def.getName();
+            if (NameConstants.MIX_REFERENCEABLE.equals(declaringNT) && NameConstants.JCR_UUID.equals(name)) {
-            } else if (QName.NT_BASE.equals(declaringNT)) {
+            } else if (NameConstants.NT_BASE.equals(declaringNT)) {
-                if (QName.JCR_PRIMARYTYPE.equals(name)) {
+                if (NameConstants.JCR_PRIMARYTYPE.equals(name)) {
-                } else if (QName.JCR_MIXINTYPES.equals(name)) {
+                } else if (NameConstants.JCR_MIXINTYPES.equals(name)) {
-                    QName[] mixins = parent.getMixinTypeNames();
+                    Name[] mixins = parent.getMixinTypeNames();
-            } else if (QName.NT_HIERARCHYNODE.equals(declaringNT) && QName.JCR_CREATED.equals(name)) {
+            } else if (NameConstants.NT_HIERARCHYNODE.equals(declaringNT) && NameConstants.JCR_CREATED.equals(name)) {
-            } else if (QName.NT_RESOURCE.equals(declaringNT) && QName.JCR_LASTMODIFIED.equals(name)) {
+            } else if (NameConstants.NT_RESOURCE.equals(declaringNT) && NameConstants.JCR_LASTMODIFIED.equals(name)) {
-            } else if (QName.NT_VERSION.equals(declaringNT) && QName.JCR_CREATED.equals(name)) {
+            } else if (NameConstants.NT_VERSION.equals(declaringNT) && NameConstants.JCR_CREATED.equals(name)) {
-                log.warn("Missing implementation. Nodetype " + def.getDeclaringNodeType() + " defines autocreated property " + def.getQName() + " without default value.");
+                log.warn("Missing implementation. Nodetype " + def.getDeclaringNodeType() + " defines autocreated property " + def.getName() + " without default value.");
-     * @return An array of QValue objects from the given <code>QName</code>s
+     * @return An array of QValue objects from the given <code>Name</code>s
-    private static QValue[] getQValues(QName[] qNames, QValueFactory factory) {
+    private static QValue[] getQValues(Name[] qNames, QValueFactory factory) {

INS26 UPD40 INS40 UPD43 UPD43 UPD43 UPD5 UPD43 UPD5 UPD42 UPD42 UPD42 UPD66 UPD43 UPD42 UPD43 UPD42 UPD42 UPD40 UPD40 UPD43 UPD43 UPD40 UPD40 UPD42 UPD42 UPD42 UPD42 UPD42 UPD40 UPD40 UPD40 UPD40 UPD42 UPD40 UPD40 UPD40 UPD42 UPD40 UPD40 UPD40 UPD5 UPD40 UPD40 UPD43 UPD42 UPD42