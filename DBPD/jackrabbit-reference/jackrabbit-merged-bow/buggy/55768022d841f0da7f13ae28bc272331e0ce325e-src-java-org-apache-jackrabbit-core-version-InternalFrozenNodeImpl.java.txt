[JCR-127] Speedup Startup
          Removing one layer in versioning, thus mapping virtual items
          directly from the peristence layer.


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@191172 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.core.version.persistence;
+package org.apache.jackrabbit.core.version;
-import org.apache.jackrabbit.core.version.InternalFreeze;
-import org.apache.jackrabbit.core.version.InternalFrozenNode;
-import org.apache.jackrabbit.core.version.InternalVersionItem;
-import org.apache.jackrabbit.core.version.PersistentVersionManager;
-import org.apache.jackrabbit.core.version.InternalFrozenVersionHistory;
- *
+ * Implements a <code>InternalFrozenNode</code>
-class InternalFrozenNodeImpl extends InternalFreezeImpl
+public class InternalFrozenNodeImpl extends InternalFreezeImpl
-    private PersistentNode node;
+    private NodeStateEx node;
-    protected InternalFrozenNodeImpl(PersistentVersionManager vMgr,
-                                     PersistentNode node,
-                                     InternalVersionItem parent) throws RepositoryException {
+    public InternalFrozenNodeImpl(VersionManagerImpl vMgr, NodeStateEx node,
+                                  InternalVersionItem parent)
+            throws RepositoryException {
-        // init the frozen child nodes
-        /*
-        PersistentNode[] childNodes = node.getChildNodes();
-        frozenChildNodes = new InternalFreeze[childNodes.length];
-        for (int i = 0; i < childNodes.length; i++) {
-        if (childNodes[i].hasProperty(JCR_FROZEN_PRIMARY_TYPE)) {
-        frozenChildNodes[i] = new InternalFrozenNode(this, childNodes[i]);
-        } else if (childNodes[i].hasProperty(JCR_VERSION_HISTORY)) {
-        frozenChildNodes[i] = new InternalFrozenVersionHistory(this, childNodes[i]);
-        } else {
-        // unkown ?
-        }
-        }
-        */
-
-     * Returns the name of this frozen node
-     *
-     * @return
+     * {@inheritDoc}
+    /**
+     * {@inheritDoc}
+     */
-     * Returns the list of frozen properties
-     *
-     * @return
+     * {@inheritDoc}
-     * Returns the frozen UUID
-     *
-     * @return
+     * {@inheritDoc}
-     * Returns the frozen primary type
-     *
-     * @return
+     * {@inheritDoc}
-     * Returns the list of the frozen mixin types
-     *
-     * @return
+     * {@inheritDoc}
-    protected static PersistentNode checkin(PersistentNode parent, QName name,
+    protected static NodeStateEx checkin(NodeStateEx parent, QName name,
-    private static PersistentNode checkin(PersistentNode parent, QName name,
+    private static NodeStateEx checkin(NodeStateEx parent, QName name,
-        PersistentNode node = parent.addNode(name, NativePVM.NT_REP_FROZEN, null);
+        NodeStateEx node = parent.addNode(name, NT_FROZENNODE, null, true);
-                        PersistentNode newChild = node.addNode(child.getQName(), NativePVM.NT_REP_FROZEN_HISTORY, null);
+                        NodeStateEx newChild = node.addNode(child.getQName(), NT_VERSIONEDCHILD, null, false);

UPD40 INS83 INS65 UPD43 UPD83 INS29 UPD43 UPD43 INS66 UPD42 UPD43 UPD43 INS65 INS65 INS65 INS65 INS65 INS65 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 INS65 INS65 INS65 INS65 INS65 INS65 UPD42 UPD42 UPD43 UPD42 INS42 INS9 UPD43 UPD42 INS42 INS9 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL65 DEL66 DEL65 DEL65 DEL66 DEL65 DEL65 DEL66 DEL65 DEL65 DEL66 DEL65 DEL65 DEL40 DEL40