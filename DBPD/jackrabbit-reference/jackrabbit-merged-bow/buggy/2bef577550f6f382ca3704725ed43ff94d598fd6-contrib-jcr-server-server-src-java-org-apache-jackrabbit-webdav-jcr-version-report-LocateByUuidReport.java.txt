JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.version.report.*;
+import org.apache.jackrabbit.webdav.version.report.Report;
+import org.apache.jackrabbit.webdav.version.report.ReportType;
+import org.apache.jackrabbit.webdav.version.report.ReportInfo;
-import org.apache.jackrabbit.webdav.*;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameSet;
-import org.jdom.Document;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.MultiStatus;
+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.DavConstants;
+import org.apache.jackrabbit.webdav.DavSession;
+import org.apache.jackrabbit.webdav.DavResourceLocator;
+import org.apache.jackrabbit.webdav.DavResource;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
-    private DeltaVResource resource;
-    private ReportInfo info;
+    private MultiStatus ms;
-     * @param resource
-     * @throws IllegalArgumentException if the resource is <code>null</code> or
-     * if the session object provided with the resource is <code>null</code>.
-     * @see Report#setResource(org.apache.jackrabbit.webdav.version.DeltaVResource)
+     * Always returns <code>true</code>.
+     *
+     * @return true
+     * @see org.apache.jackrabbit.webdav.version.report.Report#isMultiStatusReport()
-    public void setResource(DeltaVResource resource) {
-        if (resource == null) {
-            throw new IllegalArgumentException("Resource must not be null.");
-        }
-        DavSession davSession = resource.getSession();
-        if (davSession == null || davSession.getRepositorySession() == null) {
-            throw new IllegalArgumentException("The resource must provide a non-null session object in order to create the locate-by-uuid report.");
-        }
-        this.resource = resource;
+    public boolean isMultiStatusReport() {
+        return true;
-     * @param info
-     * @throws IllegalArgumentException if the specified {@link ReportInfo info}
-     * object does not contain a {@link ItemResourceConstants#NAMESPACE dcr}:locate-by-uuid element.
-     * @see Report#setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo)
+     * @see Report#init(org.apache.jackrabbit.webdav.version.DeltaVResource, org.apache.jackrabbit.webdav.version.report.ReportInfo)
-    public void setInfo(ReportInfo info) {
-        if (info == null || !REPORT_NAME.equals(info.getReportElement().getName())) {
-            throw new IllegalArgumentException("dcr:locate-by-uuid element expected.");
+    public void init(DeltaVResource resource, ReportInfo info) throws DavException {
+        if (!getType().isRequestedReportType(info)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "dcr:locate-by-uuid element expected.");
-        this.info = info;
+        if (!info.containsContentElement(DavConstants.XML_HREF, DavConstants.NAMESPACE)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "dcr:locate-by-uuid element must at least contain a single DAV:href child.");
+        }
+        if (resource == null) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "Resource must not be null.");
+        }
+        DavSession davSession = resource.getSession();
+        if (davSession == null || davSession.getRepositorySession() == null) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "The resource must provide a non-null session object in order to create the locate-by-uuid report.");
+    }
+
+        try {
+            Element hrefElem = info.getContentElement(DavConstants.XML_HREF, DavConstants.NAMESPACE);
+            String uuid = DomUtil.getTextTrim(hrefElem);
+            DavResourceLocator resourceLoc = resource.getLocator();
+            Node n = davSession.getRepositorySession().getNodeByUUID(uuid);
+            DavResourceLocator loc = resourceLoc.getFactory().createResourceLocator(resourceLoc.getPrefix(), resourceLoc.getWorkspacePath(), n.getPath(), false);
+            DavResource locatedResource = resource.getFactory().createResource(loc, davSession);
+            ms = new MultiStatus();
+            ms.addResourceProperties(locatedResource, info.getPropertyNameSet(), info.getDepth());
+        } catch (RepositoryException e) {
+            throw new JcrDavException(e);
+        }
-     * @return Xml document representing the output of the specified view.
-     * @throws DavException if the report document could not be created.
-     * @see org.apache.jackrabbit.webdav.version.report.Report#toXml()
+     * @param document
+     * @return Xml element representing the output of the specified view.
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
-    public Document toXml() throws DavException {
-        String uuid = info.getReportElement().getChildText(DavConstants.XML_HREF, DavConstants.NAMESPACE);
-        DavPropertyNameSet propNameSet = info.getPropertyNameSet();
-
-        try {
-            DavSession session = resource.getSession();
-            DavResourceLocator resourceLoc = resource.getLocator();
-
-            Node n = session.getRepositorySession().getNodeByUUID(uuid);
-            DavResourceLocator loc = resourceLoc.getFactory().createResourceLocator(resourceLoc.getPrefix(), resourceLoc.getWorkspacePath(), n.getPath(), false);
-            DavResource res = resource.getFactory().createResource(loc, session);
-
-            MultiStatus ms = new MultiStatus();
-            ms.addResourceProperties(res, propNameSet, info.getDepth());
-            return ms.toXml();
-
-        } catch (RepositoryException e) {
-            throw new JcrDavException(e);
-        }
+    public Element toXml(Document document) {
+        return ms.toXml(document);

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 MOV31 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 UPD40 INS40 UPD40 INS31 MOV43 INS29 MOV83 UPD39 MOV39 UPD42 MOV42 INS8 MOV29 INS39 UPD42 MOV44 MOV44 INS43 INS42 INS44 INS8 UPD42 INS65 INS65 INS65 INS41 INS25 INS25 INS25 MOV60 MOV25 MOV65 UPD65 INS42 INS43 INS42 INS41 INS66 INS66 INS68 INS9 INS38 INS8 INS38 INS8 MOV27 INS8 UPD42 UPD66 INS42 INS32 INS40 INS42 UPD42 INS69 INS32 INS53 INS32 INS53 INS53 INS60 INS21 INS40 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV43 INS32 INS42 INS42 INS14 MOV42 UPD42 MOV42 MOV40 MOV40 INS14 INS14 UPD43 MOV43 INS59 INS7 MOV43 INS42 INS43 INS40 INS45 INS43 INS40 INS45 INS43 INS40 INS45 UPD43 INS40 UPD42 UPD42 INS42 INS32 UPD42 INS42 MOV14 UPD42 MOV32 INS42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 INS40 INS40 INS42 INS42 INS42 UPD42 UPD42 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL40 DEL42 DEL68 DEL65 DEL29 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL41 DEL42 DEL42 DEL66 DEL65 DEL66 DEL42 DEL42 DEL67 DEL66 DEL65 DEL66 DEL42 DEL39 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL32 DEL32 DEL38 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8