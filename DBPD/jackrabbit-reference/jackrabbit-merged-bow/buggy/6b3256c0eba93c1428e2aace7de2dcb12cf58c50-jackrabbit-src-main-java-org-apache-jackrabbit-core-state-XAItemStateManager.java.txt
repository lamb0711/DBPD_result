Locking and XA
- Introduce internal XA resources
- Add rollback thread that runs when transaction timeout has expired
- Make lock's live attribute transaction-aware
- Make NodeImpl's internalSetProperty protected again 



git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@365558 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.TransactionContext;
+import org.apache.jackrabbit.core.InternalXAResource;
-public class TransactionalItemStateManager extends LocalItemStateManager {
+public class XAItemStateManager extends LocalItemStateManager implements InternalXAResource {
-    private static Logger log = Logger.getLogger(TransactionalItemStateManager.class);
+    private static Logger log = Logger.getLogger(XAItemStateManager.class);
+
+    /**
+     * Default change log attribute name.
+     */
+    private static final String DEFAULT_ATTRIBUTE_NAME = "ChangeLog";
-     * of the {@link #prepare()}, {@link #commit()}, {@link #rollback()}
+     * of the {@link #prepare}, {@link #commit}, {@link #rollback}
-    private static ThreadLocal commitLog = new ThreadLocal() {
+    private ThreadLocal commitLog = new ThreadLocal() {
-     * Creates a new <code>LocalItemStateManager</code> instance.
-     *
+     * Change log attribute name.
+     */
+    private final String attributeName;
+
+    /**
+     * Creates a new instance of this class.
+     * @param wspImpl workspace
-    public TransactionalItemStateManager(SharedItemStateManager sharedStateMgr,
-                                         WorkspaceImpl wspImpl) {
+    public XAItemStateManager(SharedItemStateManager sharedStateMgr,
+                              WorkspaceImpl wspImpl) {
+        this(sharedStateMgr, wspImpl, DEFAULT_ATTRIBUTE_NAME);
+    }
+
+    /**
+     * Creates a new instance of this class with a custom attribute name.
+     * @param sharedStateMgr shared state manager
+     * @param wspImpl workspace
+     * @param attributeName attribute name
+     */
+    public XAItemStateManager(SharedItemStateManager sharedStateMgr,
+                              WorkspaceImpl wspImpl, String attributeName) {
+
+        this.attributeName = attributeName;
-     * Set transactional change log to use.
-     * @param txLog change log, may be <code>null</code>.
-     * @param threadLocal if <code>true</code> set thread-local change log;
-     *                    otherwise set instance-local change log
+     * {@inheritDoc}
-    public void setChangeLog(ChangeLog txLog, boolean threadLocal) {
-        if (threadLocal) {
-            ((CommitLog) commitLog.get()).setChanges(txLog);
-        } else {
-            this.txLog = txLog;
+    public void associate(TransactionContext tx) {
+        ChangeLog txLog = null;
+        if (tx != null) {
+            txLog = (ChangeLog) tx.getAttribute(attributeName);
+            if (txLog == null) {
+                txLog = new ChangeLog();
+                tx.setAttribute(attributeName, txLog);
+            }
+        this.txLog = txLog;
-     * Prepare a transaction.
-     * @throws TransactionException if an error occurs
+     * {@inheritDoc}
-    public void prepare() throws TransactionException {
-        ChangeLog txLog = ((CommitLog) commitLog.get()).getChanges();
+    public void prepare(TransactionContext tx) throws TransactionException {
+        ChangeLog txLog = (ChangeLog) tx.getAttribute(attributeName);
+                ((CommitLog) commitLog.get()).setChanges(txLog);
+            } finally {
+                ((CommitLog) commitLog.get()).setChanges(null);
-     * Commit changes made within a transaction
-     * @throws TransactionException if an error occurs
+     * {@inheritDoc}
-    public void commit() throws TransactionException {
-        ChangeLog txLog = ((CommitLog) commitLog.get()).getChanges();
+    public void commit(TransactionContext tx) throws TransactionException {
+        ChangeLog txLog = (ChangeLog) tx.getAttribute(attributeName);
+                ((CommitLog) commitLog.get()).setChanges(txLog);
+            } finally {
+                ((CommitLog) commitLog.get()).setChanges(null);
-     * Rollback changes made within a transaction
+     * {@inheritDoc}
-    public void rollback() {
-        ChangeLog txLog = ((CommitLog) commitLog.get()).getChanges();
+    public void rollback(TransactionContext tx) {
+        ChangeLog txLog = (ChangeLog) tx.getAttribute(attributeName);
-            txLog.undo(sharedStateMgr);
+            try {
+                ((CommitLog) commitLog.get()).setChanges(txLog);
+                txLog.undo(sharedStateMgr);
+            } finally {
+                ((CommitLog) commitLog.get()).setChanges(null);
+            }
+    /**
+     * Returns the current change log. First tries thread-local change log,
+     * then instance-local change log. Returns <code>null</code> if no
+     * change log was found.
+     */
+    public ChangeLog getChangeLog() {
+        ChangeLog changeLog = ((CommitLog) commitLog.get()).getChanges();
+        if (changeLog == null) {
+            changeLog = txLog;
+        }
+        return changeLog;
+    }
+
-        ChangeLog changeLog = ((CommitLog) commitLog.get()).getChanges();
+        ChangeLog changeLog = getChangeLog();
-            // check items in commit log
-        } else if (txLog != null) {
-            // check items in change log
-            ItemState state = txLog.get(id);
-            if (state != null) {
-                return state;
-            }
-        ChangeLog changeLog = ((CommitLog) commitLog.get()).getChanges();
+        ChangeLog changeLog = getChangeLog();
-            // check items in commit log
-        } else if (txLog != null) {
-            // check items in change log
-            try {
-                ItemState state = txLog.get(id);
-                if (state != null) {
-                    return true;
-                }
-            } catch (NoSuchItemStateException e) {
-                return false;
-            }
-        ChangeLog changeLog = ((CommitLog) commitLog.get()).getChanges();
+        ChangeLog changeLog = getChangeLog();
-            // check commit log
-        } else if (txLog != null) {
-            // check change log
-            NodeReferences refs = txLog.get(id);
-            if (refs != null) {
-                return refs;
-            }
-        ChangeLog changeLog = ((CommitLog) commitLog.get()).getChanges();
+        ChangeLog changeLog = getChangeLog();
-            // check commit log
-        } else if (txLog != null) {
-            // check change log
-            if (txLog.get(id) != null) {
-                return true;
-            }

INS26 INS26 INS40 INS40 UPD42 INS43 INS23 INS23 INS31 INS31 INS31 INS42 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 UPD42 INS44 INS44 INS8 MOV29 MOV83 INS42 MOV44 MOV44 INS44 MOV8 INS29 INS83 MOV39 UPD42 MOV42 MOV44 INS8 INS44 INS44 INS44 INS29 INS83 INS43 INS42 INS8 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS65 INS43 INS42 INS43 INS42 INS17 INS65 INS43 INS42 INS21 INS65 INS43 UPD42 INS60 INS25 MOV21 INS65 INS43 INS42 INS65 INS43 INS42 INS65 INS43 INS42 INS65 INS42 MOV60 INS25 INS41 INS60 INS66 INS66 UPD66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 UPD66 UPD42 UPD66 UPD42 UPD66 INS42 INS66 INS42 INS7 INS65 INS42 MOV43 INS59 INS27 INS8 INS65 INS42 INS43 INS65 INS42 INS65 INS42 INS8 INS66 INS66 INS66 INS27 INS8 INS42 INS43 INS59 UPD43 INS67 INS67 INS67 INS22 INS42 INS42 INS33 INS42 INS33 INS21 MOV25 INS42 INS11 MOV8 INS11 INS11 INS54 INS42 INS33 INS21 INS42 INS42 INS32 UPD42 INS42 INS42 INS42 INS52 INS42 INS7 INS27 INS43 INS32 MOV8 INS43 INS32 INS8 UPD43 MOV43 MOV32 MOV8 INS8 INS7 UPD42 UPD42 INS42 UPD42 INS42 INS11 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS21 INS21 UPD42 UPD42 UPD42 INS42 INS21 INS21 INS42 INS42 MOV43 INS32 INS7 INS32 INS32 INS32 MOV32 INS32 MOV32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 MOV36 INS42 INS33 INS36 INS42 INS42 UPD42 INS33 INS36 INS42 INS42 UPD42 INS33 INS43 INS11 INS11 INS42 INS43 INS32 INS43 INS32 INS43 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL68 DEL42 DEL68 DEL42 DEL68 DEL83 DEL66 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL41 DEL8 DEL25 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL9 DEL41 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL41 DEL8 DEL25 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL9 DEL41 DEL8 DEL25 DEL8 DEL25