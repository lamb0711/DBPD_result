- work in progress: implement invalidate and refresh on ItemState.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@474207 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * {@inheritDoc}
+     * @see ItemState#refresh()
+     */
+    public void refresh() {
+        if (isWorkspaceState()) {
+            // refresh from persistent storage
+            try {
+                PropertyState tmp = isf.createPropertyState(getPropertyId(), parent);
+                init(tmp.getType(), tmp.getValues());
+                setStatus(Status.MODIFIED);
+            } catch (NoSuchItemStateException e) {
+                // does not exist anymore
+                setStatus(Status.REMOVED);
+                // todo also remove from parent? how do we make sure the parent
+                // todo does not get modified by this removal?
+                // parent.propertyStateRemoved(this);
+            } catch (ItemStateException e) {
+                // todo rather throw? remove from parent?
+                log.warn("Exception while refreshing property state: " + e);
+                log.debug("Stacktrace: ", e);
+            }
+        } else {
+            // session state
+            if (getStatus() == Status.EXISTING || getStatus() == Status.INVALIDATED) {
+                // calling refresh on the workspace state will in turn
+                // also refresh / reset the session state
+                overlayedState.refresh();
+            }
+        }
+    }
+
+    /**
+     * {@inheritDoc}
+     * @see ItemState#invalidate()
+     */
+    public void invalidate() {
+        if (isWorkspaceState()) {
+            // workspace state
+            setStatus(Status.INVALIDATED);
+        } else {
+            // todo only invalidate if existing?
+            if (getStatus() == Status.EXISTING) {
+                // set workspace state invalidated, this will in turn invalidate
+                // this (session) state as well
+                overlayedState.invalidate();
+            }
+        }
+    }
+

INS31 INS31 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS65 INS65 INS25 INS65 INS65 INS25 INS65 INS68 INS32 INS8 INS8 INS65 INS68 INS32 INS8 INS8 INS42 INS42 INS42 INS54 INS25 INS42 INS42 INS42 INS21 INS25 INS8 INS12 INS12 INS27 INS8 INS32 INS27 INS8 INS60 INS21 INS21 INS44 INS8 INS44 INS8 INS27 INS27 INS21 INS42 INS40 INS32 INS40 INS21 INS43 INS59 INS32 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS21 INS32 INS40 INS32 INS40 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS40 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS45 INS42