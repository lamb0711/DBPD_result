JCR-4093 IndexRule are meant to be applied based on both primaryType and minin type based inheritance. Currently it appears that only primaryType based inheritance is working

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1780335 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.nodetype.NoSuchNodeTypeException;
+import org.apache.jackrabbit.spi.QNodeTypeDefinition;
+import org.apache.jackrabbit.spi.QPropertyDefinition;
-        IndexingRule rule = getApplicableIndexingRule(state);
+        IndexingRule rule = getApplicableIndexingRule(state, propertyName);
-        IndexingRule rule = getApplicableIndexingRule(state);
+        IndexingRule rule = getApplicableIndexingRule(state, propertyName);
-        IndexingRule rule = getApplicableIndexingRule(state);
+        IndexingRule rule = getApplicableIndexingRule(state, null);
-        IndexingRule rule = getApplicableIndexingRule(state);
+        IndexingRule rule = getApplicableIndexingRule(state, propertyName);
-        IndexingRule rule = getApplicableIndexingRule(state);
+        IndexingRule rule = getApplicableIndexingRule(state, propertyName);
-                        perNtConfig.add(new IndexingRule(element, ntName));
+                        perNtConfig.add(new IndexingRule(element, ntReg.getNodeTypeDef(ntName)));
+     * @param propertyName the property name to check.
-    private IndexingRule getApplicableIndexingRule(NodeState state) {
+    private IndexingRule getApplicableIndexingRule(NodeState state, Name propertyName) {
-                if (rule.appliesTo(state)) {
+                if (rule.appliesTo(state, propertyName)) {
-         * The node type of this fulltext indexing rule.
+         * The NodeTypeDefinition of this fulltext indexing rule.
-        private final Name nodeTypeName;
+        private final QNodeTypeDefinition nodeTypeDefinition;
-         * @param nodeTypeName the node type name for the rule.
+         * @param qNodeTypeDefinition the node type for the rule.
-        IndexingRule(IndexingRule original, Name nodeTypeName) {
-            this.nodeTypeName = nodeTypeName;
+        IndexingRule(IndexingRule original, QNodeTypeDefinition qNodeTypeDefinition) {
+            this.nodeTypeDefinition = qNodeTypeDefinition;
+         * @throws NoSuchNodeTypeException if the nodeType could not be evaluated
-                throws MalformedPathException, IllegalNameException, NamespaceException {
-            this.nodeTypeName = getNodeTypeName(config);
+                throws MalformedPathException, IllegalNameException, NamespaceException, NoSuchNodeTypeException {
+            this.nodeTypeDefinition = getNodeTypeDefinition(config);
-            return nodeTypeName;
+            return nodeTypeDefinition.getName();
+         * @param propertyName the property name to check.
-        public boolean appliesTo(NodeState state) {
+        public boolean appliesTo(NodeState state, Name propertyName) {
+        	Name nodeTypeName = getNodeTypeName();
+        	if (propertyName != null) {
+	        	for (QPropertyDefinition propertyDefinition : nodeTypeDefinition.getPropertyDefs()) {
+	        		if (propertyDefinition.getName().equals(propertyName)) {
+	        			return true;
+	        		}
+	        	}
+        	}
+         * @throws NoSuchNodeTypeException if the node type could not be evaluated
-        private Name getNodeTypeName(Node config)
-                throws IllegalNameException, NamespaceException {
+        private QNodeTypeDefinition getNodeTypeDefinition(Node config)
+                throws IllegalNameException, NamespaceException, NoSuchNodeTypeException {
-            return resolver.getQName(ntString);
+            return ntReg.getNodeTypeDef(resolver.getQName(ntString));

INS26 INS26 INS26 INS40 INS40 INS40 INS44 INS65 INS43 INS42 UPD43 INS43 INS44 UPD43 UPD42 INS43 INS42 INS66 INS42 UPD42 UPD42 INS43 INS42 INS65 INS42 INS65 INS43 INS42 INS60 INS25 INS65 UPD42 INS42 UPD66 UPD42 UPD66 INS42 INS42 INS66 INS32 INS42 INS66 INS42 MOV43 INS59 INS27 INS8 INS42 INS66 INS32 INS42 INS42 INS33 INS42 INS42 UPD42 INS42 INS42 INS42 INS32 INS42 INS33 INS70 INS42 INS42 MOV32 UPD42 UPD42 UPD42 INS42 INS44 INS32 INS8 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS32 INS8 INS32 INS42 INS42 INS41 INS42 INS42 INS9 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL42