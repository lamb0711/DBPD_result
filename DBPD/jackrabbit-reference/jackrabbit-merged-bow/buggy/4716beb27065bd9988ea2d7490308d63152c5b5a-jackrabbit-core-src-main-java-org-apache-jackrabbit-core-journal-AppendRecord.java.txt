JCR-773 - Under heavy load, database journal may contain empty update records.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@513340 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.io.FileOutputStream;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+     * Default size for in-memory records.
+     */
+    private static final int DEFAULT_IN_MEMORY_SIZE = 1024;
+
+    /**
+     * Maximum size for in-memory records.
+     */
+    private static final int MAXIMUM_IN_MEMORY_SIZE = 65536;
+
+    /**
+     * Underlying data output.
+     */
+    private DataOutputStream dataOut;
+
+    /**
+     * Underlying byte output.
+     */
+    private ByteArrayOutputStream byteOut;
+
+    /**
-     * Underlying data output.
+     * Underlying file output.
-    private DataOutputStream dataOut;
+    private FileOutputStream fileOut;
+
+    /**
+     * Flag indicating whether the output is closed.
+     */
+    private boolean outputClosed;
+
+        byteOut = new ByteArrayOutputStream(DEFAULT_IN_MEMORY_SIZE);
+        dataOut = new DataOutputStream(byteOut);
-        open();
+        checkOutput();
-        open();
+        checkOutput();
-        open();
+        checkOutput();
-        open();
+        checkOutput();
-        open();
+        checkOutput();
-        open();
+        checkOutput();
-            close();
-            revision = journal.append(producerId, file);
-            succeeded = true;
+            int length = dataOut.size();
+            closeOutput();
+
+            InputStream in = openInput();
+
+            try {
+                revision = journal.append(producerId, in, length);
+                succeeded = true;
+            } finally {
+                try {
+                    in.close();
+                } catch (IOException e) {
+                    String msg = "I/O error while closing stream.";
+                    log.warn(msg, e);
+                }
+            }
-        if (dataOut != null) {
+        if (!outputClosed) {
-            
+
-     * Create temporary file and open data output on it.
+     * Open input on record written.
+     */
+    private InputStream openInput() throws JournalException {
+        if (file != null) {
+            try {
+                return new FileInputStream(file);
+            } catch (IOException e) {
+                String msg = "Unable to open file input on: " + file.getPath();
+                throw new JournalException(msg, e);
+            }
+        } else {
+            return new ByteArrayInputStream(byteOut.toByteArray());
+        }
+    }
+
+    /**
+     * Check output size and eventually switch to file output.
-    private void open() throws JournalException {
-        if (file == null) {
+    private void checkOutput() throws JournalException {
+        if (outputClosed) {
+            throw new IllegalStateException("Output closed.");
+        }
+        if (fileOut == null && byteOut.size() >= MAXIMUM_IN_MEMORY_SIZE) {
-                dataOut = new DataOutputStream(new FileOutputStream(file));
+            try {
+                fileOut = new FileOutputStream(file);
+            } catch (FileNotFoundException e) {
+                String msg = "Unable to open output stream on: " + file.getPath();
+                throw new JournalException(msg, e);
+            }
+            dataOut = new DataOutputStream(fileOut);
+
+            try {
+                dataOut.write(byteOut.toByteArray());
+            } catch (IOException e) {
+                String msg = "Unable to write in-memory record to file.";
+                throw new JournalException(msg, e);
+            }
-     * Close this record, keeping the underlying file.
+     * Close output, keeping the underlying file.
-    private void close() throws JournalException {
-        if (dataOut != null) {
+    private void closeOutput() throws JournalException {
+        if (!outputClosed) {
-                dataOut.close();
+                if (fileOut != null) {
+                    dataOut.flush();
+                    fileOut.getFD().sync();
+                    dataOut.close();
+                }
-                dataOut = null;
+                outputClosed = true;
-        if (dataOut != null) {
+        if (!outputClosed) {
-                dataOut = null;
+                outputClosed = true;

MOV26 INS26 INS26 INS26 INS26 INS26 MOV23 MOV31 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS39 INS59 INS29 INS43 INS42 INS43 UPD42 UPD42 MOV29 INS83 INS39 INS42 INS8 INS65 INS42 INS34 INS65 INS42 INS34 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS42 INS21 INS21 INS65 INS42 INS42 INS25 INS25 MOV25 INS66 INS66 INS66 INS66 INS66 INS7 INS7 INS38 INS66 INS8 INS8 UPD66 INS42 INS8 INS27 UPD66 INS38 INS38 INS8 INS42 INS14 INS42 INS14 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS60 INS60 INS54 INS42 UPD42 INS54 INS41 INS53 INS27 INS27 INS54 INS21 INS54 INS42 INS42 INS54 INS43 INS42 INS43 INS42 INS39 INS59 INS43 INS59 INS8 MOV8 INS8 INS12 INS14 INS14 UPD42 MOV42 MOV33 INS32 INS42 INS8 INS12 INS7 INS8 INS12 INS8 MOV8 INS12 INS8 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 MOV21 MOV21 MOV12 INS41 INS44 INS8 INS43 INS32 INS43 INS45 INS42 INS42 MOV21 INS44 INS8 INS42 INS14 INS21 INS44 INS8 INS25 INS44 INS8 INS21 INS42 INS42 INS42 INS14 INS43 INS42 INS60 INS53 INS42 INS42 INS42 INS42 INS43 INS42 INS60 INS53 MOV43 INS42 INS32 INS43 INS42 INS60 INS53 INS27 INS8 INS43 INS42 INS60 INS21 INS7 INS43 INS42 INS42 INS43 INS59 INS14 UPD42 MOV14 INS42 INS43 INS59 INS14 INS42 INS42 INS32 INS42 INS43 INS59 INS14 INS42 INS33 INS21 INS21 MOV21 UPD42 INS9 INS42 INS43 INS59 INS32 INS42 INS9 UPD42 INS42 INS32 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL33 DEL7 DEL42 DEL33 DEL27 DEL39 DEL42 DEL27 DEL14 DEL42 DEL33 DEL27 DEL8 DEL33