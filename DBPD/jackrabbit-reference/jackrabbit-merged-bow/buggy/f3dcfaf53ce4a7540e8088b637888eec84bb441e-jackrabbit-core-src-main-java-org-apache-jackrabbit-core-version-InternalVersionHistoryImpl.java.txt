JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-        versionableId = NodeId.valueOf(node.getPropertyValue(QName.JCR_VERSIONABLEUUID).toString());
+        versionableId = NodeId.valueOf(node.getPropertyValue(NameConstants.JCR_VERSIONABLEUUID).toString());
-            if (child.getName().equals(QName.JCR_VERSIONLABELS)) {
+            if (child.getName().equals(NameConstants.JCR_VERSIONLABELS)) {
-                    QName name = pState.getName();
+                    Name name = pState.getName();
-    public InternalVersion getVersion(QName versionName) throws VersionException {
+    public InternalVersion getVersion(Name versionName) throws VersionException {
-    public boolean hasVersion(QName versionName) {
+    public boolean hasVersion(Name versionName) {
-    public InternalVersion getVersionByLabel(QName label) {
+    public InternalVersion getVersionByLabel(Name label) {
-    public QName[] getVersionLabels() {
-        return (QName[]) labelCache.keySet().toArray(new QName[labelCache.size()]);
+    public Name[] getVersionLabels() {
+        return (Name[]) labelCache.keySet().toArray(new Name[labelCache.size()]);
-    void removeVersion(QName versionName) throws RepositoryException {
+    void removeVersion(Name versionName) throws RepositoryException {
-        QName[] labels = v.internalGetLabels();
+        Name[] labels = v.internalGetLabels();
-    InternalVersion setVersionLabel(QName versionName, QName label, boolean move)
+    InternalVersion setVersionLabel(Name versionName, Name label, boolean move)
-    InternalVersionImpl checkin(QName name, NodeImpl src)
+    InternalVersionImpl checkin(Name name, NodeImpl src)
-        Value[] preds = src.getProperty(QName.JCR_PREDECESSORS).getValues();
+        Value[] preds = src.getProperty(NameConstants.JCR_PREDECESSORS).getValues();
-        NodeStateEx vNode = node.addNode(name, QName.NT_VERSION, versionId, true);
+        NodeStateEx vNode = node.addNode(name, NameConstants.NT_VERSION, versionId, true);
-        vNode.setPropertyValue(QName.JCR_CREATED, InternalValue.create(Calendar.getInstance()));
-        vNode.setPropertyValues(QName.JCR_PREDECESSORS, PropertyType.REFERENCE, predecessors);
-        vNode.setPropertyValues(QName.JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
+        vNode.setPropertyValue(NameConstants.JCR_CREATED, InternalValue.create(Calendar.getInstance()));
+        vNode.setPropertyValues(NameConstants.JCR_PREDECESSORS, PropertyType.REFERENCE, predecessors);
+        vNode.setPropertyValues(NameConstants.JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
-        InternalFrozenNodeImpl.checkin(vNode, QName.JCR_FROZENNODE, src);
+        InternalFrozenNodeImpl.checkin(vNode, NameConstants.JCR_FROZENNODE, src);
-                                             NodeId historyId, QName name,
+                                             NodeId historyId, Name name,
-        NodeStateEx pNode = parent.addNode(name, QName.NT_VERSIONHISTORY, historyId, true);
+        NodeStateEx pNode = parent.addNode(name, NameConstants.NT_VERSIONHISTORY, historyId, true);
-        pNode.setPropertyValue(QName.JCR_VERSIONABLEUUID, InternalValue.create(versionableUUID));
+        pNode.setPropertyValue(NameConstants.JCR_VERSIONABLEUUID, InternalValue.create(versionableUUID));
-        pNode.addNode(QName.JCR_VERSIONLABELS, QName.NT_VERSIONLABELS, null, false);
+        pNode.addNode(NameConstants.JCR_VERSIONLABELS, NameConstants.NT_VERSIONLABELS, null, false);
-        NodeStateEx vNode = pNode.addNode(QName.JCR_ROOTVERSION, QName.NT_VERSION, versionId, true);
+        NodeStateEx vNode = pNode.addNode(NameConstants.JCR_ROOTVERSION, NameConstants.NT_VERSION, versionId, true);
-        vNode.setPropertyValue(QName.JCR_CREATED, InternalValue.create(Calendar.getInstance()));
-        vNode.setPropertyValues(QName.JCR_PREDECESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
-        vNode.setPropertyValues(QName.JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
+        vNode.setPropertyValue(NameConstants.JCR_CREATED, InternalValue.create(Calendar.getInstance()));
+        vNode.setPropertyValues(NameConstants.JCR_PREDECESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
+        vNode.setPropertyValues(NameConstants.JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
-        NodeStateEx node = vNode.addNode(QName.JCR_FROZENNODE, QName.NT_FROZENNODE, null, true);
+        NodeStateEx node = vNode.addNode(NameConstants.JCR_FROZENNODE, NameConstants.NT_FROZENNODE, null, true);
-        node.setPropertyValue(QName.JCR_FROZENUUID, InternalValue.create(versionableUUID));
-        node.setPropertyValue(QName.JCR_FROZENPRIMARYTYPE,
+        node.setPropertyValue(NameConstants.JCR_FROZENUUID, InternalValue.create(versionableUUID));
+        node.setPropertyValue(NameConstants.JCR_FROZENPRIMARYTYPE,
-                ivalues[i] = InternalValue.create((QName) iter.next());
+                ivalues[i] = InternalValue.create((Name) iter.next());
-            node.setPropertyValues(QName.JCR_FROZENMIXINTYPES, PropertyType.NAME, ivalues);
+            node.setPropertyValues(NameConstants.JCR_FROZENMIXINTYPES, PropertyType.NAME, ivalues);

INS26 UPD40 INS40 UPD5 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD5 UPD42 UPD42 UPD42 UPD42 UPD5 UPD43 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD5 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42