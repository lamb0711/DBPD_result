JCR-442: Committed Nicolas' latest contrib/backup changes (patch-backup-060728.txt) with some modifications.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@426435 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.ObjectOutputStream;
+import java.util.Properties;
+
+import javax.jcr.LoginException;
+import javax.jcr.RepositoryException;
+
+
+import org.apache.jackrabbit.core.NodeId;
+import org.apache.jackrabbit.core.NodeImpl;
+ 
+     * @throws RepositoryException 
+     * @throws LoginException 
-    public RepositoryBackup(RepositoryImpl repo, BackupConfig conf) {
+    public RepositoryBackup(RepositoryImpl repo, BackupConfig conf) throws LoginException, RepositoryException {
-        // TODO Auto-generated constructor stub
-
-    /**
-     * 
-     */
+    
-        // TODO Auto-generated constructor stub
-
-    public void backup(BackupIOHandler h) {
-        // TODO Auto-generated method stub
+    /**
+     * Backup the repository config file
+     * 
+     * TODO Backup properties? Metadata store? Other ressources?
+     * @throws IOException 
+     * @throws RepositoryException 
+     * 
+     * 
+     */
+    public void backup(BackupIOHandler h) throws IOException, RepositoryException {
+        File file = this.conf.getRepoConfFile();
+
+        //Backup repository.xml
+        h.write("repository_xml", file);
+        
+        //Properties
+        Properties p = new Properties();
+        String[] keys = repo.getDescriptorKeys();
+        for (int i = 0; i < keys.length; i++) {
+            p.setProperty(keys[i], repo.getDescriptor(keys[i]));
+        }
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        p.store(bos,"");
+        h.write("repository_properties", bos);
+        
+        // Root node ID
+        NodeImpl nod = (NodeImpl) this.getSession().getRootNode();
+        NodeId n = nod.getNodeId();
+        
+        //We persist the string as a serialized object to avoid compatibility issue
+        String s = n.toString();
+        ByteArrayOutputStream fos = new ByteArrayOutputStream();
+        ObjectOutputStream oos = new ObjectOutputStream(fos);
+        oos.writeObject(s);       
+        h.write("repository_rootNode", fos);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS43 INS29 INS43 INS43 INS8 INS65 INS65 INS42 INS42 INS65 INS65 INS65 INS42 INS42 INS60 INS21 INS60 INS60 INS24 INS60 INS21 INS21 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS43 INS59 INS32 INS43 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS43 INS59 INS32 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS14 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS22 INS42 INS43 INS42 INS42 INS42 INS42 INS34 INS32 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS52 INS42 INS42 INS42 INS42 INS2 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS52 INS42 INS42 INS42 DEL29 DEL8