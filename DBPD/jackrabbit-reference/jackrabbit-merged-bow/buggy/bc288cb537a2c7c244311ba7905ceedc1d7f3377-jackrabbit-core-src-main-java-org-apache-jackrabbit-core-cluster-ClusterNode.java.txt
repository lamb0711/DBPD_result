JCR-1734 - Generated cluster node id should be persisted

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@695821 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.uuid.UUID;
+
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+    /** Cluster node id file. */
+    private static final String CLUSTER_NODE_ID_FILE = "cluster_node.id";
+
-            
+
-     * 
+     *
-     * @param id configured id, <code>null</code> to take random id
+     * @param id configured id, <code>null</code> to generate a unique id
-    private String getClusterNodeId(String id) {
+    private String getClusterNodeId(String id) throws ClusterException {
-                id = toHexString((short) (Math.random() * (Short.MAX_VALUE - Short.MIN_VALUE)));
+                try {
+                    id = getClusterNodeIdFromFile();
+                } catch (IOException e) {
+                    throw new ClusterException(e.getMessage(), e.getCause());
+                }
+     * Return a cluster node from a file, creating it if necessary.
+     *
+     * @return stored or generated cluster id
+     * @throws IOException if an I/O error occurs
+     */
+    protected String getClusterNodeIdFromFile() throws IOException {
+        String filename = clusterContext.getRepositoryHome() + File.separator + CLUSTER_NODE_ID_FILE;
+        File f = new File(filename);
+
+        if (f.exists() && f.canRead()) {
+            BufferedReader reader = null;
+
+            try {
+                reader = new BufferedReader(new FileReader(f));
+                return reader.readLine();
+            } finally {
+                if (reader != null) {
+                    reader.close();
+                }
+            }
+        }
+
+        FileWriter writer = null;
+        String id = UUID.randomUUID().toString();
+
+        try {
+            writer = new FileWriter(f);
+            writer.write(id);
+        } finally {
+            if (writer != null) {
+                writer.close();
+            }
+        }
+        return id;
+
+    }
+
+    /**

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS43 INS29 INS83 INS43 INS42 INS43 INS8 INS65 INS42 INS42 INS45 INS42 INS65 INS65 INS65 INS42 INS42 INS60 INS60 INS25 INS60 INS60 INS54 INS41 INS66 UPD66 INS66 INS66 INS42 INS66 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS8 INS8 INS42 INS42 INS42 INS27 INS42 INS42 INS14 INS32 INS32 INS60 INS54 INS42 INS42 INS33 INS42 INS42 INS32 INS21 INS21 INS25 INS8 INS32 INS40 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS32 INS42 INS7 INS32 INS27 INS8 INS54 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS41 INS25 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS33 INS21 INS8 INS12 INS7 INS32 INS27 INS8 INS43 INS42 INS32 MOV21 INS44 INS8 INS42 INS14 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS43 INS42 INS53 INS43 INS14 INS32 INS32 INS42 INS14 INS42 INS43 INS42 INS42 INS42 UPD42 MOV42 INS43 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL39 DEL42 DEL32 DEL40 DEL40 DEL27 DEL36 DEL27 DEL36 DEL11 DEL32 DEL8