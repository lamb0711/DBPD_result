fixed: move, reorder (work in progress)
fixed: locktoken transfer
fixed: recursive transient removal of invalidated tree fails (restoreTests)
improve: simplify usage of workspace operations
fixed: store original itemId with transient operations in order to properly reflect the changelog upon batch creation
fixed: workspace import doesn't invalidate
fixed: session import uuid handling




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@513279 13f79535-47bb-0310-9956-ffa450edef68

+     * Returns the ID that must be used for resolving this entry OR loading its
+     * children entries from the persistent layer. This is the same as
+     * <code>getId()</code> unless this entry or any of its ancestors has been
+     * transiently moved.
+     *
+     * @return
+     * @see #getId()
+     */
+    public NodeId getWorkspaceId();
+
+    /**
+     * Traverse the tree below this entry and return the child entry matching
+     * the given 'workspacePath', i.e. transient modifications and new entries
+     * are ignored.<p/>
+     * If no matching entry can be found, <code>null</code> is return.
+     *
+     * @param workspacePath
+     * @return matching entry or <code>null</code>.
+     */
+    public HierarchyEntry lookupDeepEntry(Path workspacePath);
+
+    /**
+     * @param nodeName
+     * @param uniqueID
+     * @param primaryNodeType
+     * @param definition
+     * @throws ItemExistsException
-     * @param newName
-     * @param newParent
-     * @return
-     */
-    public NodeEntry moveNodeEntry(NodeState childState, QName newName, NodeEntry newParent) throws RepositoryException;
-
-    /**
-     * @return true if the reordering was successful. False if either of the
-     * given entry does not exist in the listed child entries..
-    public boolean orderBefore(NodeEntry beforeEntry) ;
+    public void orderBefore(NodeEntry beforeEntry) ;
+
+    /**
+     * @param newName
+     * @param newParent
+     * @return
+     */
+    public NodeEntry move(QName newName, NodeEntry newParent, boolean transientMove) throws RepositoryException;
+
+    /**
+     * @return true if this <code>NodeEntry</code> is transiently moved.
+     */
+    public boolean isTransientlyMoved();

MOV31 INS31 INS31 MOV44 INS31 INS29 INS83 INS43 INS42 INS29 INS83 INS43 INS42 INS44 UPD39 UPD42 INS29 INS83 INS39 INS42 INS65 INS65 INS65 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS65 INS66 INS66 INS66 INS66 INS68 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS66 INS42 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42