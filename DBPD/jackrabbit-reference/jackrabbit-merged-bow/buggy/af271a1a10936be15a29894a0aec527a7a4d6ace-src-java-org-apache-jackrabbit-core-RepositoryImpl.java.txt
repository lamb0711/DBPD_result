JAAS support 

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155344 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.CredentialsCallbackHandler;
-import javax.jcr.*;
+import javax.jcr.Credentials;
+import javax.jcr.LoginException;
+import javax.jcr.NamespaceRegistry;
+import javax.jcr.NoSuchWorkspaceException;
+import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
+import javax.jcr.Session;
-import java.io.*;
-import java.util.*;
+import javax.security.auth.login.LoginContext;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Properties;
-    private static final String ANONYMOUS_USER = "anonymous";
-
-    private static final Credentials ANONYMOUS_CREDENTIALS =
-            new SimpleCredentials(ANONYMOUS_USER, new char[0]);
-
+    // name of jaas config entry
+    public static final String JAAS_CONFIG_APPNAME = "Jackrabbit";
+
-        if (credentials == null) {
-            // anonymous login
-            SessionImpl ses = new XASessionImpl(this, ANONYMOUS_CREDENTIALS, wspInfo.getConfig());
-            activeSessions.put(ses, ses);
-            return ses;
-        } else if (credentials instanceof SimpleCredentials) {
-            // username/password credentials
-            // @todo implement authentication/authorization
-            Session ses = new XASessionImpl(this, credentials, wspInfo.getConfig());
-            activeSessions.put(ses, ses);
-            return ses;
-        } else {
-            String msg = "login failed: incompatible credentials";
-            log.debug(msg);
-            throw new RepositoryException(msg);
+
+        CredentialsCallbackHandler cbHandler =
+                new CredentialsCallbackHandler(credentials);
+        LoginContext lc;
+        try {
+            lc = new LoginContext(JAAS_CONFIG_APPNAME, cbHandler);
+            lc.login();
+        } catch (javax.security.auth.login.LoginException le) {
+            throw new LoginException(le.getMessage());
+
+        Session ses = new XASessionImpl(this, lc, wspInfo.getConfig());
+        activeSessions.put(ses, ses);
+        return ses;
-                systemSession = new SystemSession(RepositoryImpl.this, config);
+                systemSession = SystemSession.create(RepositoryImpl.this, config);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 MOV23 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 UPD83 UPD42 UPD45 MOV60 INS60 INS54 MOV60 MOV21 MOV41 UPD43 INS43 INS59 INS8 INS12 UPD42 UPD42 INS42 INS42 INS21 MOV21 INS44 INS8 UPD43 UPD42 INS7 INS43 INS42 MOV53 UPD42 UPD42 INS42 INS14 UPD42 UPD42 INS40 INS43 INS42 INS42 UPD43 INS32 INS32 UPD42 MOV42 UPD42 INS42 INS42 INS42 INS42 MOV52 INS42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL39 DEL85 DEL5 DEL34 DEL3 DEL14 DEL59 DEL23 DEL52 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL42 DEL43 DEL62 DEL8 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL8 DEL25 DEL25 DEL42 DEL43 DEL42 DEL14