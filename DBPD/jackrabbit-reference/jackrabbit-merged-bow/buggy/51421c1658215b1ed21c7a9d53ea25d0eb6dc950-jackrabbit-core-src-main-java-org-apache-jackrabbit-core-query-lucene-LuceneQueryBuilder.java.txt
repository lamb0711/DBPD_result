JCR-1104: JSR 283 support (work in progress)
- NodeLocalName

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@647798 13f79535-47bb-0310-9956-ffa450edef68

-                    String name = null;
+                    Name name = null;
-                        name = resolver.getJCRName(elements[i].getName());
+                        name = elements[i].getName();
-                        Query q = new TermQuery(new Term(FieldNames.LABEL, name));
+                        Query q = new NameQuery(name, indexFormatVersion, nsMappings);
-                        context = new ParentAxisQuery(context, name);
+                        context = new ParentAxisQuery(context, name,
+                                indexFormatVersion, nsMappings);
-                context = new ParentAxisQuery(context, null);
+                context = new ParentAxisQuery(context, null,
+                        indexFormatVersion, nsMappings);
-                    String name = "";
-                    try {
-                        name = resolver.getJCRName(nameTest);
-                    } catch (NamespaceException e) {
-                        exceptions.add(e);
-                    }
-                    and.add(new TermQuery(new Term(FieldNames.LABEL, name)), Occur.MUST);
+                    and.add(new NameQuery(nameTest, indexFormatVersion, nsMappings), Occur.MUST);
-        TermQuery nameTest = null;
+        NameQuery nameTest = null;
-            try {
-                String internalName = resolver.getJCRName(node.getNameTest());
-                nameTest = new TermQuery(new Term(FieldNames.LABEL, internalName));
-            } catch (NamespaceException e) {
-                // should never happen
-                exceptions.add(e);
-            }
+            nameTest = new NameQuery(node.getNameTest(), indexFormatVersion, nsMappings);
-                            andQuery.add(new ChildAxisQuery(sharedItemMgr, context, null, node.getIndex()), Occur.MUST);
+                            andQuery.add(new ChildAxisQuery(sharedItemMgr,
+                                    context, null, node.getIndex(),
+                                    indexFormatVersion, nsMappings), Occur.MUST);
-                andQuery.add(new ChildAxisQuery(sharedItemMgr, context, nameTest.getTerm().text(), node.getIndex()), Occur.MUST);
+                andQuery.add(new ChildAxisQuery(sharedItemMgr, context,
+                        nameTest.getName(), node.getIndex(), indexFormatVersion,
+                        nsMappings), Occur.MUST);
-                andQuery.add(new ChildAxisQuery(sharedItemMgr, context, null, node.getIndex()), Occur.MUST);
+                andQuery.add(new ChildAxisQuery(sharedItemMgr, context, null,
+                        node.getIndex(), indexFormatVersion, nsMappings),
+                        Occur.MUST);
-            String nameTest = null;
-            if (node.getNameTest() != null) {
-                nameTest = resolver.getJCRName(node.getNameTest());
-            }
-            context = new DerefQuery(context, refProperty, nameTest);
+            context = new DerefQuery(context, refProperty, node.getNameTest(),
+                    indexFormatVersion, nsMappings);
-                    String translatedQName = nsMappings.translatePropertyName(n);
-                    Term t = new Term(FieldNames.LABEL, translatedQName);
-                    query = new TermQuery(t);
+                    query = new NameQuery(n, indexFormatVersion, nsMappings);
-                query = new TermQuery(new Term(FieldNames.UUID, "x"));
+                query = new BooleanQuery();
-                    String uuid = "x";
-                            uuid = id.getUUID().toString();
+                            query = new SimilarityQuery(id.getUUID().toString(), analyzer);
+                        } else {
+                            query = new BooleanQuery();
+                        query = new BooleanQuery();
-                    query = new SimilarityQuery(uuid, analyzer);
-            try {
-                // child axis in relation
-                Path.Element[] elements = relPath.getElements();
-                // elements.length - 1 = property name
-                // elements.length - 2 = last child axis name test
-                for (int i = elements.length - 2; i >= 0; i--) {
-                    String name = null;
-                    if (!elements[i].getName().equals(RelationQueryNode.STAR_NAME_TEST)) {
-                        name = resolver.getJCRName(elements[i].getName());
-                    }
-                    if (i == elements.length - 2) {
-                        // join name test with property query if there is one
-                        if (name != null) {
-                            Query nameTest = new TermQuery(new Term(FieldNames.LABEL, name));
-                            BooleanQuery and = new BooleanQuery();
-                            and.add(query, Occur.MUST);
-                            and.add(nameTest, Occur.MUST);
-                            query = and;
-                        } else {
-                            // otherwise the query can be used as is
-                        }
-                    } else {
-                        query = new ParentAxisQuery(query, name);
-                    }
+            // child axis in relation
+            Path.Element[] elements = relPath.getElements();
+            // elements.length - 1 = property name
+            // elements.length - 2 = last child axis name test
+            for (int i = elements.length - 2; i >= 0; i--) {
+                Name name = null;
+                if (!elements[i].getName().equals(RelationQueryNode.STAR_NAME_TEST)) {
+                    name = elements[i].getName();
-            } catch (NamespaceException e) {
-                // should never happen
-                exceptions.add(e);
+                if (i == elements.length - 2) {
+                    // join name test with property query if there is one
+                    if (name != null) {
+                        Query nameTest = new NameQuery(name,
+                                indexFormatVersion, nsMappings);
+                        BooleanQuery and = new BooleanQuery();
+                        and.add(query, Occur.MUST);
+                        and.add(nameTest, Occur.MUST);
+                        query = and;
+                    } else {
+                        // otherwise the query can be used as is
+                    }
+                } else {
+                    query = new ParentAxisQuery(query, name,
+                            indexFormatVersion, nsMappings);
+                }
-            query = new ParentAxisQuery(query, null);
+            query = new ParentAxisQuery(query, null,
+                    indexFormatVersion, nsMappings);

UPD43 INS8 MOV8 UPD42 MOV21 MOV21 MOV21 INS21 MOV8 INS7 INS42 INS14 UPD43 MOV32 INS42 UPD42 MOV42 MOV32 INS42 UPD42 UPD43 MOV43 INS42 INS33 INS42 INS42 UPD42 INS8 INS21 UPD42 UPD43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD43 INS21 INS7 UPD42 MOV42 UPD42 MOV42 UPD42 INS7 INS42 INS14 MOV32 INS8 UPD43 UPD42 INS42 INS42 UPD42 INS14 INS42 INS14 INS43 MOV43 INS42 INS42 MOV32 UPD43 INS42 INS42 UPD42 MOV42 MOV21 INS21 UPD42 MOV43 MOV32 INS42 INS43 INS42 UPD43 INS42 INS42 UPD42 MOV42 UPD42 INS32 INS42 UPD43 INS42 INS42 UPD42 MOV42 UPD42 INS42 INS42 INS42 INS42 INS14 INS40 UPD42 MOV43 INS42 INS42 INS33 MOV32 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL33 DEL14 DEL40 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL40 DEL45 DEL14 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL42 DEL33 DEL14 DEL7 DEL21 DEL8