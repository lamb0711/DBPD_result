JCR-2216: Append-only index updates

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@801253 13f79535-47bb-0310-9956-ffa450edef68

-    private static final String REDO_LOG = "redo.log";
+    static final String REDO_LOG = "redo.log";
+
+    /**
+     * Prefix of the redo log files.
+     */
+    static final String REDO_LOG_PREFIX = "redo_";
+
+    /**
+     * The .log extension.
+     */
+    static final String DOT_LOG = ".log";
+     * The name of the log file.
+     */
+    private final String fileName;
+
+    /**
+     * @param fileName the name of the redo log file.
-    RedoLog(Directory dir) throws IOException {
+    private RedoLog(Directory dir, String fileName) throws IOException {
+        this.fileName = fileName;
+     * Creates a new <code>RedoLog</code> instance, which stores its log in the
+     * given directory.
+     *
+     * @param dir        the directory where the redo log file is located.
+     * @param generation the redo log generation number.
+     * @return the redo log.
+     * @throws IOException if the redo log cannot be created.
+     */
+    static RedoLog create(Directory dir, long generation) throws IOException {
+        String fileName;
+        if (generation == 0) {
+            fileName = RedoLog.REDO_LOG;
+        } else {
+            fileName = RedoLog.REDO_LOG_PREFIX + Long.toString(
+                    generation, Character.MAX_RADIX) + RedoLog.DOT_LOG;
+        }
+        return new RedoLog(dir, fileName);
+    }
+
+    /**
-    List getActions() throws IOException {
-        final List actions = new ArrayList();
+    List<MultiIndex.Action> getActions() throws IOException {
+        final List<MultiIndex.Action> actions = new ArrayList<MultiIndex.Action>();
-        dir.deleteFile(REDO_LOG);
+        dir.deleteFile(fileName);
+     * Closes this redo log.
+     *
+     * @throws IOException if an error occurs while flushing pending writes.
+     */
+    void close() throws IOException {
+        if (out != null) {
+            out.close();
+            out = null;
+        }
+    }
+
+    /**
-            OutputStream os = new IndexOutputStream(dir.createOutput(REDO_LOG));
+            OutputStream os = new IndexOutputStream(dir.createOutput(fileName));
-        if (!dir.fileExists(REDO_LOG)) {
+        if (!dir.fileExists(fileName)) {
-        InputStream in = new IndexInputStream(dir.openInput(REDO_LOG));
+        InputStream in = new IndexInputStream(dir.openInput(fileName));

INS23 INS23 INS23 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS83 INS44 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS74 INS29 INS39 INS42 INS43 INS8 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS65 INS43 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS25 INS41 MOV43 INS43 INS65 INS65 INS42 INS25 INS66 INS66 INS66 INS42 INS66 INS42 INS7 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS59 INS27 INS8 INS8 INS14 INS40 INS74 INS66 INS42 INS66 INS27 INS8 INS22 INS42 INS42 INS42 INS42 INS34 INS21 INS21 INS43 INS42 INS42 MOV43 INS43 UPD42 INS42 INS33 INS21 INS21 INS52 INS42 INS7 INS7 INS42 INS40 INS74 INS32 INS7 UPD42 INS42 INS40 INS42 INS27 MOV43 INS43 INS42 INS42 INS42 INS33 UPD42 INS40 INS32 INS40 INS40 INS42 INS42 INS42 INS40 UPD42 DEL83