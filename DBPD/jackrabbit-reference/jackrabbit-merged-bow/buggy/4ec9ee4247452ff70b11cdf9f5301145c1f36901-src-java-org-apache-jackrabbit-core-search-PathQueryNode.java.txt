- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

- *
- * @author Marcel Reutegger
- * @version $Revision:  $, $Date:  $
-    /** Match path exact*/
+    /**
+     * Match path exact
+     */
-    /** Match child nodes of path */
+    /**
+     * Match child nodes of path
+     */
-    /** Match descendant nodes of path */
+    /**
+     * Match descendant nodes of path
+     */
-    /** The base path */
+    /**
+     * The base path
+     */
-    /** Converted path without indexes. /bla[2] -> /bla */
+    /**
+     * Converted path without indexes. /bla[2] -> /bla
+     */
-    /** The match type for this query node */
+    /**
+     * The match type for this query node
+     */
-    /** Flag indicating if this path query contains indexed location steps */
+    /**
+     * Flag indicating if this path query contains indexed location steps
+     */
-	super(parent);
-	if (type < TYPE_EXACT || type > TYPE_DESCENDANT) {
-	    throw new IllegalArgumentException(String.valueOf(type));
-	}
-	this.path = path;
-	this.type = type;
-	this.indexedName = (path.indexOf('[') > -1);
-	if (indexedName) {
-	    // also create an indexless path
-	    StringBuffer tmp = new StringBuffer(path);
-	    int idx;
-	    while ((idx = tmp.indexOf("[")) > -1) {
-		int end = tmp.indexOf("]", idx);
-		if (end > -1) {
-		    tmp.replace(idx, end, "");
-		} else {
-		    // should never happen
-		    // FIXME do some error logging?
-		    break;
-		}
-	    }
-	    this.indexlessPath = tmp.toString();
-	} else {
-	    this.indexlessPath = path;
-	}
+        super(parent);
+        if (type < TYPE_EXACT || type > TYPE_DESCENDANT) {
+            throw new IllegalArgumentException(String.valueOf(type));
+        }
+        this.path = path;
+        this.type = type;
+        this.indexedName = (path.indexOf('[') > -1);
+        if (indexedName) {
+            // also create an indexless path
+            StringBuffer tmp = new StringBuffer(path);
+            int idx;
+            while ((idx = tmp.indexOf("[")) > -1) {
+                int end = tmp.indexOf("]", idx);
+                if (end > -1) {
+                    tmp.replace(idx, end, "");
+                } else {
+                    // should never happen
+                    // FIXME do some error logging?
+                    break;
+                }
+            }
+            this.indexlessPath = tmp.toString();
+        } else {
+            this.indexlessPath = path;
+        }
-	return visitor.visit(this, data);
+        return visitor.visit(this, data);
-	return path;
+        return path;
-	return indexlessPath;
+        return indexlessPath;
-	return type;
+        return type;
-	return indexedName;
+        return indexedName;
+     *
-	StringBuffer jcrql = new StringBuffer("LOCATION ");
-	jcrql.append(path);
-	if (type == TYPE_CHILDREN) {
-	    jcrql.append("/*");
-	} else if (type == TYPE_DESCENDANT) {
-	    jcrql.append("//");
-	}
-	return jcrql.toString();
+        StringBuffer jcrql = new StringBuffer("LOCATION ");
+        jcrql.append(path);
+        if (type == TYPE_CHILDREN) {
+            jcrql.append("/*");
+        } else if (type == TYPE_DESCENDANT) {
+            jcrql.append("//");
+        }
+        return jcrql.toString();
+     *
-	// todo implement correctly.
-	return "";
+        // todo implement correctly.
+        return "";

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL65 DEL66 DEL65