JCR-2885: Move tika-parsers dependency to deployment packages

Drop the JackrabbitParser backwards compatibility layer in favor of
a new tikaConfigPath configuration option.

Use the Tika autoloading feature to automatically load a blocking
parser class for test cases that measure index queue functionality.
We no longer need to pollute src/main/java with this test functionality.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1072006 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.tika.config.TikaConfig;
+import org.apache.tika.parser.AutoDetectParser;
+import java.net.MalformedURLException;
+import java.net.URL;
-     * The parser for extracting text content from binary properties.
+     * Path of the Tika configuration file used for text extraction.
-    private final JackrabbitParser parser = new JackrabbitParser();
+    private String tikaConfigPath = null;
+
+    /**
+     * The Tika parser for extracting text content from binary properties.
+     * Initialized by the {@link #getParser()} method during first access.
+     */
+    private Parser parser = null;
+     * Returns the path of the Tika configuration used for text extraction.
+     *
+     * @return path of the Tika configuration file
+     */
+    public String getTikaConfigPath() {
+        return tikaConfigPath;
+    }
+
+    /**
+     * Sets the path of the Tika configuration used for text extraction.
+     * The path can be either a file system or a class resource path.
+     * The default setting is the tika-config.xml class resource relative
+     * to org.apache.core.query.lucene.
+     *
+     * @param tikaConfigPath path of the Tika configuration file
+     */
+    public void setTikaConfigPath(String tikaConfigPath) {
+        this.tikaConfigPath = tikaConfigPath;
+    }
+
+    /**
-    public Parser getParser() {
+    public synchronized Parser getParser() {
+        if (parser == null) {
+            URL url = null;
+            if (tikaConfigPath != null) {
+                File file = new File(tikaConfigPath);
+                if (file.exists()) {
+                    try {
+                        url = file.toURI().toURL();
+                    } catch (MalformedURLException e) {
+                        log.warn("Invalid Tika configuration path: " + file, e);
+                    }
+                } else {
+                    ClassLoader loader = SearchIndex.class.getClassLoader();
+                    url = loader.getResource(tikaConfigPath);
+                }
+            }
+            if (url == null) {
+                url = SearchIndex.class.getResource("tika-config.xml");
+            }
+
+            TikaConfig config = null;
+            if (url != null) {
+                try {
+                    config = new TikaConfig(url);
+                } catch (Exception e) {
+                    log.warn("Tika configuration not available: " + url, e);
+                }
+            }
+            if (config == null) {
+                config = TikaConfig.getDefaultConfig();
+            }
+
+            parser = new AutoDetectParser(config);
+        }
-                getContext().getExecutor(), parser);
+                getContext().getExecutor(), getParser());
-        parser.setTextFilterClasses(filterClasses);
+        log.warn("The textFilterClasses configuration parameter has"
+                + " been deprecated, and the configured value will"
+                + " be ignored: {}", filterClasses);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 MOV29 MOV83 INS43 INS59 INS29 UPD83 MOV83 UPD43 MOV43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS8 INS42 INS42 INS33 INS65 UPD42 MOV42 INS33 INS65 INS65 UPD42 MOV42 INS41 INS65 INS65 INS43 INS42 INS21 INS25 MOV41 UPD66 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS7 INS27 INS8 INS68 INS22 INS42 INS42 INS33 INS60 INS25 INS25 INS60 INS25 INS25 INS21 UPD42 UPD42 INS27 INS42 INS52 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS7 INS32 INS45 INS45 INS45 INS42 INS42 INS33 INS42 INS33 INS60 INS25 INS42 INS33 INS21 INS42 INS42 INS33 INS42 INS33 INS54 INS42 INS33 INS21 INS42 INS14 INS42 INS43 INS59 INS32 INS8 INS8 INS7 INS8 INS12 INS7 INS43 INS42 INS42 INS42 INS14 INS42 INS42 INS54 INS60 INS21 INS42 INS32 INS21 INS44 INS8 INS42 INS32 INS42 INS43 INS42 INS8 INS12 INS43 INS59 INS7 INS57 INS42 INS45 INS7 INS43 INS42 INS21 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS32 INS42 INS32 INS43 INS42 INS14 INS42 INS32 INS7 INS43 INS42 INS21 INS57 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS32 INS43 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 DEL43 DEL14 DEL59 DEL23 DEL8 DEL42