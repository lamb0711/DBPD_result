JCR-1598: Problematic exception handling in Jackrabbit WebApp 

Added a ServletExceptionWithCause utility class and used it to properly capture chained exceptions.

Minor improvements in exception and log messages.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@691632 13f79535-47bb-0310-9956-ffa450edef68

-                        log.error("Error while opening bootstrap properties: {}", e.toString());
-                        throw new ServletException("Error while opening bootstrap properties: " + e.toString());
+                        throw new ServletExceptionWithCause(
+                                "Bootstrap configuration not found: " + bstrp, e);
-                    log.error("Error while loading bootstrap properties: {}", e.toString());
-                    throw new ServletException("Error while loading bootstrap properties: " + e.toString());
+                    throw new ServletException(
+                            "Bootstrap configuration failure: " + bstrp, e);
-            log.error("Repository startup configuration invalid: " + e.toString());
-            throw new ServletException("Repository startup configuration invalid: " + e.toString());
+            throw new ServletExceptionWithCause(
+                    "Repository configuration failure: " + config.getRepositoryHome(), e);
-                    log.error("Repository startup configuration invalid: " + e1.toString());
-                    throw new ServletException("Repository startup configuration invalid: " + e.toString());
+                    throw new ServletExceptionWithCause(
+                            "Repository configuration not found: " + repConfig, e);
-            throw new ServletException("Error while creating repository", e);
+            throw new ServletExceptionWithCause("Error while creating repository", e);
-                throw new ServletException("Unable to bind repository using JNDI.", e);
+                throw new ServletExceptionWithCause(
+                        "Unable to bind repository using JNDI: " + jc.getJndiName(), e);
-            throw new ServletException("Unable to create remote repository.", e);
-        } catch (NoClassDefFoundError e) {
-            throw new ServletException("Unable to create RMI repository. jcr-rmi.jar might be missing.", e);
-        } catch (Exception e) {
-            log.error("Unable to create RMI repository.", e);
-            throw new ServletException("Unable to create RMI repository. jcr-rmi.jar might be missing.");
+            throw new ServletExceptionWithCause("Unable to create remote repository.", e);
+        } catch (Throwable t) {
+            log.error("Unable to create RMI repository.", t);
+            throw new ServletExceptionWithCause(
+                    "Unable to create RMI repository. jcr-rmi.jar might be missing.", t);
-            throw new ServletException("Unable to bind repository via RMI.", e);
+            throw new ServletExceptionWithCause(
+                    "Unable to bind repository via RMI: " + rc.getRmiUri(), e);
-            throw new ServletException("Unable to bind repository via RMI.", e);
+            throw new ServletExceptionWithCause(
+                    "Unable to bind repository via RMI: " + rc.getRmiUri(), e);

UPD43 UPD42 UPD42 UPD43 INS42 UPD43 UPD43 UPD42 UPD43 INS42 UPD43 INS27 UPD43 INS27 UPD42 UPD45 UPD42 UPD42 UPD42 UPD42 INS45 INS32 UPD42 INS45 INS32 UPD42 UPD42 UPD43 INS27 INS42 INS42 INS42 INS42 UPD42 INS45 INS32 INS42 INS42 INS42 UPD45 INS42 UPD43 INS42 UPD43 INS42 UPD42 UPD45 INS42 UPD42 UPD45 INS42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL45 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL45 DEL45