work in progress

- ChangeLog: add target (item to be saved)
- TransientItemStateManager: changing itemstate from new to existing => needs to connect to overlayed state
- TransientISFactory move out of TransientISM
- RepositoryServiceImpl: simplify execution of wsp-operations
- Initial draft for observation
- WorkspaceManager: seperate notification of events resulting from transient modifications.
- WorkspaceManager: don't report events from wsp-operations as external mods.
- IteratorHelper; add EMPTY constant
- Event: add constant for ALL events

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@451313 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.NodeId;
-import org.apache.jackrabbit.spi.PropertyId;
-     * The transient item state factory to create new and existing item state
-     * instances.
-     */
-    private final TransientISFactory isf;
-
-    /**
-        this.changeLog = new ChangeLog();
-        this.isf = (TransientISFactory) getItemStateFactory();
-        this.isf.setListener(this);
+        this.changeLog = new ChangeLog(null);
+        ((TransientISFactory) getTransientFactory()).setListener(this);
-
-            rootNodeState = isf.createRootState(this);
+            rootNodeState = getItemStateFactory().createRootState(this);
-        NodeState nodeState = isf.createNewNodeState(nodeName, uuid, parent, nodeTypeName, definition);
+        NodeState nodeState = getTransientFactory().createNewNodeState(nodeName, uuid, parent, nodeTypeName, definition);
-        PropertyState propState = isf.createNewPropertyState(propName, parent, definition);
+        PropertyState propState = getTransientFactory().createNewPropertyState(propName, parent, definition);
+                    // state needs to be connected to the overlayed-state now
+                    try {
+                        ItemState overlayedState = parent.getItemState(state.getId());
+                        state.connect(overlayedState);
+                    } catch (ItemStateException e) {
+                        // TODO, handle property
+                        log.error(e.getMessage());
+                    }
-    //----------------------< TransientItemStateFactory >-----------------------
-
-    private final static class TransientISFactory implements TransientItemStateFactory {
-
-        private final IdFactory idFactory;
-
-        private ItemStateLifeCycleListener listener;
-
-        private final ItemStateManager parent;
-
-        private TransientISFactory(IdFactory idFactory,
-                                   ItemStateManager parent) {
-            this.idFactory = idFactory;
-            this.parent = parent;
-        }
-
-        private void setListener(ItemStateLifeCycleListener listener) {
-            this.listener = listener;
-        }
-
-        /**
-         * @inheritDoc
-         * @see TransientItemStateFactory#createNewNodeState(QName, String, NodeState, QName, QNodeDefinition)
-         */
-        public NodeState createNewNodeState(QName name, String uuid,
-                                            NodeState parent, QName nodetypeName,
-                                            QNodeDefinition definition) {
-            NodeState nodeState = new NodeState(name, uuid, parent, nodetypeName,
-                definition, ItemState.STATUS_NEW, this, idFactory);
-            // get a notification when this item state is saved or invalidated
-            nodeState.addListener(listener);
-            // notify listener that a node state has been created
-            listener.statusChanged(nodeState, ItemState.STATUS_NEW);
-            return nodeState;
-        }
-
-        /**
-         * @inheritDoc
-         * @see TransientItemStateFactory#createNewPropertyState(QName, NodeState, QPropertyDefinition)
-         */
-        public PropertyState createNewPropertyState(QName name, NodeState parent, QPropertyDefinition definition) {
-            PropertyState propState = new PropertyState(name, parent,
-                definition, ItemState.STATUS_NEW, idFactory);
-            // get a notification when this item state is saved or invalidated
-            propState.addListener(listener);
-            // notify listener that a property state has been created
-            listener.statusChanged(propState, ItemState.STATUS_NEW);
-            return propState;
-        }
-
-        /**
-         * @inheritDoc
-         * @see ItemStateFactory#createRootState(ItemStateManager)
-         */
-        public NodeState createRootState(ItemStateManager ism) throws ItemStateException {
-            // retrieve state to overlay
-            NodeState overlayedState = (NodeState) parent.getRootState();
-            NodeState nodeState = new NodeState(overlayedState, null,
-                    ItemState.STATUS_EXISTING, this, idFactory);
-            nodeState.addListener(listener);
-            return nodeState;
-        }
-
-        /**
-         * @inheritDoc
-         * @see ItemStateFactory#createNodeState(NodeId, ItemStateManager)
-         */
-        public NodeState createNodeState(NodeId nodeId, ItemStateManager ism)
-                throws NoSuchItemStateException, ItemStateException {
-            // retrieve state to overlay
-            NodeState overlayedState = (NodeState) parent.getItemState(nodeId);
-            NodeState overlayedParent = overlayedState.getParent();
-            NodeState parentState = null;
-            if (overlayedParent != null) {
-                parentState = (NodeState) ism.getItemState(overlayedParent.getId());
-            }
-            NodeState nodeState = new NodeState(overlayedState, parentState,
-                    ItemState.STATUS_EXISTING, this, idFactory);
-            nodeState.addListener(listener);
-            return nodeState;
-        }
-
-        /**
-         * @inheritDoc
-         * @see ItemStateFactory#createNodeState(NodeId, NodeState)
-         */
-        public NodeState createNodeState(NodeId nodeId, NodeState parentState)
-                throws NoSuchItemStateException, ItemStateException {
-            // retrieve state to overlay
-            NodeState overlayedState = (NodeState) parent.getItemState(nodeId);
-            NodeState nodeState = new NodeState(overlayedState, parentState,
-                    ItemState.STATUS_EXISTING, this, idFactory);
-            nodeState.addListener(listener);
-            return nodeState;
-        }
-
-        /**
-         * @inheritDoc
-         * @see ItemStateFactory#createPropertyState(PropertyId, NodeState)
-         */
-        public PropertyState createPropertyState(PropertyId propertyId,
-                                                 NodeState parentState)
-                throws NoSuchItemStateException, ItemStateException {
-            // retrieve state to overlay
-            PropertyState overlayedState = (PropertyState) parent.getItemState(propertyId);
-            PropertyState propState = new PropertyState(overlayedState, parentState,
-                    ItemState.STATUS_EXISTING, idFactory);
-            propState.addListener(listener);
-            return propState;
-        }
+    private TransientItemStateFactory getTransientFactory() {
+        return (TransientItemStateFactory) getItemStateFactory();

INS31 MOV21 INS83 MOV43 INS42 MOV8 INS41 INS11 INS36 UPD43 MOV43 MOV32 INS33 MOV11 INS32 INS32 UPD42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS8 UPD42 MOV42 MOV21 INS54 INS8 INS12 INS60 INS21 INS44 INS8 INS43 INS59 INS32 MOV43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL33 DEL40 DEL52 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL83 DEL83 DEL83 DEL42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL52 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL31 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL52 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL52 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL55