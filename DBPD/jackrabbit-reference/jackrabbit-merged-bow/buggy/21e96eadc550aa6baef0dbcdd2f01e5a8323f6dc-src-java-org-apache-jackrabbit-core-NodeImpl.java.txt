migrating to v0.15 of the jsr 170 spec

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55516 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.access.AccessDeniedException;
-     * @see Node#remove(String)
-     */
-    public synchronized void remove(String relPath)
-            throws PathNotFoundException, RepositoryException {
-        // check state of this instance
-        checkItemState();
-
-        Path targetPath;
-        Path.PathElement targetName;
-        Path parentPath;
-        try {
-            targetPath = Path.create(getPrimaryPath(), relPath, session.getNamespaceResolver(), true);
-            targetName = targetPath.getNameElement();
-            parentPath = targetPath.getAncestor(1);
-        } catch (MalformedPathException e) {
-            String msg = "failed to resolve path " + relPath + " relative to " + safeGetJCRPath();
-            log.error(msg, e);
-            throw new RepositoryException(msg, e);
-        }
-
-        // check if the specified item exists and if it is protected
-        ItemImpl targetItem;
-        try {
-            targetItem = itemMgr.getItem(targetPath);
-            if (targetItem.isNode()) {
-                NodeImpl node = (NodeImpl) targetItem;
-                NodeDef def = node.getDefinition();
-                // check protected flag
-                if (def.isProtected()) {
-                    String msg = targetItem.safeGetJCRPath() + ": cannot remove a protected node";
-                    log.error(msg);
-                    throw new ConstraintViolationException(msg);
-                }
-            } else {
-                PropertyImpl prop = (PropertyImpl) targetItem;
-                PropertyDef def = prop.getDefinition();
-                // check protected flag
-                if (def.isProtected()) {
-                    String msg = targetItem.safeGetJCRPath() + ": cannot remove a protected property";
-                    log.error(msg);
-                    throw new ConstraintViolationException(msg);
-                }
-            }
-        } catch (AccessDeniedException ade) {
-            throw new PathNotFoundException(relPath);
-        }
-
-        NodeImpl parentNode;
-        try {
-            ItemImpl parent = itemMgr.getItem(parentPath);
-            if (!parent.isNode()) {
-                // should never get here
-                String msg = "cannot remove an item from a property " + parent.safeGetJCRPath();
-                log.error(msg);
-                throw new RepositoryException(msg);
-            }
-            parentNode = (NodeImpl) parent;
-        } catch (AccessDeniedException ade) {
-            // should never get here because we already checked
-            // the existence of the child...
-            throw new PathNotFoundException(relPath);
-        }
-
-        // check if versioning allows write
-        if (!parentNode.safeIsCheckedOut()) {
-            String msg = parentNode.safeGetJCRPath() + ": cannot remove a child of a checked-in node";
-            log.error(msg);
-            throw new VersionException(msg);
-        }
-
-        // check protected flag of parent node
-        if (parentNode.getDefinition().isProtected()) {
-            String msg = parentNode.safeGetJCRPath() + ": cannot remove a child of a protected node";
-            log.error(msg);
-            throw new ConstraintViolationException(msg);
-        }
-
-        // delegate the removal of the child item to the parent node
-        if (targetItem.isNode()) {
-            parentNode.removeChildNode(targetName.getName(), targetName.getIndex());
-        } else {
-            parentNode.removeChildProperty(targetName.getName());
-        }
-    }
-
-    /**
-            throws UnsupportedRepositoryOperationException, RepositoryException {
+            throws VersionException, UnsupportedRepositoryOperationException,
+            RepositoryException {
-                // so delete here aswell?
+                // so delete here as well?
-                    remove(n.getName());
+                    n.remove();
-                    getNode(f.getName()).remove(".");
+                    getNode(f.getName()).remove();

MOV43 INS32 MOV42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL9 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL34 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL11 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL32 DEL32 DEL45