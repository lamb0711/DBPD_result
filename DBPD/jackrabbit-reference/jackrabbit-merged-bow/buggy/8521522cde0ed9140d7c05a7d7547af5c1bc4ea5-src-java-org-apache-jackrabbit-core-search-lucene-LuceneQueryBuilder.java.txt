Implemented support for value comparison and general comparison using multi valued properties.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126294 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.NamespaceException;
+        String mvpField = "";
+            StringBuffer tmp = new StringBuffer();
+            tmp.append(nsMappings.getPrefix(node.getProperty().getNamespaceURI()));
+            tmp.append(':').append(FieldNames.MVP_PREFIX);
+            tmp.append(node.getProperty().getLocalName());
+            mvpField = tmp.toString();
+        } catch (NamespaceException e) {
+            // should never happen
+            exceptions.add(e);
-            case Constants.OPERATION_EQ:	// =
+            case Constants.OPERATION_EQ_VALUE:      // =
-            case Constants.OPERATION_GE:	// >=
+            case Constants.OPERATION_EQ_GENERAL:    // =
+                // search in single and multi valued properties
+                BooleanQuery or = new BooleanQuery();
+                or.add(new TermQuery(new Term(field, stringValue)), false, false);
+                or.add(new TermQuery(new Term(mvpField, stringValue)), false, false);
+                query = or;
+                break;
+            case Constants.OPERATION_GE_VALUE:      // >=
-            case Constants.OPERATION_GT:	// >
+            case Constants.OPERATION_GT_VALUE:      // >
-            case Constants.OPERATION_LE:	// <=
+            case Constants.OPERATION_LE_VALUE:      // <=
-            case Constants.OPERATION_LIKE:	// LIKE
+            case Constants.OPERATION_LIKE:          // LIKE
-            case Constants.OPERATION_LT:	// <
+            case Constants.OPERATION_LT_VALUE:      // <
-            case Constants.OPERATION_NE:	// !=
+            case Constants.OPERATION_NE_VALUE:      // !=
+            case Constants.OPERATION_NE_GENERAL:    // !=
+                // search in single and multi valued properties
+                notQuery = new BooleanQuery();
+                notQuery.add(new MatchAllQuery(field), false, false);
+                notQuery.add(new MatchAllQuery(mvpField), false, false);
+                notQuery.add(new TermQuery(new Term(field, stringValue)), false, true);
+                notQuery.add(new TermQuery(new Term(mvpField, stringValue)), false, true);
+                query = notQuery;
+                break;

INS26 INS40 INS60 MOV21 MOV49 MOV21 MOV10 MOV10 INS43 INS59 INS12 INS49 INS60 INS21 INS21 INS21 INS10 INS49 INS21 INS21 INS21 INS21 INS21 INS21 INS10 INS42 INS42 INS45 INS60 INS21 INS21 INS21 INS21 INS44 INS8 UPD40 INS40 INS43 INS59 INS32 INS32 INS7 UPD40 UPD40 UPD40 UPD40 UPD40 INS40 INS32 INS32 INS32 INS32 INS7 INS7 INS43 INS59 INS32 INS32 INS32 INS7 INS43 INS42 INS21 INS42 INS42 INS14 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS42 INS14 INS9 INS9 INS42 INS14 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS40 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS43 INS14 INS43 INS14 INS43 INS42 INS43 INS42 INS43 INS14 INS43 INS14 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS13 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42