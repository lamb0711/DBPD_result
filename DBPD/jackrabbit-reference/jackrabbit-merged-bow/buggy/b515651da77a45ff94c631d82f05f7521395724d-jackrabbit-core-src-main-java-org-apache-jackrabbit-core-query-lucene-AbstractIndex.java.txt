JCR-1363: Migrate to Lucene 2.3

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@696653 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.lucene.index.SerialMergeScheduler;
+import org.apache.lucene.index.LogDocMergePolicy;
+     * Flag that indicates whether there was an index present in the directory
+     * when this AbstractIndex was created.
+     */
+    private boolean isExisting;
+
+    /**
+        this.isExisting = IndexReader.indexExists(directory);
-        if (!IndexReader.indexExists(directory)) {
+        if (!isExisting) {
+     * Returns <code>true</code> if this index was openend on a directory with
+     * an existing index in it; <code>false</code> otherwise.
+     *
+     * @return <code>true</code> if there was an index present when this index
+     *          was created; <code>false</code> otherwise.
+     */
+    boolean isExisting() {
+        return isExisting;
+    }
+
+    /**
-                readOnlyReader.incrementRefCount();
+                readOnlyReader.acquire();
-                    readOnlyReader.incrementRefCount();
+                    readOnlyReader.acquire();
-                    readOnlyReader.close();
+                    readOnlyReader.release();
-        readOnlyReader.incrementRefCount();
+        readOnlyReader.acquire();
+            indexWriter.setRAMBufferSizeMB(IndexWriter.DISABLE_AUTO_FLUSH);
+            indexWriter.setMergeScheduler(new SerialMergeScheduler());
+            indexWriter.setMergePolicy(new LogDocMergePolicy());
-            indexReader.commitDeleted();
+            indexReader.flush();
+        releaseWriterAndReaders();
+        if (directory != null) {
+            try {
+                directory.close();
+            } catch (IOException e) {
+                directory = null;
+            }
+        }
+    }
+
+    /**
+     * Releases all potentially held index writer and readers.
+     */
+    protected void releaseWriterAndReaders() {
-                readOnlyReader.close();
+                readOnlyReader.release();
+            readOnlyReader = null;
-                sharedReader.close();
+                sharedReader.release();
-        }
-        if (directory != null) {
-            try {
-                directory.close();
-            } catch (IOException e) {
-                directory = null;
-            }
+            sharedReader = null;
-            readOnlyReader.close();
+            readOnlyReader.release();
-            sharedReader.close();
+            sharedReader.release();

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS29 INS83 INS39 INS59 INS29 INS39 INS42 INS8 MOV29 INS83 INS39 INS42 INS8 INS29 UPD83 UPD42 MOV25 INS65 INS42 INS21 INS65 INS65 INS41 INS21 MOV25 INS65 INS66 INS66 INS7 INS66 INS66 INS66 INS66 INS42 INS32 INS66 MOV27 MOV27 MOV27 MOV27 INS22 MOV32 INS42 UPD42 INS21 INS21 INS21 INS42 INS21 INS21 INS52 INS42 INS32 INS32 INS32 INS7 INS7 INS42 INS42 INS40 INS42 INS42 INS14 INS42 INS42 INS14 UPD42 INS42 INS33 INS42 INS33 UPD42 UPD42 INS43 INS43 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42