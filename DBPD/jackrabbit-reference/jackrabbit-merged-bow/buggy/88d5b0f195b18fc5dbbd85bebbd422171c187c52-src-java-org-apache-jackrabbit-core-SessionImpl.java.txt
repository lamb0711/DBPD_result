

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@76003 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.collections.ReferenceMap;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Set;
+import java.util.*;
+     * flag indicating whether this session is alive
+     */
+    protected boolean alive;
+
+    /**
+
+     * Listeners (weak references)
+     */
+    protected final Map listeners = new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK);
+
+    /**
+        alive = true;
+        alive = true;
+     * Performs a sanity check on this session.
+     *
+     * @throws RepositoryException if this session has been rendered invalid
+     *                             for some reason (e.g. if this session has
+     *                             been closed explicitly or if it has expired)
+     */
+    protected void sanityCheck() throws RepositoryException {
+        // check session status
+        if (!alive) {
+            throw new RepositoryException("this session has been closed");
+        }
+    }
+
+    /**
+    /**
+     * Notify the listeners that this session has been closed.
+     */
+    protected void notifyLoggedOut() {
+        // copy listeners to array to avoid ConcurrentModificationException
+        SessionListener[] la = new SessionListener[listeners.size()];
+        Iterator iter = listeners.values().iterator();
+        int cnt = 0;
+        while (iter.hasNext()) {
+            la[cnt++] = (SessionListener) iter.next();
+        }
+        for (int i = 0; i < la.length; i++) {
+            if (la[i] != null) {
+                la[i].loggedOut(this);
+            }
+        }
+    }
+
+    /**
+     * Add a <code>SessionListener</code>
+     *
+     * @param listener the new listener to be informed on modifications
+     */
+    public void addListener(SessionListener listener) {
+        if (!listeners.containsKey(listener)) {
+            listeners.put(listener, listener);
+        }
+    }
+
+    /**
+     * Remove a <code>SessionListener</code>
+     *
+     * @param listener an existing listener
+     */
+    public void removeListener(SessionListener listener) {
+        listeners.remove(listener);
+    }
+
+        // check sanity of this session
+        try {
+            sanityCheck();
+        } catch (RepositoryException re) {
+            String msg = "failed to check READ permission on " + absPath;
+            log.warn(msg, re);
+            throw new AccessControlException(READ_ACTION);
+        }
+
+        // check sanity of this session
+        sanityCheck();
+
+        // check sanity of this session
+        sanityCheck();
+
+        // check sanity of this session
+        sanityCheck();
+
+        // check sanity of this session
+        sanityCheck();
+
+            // check sanity of this session
+            sanityCheck();
+
+        // check sanity of this session
+        sanityCheck();
+
+        // check sanity of this session
+        sanityCheck();
+
-            getItemStateManager().disposeAllTransientItemStates();
+            itemStateMgr.disposeAllTransientItemStates();
-        return getItemStateManager().hasAnyTransientItemStates();
+        // check sanity of this session
+        sanityCheck();
+
+        return itemStateMgr.hasAnyTransientItemStates();
+        // check sanity of this session
+        sanityCheck();
+        // check sanity of this session
+        sanityCheck();
+
+        // check sanity of this session
+        sanityCheck();
+
-/*
-	    parser.setFeature("http://xml.org/sax/features/validation", true);
-	    parser.setFeature("http://apache.org/xml/features/validation/schema", true);
-	    parser.setFeature("http://apache.org/xml/features/validation/schema-full-checking", true);
-*/
-/*
-	    // validate against system view schema
-	    URL urlSchema = this.class.getClassLoader().getResource("javax/jcr/systemview.xsd");
-	    parser.setProperty("http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation", urlSchema.toString());
-	    parser.setProperty("http://apache.org/xml/properties/schema/external-schemaLocation",
-		    urlSchema.toString() + " " + "http://www.jcp.org/jcr/sv/1.0");
-*/
-    public void logout() {
+    public synchronized void logout() {
+        if (!alive) {
+            // ignore
+            return;
+        }
+
-        getItemStateManager().disposeAllTransientItemStates();
-
-        // @todo invalidate session, release session-scoped locks, free resources, prepare to get gc'ed etc.
-
-        log.debug("disposing workspace...");
+        itemStateMgr.disposeAllTransientItemStates();
+        // dispose item manager
+        itemMgr.dispose();
+        // dispose workspace
+
+        // @todo release session-scoped locks, free resources, prepare to get gc'ed etc.
+
+        // invalidate session
+        alive = false;
+
+        // finally notify listeners that session has been closed
+        notifyLoggedOut();

MOV26 UPD40 UPD40 INS23 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS39 INS59 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS65 INS42 INS65 INS42 INS42 INS14 INS21 INS21 INS65 INS65 INS42 INS25 INS65 INS60 INS60 INS60 INS61 INS24 INS65 INS65 INS43 INS42 INS25 INS65 INS65 INS43 INS42 INS21 INS54 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS25 INS21 INS21 INS66 INS66 INS43 INS40 INS40 INS7 INS7 INS66 INS42 INS66 INS66 INS66 INS38 INS8 INS66 INS5 INS59 INS43 INS59 INS39 INS59 INS32 INS8 INS58 INS27 INS37 INS8 INS66 INS42 INS66 INS42 INS38 INS8 INS66 INS42 INS66 INS42 INS32 INS8 INS12 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS38 INS8 INS7 INS32 INS42 INS42 INS9 INS42 INS9 INS42 INS53 INS43 INS85 INS42 INS3 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS21 INS39 INS59 INS42 INS40 INS42 INS25 INS32 INS21 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS41 UPD42 MOV42 UPD42 UPD42 INS42 INS9 INS42 INS14 INS42 INS5 INS32 INS32 INS42 INS7 INS42 INS34 INS27 INS8 INS42 INS42 INS42 INS32 INS32 INS43 INS42 INS60 INS21 INS53 INS32 INS43 INS45 INS43 INS85 INS42 INS42 INS42 INS42 INS2 INS11 INS2 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS14 INS42 UPD42 MOV42 INS42 INS42 INS42 INS37 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS52 INS45 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL32 DEL32 DEL32 DEL45