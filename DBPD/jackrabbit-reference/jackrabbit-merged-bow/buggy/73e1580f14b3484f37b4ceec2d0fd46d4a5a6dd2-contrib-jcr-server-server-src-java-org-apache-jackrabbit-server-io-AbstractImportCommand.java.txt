applying patch from angela, fixing:

[JCR-122] cannot PUT changes to a resource in the simple webdav server
[JCR-123] Webdav: Error when accessing Simple-Server
[JCR-126] Jcr-Server Module: Remove Dependency from Jackrabbit-Core


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@180346 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.chain.Command;
-import org.apache.commons.chain.Context;
-import org.apache.jackrabbit.JcrConstants;
+import org.apache.jackrabbit.util.Text;
+import javax.jcr.RepositoryException;
-public abstract class AbstractImportCommand implements Command, JcrConstants {
+public abstract class AbstractImportCommand extends AbstractCommand {
+
+    /**
+     * the nodetype for the node
+     */
+    private String nodeType = "nt:file";
-    public boolean execute(Context context) throws Exception {
+    public boolean execute(AbstractContext context) throws Exception {
-        if (importResource(context, parentNode, in)) {
+        // check 'file' node
+        Node fileNode = parentNode.hasNode(context.getSystemId())
+            ? parentNode.getNode(context.getSystemId())
+            : parentNode.addNode(context.getSystemId(), nodeType);
+
+        if (importResource(context, fileNode, in)) {
+        // set current node
+        context.setNode(fileNode);
+     * Creates collection recursively.
+     *
+     * @param root
+     * @param relPath
+     * @return
+     * @throws RepositoryException
+     */
+    static public Node mkDirs(ImportContext context, Node root, String relPath)
+            throws RepositoryException {
+        String[] seg = Text.explode(relPath, '/');
+        for (int i=0; i< seg.length; i++) {
+            if (!root.hasNode(seg[i])) {
+                // not quite correct
+                ImportContext subctx = context.createSubContext(root);
+                subctx.setSystemId(seg[i]);
+                try {
+                    ImportCollectionChain.getChain().execute(subctx);
+                } catch (Exception e) {
+                    throw new RepositoryException(e);
+                }
+            }
+            root = root.getNode(seg[i]);
+        }
+        return root;
+    }
+
+    /**
+     * Sets the node type
+     * @param nodeType
+     */
+    public void setNodeType(String nodeType) {
+        this.nodeType = nodeType;
+    }
+
+    /**

MOV26 UPD40 UPD40 UPD43 INS23 INS31 INS31 UPD42 INS29 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS42 INS45 UPD43 INS60 INS21 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS24 INS41 INS65 INS65 INS43 INS42 INS21 INS66 UPD42 INS43 INS59 INS32 INS66 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS66 INS42 INS42 INS7 INS42 INS42 INS16 UPD42 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS25 INS21 INS22 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS13 INS42 INS34 INS38 INS8 INS7 INS52 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS60 INS21 INS54 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS43 INS59 INS32 INS8 INS12 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS2 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS53 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS42 INS42 DEL40 DEL26 DEL43