JCR-1984 : UserManagement: Limit set of properties exposed by AuthorizableImpl
JCR-1993 : UserManagement: Missing assertion that Principal name isn't ""

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@746301 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.nodetype.NodeTypeImpl;
+import javax.jcr.nodetype.PropertyDefinition;
-            String propName = it.nextProperty().getName();
-            l.add(propName);
+            Property prop = it.nextProperty();
+            if (isAuthorizableProperty(prop)) {
+                l.add(prop.getName());
+            }
-        return node.hasProperty(name);
+        return node.hasProperty(name) && isAuthorizableProperty(node.getProperty(name));
-            if (prop.getDefinition().isMultiple()) {
-                return prop.getValues();
-            } else {
-                return new Value[] {prop.getValue()};
+            if (isAuthorizableProperty(prop)) {
+                if (prop.getDefinition().isMultiple()) {
+                    return prop.getValues();
+                } else {
+                    return new Value[] {prop.getValue()};
+                }
+     * Returns true if the given property of the authorizable node is one of the
+     * non-protected properties defined by the rep:authorizable.
+     *
+     * @param prop
+     * @return <code>true</code> if the given property is defined
+     * by the rep:authorizable node type or one of it's sub-node types;
+     * <code>false</code> otherwise.
+     * @throws RepositoryException
+     */
+    private static boolean isAuthorizableProperty(Property prop) throws RepositoryException {
+        PropertyDefinition def = prop.getDefinition();
+        if (def.isProtected()) {
+            return false;
+        } else  {
+            NodeTypeImpl declaringNt = (NodeTypeImpl) prop.getDefinition().getDeclaringNodeType();
+            return declaringNt.isNodeType(UserConstants.NT_REP_AUTHORIZABLE);
+        }
+    }
+
+    /**
-         if (P_PRINCIPAL_NAME.equals(pName) || P_USERID.equals(pName)
-                 || P_REFEREES.equals(pName) || P_GROUPS.equals(pName)
-                 || P_IMPERSONATORS.equals(pName) || P_PASSWORD.equals(pName)) {
-             return true;
-         } else {
-             return false;
-         }
-     }
+        if (P_PRINCIPAL_NAME.equals(pName) || P_USERID.equals(pName)
+                || P_REFEREES.equals(pName) || P_GROUPS.equals(pName)
+                || P_IMPERSONATORS.equals(pName) || P_PASSWORD.equals(pName)) {
+            return true;
+        } else {
+            return false;
+        }
+    }
-             throw new ConstraintViolationException("Attempt to modify protected property " + propertyName + " of an Authorizable.");
-         }
+            throw new ConstraintViolationException("Attempt to modify protected property " + propertyName + " of an Authorizable.");
+        }

INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS25 INS8 INS27 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS43 INS59 INS32 INS8 INS8 MOV60 INS25 MOV32 INS32 INS25 INS42 INS42 INS32 INS42 INS42 INS41 INS60 INS41 UPD43 INS32 INS8 INS42 INS32 INS32 INS8 INS42 INS42 INS9 INS43 INS59 INS32 UPD42 UPD42 MOV32 INS42 INS42 MOV21 INS42 INS42 INS42 INS42 INS42 MOV25 INS42 INS42 INS11 INS42 INS42 INS40 INS43 INS32 INS32 INS42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL32 DEL8