JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.xml.ElementIterator;
+import org.apache.jackrabbit.webdav.xml.Namespace;
+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
-import org.jdom.Element;
-import org.jdom.Namespace;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
-import java.util.List;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Set;
+ * Note, that this is a simplified implementation of the very generic
+ * definition: We assume that the DAV:options element only contains empty child
+ * elements, such as e.g. {@link DeltaVConstants#XML_VH_COLLECTION_SET DAV:version-history-collection-set}
+ * or {@link DeltaVConstants#XML_WSP_COLLECTION_SET DAV:workspace-collection-set}.
+ *
-public class OptionsInfo {
+public class OptionsInfo implements XmlSerializable {
-    private final Element optionsElement;
+    private final Set entriesLocalNames = new HashSet();
-     * Create a new <code>UpdateInfo</code> object.
+     * Create a new OptionsInfo with the specified entries. Each entry will
+     * be converted to an empty Xml element when calling <code>toXml</code>.
+     * As namespace {@link DeltaVConstants#NAMESPACE} is used.
-     * @param optionsElement
-     * @throws IllegalArgumentException if the updateElement is <code>null</code>
-     * or not a DAV:update element or if the element does not match the required
-     * structure.
+     * @param entriesLocalNames
-    public OptionsInfo(Element optionsElement) {
-         if (optionsElement == null || !optionsElement.getName().equals(DeltaVConstants.XML_OPTIONS)) {
-            throw new IllegalArgumentException("DAV:options element expected");
+    public OptionsInfo(String[] entriesLocalNames) {
+       if (entriesLocalNames != null) {
+           for (int i = 0; i < entriesLocalNames.length; i++) {
+               this.entriesLocalNames.add(entriesLocalNames[i]);
+           }
-        this.optionsElement = (Element) optionsElement.detach();
-     * Returns the set of elements present in the {@link DeltaVConstants#XML_OPTIONS DAV:options}
-     * element. These elements define the information the client wishes to retrieve
-     * the OPTIONS request.
-     *
-     * @return set of child elements
+     * Private constructor used to create an OptionsInfo from Xml.
-    public List getElements() {
-        return optionsElement.getChildren();
-    }
+    private OptionsInfo() {}
-     * @param name
+     * @param localName
-    public boolean containsElement(String name, Namespace namespace) {
-        return optionsElement.getChild(name, namespace) != null;
+    public boolean containsElement(String localName, Namespace namespace) {
+        if (DeltaVConstants.NAMESPACE.equals(namespace)) {
+            return entriesLocalNames.contains(localName);
+        }
+        return false;
+    }
+
+    /**
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
+     */
+    public Element toXml(Document document) {
+        Element optionsElem = DomUtil.createElement(document, DeltaVConstants.XML_OPTIONS, DeltaVConstants.NAMESPACE);
+        Iterator it = entriesLocalNames.iterator();
+        while (it.hasNext()) {
+            String localName = (String)it.next();
+            DomUtil.addChildElement(optionsElem, localName, DeltaVConstants.NAMESPACE);
+        }
+        return optionsElem;
+    }
+
+    /**
+     * Build an <code>OptionsInfo</code> object from the root element present
+     * in the request body.
+     *
+     * @param optionsElement
+     * @return
+     * @throws IllegalArgumentException if the optionsElement is <code>null</code>
+     * or not a DAV:options element.
+     */
+    public static OptionsInfo createFromXml(Element optionsElement) {
+        if (!DomUtil.matches(optionsElement, DeltaVConstants.XML_OPTIONS, DeltaVConstants.NAMESPACE)) {
+            throw new IllegalArgumentException("DAV:options element expected");
+        }
+        OptionsInfo oInfo = new OptionsInfo();
+        ElementIterator it = DomUtil.getChildren(optionsElement);
+        while (it.hasNext()) {
+            // todo: not correct since assuming its the deltaV-namespace
+            oInfo.entriesLocalNames.add(it.nextElement().getLocalName());
+        }
+        return oInfo;

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 UPD40 INS40 INS40 UPD40 INS43 INS31 INS31 INS31 INS42 INS43 INS44 INS29 INS83 INS42 INS8 INS8 INS29 INS83 MOV43 INS42 INS44 INS8 INS29 MOV83 INS83 UPD43 MOV43 INS42 MOV44 INS8 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS14 INS65 INS65 INS5 INS42 INS25 INS65 UPD42 INS25 INS41 INS65 INS65 INS43 INS42 INS60 INS60 INS61 INS41 INS65 MOV65 INS65 UPD65 MOV65 UPD42 INS25 INS60 INS60 INS61 INS41 INS67 INS66 INS67 INS66 INS43 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS65 UPD66 MOV66 INS42 INS43 INS85 INS27 INS8 UPD66 MOV66 UPD42 INS32 INS8 INS9 INS68 INS42 INS42 MOV43 INS59 INS43 INS59 INS32 INS8 INS42 UPD66 MOV66 UPD66 MOV66 INS42 INS66 UPD66 INS38 MOV8 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS67 INS42 UPD42 MOV42 MOV33 INS24 INS40 INS42 INS42 MOV41 INS40 INS42 INS69 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS58 INS27 INS37 INS8 INS32 INS43 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS40 INS40 INS43 INS42 INS42 INS42 INS32 INS39 INS59 INS42 INS40 INS42 MOV21 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS32 INS42 INS34 INS32 INS43 INS32 INS32 UPD42 MOV42 INS22 INS42 INS2 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV52 UPD42 MOV42 INS42 INS42 DEL42 DEL65 DEL42 DEL65 DEL22 DEL42 DEL42 DEL32 DEL11 DEL7 DEL27 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL38 DEL27 DEL25 DEL42 DEL42 DEL67 DEL66 DEL65 DEL65 DEL29 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL32 DEL33 DEL27 DEL8