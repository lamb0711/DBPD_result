JCR-367 - Remove dependency on Xerces
   Part 2: JAXP Transform instead of Xerces Serializer

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@418357 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.xml.serialize.OutputFormat;
-import org.apache.xml.serialize.XMLSerializer;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Result;
+import javax.xml.transform.TransformerException;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.sax.SAXTransformerFactory;
+import javax.xml.transform.sax.TransformerHandler;
+import javax.xml.transform.stream.StreamResult;
+
-        boolean indenting = false;
-        OutputFormat format = new OutputFormat("xml", "UTF-8", indenting);
-        XMLSerializer serializer = new XMLSerializer(out, format);
+
+        SAXTransformerFactory stf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
+
-            exportDocumentView(absPath, serializer.asContentHandler(),
-                    skipBinary, noRecurse);
+            TransformerHandler th = stf.newTransformerHandler();
+            th.setResult(new StreamResult(out));
+            th.getTransformer().setParameter(OutputKeys.METHOD, "xml");
+            th.getTransformer().setParameter(OutputKeys.ENCODING, "UTF-8");
+            th.getTransformer().setParameter(OutputKeys.INDENT, "no");
+
+            exportDocumentView(absPath, th, skipBinary, noRecurse);
+        } catch (TransformerException te) {
+            throw new RepositoryException(te);
-        boolean indenting = false;
-        OutputFormat format = new OutputFormat("xml", "UTF-8", indenting);
-        XMLSerializer serializer = new XMLSerializer(out, format);
+
+        SAXTransformerFactory stf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
-            exportSystemView(absPath, serializer.asContentHandler(),
-                    skipBinary, noRecurse);
+            TransformerHandler th = stf.newTransformerHandler();
+            th.setResult(new StreamResult(out));
+            th.getTransformer().setParameter(OutputKeys.METHOD, "xml");
+            th.getTransformer().setParameter(OutputKeys.ENCODING, "UTF-8");
+            th.getTransformer().setParameter(OutputKeys.INDENT, "no");
+
+            exportSystemView(absPath, th, skipBinary, noRecurse);
+        } catch (TransformerException te) {
+            throw new RepositoryException(te);

MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 UPD40 INS40 INS54 INS54 INS43 INS8 INS12 MOV12 INS43 INS8 INS12 MOV12 INS42 UPD42 INS11 MOV60 INS21 INS21 INS21 INS21 MOV21 INS44 INS8 INS42 UPD42 INS11 MOV60 INS21 INS21 INS21 INS21 MOV21 INS44 INS8 INS43 INS32 UPD43 INS32 INS32 INS32 INS32 INS43 INS42 INS53 INS43 INS32 UPD43 INS32 INS32 INS32 INS32 INS43 INS42 INS53 INS42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS42 INS14 INS32 INS42 INS40 INS45 INS32 INS42 INS40 INS45 INS32 INS42 INS40 INS45 UPD42 MOV42 INS42 INS14 INS42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS42 INS14 INS32 INS42 INS40 INS45 INS32 INS42 INS40 INS45 INS32 INS42 INS40 INS45 UPD42 MOV42 INS42 INS14 INS42 INS42 UPD43 MOV43 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 UPD43 MOV43 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 UPD42 INS42 UPD42 INS42 DEL39 DEL9 DEL42 DEL43 DEL45 DEL45 DEL42 DEL14 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL8 DEL54 DEL39 DEL9 DEL42 DEL43 DEL45 DEL45 DEL42 DEL14 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL8 DEL54