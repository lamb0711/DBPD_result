JCR-2105: JSR 283 NodeType Management (work in progress)
JCR-1483: Move common node type functionality to jackrabbit-spi-commons

NOTE: intermediate checkin to avoid additional conflicts with stefans work


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774294 13f79535-47bb-0310-9956-ffa450edef68

+    private final String[] availableQueryOperators;
+    private final boolean isFullTextSearchable;
+    private final boolean isQueryOrderable;
-	super(definition);
+        super(definition);
-	type = definition.getRequiredType();
-	valueConstraints = definition.getValueConstraints();
-	defaultValues = definition.getDefaultValues();
-	isMultiple = definition.isMultiple();
+        type = definition.getRequiredType();
+        valueConstraints = definition.getValueConstraints();
+        defaultValues = definition.getDefaultValues();
+        isMultiple = definition.isMultiple();
+        availableQueryOperators = definition.getAvailableQueryOperators();
+        isFullTextSearchable = definition.isFullTextSearchable();
+        isQueryOrderable = definition.isQueryOrderable();
-	if (definition instanceof PropertyDefinitionImpl) {
-	    return (PropertyDefinitionImpl)definition;
-	} else {
-	    return new PropertyDefinitionImpl(definition);
-	}
+        if (definition instanceof PropertyDefinitionImpl) {
+            return (PropertyDefinitionImpl)definition;
+        } else {
+            return new PropertyDefinitionImpl(definition);
+        }
-	return type;
+        return type;
-	return valueConstraints;
+        return valueConstraints;
-	return defaultValues;
+        return defaultValues;
-	return isMultiple;
+        return isMultiple;
+    /**
+     * @see PropertyDefinition#getAvailableQueryOperators()
+     */
-        throw new UnsupportedOperationException("JCR-2091");
+        return availableQueryOperators;
+    /**
+     * @see PropertyDefinition#isFullTextSearchable()
+     */
-        throw new UnsupportedOperationException("JCR-2091");
+        return isFullTextSearchable;
+    /**
+     * @see PropertyDefinition#isQueryOrderable()
+     */
-        throw new UnsupportedOperationException("JCR-2091");
+        return isQueryOrderable;
-	Element elem = super.toXml(document);
+        Element elem = super.toXml(document);
+        // JCR 2.0 extensions
+        elem.setAttribute(FULL_TEXT_SEARCHABLE_ATTRIBUTE, Boolean.toString(isFullTextSearchable()));
+        elem.setAttribute(QUERY_ORDERABLE_ATTRIBUTE, Boolean.toString(isQueryOrderable()));
+
+        // JCR 2.0 extension
+        Element qopElem = document.createElement(AVAILABLE_QUERY_OPERATORS_ELEMENT);
+        String[] qops = getAvailableQueryOperators();
+        for (int i = 0; i < qops.length; i++) {
+            Element opElem = document.createElement(AVAILABLE_QUERY_OPERATOR_ELEMENT);
+            DomUtil.setText(opElem, qops[i]);
+            qopElem.appendChild(opElem);
+        }
+
-	return PROPERTYDEFINITION_ELEMENT;
+        return PROPERTYDEFINITION_ELEMENT;
-

INS23 INS23 INS23 INS83 INS83 INS5 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS29 INS29 INS29 INS43 INS85 INS42 INS42 INS42 INS21 INS21 INS21 INS65 INS41 INS65 INS41 INS65 INS41 INS21 INS21 INS60 INS60 INS24 INS42 INS7 INS7 INS7 INS68 INS42 INS68 INS42 INS68 INS42 INS32 INS32 INS43 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL42 DEL43 DEL45 DEL14 DEL53 DEL42 DEL43 DEL45 DEL14 DEL53