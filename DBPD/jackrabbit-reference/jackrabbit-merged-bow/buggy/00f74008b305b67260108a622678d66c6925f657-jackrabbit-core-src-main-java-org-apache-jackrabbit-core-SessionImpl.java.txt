JCR-890: concurrent read-only access to a session

Extract session operations to separate classes.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@957147 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.cluster.ClusterException;
-import org.apache.jackrabbit.core.cluster.ClusterNode;
+import org.apache.jackrabbit.core.session.SessionRefreshOperation;
+import org.apache.jackrabbit.core.session.SessionSaveOperation;
-        perform(new SessionOperation("save") {
-            @Override
-            public void perform(SessionContext context)
-                    throws RepositoryException {
-                // JCR-2425: check whether session is allowed to read root node
-                if (hasPermission("/", ACTION_READ)) {
-                    context.getItemManager().getRootNode().save();
-                } else {
-                    NodeId id = context.getItemStateManager().getIdOfRootTransientNodeState();
-                    context.getItemManager().getItem(id).save();
-                }
-            }
-        });
+        perform(new SessionSaveOperation());
-    public void refresh(final boolean keepChanges) throws RepositoryException {
-        perform(new SessionOperation("refresh") {
-            @Override
-            public void perform(SessionContext context)
-                    throws RepositoryException {
-                // JCR-1753: Ensure that we are up to date with cluster changes
-                ClusterNode cluster = repositoryContext.getClusterNode();
-                if (cluster != null && clusterSyncOnRefresh()) {
-                    try {
-                        cluster.sync();
-                    } catch (ClusterException e) {
-                        throw new RepositoryException(
-                                "Unable to synchronize with the cluster", e);
-                    }
-                }
-
-                if (!keepChanges) {
-                    context.getItemStateManager().disposeAllTransientItemStates();
-                } else {
-                    // FIXME should reset Item#status field to STATUS_NORMAL
-                    // of all non-transient instances; maybe also
-                    // have to reset stale ItemState instances
-                }
-            }
-        });
+    public void refresh(boolean keepChanges) throws RepositoryException {
+        perform(new SessionRefreshOperation(keepChanges, clusterSyncOnRefresh()));

MOV26 MOV26 UPD40 UPD40 MOV43 UPD43 UPD43 INS42 MOV32 UPD42 UPD42 DEL45 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL1 DEL83 DEL42 DEL43 DEL45 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL38 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL8 DEL25 DEL8 DEL31 DEL1