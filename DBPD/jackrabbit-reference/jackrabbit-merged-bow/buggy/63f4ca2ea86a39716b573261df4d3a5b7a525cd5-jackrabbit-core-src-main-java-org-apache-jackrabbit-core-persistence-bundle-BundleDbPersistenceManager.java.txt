Adding consistency fix option that allows fixing of "magically" disapeared childnode entries.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@517645 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import java.util.ArrayList;
+ * <li>&lt;param name="{@link #setConsistencyFix(String) consistencyFix}" value="false"/>
+    /** flag indicating if the consistency check should attempt to fix issues */
+    protected boolean consistencyFix = false;
+
+     * Checks if consistency fix is enabled.
+     * @return <code>true</code> if consistency fix is enabled.
+     */
+    public String getConsistencyFix() {
+        return Boolean.toString(consistencyFix);
+    }
+
+    /**
+     * Defines if the consistency check should attempt to fix issues that
+     * it finds.
+     *
+     * @param consistencyFix the consistency fix flag.
+     */
+    public void setConsistencyFix(String consistencyFix) {
+        this.consistencyFix = Boolean.valueOf(consistencyFix).booleanValue();
+    }
+
+    /**
+        Collection modifications = new ArrayList();
-                UUID uuid;
+                NodeId id;
-                    uuid = new UUID(rs.getBytes(1));
+                    id = new NodeId(new UUID(rs.getBytes(1)));
-                    uuid = new UUID(rs.getLong(1), rs.getLong(2));
+                    id = new NodeId(new UUID(rs.getLong(1), rs.getLong(2)));
-                NodeId id = new NodeId(uuid);
-                TrackingInputStream cin =
-                    new TrackingInputStream(blob.getBinaryStream());
-                din = new DataInputStream(cin);
+                din = new DataInputStream(blob.getBinaryStream());
-                    bundle.setSize(cin.getPosition());
+                    Collection missingChildren = new ArrayList();
+                        if (entry.getId().toString().endsWith("babecafebabe")) {
+                            continue;
+                        }
+                        if (id.toString().endsWith("babecafebabe")) {
+                            continue;
+                        }
+                                missingChildren.add(entry);
-
+                    if (consistencyFix && !missingChildren.isEmpty()) {
+                        Iterator iterator = missingChildren.iterator();
+                        while (iterator.hasNext()) {
+                            bundle.getChildNodeEntries().remove(iterator.next());
+                        }
+                        modifications.add(bundle);
+                    }
+
-                    log.error("Error in bundle " + uuid + ": " + e);
+                    log.error("Error in bundle " + id + ": " + e);
+        if (consistencyFix && !modifications.isEmpty()) {
+            log.info(name + ": Fixing " + modifications.size() + " inconsistent bundle(s)...");
+            Iterator iterator = modifications.iterator();
+            while (iterator.hasNext()) {
+                NodePropBundle bundle = (NodePropBundle) iterator.next();
+                try {
+                    log.info(name + ": Fixing bundle " + bundle.getId());
+                    bundle.markOld(); // use UPDATE instead of INSERT
+                    storeBundle(bundle);
+                } catch (ItemStateException e) {
+                    log.error(name + ": Error storing fixed bundle: " + e);
+                }
+            }
+        }
+
+

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS29 INS83 INS39 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS66 INS66 INS65 INS42 INS9 INS65 INS65 INS42 INS41 INS65 INS65 INS43 INS42 INS21 INS60 INS25 INS68 INS66 INS66 INS66 INS66 INS32 INS66 INS66 INS42 INS66 INS42 INS7 INS43 INS59 INS27 INS8 INS42 INS69 INS42 INS42 INS42 INS22 INS32 INS42 INS42 INS14 INS42 INS38 INS21 INS60 INS61 INS43 INS52 INS42 INS32 INS42 INS43 MOV60 INS32 INS32 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS60 INS54 MOV43 INS42 INS45 INS32 INS45 INS42 INS42 INS43 INS59 INS8 INS12 INS60 INS25 INS42 INS42 INS42 INS42 INS11 INS21 INS21 INS21 INS44 INS8 INS32 INS43 INS59 INS27 INS8 INS43 INS32 INS32 INS32 INS32 INS43 INS42 INS21 UPD42 INS14 UPD42 INS14 INS42 INS42 INS42 INS42 INS14 INS25 INS25 INS42 INS38 INS60 INS61 INS21 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 MOV43 MOV14 INS43 MOV14 INS43 INS32 INS8 INS32 INS8 INS32 INS43 INS59 INS32 INS8 INS32 INS42 INS45 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS45 INS18 INS32 INS42 INS45 INS18 INS42 INS42 INS42 INS42 INS32 INS42 INS42 MOV21 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS32 UPD42 INS32 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS42 DEL42 DEL14 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42