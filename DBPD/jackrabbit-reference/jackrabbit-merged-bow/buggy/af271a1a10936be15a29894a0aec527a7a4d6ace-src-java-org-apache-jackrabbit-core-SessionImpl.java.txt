JAAS support 

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155344 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.AccessManager;
+import org.apache.jackrabbit.core.security.SimpleAccessManager;
-import org.apache.jackrabbit.core.xml.SysViewSAXEventGenerator;
-import org.apache.jackrabbit.core.xml.SessionImporter;
+import org.apache.jackrabbit.core.xml.SessionImporter;
+import org.apache.jackrabbit.core.xml.SysViewSAXEventGenerator;
-import javax.jcr.SimpleCredentials;
+import javax.security.auth.Subject;
+import javax.security.auth.login.LoginContext;
+import java.security.Principal;
+import java.util.Set;
+     * the LoginContext of this session (can be null if this
+     * session was not instantiated through a login process)
+     */
+    protected LoginContext loginContext;
+
+    /**
-    protected AccessManagerImpl accessMgr;
+    protected AccessManager accessMgr;
-     * @param credentials
+     * @param loginContext
-    protected SessionImpl(RepositoryImpl rep, Credentials credentials,
+    protected SessionImpl(RepositoryImpl rep, LoginContext loginContext,
-        alive = true;
-        this.rep = rep;
-        if (credentials instanceof SimpleCredentials) {
-            SimpleCredentials sc = (SimpleCredentials) credentials;
-            // clear password for security reasons
-            char[] pwd = sc.getPassword();
-            if (pwd != null) {
-                for (int i = 0; i < pwd.length; i++) {
-                    pwd[i] = 0;
-                }
-            }
-            userId = sc.getUserId();
-            String[] names = sc.getAttributeNames();
-            for (int i = 0; i < names.length; i++) {
-                attributes.put(names[i], sc.getAttribute(names[i]));
-            }
-        } else {
-            userId = null;
-        }
-        nsMappings = new LocalNamespaceMappings(rep.getNamespaceRegistry());
-        ntMgr = new NodeTypeManagerImpl(rep.getNodeTypeRegistry(), getNamespaceResolver());
-        String wspName = wspConfig.getName();
-        wsp = new WorkspaceImpl(wspConfig, rep.getWorkspaceStateManager(wspName),
-                rep, this);
-        itemStateMgr = createSessionItemStateManager(wsp.getItemStateManager());
-        hierMgr = itemStateMgr.getHierarchyMgr();
-        itemMgr = createItemManager(itemStateMgr, hierMgr);
-        accessMgr = createAccessManager(credentials, hierMgr);
-        versionMgr = rep.getVersionManager();
-
-        // add virtual item managers only for normal sessions
-        if (!(this instanceof SystemSession)) {
-            try {
-                itemStateMgr.addVirtualItemStateProvider(versionMgr.getVirtualItemStateProvider(this, itemStateMgr));
-            } catch (Exception e) {
-                log.error("Unable to add vmgr: " + e.toString(), e);
-            }
-        }
+        this(rep, loginContext.getSubject(), wspConfig);
+        this.loginContext = loginContext;
-     * @param userId
+     * @param subject
-    protected SessionImpl(RepositoryImpl rep, String userId, WorkspaceConfig wspConfig)
+    protected SessionImpl(RepositoryImpl rep, Subject subject,
+                          WorkspaceConfig wspConfig)
-        this.userId = userId;
+        Set principals = subject.getPrincipals();
+        if (principals.isEmpty()) {
+            String msg = "unable to instantiate Session: no principals found";
+            log.error(msg);
+            throw new RepositoryException(msg);
+        } else {
+            // use 1st principal in case there are more that one
+            Principal principal = (Principal) principals.iterator().next();
+            userId = principal.getName();
+        }
+        accessMgr = createAccessManager(subject, hierMgr);
-        // add virtual item managers only for normal sessions
+        // add virtual item managers (only for non-system sessions)
-
-    protected AccessManagerImpl createAccessManager(Credentials credentials,
-                                                    HierarchyManager hierMgr) {
-        return new AccessManagerImpl(credentials, hierMgr);
+    protected AccessManager createAccessManager(Subject subject,
+                                                HierarchyManager hierMgr) {
+        return new SimpleAccessManager(subject, hierMgr);
-    public AccessManagerImpl getAccessManager() {
+    public AccessManager getAccessManager() {
+        // logout jaas subject
+        if (loginContext != null) {
+            try {
+                loginContext.logout();
+            } catch (javax.security.auth.login.LoginException le) {
+                log.warn("failed to logout current subject: " + le.getMessage());
+            }
+            loginContext = null;
+        }

MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 INS40 INS23 INS31 INS29 INS83 INS43 INS59 UPD43 MOV29 INS83 INS42 MOV44 MOV44 MOV44 MOV43 MOV8 INS29 MOV44 INS44 INS44 MOV43 UPD43 UPD43 MOV65 UPD42 MOV42 INS42 UPD42 UPD43 UPD42 INS17 INS65 MOV65 INS65 MOV65 INS43 INS42 INS43 INS42 MOV60 INS25 UPD42 UPD43 UPD42 UPD42 INS25 INS66 UPD66 UPD42 UPD42 INS42 INS32 INS42 INS66 INS42 UPD42 MOV42 INS42 INS42 UPD43 INS32 INS8 INS8 UPD42 INS27 INS8 UPD42 MOV42 UPD42 MOV42 INS22 INS42 UPD42 UPD42 INS32 UPD42 MOV42 UPD42 MOV42 INS60 MOV21 INS53 INS60 MOV21 UPD43 UPD42 INS42 INS33 INS54 INS21 INS52 INS42 INS42 INS42 MOV43 INS59 INS32 INS14 INS43 INS59 UPD42 UPD42 INS8 INS12 INS7 UPD42 MOV42 INS45 INS42 UPD42 MOV42 UPD42 MOV42 INS43 INS42 INS42 UPD42 MOV42 INS11 INS32 INS21 INS44 INS8 INS42 INS33 INS42 INS43 INS32 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS32 INS42 INS42 INS42 INS40 INS32 UPD42 MOV42 INS42 INS42 INS42 INS27 INS45 INS32 INS42 INS42 DEL42 DEL9 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL52 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL43 DEL62 DEL36 DEL38 DEL42 DEL42 DEL42 DEL42 DEL52 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL43 DEL42 DEL11 DEL42 DEL32 DEL7 DEL33 DEL42 DEL42 DEL43 DEL62 DEL39 DEL85 DEL5 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL39 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL34 DEL7 DEL21 DEL8 DEL24 DEL8 DEL25 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL8 DEL25 DEL42 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL31