Work in progress
- Removed is-local flag from event bundle response and added transaction id which is equal to the lock token that was used to save changes.
- Added TransactionListener. SubscriptionManagerImpl now listens on the TxLockManagerImpl for transaction commits and registers special EventListeners for a short period of time to associate the lockToken / transactionId with an event bundle.
- Remove SubscriptionImpl as event listener when subscription expires
- Update currentVersion to 1.2-SNAPSHOT

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@482627 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.transaction.TransactionResource;
+import org.apache.jackrabbit.webdav.jcr.transaction.TransactionListener;
+import java.util.Map;
+import java.util.List;
+import java.util.ArrayList;
-public class SubscriptionManagerImpl implements SubscriptionManager {
+public class SubscriptionManagerImpl implements SubscriptionManager, TransactionListener {
+    private final Map transactionListenerById = new HashMap();
+
+    //---------------------------< TransactionListener >------------------------
+
+    /**
+     * {@inheritDoc}
+     */
+    public synchronized void beforeCommit(TransactionResource resource,
+                                          String lockToken) {
+        // suspend regular subscriptions during a commit
+        List transactionListeners = new ArrayList();
+        for (Iterator it = subscriptions.iterator(); it.hasNext(); ) {
+            SubscriptionImpl sub = (SubscriptionImpl) it.next();
+            TransactionListener tl = sub.createTransactionListener();
+            tl.beforeCommit(resource, lockToken);
+            transactionListeners.add(tl);
+        }
+        transactionListenerById.put(lockToken, transactionListeners);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void afterCommit(TransactionResource resource, String lockToken, boolean success) {
+        List transactionListeners = (List) transactionListenerById.remove(lockToken);
+        if (transactionListeners != null) {
+            for (Iterator it = transactionListeners.iterator(); it.hasNext(); ) {
+                TransactionListener txListener = (TransactionListener) it.next();
+                txListener.afterCommit(resource, lockToken, success);
+            }
+        }
+    }
+
+        private Iterator iterator() {
+            return subscriptions.values().iterator();
+        }
+
-}
+}

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS31 INS42 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS31 INS42 INS42 INS14 INS65 INS43 INS42 INS43 INS42 INS60 INS24 INS21 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS60 INS25 INS83 INS43 INS42 INS8 INS43 INS65 INS42 INS42 INS43 INS59 INS58 INS32 INS8 INS32 INS65 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS41 INS42 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS33 INS24 INS32 INS43 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS32 INS58 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42