JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
-import org.apache.jackrabbit.webdav.version.DeltaVConstants;
-import org.jdom.Element;
-import org.jdom.Namespace;
+import org.apache.jackrabbit.webdav.version.DeltaVConstants;
+import org.apache.jackrabbit.webdav.version.DeltaVResource;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.xml.Namespace;
+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
+import org.apache.log4j.Logger;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
-public class ReportType implements DeltaVConstants {
+public class ReportType implements DeltaVConstants, XmlSerializable {
-    private final String name;
+    private final String key;
+    private final String localName;
-     * @see #register(String, Namespace, Class)
+     * @see ReportType#register(String, org.apache.jackrabbit.webdav.xml.Namespace, Class)
-    private ReportType(String name, Namespace namespace, Class reportClass) {
-        this.name = name;
+    private ReportType(String localName, Namespace namespace, String key, Class reportClass) {
+        this.localName = localName;
+        this.key = key;
-    public Report createReport() throws DavException {
+    public Report createReport(DeltaVResource resource, ReportInfo info) throws DavException {
-            return (Report) reportClass.getConstructor(new Class[0]).newInstance(new Object[0]);
+            Report report = (Report) reportClass.getConstructor(new Class[0]).newInstance(new Object[0]);
+            report.init(resource, info);
+            return report;
+     * @param document
+     * @see XmlSerializable#toXml(org.w3c.dom.Document)
-    public Element toXml() {
-        return new Element(name, namespace);
+    public Element toXml(Document document) {
+        return DomUtil.createElement(document, localName, namespace);
-            Element elem = reqInfo.getReportElement();
-            if (elem != null) {
-                return name.equals(elem.getName()) && namespace.equals(elem.getNamespace());
-            }
+            return getReportName().equals(reqInfo.getReportName());
+     * Return the qualified name of this <code>ReportType</code>.
+     *
+     * @return qualified name
+     */
+    public String getReportName() {
+        return key;
+            }
+
+    /**
+     *
+     * @return
+     */
+    public String getLocalName() {
+        return localName;
+        }
+
+    /**
+     *
+     * @return
+     */
+    public Namespace getNamespace() {
+        return namespace;
+    }
+
+    /**
-     * @param name
+     * @param localName
-    public static ReportType register(String name, Namespace namespace, Class reportClass) {
-        if (name == null || namespace == null || reportClass == null) {
+    public static ReportType register(String localName, Namespace namespace, Class reportClass) {
+        if (localName == null || namespace == null || reportClass == null) {
-        String key = buildKey(namespace, name);
+        String key = DomUtil.getQualifiedName(localName, namespace);
-            ReportType type = new ReportType(name, namespace, reportClass);
+            ReportType type = new ReportType(localName, namespace, key, reportClass);
-        String key = buildKey(reportInfo.getReportElement().getNamespace(), reportInfo.getReportElement().getName());
+        String key = reportInfo.getReportName();
-
-    /**
-     * Build the key from the given namespace and name.
-     *
-     * @param namespace
-     * @param name
-     * @return key identifying the report with the given namespace and name
-     */
-    private static String buildKey(Namespace namespace, String name) {
-        return "{" + namespace.getURI() + "}" + name;
-    }

MOV26 MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 UPD40 INS43 INS23 INS31 INS31 INS31 INS42 INS83 INS83 MOV43 INS59 INS43 INS44 INS44 INS44 INS44 INS8 MOV29 UPD83 MOV83 INS43 INS42 INS8 INS29 INS83 MOV43 INS42 INS8 INS29 INS83 MOV43 INS42 MOV8 INS42 INS42 UPD42 UPD42 MOV43 INS42 INS21 INS43 INS42 INS43 INS42 INS65 INS65 INS43 INS42 MOV25 MOV41 INS42 INS41 INS65 INS41 INS65 MOV43 UPD42 INS7 INS42 INS42 INS42 INS68 INS42 INS32 MOV27 UPD66 UPD66 INS42 INS42 INS42 UPD42 INS43 MOV43 INS42 UPD42 INS22 INS42 INS60 INS21 INS42 INS42 INS69 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 UPD42 INS52 INS42 INS43 INS59 INS32 INS42 INS43 INS32 UPD42 INS42 UPD42 UPD42 MOV43 MOV42 UPD42 MOV42 INS40 INS42 INS42 MOV11 INS42 INS42 INS42 INS42 INS40 MOV32 MOV42 MOV32 UPD42 UPD42 UPD42 UPD42 MOV43 UPD42 INS42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25 DEL8 DEL42 DEL65 DEL42 DEL65 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL32 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL31