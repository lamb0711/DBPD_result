JCR-2166: Provide query support for WEAKREFERENCE reverse lookup

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@787183 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-    protected List doNotUseInExcerpt = new ArrayList();
+    protected List<Fieldable> doNotUseInExcerpt = new ArrayList<Fieldable>();
-                for (Iterator it = node.getSharedSet().iterator(); it.hasNext(); ) {
-                    addParentChildRelation(doc, (NodeId) it.next());
+                for (NodeId id : node.getSharedSet()) {
+                    addParentChildRelation(doc, id);
-        Set props = node.getPropertyNames();
-        for (Iterator it = props.iterator(); it.hasNext();) {
-            Name propName = (Name) it.next();
+        Set<Name> props = node.getPropertyNames();
+        for (Name propName : props) {
-                if (indexFormatVersion.getVersion()
-                        >= IndexFormatVersion.V2.getVersion()) {
+                if (indexFormatVersion.getVersion() >= IndexFormatVersion.V2.getVersion()) {
-                for (int i = 0; i < values.length; i++) {
-                    addValue(doc, values[i], propState.getName());
+                for (InternalValue value : values) {
+                    addValue(doc, value, propState.getName());
-        for (Iterator it = doNotUseInExcerpt.iterator(); it.hasNext(); ) {
-            doc.add((Fieldable) it.next());
+        for (Fieldable field : doNotUseInExcerpt) {
+            doc.add(field);
-                    addBooleanValue(doc, fieldName, Boolean.valueOf(value.getBoolean()));
+                    addBooleanValue(doc, fieldName, value.getBoolean());
-                    addDoubleValue(doc, fieldName, new Double(value.getDouble()));
+                    addDoubleValue(doc, fieldName, value.getDouble());
-                    addLongValue(doc, fieldName, new Long(value.getLong()));
+                    addLongValue(doc, fieldName, value.getLong());
-        double doubleVal = ((Double) internalValue).doubleValue();
+        double doubleVal = (Double) internalValue;
-        long longVal = ((Long) internalValue).longValue();
+        long longVal = (Long) internalValue;
-     * reference data is stored in the index.
+     * reference data is stored in the index. As of Jackrabbit 2.0 this method
+     * also adds the reference UUID as a {@link FieldNames#WEAK_REFS} field
+     * to the index if it is a weak reference.
+        if (weak) {
+            doc.add(new Field(FieldNames.WEAK_REFS, uuid, Field.Store.NO,
+                    Field.Index.NOT_ANALYZED_NO_NORMS));
+        }

INS74 MOV43 INS43 INS70 INS70 INS25 INS42 INS74 INS74 INS44 INS42 MOV8 INS44 INS42 INS8 UPD66 INS66 INS65 INS66 INS66 INS42 INS8 MOV43 INS43 MOV43 MOV43 MOV43 INS42 MOV43 INS42 MOV21 MOV11 MOV11 INS67 INS21 INS42 INS42 INS42 INS32 INS70 UPD42 MOV42 MOV32 INS42 INS42 INS14 INS70 INS44 INS42 INS8 UPD42 UPD42 INS42 MOV32 MOV32 INS43 INS40 INS42 INS40 INS40 INS44 MOV32 INS8 INS43 INS42 MOV21 INS42 MOV43 INS42 MOV21 INS42 INS42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL14 DEL42 DEL43 DEL14 DEL36 DEL42 DEL32 DEL36 DEL42 DEL32