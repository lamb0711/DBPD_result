JCR-3452: Modified property and child node definition are rejected

trivial modifications:
- adding/removing nt:base as requiredPrimaryType constraint
- making a single-valued property multi-valued
- changing a property's requiredType constraint to UNDEFINED

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1415685 13f79535-47bb-0310-9956-ffa450edef68

-                    List<Name> l1 = Arrays.asList(getOldDef().getRequiredPrimaryTypes());
-                    List<Name> l2 = Arrays.asList(getNewDef().getRequiredPrimaryTypes());
-                    if (!l1.equals(l2)) {
+                    Set<Name> s1 = new HashSet<Name>(Arrays.asList(getOldDef().getRequiredPrimaryTypes()));
+                    Set<Name> s2 = new HashSet<Name>(Arrays.asList(getNewDef().getRequiredPrimaryTypes()));
+                    // normalize sets by removing nt:base (adding/removing nt:base is irrelevant for the diff)
+                    s1.remove(NameConstants.NT_BASE);
+                    s2.remove(NameConstants.NT_BASE);
+                    if (!s1.equals(s2)) {
-                        if (l1.containsAll(l2)) {
+                        if (s1.containsAll(s2)) {
-        int requiredType;
-        boolean isMultiple;
-            requiredType = def.getRequiredType();
-            isMultiple = def.isMultiple();
-                        && requiredType == other.requiredType
-                        && definesResidual == other.definesResidual
-                        && isMultiple == other.isMultiple;
+                        && definesResidual == other.definesResidual;
-            h = 37 * h + (isMultiple ? 11 : 43);
-            h = 37 * h + requiredType;
-        Name[] requiredPrimaryTypes;
-            requiredPrimaryTypes = def.getRequiredPrimaryTypes();
-            if (requiredPrimaryTypes == null || requiredPrimaryTypes.length == 0) {
-                requiredPrimaryTypes = new Name[]{NameConstants.NT_BASE};
-            }
-            Arrays.sort(requiredPrimaryTypes);
-                        && name.equals(other.name)
-                        && Arrays.equals(requiredPrimaryTypes, other.requiredPrimaryTypes);
+                        && name.equals(other.name);
-            for (int i = 0; i < requiredPrimaryTypes.length; i++) {
-                h = 37 * h + requiredPrimaryTypes[i].hashCode();
-            }

INS8 MOV21 MOV21 MOV27 INS21 INS21 MOV27 UPD74 UPD74 INS32 INS32 UPD43 UPD42 INS14 UPD43 UPD42 INS14 INS42 INS42 INS40 INS42 INS42 INS40 UPD42 INS74 MOV32 UPD42 INS74 MOV32 UPD42 UPD42 INS43 MOV43 INS43 MOV43 UPD42 UPD42 INS42 INS42 DEL39 DEL42 DEL59 DEL23 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL34 DEL42 DEL27 DEL42 DEL34 DEL34 DEL16 DEL36 DEL27 DEL7 DEL21 DEL42 DEL34 DEL42 DEL27 DEL42 DEL27 DEL7 DEL21 DEL85 DEL5 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL85 DEL5 DEL40 DEL4 DEL3 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL40 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL34 DEL42 DEL27 DEL42 DEL42 DEL2 DEL42 DEL32 DEL27 DEL7 DEL21 DEL8 DEL24