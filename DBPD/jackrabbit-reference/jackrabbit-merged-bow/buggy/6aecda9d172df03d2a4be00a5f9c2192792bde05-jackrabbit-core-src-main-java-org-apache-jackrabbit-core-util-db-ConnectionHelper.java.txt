JCR-3349 The BatchMode of the ConnectionHelper doesn't work in XA Environment

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1352791 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+import javax.transaction.xa.Xid;
+import org.apache.jackrabbit.core.TransactionContext;
-    
+    private Map<String, Connection> xaBatchConnectionMap = Collections.synchronizedMap(new HashMap<String, Connection>());
+
-    protected boolean inBatchMode()
-    {
-      return batchConnectionTl.get() != null;
+    protected boolean inBatchMode() {
+    	return getTransactionAwareBatchConnection() != null;
-    /**
+	/**
-            batchConnectionTl.set(batchConnection);
+            setTransactionAwareBatchConnection(batchConnection);
-            batchConnectionTl.remove();
+            removeTransactionAwareBatchConnection();
-    /**
+	/**
-                batchConnectionTl.get().commit();
+            	getTransactionAwareBatchConnection().commit();
-                batchConnectionTl.get().rollback();
+            	getTransactionAwareBatchConnection().rollback();
-            DbUtility.close(batchConnectionTl.get(), null, null);
-            batchConnectionTl.set(null);
+            DbUtility.close(getTransactionAwareBatchConnection(), null, null);
+            removeTransactionAwareBatchConnection();
-            return batchConnectionTl.get();
+            return getTransactionAwareBatchConnection();
+     * Returns the Batch Connection. In XA Environment it is stored
+     * in a Cache-Map based on the current Xid. In Non-XA Environment a ThreadLocal is used.
+     * 
+     * @return Connection
+     */
+    private Connection getTransactionAwareBatchConnection() {
+    	Xid currentXid = TransactionContext.getCurrentXid();
+    	if (currentXid != null) {
+           	return xaBatchConnectionMap.get(xidtoString(currentXid.getGlobalTransactionId()));
+    	} else {
+    		return batchConnectionTl.get();
+    	}
+	}
+
+    /**
+     * Setter for the Batch Connection. In XA Environment it will be stored
+     * in a Cache-Map based on the current Xid. In Non-XA Environment a ThreadLocal is used.
+     * 
+     * @param batchConnection
+     */
+	private void setTransactionAwareBatchConnection(Connection batchConnection) {
+    	Xid currentXid = TransactionContext.getCurrentXid();
+    	if (currentXid != null) {
+       		xaBatchConnectionMap.put(xidtoString(currentXid.getGlobalTransactionId()), batchConnection);
+    	} else {
+    		batchConnectionTl.set(batchConnection);
+    	}
+	}
+
+    /**
+     * Removes the Batch Connection. In XA Environment it will be stored
+     * in a Cache-Map based on the current Xid. In Non-XA Environment a ThreadLocal is used.
+     */
+	private void removeTransactionAwareBatchConnection() {
+    	Xid currentXid = TransactionContext.getCurrentXid();
+    	if (currentXid != null) {
+       		xaBatchConnectionMap.remove(xidtoString(currentXid.getGlobalTransactionId()));
+    	} else {
+    		batchConnectionTl.remove();
+    	}
+	}
+	
+    /**
+     * Creates a comparable String from the given GlobalTransactionId byte[]
+     * 
+     * @param gtrid
+     * @return String
+     */
+    private String xidtoString(byte[] gtrid) {
+        int hexVal;
+        StringBuffer sb = new StringBuffer(512);
+        sb.append(" gtrid(" + gtrid.length + ")={0x");
+        for (int i=0; i<gtrid.length; i++) {
+           hexVal = gtrid[i]&0xFF;
+           if ( hexVal < 0x10 )
+              sb.append("0" + Integer.toHexString(gtrid[i]&0xFF));
+           else
+              sb.append(Integer.toHexString(gtrid[i]&0xFF));
+           }
+        sb.append("}");
+        return sb.toString();
+    }
+
+	/**

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS43 INS43 INS43 INS42 INS32 INS65 INS65 INS42 INS60 INS25 INS65 INS65 INS43 INS42 INS60 INS25 INS65 INS60 INS25 INS65 INS65 INS65 INS42 INS5 INS42 INS60 INS60 INS21 INS24 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS14 INS8 INS66 INS66 INS66 INS43 INS59 INS27 INS8 MOV8 INS66 INS66 INS42 INS42 INS43 INS59 INS27 INS8 INS8 INS66 INS66 INS43 INS59 INS27 INS8 INS8 INS66 INS42 INS66 INS39 INS85 INS39 INS59 INS43 INS59 INS32 INS58 INS27 INS37 INS8 INS32 INS32 INS74 INS21 INS41 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS33 INS21 MOV21 INS42 INS42 INS32 INS42 INS33 INS21 MOV21 INS42 INS42 INS42 INS14 INS42 INS42 INS27 INS39 INS59 INS42 INS40 INS42 INS21 INS25 INS42 INS42 INS45 INS42 INS42 INS43 INS43 INS43 UPD42 INS32 INS21 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS34 INS45 INS40 INS45 INS42 INS34 INS7 INS27 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS34 INS32 INS32 INS42 UPD42 INS42 INS32 INS42 INS32 INS42 INS32 INS2 INS34 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS27 UPD42 UPD42 INS42 INS42 INS27 INS2 INS34 INS2 INS34 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33