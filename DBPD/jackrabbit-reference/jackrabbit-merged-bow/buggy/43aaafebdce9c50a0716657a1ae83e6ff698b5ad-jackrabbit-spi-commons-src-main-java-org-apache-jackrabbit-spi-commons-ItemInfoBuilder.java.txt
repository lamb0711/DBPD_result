JCR-2972: Allow name to be set in PropertyInfoBuilder and NodeInfoBuilder

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1127980 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.commons.ItemInfoBuilder.NodeInfoBuilder;
-     * Same as <code>nodeInfoBuilder(name, null)</code>
-     * @param name
+     * Same as <code>nodeInfoBuilder(localName, null)</code>
+     * @param localName
-    public static NodeInfoBuilder nodeInfoBuilder(String name) {
-        return nodeInfoBuilder(name, null);
+    public static NodeInfoBuilder nodeInfoBuilder(String localName) {
+        return nodeInfoBuilder(localName, null);
-     * Return a {@link NodeInfoBuilder} for a node with a given <code>name</code>.
-     * @param name  Name of the node
+     * Return a {@link NodeInfoBuilder} for a node with a given <code>localName</code>.
+     * @param localName  localName of the node
-    public static NodeInfoBuilder nodeInfoBuilder(String name, Listener listener) {
+    public static NodeInfoBuilder nodeInfoBuilder(String localName, Listener listener) {
+        return new NodeInfoBuilder(null, localName, listener);
+    }
+
+    /**
+     * Return a {@link NodeInfoBuilder} for a node with a given <code>name</code>.
+     * @param name  name of the node
+     * @param listener  {@link Listener} to receive notifications about {@link NodeInfo}s,
+     *                  {@link PropertyInfo}s and {@link ChildInfo}s built.
+     * @return
+     */
+    public static NodeInfoBuilder nodeInfoBuilder(Name name, Listener listener) {
-        private String name;
-        private int index = Path.INDEX_DEFAULT;
+        private String localName;
+        private Name name;
+        private int index = Path.INDEX_DEFAULT;
-        private NodeInfoBuilder(NodeInfoBuilder nodeInfoBuilder, String name, Listener listener) {
+        private NodeInfoBuilder(NodeInfoBuilder nodeInfoBuilder, String localName, Listener listener) {
+            super();
+            parent = nodeInfoBuilder;
+            this.localName = localName;
+            this.listener = listener;
+        }
+
+        private NodeInfoBuilder(NodeInfoBuilder nodeInfoBuilder, Name name, Listener listener) {
-         * Create a new child {@link PropertyInfo} with a given <code>name</code> and a given
+         * Create a new child {@link PropertyInfo} with a given <code>localName</code> and a given
-         * @param name
+         * @param localName
-        public PropertyInfoBuilder createPropertyInfo(String name, String value) throws RepositoryException {
-            PropertyInfoBuilder pBuilder = new PropertyInfoBuilder(this, name, listener);
+        public PropertyInfoBuilder createPropertyInfo(String localName, String value) throws RepositoryException {
+            PropertyInfoBuilder pBuilder = new PropertyInfoBuilder(this, localName, listener);
-         * <code>name</code> on this {@link NodeInfo}.
+         * <code>localName</code> on this {@link NodeInfo}.
-         * @param name
+         * @param localName
-        public PropertyInfoBuilder createPropertyInfo(String name) {
-            return new PropertyInfoBuilder(this, name, listener);
+        public PropertyInfoBuilder createPropertyInfo(String localName) {
+            return new PropertyInfoBuilder(this, localName, listener);
-         * Create a new child {@link NodeInfo} on this NodeInfo with a given <code>name</code>.
-         * @param name
+         * Create a new child {@link NodeInfo} on this NodeInfo with a given <code>localName</code>.
+         * @param localName
-        public NodeInfoBuilder createNodeInfo(String name) {
-            return new NodeInfoBuilder(this, name, listener);
+        public NodeInfoBuilder createNodeInfo(String localName) {
+            return new NodeInfoBuilder(this, localName, listener);
-            return new NodeInfoBuilder(this, null, listener);
+            return new NodeInfoBuilder(this, (String) null, listener);
-         * Set the name of the node
-
+         * Set the <code>name</code> of the node
+         *
-        public NodeInfoBuilder setName(String name) {
+        public NodeInfoBuilder setName(Name name) {
+
+        /**
+         * Set the <code>localName</code> of the node
+         *
+         * @param localName
+         * @return
+         */
+        public NodeInfoBuilder setName(String localName) {
+            this.localName = localName;
+            return this;
+        }
+        /**
+         * Set the namespace
+         *
+         * @param namespace
+         * @return
+         */
+        public NodeInfoBuilder setNamespace(String namespace) {
+            this.namespace = namespace;
+            return this;
+        }
+
-         * Set the namespace
-         *
-         * @param namespace
-         * @return
-         */
-        public NodeInfoBuilder setNamespace(String namespace) {
-            this.namespace = namespace;
-            return this;
-        }
-
-        /**
-            if (this.name == null) {
+            if (localName == null && name == null) {
-                String namespace = this.namespace == null ? Name.NS_DEFAULT_URI : this.namespace;
-                Name name = NameFactoryImpl.getInstance().create(namespace, this.name);
+                if (name == null) {
+                    String ns = namespace == null ? Name.NS_DEFAULT_URI : namespace;
+                    name = NameFactoryImpl.getInstance().create(ns, localName);
+                }
-        private String name;
+        private Name name;
+        private String localName;
-        private PropertyInfoBuilder(NodeInfoBuilder nodeInfoBuilder, String name, Listener listener) {
+        private PropertyInfoBuilder(NodeInfoBuilder nodeInfoBuilder, String localName, Listener listener) {
-            this.name = name;
+            this.localName = localName;
-         * Set the name of this property
+         * Set the <code>name</code> of this property
-        public PropertyInfoBuilder setName(String name) {
+        public PropertyInfoBuilder setName(Name name) {
+         * Set the <code>localName</code> of this property
+         *
+         * @param localName
+         * @return
+         */
+        public PropertyInfoBuilder setName(String localName) {
+            this.localName = localName;
+            return this;
+        }
+
+        /**
-            else if (this.name == null) {
+            else if (localName == null && name == null) {
-                String namespace = this.namespace == null ? Name.NS_DEFAULT_URI : this.namespace;
-                Name propertyName = NameFactoryImpl.getInstance().create(namespace, this.name);
-                Path path = PathFactoryImpl.getInstance().create(parentId.getPath(), propertyName, true);
-                PropertyId id = IdFactoryImpl.getInstance().createPropertyId(parentId, propertyName);
+                if (name == null) {
+                    String ns = namespace == null ? Name.NS_DEFAULT_URI : namespace;
+                    name = NameFactoryImpl.getInstance().create(ns, localName);
+                }
+                Path path = PathFactoryImpl.getInstance().create(parentId.getPath(), name, true);
+                PropertyId id = IdFactoryImpl.getInstance().createPropertyId(parentId, name);

INS31 MOV23 MOV31 MOV31 INS29 INS83 INS83 INS43 INS42 MOV44 INS44 INS8 INS44 INS23 INS31 INS31 INS31 INS23 INS31 UPD42 INS65 INS65 INS65 INS65 INS42 UPD42 INS43 INS42 INS41 INS43 INS42 INS59 INS83 INS43 MOV59 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS44 INS44 INS29 INS44 MOV29 MOV83 MOV43 MOV42 MOV44 MOV8 MOV29 INS83 MOV43 INS42 MOV44 INS8 MOV43 INS44 INS29 INS43 INS42 INS43 INS83 MOV43 INS59 MOV44 INS44 INS29 INS83 INS43 INS42 MOV44 INS8 UPD66 UPD42 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS14 UPD66 INS42 INS42 INS42 UPD42 INS46 INS21 INS21 INS21 INS43 INS42 INS43 INS43 INS42 INS65 INS65 MOV65 MOV65 MOV65 INS43 INS42 MOV65 UPD42 MOV65 UPD42 INS41 MOV43 INS42 INS65 INS65 INS65 INS42 UPD42 INS21 INS41 INS42 INS42 UPD42 MOV43 INS42 INS65 INS65 INS65 INS42 UPD42 INS21 INS41 UPD42 INS42 INS42 INS42 INS42 INS42 INS43 INS33 INS42 INS42 INS7 INS7 INS7 INS42 INS42 INS42 INS66 MOV65 INS66 INS66 MOV65 INS66 INS42 INS42 MOV43 UPD66 UPD66 UPD42 UPD66 UPD42 INS14 UPD66 INS66 INS42 INS7 INS52 INS27 UPD66 INS66 INS42 INS7 INS52 INS42 INS42 INS42 INS22 INS42 INS22 INS42 MOV43 UPD42 MOV43 INS52 INS42 INS42 MOV43 INS11 INS22 INS42 INS27 INS27 INS25 UPD42 INS22 INS42 INS52 INS42 INS52 INS42 UPD42 MOV43 INS33 INS52 INS42 INS42 INS33 INS42 MOV33 INS27 INS8 UPD42 INS52 INS42 INS27 INS42 INS33 MOV60 INS21 INS27 INS27 INS25 INS7 INS42 INS33 INS42 MOV33 INS27 INS8 UPD42 INS42 INS32 INS42 INS33 MOV60 INS21 INS42 MOV32 MOV42 UPD42 MOV42 INS42 INS7 UPD42 UPD42 INS42 UPD42 INS42 INS32 INS42 MOV32 MOV42 UPD42 MOV42 INS42 INS42 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL29 DEL31 DEL33 DEL42 DEL52 DEL42 DEL42 DEL14 DEL41 DEL52 DEL42 DEL22 DEL27 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL32 DEL59 DEL60 DEL52 DEL42 DEL22 DEL27 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL32 DEL59 DEL60