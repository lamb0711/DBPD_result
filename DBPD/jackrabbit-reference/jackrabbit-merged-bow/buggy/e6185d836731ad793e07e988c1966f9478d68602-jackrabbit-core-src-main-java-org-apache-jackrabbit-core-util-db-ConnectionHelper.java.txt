JCR-3387 On heavy load we see occasional SQLException: closed statement: next

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1367057 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
-    private Map<String, Connection> batchConnectionMap = Collections.synchronizedMap(new HashMap<String, Connection>());
+    private Map<Object, Connection> batchConnectionMap = Collections.synchronizedMap(new HashMap<Object, Connection>());
-       	return batchConnectionMap.get(threadIdToString(threadId));
+       	return batchConnectionMap.get(threadIdToObject(threadId));
-    	batchConnectionMap.put(threadIdToString(threadId), batchConnection);
+    	batchConnectionMap.put(threadIdToObject(threadId), batchConnection);
-    	batchConnectionMap.remove(threadIdToString(threadId));
+    	batchConnectionMap.remove(threadIdToObject(threadId));
-    private String threadIdToString(Object threadId) {
+    private Object threadIdToObject(Object threadId) {
-    		byte[] gtrid = (byte[]) threadId;
-    		int hexVal;
-    		StringBuffer sb = new StringBuffer(512);
-    		sb.append(" gtrid(" + gtrid.length + ")={0x");
-    		for (int i=0; i< gtrid.length; i++) {
-    			hexVal = gtrid[i]&0xFF;
-    			if ( hexVal < 0x10 ) {
-    				sb.append("0" + Integer.toHexString(gtrid[i]&0xFF));
-    			} else {
-    				sb.append(Integer.toHexString(gtrid[i]&0xFF));
-    			}
-    		}
-    		sb.append("}");
-    		return sb.toString();
+    		return new XidWrapper((byte[]) threadId);
+    
+    /**
+     * Wrapper around a global transaction id (byte[]) 
+     * that handles hashCode and equals in a proper way.
+     */
+    private class XidWrapper {
+    	private byte[] gtid;
+    	
+    	public XidWrapper(byte[] gtid) {
+    		this.gtid = gtid;
+    	}
+
+        @Override
+        public boolean equals(Object other) {
+            if (!(other instanceof XidWrapper)) {
+                return false;
+            }
+            return TransactionContext.isSameThreadId(gtid, ((XidWrapper)other).gtid);
+        }
+
+        @Override
+        public int hashCode() {
+            return Arrays.hashCode(gtid);
+        }
+    }

INS26 INS40 INS31 INS55 UPD74 MOV29 MOV83 UPD43 MOV43 UPD42 MOV42 MOV44 INS8 INS29 INS83 INS42 INS23 INS31 INS31 INS31 UPD43 UPD42 INS25 INS65 INS83 INS5 INS59 INS83 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 UPD42 MOV62 INS8 MOV8 INS66 INS66 INS39 INS85 UPD42 MOV42 MOV5 INS42 MOV21 INS42 INS43 INS42 INS25 INS41 INS42 MOV41 UPD74 INS41 INS42 INS38 INS8 INS32 UPD43 UPD42 UPD42 UPD42 INS14 INS22 INS42 INS36 INS41 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS22 UPD42 UPD42 INS42 UPD42 UPD43 MOV43 MOV11 INS52 INS42 INS62 INS9 INS36 INS42 UPD42 INS42 INS43 INS11 INS42 INS43 INS42 INS42 DEL42 DEL59 DEL60 DEL39 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL34 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL40 DEL45 DEL27 DEL32 DEL21 DEL39 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL42 DEL2 DEL34 DEL27 DEL32 DEL27 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL2 DEL34 DEL27 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL42 DEL2 DEL34 DEL27