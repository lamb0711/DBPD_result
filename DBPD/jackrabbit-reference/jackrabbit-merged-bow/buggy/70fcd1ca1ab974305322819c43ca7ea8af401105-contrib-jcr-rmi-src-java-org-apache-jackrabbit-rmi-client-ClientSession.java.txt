- updating to spec 0.16.4

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@161470 13f79535-47bb-0310-9956-ffa450edef68

-    public String getUserId() {
+    public String getUserID() {
-            return remote.getUserId();
+            return remote.getUserID();
-    public boolean itemExists(String path) {
+    public boolean itemExists(String path) throws RepositoryException {
-            throws AccessControlException {
+            throws AccessControlException, RepositoryException{
-    public void importXML(String path, InputStream xml)
+    public void importXML(String path, InputStream xml, int mode)
-            remote.importXML(path, buffer.toByteArray());
+            remote.importXML(path, buffer.toByteArray(), mode);
-    public ContentHandler getImportContentHandler(String path)
+    public ContentHandler getImportContentHandler(String path, int mode)
-        return new SessionImportContentHandler(this, path);
+        return new SessionImportContentHandler(this, path, mode);
-    public void exportSysView(
+    public void exportSystemView(
-            byte[] xml = remote.exportSysView(path, binaryAsLink, noRecurse);
+            byte[] xml = remote.exportSystemView(path, binaryAsLink, noRecurse);
-    public void exportSysView(
+    public void exportSystemView(
-            byte[] xml = remote.exportSysView(path, binaryAsLink, noRecurse);
+            byte[] xml = remote.exportSystemView(path, binaryAsLink, noRecurse);
-    public void exportDocView(
+    public void exportDocumentView(
-            byte[] xml = remote.exportDocView(path, binaryAsLink, noRecurse);
+            byte[] xml = remote.exportDocumentView(path, binaryAsLink, noRecurse);
-    public void exportDocView(
+    public void exportDocumentView(
-            byte[] xml = remote.exportDocView(path, binaryAsLink, noRecurse);
+            byte[] xml = remote.exportDocumentView(path, binaryAsLink, noRecurse);
+
+    /**
+     * {@inheritDoc}
+     */
+    public boolean isLive() {
+        try {
+            return remote.isLive();
+        } catch (RemoteException e) {
+            throw new RemoteRuntimeException(e);
+        }
+    }

INS31 UPD42 INS43 INS43 INS44 INS44 UPD42 UPD42 UPD42 UPD42 INS29 INS83 INS39 INS42 INS8 INS42 INS42 INS39 INS42 INS39 INS42 INS65 INS54 INS65 INS8 INS12 INS42 INS41 INS44 INS8 INS32 INS43 INS42 INS53 UPD42 INS42 INS42 INS42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 INS43 INS42 INS42