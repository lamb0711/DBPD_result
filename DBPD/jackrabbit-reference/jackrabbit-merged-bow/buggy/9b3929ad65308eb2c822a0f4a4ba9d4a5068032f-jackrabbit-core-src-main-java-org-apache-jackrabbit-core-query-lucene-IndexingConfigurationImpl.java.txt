JCR-1717: Configure occurrence of property value in excerpt

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@684732 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * Returns <code>true</code> if the content of the property with the given
+     * name should show up in an excerpt. If there is no configuration entry for
+     * that property <code>true</code> is returned.
+     *
+     * @param state the node state.
+     * @param propertyName the name of a property.
+     * @return <code>true</code> if the content of the property should be
+     *         included in an excerpt; <code>false</code> otherwise.
+     */
+    public boolean useInExcerpt(NodeState state, Name propertyName) {
+        IndexingRule rule = getApplicableIndexingRule(state);
+        if (rule != null) {
+            return rule.useInExcerpt(propertyName);
+        }
+        // none of the config elements matched -> default is to include
+        return true;
+    }
-                PropertyConfig pc = new PropertyConfig(boost, nodeScopeIndex);
+                // get useInExcerpt flag
+                boolean useInExcerpt = true;
+                Node excerpt = attributes.getNamedItem("useInExcerpt");
+                if (excerpt != null) {
+                    useInExcerpt = Boolean.valueOf(
+                            excerpt.getNodeValue()).booleanValue();
+                }
+
+                PropertyConfig pc = new PropertyConfig(
+                        boost, nodeScopeIndex, useInExcerpt);
+         * Returns <code>true</code> if the content of the property with the
+         * given name should show up in an excerpt. If there is no configuration
+         * entry for that property <code>true</code> is returned.
+         *
+         * @param propertyName the name of a property.
+         * @return <code>true</code> if the content of the property should be
+         *         included in an excerpt; <code>false</code> otherwise.
+         */
+        public boolean useInExcerpt(Name propertyName) {
+            PropertyConfig config = getConfig(propertyName);
+            if (config != null) {
+                return config.useInExcerpt;
+            } else {
+                return true;
+            }
+        }
+
+        /**
-        PropertyConfig(float boost, boolean nodeScopeIndex) {
+        /**
+         * Flag that indicates whether the content of a property should be used
+         * to create an excerpt.
+         */
+        final boolean useInExcerpt;
+
+        PropertyConfig(float boost,
+                       boolean nodeScopeIndex,
+                       boolean useInExcerpt) {
+            this.useInExcerpt = useInExcerpt;

INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS31 INS23 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS60 INS25 INS41 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS59 INS44 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS43 INS59 INS27 INS8 INS9 INS65 INS65 INS65 INS43 INS42 INS60 INS25 INS65 INS42 INS39 INS42 INS21 INS42 INS42 INS32 INS42 INS33 INS41 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS43 INS59 INS27 INS8 INS8 INS66 INS66 INS7 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS41 INS41 INS22 INS42 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS40 INS9 INS52 INS42 INS39 INS59 INS43 INS59 INS27 INS8 MOV43 INS42 INS9 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS45 INS7 MOV43 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42