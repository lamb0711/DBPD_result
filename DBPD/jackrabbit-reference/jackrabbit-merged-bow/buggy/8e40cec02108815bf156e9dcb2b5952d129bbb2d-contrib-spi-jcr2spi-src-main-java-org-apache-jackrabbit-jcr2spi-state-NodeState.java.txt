div

- get rid of rootId stored with ISM, HierarchyManagers etc.
- remove corresponding method with WorkspaceManager and WorkspaceImpl

jcr2spi/state/ItemState

- move parent field from Node/PropertyState to ItemState
- move idFactory field from NodeState to ItemState
- let PropertyState build its id instead of calling parentstate method.
- minor reordering of status related methods
- remove modCount and its usage

jcr2spi/state/ItemStateManager

- add method getRootNode()

jcr2spi/security/AccessManager

- replace ItemId by ItemState

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431352 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.PropertyId;
+<<<<<<< .mine
+=======
+>>>>>>> .r431350
-    // DIFF JR: limit creation of property-ids to the nodeState
-    // TODO: check again....
-    private final IdFactory idFactory;
-
-    public NodeState(QName name, String uuid, NodeState parent,
+    protected NodeState(QName name, String uuid, NodeState parent,
-        super(initialStatus, isTransient);
+        super(parent, initialStatus, isTransient, idFactory);
-        this.parent = parent;
-        this.idFactory = idFactory;
-    public NodeState(NodeState overlayedState, NodeState parent,
+    protected NodeState(NodeState overlayedState, NodeState parent,
-        super(overlayedState, initialStatus, isTransient);
+        super(overlayedState, parent, initialStatus, isTransient, idFactory);
-        this.parent = parent;
-        this.idFactory = idFactory;
-    //----------------------< public READ methods and package private WRITE >---
+    //--------------------< public READ methods and package private Setters >---
-     * {@inheritDoc}
-     */
-    public NodeState getParent() {
-        return parent;
-    }
-
-    /**
+    // TODO: change to private and only let new parent node state set the parent.
-            try {
-                if (parentState == null) {
-                    // special case for root state
-                    def = ntRegistry.getRootNodeDef();
-                } else {
+            if (parentState == null) {
+                // special case for root state
+                def = ntRegistry.getRootNodeDef();
+            } else {
+                try {
-                    setDefinition(ent.getApplicableNodeDefinition(cne.getName(), getNodeTypeName()));
+                    def = ent.getApplicableNodeDefinition(cne.getName(), getNodeTypeName());
+                } catch (NodeTypeConflictException e) {
+                    String msg = "internal error: failed to build effective node type.";
+                    log.debug(msg);
+                    throw new RepositoryException(msg, e);
-            } catch (NodeTypeConflictException e) {
-                String msg = "internal error: failed to build effective node type.";
-                log.debug(msg);
-                throw new RepositoryException(msg, e);
-
-                                                         NodeId id) {
+                                                  NodeId id) {
-     * Returns the <code>PropertyId</code> for a property with
-     * <code>propertyName</code>. The property does not necessarily have to
-     * exist on <code>this</code> node state.
-     *
-     * @param propertyName the name of a property.
-     * @return the property id.
-     */
-    PropertyId getPropertyId(QName propertyName) {
-        return idFactory.createPropertyId(getNodeId(), propertyName);
-    }
-
-    /**

UPD83 UPD83 MOV8 INS46 INS46 INS25 MOV41 INS66 INS66 INS66 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 MOV27 MOV8 MOV60 INS8 INS54 MOV8 MOV12 INS7 INS42 MOV32 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL46 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL46 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL32 DEL54 DEL25 DEL8 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31