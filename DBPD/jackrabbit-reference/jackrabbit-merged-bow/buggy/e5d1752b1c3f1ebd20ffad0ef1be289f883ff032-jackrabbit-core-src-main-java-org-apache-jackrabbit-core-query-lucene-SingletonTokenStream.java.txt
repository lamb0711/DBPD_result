JCR-2415: Update Lucene to 3.0
- Merge all from JCR-2415-lucene-3.0 at 1064038 (reintegration)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1064058 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-
-import org.apache.lucene.analysis.Token;
+import org.apache.lucene.analysis.tokenattributes.PayloadAttribute;
+import org.apache.lucene.analysis.tokenattributes.TermAttribute;
+import java.io.IOException;
+
+     * The term attribute of the current token
+     */
+    private TermAttribute termAttribute;
+
+    /**
+     * The payload attribute of the current token
+     */
+    private PayloadAttribute payloadAttribute;
+
+    /**
+     * Creates a new SingleTokenStream with the given value and payload.
+     *
+     * @param value the string value that will be returned with the token.
+     * @param payload the payload that will be attached to this token
+     */
+    public SingletonTokenStream(String value, Payload payload) {
+        this.value = value;
+        this.payload = payload;
+        termAttribute = (TermAttribute) addAttribute(TermAttribute.class);
+        payloadAttribute = (PayloadAttribute) addAttribute(PayloadAttribute.class);
+    }
+
+    /**
-        this.value = value;
-        this.payload = new Payload(new PropertyMetaData(type).toByteArray());
+        this(value, new Payload(new PropertyMetaData(type).toByteArray()));
-    /**
-     * Creates a new SingleTokenStream with the given token.
-     *
-     * @param t the token.
-     */
-    public SingletonTokenStream(Token t) {
-        this.value = t.term();
-        this.payload = t.getPayload();
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public Token next(Token reusableToken) throws IOException {
+    @Override
+    public boolean incrementToken() throws IOException {
-            return null;
+            return false;
-        reusableToken.clear();
-        reusableToken.setTermBuffer(value);
-        reusableToken.setPayload(payload);
-        reusableToken.setStartOffset(0);
-        reusableToken.setEndOffset(value.length());
+
+        clearAttributes();
+        termAttribute.setTermBuffer(value);
+        payloadAttribute.setPayload(payload);
+
-        return reusableToken;
+        return true;

MOV26 MOV26 INS26 MOV31 INS40 UPD40 INS23 INS23 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS44 MOV21 INS78 INS39 INS42 INS65 INS42 INS42 INS65 INS42 INS42 INS65 UPD43 UPD42 INS43 INS42 MOV21 INS21 INS17 INS42 INS66 INS66 UPD66 UPD42 UPD66 INS42 INS66 UPD42 INS42 INS7 INS42 MOV14 INS9 INS42 INS42 INS11 INS42 INS11 UPD42 UPD42 UPD42 INS43 INS32 INS43 INS32 INS9 INS42 UPD42 MOV42 INS57 INS42 INS42 INS57 INS43 INS43 INS42 INS42 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL32 DEL52 DEL42 DEL22 DEL7 DEL21 DEL65 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL33 DEL42 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42