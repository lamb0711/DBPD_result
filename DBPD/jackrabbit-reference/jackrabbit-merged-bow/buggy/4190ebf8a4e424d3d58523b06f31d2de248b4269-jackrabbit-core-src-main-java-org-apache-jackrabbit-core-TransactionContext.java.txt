JCR-2753: Deadlock in DefaultISMLocking

Move the thread identifier computations to TransactionContext from where they can be better reused.

Note that it's not necessarily possible to "upgrade" an ISMLocking read lock.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1036336 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+
+    /**
+     * Returns the current thread identifier. The identifier is either the
+     * current thread instance or the global transaction identifier when
+     * running under a transaction.
+     *
+     * @return current thread identifier
+     */
+    public static Object getCurrentThreadId() {
+        Xid xid = TransactionContext.getCurrentXid();
+        if (xid != null) {
+            return xid.getGlobalTransactionId();
+        } else {
+            return Thread.currentThread();
+        }
+    }
+
+    /**
+     * Compares the given thread identifiers for equality.
+     *
+     * @see #getCurrentThreadId()
+     */
+    public static boolean isSameThreadId(Object a, Object b) {
+        if (a == b) {
+            return true;
+        } else if (a instanceof byte[] && b instanceof byte[]) {
+            return Arrays.equals((byte[]) a, (byte[]) b);
+        } else {
+            return false;
+        }
+    }
+

INS26 INS40 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS42 INS60 INS25 INS65 INS65 INS43 INS42 INS43 INS42 INS25 INS66 INS66 INS66 INS66 INS43 INS59 INS27 INS8 INS8 INS66 INS68 INS42 INS42 INS27 INS8 INS25 INS42 INS42 INS32 INS42 INS33 INS41 INS41 INS42 INS42 INS42 INS41 INS27 INS8 INS8 INS42 INS42 INS32 INS32 INS9 INS62 INS62 INS41 INS41 INS42 INS42 INS42 INS42 INS42 INS5 INS42 INS5 INS32 INS9 INS39 INS85 INS39 INS85 INS42 INS42 INS11 INS11 INS5 INS42 INS5 INS42 INS39 INS85 INS39 INS85