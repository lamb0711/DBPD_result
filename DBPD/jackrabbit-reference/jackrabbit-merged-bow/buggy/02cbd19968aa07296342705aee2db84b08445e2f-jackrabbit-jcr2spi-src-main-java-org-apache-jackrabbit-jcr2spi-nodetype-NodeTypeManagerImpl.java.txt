JCR-2105: JSR 283 NodeType Management (work in progress)
JCR-1483: Move common node type functionality to jackrabbit-spi-commons

NOTE: intermediate checkin to avoid additional conflicts with stefans work


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774294 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.nodetype.NodeDefinitionImpl;
+import org.apache.jackrabbit.spi.commons.nodetype.PropertyDefinitionImpl;
+import org.apache.jackrabbit.spi.commons.QNodeTypeDefinitionImpl;
-import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.nodetype.NodeTypeExistsException;
+import java.util.HashSet;
+import java.util.List;
-     * @see NodeTypeManager#registerNodeType(javax.jcr.nodetype.NodeTypeDefinition, boolean)
-     */
-    public NodeType registerNodeType(NodeTypeDefinition ntd, boolean allowUpdate)
-            throws RepositoryException {
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
-    }
-
-    /**
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
-    }
+        List<QNodeTypeDefinition> defs = new ArrayList<QNodeTypeDefinition>(ntds.length);
+        for (NodeTypeDefinition definition : ntds) {
+            QNodeTypeDefinition qdef = new QNodeTypeDefinitionImpl(definition, resolver(), mgrProvider.getQValueFactory());
+            if (!allowUpdate && hasNodeType(qdef.getName())) {
+                throw new NodeTypeExistsException("NodeType " + definition.getName() + " already exists.");
+            }
+            defs.add(qdef);
+        }
-    /**
-     * @see NodeTypeManager#unregisterNodeType(String)
-     */
-    public void unregisterNodeType(String name) throws RepositoryException {
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
+        getNodeTypeRegistry().registerNodeTypes(defs, allowUpdate);
+
+        List<NodeType> nts = new ArrayList<NodeType>();
+        for (Iterator<QNodeTypeDefinition> it = defs.iterator(); it.hasNext();) {
+            nts.add(getNodeType(it.next().getName()));
+        }
+        return new NodeTypeIteratorAdapter(nts);
+
-        // TODO
-        throw new UnsupportedRepositoryOperationException("JCR-1591");
+        HashSet ntNames = new HashSet();
+        for (String name : names) {
+            ntNames.add(resolver().getQName(name));
+        }
+        getNodeTypeRegistry().unregisterNodeTypes(ntNames);

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 INS40 INS31 MOV29 INS83 MOV43 INS42 MOV44 MOV44 MOV43 INS8 INS60 INS70 INS21 INS60 INS24 INS41 INS60 INS70 INS21 INS74 INS59 MOV44 INS42 INS8 INS32 INS74 INS59 INS58 INS32 INS8 INS14 INS43 INS59 MOV44 INS42 INS8 INS32 INS43 INS43 INS42 INS14 UPD42 INS60 INS25 INS21 INS32 INS42 INS42 INS42 INS43 MOV43 INS42 INS14 INS74 INS59 INS42 INS42 INS21 UPD43 MOV43 INS42 INS42 INS42 INS14 INS21 INS32 INS42 INS42 INS42 INS42 INS74 INS40 INS43 INS59 INS27 INS8 INS32 INS42 UPD42 MOV42 INS74 INS43 INS43 INS42 INS32 INS32 UPD42 UPD43 MOV43 INS32 INS42 INS43 INS43 UPD42 MOV42 INS42 INS14 INS38 INS32 MOV53 INS42 INS42 INS42 INS43 INS43 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS42 INS42 UPD43 MOV43 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 UPD43 INS27 INS32 INS42 INS42 UPD42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 DEL45 DEL42 DEL42 DEL40 DEL43 DEL69 DEL39 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL39 DEL42 DEL44 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31 DEL83 DEL42 DEL8 DEL31 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL39 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31 DEL45 DEL14 DEL53