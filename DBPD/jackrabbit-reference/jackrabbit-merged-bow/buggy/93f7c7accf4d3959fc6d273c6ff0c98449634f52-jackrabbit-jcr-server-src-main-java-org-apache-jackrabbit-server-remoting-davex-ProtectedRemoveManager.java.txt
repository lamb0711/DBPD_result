JCR-3874 : XML Configuration for ProtectedItemRemoveHandler implementations (credits to Alfusainey Jallow, who reported the issue and provided the patch. Thanks Alfu for your contribution.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1695294 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
-import java.util.Enumeration;
-import java.util.Properties;
-public class ProtectedRemoveManager {
+class ProtectedRemoveManager {
-    public ProtectedRemoveManager(String config) throws IOException {
+    ProtectedRemoveManager(String config) throws IOException {
-        		 InputStream inStream = new FileInputStream(file);
-                 Properties props = new Properties();
-        		 props.load(inStream);             
-        		 for (Enumeration<?> en = props.propertyNames(); en.hasMoreElements();) {             
-        			 String key = en.nextElement().toString();                 
-        			 String className = props.getProperty(key);                 
-        			 if (!className.isEmpty()) {                 
-        				 ProtectedItemRemoveHandler irHandler = createHandler(className);                     
-        				 if (irHandler != null) {                     
-        					 handlers.add(irHandler);                        
-        				 }                    
-        			 }                
-        		 }            
+ 				try {
+                    InputStream fis = new FileInputStream(file);
+ 					ProtectedRemoveConfig prConfig = new ProtectedRemoveConfig(this);
+ 					prConfig.parse(fis);
+ 				} catch (FileNotFoundException e) {
+ 					throw new IOException(e.getMessage(), e);
+ 				}            
-        			 ProtectedItemRemoveHandler irHandler = createHandler(config);        	         
-        			 if (irHandler != null) {        	         
-        				 handlers.add(irHandler);        	            
-        			 }        	    	
+        			 ProtectedItemRemoveHandler handler = createHandler(config); 					
+        			 addHandler(handler);        	    	
-    public boolean remove(Session session, String itemPath) throws RepositoryException {
+    boolean remove(Session session, String itemPath) throws RepositoryException {
-    private static ProtectedItemRemoveHandler createHandler(String className) {
+    ProtectedItemRemoveHandler createHandler(String className) {
+    	ProtectedItemRemoveHandler irHandler = null;
-            Class<?> irHandlerClass = Class.forName(className);
-            if (ProtectedItemRemoveHandler.class.isAssignableFrom(irHandlerClass)) {
-                ProtectedItemRemoveHandler irHandler = (ProtectedItemRemoveHandler) irHandlerClass.newInstance();
-                return irHandler;
-            }
+        	if (!className.isEmpty()) {
+				Class<?> irHandlerClass = Class.forName(className);
+				if (ProtectedItemRemoveHandler.class.isAssignableFrom(irHandlerClass)) {
+					irHandler = (ProtectedItemRemoveHandler) irHandlerClass.newInstance();
+				}
+			}
-        return null;
+        return irHandler;
+    
+    void addHandler(ProtectedItemRemoveHandler instance) {
+		if (instance != null) {
+			handlers.add(instance);
+		}
+	}

MOV26 UPD40 INS31 INS39 INS42 INS44 INS8 INS60 MOV41 MOV43 INS42 INS25 MOV43 INS59 INS8 INS27 INS8 INS42 INS33 INS25 INS42 INS33 INS21 MOV38 MOV8 INS32 INS54 INS42 INS42 INS42 INS8 INS12 MOV60 MOV60 MOV21 INS44 INS8 MOV21 INS21 UPD43 INS43 INS42 INS53 INS7 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 INS14 UPD42 UPD42 UPD42 INS42 MOV11 UPD43 INS52 INS43 INS32 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL83 DEL83 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL43 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL33 DEL27 DEL8 DEL25 DEL83 DEL83 DEL83 DEL42 DEL59 DEL60 DEL33 DEL41