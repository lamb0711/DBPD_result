remove ItemStateException (and subclasses) and replace their usage with RepositoryException and subclasses respectively

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520315 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.RepositoryException;
+import javax.jcr.ItemNotFoundException;
-     *
-     * @throws ItemStateException
+     * @throws ItemNotFoundException
+     * @throws RepositoryException
-    public NodeState createRootState(NodeEntry entry) throws ItemStateException;
+    public NodeState createRootState(NodeEntry entry) throws ItemNotFoundException, RepositoryException;
-     * @throws NoSuchItemStateException if there is no such <code>NodeState</code>.
-     * @throws ItemStateException if an error occurs while retrieving the <code>NodeState</code>.
+     * @throws ItemNotFoundException if there is no such <code>NodeState</code>.
+     * @throws RepositoryException if an error occurs while retrieving the <code>NodeState</code>.
-        throws NoSuchItemStateException, ItemStateException;
+            throws ItemNotFoundException, RepositoryException;
-     * @throws NoSuchItemStateException if there is no such <code>NodeState</code>.
-     * @throws ItemStateException if an error occurs while retrieving the <code>NodeState</code>.
+     * @throws ItemNotFoundException if there is no such <code>NodeState</code>.
+     * @throws RepositoryException if an error occurs while retrieving the <code>NodeState</code>.
-    public NodeState createDeepNodeState(NodeId nodeId, NodeEntry anyParent) throws NoSuchItemStateException, ItemStateException;
+    public NodeState createDeepNodeState(NodeId nodeId, NodeEntry anyParent)
+            throws ItemNotFoundException, RepositoryException;
-     * @throws NoSuchItemStateException if there is no such <code>PropertyState</code>.
-     * @throws ItemStateException       if an error occurs while retrieving the
-     *                                  <code>PropertyState</code>.
+     * @throws ItemNotFoundException if there is no such <code>PropertyState</code>.
+     * @throws RepositoryException if an error occurs while retrieving the
+     * <code>PropertyState</code>.
-        throws NoSuchItemStateException, ItemStateException;
+            throws ItemNotFoundException, RepositoryException;
-     * @throws NoSuchItemStateException if there is no such <code>NodeState</code>.
-     * @throws ItemStateException if an error occurs while retrieving the <code>NodeState</code>.
+     * @throws ItemNotFoundException if there is no such <code>NodeState</code>.
+     * @throws RepositoryException if an error occurs while retrieving the <code>NodeState</code>.
-    public PropertyState createDeepPropertyState(PropertyId propertyId, NodeEntry anyParent) throws NoSuchItemStateException, ItemStateException;
+    public PropertyState createDeepPropertyState(PropertyId propertyId, NodeEntry anyParent) throws ItemNotFoundException, RepositoryException;
+     * @throws ItemNotFoundException
+     * @throws RepositoryException
-    public Iterator getChildNodeInfos(NodeId nodeId) throws NoSuchItemStateException, ItemStateException;
+    public Iterator getChildNodeInfos(NodeId nodeId) throws ItemNotFoundException, RepositoryException;

INS26 INS26 INS40 INS40 UPD43 INS43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS65 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS65 INS65 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD66 UPD42 UPD42 INS42 INS42