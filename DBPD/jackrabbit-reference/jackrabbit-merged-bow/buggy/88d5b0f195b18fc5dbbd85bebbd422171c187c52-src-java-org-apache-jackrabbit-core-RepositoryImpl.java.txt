

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@76003 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.collections.ReferenceMap;
-public class RepositoryImpl implements Repository, EventListener {
+public class RepositoryImpl implements Repository, SessionListener, EventListener {
-    // map of workspace names and workspace item state managers
-    // (might be shared among multiple workspace instances representing
-    // the same named workspace, i.e. the same physical storage)
+    /**
+     * map of workspace names and workspace item state managers
+     * (might be shared among multiple workspace instances representing
+     * the same named workspace, i.e. the same physical storage)
+     */
-    // map of workspace names and workspace reference managers
-    // (might be shared among multiple workspace instances representing
-    // the same named workspace, i.e. the same physical storage)
+    /**
+     * map of workspace names and workspace reference managers
+     * (might be shared among multiple workspace instances representing
+     * the same named workspace, i.e. the same physical storage)
+     */
+    /**
+     * active sessions (weak references)
+     */
+    private final ReferenceMap activeSessions =
+            new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK);
+
-        // (by now, we just create a system root node in all workspaces)
+        // (for now, we just create a system root node in all workspaces)
-        /**
-         * todo close sessions, close item state mgr's, free resources, etc.
-         */
+        // close active user sessions
+        for (Iterator it = activeSessions.values().iterator(); it.hasNext();) {
+            SessionImpl session = (SessionImpl) it.next();
+            session.removeListener(this);
+            session.logout();
+        }
+        activeSessions.clear();
+        // close system sessions
+        for (Iterator it = wspSystemSessions.values().iterator(); it.hasNext();) {
+            SessionImpl session = (SessionImpl) it.next();
+            session.removeListener(this);
+            session.logout();
+        }
+        wspSystemSessions.clear();
+
+        // dispose persistent item state  mgr's
+        for (Iterator it = wspStateMgrs.values().iterator(); it.hasNext();) {
+            PersistentItemStateManager stateMgr =
+                    (PersistentItemStateManager) it.next();
+            stateMgr.dispose();
+        }
+
+        // shutdown persistence managers & file systems
-                log.error("Error while closing persistence manager of workspace " + wspConfig.getName(), e);
+                log.error("error while closing persistence manager of workspace " + wspConfig.getName(), e);
-                log.error("Error while closing filesystem of workspace " + wspConfig.getName(), e);
+                log.error("error while closing filesystem of workspace " + wspConfig.getName(), e);
+        /**
+         * todo further cleanup tasks, free resources, etc.
+         */
+
-            log.error("Error while closing repository filesystem", e);
+            log.error("error while closing repository filesystem", e);
-            return new XASessionImpl(this, ANONYMOUS_CREDENTIALS, wspConfig, txMgr);
+            SessionImpl ses = new XASessionImpl(this, ANONYMOUS_CREDENTIALS, wspConfig, txMgr);
+            activeSessions.put(ses, ses);
+            return ses;
-            return new XASessionImpl(this, credentials, wspConfig, txMgr);
+            Session ses = new XASessionImpl(this, credentials, wspConfig, txMgr);
+            activeSessions.put(ses, ses);
+            return ses;
+    //------------------------------------------------------< SessionListener >
+    /**
+     * @see SessionListener#loggedOut(SessionImpl)
+     */
+    public void loggedOut(SessionImpl session) {
+        // remove session from active sessions
+        activeSessions.remove(session);
+    }
+

INS26 INS40 INS43 INS23 INS31 INS42 INS29 INS29 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS65 INS65 INS42 INS42 INS14 INS24 INS21 INS24 INS21 INS24 INS54 INS65 INS43 INS42 INS21 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS43 INS40 INS40 INS58 INS32 INS8 INS32 INS58 INS32 INS8 INS32 INS58 INS32 INS8 MOV54 MOV8 INS12 INS68 INS42 INS32 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 MOV44 MOV8 INS60 INS21 INS42 INS42 INS69 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS42 INS42 INS32 INS43 INS59 INS32 MOV8 MOV8 INS43 INS59 INS32 INS42 INS60 INS21 INS43 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS52 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 INS11 INS42 INS42 MOV44 MOV44 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS32 UPD45 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD45 UPD45 DEL12 DEL54