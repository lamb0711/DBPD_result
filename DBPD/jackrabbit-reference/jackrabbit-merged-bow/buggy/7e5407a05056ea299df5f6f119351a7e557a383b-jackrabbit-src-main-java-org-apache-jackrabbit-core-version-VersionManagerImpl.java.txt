[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.observation.EventStateCollectionFactory;
+import org.apache.jackrabbit.core.observation.EventStateCollectionFactory;
+import javax.jcr.ReferentialIntegrityException;
-import javax.jcr.ReferentialIntegrityException;
+import java.util.Collection;
-import java.util.Collection;
-     * The root node UUID for the version storage
-     */
-    private final String VERSION_STORAGE_NODE_UUID;
-
-    /**
-                              DelegatingObservationDispatcher obsMgr, String rootUUID,
-                              String rootParentUUID) throws RepositoryException {
+                              DelegatingObservationDispatcher obsMgr, NodeId rootId,
+                              NodeId rootParentId) throws RepositoryException {
-            this.VERSION_STORAGE_NODE_UUID = rootUUID;
-            if (!pMgr.exists(new NodeId(rootUUID))) {
-                NodeState root = pMgr.createNew(new NodeId(rootUUID));
-                root.setParentUUID(rootParentUUID);
+            if (!pMgr.exists(rootId)) {
+                NodeState root = pMgr.createNew(rootId);
+                root.setParentId(rootParentId);
-                PropertyState pt = pMgr.createNew(new PropertyId(rootUUID, QName.JCR_PRIMARYTYPE));
+                PropertyState pt = pMgr.createNew(new PropertyId(rootId, QName.JCR_PRIMARYTYPE));
-                    new VersionItemStateManager(pMgr, VERSION_STORAGE_NODE_UUID, ntReg);
+                    new VersionItemStateManager(pMgr, rootId, ntReg);
-            NodeState nodeState = (NodeState) stateMgr.getItemState(new NodeId(VERSION_STORAGE_NODE_UUID));
+            NodeState nodeState = (NodeState) stateMgr.getItemState(rootId);
-            throw new VersionException("History already exists for node " + node.getUUID());
+            throw new VersionException("History already exists for node " + node.getNodeId());
-        return (VersionHistory) session.getNodeByUUID(history.getId());
+        return (VersionHistory) ((SessionImpl) session).getNodeById(history.getId());
-    public boolean hasItem(String id) {
-        return versionItems.containsKey(id) || stateMgr.hasItemState(new NodeId(id));
+    public boolean hasItem(NodeId id) {
+        return versionItems.containsKey(id) || stateMgr.hasItemState(id);
-    protected synchronized InternalVersionItem getItem(String uuid)
+    protected synchronized InternalVersionItem getItem(NodeId id)
-        NodeId id = new NodeId(uuid);
-            InternalVersionItem item = (InternalVersionItem) versionItems.get(uuid);
+            InternalVersionItem item = (InternalVersionItem) versionItems.get(id);
-                    String parentUUID = pNode.getParentUUID();
+                    NodeId parentId = pNode.getParentId();
-                            (parentUUID != null) ? getItem(parentUUID) : null;
+                            (parentId != null) ? getItem(parentId) : null;
-                        item = ((InternalVersionHistory) parent).getVersion(uuid);
+                        item = ((InternalVersionHistory) parent).getVersion(id);
-                    versionItems.put(uuid, item);
+                    versionItems.put(id, item);
-            version = checkin(
-                    (InternalVersionHistoryImpl) getVersionHistory(histUUID), node);
+            version = checkin((InternalVersionHistoryImpl)
+                    getVersionHistory(NodeId.valueOf(histUUID)), node);
-        return (AbstractVersion) eventSource.getNodeByUUID(version.getId());
+        return (AbstractVersion) eventSource.getNodeById(version.getId());
-            return (Version) eventSource.getNodeByUUID(v.getId());
+            return (Version) eventSource.getNodeByUUID(v.getId().getUUID());
-            InternalVersionItem item = getItem(refs.getTargetId().getUUID());
+            InternalVersionItem item = getItem(refs.getTargetId());
-            if (!hasItem(id.getParentUUID())) {
+            if (!hasItem(id.getParentId())) {
-        return (NodeId) historyRoot.getState().getId();
+        return historyRoot.getState().getNodeId();
-                                       String rootNodeUUID,
+                                       NodeId rootNodeId,
-            super(persistMgr, rootNodeUUID, ntReg, false);
+            super(persistMgr, rootNodeId, ntReg, false);

MOV26 MOV26 MOV26 MOV43 UPD42 MOV43 UPD42 MOV43 MOV43 UPD42 MOV32 MOV43 UPD42 UPD42 UPD42 MOV43 INS36 UPD42 INS42 MOV43 UPD42 INS11 INS32 MOV32 MOV32 INS42 UPD42 MOV43 INS43 INS42 MOV43 INS42 INS42 MOV32 MOV42 UPD42 UPD42 UPD42 INS42 UPD42 INS42 UPD42 UPD42 UPD42 INS42 MOV43 MOV43 INS32 UPD42 UPD42 UPD42 INS42 INS42 MOV42 UPD42 UPD42 UPD42 UPD42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL14 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL42 DEL43