JCR-249, JCR-253

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@331281 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.chain.Catalog;
-import org.apache.commons.chain.config.ConfigParser;
-import org.apache.commons.chain.impl.CatalogFactoryBase;
-import org.apache.jackrabbit.server.CredentialsProvider;
-import org.apache.jackrabbit.webdav.DavConstants;
-import org.apache.jackrabbit.webdav.DavException;
-import org.apache.jackrabbit.webdav.DavLocatorFactory;
-import org.apache.jackrabbit.webdav.DavMethods;
-import org.apache.jackrabbit.webdav.DavResource;
-import org.apache.jackrabbit.webdav.DavResourceFactory;
-import org.apache.jackrabbit.webdav.DavSessionProvider;
-import org.apache.jackrabbit.webdav.WebdavRequest;
-import org.apache.jackrabbit.webdav.WebdavResponse;
+import org.apache.jackrabbit.server.BasicCredentialsProvider;
+import org.apache.jackrabbit.webdav.jcr.DavLocatorFactoryImpl;
-import org.apache.jackrabbit.webdav.simple.LocatorFactoryImpl;
+import org.apache.jackrabbit.webdav.*;
-import javax.jcr.Credentials;
-import javax.jcr.LoginException;
-import javax.servlet.http.HttpServletRequest;
-import java.net.URL;
+    /** the 'missing-auth-mapping' init parameter */
+    public final static String INIT_PARAM_MISSING_AUTH_MAPPING = "missing-auth-mapping";
+
-     * the chain catalog for i/o operations
-     */
-    private Catalog chainCatalog;
-
-    /**
-     * in the underlaying repository.
+     * in the underlying repository.
-        try {
-            String chain = getInitParameter(INIT_PARAM_CHAIN_CATALOG);
-            URL chainUrl = getServletContext().getResource(chain);
-            ConfigParser parser = new ConfigParser();
-            parser.parse(chainUrl);
-            chainCatalog = CatalogFactoryBase.getInstance().getCatalog();
-        } catch (Exception e) {
-            throw new ServletException(e);
-        }
-        log.info(INIT_PARAM_CHAIN_CATALOG + " = '" + chainCatalog + "'");
-
-     * @throws DavException
+     * @throws org.apache.jackrabbit.webdav.DavException
-            locatorFactory = new LocatorFactoryImpl(resourcePathPrefix);
+            locatorFactory = new DavLocatorFactoryImpl(resourcePathPrefix);
-     * @see RepositoryAccessServlet#getCredentialsFromHeader(ServletContext, String)
-            CredentialsProvider cp = new CredentialsProvider() {
-                public Credentials getCredentials(HttpServletRequest request) throws LoginException, ServletException {
-                    return RepositoryAccessServlet.getCredentialsFromHeader(getServletContext(), request.getHeader(DavConstants.HEADER_AUTHORIZATION));
-                }
-            };
-            sessionProvider = new SessionProviderImpl(cp);
+            sessionProvider = new SessionProviderImpl(
+                new BasicCredentialsProvider(
+                    getInitParameter(INIT_PARAM_MISSING_AUTH_MAPPING))
+            );

MOV26 MOV26 MOV23 UPD40 UPD40 UPD40 UPD83 INS83 INS83 MOV43 UPD42 INS45 UPD66 UPD66 INS40 INS21 INS7 INS42 INS14 UPD43 MOV43 INS14 UPD42 UPD43 MOV43 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL32 DEL41 DEL8 DEL31 DEL1 DEL14 DEL59 DEL60 DEL42 DEL42 DEL14 DEL7 DEL21