JCR-3101: when checking version histories also check each individual version

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1180922 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.jackrabbit.spi.commons.name.NameConstants.JCR_ROOTVERSION;
+import org.apache.jackrabbit.core.version.InconsistentVersioningState;
+import org.apache.jackrabbit.core.version.InternalVersion;
+import org.apache.jackrabbit.core.version.InternalVersionHistory;
-            log.debug("Checking version history of node {}", node.getNodeId());
+            String message = null;
+            NodeId nid = node.getNodeId();
+
-                versionManager.getVersionHistoryOfNode(node.getNodeId());
+                log.debug("Checking version history of node {}", nid);
+
+                message = "Removing references to a missing version history of node " + nid;
+                InternalVersionHistory vh = versionManager.getVersionHistoryOfNode(nid);
+
+                // additional checks, see JCR-3101
+                String intro = "Removing references to an inconsistent version history of node "
+                    + nid;
+
+                message = intro + " (getting the version names failed)";
+                Name[] versionNames = vh.getVersionNames();
+                boolean seenRoot = false;
+
+                for (Name versionName : versionNames) {
+                    seenRoot |= JCR_ROOTVERSION.equals(versionName);
+
+                    log.debug("Checking version history of node {}, version {}", nid, versionName);
+
+                    message = intro + " (getting version " + versionName + "  failed)";
+                    InternalVersion v = vh.getVersion(versionName);
+
+                    message = intro + "(frozen node of root version " + v.getId() + " missing)";
+                    if (null == v.getFrozenNode()) {
+                        throw new InconsistentVersioningState("frozen node of "
+                                + v.getId() + " is missing.");
+                    }
+                }
+
+                if (!seenRoot) {
+                    message = intro + " (root version is missing)";
+                    throw new InconsistentVersioningState("root version of " + nid +" is missing.");
+                }
-                log.info("Removing references to a missing version history", e);
+                log.info(message, e);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS8 INS60 INS60 INS54 INS43 INS59 INS43 INS59 INS8 MOV12 INS42 INS42 INS33 INS42 INS42 MOV32 INS21 INS21 INS60 INS60 INS21 INS60 INS60 INS70 INS25 INS32 INS7 INS43 INS59 INS43 INS59 INS7 INS5 INS59 INS39 INS59 INS44 INS42 INS8 INS38 INS8 MOV42 MOV42 MOV45 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS27 INS43 INS85 INS42 INS32 INS42 INS9 INS43 INS42 INS21 INS21 INS21 INS60 MOV21 INS25 INS42 INS21 INS53 INS45 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS7 INS32 INS7 INS43 INS59 INS7 INS27 INS8 INS7 INS14 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS27 INS33 INS32 INS53 INS42 INS27 INS43 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS14 INS42 INS45 INS42 INS45 INS42 INS45 UPD42 MOV42 UPD42 MOV42 INS43 INS27 INS42 INS45 INS32 INS45 INS42 INS42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL8 DEL54 DEL8