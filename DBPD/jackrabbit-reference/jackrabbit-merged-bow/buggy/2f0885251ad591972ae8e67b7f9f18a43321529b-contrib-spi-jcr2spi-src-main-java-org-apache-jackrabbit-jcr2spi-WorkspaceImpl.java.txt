Refactoring

- separate hierarchy from ItemStates
- remove ItemStateManager
- move all hierarchy related classes to a separate package ('hierarchy')
- allow loading of deep Item without loading ancestors
- consequently item definition is only built upon usage, since parent is needed.
- minor fixes with adding/removing mixin-nodetypes

Consequences for SPI interfaces:

- SPI impl must be able to deal with both proper itemID and path, since jcr2spi
  might not be aware of a uniqueID defined with a parent node.

- ItemInfo.getPath added, in order to be able to built the missing hierarchy
  entries if a deep Item identified by uniqueID (plus ev. path) is loaded

- LockInfo.getNodeId added, in order to be able to determine the lock-holding node.




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@506927 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.hierarchy.HierarchyManager;
-import org.apache.jackrabbit.jcr2spi.state.ItemStateManager;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateFactory;
-    /**
-     * The hierarchy manager that reflects workspace state only
-     * (i.e. that is isolated from transient changes made through
-     * the session).
-     */
-    private HierarchyManager hierManager;
-    private ItemStateValidator validator;
-
-                session.getItemManager(), session.getItemStateManager(), wspManager);
+                session.getItemManager(), session.getHierarchyManager(), wspManager);
-        if (hierManager == null) {
-            hierManager = new HierarchyManagerImpl(getItemStateManager(), getNamespaceResolver());
-        }
-        return hierManager;
-    }
-
-    /**
-     * @see ManagerProvider#getItemStateManager()
-     */
-    public ItemStateManager getItemStateManager() {
-        return wspManager;
+        return wspManager.getHierarchyManager();
+    
+    ItemStateFactory getItemStateFactory() {
+        return wspManager.getItemStateFactory();
+    }
-     * Validator for the <code>Workspace</code>. It contrast from {@link SessionImpl#getValidator()}
-     * in terms of <code>HierarchyManager</code> and <code>ItemManager</code>.
+     * Returns the validator of the session
+     *
-        if (validator == null) {
-            validator = new ItemStateValidator(getNodeTypeRegistry(), this);
-        }
-        return validator;
+        return session.getValidator();
-        LockManager lMgr = new LockManagerImpl(wspManager, itemManager);
+        LockManager lMgr = new LockManagerImpl(wspManager, itemManager, session.getCacheBehaviour());

MOV26 INS26 MOV31 INS40 UPD40 INS8 UPD43 UPD42 INS41 UPD42 INS41 INS32 INS32 UPD66 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL32 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL42 DEL42 DEL42 DEL68 DEL65 DEL66 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL42 DEL32 DEL52 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41