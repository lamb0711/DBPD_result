- adjusting version labels to spec 0.16.2

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@153381 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.util.uuid.UUID;
-import org.apache.jackrabbit.core.state.NodeState;
-import java.util.Iterator;
- * This Class implements a virtual node state that represents a version.
- * since some properties like 'jcr:versionLabels', 'jcr:predecessors' etc. can
- * change over time, we treat them specially.
+ * This Class implements a virtual node state that represents a nt:versionLabels.
+ * node state.
-        try {
-            return vh.hasVersion(propName) && vh.getVersion(propName).getLabels().length>0;
-        } catch (VersionException e) {
-            return false;
-        }
+        return vh.getVersionByLabel(propName) != null;
-         Iterator iter = vh.getVersions();
-        while (iter.hasNext()) {
-            InternalVersion v = (InternalVersion) iter.next();
-            if (v.getLabels().length>0) {
-                list.add(createPropertyEntry(v.getName()));
-            }
+        QName[] labels = vh.getVersionLabels();
+        for (int i=0; i<labels.length; i++) {
+            list.add(createPropertyEntry(labels[i]));
-        } else if (vh.hasVersion(name)) {
-            try {
-                String[] labels = vh.getVersion(name).getLabels();
-                if (labels.length>0) {
+        } else {
+            InternalVersion v = vh.getVersionByLabel(name);
+            if (v != null) {
+                try {
-                        state = stateMgr.createPropertyState(this, name, PropertyType.STRING, true);
+                        state = stateMgr.createPropertyState(this, name, PropertyType.REFERENCE, false);
-                    state.setValues(InternalValue.create(labels));
+                    state.setValues(new InternalValue[]{InternalValue.create(UUID.fromString(v.getId()))});
+                } catch (VersionException e) {
+                    throw new NoSuchItemStateException(name.toString(), e);
+                } catch (RepositoryException e) {
+                    throw new NoSuchItemStateException(name.toString(), e);
-            } catch (VersionException e) {
-                throw new NoSuchItemStateException(name.toString(), e);
-            } catch (RepositoryException e) {
-                throw new NoSuchItemStateException(name.toString(), e);

MOV26 UPD40 INS8 MOV8 UPD66 UPD66 MOV25 MOV41 INS24 INS25 MOV53 INS27 INS5 INS58 INS27 INS37 INS8 MOV48 MOV8 MOV8 MOV14 INS32 INS33 INS43 INS85 UPD42 INS39 INS59 INS42 INS40 INS42 MOV21 MOV43 MOV32 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 INS42 INS34 MOV43 UPD27 INS8 UPD42 INS32 INS42 INS33 INS54 INS2 MOV42 UPD42 MOV42 MOV42 MOV8 MOV12 MOV12 INS42 INS42 INS53 INS3 INS14 INS5 INS4 INS43 INS32 MOV42 INS43 INS85 INS32 INS42 INS42 INS42 UPD40 UPD9 INS42 MOV42 MOV42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS42 DEL40 DEL26 DEL66 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL22 DEL34 DEL27 DEL27 DEL8 DEL42 DEL43 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL54 DEL8 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL22 DEL34 DEL27 DEL8 DEL25 DEL8 DEL61 DEL42 DEL43 DEL85 DEL5 DEL32 DEL42 DEL32 DEL40 DEL34 DEL32 DEL54 DEL42 DEL42 DEL42 DEL32 DEL25 DEL25 DEL8