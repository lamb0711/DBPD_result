JCR-3184: consistency check -- add the ability to adopt orphaned nodes to a caller-specified "lost+found" node

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1221789 13f79535-47bb-0310-9956-ffa450edef68

-            ConsistencyReport r = TestHelper.checkConsistency(s, false);
+            ConsistencyReport r = TestHelper.checkConsistency(s, false, null);
+    public void testOrphan() throws Exception {
+
+        // new repository
+        TransientRepository rep = new TransientRepository(new File(TEST_DIR));
+        Session s = openSession(rep, false);
+
+        try {
+            Node root = s.getRootNode();
+
+            Node parent = root.addNode("parent");
+            Node test = parent.addNode("test");
+            test.addMixin("mix:referenceable");
+
+            String lost = test.getIdentifier();
+            
+            Node lnf = root.addNode("lost+found");
+            lnf.addMixin("mix:referenceable");
+            String lnfid = lnf.getIdentifier();
+            
+            s.save();
+
+            Node brokenNode = parent;
+            UUID destroy = UUID.fromString(brokenNode.getIdentifier());
+            s.logout();
+            
+            destroyBundle(destroy, "workspaces/default");
+
+            s = openSession(rep, false);
+            ConsistencyReport report = TestHelper.checkConsistency(s, false, null);
+            assertTrue("Report should have reported broken nodes", !report.getItems().isEmpty());
+
+            // now retry with lost+found functionality
+            ConsistencyReport report2 = TestHelper.checkConsistency(s, true, lnfid);
+            assertTrue("Report should have reported broken nodes", !report2.getItems().isEmpty());
+            
+            s.logout();
+            
+            s = openSession(rep, false);
+            Node q = s.getNodeByIdentifier(lost);
+            
+            // check the node was moved
+            assertEquals(lnfid, q.getParent().getIdentifier());
+        } finally {
+            s.logout();
+        }
+    }
+
-            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false);
+            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false, null);
-            report = TestHelper.checkVersionStoreConsistency(s, true);
+            report = TestHelper.checkVersionStoreConsistency(s, true, null);
-            report = TestHelper.checkVersionStoreConsistency(s, false);
+            report = TestHelper.checkVersionStoreConsistency(s, false, null);
-            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false);
+            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false, null);
-            report = TestHelper.checkVersionStoreConsistency(s, true);
+            report = TestHelper.checkVersionStoreConsistency(s, true, null);
-            report = TestHelper.checkVersionStoreConsistency(s, false);
+            report = TestHelper.checkVersionStoreConsistency(s, false, null);
-            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false);
+            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, false, null);
-            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, true);
+            ConsistencyReport report = TestHelper.checkVersionStoreConsistency(s, true, null);

INS31 INS83 INS39 INS42 MOV43 INS8 INS43 MOV60 MOV60 INS54 INS42 INS60 INS60 MOV60 MOV60 INS8 INS8 INS43 INS59 INS43 INS59 MOV8 MOV8 MOV60 INS60 INS60 INS21 INS60 INS60 INS21 INS60 INS21 INS60 INS60 INS21 INS21 INS21 INS60 INS21 INS60 INS21 INS21 INS21 INS60 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS60 MOV60 MOV21 MOV21 MOV60 MOV21 MOV60 MOV60 MOV60 MOV60 MOV21 MOV21 MOV60 MOV21 MOV60 MOV60 MOV60 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS7 MOV43 INS59 INS32 INS43 INS59 INS32 INS32 INS7 INS43 INS59 INS32 INS32 INS43 INS43 INS14 INS42 INS42 INS9 INS43 INS59 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS32 INS42 INS45 INS38 INS42 INS42 INS32 INS42 INS45 INS38 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS33 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS9 INS33 INS32 INS42 INS42 INS42 INS9 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS32 INS42 INS33 INS33 INS33 INS42 INS42 INS42 INS33 INS33 INS33 INS33 INS33 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42