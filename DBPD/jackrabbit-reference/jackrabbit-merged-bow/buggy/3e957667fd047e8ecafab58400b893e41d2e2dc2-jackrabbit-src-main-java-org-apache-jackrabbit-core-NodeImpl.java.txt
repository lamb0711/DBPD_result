Make versioning transactional
- Added specialized XAVersion and XAVersionHistory objects that refresh their internal state when needed
- Defined new observation interface in order to have VersionManagerImpl use standard event dispatching
  instead of writing its own
- Added test cases verifying isolation of versioning operations in transactions


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368026 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.version.InternalVersion;
-import org.apache.jackrabbit.core.version.VersionHistoryImpl;
-import org.apache.jackrabbit.core.version.VersionImpl;
+import org.apache.jackrabbit.core.version.AbstractVersion;
-                InternalFrozenNode fn = ((VersionImpl) version).getFrozenNode();
+                InternalFrozenNode fn = ((AbstractVersion) version).getFrozenNode();
-                node = addNode(relPath, ((VersionImpl) version).getFrozenNode());
+                node = addNode(relPath, ((AbstractVersion) version).getFrozenNode());
-        InternalVersion v = ((VersionImpl) getBaseVersion()).getInternalVersion();
-        InternalVersion vp = ((VersionImpl) srcNode.getBaseVersion()).getInternalVersion();
+        AbstractVersion v = (AbstractVersion) getBaseVersion();
+        AbstractVersion vp = (AbstractVersion) srcNode.getBaseVersion();
-        } else if (v.equals(vp) || v.isMoreRecent(vp)) {
+        } else if (v.isSame(vp) || v.isMoreRecent(vp)) {
-            internalRestore(((VersionImpl) version).getInternalVersion(), vsel, removeExisting);
+            internalRestore((AbstractVersion) version, vsel, removeExisting);
-    protected InternalVersion[] internalRestore(InternalVersion version, VersionSelector vsel,
-                                                boolean removeExisting)
+    protected Version[] internalRestore(AbstractVersion version, VersionSelector vsel,
+                                        boolean removeExisting)
-        internalSetProperty(QName.JCR_BASEVERSION, InternalValue.create(new UUID(version.getId())));
+        UUID uuid = new UUID(((NodeId) version.getId()).getUUID());
+        internalSetProperty(QName.JCR_BASEVERSION, InternalValue.create(uuid));
-        return (InternalVersion[]) restored.toArray(new InternalVersion[restored.size()]);
+        return (Version[]) restored.toArray(new Version[restored.size()]);
-                VersionHistoryImpl history = (VersionHistoryImpl) session.getNodeByUUID(f.getVersionHistoryId());
+                VersionHistory history = (VersionHistory) session.getNodeByUUID(f.getVersionHistoryId());
-                    InternalVersion v = ((VersionImpl) vsel.select(history)).getInternalVersion();
+                    AbstractVersion v = (AbstractVersion) vsel.select(history);

MOV26 UPD40 UPD5 UPD43 UPD43 INS60 UPD43 UPD43 UPD42 UPD42 INS43 INS59 UPD42 MOV11 UPD42 MOV11 INS42 INS42 MOV14 UPD5 UPD43 UPD43 INS32 INS42 UPD43 UPD42 UPD42 UPD42 INS11 INS36 INS42 UPD42 UPD5 UPD43 MOV43 MOV42 INS11 UPD43 UPD42 INS43 MOV32 UPD42 UPD43 INS42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 MOV11 UPD42 UPD43 UPD43 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL36 DEL42 DEL32 DEL36 DEL42 DEL32 DEL11 DEL36 DEL42 DEL32 DEL36 DEL42 DEL32