work in progress

- NodeInfo does not load information about child-node-entries
  -> add separate SPI call
  -> add initial draft ChildInfo interface
  -> ChildNodeEntries are not built upon creation of the NodeState
  -> ItemStateFactory: add method to retrieve ChildNodeEntries

- respect CacheBehaviour while persisting transient modifications

- LockInfo.getNodeId() -> not used so far -> remove

- SessionItemStateManager: getHierarchyManager() only used by SessionImpl -> moved

- Improve TODO comments
- Javadoc


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@482657 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.ChildInfo;
-import org.apache.jackrabbit.jcr2spi.state.entry.ChildNodeEntry;
-import org.apache.jackrabbit.name.QName;
+import java.util.Collection;
-            // child node entries
-            Set childNodeEntries = new HashSet();
-            for (IdIterator it = info.getNodeIds(); it.hasNext(); ) {
-                NodeInfo childInfo = service.getNodeInfo(sessionInfo, (NodeId) it.nextId());
-                String childUUID = null;
-                if (childInfo.getId().getPath() == null) {
-                    childUUID = childInfo.getId().getUUID();
-                }
-                childNodeEntries.add(new CNE(childInfo.getQName(), childInfo.getIndex(), childUUID));
-            }
-
-            state.init(info.getMixins(), childNodeEntries, propNames, nodeRefs);
+            state.init(info.getMixins(), propNames, nodeRefs);
-        } catch (PathNotFoundException e) {
-            throw new NoSuchItemStateException(e.getMessage(), e);
+    public ChildNodeEntries getChildNodeEntries(NodeState nodeState)
+        throws NoSuchItemStateException, ItemStateException {
+        try {
+            ChildNodeEntries entries = new ChildNodeEntries(nodeState);
+            Collection childInfos = service.getChildNodeInfos(sessionInfo, nodeState.getNodeId());
+            for (Iterator it = childInfos.iterator(); it.hasNext();) {
+                ChildInfo ci = (ChildInfo) it.next();
+                entries.add(ci.getName(), ci.getUUID(), ci.getIndex());
+            }
+            return entries;
+        } catch (PathNotFoundException e) {
+            throw new NoSuchItemStateException(e.getMessage(), e);
+        } catch (RepositoryException e) {
+            throw new ItemStateException(e.getMessage(), e);
+        }
+    }
+
-    //-----------------------------------------------------< ChildNodeEntry >---
-    private class CNE implements ChildNodeEntry {
-
-        private final QName name;
-        private final int index;
-        private final String uuid;
-
-        private CNE(QName name, int index, String uuid) {
-            this.name = name;
-            this.index = index;
-            this.uuid = uuid;
-        }
-
-        public NodeId getId() {
-            throw new UnsupportedOperationException();
-        }
-
-        public boolean denotesNode() {
-            return true;
-        }
-
-        public QName getName() {
-            return name;
-        }
-
-        public String getUUID() {
-            return uuid;
-        }
-
-        public int getIndex() {
-            return index;
-        }
-
-        public NodeState getNodeState() throws NoSuchItemStateException, ItemStateException {
-            throw new UnsupportedOperationException();
-        }
-
-        public boolean isAvailable() {
-            throw new UnsupportedOperationException();
-        }
-
-        public ItemState getItemState() throws NoSuchItemStateException, ItemStateException {
-            throw new UnsupportedOperationException();
-        }
-    }
-
+    //-----------------------------------------------------< NodeReferences >---
-            // TODO: modify in order to make usage of the references returned
+            // TODO: improve. make usage of the references returned

MOV26 MOV26 UPD40 UPD40 INS31 INS83 INS43 INS42 INS44 MOV43 MOV43 INS8 UPD42 MOV42 MOV43 INS42 INS54 INS8 MOV12 INS12 INS60 INS60 INS24 INS41 INS44 INS8 INS43 INS59 INS43 INS59 INS58 MOV32 INS8 INS42 INS43 INS42 MOV53 UPD42 MOV42 UPD42 MOV42 INS14 UPD42 MOV42 INS42 INS32 INS43 INS59 INS60 INS21 UPD42 MOV42 INS43 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 INS43 INS59 INS32 UPD43 INS32 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS11 INS42 INS42 INS32 INS32 INS32 UPD42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL14 DEL32 DEL21 DEL8 DEL24 DEL42 DEL83 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL83 DEL43 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL43 DEL42 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31 DEL83 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL43 DEL8 DEL31 DEL55