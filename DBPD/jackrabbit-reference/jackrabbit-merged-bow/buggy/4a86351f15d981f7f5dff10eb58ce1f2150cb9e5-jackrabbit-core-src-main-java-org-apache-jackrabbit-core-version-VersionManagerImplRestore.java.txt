JCR-2140: Baselines & Configurations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@797094 13f79535-47bb-0310-9956-ffa450edef68

-            throw new VersionException("Unable to restore version. Not same version history.");
+            String msg = "Unable to restore version. Not same version history.";
+            log.error(msg);
+            throw new VersionException(msg);
-            throw new VersionException("No version for label " + versionLabel + " found.");
+            String msg = "No version for label " + versionLabel + " found.";
+            log.error(msg);
+            throw new VersionException(msg);
-                throw new ItemExistsException("Unable to restore version. Versionable node already exists.");
+                String msg = "Unable to restore version. Versionable node already exists.";
+                log.error(msg);
+                throw new ItemExistsException(msg);
-                if (numRestored == 0) {
-                    throw new VersionException("Unable to restore. At least one version needs"
-                            + " existing versionable node in workspace.");
-                } else {
-                    throw new VersionException("Unable to restore. All versions with non"
-                            + " existing versionable nodes need parent.");
-                }
+                String msg = numRestored == 0
+                        ? "Unable to restore. At least one version needs existing versionable node in workspace."
+                        : "Unable to restore. All versions with non existing versionable nodes need parent.";
+                log.error(msg);
+                throw new VersionException(msg);
-            throw new VersionException("Restore of root version not allowed.");
+            String msg = "Restore of root version not allowed.";
+            log.error(msg);
+            throw new VersionException(msg);
-            vMgr.checkin(session, state, null);
+            vMgr.checkin(session, state);
+        
+        // check if a baseline is restored
+        if (version instanceof InternalBaseline) {
+            // just restore all base versions
+            InternalBaseline baseline = (InternalBaseline) version;
+            internalRestore(baseline.getBaseVersions(), true);
+
+            // ensure that the restored root node has a jcr:configuration property
+            // since it might not have been recorded by the initial checkin of the
+            // configuration
+            NodeId configId = baseline.getConfigurationId();
+            NodeId rootId = baseline.getConfigurationRootId();
+            NodeStateEx rootNode = state.getNode(rootId);
+            rootNode.setPropertyValue(NameConstants.JCR_CONFIGURATION, InternalValue.create(configId));
+            rootNode.store();
+        }
+
-                throw new ItemExistsException("Unable to restore version of " + safeGetJCRPath(state) + ". UUID changed.");
+                String msg = "Unable to restore version of " + safeGetJCRPath(state) + ". UUID changed.";
+                log.error(msg);
+                throw new ItemExistsException(msg);
-            throw new UnsupportedRepositoryOperationException("Unable to restore version of " + safeGetJCRPath(state) + ". PrimaryType change not supported yet.");
+            String msg = "Unable to restore version of " + safeGetJCRPath(state) + ". PrimaryType change not supported yet.";
+            log.error(msg);
+            throw new UnsupportedRepositoryOperationException(msg);
-                            throw new ItemExistsException(
-                                    "Unable to restore node, item already"
-                                            + " exists outside of restored tree: "
-                                            + existing);
+                            String msg = "Unable to restore node, item already exists " +
+                                    "outside of restored tree: " + safeGetJCRPath(existing);
+                            log.error(msg);
+                            throw new ItemExistsException(msg);
-                        throw new ItemExistsException(
-                                "Unable to restore node, item already exists"
-                                        + " outside of restored tree: " + existing);
+                        String msg = "Unable to restore node, item already exists " +
+                                "outside of restored tree: " + safeGetJCRPath(existing);
+                        log.error(msg);
+                        throw new ItemExistsException(msg);

INS25 INS62 INS8 INS60 INS21 INS60 INS21 MOV25 INS60 INS21 MOV53 INS42 INS43 INS60 INS21 INS60 INS60 INS60 INS21 INS21 INS60 INS21 INS43 INS59 INS32 INS43 INS59 INS32 MOV27 INS43 INS59 INS32 INS42 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 MOV27 INS42 INS42 INS42 INS42 INS60 INS21 INS60 INS21 UPD42 MOV42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS32 INS9 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS60 INS21 INS42 INS42 MOV27 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV27 INS42 INS42 INS42 INS42 MOV27 INS45 INS45 INS60 INS21 INS53 INS60 INS21 INS53 INS43 INS59 INS32 INS14 INS43 INS59 INS32 INS14 UPD42 MOV42 INS42 INS27 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 INS27 INS42 INS42 INS42 MOV43 INS42 UPD45 MOV45 UPD45 MOV45 INS32 UPD45 MOV45 UPD45 MOV45 INS32 INS42 INS42 INS42 INS42 INS42 DEL45 DEL45 DEL45 DEL45 DEL27 DEL8 DEL8 DEL25 DEL45 DEL45 DEL27 DEL45 DEL14 DEL53 DEL33 DEL42 DEL27 DEL14 DEL53 DEL42 DEL27 DEL14 DEL53