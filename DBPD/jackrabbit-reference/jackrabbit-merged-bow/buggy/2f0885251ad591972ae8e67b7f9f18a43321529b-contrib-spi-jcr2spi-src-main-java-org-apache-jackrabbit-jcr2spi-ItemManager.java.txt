Refactoring

- separate hierarchy from ItemStates
- remove ItemStateManager
- move all hierarchy related classes to a separate package ('hierarchy')
- allow loading of deep Item without loading ancestors
- consequently item definition is only built upon usage, since parent is needed.
- minor fixes with adding/removing mixin-nodetypes

Consequences for SPI interfaces:

- SPI impl must be able to deal with both proper itemID and path, since jcr2spi
  might not be aware of a uniqueID defined with a parent node.

- ItemInfo.getPath added, in order to be able to built the missing hierarchy
  entries if a deep Item identified by uniqueID (plus ev. path) is loaded

- LockInfo.getNodeId added, in order to be able to determine the lock-holding node.




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@506927 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.state.ItemState;
-import org.apache.jackrabbit.jcr2spi.state.NodeState;
+import org.apache.jackrabbit.jcr2spi.hierarchy.HierarchyEntry;
+import org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntry;
-     * Checks if the item with the given id exists.
+     * Checks if the item for given HierarchyEntry exists.
-     * @param itemState state of the item to be checked
+     * @param hierarchyEntry
-    public boolean itemExists(ItemState itemState);
-
+    public boolean itemExists(HierarchyEntry hierarchyEntry);
-     * @param itemState
+     * @param hierarchyEntry
-    public Item getItem(ItemState itemState)
+    public Item getItem(HierarchyEntry hierarchyEntry)
-     * @param parentState
+     * @param parentEntry
-    public boolean hasChildNodes(NodeState parentState)
+    public boolean hasChildNodes(NodeEntry parentEntry)
-     * @param parentState
+     * @param parentEntry
-    public NodeIterator getChildNodes(NodeState parentState)
+    public NodeIterator getChildNodes(NodeEntry parentEntry)
-     * @param parentState
+     * @param parentEntry
-    public boolean hasChildProperties(NodeState parentState)
+    public boolean hasChildProperties(NodeEntry parentEntry)
-     * @param parentState
+     * @param parentEntry
-    public PropertyIterator getChildProperties(NodeState parentState)
+    public PropertyIterator getChildProperties(NodeEntry parentEntry)

UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL66