- Redesigned observation to also include workspace modifications
- Extended observation tests and moved them into the api.observation package

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155583 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.log4j.Logger;
+import javax.jcr.observation.Event;
+    /**
+     * Logger instance for this class.
+     */
+    private static final Logger log = Logger.getLogger(EventFilter.class);
+
-        /*
-        Node parent = null;
-        try {
-            parent = (Node) itemMgr.getItem(new NodeId(eventState.getParentUUID()));
-        } catch (AccessDeniedException e) {
-            log.debug("Access denied for " + eventState.getParentPath());
-            return true;
-        }
-        */
-
-                match |= eventState.getNodeType().isDerivedFrom(nodeTypes[i].getQName());
+                match |= eventState.getNodeType().equals(nodeTypes[i]) || eventState.getNodeType().isDerivedFrom(nodeTypes[i].getQName());
-            //parentPath = Path.create(parent.getPath(), session.getNamespaceResolver(), false);
-            boolean match = eventState.getParentPath().equals(path);
+            // the relevant path for the path filter depends on the event type
+            // for node events, the relevant path is the one returned by
+            // Event.getPath().
+            // for property events, the relevant path is the path of the
+            // node where the property belongs to.
+            Path eventPath = null;
+            if (type == Event.NODE_ADDED || type == Event.NODE_REMOVED) {
+                Path.PathElement nameElem = eventState.getChildRelPath();
+                if (nameElem.getIndex() == 0) {
+                    eventPath = Path.create(eventState.getParentPath(), nameElem.getName(), false);
+                } else {
+                    eventPath = Path.create(eventState.getParentPath(), nameElem.getName(), nameElem.getIndex(), false);
+                }
+            } else {
+                eventPath = eventState.getParentPath();
+            }
+            boolean match = eventPath.equals(path);
-                match = eventState.getParentPath().isDescendantOf(path);
+                match = eventPath.isDescendantOf(path);

INS26 INS26 INS40 INS40 INS23 INS29 INS83 INS83 INS83 INS43 INS59 INS65 INS42 INS42 INS32 INS66 INS42 INS42 INS57 INS43 INS60 INS25 INS42 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS33 INS27 INS27 INS60 INS25 INS21 INS42 INS40 INS42 INS40 INS43 INS59 INS27 INS8 INS8 INS7 INS42 INS27 INS40 INS42 INS32 INS32 INS34 INS21 INS21 INS42 MOV32 INS32 MOV32 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS32 INS42 INS2 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS9 INS42 INS42 MOV32 INS32 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42