[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-     * @param rootNodeUUID
+     * @param rootNodeId
-    public SessionItemStateManager(String rootNodeUUID,
+    public SessionItemStateManager(NodeId rootNodeId,
-        hierMgr = new CachingHierarchyManager(rootNodeUUID, this, nsResolver);
+        hierMgr = new CachingHierarchyManager(rootNodeId, this, nsResolver);
-    public NodeState createNew(String uuid, QName nodeTypeName,
-                               String parentUUID)
+    public NodeState createNew(NodeId id, QName nodeTypeName,
+                               NodeId parentId)
-        return persistentStateMgr.createNew(uuid, nodeTypeName, parentUUID);
+        return persistentStateMgr.createNew(id, nodeTypeName, parentId);
-     * Customized variant of {@link #createNew(String, QName, String)} that
+     * Customized variant of {@link #createNew(NodeId, QName, NodeId)} that
-        NodeState persistentState = createNew(transientState.getUUID(),
+        NodeState persistentState = createNew(transientState.getNodeId(),
-                transientState.getParentUUID());
+                transientState.getParentId());
-    public PropertyState createNew(QName propName, String parentUUID)
+    public PropertyState createNew(QName propName, NodeId parentId)
-        return persistentStateMgr.createNew(propName, parentUUID);
+        return persistentStateMgr.createNew(propName, parentId);
-     * Customized variant of {@link #createNew(String, QName, String)} that
+     * Customized variant of {@link #createNew(QName, NodeId)} that
-                transientState.getParentUUID());
+                transientState.getParentId());
-        // dispose our (i.e. 'local') state manager 
+        // dispose our (i.e. 'local') state manager
-     * @return
+     * @return <code>true</code> if this manager has any transient state;
+     *         <code>false</code> otherwise.
-                new ZombieHierarchyManager(hierMgr.getRootNodeId().getUUID(),
+                new ZombieHierarchyManager(hierMgr.getRootNodeId(),
-     * @param uuid
+     * @param id
-     * @param parentUUID
+     * @param parentId
-    public NodeState createTransientNodeState(String uuid, QName nodeTypeName, String parentUUID, int initialStatus)
+    public NodeState createTransientNodeState(NodeId id, QName nodeTypeName, NodeId parentId, int initialStatus)
-        return transientStateMgr.createNodeState(uuid, nodeTypeName, parentUUID, initialStatus);
+        return transientStateMgr.createNodeState(id, nodeTypeName, parentId, initialStatus);
-     * @param parentUUID
+     * @param parentId
-    public PropertyState createTransientPropertyState(String parentUUID, QName propName, int initialStatus)
+    public PropertyState createTransientPropertyState(NodeId parentId, QName propName, int initialStatus)
-        return transientStateMgr.createPropertyState(parentUUID, propName, initialStatus);
+        return transientStateMgr.createPropertyState(parentId, propName, initialStatus);

UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS66 INS66 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV69 UPD42 UPD42 UPD42 UPD42 MOV32 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 DEL42 DEL43 DEL69 DEL42 DEL32