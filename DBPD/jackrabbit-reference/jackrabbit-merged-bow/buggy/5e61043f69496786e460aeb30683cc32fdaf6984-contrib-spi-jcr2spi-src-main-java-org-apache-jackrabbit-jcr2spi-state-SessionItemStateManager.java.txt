work in progress

- SPI: replace String/Stream for values by QValue interface
- SPI: add factory for QValue
  > adjust commons and add implementation
  > adjust usages of former QValue object with jcr2spi, spi2dav
- RepositoryService.getChildInfos returns Iterator instead of Collection
- spi2dav: add implementation for new query interfaces

- TODO: 
  improve conversion of jcr-value to q-value and vice-versa




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497885 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.value.QValue;
+import org.apache.jackrabbit.spi.QValue;
+import org.apache.jackrabbit.spi.QValueFactory;
-import java.io.IOException;
-    /**
-     * Hierarchy manager
-     */
-    //private final HierarchyManager hierMgr;
-    //private final NamespaceResolver nsResolver;
+    private final QValueFactory qValueFactory;
+
-                                   ItemStateValidator validator) {
+                                   ItemStateValidator validator,
+                                   QValueFactory qValueFactory) {
+        this.qValueFactory = qValueFactory;
-                QValue adjusted = refTracker.getMappedReference(val);
+                QValue adjusted = refTracker.getMappedReference(val, qValueFactory);
-                    setPropertyStateValue(pState, QValue.create(mixinNames), PropertyType.NAME, options);
+                    setPropertyStateValue(pState, getQValues(mixinNames, qValueFactory), PropertyType.NAME, options);
-                QValue[] mixinValue = QValue.create(mixinNames);
+                QValue[] mixinValue = getQValues(mixinNames, qValueFactory);
-        String[] qDefaultValues = def.getDefaultValues();
+        QValue[] qDefaultValues = def.getDefaultValues();
-            if (def.getRequiredType() == PropertyType.BINARY) {
-                try {
-                    genValues = QValue.create(def.getDefaultValuesAsStream(), def.getRequiredType());
-                } catch (IOException e) {
-                    log.error("Internal error while build QValue from property definition: ", e.getMessage());
-                    return null;
-                }
-            } else {
-               genValues = QValue.create(qDefaultValues, def.getRequiredType());
-            }
+            genValues = qDefaultValues;
-                genValues = new QValue[]{QValue.create(uniqueID)};
+                genValues = new QValue[]{qValueFactory.create(uniqueID, PropertyType.REFERENCE)};
-                    genValues = new QValue[]{QValue.create(parent.getNodeTypeName())};
+                    genValues = new QValue[]{qValueFactory.create(parent.getNodeTypeName())};
-                    genValues = new QValue[mixins.length];
-                    for (int i = 0; i < mixins.length; i++) {
-                        genValues[i] = QValue.create(mixins[i]);
-                    }
+                    genValues = getQValues(mixins, qValueFactory);
-                genValues = new QValue[]{QValue.create(Calendar.getInstance())};
+                genValues = new QValue[]{qValueFactory.create(Calendar.getInstance())};
-                genValues = new QValue[]{QValue.create(Calendar.getInstance())};
+                genValues = new QValue[]{qValueFactory.create(Calendar.getInstance())};
-                genValues = new QValue[]{QValue.create(Calendar.getInstance())};
+                genValues = new QValue[]{qValueFactory.create(Calendar.getInstance())};
+
+    /**
+     * @param qNames
+     * @param factory
+     * @return An array of QValue objects from the given <code>QName</code>s
+     */
+    private static QValue[] getQValues(QName[] qNames, QValueFactory factory) {
+        QValue[] ret = new QValue[qNames.length];
+        for (int i = 0; i < qNames.length; i++) {
+            ret[i] = factory.create(qNames[i]);
+        }
+        return ret;
+    }

MOV26 UPD40 UPD40 INS23 INS31 INS83 INS83 INS43 INS59 INS44 INS29 INS83 INS83 INS5 INS42 INS44 INS44 INS8 INS42 INS42 INS43 INS42 INS21 INS65 INS65 INS65 INS43 INS85 INS5 INS42 INS43 INS42 INS60 INS24 INS41 INS42 INS7 UPD5 MOV8 INS42 INS42 INS66 INS42 INS43 INS85 INS42 MOV5 INS59 MOV58 INS27 MOV37 INS8 INS42 INS22 INS42 UPD43 INS42 INS42 INS3 INS42 INS40 INS21 INS52 INS42 UPD42 MOV5 INS40 INS7 INS42 INS2 INS32 INS42 INS42 INS42 INS42 INS2 INS8 INS42 INS42 INS42 UPD42 INS42 MOV21 INS8 MOV8 UPD42 INS42 MOV60 MOV21 UPD42 INS40 INS4 INS42 INS32 INS5 UPD42 INS42 INS42 INS42 INS42 MOV32 INS43 INS85 UPD42 INS42 UPD42 UPD42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL40 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL33 DEL41 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL2 DEL42 DEL40 DEL27 DEL8 DEL24 DEL8 DEL40 DEL42 DEL42 DEL42 DEL32 DEL4 DEL3 DEL7 DEL21 DEL8