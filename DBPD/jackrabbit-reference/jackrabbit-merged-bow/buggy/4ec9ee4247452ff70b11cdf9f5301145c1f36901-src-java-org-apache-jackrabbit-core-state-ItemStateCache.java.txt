- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
+import org.apache.log4j.Logger;
- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.15 $, $Date: 2004/08/06 15:08:21 $
-	// setup cache with soft references to ItemState instances
-	this(ReferenceMap.HARD, ReferenceMap.SOFT);
+        // setup cache with soft references to ItemState instances
+        this(ReferenceMap.HARD, ReferenceMap.SOFT);
-	cache = new ReferenceMap(keyType, valueType);
+        cache = new ReferenceMap(keyType, valueType);
-	return cache.containsKey(id);
+        return cache.containsKey(id);
-	return (ItemState) cache.get(id);
+        return (ItemState) cache.get(id);
-	ItemId id = state.getId();
-	if (cache.containsKey(id)) {
-	    log.warn("overwriting cached entry " + id);
-	}
-	log.debug("caching " + id);
-	cache.put(id, state);
+        ItemId id = state.getId();
+        if (cache.containsKey(id)) {
+            log.warn("overwriting cached entry " + id);
+        }
+        log.debug("caching " + id);
+        cache.put(id, state);
-	log.debug("removing entry " + id + " from cache");
-	cache.remove(id);
+        log.debug("removing entry " + id + " from cache");
+        cache.remove(id);
-	log.debug("removing all entries from cache");
-	cache.clear();
+        log.debug("removing all entries from cache");
+        cache.clear();
-	return cache.isEmpty();
+        return cache.isEmpty();
-	return cache.size();
+        return cache.size();
-	// use temp collection to avoid ConcurrentModificationException
-	Collection tmp = new ArrayList(cache.keySet());
-	return tmp.iterator();
+        // use temp collection to avoid ConcurrentModificationException
+        Collection tmp = new ArrayList(cache.keySet());
+        return tmp.iterator();
-	// use temp collection to avoid ConcurrentModificationException
-	Collection tmp = new ArrayList(cache.values());
-	return tmp.iterator();
+        // use temp collection to avoid ConcurrentModificationException
+        Collection tmp = new ArrayList(cache.values());
+        return tmp.iterator();

MOV26 DEL66 DEL65 DEL66 DEL65