[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.uuid.UUID;
-     * hardcoded uuid of the repository root node
+     * hardcoded id of the repository root node
-    private static final String ROOT_NODE_UUID = "cafebabe-cafe-babe-cafe-babecafebabe";
+    public static final NodeId ROOT_NODE_ID = NodeId.valueOf("cafebabe-cafe-babe-cafe-babecafebabe");
-    private static final String SYSTEM_ROOT_NODE_UUID = "deadbeef-cafe-babe-cafe-babecafebabe";
-    private static final String VERSION_STORAGE_NODE_UUID = "deadbeef-face-babe-cafe-babecafebabe";
-    private static final String NODETYPES_NODE_UUID = "deadbeef-cafe-cafe-cafe-babecafebabe";
+    /**
+     * hardcoded id of the "/jcr:system" node
+     */
+    public static final NodeId SYSTEM_ROOT_NODE_ID = NodeId.valueOf("deadbeef-cafe-babe-cafe-babecafebabe");
+
+    /**
+     * hardcoded id of the "/jcr:system/jcr:versionStorage" node
+     */
+    public static final NodeId VERSION_STORAGE_NODE_ID = NodeId.valueOf("deadbeef-face-babe-cafe-babecafebabe");
+
+    /**
+     * hardcoded id of the "/jcr:system/jcr:nodeTypes" node
+     */
+    public static final NodeId NODETYPES_NODE_ID = NodeId.valueOf("deadbeef-cafe-cafe-cafe-babecafebabe");
-    private String rootNodeUUID;
+    private NodeId rootNodeId;
-        rootNodeUUID = loadRootNodeUUID(metaDataStore);
+        rootNodeId = loadRootNodeId(metaDataStore);
-                delegatingDispatcher, NODETYPES_NODE_UUID, SYSTEM_ROOT_NODE_UUID);
+                delegatingDispatcher, NODETYPES_NODE_ID, SYSTEM_ROOT_NODE_ID);
-                rootNodeUUID,
+                rootNodeId,
-        return new VersionManagerImpl(pm, ntReg, delegatingDispatcher, VERSION_STORAGE_NODE_UUID, SYSTEM_ROOT_NODE_UUID);
+        return new VersionManagerImpl(pm, ntReg, delegatingDispatcher,
+                VERSION_STORAGE_NODE_ID, SYSTEM_ROOT_NODE_ID);
-    protected String loadRootNodeUUID(FileSystem fs) throws RepositoryException {
+    protected NodeId loadRootNodeId(FileSystem fs) throws RepositoryException {
-                    return new UUID(new String(chars)).toString();
+                    return NodeId.valueOf(new String(chars));
-                        writer.write(ROOT_NODE_UUID);
+                        writer.write(ROOT_NODE_ID.toString());
-                    return ROOT_NODE_UUID;
+                    return ROOT_NODE_ID;
-            NodeImpl sysRoot = rootNode.internalAddChildNode(QName.JCR_SYSTEM, nt, SYSTEM_ROOT_NODE_UUID);
+            NodeImpl sysRoot = rootNode.internalAddChildNode(QName.JCR_SYSTEM, nt, SYSTEM_ROOT_NODE_ID);
-            sysRoot.internalAddChildNode(QName.JCR_VERSIONSTORAGE, nt, VERSION_STORAGE_NODE_UUID);
+            sysRoot.internalAddChildNode(QName.JCR_VERSIONSTORAGE, nt, VERSION_STORAGE_NODE_ID);
-            sysRoot.internalAddChildNode(QName.JCR_NODETYPES, nt, NODETYPES_NODE_UUID);
+            sysRoot.internalAddChildNode(QName.JCR_NODETYPES, nt, NODETYPES_NODE_ID);
-                            nsReg, ntReg, defSysSession.getItemStateManager(), SYSTEM_ROOT_NODE_UUID);
+                            nsReg, ntReg, defSysSession.getItemStateManager(), SYSTEM_ROOT_NODE_ID);
-    String getRootNodeUUID() {
+    NodeId getRootNodeId() {
-        return rootNodeUUID;
+        return rootNodeId;
-                                                               String rootNodeUUID,
+                                                               NodeId rootNodeId,
-            pm.init(new PMContext(homeDir, fs, rootNodeUUID, nsReg, ntReg));
+            pm.init(new PMContext(homeDir, fs, rootNodeId, nsReg, ntReg));
-                        rootNodeUUID,
+                        rootNodeId,
-                        SYSTEM_ROOT_NODE_UUID);
+                        SYSTEM_ROOT_NODE_ID);
-                    rootNodeUUID,
+                    rootNodeId,
-                        new SharedItemStateManager(persistMgr, rootNodeUUID, ntReg, true);
+                        new SharedItemStateManager(persistMgr, rootNodeId, ntReg, true);

UPD83 UPD43 INS29 UPD83 UPD43 INS29 UPD83 UPD43 INS29 UPD83 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 INS32 INS65 UPD42 UPD42 INS32 INS65 UPD42 UPD42 INS32 INS65 UPD42 UPD42 INS32 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD66 INS42 INS42 INS45 INS66 INS42 INS42 INS45 INS66 INS42 INS42 INS45 INS66 INS42 INS42 INS45 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 MOV14 UPD42 INS32 UPD42 MOV42 INS42 DEL40 DEL26 DEL45 DEL45 DEL45 DEL45 DEL42 DEL43 DEL14