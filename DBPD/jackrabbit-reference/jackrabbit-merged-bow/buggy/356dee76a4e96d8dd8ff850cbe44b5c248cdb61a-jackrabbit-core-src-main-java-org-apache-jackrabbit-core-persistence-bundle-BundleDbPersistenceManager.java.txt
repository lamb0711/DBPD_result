JCR-1233: Create org.apache.jackrabbit.core.id

Move the Id classes to org.apache.jackrabbit.core.id and update all references accordingly (simple changes to import statements).

While at it, I also replaced the NodeIdIterator class with the equivalent Java 5 Iterator<NodeId> and Iterable<NodeId> constructs.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792437 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.NoSuchElementException;
-import org.apache.jackrabbit.core.NodeId;
-import org.apache.jackrabbit.core.NodeIdIterator;
-import org.apache.jackrabbit.core.PropertyId;
+import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.core.id.PropertyId;
-import org.apache.jackrabbit.core.state.NodeReferencesId;
+import org.apache.jackrabbit.core.id.NodeReferencesId;
-    public synchronized NodeIdIterator getAllNodeIds(NodeId bigger, int maxCount)
+    public synchronized Iterable<NodeId> getAllNodeIds(NodeId bigger, int maxCount)
-            ArrayList<UUID> result = new ArrayList<UUID>();
+            ArrayList<NodeId> result = new ArrayList<NodeId>();
-                result.add(current);
+                result.add(new NodeId(current));
-            return new ListNodeIdIterator(result);
+            return result;
-    /**
-     * Iterator over an in-memory list of node ids.
-     * This helper class is used by {@link BundleDbPersistenceManager#getAllNodeIds}.
-     */
-    private class ListNodeIdIterator implements NodeIdIterator {
-
-        private final ArrayList<UUID> list;
-        private int pos;
-
-        ListNodeIdIterator(ArrayList<UUID> list) {
-            this.list = list;
-        }
-
-        public NodeId nextNodeId() throws NoSuchElementException {
-            if (!hasNext()) {
-                throw new NoSuchElementException();
-            }
-            return new NodeId(list.get(pos++));
-        }
-
-        public boolean hasNext() {
-            return pos < list.size();
-        }
-
-        public Object next() {
-            return nextNodeId();
-        }
-
-        public void remove() {
-            throw new UnsupportedOperationException();
-        }
-
-    }
-

UPD40 UPD40 UPD40 INS74 INS43 INS43 INS42 UPD42 MOV42 UPD74 INS42 UPD43 UPD42 UPD74 UPD43 INS14 MOV42 MOV43 INS42 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL66 DEL66 DEL42 DEL42 DEL67 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL42 DEL43 DEL42 DEL32 DEL38 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL37 DEL32 DEL14 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL55