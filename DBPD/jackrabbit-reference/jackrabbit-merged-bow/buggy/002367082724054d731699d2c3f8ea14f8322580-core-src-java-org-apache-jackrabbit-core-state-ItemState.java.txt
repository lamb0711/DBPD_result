fixed concurrency issue reported by walter raboch:
http://www.mail-archive.com/jackrabbit-dev@incubator.apache.org/msg02127.html

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@233511 13f79535-47bb-0310-9956-ffa450edef68

+    private static long LAST_MOD_COUNT = 1;
+
-    protected long lastModified;
-
+    private transient long modCount;
-            Collections.synchronizedMap(new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK));
+            Collections.synchronizedMap(
+                    new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK));
-        // @todo use modification count instead of ms (not precise enough)
-        lastModified = System.currentTimeMillis();
+        modCount = 0;
-     * @param initialStatus  the initial status of the new <code>ItemState</code> instance
+     * @param initialStatus the initial status of the new <code>ItemState</code> instance
-        lastModified = state.getLastModified();
+     * Returns the modification count.
+     * @return the modification count.
+     */
+    long getModCount() {
+        return modCount;
+    }
+
+    /**
+     * Updates the modification count.
+     */
+    synchronized void touch() {
+        modCount = LAST_MOD_COUNT++;
+    }
+
+    /**
+            // sync modification count
+            modCount = overlayedState.getModCount();
-     * Called by <code>TransientItemStateManager</code> when this item state
-     * is disposed.
+     * Determines whether this item state has become stale.
+     * @return true if this item state has become stale, false otherwise.
+     */
+    boolean isStale() {
+        return overlayedState != null && modCount != overlayedState.getModCount();
+    }
+
+    /**
+     * Called by <code>TransientItemStateManager</code> and
+     * <code>LocalItemStateManager</code> when this item state has been disposed.
-     * Returns the timestamp when this item state was last modified.
-     *
-     * @return the timestamp when this item state was last modified.
-     */
-    public long getLastModified() {
-        return lastModified;
-    }
-
-    /**
+        pull();
-        if (isTransient || status != STATUS_EXISTING) {
+        if (isTransient) {
-        if (isTransient || status != STATUS_EXISTING) {
+        if (isTransient) {

MOV23 MOV31 INS23 INS31 INS31 UPD83 INS83 INS83 INS83 INS39 INS59 UPD42 INS29 INS83 INS39 INS42 INS8 INS29 INS39 INS42 INS8 UPD42 INS34 INS42 INS65 INS21 INS65 INS65 INS41 INS21 UPD66 UPD66 UPD66 UPD42 INS66 INS7 INS66 INS66 INS27 UPD66 UPD66 INS32 INS42 INS42 UPD42 INS34 INS42 INS37 INS21 INS27 INS27 INS42 INS42 INS7 INS42 INS33 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL83 DEL42 DEL42 DEL42 DEL27 DEL27 DEL42 DEL42 DEL42 DEL27 DEL27