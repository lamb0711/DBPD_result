JCR-193, JCR-216, JCR-203, JCR 184 + various minor fixes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@293331 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.simple.ResourceFilterConfig;
-import org.apache.jackrabbit.webdav.simple.ResourceFilter;
-import org.apache.jackrabbit.webdav.simple.DefaultResourceFilter;
+import org.apache.jackrabbit.webdav.simple.ResourceConfig;
-    public static final String INIT_PARAM_RESOURCE_FILTER = "resource-filter";
+    public static final String INIT_PARAM_RESOURCE_CONFIG = "resource-config";
-     * The resource filter
+     * The config
-    private ResourceFilter resourceFilter;
+    private ResourceConfig config;
-        String filterParam = getInitParameter(INIT_PARAM_RESOURCE_FILTER);
-        if (filterParam != null) {
+        String configParam = getInitParameter(INIT_PARAM_RESOURCE_CONFIG);
+        if (configParam != null) {
-                ResourceFilterConfig config = new ResourceFilterConfig();
-                setResourceFilter(config.parse(getServletContext().getResource(filterParam)));
+                config = new ResourceConfig();
+                config.parse(getServletContext().getResource(configParam));
-        /* set cache control headers in order to deal with non-dav complient
-        * http1.1 or http1.0 proxies. >> see RFC2518 9.4.5 */
-        response.addHeader("Pragma", "No-cache");  // http1.0
-        response.addHeader("Cache-Control", "no-cache"); // http1.1
-
-            resourceFactory = new ResourceFactoryImpl(getLockManager(), getResourceFilter());
+            resourceFactory = new ResourceFactoryImpl(getLockManager(), getResourceConfig());
-     * Returns the resource filter to be applied
+     * Returns the resource configuration to be applied
-    public ResourceFilter getResourceFilter() {
-        // fallback if no config present or invalid: an empty resource filter
-        if (resourceFilter == null) {
-            resourceFilter = new DefaultResourceFilter();
+    public ResourceConfig getResourceConfig() {
+        // fallback if no config present
+        if (config == null) {
+            config = new ResourceConfig();
-        return resourceFilter;
+        return config;
-     * Set the resource filter
+     * Set the resource configuration
-     * @param resourceFilter
+     * @param config
-    public void setResourceFilter(ResourceFilter resourceFilter) {
-        this.resourceFilter = resourceFilter;
+    public void setResourceConfig(ResourceConfig config) {
+        this.config = config;

UPD40 UPD43 UPD43 UPD42 UPD42 UPD42 UPD45 UPD42 UPD42 UPD42 UPD43 UPD42 UPD66 UPD66 UPD42 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS21 UPD42 INS7 MOV32 UPD43 INS42 INS14 UPD42 UPD42 UPD43 MOV43 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21