JCR-2087: Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@801565 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedHashMap;
-import org.apache.commons.collections.map.LRUMap;
-import org.apache.commons.collections.map.LinkedMap;
-    private final Map unknownValues = Collections.synchronizedMap(new LRUMap(100));
+    private final Map<String, String> unknownValues = Collections.synchronizedMap(new LinkedHashMap<String, String>() {
+        private static final long serialVersionUID = 1443679637070403838L;
+
+        protected boolean removeEldestEntry(Map.Entry<String, String> eldest) {
+            return size() > 100;
+        }
+    });
-    private final LinkedMap cache = new LinkedMap();
+    private final Map<String, CacheEntry> cache = new LinkedHashMap<String, CacheEntry>();
-            entry = (CacheEntry) cache.get(text);
+            entry = cache.get(text);
-                    CacheEntry[] entries = (CacheEntry[]) cache.values().toArray(
+                    CacheEntry[] entries = cache.values().toArray(
-                    for (Iterator it = cache.entrySet().iterator(); it.hasNext(); ) {
-                        Map.Entry e = (Map.Entry) it.next();
-                        if (((CacheEntry) e.getValue()).numAccessed <= threshold) {
+                    for (Iterator<Map.Entry<String, CacheEntry>> it = cache.entrySet().iterator(); it.hasNext(); ) {
+                        Map.Entry<String, CacheEntry> e = it.next();
+                        if (e.getValue().numAccessed <= threshold) {
-                            CacheEntry ce = (CacheEntry) e.getValue();
+                            CacheEntry ce = e.getValue();
-                        new Object[]{new Integer(entry.numAccessed),
-                                field, text});
+                        new Object[]{entry.numAccessed, field, text});
-                        field, text, new Integer(entry.bits.cardinality()),
-                        new Integer(reader.maxDoc())});
+                        field, text, entry.bits.cardinality(), reader.maxDoc()});

MOV26 UPD40 INS74 INS74 MOV43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 UPD42 MOV42 INS42 INS42 INS74 INS74 INS1 INS43 INS43 MOV43 INS43 INS43 INS43 INS23 INS31 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS83 INS83 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS8 MOV32 INS42 INS34 INS74 INS42 INS41 INS43 INS43 INS43 INS27 INS40 INS42 INS42 INS32 INS34 MOV5 INS42 MOV32 INS74 INS40 MOV32 MOV32 MOV43 INS74 INS74 MOV43 INS43 MOV43 MOV43 INS43 MOV43 MOV32 INS42 INS42 MOV32 MOV43 MOV32 DEL40 DEL26 DEL43 DEL34 DEL43 DEL43 DEL11 DEL42 DEL43 DEL85 DEL5 DEL11 DEL11 DEL11 DEL36 DEL11 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL14 DEL42 DEL43 DEL14