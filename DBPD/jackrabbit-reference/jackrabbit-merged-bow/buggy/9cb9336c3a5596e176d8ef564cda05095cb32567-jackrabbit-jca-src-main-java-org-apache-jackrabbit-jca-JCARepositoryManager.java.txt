JCR-2555: Improved reusability of the JCA package

Replace direct jackrabbit-core references with the JCR 2.0 RepositoryFactory mechanism

Also did some Java 5 cleanups

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@923206 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.RepositoryImpl;
-import org.apache.jackrabbit.core.config.RepositoryConfig;
-
+import javax.jcr.Repository;
+import org.apache.commons.io.IOUtils;
+import org.apache.jackrabbit.api.JackrabbitRepository;
+import org.apache.jackrabbit.commons.JcrUtils;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
-    private final Map references;
+    private final Map<Reference, Reference> references;
-        this.references = new HashMap();
+        this.references = new HashMap<Reference, Reference>();
-    public RepositoryImpl createRepository(String homeDir, String configFile)
+    public Repository createRepository(String homeDir, String configFile)
-        Collection references = this.references.values();
-        Iterator iter = references.iterator();
+        Collection<Reference> references = this.references.values();
+        Iterator<Reference> iter = references.iterator();
-            Reference ref = (Reference) iter.next();
+            Reference ref = iter.next();
-        Reference other = (Reference) references.get(ref);
+        Reference other = references.get(ref);
-        private RepositoryImpl repository;
+        private Repository repository;
-        public RepositoryImpl create()
-                throws RepositoryException {
+        public Repository create() throws RepositoryException {
-                RepositoryConfig config = null;
+                Map<String, String> parameters = new HashMap<String, String>();
+
+                parameters.put("org.apache.jackrabbit.repository.home", homeDir);
-                    ClassLoader cl = Thread.currentThread().getContextClassLoader();
-                    if (cl == null) {
-                        cl = this.getClass().getClassLoader();
-                    }
-
-                    InputStream configInputStream = cl.getResourceAsStream(
-                        configFile.substring(CLASSPATH_CONFIG_PREFIX.length()));
-                    try {
-                        config = RepositoryConfig.create(configInputStream, homeDir);
-                    } finally {
-                        if (configInputStream != null) {
-                            try {
-                                configInputStream.close();
-                            } catch (IOException e) {
-                                // ignore
-                            }
-                        }
-                    }
+                    String source =
+                        configFile.substring(CLASSPATH_CONFIG_PREFIX.length());
+                    File target = new File(homeDir, "repository.xml");
+                    copyConfigFile(source, target);
+                    parameters.put(
+                            "org.apache.jackrabbit.repository.conf",
+                            target.getPath());
-                    config = RepositoryConfig.create(configFile, homeDir);
+                    parameters.put(
+                            "org.apache.jackrabbit.repository.conf",
+                            configFile);
-                repository = RepositoryImpl.create(config);
+
+                repository = JcrUtils.getRepository(parameters);
+        private void copyConfigFile(String source, File target)
+                throws RepositoryException {
+            ClassLoader cl = Thread.currentThread().getContextClassLoader();
+            if (cl == null) {
+                cl = this.getClass().getClassLoader();
+            }
+
+            InputStream input = cl.getResourceAsStream(source);
+            if (input != null) {
+                try {
+                    try {
+                        OutputStream output = new FileOutputStream(target);
+                        try {
+                            IOUtils.copy(input, output);
+                        } finally {
+                            output.close();
+                        }
+                    } finally {
+                        input.close();
+                    }
+                } catch (IOException e) {
+                    throw new RepositoryException(
+                            "Failed to copy configuration to " + target, e);
+                }
+            } else {
+                throw new RepositoryException(
+                        "Repository configuration not found: " + source);
+            }
+        }
+
-            if (repository != null) {
-                repository.shutdown();
+            if (repository instanceof JackrabbitRepository) {
+                ((JackrabbitRepository) repository).shutdown();
-
-

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 UPD40 INS40 INS40 INS40 INS74 UPD43 INS31 MOV43 MOV43 INS43 UPD42 UPD43 UPD43 INS43 INS83 INS39 INS42 INS44 INS44 MOV43 INS8 INS42 INS74 INS74 MOV43 UPD42 UPD42 INS42 INS43 INS42 INS43 INS42 MOV60 MOV25 INS60 INS25 MOV43 INS43 MOV43 INS43 MOV32 INS42 INS42 MOV43 INS59 INS27 INS8 INS8 INS62 INS74 INS42 INS42 MOV43 INS21 INS42 INS32 INS42 INS33 INS54 INS53 INS42 INS43 MOV43 MOV43 INS43 MOV32 INS74 INS32 INS42 INS42 INS42 INS8 INS12 INS14 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS42 INS60 INS21 MOV21 INS54 MOV44 INS8 INS43 INS27 INS36 INS42 UPD42 MOV42 INS42 INS74 INS43 INS43 INS59 INS32 INS32 UPD42 UPD42 UPD42 INS8 INS8 INS53 INS42 INS45 INS42 INS11 INS43 INS43 INS43 INS42 INS42 MOV32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 UPD42 INS45 INS32 UPD42 MOV42 UPD42 MOV42 INS45 MOV42 INS60 INS54 INS21 INS14 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS45 UPD42 MOV42 INS42 INS43 INS59 INS8 INS8 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS14 INS21 INS21 INS42 INS42 INS42 INS45 INS42 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL11 DEL11 DEL43 DEL42 DEL33 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL33 DEL27 DEL8 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL54 DEL42 DEL42 DEL32 DEL7 DEL42 DEL33 DEL27 DEL42