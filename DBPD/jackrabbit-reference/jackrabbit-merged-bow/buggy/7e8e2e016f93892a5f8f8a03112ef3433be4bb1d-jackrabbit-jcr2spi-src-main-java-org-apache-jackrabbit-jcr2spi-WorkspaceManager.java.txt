JCR-1204: Redesign SPI observation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@592356 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Subscription;
+import java.util.Collection;
+    private final NameFactory nameFactory;
+    private final PathFactory pathFactory;
+    /**
+     * The current subscription for change events if there are listeners.
+     */
+    private Subscription subscription;
+
+        this.nameFactory = service.getNameFactory();
+        this.pathFactory = service.getPathFactory();
-        return service.getNameFactory();
+        return nameFactory;
-        return service.getPathFactory();
+        return pathFactory;
+     * @throws RepositoryException if the listener cannot be registered.
-    public void addEventListener(InternalEventListener listener) {
+    public void addEventListener(InternalEventListener listener)
+            throws RepositoryException {
+            EventFilter[] filters = getEventFilters(listeners);
+            if (listeners.size() == 1) {
+                subscription = service.createSubscription(sessionInfo, filters);
+            } else {
+                service.updateEventFilters(subscription, filters);
+            }
+     * Updates the event filters on the subscription. The filters are retrieved
+     * from the current list of internal event listeners.
+     *
+     * @throws RepositoryException
+     */
+    public void updateEventFilters() throws RepositoryException {
+        synchronized (listeners) {
+            service.updateEventFilters(subscription, getEventFilters(listeners));
+        }
+    }
+
+    /**
-    public void removeEventListener(InternalEventListener listener) {
+    public void removeEventListener(InternalEventListener listener)
+            throws RepositoryException {
+            if (listeners.isEmpty()) {
+                service.dispose(subscription);
+                subscription = null;
+            } else {
+                service.updateEventFilters(subscription, getEventFilters(listeners));
+            }
+
+    /**
+     * Gets the event filters from the passed listener list.
+     *
+     * @param listeners the internal event listeners.
+     */
+    private static EventFilter[] getEventFilters(Collection listeners) {
+        List filters = new ArrayList();
+        for (Iterator it = listeners.iterator(); it.hasNext(); ) {
+            InternalEventListener listener = (InternalEventListener) it.next();
+            filters.addAll(listener.getEventFilters());
+        }
+        return (EventFilter[]) filters.toArray(new EventFilter[filters.size()]);
+    }
+
+            if (subscription != null) {
+                service.dispose(subscription);
+            }
-                    // get filters from listeners
-                    List filters = new ArrayList();
+                    Subscription subscr;
+                        subscr = subscription;
-                    for (int i = 0; i < iel.length; i++) {
-                        filters.addAll(iel[i].getEventFilters());
-                    }
-                    EventFilter[] filtArr = (EventFilter[]) filters.toArray(new EventFilter[filters.size()]);
-                    EventBundle[] bundles = service.getEvents(sessionInfo, pollTimeout, filtArr);
+                    EventBundle[] bundles = service.getEvents(subscr, pollTimeout);

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS59 MOV43 MOV43 INS43 INS29 INS83 INS39 INS42 INS43 INS8 INS43 INS29 INS83 INS83 MOV5 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS65 INS42 INS42 INS21 INS21 INS65 INS42 INS65 INS65 INS42 INS51 INS42 INS65 INS65 INS43 INS42 MOV60 INS24 INS41 INS66 INS7 INS7 INS42 INS42 INS42 INS66 INS8 INS66 INS66 INS42 INS42 INS8 INS8 INS66 INS42 INS66 INS42 INS58 INS32 INS8 MOV11 INS22 MOV32 INS22 MOV32 MOV21 INS60 INS25 MOV21 INS21 MOV21 INS25 INS43 INS59 INS42 INS42 INS60 INS21 INS25 INS52 INS42 INS52 INS42 INS5 INS59 INS27 INS8 INS8 INS32 INS32 INS8 INS8 INS42 INS42 INS32 INS43 INS59 INS32 INS27 INS8 INS43 INS85 INS42 INS32 INS32 INS34 INS21 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS32 INS7 INS32 INS43 INS32 INS42 INS42 INS32 INS60 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 MOV59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS21 INS7 UPD42 INS42 INS42 DEL8 DEL8 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL60 DEL42