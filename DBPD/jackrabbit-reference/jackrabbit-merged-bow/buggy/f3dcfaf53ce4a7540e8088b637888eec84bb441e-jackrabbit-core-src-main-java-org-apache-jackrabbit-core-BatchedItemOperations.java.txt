JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.MalformedPathException;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.conversion.MalformedPathException;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-        Path.PathElement destName = destPath.getNameElement();
+        Path.Element destName = destPath.getNameElement();
-        Path.PathElement srcName = srcPath.getNameElement();
+        Path.Element srcName = srcPath.getNameElement();
-        Path.PathElement destName = destPath.getNameElement();
+        Path.Element destName = destPath.getNameElement();
-    public void checkAddNode(NodeState parentState, QName nodeName,
-                             QName nodeTypeName, int options)
+    public void checkAddNode(NodeState parentState, Name nodeName,
+                             Name nodeTypeName, int options)
-            if (ent.includesNodeType(QName.MIX_REFERENCEABLE)) {
+            if (ent.includesNodeType(NameConstants.MIX_REFERENCEABLE)) {
-    public NodeDef findApplicableNodeDefinition(QName name,
-                                                QName nodeTypeName,
+    public NodeDef findApplicableNodeDefinition(Name name,
+                                                Name nodeTypeName,
-    public PropDef findApplicablePropertyDefinition(QName name,
+    public PropDef findApplicablePropertyDefinition(Name name,
-     * Other than <code>{@link #findApplicablePropertyDefinition(QName, int, boolean, NodeState)}</code>
+     * Other than <code>{@link #findApplicablePropertyDefinition(Name, int, boolean, NodeState)}</code>
-    public PropDef findApplicablePropertyDefinition(QName name,
+    public PropDef findApplicablePropertyDefinition(Name name,
-                                     QName nodeName,
-                                     QName nodeTypeName,
-                                     QName[] mixinNames,
+                                     Name nodeName,
+                                     Name nodeTypeName,
+                                     Name[] mixinNames,
-                                     QName nodeName,
-                                     QName nodeTypeName,
-                                     QName[] mixinNames,
+                                     Name nodeName,
+                                     Name nodeTypeName,
+                                     Name[] mixinNames,
-            PropDef pd = ent.getApplicablePropertyDef(QName.JCR_MIXINTYPES,
+            PropDef pd = ent.getApplicablePropertyDef(NameConstants.JCR_MIXINTYPES,
-                                             QName propName,
+                                             Name propName,
-                                             QName propName,
+                                             Name propName,
-        while (!nodeState.hasPropertyName(QName.JCR_ISCHECKEDOUT)) {
+        while (!nodeState.hasPropertyName(NameConstants.JCR_ISCHECKEDOUT)) {
-                new PropertyId(nodeState.getNodeId(), QName.JCR_ISCHECKEDOUT);
+                new PropertyId(nodeState.getNodeId(), NameConstants.JCR_ISCHECKEDOUT);
-        QName declaringNT = def.getDeclaringNodeType();
-        QName name = def.getName();
-        if (QName.MIX_REFERENCEABLE.equals(declaringNT)) {
+        Name declaringNT = def.getDeclaringNodeType();
+        Name name = def.getName();
+        if (NameConstants.MIX_REFERENCEABLE.equals(declaringNT)) {
-            if (QName.JCR_UUID.equals(name)) {
+            if (NameConstants.JCR_UUID.equals(name)) {
-        } else if (QName.NT_BASE.equals(declaringNT)) {
+        } else if (NameConstants.NT_BASE.equals(declaringNT)) {
-            if (QName.JCR_PRIMARYTYPE.equals(name)) {
+            if (NameConstants.JCR_PRIMARYTYPE.equals(name)) {
-            } else if (QName.JCR_MIXINTYPES.equals(name)) {
+            } else if (NameConstants.JCR_MIXINTYPES.equals(name)) {
-                    values.add(InternalValue.create((QName) iter.next()));
+                    values.add(InternalValue.create((Name) iter.next()));
-        } else if (QName.NT_HIERARCHYNODE.equals(declaringNT)) {
+        } else if (NameConstants.NT_HIERARCHYNODE.equals(declaringNT)) {
-            if (QName.JCR_CREATED.equals(name)) {
+            if (NameConstants.JCR_CREATED.equals(name)) {
-        } else if (QName.NT_RESOURCE.equals(declaringNT)) {
+        } else if (NameConstants.NT_RESOURCE.equals(declaringNT)) {
-            if (QName.JCR_LASTMODIFIED.equals(name)) {
+            if (NameConstants.JCR_LASTMODIFIED.equals(name)) {
-        } else if (QName.NT_VERSION.equals(declaringNT)) {
+        } else if (NameConstants.NT_VERSION.equals(declaringNT)) {
-            if (QName.JCR_CREATED.equals(name)) {
+            if (NameConstants.JCR_CREATED.equals(name)) {
-            QName propName = (QName) iter.next();
+            Name propName = (Name) iter.next();
-            boolean referenceable = ent.includesNodeType(QName.MIX_REFERENCEABLE);
-            boolean versionable = ent.includesNodeType(QName.MIX_VERSIONABLE);
+            boolean referenceable = ent.includesNodeType(NameConstants.MIX_REFERENCEABLE);
+            boolean versionable = ent.includesNodeType(NameConstants.MIX_VERSIONABLE);
-                QName propName = (QName) iter.next();
+                Name propName = (Name) iter.next();
-                if (def.getDeclaringNodeType().equals(QName.MIX_LOCKABLE)) {
+                if (def.getDeclaringNodeType().equals(NameConstants.MIX_LOCKABLE)) {
-                    if (propName.equals(QName.JCR_VERSIONHISTORY)) {
+                    if (propName.equals(NameConstants.JCR_VERSIONHISTORY)) {
-                    } else if (propName.equals(QName.JCR_BASEVERSION)) {
+                    } else if (propName.equals(NameConstants.JCR_BASEVERSION)) {
-                    } else if (propName.equals(QName.JCR_PREDECESSORS)) {
+                    } else if (propName.equals(NameConstants.JCR_PREDECESSORS)) {
-                    } else if (propName.equals(QName.JCR_ISCHECKEDOUT)) {
+                    } else if (propName.equals(NameConstants.JCR_ISCHECKEDOUT)) {
-                                            QName propName)
+                                            Name propName)
-            if (def.getDeclaringNodeType().equals(QName.MIX_REFERENCEABLE)
-                    && propName.equals(QName.JCR_UUID)) {
+            if (def.getDeclaringNodeType().equals(NameConstants.MIX_REFERENCEABLE)
+                    && propName.equals(NameConstants.JCR_UUID)) {

INS26 UPD40 UPD40 UPD40 INS40 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD5 UPD43 UPD43 UPD5 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD43 UPD42 UPD40 UPD40 UPD40 UPD42 UPD42 UPD42 UPD42 UPD40 UPD40 UPD40 UPD40 UPD43 UPD40 UPD43 UPD40 UPD40 UPD42 UPD42 UPD40 UPD40 UPD40 UPD43 UPD40 UPD40 UPD43 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD42 UPD40 UPD40 UPD43 UPD40 UPD42 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42