minor improvement with private methods

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@651188 13f79535-47bb-0310-9956-ffa450edef68

-            // check if state exists for the given item
+            // shortcut: check if state exists for the given item
-
-            ItemData data = getItemData(itemId, path);
-            return data != null;
-        } catch (ItemNotFoundException infe) {
-            return false;
+            ItemData data = getItemData(itemId, path, true);
+            return true;
-        ItemData data = getItemData(itemId, path);
-        if (data == null) {
-            throw new AccessDeniedException("cannot read item " + itemId);
-        }
+        boolean permissionCheck = true;
+        ItemData data = getItemData(itemId, path, permissionCheck);
-     * @param path The path of the item to retrieve the data for or
-     * <code>null</code>. In the latter case the id (instead of the path) is
-     * used to test if READ permission is granted.
-    private ItemData getItemData(ItemId itemId, Path path)
+    private ItemData getItemData(ItemId itemId)
+            throws ItemNotFoundException, AccessDeniedException,
+            RepositoryException {
+        return getItemData(itemId, null, true);
+    }
+
+    /**
+     * Retrieves the data of the item with given <code>id</code>. If the
+     * specified item doesn't exist an <code>ItemNotFoundException</code> will
+     * be thrown.
+     * If <code>permissionCheck</code> is <code>true</code> and the item exists
+     * but the current session is not granted read access an
+     * <code>AccessDeniedException</code> will be thrown.
+     *
+     * @param itemId id of item to be retrieved
+     * @param path The path of the item to retrieve the data for or
+     * <code>null</code>. In the latter case the id (instead of the path) is
+     * used to test if READ permission is granted.
+     * @param permissionCheck
+     * @return the ItemData for the item identified by the given itemId.
+     * @throws ItemNotFoundException if no item with given <code>id</code> exists
+     * @throws AccessDeniedException if the current session is not allowed to
+     *                               read the said item
+     * @throws RepositoryException   if another error occurs
+     */
+    private ItemData getItemData(ItemId itemId, Path path, boolean permissionCheck)
-            data = createItemData(state, path);
+            data = createItemData(state, path, permissionCheck);
-            // already cached: check if read-permission is granted in order
-            // to have a consistent behaviour to 'itemExists' above.
-            if (!canRead(data, path)) {
+            // already cached: if 'permissionCheck' is true, make sure read
+            // permission is granted.
+            if (permissionCheck && !canRead(data, path)) {
-                return null;
+                throw new AccessDeniedException("cannot read item " + data.getId());
-            data = (AbstractNodeData) getItemData(id, null);
+            data = (AbstractNodeData) getItemData(id);
-        ItemData data = getItemData(parentId, null);
+        ItemData data = getItemData(parentId);
-        ItemData data = getItemData(parentId, null);
+        ItemData data = getItemData(parentId);
-        ItemData data = getItemData(parentId, null);
+        ItemData data = getItemData(parentId);
-        ItemData data = getItemData(parentId, null);
+        ItemData data = getItemData(parentId);
-     * Same as {@link #createItemData(ItemState, Path, boolean)} where the
-     * permissionCheck flag is 'true'. This method will throw
-     * <code>AccessDeniedException</code> if reading the item data is not
-     * allowed.
-     *
-     * @param state
-     * @return
-     * @throws RepositoryException
-     */
-    private ItemData createItemData(ItemState state, Path path) throws RepositoryException {
-        return createItemData(state, path, true);
-    }
-
-    /**
-     * cache. In order to benefit from the cache {@link #getItemData(ItemId, Path)}
-     * should be called
+     * cache. In order to benefit from the cache
+     * {@link #getItemData(ItemId, Path, boolean)} should be called.

MOV31 MOV29 UPD42 MOV43 INS43 INS29 INS44 INS60 UPD43 UPD42 UPD42 MOV42 INS65 INS65 MOV65 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS39 INS59 UPD42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 UPD66 UPD66 INS42 INS9 UPD42 UPD42 INS33 INS9 INS42 INS27 MOV69 INS42 MOV38 INS53 INS9 INS42 INS14 MOV43 INS27 INS45 INS32 INS42 INS42 DEL42 DEL33 DEL27 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL42 DEL33 DEL27 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL66 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL65 DEL42 DEL65 DEL29 DEL43 DEL42 DEL44 DEL42 DEL33 DEL41 DEL33 DEL33 DEL33 DEL33 DEL33