Make versioning transactional
- Added specialized XAVersion and XAVersionHistory objects that refresh their internal state when needed
- Defined new observation interface in order to have VersionManagerImpl use standard event dispatching
  instead of writing its own
- Added test cases verifying isolation of versioning operations in transactions


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368026 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.state.SessionItemStateManager;
+import org.apache.jackrabbit.core.state.SessionItemStateManager;
+import org.apache.jackrabbit.core.version.VersionManager;
+import org.apache.jackrabbit.core.version.VersionManagerImpl;
+import org.apache.jackrabbit.core.version.XAVersionManager;
-        txResources = new InternalXAResource[] {
-            (XAItemStateManager) wsp.getItemStateManager(),
-            (XALockManager) getLockManager()
-        };
+        init();
+        init();
+    }
+
+    /**
+     * Initialize this object.
+     */
+    private void init() throws RepositoryException {
+        XAItemStateManager stateMgr = (XAItemStateManager) wsp.getItemStateManager();
+        XALockManager lockMgr = (XALockManager) getLockManager();
+        XAVersionManager versionMgr = (XAVersionManager) getVersionManager();
+
-            (XAItemStateManager) wsp.getItemStateManager(),
-            (XALockManager) getLockManager()
+            stateMgr, lockMgr, versionMgr
+        stateMgr.setVirtualProvider(versionMgr);
+    protected VersionManager createVersionManager(RepositoryImpl rep)
+            throws RepositoryException {
+
+        VersionManagerImpl vMgr = (VersionManagerImpl) rep.getVersionManager();
+        return new XAVersionManager(vMgr, rep.getNodeTypeRegistry(), wsp);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    protected ItemManager createItemManager(SessionItemStateManager itemStateMgr,
+                                            HierarchyManager hierMgr) {
+        return new XAItemManager(itemStateMgr, hierMgr, this,
+                ntMgr.getRootNodeDefinition(), rep.getRootNodeUUID());
+    }
+
+    /**
+     * {@inheritDoc}
+     */

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS42 INS60 INS60 INS60 INS21 INS21 INS65 INS42 INS43 INS42 INS42 INS60 INS41 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS32 INS32 INS66 INS43 INS59 INS43 INS59 INS43 INS59 INS7 INS32 INS65 INS42 INS43 INS59 INS14 INS65 INS42 INS42 INS14 UPD42 MOV42 INS42 INS42 INS42 MOV11 INS42 INS42 MOV11 INS42 INS42 INS11 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS42 INS32 INS42 INS43 INS42 INS42 INS52 INS32 INS32 INS43 INS32 MOV5 INS4 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL32 DEL11 DEL4 DEL3 DEL7 DEL42 DEL4 DEL3 DEL7