JCR-2762: Optimize bundle serialization

Remove unused code from BundleReader and BundleWriter.

Un-deprecate the BLOBStore class to avoid deprecation warnings from all over the place where we still need id for backwards compatibility.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1004230 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.commons.io.IOUtils;
-import org.apache.jackrabbit.core.id.NodeId;
-import org.apache.jackrabbit.core.state.ChildNodeEntry;
-import org.apache.jackrabbit.core.state.NodeState;
-import org.apache.jackrabbit.core.value.InternalValue;
-import org.apache.jackrabbit.core.data.DataStore;
-import org.apache.jackrabbit.spi.Name;
-import org.apache.jackrabbit.spi.commons.name.NameConstants;
-
-import java.util.Collection;
-import java.util.Iterator;
+import org.apache.commons.io.IOUtils;
+import org.apache.jackrabbit.core.data.DataStore;
+import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.core.value.InternalValue;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.commons.name.NameConstants;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
-     * Serializes a <code>NodeState</code> to the data output stream
-     *
-     * @param state the state to write
-     * @throws IOException in an I/O error occurs.
-     */
-    private void writeState(NodeState state) throws IOException {
-        // primaryType & version
-        out.writeInt((BundleBinding.VERSION_CURRENT << 24)
-                | binding.nsIndex.stringToIndex(state.getNodeTypeName().getNamespaceURI()));
-        out.writeUTF(state.getNodeTypeName().getLocalName());
-        // parentUUID
-        writeNodeId(state.getParentId());
-        // definitionId
-        out.writeUTF("");
-        // mixin types
-        Collection<Name> c = state.getMixinTypeNames();
-        out.writeInt(c.size()); // count
-        for (Iterator<Name> iter = c.iterator(); iter.hasNext();) {
-            writeQName(iter.next());
-        }
-        // properties (names)
-        c = state.getPropertyNames();
-        out.writeInt(c.size()); // count
-        for (Iterator<Name> iter = c.iterator(); iter.hasNext();) {
-            Name pName = iter.next();
-            writeIndexedQName(pName);
-        }
-        // child nodes (list of name/uuid pairs)
-        Collection<ChildNodeEntry> collChild = state.getChildNodeEntries();
-        out.writeInt(collChild.size()); // count
-        for (Iterator<ChildNodeEntry> iter = collChild.iterator(); iter.hasNext();) {
-            ChildNodeEntry entry = iter.next();
-            writeQName(entry.getName());   // name
-            writeNodeId(entry.getId());  // uuid
-        }
-        writeModCount(state.getModCount());
-        
-        // shared set (list of parent uuids)
-        Collection<NodeId> collShared = state.getSharedSet();
-        out.writeInt(collShared.size()); // count
-        for (Iterator<NodeId> iter = collShared.iterator(); iter.hasNext();) {
-            writeNodeId(iter.next());
-        }
-    }
-
-    /**

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL40 DEL34 DEL27 DEL36 DEL40 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31