Omit check for existing prop/node upon Workspace.move()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@581636 13f79535-47bb-0310-9956-ffa450edef68

-                                   HierarchyManager hierMgr, NamespaceResolver nsResolver)
+                                   HierarchyManager hierMgr,
+                                   NamespaceResolver nsResolver,
+                                   boolean sessionMove)
-        // lazy check for existing items at destination. since the hierarchy
-        // may not be complete it is possible that an conflict is only detected
-        // upon saving the 'move'.
+        // for session-move perform a lazy check for existing items at destination.
+        // since the hierarchy may not be complete it is possible that an conflict
+        // is only detected upon saving the 'move'.
-        if (destEntry.hasPropertyEntry(destName)) {
-            throw new ItemExistsException("Move destination already exists (Property).");
-        } else if (destEntry.hasNodeEntry(destName)) {
-            NodeEntry existing = destEntry.getNodeEntry(destName, Path.INDEX_DEFAULT);
-            if (existing != null) {
-                try {
-                    if (!existing.getNodeState().getDefinition().allowsSameNameSiblings()) {
-                        throw new ItemExistsException("Node existing at move destination does not allow same name siblings.");
+        if (sessionMove) {
+            if (destEntry.hasPropertyEntry(destName)) {
+                throw new ItemExistsException("Move destination already exists (Property).");
+            }
+            if (destEntry.hasNodeEntry(destName)) {
+                NodeEntry existing = destEntry.getNodeEntry(destName, Path.INDEX_DEFAULT);
+                if (existing != null) {
+                    try {
+                        if (!existing.getNodeState().getDefinition().allowsSameNameSiblings()) {
+                            throw new ItemExistsException("Node existing at move destination does not allow same name siblings.");
+                        }
+                    } catch (ItemNotFoundException e) {
+                        // existing apparent not valid any more -> probably no conflict
-                } catch (ItemNotFoundException e) {
-                    // existing apparent not valid any more -> probably no conflict

INS44 INS39 INS42 INS42 INS8 INS25 MOV25 MOV32 MOV8