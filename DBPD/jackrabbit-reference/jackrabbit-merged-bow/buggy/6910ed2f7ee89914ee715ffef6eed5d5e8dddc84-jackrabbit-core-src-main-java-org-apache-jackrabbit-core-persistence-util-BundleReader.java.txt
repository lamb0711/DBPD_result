JCR-2762: Optimize bundle serialization

Remove unused code from BundleReader and BundleWriter.

Un-deprecate the BLOBStore class to avoid deprecation warnings from all over the place where we still need id for backwards compatibility.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1004230 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.persistence.PersistenceManager;
-import org.apache.jackrabbit.core.state.NodeState;
-     * Deserializes a <code>NodeState</code> from the data input stream.
-     *
-     * @param id the id of the nodestate to read
-     * @param pMgr the persistence manager
-     * @return the node state
-     * @throws IOException in an I/O error occurs.
-     */
-    private NodeState readState(NodeId id, PersistenceManager pMgr)
-            throws IOException {
-        NodeState state = pMgr.createNew(id);
-        // primaryType & version
-        int index = in.readInt();
-        int version = (index >> 24) & 0x0ff;
-        String uri = binding.nsIndex.indexToString(index & 0x0ffffff);
-        String local = in.readUTF();
-        state.setNodeTypeName(NameFactoryImpl.getInstance().create(uri, local));
-
-        // parentUUID
-        state.setParentId(readNodeId());
-        // definitionId
-        in.readUTF();
-
-        // mixin types
-        int count = in.readInt();   // count
-        Set<Name> set = new HashSet<Name>(count);
-        for (int i = 0; i < count; i++) {
-            set.add(readQName()); // name
-        }
-        if (set.size() > 0) {
-            state.setMixinTypeNames(set);
-        }
-        // properties (names)
-        count = in.readInt();   // count
-        for (int i = 0; i < count; i++) {
-            state.addPropertyName(readIndexedQName()); // name
-        }
-        // child nodes (list of name/uuid pairs)
-        count = in.readInt();   // count
-        for (int i = 0; i < count; i++) {
-            Name name = readQName();
-            NodeId parentId = readNodeId();
-            state.addChildNodeEntry(name, parentId);
-        }
-
-        if (version >= BundleBinding.VERSION_1) {
-            state.setModCount(readModCount());
-        }
-        if (version >= BundleBinding.VERSION_2) {
-            // shared set (list of parent uuids)
-            count = in.readInt();   // count
-            for (int i = 0; i < count; i++) {
-                state.addShare(readNodeId());
-            }
-        }
-        return state;
-    }
-
-    /**

DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL34 DEL27 DEL36 DEL34 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL40 DEL42 DEL42 DEL34 DEL27 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL40 DEL27 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31