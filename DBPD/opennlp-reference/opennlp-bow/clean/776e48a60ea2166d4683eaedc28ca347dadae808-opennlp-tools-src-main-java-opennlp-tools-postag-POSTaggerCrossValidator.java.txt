OPENNLP-508 Included the mutable dictionary capability to the POSTagger trainer and cross validator tools

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1335756 13f79535-47bb-0310-9956-ffa450edef68

+
+  private Integer tagdicCutoff = null;
-      Integer ngramCutoff, String factoryClass,
+      Integer ngramCutoff, Integer tagdicCutoff, String factoryClass,
+    this.tagdicCutoff = tagdicCutoff;
+      Integer tagdicCutoff, POSTaggerEvaluationMonitor... listeners) {
+    this.languageCode = languageCode;
+    this.params = trainParam;
+    this.listeners = listeners;
+    this.factory = factory;
+    this.tagDictionary = null;
+    this.ngramDictionary = null;
+    this.ngramCutoff = null;
+    this.tagdicCutoff = tagdicCutoff;
+  }
+  
+  /**
+   * Creates a {@link POSTaggerCrossValidator} using the given
+   * {@link POSTaggerFactory}.
+   */
+  public POSTaggerCrossValidator(String languageCode,
+      TrainingParameters trainParam, Integer posdicCutoff, POSTaggerFactory factory,
+    this.tagdicCutoff = posdicCutoff;
-  
+
-    this(languageCode, create(modelType, cutoff, iterations), create(ngramDictionary, tagDictionary));
+    this(languageCode, create(modelType, cutoff, iterations), null, create(ngramDictionary, tagDictionary));
-    this(languageCode, create(modelType, 5, 100), create(ngramDictionary, tagDictionary));
+    this(languageCode, create(modelType, 5, 100), null, create(ngramDictionary, tagDictionary));
-    this(languageCode, trainParam, create(null, tagDictionary), listeners);
+    this(languageCode, trainParam, null, create(null, tagDictionary), listeners);
-    this(languageCode, trainParam, tagDictionary, ngramCutoff,
+    this(languageCode, trainParam, tagDictionary, ngramCutoff, null,
-    this(languageCode, trainParam, create(ngramDictionary, tagDictionary), listeners);
+    this(languageCode, trainParam, null, create(ngramDictionary, tagDictionary), listeners);
+      if (this.tagdicCutoff != null) {
+        POSDictionary dict = this.factory.getPOSDictionary();
+        if (dict == null) {
+          dict = this.factory.createEmptyPOSDictionary();
+        }
+        if (dict instanceof MutableTagDictionary) {
+          POSTaggerME.populatePOSDictionary(trainingSampleStream, dict,
+              this.tagdicCutoff);
+        } else {
+          throw new IllegalArgumentException(
+              "Can't extend a POSDictionary that does not implement MutableTagDictionary.");
+        }
+        trainingSampleStream.reset();
+      }
+
+      if (this.tagdicCutoff != null) {
+        this.factory.rereadPOSDictionary();
+      }
+
