OPENNLP-922: Refactor equals and hashCode, add missing hashCode

This closes #42

Also adds a checkstyle rule to enforce presence
of both hashCode and equals

+import java.util.Objects;
-  public boolean equals(Object o) {
+  public int hashCode() {
-    if (o == this) {
+    int[] keyHashes = new int[dictionary.size()];
+    int[] valueHashes = new int[dictionary.size()];
+
+    int i = 0;
+
+    for (String word : this) {
+      keyHashes[i] = word.hashCode();
+      valueHashes[i] = Arrays.hashCode(getTags(word));
+      i++;
+    }
+
+    Arrays.sort(keyHashes);
+    Arrays.sort(valueHashes);
+
+    return Objects.hash(Arrays.hashCode(keyHashes), Arrays.hashCode(valueHashes));
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (obj == this) {
-    else if (o instanceof POSDictionary) {
-      POSDictionary dictionary = (POSDictionary) o;
-      if (this.dictionary.size() == dictionary.dictionary.size()) {
+    if (obj instanceof POSDictionary) {
+      POSDictionary posDictionary = (POSDictionary) obj;
+      if (this.dictionary.size() == posDictionary.dictionary.size()) {
-
-          String aTags[] = getTags(word);
-          String bTags[] = dictionary.getTags(word);
-
-          if (!Arrays.equals(aTags, bTags)) {
+          if (!Arrays.equals(getTags(word), posDictionary.getTags(word))) {
