OPENNLP-950: Deprecate DocumentCategorizer.categorzie(String) variants, this closes apache/opennlp#79

+    this.tokenizer = WhitespaceTokenizer.INSTANCE;
+  }
+
+  public DoccatFactory(final FeatureGenerator[] featureGenerators) {
+    this.tokenizer = WhitespaceTokenizer.INSTANCE;
+    this.featureGenerators = featureGenerators;
+   * @deprecated will be removed after 1.7.1 release. Don't use it.
+  @Deprecated
+  /**
+   * @deprecated will be removed after 1.7.1 release. Don't use it.
+   * @param tokenizer the tokenizer
+   * @param featureGenerators feature generators
+   */
+  @Deprecated
+  protected void init(FeatureGenerator[] featureGenerators) {
+    this.featureGenerators = featureGenerators;
+  }
+
+  /**
+   * @deprecated will be removed after 1.7.1 release. Don't use it.
+   */
+  @Deprecated
+  public static DoccatFactory create(String subclassName, FeatureGenerator[] featureGenerators)
+      throws InvalidFormatException {
+    if (subclassName == null) {
+      // will create the default factory
+      return new DoccatFactory(featureGenerators);
+    }
+    try {
+      DoccatFactory theFactory = ExtensionLoader.instantiateExtension(
+          DoccatFactory.class, subclassName);
+      theFactory.init(featureGenerators);
+      return theFactory;
+    } catch (Exception e) {
+      String msg = "Could not instantiate the " + subclassName
+          + ". The initialization throw an exception.";
+      System.err.println(msg);
+      e.printStackTrace();
+      throw new InvalidFormatException(msg, e);
+    }
+  }
+
+  /**
+   * @deprecated will be removed after 1.7.1 release. Don't use it.
+   */
+  @Deprecated
+  /**
+   * @deprecated will be removed after 1.7.1 release. Don't use it.
+   * @param tokenizer tokenizer
+   */
+  @Deprecated
