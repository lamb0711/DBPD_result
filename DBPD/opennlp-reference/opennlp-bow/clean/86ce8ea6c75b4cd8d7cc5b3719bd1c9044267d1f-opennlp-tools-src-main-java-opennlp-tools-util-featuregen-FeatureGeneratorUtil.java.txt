OPENNLP-172 Deprecated fast token feature generator and it is used as default for token class now.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1103730 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.regex.Pattern;
-
-  private static Pattern lowercase;
-  private static Pattern twoDigits;
-  private static Pattern fourDigits;
-  private static Pattern containsNumber;
-  private static Pattern containsLetter;
-  private static Pattern containsHyphens;
-  private static Pattern containsBackslash;
-  private static Pattern containsComma;
-  private static Pattern containsPeriod;
-  private static Pattern allCaps;
-  private static Pattern capPeriod;
-  private static Pattern initialCap;
-
-  static {
-    lowercase = Pattern.compile("^[a-z]+$");
-    twoDigits = Pattern.compile("^[0-9][0-9]$");
-    fourDigits = Pattern.compile("^[0-9][0-9][0-9][0-9]$");
-    containsNumber = Pattern.compile("[0-9]");
-    containsLetter = Pattern.compile("[a-zA-Z]");
-    containsHyphens = Pattern.compile("-");
-    containsBackslash = Pattern.compile("/");
-    containsComma = Pattern.compile(",");
-    containsPeriod = Pattern.compile("\\.");
-    allCaps = Pattern.compile("^[A-Z]+$");
-    capPeriod = Pattern.compile("^[A-Z]\\.$");
-    initialCap = Pattern.compile("^[A-Z]");
-  }
-
-    String feat;
-    if (lowercase.matcher(token).find()) {
-      feat = "lc";
-    }
-    else if (twoDigits.matcher(token).find()) {
-      feat = "2d";
-    }
-    else if (fourDigits.matcher(token).find()) {
-      feat = "4d";
-    }
-    else if (containsNumber.matcher(token).find()) {
-      if (containsLetter.matcher(token).find()) {
-        feat = "an";
-      }
-      else if (containsHyphens.matcher(token).find()) {
-        feat = "dd";
-      }
-      else if (containsBackslash.matcher(token).find()) {
-        feat = "ds";
-      }
-      else if (containsComma.matcher(token).find()) {
-        feat = "dc";
-      }
-      else if (containsPeriod.matcher(token).find()) {
-        feat = "dp";
-      }
-      else {
-        feat = "num";
-      }
-    }
-    else if (allCaps.matcher(token).find() && token.length() == 1) {
-      feat = "sc";
-    }
-    else if (allCaps.matcher(token).find()) {
-      feat = "ac";
-    }
-    else if (capPeriod.matcher(token).find()) {
-      feat = "cp";
-    }
-    else if (initialCap.matcher(token).find()) {
-      feat = "ic";
-    }
-    else {
-      feat = "other";
-    }
-
-    return (feat);
+    return FastTokenClassFeatureGenerator.tokenFeature(token);
