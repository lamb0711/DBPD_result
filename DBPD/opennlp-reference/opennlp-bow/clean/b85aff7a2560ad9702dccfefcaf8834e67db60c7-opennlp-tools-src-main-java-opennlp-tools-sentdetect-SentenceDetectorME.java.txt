OPENNLP-602 Fixed handling of white space only sentences.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1561481 13f79535-47bb-0310-9956-ffa450edef68

- * A maximum entropy model is used to evaluate the characters ".", "!", and "?" in a
+ * A maximum entropy model is used to evaluate end-of-sentence characters in a
-  
-  // Note: That should be inlined when doing a re-factoring!
-  private static final Double ONE = new Double(1);
-    // Now convert the sent indexes to spans
+    // Convert the sentence end indexes to spans
+    
-    Span[] spans = new Span[leftover? starts.length + 1 : starts.length];
-    for (int si=0;si<starts.length;si++) {
-      int start,end;
+    List<Span> spans = new ArrayList<Span>(leftover? starts.length + 1 : starts.length);
+    
+    for (int si=0; si < starts.length; si++) {
+      int start;
+      
-        
-        while (si < starts.length && StringUtil.isWhitespace(s.charAt(start)))
-          start++;
-      end = starts[si];
-      while (end > 0 && StringUtil.isWhitespace(s.charAt(end-1))) {
-        end--;
+      
+      // A span might contain only white spaces, in this case the length of
+      // the span will be zero after trimming and should be ignored.
+      Span span = new Span(start, starts[si]).trim(s);
+      if (span.length() > 0) {
+        spans.add(span);
-      spans[si]=new Span(start,end);
+      else {
+        sentProbs.remove(si);
+      }
-      spans[spans.length-1] = new Span(starts[starts.length-1],s.length());
-      sentProbs.add(ONE);
+      Span span = new Span(starts[starts.length-1],s.length()).trim(s);
+      if (span.length() > 0) {
+        spans.add(span);
+        sentProbs.add(1d);
+      }
-    return spans;
+    return spans.toArray(new Span[spans.size()]);
