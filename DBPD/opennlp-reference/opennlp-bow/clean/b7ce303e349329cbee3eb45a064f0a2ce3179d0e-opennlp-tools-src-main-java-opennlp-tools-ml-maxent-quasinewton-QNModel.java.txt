OPENNLP-922: Refactor equals and hashCode, add missing hashCode

This closes #42

Also adds a checkstyle rule to enforce presence
of both hashCode and equals

-
-  public boolean equals(Object obj) {
-    if (!(obj instanceof QNModel))
-      return false;
-
-    QNModel objModel = (QNModel) obj;
-    if (this.outcomeNames.length != objModel.outcomeNames.length)
-      return false;
-    for (int i = 0; i < this.outcomeNames.length; i++) {
-      if (!this.outcomeNames[i].equals(objModel.outcomeNames[i]))
-        return false;
-    }
-
-    if (this.pmap.size() != objModel.pmap.size())
-      return false;
-    String[] pmapArray = new String[pmap.size()];
-    for (String pred : pmap.keySet()) {
-      pmapArray[pmap.get(pred)] = pred;
-    }
-
-    for (int i = 0; i < this.pmap.size(); i++) {
-      if (i != objModel.pmap.get(pmapArray[i]))
-        return false;
-    }
-
-    // compare evalParameters
-    Context[] contextComparing = objModel.evalParams.getParams();
-    if (this.evalParams.getParams().length != contextComparing.length)
-      return false;
-    for (int i = 0; i < this.evalParams.getParams().length; i++) {
-      if (this.evalParams.getParams()[i].getOutcomes().length != contextComparing[i].getOutcomes().length)
-        return false;
-      for (int j = 0; i < this.evalParams.getParams()[i].getOutcomes().length; i++) {
-        if (this.evalParams.getParams()[i].getOutcomes()[j] != contextComparing[i].getOutcomes()[j])
-          return false;
-      }
-
-      if (this.evalParams.getParams()[i].getParameters().length != contextComparing[i].getParameters().length)
-        return false;
-      for (int j = 0; i < this.evalParams.getParams()[i].getParameters().length; i++) {
-        if (this.evalParams.getParams()[i].getParameters()[j] != contextComparing[i].getParameters()[j])
-          return false;
-      }
-    }
-    return true;
-  }
-}
+}
