OPENNLP-762 The beam size specified in the params is now written in the model and used in the POS Tagger

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1664645 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.namefind.NameFinderME;
+  public static final int DEFAULT_BEAM_SIZE = 3;
+  
-  public static final int DEFAULT_BEAM_SIZE = 3;
+   * 
+   * @deprecated the beam size should be specified in the params during training
+  @Deprecated
-    this(model, DEFAULT_BEAM_SIZE, 0);
+    POSTaggerFactory factory = model.getFactory();
+
+    int beamSize = POSTaggerME.DEFAULT_BEAM_SIZE;
+    
+    String beamSizeString = model.getManifestProperty(BeamSearch.BEAM_SIZE_PARAMETER);
+    
+    if (beamSizeString != null) {
+      beamSize = Integer.parseInt(beamSizeString);
+    }
+    
+    modelPackage = model;
+
+    contextGen = factory.getPOSContextGenerator(beamSize);
+    tagDictionary = factory.getTagDictionary();
+    size = beamSize;
+
+    sequenceValidator = factory.getSequenceValidator();
+
+    if (model.getPosSequenceModel() != null) {
+      this.model = model.getPosSequenceModel();
+    }
+    else {
+      this.model = new opennlp.tools.ml.BeamSearch<String>(beamSize,
+          model.getPosModel(), 0);
+    }
+
-    int beamSize = NameFinderME.DEFAULT_BEAM_SIZE;
+    int beamSize = POSTaggerME.DEFAULT_BEAM_SIZE;
-      return new POSModel(languageCode, posModel, manifestInfoEntries, posFactory);
+      return new POSModel(languageCode, posModel, beamSize, manifestInfoEntries, posFactory);
