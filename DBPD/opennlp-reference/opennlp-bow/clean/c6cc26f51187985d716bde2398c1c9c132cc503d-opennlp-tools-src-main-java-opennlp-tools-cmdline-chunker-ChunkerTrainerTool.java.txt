OPENNLP-227 Updated Chunker trainer and cv tools

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1147993 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.cmdline.BasicTrainingParameters;
+import opennlp.tools.cmdline.ArgumentParser;
+import opennlp.tools.cmdline.TrainingToolParams;
+  
+  interface TrainerToolParams extends TrainingParams, TrainingToolParams{
+
+  }
-    return "Usage: " + CLI.CMD + " " + getName()
-        + BasicTrainingParameters.getParameterUsage() + " -data trainingData -model model\n" +
-        BasicTrainingParameters.getDescription();
+    return "Usage: " + CLI.CMD + " " + getName() + " "
+        + ArgumentParser.createUsage(TrainingToolParams.class);
-    if (args.length < 8) {
-      System.out.println(getHelp());
+    if (!ArgumentParser.validateArguments(args, TrainerToolParams.class)) {
+      System.err.println(getHelp());
-    BasicTrainingParameters parameters = new BasicTrainingParameters(args);
-    
-    if(!parameters.isValid()) {
-      System.out.println(getHelp());
-      throw new TerminateToolException(1);
-    }
+    TrainerToolParams params = ArgumentParser.parse(args,
+        TrainerToolParams.class);
-      CmdLineUtil.loadTrainingParameters(CmdLineUtil.getParameter("-params", args), false);
+      CmdLineUtil.loadTrainingParameters(params.getParams(), false);
-    File trainingDataInFile = new File(CmdLineUtil.getParameter("-data", args));
-    File modelOutFile = new File(CmdLineUtil.getParameter("-model", args));
+    File trainingDataInFile = params.getData();
+    File modelOutFile = params.getModel();
-      openSampleData("Training", trainingDataInFile, parameters.getEncoding());
+      openSampleData("Training", trainingDataInFile, params.getEncoding());
-        model = ChunkerME.train(parameters.getLanguage(), sampleStream, 
-            parameters.getCutoff(), parameters.getNumberOfIterations());
+        model = ChunkerME.train(params.getLang(), sampleStream, 
+            params.getCutoff(), params.getIterations());
-        model = ChunkerME.train(parameters.getLanguage(), sampleStream, 
+        model = ChunkerME.train(params.getLang(), sampleStream, 
