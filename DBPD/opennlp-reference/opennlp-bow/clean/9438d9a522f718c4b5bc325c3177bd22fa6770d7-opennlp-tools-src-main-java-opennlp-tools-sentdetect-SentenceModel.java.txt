OPENNLP-428: now the eos chars are configurable from command line and persisted to the model. Thanks to Katrin Tomanek for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1242761 13f79535-47bb-0310-9956-ffa450edef68

-
+  private static final String EOS_CHARACTERS_PROPERTY = "eosCharacters";
+  
+
+  
-      boolean useTokenEnd, Dictionary abbreviations, Map<String, String> manifestInfoEntries) {
+      boolean useTokenEnd, Dictionary abbreviations, char[] eosCharacters, Map<String, String> manifestInfoEntries) {
-        artifactMap.put(ABBREVIATIONS_ENTRY_NAME, abbreviations);
+      artifactMap.put(ABBREVIATIONS_ENTRY_NAME, abbreviations);
+    // EOS characters are optional
+    if (eosCharacters!=null)
+      setManifestProperty(EOS_CHARACTERS_PROPERTY, eosCharArrayToString(eosCharacters));
+      
+
+  
-      boolean useTokenEnd, Dictionary abbreviations) {
-    this (languageCode, sentModel, useTokenEnd, abbreviations, null);
+      boolean useTokenEnd, Dictionary abbreviations, char[] eosCharacters) {
+    this (languageCode, sentModel, useTokenEnd, abbreviations, eosCharacters, null);
+  public char[] getEosCharacters() {
+    String prop = getManifestProperty(EOS_CHARACTERS_PROPERTY);
+	if (prop != null)
+	  return eosStringToCharArray(getManifestProperty(EOS_CHARACTERS_PROPERTY));
+	else 
+	  return null;
+  }
+  
+  private String eosCharArrayToString(char[] eosCharacters) {
+	String eosString = "";
+	for (int i = 0; i < eosCharacters.length; i++) 
+	  eosString += eosCharacters[i];
+	return eosString;
+  }
+  
+  private char[] eosStringToCharArray(String eosCharacters) {
+	return eosCharacters.toCharArray();
+  }
+  
-    SentenceModel packageModel = new SentenceModel(languageCode, model, useTokenEnd, abbreviations);
+    SentenceModel packageModel = new SentenceModel(languageCode, model, useTokenEnd, abbreviations,null);
