OPENNLP-641 Moved beam search parameter to the training parameters file

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1574453 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Properties;
+import opennlp.tools.ml.BeamSearch;
+  public static final String BEAMSEARCH_BEAM_SIZE_PARAMETER = "BeamSize";
+  
-    // if (!isModelValid(nameFinderModel)) {
+    //if (!isModelValid(nameFinderModel)) {
-    // }
+    //}
-  
-  public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel,
+
+  public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel, int beamSize,
-    
-
+    
+    
+    Properties manifest = (Properties) artifactMap.get(MANIFEST_ENTRY);
+    manifest.put(TokenNameFinderModel.BEAMSEARCH_BEAM_SIZE_PARAMETER, Integer.toString(beamSize));
+    
+  
+  // TODO: Extend this one with beam size!
+  public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel,
+      byte[] generatorDescriptor, Map<String, Object> resources, Map<String, String> manifestInfoEntries) {
+    this(languageCode, nameFinderModel, NameFinderME.DEFAULT_BEAM_SIZE, 
+        generatorDescriptor, resources, manifestInfoEntries);
+  }
-    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
+    
+    Properties manifest = (Properties) artifactMap.get(MANIFEST_ENTRY);
+    
+    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof MaxentModel) {
+      String beamSizeString = manifest.getProperty(BEAMSEARCH_BEAM_SIZE_PARAMETER);
+      
+      int beamSize = NameFinderME.DEFAULT_BEAM_SIZE;
+      if (beamSizeString != null) {
+        beamSize = Integer.parseInt(beamSizeString);
+      }
+      
+      return new BeamSearch<>(beamSize, (MaxentModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME));
+    }
+    else if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
