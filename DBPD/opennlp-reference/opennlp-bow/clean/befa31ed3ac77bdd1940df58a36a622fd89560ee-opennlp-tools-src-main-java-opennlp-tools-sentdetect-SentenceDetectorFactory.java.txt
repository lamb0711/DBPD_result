OPENNLP-434: Implemented the create method.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1292636 13f79535-47bb-0310-9956-ffa450edef68

+import java.lang.reflect.Constructor;
-      Dictionary abbreviationDictionary, char[] eosCharacters) {
-    // TODO: implement
-    return null;
+      Dictionary abbreviationDictionary, char[] eosCharacters)
+      throws InvalidFormatException {
+    if (subclassName == null) {
+      // will create the default factory
+      return new SentenceDetectorFactory(languageCode, useTokenEnd,
+          abbreviationDictionary, eosCharacters);
+    }
+    SentenceDetectorFactory theFactory = null;
+    Class<? extends BaseToolFactory> factoryClass = loadSubclass(subclassName);
+    if (factoryClass != null) {
+      try {
+        Constructor<?> constructor = null;
+        constructor = factoryClass.getConstructor(String.class, boolean.class,
+            Dictionary.class, char[].class);
+        theFactory = (SentenceDetectorFactory) constructor.newInstance(
+            languageCode, useTokenEnd, abbreviationDictionary, eosCharacters);
+      } catch (NoSuchMethodException e) {
+        String msg = "Could not instantiate the "
+            + subclassName
+            + ". The mandatory constructor (String, boolean, Dictionary, char[])) is missing.";
+        System.err.println(msg);
+        throw new IllegalArgumentException(msg);
+      } catch (Exception e) {
+        String msg = "Could not instantiate the "
+            + subclassName
+            + ". The constructor (String, boolean, Dictionary, char[]) throw an exception.";
+        System.err.println(msg);
+        e.printStackTrace();
+        throw new InvalidFormatException(msg);
+      }
+    }
+    return theFactory;
