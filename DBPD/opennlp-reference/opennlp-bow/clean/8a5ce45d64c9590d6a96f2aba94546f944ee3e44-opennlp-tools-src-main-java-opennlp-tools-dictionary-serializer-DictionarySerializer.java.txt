OPENNLP-239: refactored the classes to have single case sensitivity flag.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1153728 13f79535-47bb-0310-9956-ffa450edef68

-
+    
-       if (ENTRY_ELEMENT.equals(localName)) {
+       if (DICTIONARY_ELEMENT.equals(localName)) {
+
+         mAttributes = new Attributes();
+         
+         for (int i = 0; i < atts.getLength(); i++) {
+           mAttributes.setValue(atts.getLocalName(i), atts.getValue(i));
+         }
+         /* get the attribute here ... */
+         if (mAttributes.getValue(ATTRIBUTE_CASE) != null) {
+           mIsCaseSensitiveDictionary = Boolean.valueOf(mAttributes.getValue(ATTRIBUTE_CASE));   
+         }
+         mAttributes = null;
+       } 
+       else if (ENTRY_ELEMENT.equals(localName)) {
+         mIsInsideTokenElement = false;
-       else if (TOKEN_ELEMENT.equals(localName)) {
-         mIsInsideTokenElement = false;
-       }
+  private static final String ATTRIBUTE_CASE = "case";
+  private static boolean mIsCaseSensitiveDictionary;
+  
-  public static void create(InputStream in, EntryInserter inserter)
+  public static boolean create(InputStream in, EntryInserter inserter)
+    mIsCaseSensitiveDictionary = false;
+    
+    return mIsCaseSensitiveDictionary;
-  public static void serialize(OutputStream out, Iterator<Entry> entries)
+  public static void serialize(OutputStream out, Iterator<Entry> entries, 
+          boolean casesensitive)
+      AttributesImpl dictionaryAttributes = new AttributesImpl();
-      hd.startElement("", "", DICTIONARY_ELEMENT, new AttributesImpl());
+      if (casesensitive) {
+        dictionaryAttributes.addAttribute("", "", ATTRIBUTE_CASE,
+                  "", String.valueOf(casesensitive));
+      }
+      hd.startElement("", "", DICTIONARY_ELEMENT, dictionaryAttributes);
