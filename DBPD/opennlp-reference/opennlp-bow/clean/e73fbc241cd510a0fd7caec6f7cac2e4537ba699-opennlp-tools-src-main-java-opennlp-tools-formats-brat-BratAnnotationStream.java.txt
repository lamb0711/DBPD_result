OPENNLP-1193: Add support for multi fragment annotation


+import java.util.ArrayList;
+import java.util.List;
-        int endOffset = -1;
-
+        int beginIndex = parseInt(values[BEGIN_OFFSET].getCoveredText(line).toString());
+
+        List<Span> fragments = new ArrayList<>();
+
-          if (!values[i].getCoveredText(line).toString().contains(";")) {
+
+          int endOffset;
+          int nextBeginOffset = -1;
+          if (values[i].getCoveredText(line).toString().contains(";")) {
+            String[] parts = values[i].getCoveredText(line).toString().split(";");
+            endOffset = parseInt(parts[0]);
+            fragments.add(new Span(beginIndex, endOffset, type));
+            beginIndex = parseInt(parts[1]);
+          }
+          else {
+            fragments.add(new Span(beginIndex, endOffset, type));
-          return new SpanAnnotation(id, type, new Span(parseInt(values[BEGIN_OFFSET]
-              .getCoveredText(line).toString()), endOffset, type), coveredText);
+          return new SpanAnnotation(id, type, fragments.toArray(new Span[fragments.size()]), coveredText);
