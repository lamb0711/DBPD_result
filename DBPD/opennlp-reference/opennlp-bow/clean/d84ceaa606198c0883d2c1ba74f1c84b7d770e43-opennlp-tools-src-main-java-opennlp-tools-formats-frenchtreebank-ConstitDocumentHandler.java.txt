OPENNLP-342 Fixed one more bug in compound word handling.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1334959 13f79535-47bb-0310-9956-ffa450edef68

-  private static final String COMPOUND_ATTR_NAME = "compound";
-  private String compoundCat;
+  private String cat;
+  private String subcat;
-    boolean isCompoundWord = false;
-    
-      // insideCompoundElement
-      if (attributes.getValue(COMPOUND_ATTR_NAME) != null) {
-        isCompoundWord = "yes".equals(attributes.getValue(COMPOUND_ATTR_NAME));
+      // Note:
+      // If there are compound words they are represented in a couple
+      // of ways in the training data.
+      // Many of them are marked with the compound attribute, but not 
+      // all of them. Thats why it is not used in the code to detect
+      // a compound word.
+      // Compounds are detected by the fact that a w tag is appearing
+      // inside a w tag.
+      //
+      // The type of a compound word can be encoded either cat of the compound
+      // plus the catint of each word of the compound.
+      // Or all compound words have the cat plus subcat of the compound, in this
+      // case they have an empty cat attribute.
+      //
+      // This implementation hopefully decodes these cases correctly!
+      
+      String newCat = attributes.getValue("cat");
+      if (newCat != null && newCat.length() > 0) {
+        cat = newCat;
-      String cat = attributes.getValue("cat");
-      
-      if (isCompoundWord) {
-        compoundCat = cat;
+      String newSubcat = attributes.getValue("subcat");
+      if (newSubcat != null && newSubcat.length() > 0) {
+        subcat = newSubcat;
-        String subcat = attributes.getValue("subcat");
-        type = compoundCat + (catint != null ? catint : "");
+        if (catint != null) {
+          type = cat + (catint != null ? catint : "");
+        }
+        else {
+          type = cat + subcat;
+        }
-          cons.add(new Constituent(unfinishedCon.getLabel(), new Span(start, offset-1)));
+          cons.add(new Constituent(unfinishedCon.getLabel(), new Span(start, offset - 1)));
