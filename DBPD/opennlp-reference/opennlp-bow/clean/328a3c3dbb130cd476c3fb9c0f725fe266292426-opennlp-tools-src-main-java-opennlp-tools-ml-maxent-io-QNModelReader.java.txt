OPENNLP-569 Attached is the patch for the current L-BFGS implementation. It includes bug fixes for numerical overflow when calculating sum of exponential functions and the formula error when computing log-likelihood. Thanks to Vinh Khuc for poviding a patch.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1584282 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.ml.model.AbstractModel;
-import opennlp.tools.ml.model.AbstractModelReader;
-public class QNModelReader extends AbstractModelReader {
-
+public class QNModelReader extends GISModelReader {
-
+  
-
+  
-  @Override
-  public AbstractModel constructModel() throws IOException {
-	String[] predNames = getPredicates();
-    String[] outcomeNames = getOutcomes();
-    Context[] params = getParameters();
-    double[] parameters = getDoubleArrayParams();
-    return new QNModel(predNames, outcomeNames, params, parameters);
-  }
-  
-  private double[] getDoubleArrayParams() throws IOException {
-    int numDouble = readInt();
-    double[] doubleArray = new double[numDouble];
-    for (int i=0; i < numDouble; i++) 
-      doubleArray[i] = readDouble();
-    return doubleArray;
-  }
+  public QNModel constructModel() throws IOException {
+    String[] outcomeLabels = getOutcomes();
+    int[][] outcomePatterns = getOutcomePatterns();
+    String[] predLabels = getPredicates();
+    Context[] params = getParameters(outcomePatterns);
-  private int[] getIntArrayParams() throws IOException {
-    int numInt = readInt();
-    int[] intArray = new int[numInt];
-    for (int i=0; i < numInt; i++) 
-    	intArray[i] = readInt();
-    return intArray;
+    return new QNModel(params, predLabels, outcomeLabels);
-  
-  protected Context[] getParameters() throws java.io.IOException {
-	int numContext = readInt();
-	Context[] params = new Context[numContext];
-	
-	for (int i = 0; i < numContext; i++) {
-	  int[] outcomePattern = getIntArrayParams();
-	  double[] parameters = getDoubleArrayParams();
-	  params[i] = new Context(outcomePattern, parameters);
-	}
-	return params;
-  }
-}
+}
