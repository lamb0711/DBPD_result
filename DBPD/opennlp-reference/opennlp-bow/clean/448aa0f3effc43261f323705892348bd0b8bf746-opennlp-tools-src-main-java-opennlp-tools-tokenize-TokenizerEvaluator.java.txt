OPENNLP-226 Refactored the evaluator listeners:

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1159270 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.util.eval.MissclassifiedSampleListener;
-  private MissclassifiedSampleListener<TokenSample> sampleListener;
-  
-  /**
-   * Initializes the current instance with the
-   * given {@link Tokenizer}.
-   *
-   * @param tokenizer the {@link Tokenizer} to evaluate.
-   * @param sampleListener
-   *          an optional {@link MissclassifiedSampleListener} listener to
-   *          notify errors
-   */
-  public TokenizerEvaluator(Tokenizer tokenizer, MissclassifiedSampleListener<TokenSample> sampleListener) {
-    this.tokenizer = tokenizer;
-    this.sampleListener = sampleListener;
-  }
-  
-  /**
-   * Evaluates the given reference {@link TokenSample} object.
-   *
-   * This is done by detecting the token spans with the
-   * {@link Tokenizer}. The detected token spans are then
-   * used to calculate calculate and update the scores.
-   *
-   * @param reference the reference {@link TokenSample}.
-   */
-  public void evaluateSample(TokenSample reference) {
+  @Override
+  public TokenSample processSample(TokenSample reference) {
-
-    if (this.sampleListener != null) {
-      TokenSample predicted = new TokenSample(reference.getText(), predictions);
-      if(!predicted.equals(reference)) {
-        this.sampleListener.missclassified(reference, predicted);
-      }
-    }
-
+    
+    return new TokenSample(reference.getText(), predictions);
