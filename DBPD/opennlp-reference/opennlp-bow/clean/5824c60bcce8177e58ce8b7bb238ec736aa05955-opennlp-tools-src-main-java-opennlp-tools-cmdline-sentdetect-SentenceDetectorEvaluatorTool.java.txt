OPENNLP-221 Refactored the evaluator and cross validator CLI tools of the SentenceDetector to use the Parameters interface. Please review. If it is OK I will do the same with the other tools

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1145449 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.cmdline.ArgumentParser;
+import opennlp.tools.cmdline.ArgumentParser.OptionalParameter;
+import opennlp.tools.cmdline.ArgumentParser.ParameterDescription;
+  
+  /**
+   * Create a list of expected parameters.
+   */
+  interface Parameters {
+    
+    @ParameterDescription(valueName = "charsetName", description = "specifies the encoding which should be used for reading and writing text")
+    @OptionalParameter(defaultValue="UTF-8")
+    String getEncoding();
+    
+    @ParameterDescription(valueName = "model")
+    String getModel();
+    
+    @ParameterDescription(valueName = "data")
+    String getData();
+  }
-    return "Usage: " + CLI.CMD + " " + getName() + " -encoding charset -model model -data testData";
+    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(Parameters.class);
-    if (args.length != 6) {
-      System.out.println(getHelp());
+    
+    if (!ArgumentParser.validateArguments(args, Parameters.class)) {
+      System.err.println(getHelp());
-    Charset encoding = CmdLineUtil.getEncodingParameter(args);
+    Parameters params = ArgumentParser.parse(args, Parameters.class);
+    
+    Charset encoding = Charset.forName(params.getEncoding());
-    SentenceModel model = new SentenceModelLoader().load(new File(CmdLineUtil.getParameter("-model", args)));
+    SentenceModel model = new SentenceModelLoader().load(new File(params.getModel()));
-    File trainingDataInFile = new File(CmdLineUtil.getParameter("-data", args));
+    File trainingDataInFile = new File(params.getData());
