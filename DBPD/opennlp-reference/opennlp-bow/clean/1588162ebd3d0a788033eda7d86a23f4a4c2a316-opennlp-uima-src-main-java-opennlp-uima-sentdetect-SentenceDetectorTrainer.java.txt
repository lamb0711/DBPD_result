OPENNLP-536 Added sample trace file support to the sentence detector trainer.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1383421 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.Writer;
+import opennlp.tools.util.ObjectStream;
+import opennlp.uima.util.SampleTraceStream;
+
+  private File sampleTraceFile;
+
+  private String sampleTraceFileEncoding;
+    
+    
+    String sampleTraceFileName = CasConsumerUtil.getOptionalStringParameter(
+            getUimaContext(), "opennlp.uima.SampleTraceFile");
+        
+    if (sampleTraceFileName != null) {
+      sampleTraceFile = new File(getUimaContextAdmin().getResourceManager()
+          .getDataPath() + File.separatorChar + sampleTraceFileName);
+      sampleTraceFileEncoding = CasConsumerUtil.getRequiredStringParameter(
+          getUimaContext(), "opennlp.uima.SampleTraceFileEncoding");
+    }    
-    sentenceSamples.add(new SentenceSample(cas.getDocumentText(), sentSpans));
+    // TODO: The line cleaning should be done more carefully
+    sentenceSamples.add(new SentenceSample(cas.getDocumentText().replace('\n', ' '), sentSpans));
-    SentenceModel sentenceModel = SentenceDetectorME.train(language, ObjectStreamUtils.createObjectStream(sentenceSamples),
+    ObjectStream<SentenceSample> samples = ObjectStreamUtils.createObjectStream(sentenceSamples);
+    
+    Writer samplesOut = null;
+    
+    if (sampleTraceFile != null) {
+        samplesOut = new OutputStreamWriter(new FileOutputStream(sampleTraceFile), sampleTraceFileEncoding);
+        samples = new SampleTraceStream<SentenceSample>(samples, samplesOut);
+    }
+    
+    SentenceModel sentenceModel = SentenceDetectorME.train(language, samples,
