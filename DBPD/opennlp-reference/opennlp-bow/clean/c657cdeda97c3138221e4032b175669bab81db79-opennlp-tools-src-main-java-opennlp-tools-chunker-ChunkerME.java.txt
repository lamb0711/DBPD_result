Remove deprecated methods from the Chunker

See issue OPENNLP-884

-  public ChunkerME(ChunkerModel model, int beamSize, SequenceValidator<String> sequenceValidator,
+  private ChunkerME(ChunkerModel model, int beamSize, SequenceValidator<String> sequenceValidator,
-   * @param sequenceValidator  The {@link SequenceValidator} to determines whether the outcome
-   *        is valid for the preceding sequence. This can be used to implement constraints
-   *        on what sequences are valid.
-   * @deprecated Use {@link #ChunkerME(ChunkerModel, int)} instead
-   *    and use the {@link ChunkerFactory} to configure the {@link SequenceValidator}.
-   */
-  @Deprecated
-  public ChunkerME(ChunkerModel model, int beamSize,
-      SequenceValidator<String> sequenceValidator) {
-    this(model, beamSize, sequenceValidator,
-        new DefaultChunkerContextGenerator());
-  }
-
-  /**
-   * Initializes the current instance with the specified model and
-   * the specified beam size.
-   *
-   * @param model The model for this chunker.
-   * @param beamSize The size of the beam that should be used when decoding sequences.
-  public ChunkerME(ChunkerModel model, int beamSize) {
+  private ChunkerME(ChunkerModel model, int beamSize) {
-  @Deprecated
-  public List<String> chunk(List<String> toks, List<String> tags) {
-    bestSequence =
-        model.bestSequence(toks.toArray(new String[toks.size()]), new Object[] { tags.toArray(new String[tags.size()]) },
-            contextGenerator, sequenceValidator);
-    return bestSequence.getOutcomes();
-  }
-
-  @Deprecated
-  public Sequence[] topKSequences(List<String> sentence, List<String> tags) {
-    return topKSequences(sentence.toArray(new String[sentence.size()]),
-        tags.toArray(new String[tags.size()]));
-  }
-
-
-  /**
-   * @deprecated Use
-   *             {@link ChunkerME#train(String, ObjectStream, TrainingParameters, ChunkerFactory)}
-   *             instead.
-   */
-  public static ChunkerModel train(String lang, ObjectStream<ChunkSample> in,
-      ChunkerContextGenerator contextGenerator, TrainingParameters mlParams)
-  throws IOException {
-
-    Map<String, String> manifestInfoEntries = new HashMap<String, String>();
-
-    ObjectStream<Event> es = new ChunkerEventStream(in, contextGenerator);
-
-    EventTrainer trainer = TrainerFactory.getEventTrainer(
-            mlParams.getSettings(), manifestInfoEntries);
-
-    MaxentModel maxentModel = trainer.train(es);
-
-    return new ChunkerModel(lang, maxentModel, manifestInfoEntries);
-  }
