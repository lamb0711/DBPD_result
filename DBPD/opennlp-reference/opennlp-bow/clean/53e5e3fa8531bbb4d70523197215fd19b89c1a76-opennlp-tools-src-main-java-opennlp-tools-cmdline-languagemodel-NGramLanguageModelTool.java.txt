OPENNLP-972 - add LM#predictNextTokens, rename to NGramLMTool, this closes apache/opennlp#100

-import java.util.Arrays;
- * Command line tool for {@link opennlp.tools.languagemodel.LanguageModel#calculateProbability(StringList)}.
+ * Command line tool for {@link opennlp.tools.languagemodel.NGramLanguageModel}.
-public class LanguageModelTool extends BasicCmdLineTool {
+public class NGramLanguageModelTool extends BasicCmdLineTool {
-    return "gives the probability of a sequence of tokens in a language model";
+    return "gives the probability and most probable next token(s) of a sequence of tokens in a " +
+        "language model";
-      NGramLanguageModel nGramLanguageModel = new NGramLanguageModel(
-          stream);
+      NGramLanguageModel nGramLanguageModel = new NGramLanguageModel(stream);
-        lineStream = new PlainTextByLineStream(
-            new SystemInputStreamFactory(),
+        lineStream = new PlainTextByLineStream(new SystemInputStreamFactory(),
-        perfMon = new PerformanceMonitor(System.err, "lm");
+        perfMon = new PerformanceMonitor(System.err, "nglm");
+          StringList predicted;
+          StringList sample = new StringList(tokens);
-            probability = nGramLanguageModel
-                .calculateProbability(new StringList(tokens));
+            probability = nGramLanguageModel.calculateProbability(sample);
+            predicted = nGramLanguageModel.predictNextTokens(sample);
-          System.out.println("sequence '" + Arrays.toString(tokens)
-              + "' has a probability of " + probability);
+          System.out.println(sample + " -> prob:" + probability + ", next:" + predicted);
