OPENNLP-641 Passing in the outcomes is now optinal

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1562813 13f79535-47bb-0310-9956-ffa450edef68

+  private final boolean useOutcomes;
-    this(psi, new DefaultNameContextGenerator((AdaptiveFeatureGenerator) null));
+    this(psi, new DefaultNameContextGenerator((AdaptiveFeatureGenerator) null), true);
-    this(psi, new DefaultNameContextGenerator(featureGen));
+    this(psi, new DefaultNameContextGenerator(featureGen), true);
+  }
+
+  public NameSampleSequenceStream(ObjectStream<NameSample> psi, AdaptiveFeatureGenerator featureGen, boolean useOutcomes) 
+  throws IOException {
+    this(psi, new DefaultNameContextGenerator(featureGen), useOutcomes);
+    this(psi, pcg, true);
+  }
+
+  public NameSampleSequenceStream(ObjectStream<NameSample> psi, NameContextGenerator pcg, boolean useOutcomes)
+      throws IOException {
+    this.useOutcomes = useOutcomes;
-    return new NameSampleSequenceIterator(samples.iterator());
+    return new NameSampleSequenceIterator(samples.iterator(), useOutcomes);
+  private boolean useOutcomes;
-  public NameSampleSequenceIterator(Iterator<NameSample> psi) {
+  public NameSampleSequenceIterator(Iterator<NameSample> psi, boolean useOutcomes) {
+    this.useOutcomes = useOutcomes;
-      String[] context = cg.getContext(i, sentence, tags, null);
-
+      String[] context;
+      if (useOutcomes) {
+        context = cg.getContext(i, sentence, tags, null);
+      }
+      else {
+        context = cg.getContext(i, sentence, null, null);
+      }
+      
