OPENNLP-429: Modified the BaseModel behavior to allow serializers provided by tool factories.

Changed BaseModel to allow loading artifacts and serializers in two steps. The first will load basic artifacts and serializers, so we can load the manifest. Latter we can load information from manifest (factory name), get more serializers using this information, and finally loading more artifacts and serializers. To do that I had to change the BaseModel constructor, moving some of its code two methods that can be called by the sub-class at the right time.
All Model implementations had to change to add the post constructor actions;

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1243188 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.util.BaseToolFactory;
+import opennlp.tools.util.model.ArtifactProvider;
-public class POSTaggerFactory {
+/**
+ * 
+ */
+public class POSTaggerFactory extends BaseToolFactory {
-  
-  public POSTaggerFactory() { 
+
+  /**
+   * Creates a {@link POSTaggerFactory} that provides the default implementation
+   * of the resources.
+   */
+  public POSTaggerFactory() {
-  public POSTaggerFactory(POSModel model) { 
-    if(model != null) {
-      this.ngramDictionary = model.getNgramDictionary();
-      this.posDictionary = model.getTagDictionary();
-    }
+  /**
+   * Creates a {@link POSTaggerFactory} with an {@link ArtifactProvider} that
+   * will be used to retrieve artifacts.
+   * <p>
+   * Sub-classes should implement a constructor with this signatures and call
+   * this constructor.
+   * <p>
+   * This will be used to load the factory from a serialized POSModel.
+   */
+  public POSTaggerFactory(ArtifactProvider artifactProvider) {
+    super(artifactProvider);
-  public POSTaggerFactory(Dictionary ngramDictionary, POSDictionary posDictionary) {
+  /**
+   * Creates a {@link POSTaggerFactory}. Use this constructor to
+   * programmatically create a factory.
+   * 
+   * @param ngramDictionary
+   * @param posDictionary
+   */
+  public POSTaggerFactory(Dictionary ngramDictionary,
+      POSDictionary posDictionary) {
+  public POSDictionary getPOSDictionary() {
+    return this.posDictionary;
+  }
+
-    return new DefaultPOSSequenceValidator(posDictionary);
+    return new DefaultPOSSequenceValidator(getPOSDictionary());
+
