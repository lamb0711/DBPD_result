OPENNLP-482: Updated trainer and cross validator to use TokenizerFactory

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1304680 13f79535-47bb-0310-9956-ffa450edef68

-  private final String language;
-  private final boolean alphaNumericOptimization;
-  
-  private final Dictionary abbreviations;
-  
+  private final TokenizerFactory factory;
+  public TokenizerCrossValidator(TrainingParameters params,
+      TokenizerFactory factory, TokenizerEvaluationMonitor... listeners) {
+    this.params = params;
+    this.listeners = listeners;
+    this.factory = factory;
+  }
+
+  /**
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+   */
-    this.language = language;
-    this.alphaNumericOptimization = alphaNumericOptimization;
-    this.abbreviations = abbreviations;
-    this.params = params;
-    this.listeners = listeners;
+    this(params, new TokenizerFactory(language, abbreviations,
+        alphaNumericOptimization, null), listeners);
-   * @deprecated use {@link #TokenizerCrossValidator(String, boolean, TrainingParameters, TokenizerEvaluationMonitor...)}
-   * instead and pass in a TrainingParameters object.
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+  /**
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+   */
+  /**
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+   */
-      model = TokenizerME.train(language, trainingSampleStream, abbreviations,
-          alphaNumericOptimization, params);
+      model = TokenizerME.train(trainingSampleStream, this.factory, params);
