OPENNLP-1040: Add OntoNotes4 training data verification

-import java.nio.charset.Charset;
+import java.math.BigInteger;
+import java.nio.charset.StandardCharsets;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import org.junit.BeforeClass;
+import opennlp.tools.parser.Parse;
-  private static void crossEval(TrainingParameters params, HeadRules rules, double expectedScore)
-      throws IOException {
-
+  private static ObjectStream<Parse> createParseSampleStream() throws IOException {
-    OntoNotesParseSampleStream samples = new OntoNotesParseSampleStream(
+    return new OntoNotesParseSampleStream(
-            documentStream, Charset.forName("UTF-8"))));
+            documentStream, StandardCharsets.UTF_8)));
+  }
-    ParserCrossValidator cv = new ParserCrossValidator("en", params, rules, ParserType.CHUNKING);
+  private static void crossEval(TrainingParameters params, HeadRules rules, double expectedScore)
+      throws IOException {
+    try (ObjectStream<Parse> samples = createParseSampleStream()) {
+      ParserCrossValidator cv = new ParserCrossValidator("en", params, rules, ParserType.CHUNKING);
+      cv.evaluate(samples, 10);
-    cv.evaluate(samples, 10);
+      Assert.assertEquals(expectedScore, cv.getFMeasure().getFMeasure(), 0.001d);
+    }
+  }
-    Assert.assertEquals(expectedScore, cv.getFMeasure().getFMeasure(), 0.001d);
+  @BeforeClass
+  public static void verifyTrainingData() throws IOException {
+    MessageDigest digest;
+    try {
+      digest = MessageDigest.getInstance("MD5");
+    } catch (NoSuchAlgorithmException e) {
+      throw new IllegalStateException(e);
+    }
+
+    try (ObjectStream<Parse> samples = createParseSampleStream()) {
+      Parse sample;
+      while ((sample = samples.read()) != null) {
+        digest.update(sample.toString().getBytes(StandardCharsets.UTF_8));
+      }
+
+      Assert.assertEquals(new BigInteger("83833369887442127665956850482411800415"),
+          new BigInteger(1, digest.digest()));
+    }
