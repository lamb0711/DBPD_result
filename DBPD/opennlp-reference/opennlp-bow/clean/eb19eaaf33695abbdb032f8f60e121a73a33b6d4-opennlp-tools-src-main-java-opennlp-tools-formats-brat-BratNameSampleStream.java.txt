OPENNLP-959: Correct sentence segmenations in labeld names

+    Map<Integer, Span> coveredIndexes = new HashMap<>();
+
+        Span span = ((SpanAnnotation) ann).getSpan();
+        for (int i = span.getStart(); i < span.getEnd(); i++) {
+          coveredIndexes.put(i, span);
+        }
-    Span sentences[] = sentDetector.sentPosDetect(sample.getText());
+    List<Span> sentences = new ArrayList<>();
+    for (Span sentence : sentDetector.sentPosDetect(sample.getText())) {
+      Span conflictingName = coveredIndexes.get(sentence.getStart());
-    // TODO: Sentence breaks should be avoided inside name annotations
-    // a) Merge two sentences, if an end/begin pair is part of a name annotation
-    // b) Implement a custom sentence validator which can be injected into the SD
+      if (sentences.size() > 0 && conflictingName != null &&
+          conflictingName.getStart() < sentence.getStart()) {
+        Span lastSentence = sentences.remove(sentences.size() - 1);
+        sentences.add(new Span(lastSentence.getStart(), sentence.getEnd()));
-    // How could a custom validator be injected into an already instantiated sentence detector ?1
-    // Via a set method ...
-    // Via constructor ... probably best option, but a bit tricky to work with the SD interface then
-    //
-
+        System.out.println("Correcting sentence segmentation in document " +
+            sample.getId());
+      }
+      else {
+        sentences.add(sentence);
+      }
+    }
-    List<NameSample> samples = new ArrayList<>(sentences.length);
+    List<NameSample> samples = new ArrayList<>(sentences.size());
