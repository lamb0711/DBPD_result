OPENNLP-714 added brown clustering features for token, token class and bigrams, plus support class to serialize brown cluster lexicons

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1665208 13f79535-47bb-0310-9956-ffa450edef68

+  
+  /**
+   * Generates Brown clustering features for current token.
+   */
+  static class BrownClusterTokenFeatureGeneratorFactory implements XmlFeatureGeneratorFactory {
+
+    public AdaptiveFeatureGenerator create(Element generatorElement,
+        FeatureGeneratorResourceProvider resourceManager) throws InvalidFormatException {
+
+      String dictResourceKey = generatorElement.getAttribute("dict");
+
+      Object dictResource = resourceManager.getResource(dictResourceKey);
+
+
+      if (!(dictResource instanceof BrownCluster)) {
+        throw new InvalidFormatException("Not a BrownLexicon resource for key: " + dictResourceKey);
+      }
+
+      return new BrownTokenFeatureGenerator((BrownCluster) dictResource);
+    }
+
+    static void register(Map<String, XmlFeatureGeneratorFactory> factoryMap) {
+      factoryMap.put("brownclustertoken", new BrownClusterTokenFeatureGeneratorFactory());
+    }
+  }
+  
+  /**
+   * Generates Brown clustering features for token classes.
+   */
+  static class BrownClusterTokenClassFeatureGeneratorFactory implements XmlFeatureGeneratorFactory {
+
+    public AdaptiveFeatureGenerator create(Element generatorElement,
+        FeatureGeneratorResourceProvider resourceManager) throws InvalidFormatException {
+
+      String dictResourceKey = generatorElement.getAttribute("dict");
+
+      Object dictResource = resourceManager.getResource(dictResourceKey);
+
+
+      if (!(dictResource instanceof BrownCluster)) {
+        throw new InvalidFormatException("Not a BrownLexicon resource for key: " + dictResourceKey);
+      }
+
+      return new BrownTokenClassFeatureGenerator((BrownCluster) dictResource);
+    }
+
+    static void register(Map<String, XmlFeatureGeneratorFactory> factoryMap) {
+      factoryMap.put("brownclustertokenclass", new BrownClusterTokenClassFeatureGeneratorFactory());
+    }
+  }
+  
+  /**
+   * Generates Brown clustering features for token bigrams.
+   */
+  static class BrownClusterBigramFeatureGeneratorFactory implements XmlFeatureGeneratorFactory {
+
+    public AdaptiveFeatureGenerator create(Element generatorElement,
+        FeatureGeneratorResourceProvider resourceManager) throws InvalidFormatException {
+
+      String dictResourceKey = generatorElement.getAttribute("dict");
+
+      Object dictResource = resourceManager.getResource(dictResourceKey);
+
+
+      if (!(dictResource instanceof BrownCluster)) {
+        throw new InvalidFormatException("Not a BrownLexicon resource for key: " + dictResourceKey);
+      }
+
+      return new BrownBigramFeatureGenerator((BrownCluster) dictResource);
+    }
+
+    static void register(Map<String, XmlFeatureGeneratorFactory> factoryMap) {
+      factoryMap.put("brownclusterbigram", new BrownClusterBigramFeatureGeneratorFactory());
+    }
+  }
+    BrownClusterTokenFeatureGeneratorFactory.register(factories);
+    BrownClusterTokenClassFeatureGeneratorFactory.register(factories);
+    BrownClusterBigramFeatureGeneratorFactory.register(factories);
