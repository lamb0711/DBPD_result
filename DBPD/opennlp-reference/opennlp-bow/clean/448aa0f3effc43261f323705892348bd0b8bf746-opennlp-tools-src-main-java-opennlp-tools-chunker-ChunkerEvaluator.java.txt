OPENNLP-226 Refactored the evaluator listeners:

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1159270 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.util.eval.MissclassifiedSampleListener;
-  private MissclassifiedSampleListener<ChunkSample> sampleListener;
-
-   * Initializes the current instance with the given
-   * {@link Chunker}.
-   *
-   * @param chunker the {@link Chunker} to evaluate.
-   * @param sampleListener
-   *          an optional {@link MissclassifiedSampleListener} listener to
-   *          notify errors
-   */
-  public ChunkerEvaluator(Chunker chunker, MissclassifiedSampleListener<ChunkSample> sampleListener) {
-    this.chunker = chunker;
-    this.sampleListener = sampleListener;
-  }
-
-  /**
+   * 
+   * @return the predicted sample
-  public void evaluateSample(ChunkSample reference) {
-	  
-	String[] preds = chunker.chunk(reference.getSentence(), reference.getTags());
-	ChunkSample result = new ChunkSample(reference.getSentence(), reference.getTags(), preds);
+  @Override
+  public ChunkSample processSample(ChunkSample reference) {
+    String[] preds = chunker.chunk(reference.getSentence(), reference.getTags());
+    ChunkSample result = new ChunkSample(reference.getSentence(), reference.getTags(), preds);
-    if (this.sampleListener != null) {
-      ChunkSample predicted = new ChunkSample(reference.getSentence(), reference.getTags(),
-          preds);
-      if (!predicted.equals(reference)) {
-        this.sampleListener.missclassified(reference, predicted);
-      }
-    }
-	
+    
+    return result;
