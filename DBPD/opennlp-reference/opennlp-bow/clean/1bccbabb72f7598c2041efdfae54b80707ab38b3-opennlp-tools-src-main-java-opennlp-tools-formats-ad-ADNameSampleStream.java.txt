Correct indentation and white spaces

This closes #30

See issue OPENNLP-914

-      if(currentTextID != textID) {
+      if (currentTextID != textID) {
-      String namedEntityTag = null;
-      int startOfNamedEntity = -1;
+    String namedEntityTag = null;
+    int startOfNamedEntity = -1;
-      String leafTag = leaf.getSecondaryTag();
-      boolean expandLastNER = false; // used when we find a <NER2> tag
+    String leafTag = leaf.getSecondaryTag();
+    boolean expandLastNER = false; // used when we find a <NER2> tag
-      if (leafTag != null) {
-        if (leafTag.contains("<sam->") && !alreadyAdded) {
-          String[] lexemes = underlinePattern.split(leaf.getLexeme());
-          if(lexemes.length > 1) {
-             sentence.addAll(Arrays.asList(lexemes).subList(0, lexemes.length - 1));
-          }
-          leftContractionPart = lexemes[lexemes.length - 1];
-          return;
+    if (leafTag != null) {
+      if (leafTag.contains("<sam->") && !alreadyAdded) {
+        String[] lexemes = underlinePattern.split(leaf.getLexeme());
+        if (lexemes.length > 1) {
+          sentence.addAll(Arrays.asList(lexemes).subList(0, lexemes.length - 1));
-        if (leafTag.contains("<NER2>")) {
-          // this one an be part of the last name
-          expandLastNER = true;
-        }
-        namedEntityTag = getNER(leafTag);
+        leftContractionPart = lexemes[lexemes.length - 1];
+        return;
-
-      if (namedEntityTag != null) {
-        startOfNamedEntity = sentence.size();
+      if (leafTag.contains("<NER2>")) {
+        // this one an be part of the last name
+        expandLastNER = true;
-
-      if(!alreadyAdded) {
-        sentence.addAll(processLexeme(leaf.getLexeme()));
-      }
-
-      if (namedEntityTag != null) {
-        names
-            .add(new Span(startOfNamedEntity, sentence.size(), namedEntityTag));
-      }
-
-      if (expandLastNER) {
-        // if the current leaf has the tag <NER2>, it can be the continuation of
-        // a NER.
-        // we check if it is true, and expand the last NER
-        int lastIndex = names.size() - 1;
-        if (names.size() > 0) {
-          Span last = names.get(lastIndex);
-          if (last.getEnd() == sentence.size() - 1) {
-            names.set(lastIndex, new Span(last.getStart(), sentence.size(),
-                last.getType()));
-          } 
-        }
-      }
-
+      namedEntityTag = getNER(leafTag);
+    if (namedEntityTag != null) {
+      startOfNamedEntity = sentence.size();
+    }
+
+    if (!alreadyAdded) {
+      sentence.addAll(processLexeme(leaf.getLexeme()));
+    }
+
+    if (namedEntityTag != null) {
+      names
+      .add(new Span(startOfNamedEntity, sentence.size(), namedEntityTag));
+    }
+
+    if (expandLastNER) {
+      // if the current leaf has the tag <NER2>, it can be the continuation of
+      // a NER.
+      // we check if it is true, and expand the last NER
+      int lastIndex = names.size() - 1;
+      if (names.size() > 0) {
+        Span last = names.get(lastIndex);
+        if (last.getEnd() == sentence.size() - 1) {
+          names.set(lastIndex, new Span(last.getStart(), sentence.size(),
+              last.getType()));
+        }
+      }
+    }
+
+  }
+
-      if(tok.length() > 1 && !alphanumericPattern.matcher(tok).matches()) {
+      if (tok.length() > 1 && !alphanumericPattern.matcher(tok).matches()) {
-    if(tags.contains("<NER2>")) {
+    if (tags.contains("<NER2>")) {
-//  private static final Pattern meta1 = Pattern
-//      .compile("^(?:[a-zA-Z\\-]*(\\d+)).*?p=(\\d+).*");
-//
-//  // works for selva cie
-//  private static final Pattern meta2 = Pattern
-//    .compile("^(?:[a-zA-Z\\-]*(\\d+)).*?p=(\\d+).*");
+  //  private static final Pattern meta1 = Pattern
+  //      .compile("^(?:[a-zA-Z\\-]*(\\d+)).*?p=(\\d+).*");
+  //
+  //  // works for selva cie
+  //  private static final Pattern meta2 = Pattern
+  //    .compile("^(?:[a-zA-Z\\-]*(\\d+)).*?p=(\\d+).*");
