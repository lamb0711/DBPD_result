OPENLP-24 Formated code to comply with conventions

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1063310 13f79535-47bb-0310-9956-ffa450edef68

-    protected GISModelReader suffixAppropriateReader;
+  protected GISModelReader suffixAppropriateReader;
-    /**
-     * Constructor which takes a File and invokes the GISModelReader
-     * appropriate for the suffix.
-     *
-     * @param f The File in which the model is stored.
-     */
-    public SuffixSensitiveGISModelReader (File f) throws IOException {
-      super(f);
-    }
+  /**
+   * Constructor which takes a File and invokes the GISModelReader appropriate
+   * for the suffix.
+   * 
+   * @param f
+   *          The File in which the model is stored.
+   */
+  public SuffixSensitiveGISModelReader(File f) throws IOException {
+    super(f);
+  }
-    // activate this if adding another type of reader which can't read model
-    // information in the way that the default getModel() method in
-    // GISModelReader does.
-    //public GISModel getModel () throws java.io.IOException {
-    //    return suffixAppropriateReader.getModel();
-    //}
-    
+  // activate this if adding another type of reader which can't read model
+  // information in the way that the default getModel() method in
+  // GISModelReader does.
+  //public GISModel getModel () throws java.io.IOException {
+  //    return suffixAppropriateReader.getModel();
+  //}
-    /**
-     * To convert between different formats of the new style.
-     * 
-     * <p>java opennlp.maxent.io.SuffixSensitiveGISModelReader old_model_name new_model_name
-     * 
-     * <p>For example, to convert a model called "model.bin.gz" (which is thus
-     * saved in gzipped binary format) to one in (unzipped) text format:
-     * 
-     * <p>java opennlp.maxent.io.SuffixSensitiveGISModelReader model.bin.gz model.txt
-     * 
-     * <p>This particular example would of course be useful when you generally
-     * want to create models which take up less space (.bin.gz), but want to
-     * be able to inspect a few of them as plain text files.
-     */
-    public static void main(String[] args) throws IOException {
-      AbstractModel m =  new SuffixSensitiveGISModelReader(new File(args[0])).getModel();
-      new SuffixSensitiveGISModelWriter( m, new File(args[1])).persist();
-    }
-
+  /**
+   * To convert between different formats of the new style.
+   * 
+   * <p>
+   * java opennlp.maxent.io.SuffixSensitiveGISModelReader old_model_name
+   * new_model_name
+   * 
+   * <p>
+   * For example, to convert a model called "model.bin.gz" (which is thus saved
+   * in gzipped binary format) to one in (unzipped) text format:
+   * 
+   * <p>
+   * java opennlp.maxent.io.SuffixSensitiveGISModelReader model.bin.gz model.txt
+   * 
+   * <p>
+   * This particular example would of course be useful when you generally want
+   * to create models which take up less space (.bin.gz), but want to be able to
+   * inspect a few of them as plain text files.
+   */
+  public static void main(String[] args) throws IOException {
+    AbstractModel m = new SuffixSensitiveGISModelReader(new File(args[0]))
+        .getModel();
+    new SuffixSensitiveGISModelWriter(m, new File(args[1])).persist();
+  }
