OPENNLP-1159: avoid letting users specify AggregatedFeatureGeneratorFactory in XML config (#300)


- *<p>
- *   &lt;generator class="opennlp.tools.util.featuregen.AggregatedFeatureGeneratorFactory"&gt;
+ * <p>
+ * &lt;featureGenerators name="namefind"&gt;
- *       &lt;generator class="opennlp.tools.util.featuregen.AggregatedFeatureGeneratorFactory"&gt;
- *       &lt;/generator&gt;
- *   &lt;/generator&gt;
+ * &lt;/featureGenerators&gt;
-      int generators = 0;
+      List<AdaptiveFeatureGenerator> generators = new ArrayList<>();
-            String key = "generator#" + Integer.toString(generators++);
+            String key = "generator#" + Integer.toString(generators.size());
+            generators.add(afg);
+
+      if (generators.size() > 1) {
+        AdaptiveFeatureGenerator aggregatedFeatureGenerator =
+            new AggregatedFeatureGenerator(generators.toArray(
+                new AdaptiveFeatureGenerator[generators.size()]));
+        args.put("generator#0", aggregatedFeatureGenerator);
+      }
-      Element firstElem = getFirstChild(generatorElement);
-      if (firstElem != null) {
-        if (firstElem.getTagName().equals("generator")) {
-          return buildGenerator(firstElem, resourceManager);
+
+      List<AdaptiveFeatureGenerator> generators = new ArrayList<>();
+      NodeList childNodes = generatorElement.getChildNodes();
+      for (int i = 0; i < childNodes.getLength(); i++) {
+        Node childNode = childNodes.item(i);
+        if (childNode instanceof Element) {
+          Element elem = (Element)childNode;
+          String type = elem.getTagName();
+          if (type.equals("generator")) {
+            generators.add(buildGenerator(elem, resourceManager));
+          }
+          else
+            throw new InvalidFormatException("Unexpected element: " + elementName);
-        else
-          throw new InvalidFormatException("Unexpected element: " + elementName);
+
+      if (generators.size() == 1)
+        return generators.get(0);
+      else if (generators.size() > 1)
+        return new AggregatedFeatureGenerator(generators.toArray(
+            new AdaptiveFeatureGenerator[generators.size()]));
