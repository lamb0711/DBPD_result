OPENNLP-935: Remove catch block to swallow IOException

-    try {
-      File tmp = File.createTempFile("events", null);
-      tmp.deleteOnExit();
-      Writer osw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tmp),"UTF8"));
-      int numEvents = computeEventCounts(eventStream, osw, predicateIndex, cutoff);
-      System.out.println("done. " + numEvents + " events");
-  
-      System.out.print("\tIndexing...  ");
-  
-      try (FileEventStream fes = new FileEventStream(tmp)) {
-        eventsToCompare = index(numEvents, fes, predicateIndex);
-      }
-      // done with predicates
-      predicateIndex = null;
-      tmp.delete();
-      System.out.println("done.");
-  
-      if (sort) {
-        System.out.print("Sorting and merging events... ");
-      }
-      else {
-        System.out.print("Collecting events... ");
-      }
-      sortAndMerge(eventsToCompare,sort);
-      System.out.println("Done indexing.");
+
+    File tmp = File.createTempFile("events", null);
+    tmp.deleteOnExit();
+    Writer osw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tmp),"UTF8"));
+    int numEvents = computeEventCounts(eventStream, osw, predicateIndex, cutoff);
+    System.out.println("done. " + numEvents + " events");
+
+    System.out.print("\tIndexing...  ");
+
+    try (FileEventStream fes = new FileEventStream(tmp)) {
+      eventsToCompare = index(numEvents, fes, predicateIndex);
-    catch (IOException e) {
-      System.err.println(e);
+    // done with predicates
+    predicateIndex = null;
+    tmp.delete();
+    System.out.println("done.");
+
+    if (sort) {
+      System.out.print("Sorting and merging events... ");
+    else {
+      System.out.print("Collecting events... ");
+    }
+    sortAndMerge(eventsToCompare,sort);
+    System.out.println("Done indexing.");
+
-    try {
-      File tmp = File.createTempFile("events", null);
-      tmp.deleteOnExit();
-      Writer osw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tmp),"UTF8"));
-      int numEvents = computeEventCounts(eventStream, osw, predicateIndex, cutoff);
-      System.out.println("done. " + numEvents + " events");
-      System.out.print("\tIndexing...  ");
+    File tmp = File.createTempFile("events", null);
+    tmp.deleteOnExit();
+    Writer osw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tmp),"UTF8"));
+    int numEvents = computeEventCounts(eventStream, osw, predicateIndex, cutoff);
+    System.out.println("done. " + numEvents + " events");
-      try (FileEventStream fes = new FileEventStream(tmp)) {
-        eventsToCompare = index(numEvents, fes, predicateIndex);
-      }
-      // done with predicates
-      predicateIndex = null;
-      tmp.delete();
-      System.out.println("done.");
+    System.out.print("\tIndexing...  ");
-      if (sort) {
-        System.out.print("Sorting and merging events... ");
-      }
-      else {
-        System.out.print("Collecting events... ");
-      }
-      sortAndMerge(eventsToCompare,sort);
-      System.out.println("Done indexing.");
+    try (FileEventStream fes = new FileEventStream(tmp)) {
+      eventsToCompare = index(numEvents, fes, predicateIndex);
-    catch (IOException e) {
-      System.err.println(e);
+    // done with predicates
+    predicateIndex = null;
+    tmp.delete();
+    System.out.println("done.");
+
+    if (sort) {
+      System.out.print("Sorting and merging events... ");
+    else {
+      System.out.print("Collecting events... ");
+    }
+    sortAndMerge(eventsToCompare,sort);
+    System.out.println("Done indexing.");
+
