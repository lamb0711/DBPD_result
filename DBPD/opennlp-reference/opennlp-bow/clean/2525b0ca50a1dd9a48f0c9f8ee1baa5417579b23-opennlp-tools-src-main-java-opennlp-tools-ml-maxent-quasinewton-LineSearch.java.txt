OPENNLP-767 Removed trailing white spaces on all lines

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1674262 13f79535-47bb-0310-9956-ffa450edef68

- * 
+ *
- * 
+ *
-  public static void doLineSearch(Function function, 
-      double[] direction, LineSearchResult lsr, double initialStepSize) 
+  public static void doLineSearch(Function function,
+      double[] direction, LineSearchResult lsr, double initialStepSize)
-    
+
-    
+
-      
+
-      
+
-    System.arraycopy(function.gradientAt(nextPoint), 0, gradAtNextPoint, 0, 
+    System.arraycopy(function.gradientAt(nextPoint), 0, gradAtNextPoint, 0,
-    
+
-    lsr.setAll(stepSize, valueAtX, valueAtNextPoint, 
-        gradAtX, gradAtNextPoint, x, nextPoint, currFctEvalCount);    
+    lsr.setAll(stepSize, valueAtX, valueAtNextPoint,
+        gradAtX, gradAtNextPoint, x, nextPoint, currFctEvalCount);
-   * Constrained line search (see section 3.2 in the paper "Scalable Training 
+   * Constrained line search (see section 3.2 in the paper "Scalable Training
-  public static void doConstrainedLineSearch(Function function, 
-      double[] direction, LineSearchResult lsr, double l1Cost, double initialStepSize) 
+  public static void doConstrainedLineSearch(Function function,
+      double[] direction, LineSearchResult lsr, double l1Cost, double initialStepSize)
-    
+
-    
-    // New sign vector 
+
+    // New sign vector
-    
+
-      
+
-        if (nextPoint[i] * signX[i] <= 0) 
+        if (nextPoint[i] * signX[i] <= 0)
-      valueAtNextPoint = function.valueAt(nextPoint) + 
+      valueAtNextPoint = function.valueAt(nextPoint) +
-      
+
-      
+
-    System.arraycopy(function.gradientAt(nextPoint), 0, gradAtNextPoint, 0, 
+    System.arraycopy(function.gradientAt(nextPoint), 0, gradAtNextPoint, 0,
-    
+
-        gradAtNextPoint, pseudoGradAtX, x, nextPoint, signX, currFctEvalCount);      
+        gradAtNextPoint, pseudoGradAtX, x, nextPoint, signX, currFctEvalCount);
-  
+
-  
+
-    
+
-        double stepSize, 
-        double valueAtCurr, 
-        double valueAtNext, 
-        double[] gradAtCurr, 
-        double[] gradAtNext, 
-        double[] currPoint, 
-        double[] nextPoint, 
-        int fctEvalCount) 
+        double stepSize,
+        double valueAtCurr,
+        double valueAtNext,
+        double[] gradAtCurr,
+        double[] gradAtNext,
+        double[] currPoint,
+        double[] nextPoint,
+        int fctEvalCount)
-      setAll(stepSize, valueAtCurr, valueAtNext, gradAtCurr, gradAtNext, 
+      setAll(stepSize, valueAtCurr, valueAtNext, gradAtCurr, gradAtNext,
-        double stepSize, 
-        double valueAtCurr, 
-        double valueAtNext, 
-        double[] gradAtCurr, 
+        double stepSize,
+        double valueAtCurr,
+        double valueAtNext,
+        double[] gradAtCurr,
-        double[] currPoint, 
-        double[] nextPoint, 
-        double[] signVector, 
-        int fctEvalCount) 
+        double[] currPoint,
+        double[] nextPoint,
+        double[] signVector,
+        int fctEvalCount)
-      setAll(stepSize, valueAtCurr, valueAtNext, gradAtCurr, gradAtNext, 
+      setAll(stepSize, valueAtCurr, valueAtNext, gradAtCurr, gradAtNext,
-        double stepSize, 
-        double valueAtCurr, 
-        double valueAtNext, 
-        double[] gradAtCurr, 
-        double[] gradAtNext, 
-        double[] currPoint, 
-        double[] nextPoint, 
-        int fctEvalCount) 
+        double stepSize,
+        double valueAtCurr,
+        double valueAtNext,
+        double[] gradAtCurr,
+        double[] gradAtNext,
+        double[] currPoint,
+        double[] nextPoint,
+        int fctEvalCount)
-      setAll(stepSize, valueAtCurr, valueAtNext, gradAtCurr, gradAtNext, 
+      setAll(stepSize, valueAtCurr, valueAtNext, gradAtCurr, gradAtNext,
-        double stepSize, 
-        double valueAtCurr, 
-        double valueAtNext, 
-        double[] gradAtCurr, 
+        double stepSize,
+        double valueAtCurr,
+        double valueAtNext,
+        double[] gradAtCurr,
-        double[] currPoint, 
-        double[] nextPoint, 
-        double[] signVector, 
-        int fctEvalCount) 
+        double[] currPoint,
+        double[] nextPoint,
+        double[] signVector,
+        int fctEvalCount)
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-     * Initial linear search object 
+     * Initial linear search object
-        double valueAtX, 
+        double valueAtX,
-        double[] x) 
+        double[] x)
-    
+
-        double valueAtX, 
+        double valueAtX,
-        double[] pseudoGradAtX, 
-        double[] x) 
+        double[] pseudoGradAtX,
+        double[] x)
-    
+
-        double valueAtX, 
+        double valueAtX,
-        double[] x, 
-        double[] signX, 
-        int fctEvalCount) 
+        double[] x,
+        double[] signX,
+        int fctEvalCount)
-      return new LineSearchResult(0.0, 0.0, valueAtX, new double[x.length], gradAtX, 
+      return new LineSearchResult(0.0, 0.0, valueAtX, new double[x.length], gradAtX,
