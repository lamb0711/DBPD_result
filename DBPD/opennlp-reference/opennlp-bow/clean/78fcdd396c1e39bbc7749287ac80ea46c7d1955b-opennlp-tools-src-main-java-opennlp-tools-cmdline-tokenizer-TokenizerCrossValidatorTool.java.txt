OPENNLP-221 Refactored Tokenizer cross validator to use Parameters

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1145692 13f79535-47bb-0310-9956-ffa450edef68

+import java.nio.charset.Charset;
+import opennlp.tools.cmdline.ArgumentParser;
+import opennlp.tools.cmdline.BasicCrossValidatorParameters;
+  
+  interface Parameters extends BasicCrossValidatorParameters, TrainingParametersI {
+    
+  }
-    return "Usage: " + CLI.CMD + " " + getName() + " " + TrainingParameters.getParameterUsage() +
-        " -data trainData\n" + 
-        TrainingParameters.getDescription() + "\n"+
-        "-data trainingData      training data used for cross validation";
+    return "Usage: " + CLI.CMD + " " + getName() + " "
+        + ArgumentParser.createUsage(Parameters.class);
-    if (args.length < 6) {
-      System.out.println(getHelp());
+    if (!ArgumentParser.validateArguments(args, Parameters.class)) {
+      System.err.println(getHelp());
-    TrainingParameters parameters = new TrainingParameters(args);
+    Parameters params = ArgumentParser.parse(args, Parameters.class);
-    if(!parameters.isValid()) {
-      System.out.println(getHelp());
-      throw new TerminateToolException(1);
-    }
+    opennlp.tools.util.TrainingParameters mlParams = CmdLineUtil
+        .loadTrainingParameters(params.getParams(), false);
-    opennlp.tools.util.TrainingParameters mlParams = 
-      CmdLineUtil.loadTrainingParameters(CmdLineUtil.getParameter("-params", args), false);
-    
-    File trainingDataInFile = new File(CmdLineUtil.getParameter("-data", args));
+    File trainingDataInFile = params.getData();
+    Charset encoding = params.getEncoding(); 
+    
-        trainingDataInFile, parameters.getEncoding());
+        trainingDataInFile, encoding);
-          parameters.getLanguage(), parameters.isAlphaNumericOptimizationEnabled(),
-          parameters.getCutoff(), parameters.getNumberOfIterations());
-    }
-    else {
+          params.getLang(), params.getAlphaNumOpt(), params.getCutoff(),
+          params.getIterations());
+    } else {
-          parameters.getLanguage(), parameters.isAlphaNumericOptimizationEnabled(), mlParams);
+          params.getLang(), params.getAlphaNumOpt(), mlParams);
