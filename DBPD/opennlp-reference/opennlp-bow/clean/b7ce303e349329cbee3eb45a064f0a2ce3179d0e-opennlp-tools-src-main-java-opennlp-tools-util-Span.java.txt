OPENNLP-922: Refactor equals and hashCode, add missing hashCode

This closes #42

Also adds a checkstyle rule to enforce presence
of both hashCode and equals

+import java.util.Objects;
+
-    int res = 23;
-    res = res * 37 + getStart();
-    res = res * 37 + getEnd();
-    if (getType() == null) {
-      res = res * 37;
-    } else {
-      res = res * 37 + getType().hashCode();
-    }
-
-    return res;
+    return Objects.hash(getStart(), getEnd(), getType());
-
-    boolean result;
-
-      result = true;
-    } else if (o instanceof Span) {
-      Span s = (Span) o;
-
-      result = (getStart() == s.getStart())
-              && (getEnd() == s.getEnd())
-              && (getType() != null ? type.equals(s.getType()) : true)
-              && (s.getType() != null ? s.getType().equals(getType()) : true);
-    } else {
-      result = false;
+      return true;
-    return result;
+    if (o instanceof Span) {
+      Span s = (Span) o;
+
+      return getStart() == s.getStart() && getEnd() == s.getEnd()
+          && Objects.equals(getType(), s.getType());
+    }
+
+    return false;
