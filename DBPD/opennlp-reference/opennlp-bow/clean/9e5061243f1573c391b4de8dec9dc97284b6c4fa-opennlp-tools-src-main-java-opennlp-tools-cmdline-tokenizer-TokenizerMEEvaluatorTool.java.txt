OPENNLP-221 Created a BasicEvaluationParameters interface. 
Don't need to check encoding == null because it was validated by  ArgumentParser.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1145578 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
+import opennlp.tools.cmdline.ArgumentParser;
+import opennlp.tools.cmdline.BasicEvaluationParameters;
-import opennlp.tools.cmdline.CmdLineUtil;
-    return "Usage: " + CLI.CMD + " " + getName() + "-encoding charset -model model -data testData";
+    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(BasicEvaluationParameters.class);
-    if (args.length != 6) {
-      System.out.println(getHelp());
+    if (!ArgumentParser
+        .validateArguments(args, BasicEvaluationParameters.class)) {
+      System.err.println(getHelp());
-    Charset encoding = CmdLineUtil.getEncodingParameter(args);
+    BasicEvaluationParameters params = ArgumentParser.parse(args,
+        BasicEvaluationParameters.class);
-    if (encoding == null) {
-      System.out.println(getHelp());
-      throw new TerminateToolException(1);
-    }
+    Charset encoding = params.getEncoding();
-    TokenizerModel model = new TokenizerModelLoader().load(
-        new File(CmdLineUtil.getParameter("-model", args)));
+    TokenizerModel model = new TokenizerModelLoader().load(params.getModel());
-    ObjectStream<TokenSample> sampleStream = TokenizerTrainerTool.openSampleData(
-        "Test", new File(CmdLineUtil.getParameter("-data", args)), encoding);
+    ObjectStream<TokenSample> sampleStream = TokenizerTrainerTool
+        .openSampleData("Test", params.getData(), encoding);
