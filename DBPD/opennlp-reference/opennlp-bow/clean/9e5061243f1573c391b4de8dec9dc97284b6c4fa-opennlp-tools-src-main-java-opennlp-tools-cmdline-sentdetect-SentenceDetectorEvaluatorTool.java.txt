OPENNLP-221 Created a BasicEvaluationParameters interface. 
Don't need to check encoding == null because it was validated by  ArgumentParser.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1145578 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.cmdline.ArgumentParser.OptionalParameter;
-import opennlp.tools.cmdline.ArgumentParser.ParameterDescription;
+import opennlp.tools.cmdline.BasicEvaluationParameters;
-  
-  /**
-   * Create a list of expected parameters.
-   */
-  interface Parameters {
-    
-    @ParameterDescription(valueName = "charsetName", description = "specifies the encoding which should be used for reading and writing text")
-    @OptionalParameter(defaultValue="UTF-8")
-    Charset getEncoding();
-    
-    @ParameterDescription(valueName = "model")
-    File getModel();
-    
-    @ParameterDescription(valueName = "data")
-    File getData();
-  }
-    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(Parameters.class);
+    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(BasicEvaluationParameters.class);
-    if (!ArgumentParser.validateArguments(args, Parameters.class)) {
+    if (!ArgumentParser.validateArguments(args, BasicEvaluationParameters.class)) {
-    Parameters params = ArgumentParser.parse(args, Parameters.class);
+    BasicEvaluationParameters params = ArgumentParser.parse(args, BasicEvaluationParameters.class);
-    if (encoding == null) {
-      System.out.println(getHelp());
-      throw new TerminateToolException(1);
-    }
-    
