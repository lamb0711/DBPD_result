OpenNLP-51 Extended the integration with an AE which can set the doccat category label as language.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1060835 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.doccat.DoccatModel;
-import opennlp.tools.doccat.DocumentCategorizerME;
-import opennlp.uima.util.UimaUtil;
-import org.apache.uima.UimaContext;
-import org.apache.uima.analysis_component.CasAnnotator_ImplBase;
-import org.apache.uima.resource.ResourceAccessException;
-import org.apache.uima.resource.ResourceInitializationException;
-import org.apache.uima.util.Level;
-import org.apache.uima.util.Logger;
- * OpenNLP NameFinder trainer.
+ * OpenNLP Document Categorizer.
-public class DocumentCategorizer extends CasAnnotator_ImplBase {
+public class DocumentCategorizer extends AbstractDocumentCategorizer {
-  private UimaContext context;
-	
-  private Logger mLogger;
-  
-  private opennlp.tools.doccat.DocumentCategorizer mCategorizer;
-
-  private Type mTokenType;
-
-  public void initialize(UimaContext context) 
-      throws ResourceInitializationException {
-    
-    super.initialize(context);
-    
-    this.context = context;
-	  
-	mLogger = context.getLogger();
-	  
-    if (mLogger.isLoggable(Level.INFO)) {
-      mLogger.log(Level.INFO, "Initializing the OpenNLP Categorizer.");
-    }  
-    
-    DoccatModel model;
-    
-    try {
-      DoccatModelResource modelResource = 
-            (DoccatModelResource) context.getResourceObject(UimaUtil.MODEL_PARAMETER);
-        
-        model = modelResource.getModel();
-    }
-    catch (ResourceAccessException e) {
-        throw new ResourceInitializationException(e);
-    }
-    
-    mCategorizer = new DocumentCategorizerME(model);
-  }
+
-    // yes it must, the user later would use a very simple tokenizer and pass it to the
-    // doccat for language detection
-	  mTokenType = AnnotatorUtil.getRequiredTypeParameter(context, typeSystem,
-        UimaUtil.SENTENCE_TYPE_PARAMETER);
-    
-    mCategoryType = AnnotatorUtil.getRequiredTypeParameter(context, typeSystem,
+    mCategoryType = AnnotatorUtil.getRequiredTypeParameter(getContext(), typeSystem,
-    mCategoryFeature = AnnotatorUtil.getRequiredFeatureParameter(context, mCategoryType, 
+    mCategoryFeature = AnnotatorUtil.getRequiredFeatureParameter(getContext(), mCategoryType, 
-  public void process(CAS tcas) {
-    
-    double result[];
-    
-    if (mTokenType != null) {
-      // TODO:
-      // count tokens
-      // create token array
-      // pass array to doccat
-      // create result annotation
-      result = mCategorizer.categorize(tcas.getDocumentText());
-    }
-    else {
-      result = mCategorizer.categorize(tcas.getDocumentText());
-    }
-    
-    String bestCategroy = mCategorizer.getBestCategory(result);
-    
-    // get cat fs 
+  @Override
+  protected void setBestCategory(CAS tcas, String bestCategory) {
-    categoryAnnotation.setStringValue(mCategoryFeature, bestCategroy);
+    categoryAnnotation.setStringValue(mCategoryFeature, bestCategory);
