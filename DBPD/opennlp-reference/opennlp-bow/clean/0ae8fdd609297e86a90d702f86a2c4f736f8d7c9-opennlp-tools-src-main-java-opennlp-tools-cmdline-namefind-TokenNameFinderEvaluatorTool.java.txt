OPENNLP-221 Refactored NameFinder, POS Tagger and Chunker evaluators to use BasicEvaluatorParameters

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1145673 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.cmdline.ArgumentParser;
+import opennlp.tools.cmdline.BasicEvaluationParameters;
-import opennlp.tools.cmdline.CmdLineUtil;
-    return "Usage: " + CLI.CMD + " " + getName()
-        + " -encoding charset -model model -data testData";
+    return "Usage: " + CLI.CMD + " " + getName() + " "
+        + ArgumentParser.createUsage(BasicEvaluationParameters.class);
-    if (args.length != 6) {
-      System.out.println(getHelp());
+    if (!ArgumentParser
+        .validateArguments(args, BasicEvaluationParameters.class)) {
+      System.err.println(getHelp());
-    File testData = new File(CmdLineUtil.getParameter("-data", args));
-    CmdLineUtil.checkInputFile("Test data", testData);
+    BasicEvaluationParameters params = ArgumentParser.parse(args,
+        BasicEvaluationParameters.class);
-    Charset encoding = CmdLineUtil.getEncodingParameter(args);
+    File testData = params.getData();
-    if (encoding == null) {
-      System.out.println(getHelp());
-      throw new TerminateToolException(1);
-    }
+    Charset encoding = params.getEncoding();
-    TokenNameFinderModel model = new TokenNameFinderModelLoader().load(new File(CmdLineUtil.getParameter("-model", args)));
+    TokenNameFinderModel model = new TokenNameFinderModelLoader().load(params
+        .getModel());
