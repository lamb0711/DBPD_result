OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.ArgumentParser;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
-import opennlp.tools.cmdline.CmdLineUtil;
+import opennlp.tools.cmdline.AbstractEvaluatorTool;
+import opennlp.tools.cmdline.chunker.ChunkerEvaluatorTool.EvalToolParams;
-public final class ChunkerEvaluatorTool implements CmdLineTool {
+public final class ChunkerEvaluatorTool
+    extends AbstractEvaluatorTool<ChunkSample, EvalToolParams> {
-    
-  public String getName() {
-    return "ChunkerEvaluator";
+  public ChunkerEvaluatorTool() {
+    super(ChunkSample.class, EvalToolParams.class);
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(EvalToolParams.class);
-  }
-
-  public void run(String[] args) {
-
-  	String errorMessage = ArgumentParser.validateArgumentsLoudly(args, EvaluatorParams.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
-    }
-  	
-  	EvalToolParams params = ArgumentParser.parse(args, EvalToolParams.class);
-  	
-  	File testData =params.getData();
-
-    CmdLineUtil.checkInputFile("Test data", testData);
-
-    Charset encoding = params.getEncoding();
+  public void run(String format, String[] args) {
+    super.run(format, args);
-    final ObjectStream<ChunkSample> sampleStream = ChunkerTrainerTool.openSampleData("Test",
-        testData, encoding);
-
-      System.err.println("Reading test data error " + e.getMessage());
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading test data: " + e.getMessage());
