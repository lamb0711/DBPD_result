OPENNLP-725 now the serializer is chosen from dict attribute and element tag

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1634634 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.List;
-import opennlp.tools.postag.POSTaggerFactory;
+import org.w3c.dom.Element;
+
+      List<Element> elements = new ArrayList<Element>();
+      ArtifactSerializer serializer = null;
+        InputStream inputStreamXML = CmdLineUtil.openInFile(featureGenDescriptor);
+        try {
+          elements = GeneratorFactory.getDescriptorElements(inputStreamXML);
+        } catch (IOException e) {
+          e.printStackTrace();
+        }
-
-      // TODO: Filter files, also files with start with a dot
+      
-
-        // TODO: Move extension extracting code to method and
-        // write unit test for it
-
-        // extract file ending
-
-        int lastDot = resourceName.lastIndexOf('.');
-
-        if (lastDot == -1) {
-          continue;
+        //gettting the serializer key from the element tag name
+        //if the element contains a dict attribute
+        for (Element xmlElement : elements) {
+          String dictName = xmlElement.getAttribute("dict");
+          if (dictName != null && dictName.equals(resourceName)) {
+            serializer = artifactSerializers.get(xmlElement.getTagName());
+          }
-
-        String ending = resourceName.substring(lastDot + 1);
-
-        // lookup serializer from map
-        ArtifactSerializer serializer = artifactSerializers.get(ending);
-
-        InputStream resoruceIn = CmdLineUtil.openInFile(resourceFile);
+        InputStream resourceIn = CmdLineUtil.openInFile(resourceFile);
-          resources.put(resourceName, serializer.create(resoruceIn));
+          resources.put(resourceName, serializer.create(resourceIn));
-            resoruceIn.close();
+            resourceIn.close();
