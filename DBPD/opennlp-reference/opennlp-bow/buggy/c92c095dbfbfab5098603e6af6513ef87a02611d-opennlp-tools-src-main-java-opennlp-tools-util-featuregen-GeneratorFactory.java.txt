OPENNLP-605 Now the Custom Feature Generators gets configurged properly and returns instantiated Artifact Serializers instead.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1576746 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.util.model.ArtifactSerializer;
+import org.w3c.dom.NamedNodeMap;
-    
-    //
-      // TODO: User could define artifact mappings ...
+      if (generator instanceof CustomFeatureGenerator) {
+        
+        CustomFeatureGenerator customGenerator = (CustomFeatureGenerator) generator;
+        
+        Map<String, String> properties = new HashMap<>();
+
+        NamedNodeMap attributes = generatorElement.getAttributes();
+        
+        for (int i = 0; i < attributes.getLength(); i++) {
+          Node attribute = attributes.item(i);
+          if (!"class".equals(attribute.getNodeName())) {
+            properties.put(attribute.getNodeName(), attribute.getNodeValue());
+          }
+        }
+        
+        if (resourceManager != null) {
+          customGenerator.init(properties, resourceManager);
+        }
+      }
-  public static Map<String, Class<? extends SerializableArtifact>> extractCustomArtifactSerializerMappings(
-      InputStream xmlDescriptorIn, FeatureGeneratorResourceProvider resourceManager)
+  public static Map<String, ArtifactSerializer<?>> extractCustomArtifactSerializerMappings(
+      InputStream xmlDescriptorIn)
-    Map<String, Class<? extends SerializableArtifact>> mapping = new HashMap<>();
+    Map<String, ArtifactSerializer<?>> mapping = new HashMap<>();
-        AdaptiveFeatureGenerator generator = createGenerator(customElement, resourceManager);
+        // Note: The resource provider is not available at that point, to provide
+        // resources they need to be loaded first!
+        AdaptiveFeatureGenerator generator = createGenerator(customElement, null);
-      
