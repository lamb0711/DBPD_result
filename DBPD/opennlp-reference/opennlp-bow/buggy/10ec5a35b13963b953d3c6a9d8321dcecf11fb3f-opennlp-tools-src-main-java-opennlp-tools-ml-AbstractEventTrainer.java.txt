OPENNLP-927: Removed PluggableParameter

Fixes OPENNLP-927
Closes apache/opennlp#55

+import opennlp.tools.ml.model.DataIndexerFactory;
+  public static final String DATA_INDEXER_ONE_PASS_REAL_VALUE = "OnePassRealValue";
+
+  protected Map<String,String> reportMap = new HashMap<>();
-
-    String dataIndexer = parameters.getStringParam(DATA_INDEXER_PARAM,
-        DATA_INDEXER_TWO_PASS_VALUE);
-
-    if (dataIndexer != null) {
-      if (!(DATA_INDEXER_ONE_PASS_VALUE.equals(dataIndexer) || DATA_INDEXER_TWO_PASS_VALUE
-          .equals(dataIndexer))) {
-        return false;
-      }
-    }
-    // TODO: Check data indexing ...
-
+  
-    String dataIndexerName = parameters.getStringParam(DATA_INDEXER_PARAM,
-        DATA_INDEXER_TWO_PASS_VALUE);
-    Map<String,String> indexParams = new HashMap<String, String>();
-    indexParams.put(AbstractDataIndexer.CUTOFF_PARAM, Integer.toString(getCutoff()));
-    indexParams.put(AbstractDataIndexer.SORT_PARAM, Boolean.toString(isSortAndMerge()));
-
-    DataIndexer indexer;
-
-    if (DATA_INDEXER_ONE_PASS_VALUE.equals(dataIndexerName)) {
-      indexer = new OnePassDataIndexer();
-    } else if (DATA_INDEXER_TWO_PASS_VALUE.equals(dataIndexerName)) {
-      indexer = new TwoPassDataIndexer();
-    } else {
-      throw new IllegalStateException("Unexpected data indexer name: "
-          + dataIndexerName);
+    trainingParameters.put(AbstractDataIndexer.SORT_PARAM, Boolean.toString(isSortAndMerge()));
+    // If the cutoff was set, don't overwrite the value.
+    if (trainingParameters.getIntParameter(CUTOFF_PARAM, -1) == -1) {
+      trainingParameters.put(CUTOFF_PARAM, "5");
-    indexer.init(indexParams, parameters.getReportMap());
+    
+    DataIndexer indexer = DataIndexerFactory.getDataIndexer(trainingParameters, reportMap);
-    parameters.addToReport(AbstractTrainer.TRAINER_TYPE_PARAM, EventTrainer.EVENT_VALUE);
+    addToReport(AbstractTrainer.TRAINER_TYPE_PARAM, EventTrainer.EVENT_VALUE);
