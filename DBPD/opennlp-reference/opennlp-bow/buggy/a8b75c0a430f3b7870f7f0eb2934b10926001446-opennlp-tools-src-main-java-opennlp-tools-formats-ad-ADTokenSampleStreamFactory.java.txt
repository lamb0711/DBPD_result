OPENNLP-481: ADTokenSampleStream now uses a customized DictionaryDetokenizer that handles hyphens 

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1304169 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.util.regex.Pattern;
+
+import opennlp.tools.cmdline.TerminateToolException;
+import opennlp.tools.tokenize.DetokenizationDictionary;
+import opennlp.tools.tokenize.Detokenizer;
+import opennlp.tools.tokenize.DictionaryDetokenizer;
+
+  protected Detokenizer createDetokenizer(DetokenizerParameter p) {
+    try {
+      return new ADDictionaryDetokenizer(new DetokenizationDictionary(
+          new FileInputStream(new File(p.getDetokenizer()))));
+    } catch (IOException e) {
+      throw new TerminateToolException(-1,
+          "IO error while loading detokenizer dict: " + e.getMessage());
+    }
+  }
+
+  static class ADDictionaryDetokenizer extends DictionaryDetokenizer {
+
+    public ADDictionaryDetokenizer(DetokenizationDictionary dict) {
+      super(dict);
+    }
+
+    @Override
+    public DetokenizationOperation[] detokenize(String[] tokens) {
+      DetokenizationOperation[] operations = super.detokenize(tokens);
+      for (int i = 0; i < tokens.length; i++) {
+        if (operations[i].equals(DetokenizationOperation.NO_OPERATION)
+            && isMergeToRight(tokens[i])) {
+          operations[i] = DetokenizationOperation.MERGE_TO_RIGHT;
+        }
+      }
+      return operations;
+    }
+
+    private static final Pattern hyphenPattern = Pattern
+        .compile(".*?[\\p{L}]-$");
+
+    private boolean isMergeToRight(String token) {
+      if (token != null) {
+        if (hyphenPattern.matcher(token).matches()) {
+          return true;
+        }
+      }
+      return false;
+    }
+  }
