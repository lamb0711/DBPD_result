OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.ArgumentParser;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
+import opennlp.tools.cmdline.AbstractCrossValidatorTool;
+import opennlp.tools.cmdline.tokenizer.TokenizerCrossValidatorTool.CVToolParams;
-import opennlp.tools.util.ObjectStream;
+import opennlp.tools.util.model.ModelUtil;
-public final class TokenizerCrossValidatorTool implements CmdLineTool {
+public final class TokenizerCrossValidatorTool
+    extends AbstractCrossValidatorTool<TokenSample, CVToolParams> {
-    
-  public String getName() {
-    return "TokenizerCrossValidator";
+  public TokenizerCrossValidatorTool() {
+    super(TokenSample.class, CVToolParams.class);
-  
+
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " "
-        + ArgumentParser.createUsage(CVToolParams.class);
-  }
+  public void run(String format, String[] args) {
+    super.run(format, args);
-  public void run(String[] args) {
-    String errorMessage = ArgumentParser.validateArgumentsLoudly(args, CVToolParams.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
+    mlParams = CmdLineUtil.loadTrainingParameters(params.getParams(), false);
+    if (mlParams == null) {
+      mlParams = ModelUtil.createTrainingParameters(params.getIterations(), params.getCutoff());
-    
-    CVToolParams params = ArgumentParser.parse(args, CVToolParams.class);
-    
-    opennlp.tools.util.TrainingParameters mlParams = CmdLineUtil
-        .loadTrainingParameters(params.getParams(), false);
-    
-    File trainingDataInFile = params.getData();
-    CmdLineUtil.checkInputFile("Training Data", trainingDataInFile);
-    
-    Charset encoding = params.getEncoding(); 
-    
-    ObjectStream<TokenSample> sampleStream =
-        TokenizerTrainerTool.openSampleData("Training Data",
-        trainingDataInFile, encoding);
-    
-    
+
-    if (mlParams == null)
-      mlParams = TokenizerTrainerTool.createTrainingParameters(
-          params.getIterations(), params.getCutoff());
-    
-          params.getLang(), dict, params.getAlphaNumOpt(), mlParams, listener);
+          factory.getLang(), dict, params.getAlphaNumOpt(), mlParams, listener);
-      CmdLineUtil.printTrainingIoError(e);
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());
