OPENNLp-118 Replaced the EventStream with ObjectStream<Event>

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1567990 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.util.Arrays;
+import java.util.Collections;
+import opennlp.tools.util.ObjectStream;
+
-public class SequenceStreamEventStream implements EventStream {
+public class SequenceStreamEventStream implements ObjectStream<Event> {
-  private Iterator<Sequence> sequenceIterator;
-  int eventIndex = -1;
-  Event[] events;
+  private final SequenceStream sequenceStream;
+  
+  private Iterator<Event> eventIt = Collections.emptyListIterator();
-    this.sequenceIterator = sequenceStream.iterator();
+    this.sequenceStream = sequenceStream;
-  public boolean hasNext() {
-    if (events != null && eventIndex < events.length) {
-      return true;
+  @Override
+  public Event read() throws IOException {
+    
+    if (eventIt.hasNext()) {
+      eventIt.next();
-      if (sequenceIterator.hasNext()) {
-        Sequence s = sequenceIterator.next();
-        eventIndex = 0;
-        events = s.getEvents();
-        return true;
+      Sequence<?> sequence = sequenceStream.read();
+      
+      if (sequence != null) {
+        eventIt = Arrays.asList(sequence.getEvents()).iterator();
-      else {
-        return false;
+      
+      if (eventIt.hasNext()) {
+        return read();
+    
+    return null;
-  public Event next() {
-    return events[eventIndex++];
+  @Override
+  public void reset() throws IOException, UnsupportedOperationException {
+    sequenceStream.reset();
-  public void remove() {
-    throw new UnsupportedOperationException();
+  @Override
+  public void close() throws IOException {
+    sequenceStream.close();
-
