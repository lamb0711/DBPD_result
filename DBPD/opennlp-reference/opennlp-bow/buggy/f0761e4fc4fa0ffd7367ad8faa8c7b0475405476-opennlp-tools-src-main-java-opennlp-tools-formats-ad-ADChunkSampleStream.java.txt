OPENNLP-423: Improved AD Chunker formatter.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1240442 13f79535-47bb-0310-9956-ffa450edef68

-		this.adSentenceStream = new ADSentenceStream(lineStream);
+	  this.adSentenceStream = new ADSentenceStream(lineStream);
-					processNode((Node) elements[i], sentence, tags, target);
+					processNode((Node) elements[i], sentence, tags, target, null);
-			List<String> target) {
+			List<String> target, String inheritedTag) {
+		
+		boolean inherited = false;
+		if(phraseTag.equals("O") && inheritedTag != null) {
+		  phraseTag = inheritedTag;
+		  inherited = true;
+		}
+				if(inherited && target.size() > 0 && target.get(target.size() - 1).endsWith(phraseTag)) {
+				  isIntermediate = true;
+				}
-				processNode((Node) elements[i], sentence, tags, target);
+				processNode((Node) elements[i], sentence, tags, target, phraseTag);
-		if (leaf.getSyntacticTag() != null
+		if (leaf.getFunctionalTag() != null
-			if(leaf.getSyntacticTag().endsWith("v-fin")) {
+			if(leaf.getFunctionalTag().equals("v-fin")) {
-			} else if(leaf.getSyntacticTag().endsWith(":n")) {
+			} else if(leaf.getFunctionalTag().equals("n")) {
-			tags.add(getMorphologicalTag(leaf.getSyntacticTag()));
+			tags.add(ADChunkSampleStream.convertFuncTag(leaf.getFunctionalTag(), false));
-	private String getMorphologicalTag(String tag) {
-		return tag.substring(tag.lastIndexOf(":") + 1);
-	}
+  public static String convertPhraseTag(String phraseTag) {
+    if ("NP".equals(phraseTag) || "VP".equals(phraseTag)) {
+      return phraseTag;
+    }
+    return "O";
+  }
-	private String getChunkTag(String tag) {
+  public static String convertFuncTag(String t, boolean useCGTags) {
+    if (useCGTags) {
+      if ("art".equals(t) || "pron-det".equals(t) || "pron-indef".equals(t)) {
+        t = "det";
+      }
+    }
+    return t;
+  }
+
+  private String getChunkTag(String tag) {
