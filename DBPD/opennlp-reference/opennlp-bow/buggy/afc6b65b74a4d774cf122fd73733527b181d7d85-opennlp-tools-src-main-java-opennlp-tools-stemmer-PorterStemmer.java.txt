OPENNLP-871: Cleanup code base for release

This closes #11

-      for (int c = 0; c < i; c++) new_b[c] = b[c]; {
+      System.arraycopy(b, 0, new_b, 0, i);
+      {
-  private final boolean cons(int i) {
+  private boolean cons(int i) {
-      return (i==k0) ? true : !cons(i-1);
+      return (i == k0) || !cons(i - 1);
-  private final int m() {
+  private int m() {
-  private final boolean vowelinstem() {
+  private boolean vowelinstem() {
-  private final boolean doublec(int j) {
-    if (j < k0+1)
-      return false;
-    if (b[j] != b[j-1])
-      return false;
-    return cons(j);
+  private boolean doublec(int j) {
+    return j >= k0 + 1 && b[j] == b[j - 1] && cons(j);
-  private final boolean cvc(int i) {
+  private boolean cvc(int i) {
-  private final boolean ends(String s) {
+  private boolean ends(String s) {
-  private final void step1() {
+  private void step1() {
-  private final void step2() {
+  private void step2() {
-  private final void step3() {
+  private void step3() {
-  private final void step4() {
+  private void step4() {
-  private final void step5() {
+  private void step5() {
-  private final void step6() {
+  private void step6() {
