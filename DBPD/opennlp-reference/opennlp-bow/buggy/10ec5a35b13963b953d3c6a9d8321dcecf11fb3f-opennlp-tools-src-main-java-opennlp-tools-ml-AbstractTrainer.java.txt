OPENNLP-927: Removed PluggableParameter

Fixes OPENNLP-927
Closes apache/opennlp#55

+import java.util.HashMap;
+import opennlp.tools.util.TrainingParameters;
-  
-  protected PluggableParameters parameters;
+
+  protected TrainingParameters trainingParameters;
+  protected Map<String,String> reportMap;
+  public void init(TrainingParameters trainingParameters, Map<String,String> reportMap) {
+    this.trainingParameters = trainingParameters;
+    if (reportMap == null) reportMap = new HashMap<>();
+    this.reportMap = reportMap;
+  }
+  
-    parameters = new PluggableParameters(trainParams, reportMap);
+    init(new TrainingParameters(trainParams),reportMap);
-    return parameters.getStringParam(ALGORITHM_PARAM, GIS.MAXENT_VALUE);
+    return trainingParameters.getStringParameter(ALGORITHM_PARAM, GIS.MAXENT_VALUE);
-    return parameters.getIntParam(CUTOFF_PARAM, CUTOFF_DEFAULT);
+    return trainingParameters.getIntParameter(CUTOFF_PARAM, CUTOFF_DEFAULT);
-    return parameters.getIntParam(ITERATIONS_PARAM, ITERATIONS_DEFAULT);
+    return trainingParameters.getIntParameter(ITERATIONS_PARAM, ITERATIONS_DEFAULT);
-      parameters.getIntParam(CUTOFF_PARAM, CUTOFF_DEFAULT);
-      parameters.getIntParam(ITERATIONS_PARAM, ITERATIONS_DEFAULT);
+      trainingParameters.getIntParameter(CUTOFF_PARAM, CUTOFF_DEFAULT);
+      trainingParameters.getIntParameter(ITERATIONS_PARAM, ITERATIONS_DEFAULT);
-
+    
-   * Use the PluggableParameters directly...
+   * Use the TrainingParameters directly...
-    return parameters.getStringParam(key, defaultValue);
+    return trainingParameters.getStringParameter(key, defaultValue);
-  protected int getIntParam(String key, int defaultValue) {
-    return parameters.getIntParam(key, defaultValue);
+  protected int TrainingParameters(String key, int defaultValue) {
+    return trainingParameters.getIntParameter(key, defaultValue);
-    return parameters.getDoubleParam(key, defaultValue);
+    return trainingParameters.getDoubleParameter(key, defaultValue);
-    return parameters.getBooleanParam(key, defaultValue);
+    return trainingParameters.getBooleanParameter(key, defaultValue);
-   * Use the PluggableParameters directly...
+   * Adds the key/Value to the report map.
-  @Deprecated
-    parameters.addToReport(key, value);
+    reportMap.put(key, value);
