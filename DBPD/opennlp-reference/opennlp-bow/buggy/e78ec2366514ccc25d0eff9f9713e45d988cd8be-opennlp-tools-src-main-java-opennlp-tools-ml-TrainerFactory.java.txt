OPENNLP-636 Moved arguments from the Trainer constructors to the init method to allow instantiation with the Extension Loader.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1570122 13f79535-47bb-0310-9956-ffa450edef68

-        return TrainerFactory.<SequenceTrainer> createBuiltinTrainer(
-            BUILTIN_TRAINERS.get(trainerType), trainParams, reportMap);
+        SequenceTrainer trainer =  TrainerFactory.<SequenceTrainer> createBuiltinTrainer(
+            BUILTIN_TRAINERS.get(trainerType));
+        trainer.init(trainParams, reportMap);
+        return trainer;
-        return ExtensionLoader.instantiateExtension(SequenceTrainer.class, trainerType);
+        SequenceTrainer trainer = ExtensionLoader.instantiateExtension(SequenceTrainer.class, trainerType);
+        trainer.init(trainParams, reportMap);
+        return trainer;
-        return TrainerFactory.<EventModelSequenceTrainer> createBuiltinTrainer(
-            BUILTIN_TRAINERS.get(trainerType), trainParams, reportMap);
+        EventModelSequenceTrainer trainer = TrainerFactory.<EventModelSequenceTrainer> createBuiltinTrainer(
+            BUILTIN_TRAINERS.get(trainerType));
+        trainer.init(trainParams, reportMap);
+        return trainer;
-        return ExtensionLoader.instantiateExtension(EventModelSequenceTrainer.class, trainerType);
+        EventModelSequenceTrainer trainer =
+            ExtensionLoader.instantiateExtension(EventModelSequenceTrainer.class, trainerType);
+        trainer.init(trainParams, reportMap);
+        return trainer;
-      return new GIS(trainParams, reportMap);
+      AbstractEventTrainer trainer = new GIS();
+      trainer.init(trainParams, reportMap);
+      return trainer;
-        return TrainerFactory.<EventTrainer> createBuiltinTrainer(
-            BUILTIN_TRAINERS.get(trainerType), trainParams, reportMap);
+        EventTrainer trainer = TrainerFactory.<EventTrainer> createBuiltinTrainer(
+            BUILTIN_TRAINERS.get(trainerType));
+        trainer.init(trainParams, reportMap);
+        return trainer;
-        return ExtensionLoader.instantiateExtension(EventTrainer.class, trainerType);
+        EventTrainer trainer = ExtensionLoader.instantiateExtension(EventTrainer.class, trainerType);
+        trainer.init(trainParams, reportMap);
+        return trainer;
-  private static <T> T createBuiltinTrainer(Class<T> trainerClass,
-      Map<String, String> trainParams, Map<String, String> reportMap) {
+  private static <T> T createBuiltinTrainer(Class<T> trainerClass) {
-        Constructor<T> contructor = trainerClass.getConstructor(Map.class,
-            Map.class);
-        theTrainer = contructor.newInstance(trainParams, reportMap);
+        Constructor<T> contructor = trainerClass.getConstructor();
+        theTrainer = contructor.newInstance();
