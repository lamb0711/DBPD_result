OPENNLP-415: Refactored the DictionaryNameFinder to not use the mMetaDictionary, I also simplified the arraycopy() to use original arrays in the copy... more fun.  Thanks to Loic Descotte for finding the bug.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1221611 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.dictionary.Index;
-  private Index mMetaDictionary;
-
-    mMetaDictionary = new Index(dictionary.iterator());
-    List<Span> foundNames = new LinkedList<Span>();
+    List<Span> foundNames = new LinkedList<>();
-
-        String token = tokenStrings[endToken];
+        tokens = new String[(endToken - startToken + 1)];
+        System.arraycopy(tokenStrings, startToken, tokens, 0, (endToken - startToken + 1));
-        // TODO: improve performance here
-        String newTokens[] = new String[tokens.length + 1];
-        System.arraycopy(tokens, 0, newTokens, 0, tokens.length);
-        newTokens[newTokens.length - 1] = token;
-        tokens = newTokens;
+        StringList tokenList = new StringList(tokens);
-        if (mMetaDictionary.contains(token)) {
-
-          StringList tokenList = new StringList(tokens);
-
-          if (mDictionary.contains(tokenList)) {
-            foundName = new Span(startToken, endToken + 1);
-          }
+        if (mDictionary.contains(tokenList)) {
+          foundName = new Span(startToken, endToken + 1);
-  
+
