Fixes to Perceptron (OPENNLP-154 improved normalization, OPENNLP-155 improved checking of training accuracy); 
OPENNLP-156 improved command line trainer so that a Perceptron model is actually stored, so that options are passed to Perceptron training, and so that output of ModelApplier is one line per test event.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1091994 13f79535-47bb-0310-9956-ffa450edef68

-    String outcome = event.getOutcome();
+    String outcome = event.getOutcome(); // Is ignored
-    int best = 0;
-    for (int i = 1; i < ocs.length; i++)
-      if (ocs[i] > ocs[best])
-        best = i;
+    int numOutcomes = ocs.length;
+    DoubleStringPair[] result = new DoubleStringPair[numOutcomes];
+    for (int i=0; i<numOutcomes; i++)
+      result[i] = new DoubleStringPair(ocs[i], _model.getOutcome(i));
-    String predictedLabel = _model.getOutcome(best);
-    String madeError = "+";
-    if (predictedLabel.equals(outcome))
-      madeError = "";
+    java.util.Arrays.sort(result);
-    System.out.println(counter + "\t0:" + outcome + "\t0:"
-        + _model.getOutcome(best) + "\t" + madeError + "\t"
-        + ROUNDED_FORMAT.format(ocs[best]));
-    counter++;
+    // Print the most likely outcome first, down to the least likely.
+    for (int i=numOutcomes-1; i>=0; i--)
+      System.out.print(result[i].stringValue + " " + result[i].doubleValue + " ");
+    System.out.println();
+
+
+    if (args.length == 0) {
+      usage();
+    }
+
+
-        MaxentModel m = new GenericModelReader(new File(modelFileName))
-            .getModel();
+        MaxentModel m = new GenericModelReader(new File(modelFileName)).getModel();
-      System.out.println("=== Predictions on test data ===\n");
-      System.out.println(" inst#     actual  predicted error prediction");
-        while (es.hasNext()) {
+        while (es.hasNext())
-        }
