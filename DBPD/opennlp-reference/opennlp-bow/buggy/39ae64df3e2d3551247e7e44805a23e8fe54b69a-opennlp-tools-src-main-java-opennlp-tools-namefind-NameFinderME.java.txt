OPENNLP-195 Added train method that takes params argument and the generatorDescriptor and resourceMap

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1130898 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.InputStreamReader;
-import opennlp.tools.postag.POSSampleSequenceStream;
-import opennlp.tools.util.HashSumEventStream;
-import opennlp.tools.util.PlainTextByLineStream;
-import opennlp.tools.util.model.BaseModel;
-import opennlp.tools.util.model.ModelUtil;
+  private static AdaptiveFeatureGenerator createFeatureGenerator(
+      byte[] generatorDescriptor, final Map<String, Object> resources)
+      throws IOException {
+    AdaptiveFeatureGenerator featureGenerator;
+
+    if (generatorDescriptor != null) {
+      featureGenerator = GeneratorFactory.create(new ByteArrayInputStream(
+          generatorDescriptor), new FeatureGeneratorResourceProvider() {
+
+        public Object getResource(String key) {
+          return resources.get(key);
+        }
+      });
+    } else {
+      featureGenerator = null;
+    }
+
+    return featureGenerator;
+  }
+  
+   /**
+    * Trains a name finder model.
+    * 
+    * @param languageCode
+    *          the language of the training data
+    * @param type
+    *          null or an override type for all types in the training data
+    * @param samples
+    *          the training data
+    * @param trainParams
+    *          machine learning train parameters
+    * @param generator
+    *          null or the feature generator
+    * @param resources
+    *          the resources for the name finder or null if none
+    * 
+    * @return the newly trained model
+    * 
+    * @throws IOException
+    */
+  /**
+   * Trains a name finder model.
+   * 
+   * @param languageCode
+   *          the language of the training data
+   * @param type
+   *          null or an override type for all types in the training data
+   * @param samples
+   *          the training data
+   * @param trainParams
+   *          machine learning train parameters
+   * @param featureGeneratorBytes
+   *          descriptor to configure the feature generation or null
+   * @param resources
+   *          the resources for the name finder or null if none
+   * 
+   * @return the newly trained model
+   * 
+   * @throws IOException
+   */
+  public static TokenNameFinderModel train(String languageCode, String type,
+      ObjectStream<NameSample> samples, TrainingParameters trainParams,
+      byte[] featureGeneratorBytes, final Map<String, Object> resources)
+      throws IOException {
+    return train(languageCode, type, samples, trainParams,
+        createFeatureGenerator(featureGeneratorBytes, resources), resources);
+  }
+   
-     AdaptiveFeatureGenerator featureGenerator;
-     
-     if (generatorDescriptor != null) {
-       featureGenerator = GeneratorFactory.create(new ByteArrayInputStream(generatorDescriptor), new FeatureGeneratorResourceProvider() {
-        
-        public Object getResource(String key) {
-          return resources.get(key);
-        }
-      });
-     }
-     else {
-       featureGenerator = null;
-     }
+     AdaptiveFeatureGenerator featureGenerator = createFeatureGenerator(generatorDescriptor, resources);
-   
