OPENNLP-871: Clean up code base for release

This closes #20

-
-    if (algorithmName != null && !(PERCEPTRON_VALUE.equals(algorithmName))) {
-      return false;
-    }
-
-    return true;
+    return !(algorithmName != null && !(PERCEPTRON_VALUE.equals(algorithmName)));
-    /*************** Create and return the model ******************/
+    /* Create and return the model *************/
-    /** Stores the estimated parameter value of each predicate during iteration. */
+    /* Stores the estimated parameter value of each predicate during iteration. */
-    /** Stores the sum of parameter values of each predicate over many iterations. */
+    /* Stores the sum of parameter values of each predicate over many iterations. */
-        for (int ni=0; ni<this.numTimesEventsSeen[ei]; ni++) {
+        for (int ni = 0; ni < this.numTimesEventsSeen[ei]; ni++) {
-                params[pi].updateParameter(targetOutcome, stepsize*values[ei][ci]);
-                params[pi].updateParameter(maxOutcome, -stepsize*values[ei][ci]);
+                params[pi].updateParameter(targetOutcome, stepsize * values[ei][ci]);
+                params[pi].updateParameter(maxOutcome, -stepsize * values[ei][ci]);
-      if (i < 10 || (i%10) == 0)
-        display(". (" + numCorrect + "/" + numEvents+") " + trainingAccuracy + "\n");
+      if (i < 10 || (i % 10) == 0)
+        display(". (" + numCorrect + "/" + numEvents + ") " + trainingAccuracy + "\n");
-      if (useAverage && useSkippedlAveraging && (i < 20 || isPerfectSquare(i))) {
-        doAveraging = true;
-      }
-      else if (useAverage) {
-        doAveraging = true;
-      }
-      else {
-        doAveraging = false;
-      }
+      doAveraging = useAverage && useSkippedlAveraging && (i < 20 || isPerfectSquare(i)) || useAverage;
-          for (int aoi=0;aoi<numOutcomes;aoi++)
+          for (int aoi = 0; aoi < numOutcomes; aoi++)
-      if (Math.abs(prevAccuracy1-trainingAccuracy) < tolerance
-          && Math.abs(prevAccuracy2-trainingAccuracy) < tolerance
-          && Math.abs(prevAccuracy3-trainingAccuracy) < tolerance) {
+      if (Math.abs(prevAccuracy1 - trainingAccuracy) < tolerance
+        && Math.abs(prevAccuracy2 - trainingAccuracy) < tolerance
+        && Math.abs(prevAccuracy3 - trainingAccuracy) < tolerance) {
-  private final static boolean isPerfectSquare (int n) {
+  private static boolean isPerfectSquare (int n) {
