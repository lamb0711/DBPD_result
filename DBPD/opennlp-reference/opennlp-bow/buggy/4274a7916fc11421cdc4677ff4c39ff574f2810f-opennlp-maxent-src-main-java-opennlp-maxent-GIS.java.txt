OPENNLP-29 Added multi threaded GIS training support

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1126493 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.model.UniformPrior;
+    return trainModel(iterations, indexer, printMessagesWhileTraining,
+        smoothing, modelPrior, cutoff, 1);
+  }
+  
+  /**
+   * Train a model using the GIS algorithm.
+   * 
+   * @param iterations
+   *          The number of GIS iterations to perform.
+   * @param indexer
+   *          The object which will be used for event compilation.
+   * @param printMessagesWhileTraining
+   *          Determines whether training status messages are written to STDOUT.
+   * @param smoothing
+   *          Defines whether the created trainer will use smoothing while
+   *          training the model.
+   * @param modelPrior
+   *          The prior distribution for the model.
+   * @param cutoff
+   *          The number of times a predicate must occur to be used in a model.
+   * @return The newly trained model, which can be used immediately or saved to
+   *         disk using an opennlp.maxent.io.GISModelWriter object.
+   */
+  public static GISModel trainModel(int iterations, DataIndexer indexer,
+      boolean printMessagesWhileTraining, boolean smoothing, Prior modelPrior,
+      int cutoff, int threads) {
-    if (modelPrior != null) {
-      return trainer.trainModel(iterations, indexer, modelPrior, cutoff);
-    } else {
-      return trainer.trainModel(iterations, indexer, cutoff);
+    if (modelPrior == null) {
+      modelPrior = new UniformPrior();
+    
+    return trainer.trainModel(iterations, indexer, modelPrior, cutoff, threads);
