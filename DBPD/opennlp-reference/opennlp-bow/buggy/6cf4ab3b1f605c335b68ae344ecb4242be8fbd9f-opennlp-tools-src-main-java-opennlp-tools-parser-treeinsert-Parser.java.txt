OPENNLP-175 Updated to let train util directly report training parameters

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1124854 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.Map;
+    Map<String, String> manifestInfoEntries = new HashMap<String, String>();
+    
-    // TODO: Make cutoff configurable ... 
+    // TODO: Make cutoff configurable ... which cutoff should be used here?
-    AbstractModel buildModel = TrainUtil.train(bes, mlParams.getSettings("build"));
+    Map<String, String> buildReportMap = new HashMap<String, String>();
+    AbstractModel buildModel = TrainUtil.train(bes, mlParams.getSettings("build"), buildReportMap);
+    opennlp.tools.parser.chunking.Parser.mergeReportIntoManifest(manifestInfoEntries, buildReportMap, "build");
-    AbstractModel checkModel = TrainUtil.train(kes, mlParams.getSettings("check"));
+    Map<String, String> checkReportMap = new HashMap<String, String>();
+    AbstractModel checkModel = TrainUtil.train(kes, mlParams.getSettings("check"), checkReportMap);
+    opennlp.tools.parser.chunking.Parser.mergeReportIntoManifest(manifestInfoEntries, checkReportMap, "check");
-    AbstractModel attachModel = TrainUtil.train(attachEvents, mlParams.getSettings("attach"));
+    Map<String, String> attachReportMap = new HashMap<String, String>();
+    AbstractModel attachModel = TrainUtil.train(attachEvents, mlParams.getSettings("attach"), attachReportMap);
+    opennlp.tools.parser.chunking.Parser.mergeReportIntoManifest(manifestInfoEntries, attachReportMap, "attach");
-        (opennlp.tools.parser.lang.en.HeadRules) rules, ParserType.TREEINSERT);
+        (opennlp.tools.parser.lang.en.HeadRules) rules, ParserType.TREEINSERT, manifestInfoEntries);
