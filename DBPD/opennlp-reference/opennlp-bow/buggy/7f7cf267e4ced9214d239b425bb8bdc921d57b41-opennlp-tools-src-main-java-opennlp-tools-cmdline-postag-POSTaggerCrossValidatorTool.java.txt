OPENNLP-226 CrossValidators should receive a list/one listener in constructor, the same way is done with evaluators

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1160122 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
+import opennlp.tools.util.TrainingParameters;
+    
+    EvaluationSampleListener<POSSample> missclassifiedListener = null;
+    if (params.getMisclassified()) {
+      missclassifiedListener = new POSEvaluationErrorListener();
+    }
+    
+    if (mlParams == null) {
+      mlParams = new TrainingParameters();
+      mlParams.put(TrainingParameters.ALGORITHM_PARAM, "MAXENT");
+      mlParams.put(TrainingParameters.ITERATIONS_PARAM,
+          Integer.toString(params.getIterations()));
+      mlParams.put(TrainingParameters.CUTOFF_PARAM,
+          Integer.toString(params.getCutoff()));
+    }
+    
-      if (mlParams == null) {
-        validator = new POSTaggerCrossValidator(params.getLang(),
-            POSTaggerTrainerTool.getModelType(params.getType()), tagdict, null, params.getCutoff(),
-            params.getIterations());
-      } else {
-        validator = new POSTaggerCrossValidator(params.getLang(),
-            mlParams, tagdict, null);
-      }
+      validator = new POSTaggerCrossValidator(params.getLang(), mlParams,
+          tagdict, null, missclassifiedListener);
-      EvaluationSampleListener<POSSample> missclassifiedListener = null;
-      if (params.getMisclassified()) {
-        missclassifiedListener = new POSEvaluationErrorListener();
-      }
-
-      validator.evaluate(sampleStream, params.getFolds(), Collections.singletonList(missclassifiedListener));
+      validator.evaluate(sampleStream, params.getFolds());
