OPENNLP-581 Added Trainer, EventTrainer and SequenceTrainer interfaces and some abstract implementations. Modified existing trainers to extend the abstract classes

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1489970 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.Map;
+import opennlp.tools.ml.AbstractEventTrainer;
+import opennlp.tools.ml.model.AbstractModel;
-public class GIS {
+public class GIS extends AbstractEventTrainer {
+
+  public static final String MAXENT_VALUE = "MAXENT";
+
+  // >> members related to AbstractEventTrainer
+  public GIS(Map<String, String> trainParams, Map<String, String> reportMap) {
+    super(trainParams, reportMap);
+  }
+
+  public GIS() {
+    super(Collections.<String, String> emptyMap(), Collections
+        .<String, String> emptyMap());
+  }
+
+  public boolean isValid() {
+
+    if (!super.isValid()) {
+      return false;
+    }
+
+    String algorithmName = getAlgorithm();
+
+    if (algorithmName != null && !(MAXENT_VALUE.equals(algorithmName))) {
+      return false;
+    }
+
+    return true;
+  }
+
+  public boolean isSortAndMerge() {
+    return true;
+  }
+
+  public AbstractModel doTrain(DataIndexer indexer) throws IOException {
+    if (!isValid()) {
+      throw new IllegalArgumentException("trainParams are not valid!");
+    }
+
+    int iterations = getIterations();
+
+    AbstractModel model;
+
+    int threads = getIntParam("Threads", 1);
+
+    model = trainModel(iterations, indexer, true, false, null, 0, threads);
+
+    return model;
+  }
+
+  // << members related to AbstractEventTrainer
+
