OPENNLP-175 Updated cmd line interface and added train methods to train with trainig parameters file/object

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1124372 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.model.TrainUtil;
+import opennlp.tools.util.TrainingParameters;
-
+   public static TokenNameFinderModel train(String languageCode, String type, ObjectStream<NameSample> samples, 
+       TrainingParameters trainParams, AdaptiveFeatureGenerator generator, final Map<String, Object> resources) throws IOException {
+     
+     if (TrainUtil.isSequenceTraining(trainParams.getSettings())) {
+       throw new IllegalArgumentException("Sequence training is not supported!");
+     }
+     
+     Map<String, String> manifestInfoEntries = new HashMap<String, String>();
+//     ModelUtil.addCutoffAndIterations(manifestInfoEntries, cutoff, iterations);
+     
+     AdaptiveFeatureGenerator featureGenerator;
+     
+     if (generator != null)
+       featureGenerator = generator;
+     else 
+       featureGenerator = createFeatureGenerator();
+     
+     EventStream eventStream = new NameFinderEventStream(samples, type,
+         new DefaultNameContextGenerator(featureGenerator));
+     HashSumEventStream hses = new HashSumEventStream(eventStream);
+     
+     AbstractModel nameFinderModel = TrainUtil.train(hses, trainParams.getSettings());
+     
+//     AbstractModel nameFinderModel = GIS.trainModel(iterations, new TwoPassDataIndexer(hses, cutoff));
+     
+     manifestInfoEntries.put(BaseModel.TRAINING_EVENTHASH_PROPERTY, 
+         hses.calculateHashSum().toString(16));
+     
+     return new TokenNameFinderModel(languageCode, nameFinderModel,
+         resources, manifestInfoEntries);
+   }
+   
