OPENNLP-641 Moved beam search parameter to the training parameters file

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1574524 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Properties;
+import opennlp.tools.ml.BeamSearch;
+import opennlp.tools.namefind.NameFinderME;
-    this(languageCode, chunkerModel, manifestInfoEntries, new ChunkerFactory());
+    this(languageCode, chunkerModel, ChunkerME.DEFAULT_BEAM_SIZE, manifestInfoEntries, new ChunkerFactory());
-  
+    this(languageCode, chunkerModel, ChunkerME.DEFAULT_BEAM_SIZE, manifestInfoEntries, factory);
+  }
+  
+  public ChunkerModel(String languageCode, MaxentModel chunkerModel, int beamSize,
+      Map<String, String> manifestInfoEntries, ChunkerFactory factory) {
+    
+    Properties manifest = (Properties) artifactMap.get(MANIFEST_ENTRY);
+    manifest.put(BeamSearch.BEAM_SIZE_PARAMETER, Integer.toString(beamSize));
+    
+  /**
+   * @deprecated use getChunkerSequenceModel instead. This method will be removed soon.
+   */
+  @Deprecated
-    if (artifactMap.get(CHUNKER_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
+    
+    Properties manifest = (Properties) artifactMap.get(MANIFEST_ENTRY);
+    
+    if (artifactMap.get(CHUNKER_MODEL_ENTRY_NAME) instanceof MaxentModel) {
+      String beamSizeString = manifest.getProperty(BeamSearch.BEAM_SIZE_PARAMETER);
+      
+      int beamSize = NameFinderME.DEFAULT_BEAM_SIZE;
+      if (beamSizeString != null) {
+        beamSize = Integer.parseInt(beamSizeString);
+      }
+      
+      return new BeamSearch<>(beamSize, (MaxentModel) artifactMap.get(CHUNKER_MODEL_ENTRY_NAME));
+    }
+    else if (artifactMap.get(CHUNKER_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
