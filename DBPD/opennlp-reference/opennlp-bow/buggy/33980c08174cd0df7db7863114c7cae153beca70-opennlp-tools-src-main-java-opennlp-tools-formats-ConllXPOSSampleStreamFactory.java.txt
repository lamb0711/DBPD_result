OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import opennlp.tools.cmdline.ArgumentParser.ParameterDescription;
-import opennlp.tools.cmdline.ObjectStreamFactory;
+import opennlp.tools.cmdline.StreamFactoryRegistry;
+import opennlp.tools.cmdline.params.LanguageFormatParams;
-public class ConllXPOSSampleStreamFactory implements ObjectStreamFactory<POSSample> {
+public class ConllXPOSSampleStreamFactory extends LanguageSampleStreamFactory<POSSample> {
+
+  public static final String CONLLX_FORMAT = "conllx";
-  interface Parameters {
-    @ParameterDescription(valueName = "sampleData")
-    String getData();
-  }
-  
-  public String getUsage() {
-    return ArgumentParser.createUsage(Parameters.class);
+  interface Parameters extends LanguageFormatParams {
-  public String validateArguments(String[] args) {
-    return ArgumentParser.validateArgumentsLoudly(args, Parameters.class);
+  public static void registerFactory() {
+    StreamFactoryRegistry.registerFactory(POSSample.class,
+        CONLLX_FORMAT, new ConllXPOSSampleStreamFactory(Parameters.class));
-  ObjectStream<POSSample> create(Parameters params) {
+  protected <P> ConllXPOSSampleStreamFactory(Class<P> params) {
+    super(params);
+  }
+
+  public ObjectStream<POSSample> create(String[] args) {
+    Parameters params = ArgumentParser.parse(args, Parameters.class);
+    language = params.getLang();
+
-          CmdLineUtil.openInFile(new File(params.getData())), "UTF-8"));
+          CmdLineUtil.openInFile(params.getData()), "UTF-8"));
-      
+
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "UTF-8 encoding is not supported: " + e.getMessage());
-  
-  public ObjectStream<POSSample> create(String[] args) {
-    
-    Parameters params = ArgumentParser.parse(args, Parameters.class);
-    
-    return create(params);
-  }
-  
-
