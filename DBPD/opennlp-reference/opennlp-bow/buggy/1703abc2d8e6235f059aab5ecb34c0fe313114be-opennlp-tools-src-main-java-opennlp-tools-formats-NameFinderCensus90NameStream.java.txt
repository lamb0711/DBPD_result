OPENNLP-600
Changed to MockInputStreamFactory everywhere except where a reader was being used in the PlainTextBylineStream constructor

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1564379 13f79535-47bb-0310-9956-ffa450edef68

-
+import java.util.logging.Level;
+import java.util.logging.Logger;
+import opennlp.tools.util.MockInputStreamFactory;
- * StringList for each dictionary entry in the name-finder dictionary.
- * The entries in the source file are as follows:
+ * StringList for each dictionary entry in the name-finder dictionary. The
+ * entries in the source file are as follows:
- *      SMITH          1.006  1.006      1
+ * SMITH 1.006 1.006 1
-  private final ObjectStream<String> lineStream;
+  private ObjectStream<String> lineStream;
-   * @param lineStream  an <code>ObjectSteam<String></code> that represents the
-   *                    input file to be attached to this class.
+   * @param lineStream an <code>ObjectSteam<String></code> that represents the
+   *                   input file to be attached to this class.
-   * This constructor takes an <code>InputStream</code> and a <code>Charset</code>
-   * and opens an associated stream object with the specified encoding specified.
+   * This constructor takes an
+   * <code>InputStream</code> and a
+   * <code>Charset</code> and opens an associated stream object with the
+   * specified encoding specified.
-   * @param in  an <code>InputStream</code> for the input file.
-   * @param encoding  the <code>Charset</code> to apply to the input stream.
+   * @param in       an <code>InputStream</code> for the input file.
+   * @param encoding the <code>Charset</code> to apply to the input stream.
-    this.lineStream = new PlainTextByLineStream(in, this.encoding);
+
+    try {
+      this.lineStream = new PlainTextByLineStream(new MockInputStreamFactory(in), this.encoding);
+    } catch (IOException ex) {
+
+      throw new RuntimeException(ex);
+    }
-    if ((line != null) &&
-        (!StringUtil.isEmpty(line))) {
+    if ((line != null)
+            && (!StringUtil.isEmpty(line))) {
-        if ((parsed.length() > 2) &&
-            (parsed.startsWith("MC"))) {
-          name2 = parsed.substring(0,1).toUpperCase(locale) +
-                  parsed.substring(1,2).toLowerCase(locale) +
-                  parsed.substring(2,3).toUpperCase(locale) +
-                  parsed.substring(3).toLowerCase(locale);
+        if ((parsed.length() > 2)
+                && (parsed.startsWith("MC"))) {
+          name2 = parsed.substring(0, 1).toUpperCase(locale)
+                  + parsed.substring(1, 2).toLowerCase(locale)
+                  + parsed.substring(2, 3).toUpperCase(locale)
+                  + parsed.substring(3).toLowerCase(locale);
-          name2 = parsed.substring(0,1).toUpperCase(locale) +
-                  parsed.substring(1).toLowerCase(locale);
+          name2 = parsed.substring(0, 1).toUpperCase(locale)
+                  + parsed.substring(1).toLowerCase(locale);
-
