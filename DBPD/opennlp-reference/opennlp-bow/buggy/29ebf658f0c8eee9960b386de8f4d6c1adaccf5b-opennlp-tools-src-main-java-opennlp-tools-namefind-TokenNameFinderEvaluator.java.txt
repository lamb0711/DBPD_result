OPENNLP-226 Evaluators now allow tools to register a misclassified report interface

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1158760 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.util.eval.MissclassifiedSampleListener;
-  /**
-   * Initializes the current instance with the given
-   * {@link TokenNameFinder}.
-   *
-   * @param nameFinder the {@link TokenNameFinder} to evaluate.
-   */
-  public TokenNameFinderEvaluator(TokenNameFinder nameFinder, boolean printErrors) {
-    super(printErrors);
-    this.nameFinder = nameFinder;
-  }
+  private MissclassifiedSampleListener<NameSample> sampleListener;
+  
+  /**
+   * Initializes the current instance with the given {@link TokenNameFinder}.
+   * 
+   * @param nameFinder
+   *          the {@link TokenNameFinder} to evaluate.
+   * @param sampleListener
+   *          an optional {@link MissclassifiedSampleListener} listener to
+   *          notify errors
+   */
+  public TokenNameFinderEvaluator(TokenNameFinder nameFinder, MissclassifiedSampleListener<NameSample> sampleListener) {
+    this.nameFinder = nameFinder;
+    this.sampleListener = sampleListener;
+  }
-    
-    if (isPrintError()) {
-      String[] sentence = reference.getSentence();
-      printErrors(references, predictedNames, reference, new NameSample(sentence,
-          predictedNames, true), sentence);
+
+    if (this.sampleListener != null) {
+      NameSample predicted = new NameSample(reference.getSentence(), predictedNames,
+          reference.isClearAdaptiveDataSet());
+      if(!predicted.equals(reference)) {
+        this.sampleListener.missclassified(reference, predicted);
+      }
