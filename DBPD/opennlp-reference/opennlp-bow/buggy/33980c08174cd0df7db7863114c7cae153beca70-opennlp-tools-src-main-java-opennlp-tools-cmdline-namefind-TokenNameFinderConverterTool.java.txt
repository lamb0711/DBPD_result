OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
-import java.util.HashMap;
-import java.util.Map;
-
-import opennlp.tools.cmdline.ObjectStreamFactory;
-import opennlp.tools.formats.BioNLP2004NameSampleStreamFactory;
-import opennlp.tools.formats.Conll02NameSampleStreamFactory;
-import opennlp.tools.formats.Conll03NameSampleStreamFactory;
-import opennlp.tools.formats.ad.ADNameSampleStreamFactory;
- * Tool to convert multiple data formats into native opennlp name finder training
+ * Tool to convert multiple data formats into native OpenNLP name finder training
-  private static final Map<String, ObjectStreamFactory<NameSample>> streamFactories;
-  
-  static {
-    Map<String, ObjectStreamFactory<NameSample>> mutableStreamFactories =
-      new HashMap<String, ObjectStreamFactory<NameSample>>();
-    
-    mutableStreamFactories.put("conll02", new Conll02NameSampleStreamFactory());
-    mutableStreamFactories.put("conll03", new Conll03NameSampleStreamFactory());
-    mutableStreamFactories.put("ad", new ADNameSampleStreamFactory());
-    mutableStreamFactories.put("bionlp2004", new BioNLP2004NameSampleStreamFactory());
-    
-    streamFactories = Collections.unmodifiableMap(mutableStreamFactories);
-  }
-  
-  public String getName() {
-    return "TokenNameFinderConverter";
-  }
-
-  public String getShortDescription() {
-    return "converts foreign data formats to native format";
-  }
-  
-  @Override
-  protected ObjectStreamFactory<NameSample> createStreamFactory(String format) {
-    return streamFactories.get(format);
+  public TokenNameFinderConverterTool() {
+    super(NameSample.class);
