OPENNLp-118 Replaced the EventStream with ObjectStream<Event>

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1567990 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.util.ObjectStream;
+
-  public TwoPassDataIndexer(EventStream eventStream) throws IOException {
+  public TwoPassDataIndexer(ObjectStream<Event> eventStream) throws IOException {
-  public TwoPassDataIndexer(EventStream eventStream, int cutoff) throws IOException {
+  public TwoPassDataIndexer(ObjectStream<Event> eventStream, int cutoff) throws IOException {
-  public TwoPassDataIndexer(EventStream eventStream, int cutoff, boolean sort) throws IOException {
+  public TwoPassDataIndexer(ObjectStream<Event> eventStream, int cutoff, boolean sort) throws IOException {
-  private int computeEventCounts(EventStream eventStream, Writer eventStore, Map<String,Integer> predicatesInOut, int cutoff) throws IOException {
+  private int computeEventCounts(ObjectStream<Event> eventStream, Writer eventStore, Map<String,Integer> predicatesInOut, int cutoff) throws IOException {
-    while (eventStream.hasNext()) {
-      Event ev = eventStream.next();
+
+    Event ev;
+    while ((ev = eventStream.read()) != null) {
-  private List<ComparableEvent> index(int numEvents, EventStream es, Map<String,Integer> predicateIndex) throws IOException {
+  private List<ComparableEvent> index(int numEvents, ObjectStream<Event> es, Map<String,Integer> predicateIndex) throws IOException {
-    while (es.hasNext()) {
-      Event ev = es.next();
+    
+    Event ev;
+    while ((ev = es.read()) != null) {
