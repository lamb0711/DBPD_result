OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.cmdline.ArgumentParser;
+import opennlp.tools.cmdline.BaseCLITool;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
-public class CensusDictionaryCreatorTool implements CmdLineTool {
+public class CensusDictionaryCreatorTool extends BaseCLITool {
-  /**
-   * Gets the name for the tool.
-   *
-   * @return {@code String}  a name to be used to call this class.
-   */
-  public String getName() {
-
-    return "CensusDictionaryCreator";
-  }
-
-  /**
-   * Gets a short description for the tool.
-   *
-   * @return {@code String}  a short description describing the purpose of
-   *    the tool to the user.
-   */
-
-  /**
-   * Gets the expected usage of the tool as an example.
-   *
-   * @return {@code String}  a descriptive example on how to properly call
-   *    the tool from the command line.
-   */
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(Parameters.class);
+  public String getHelp() {
+    return getBasicHelp(Parameters.class);
-   * 
-   * @param sampleStream
+   * Creates a dictionary.
+   *
+   * @param sampleStream stream of samples.
-   * @throws IOException
+   * @throws IOException IOException
-  /**
-   * This method is much like the old main() method used in prior class
-   * construction, and allows another main class to run() this classes method
-   * to perform the operations.
-   *
-   * @param args  a String[] array of arguments passed to the run method
-   */
-
-    String errorMessage = ArgumentParser.validateArgumentsLoudly(args, Parameters.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
-    }
-
-    Parameters params = ArgumentParser.parse(args, Parameters.class);
+    Parameters params = validateAndParseParams(args, Parameters.class);
-      CmdLineUtil.printTrainingIoError(e);
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());
-      System.err.println("Error during write to dictionary file: " + ex.getMessage());
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while writing dictionary file: " + ex.getMessage());
-          System.err.println("Attention: Failed to correctly write dictionary:");
-          System.err.println(e.getMessage());
-          throw new TerminateToolException(-1);
+          throw new TerminateToolException(-1, "Attention: Failed to correctly write dictionary:" + e.getMessage());
