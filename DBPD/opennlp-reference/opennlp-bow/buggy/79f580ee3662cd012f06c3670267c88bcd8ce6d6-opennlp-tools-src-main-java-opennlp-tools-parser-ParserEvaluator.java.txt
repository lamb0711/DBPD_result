OPENNLP-31 add evaluation suppor to parser working

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1593530 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.util.eval.ParseEval;
-import opennlp.tools.util.eval.FMeasure;
+/**
+ * Class for Parsing Evaluation. Hopefully to be merged
+ * into FMeasure soon.
+ *
+ */
-  private FMeasure fmeasure = new FMeasure();
-
+  /**
+   * fmeasure.
+   */
+  private ParseEval fmeasure = new ParseEval();
+  /**
+   * The parser to evaluate.
+   */
-  public ParserEvaluator(Parser parser, ParserEvaluationMonitor... monitors) {
+  /**
+   * Construct a parser with some evaluation monitors.
+   * @param aParser
+   * @param monitors the evaluation monitors
+   */
+  public ParserEvaluator(final Parser aParser, final ParserEvaluationMonitor... monitors) {
-    this.parser = parser;
+    this.parser = aParser;
-  private static Span[] getConstituencySpans(Parse parse) {
+  /**
+   * Obtain {@code Span}s for every parse in the sentence.
+   * @param parse
+   * @return an array containing every span for the parse
+   */
+  private static Span[] getConstituencySpans(final Parse parse) {
-      stack.add(parse.getChildren()[0]);
+      for (Parse child : parse.getChildren()) {
+        stack.push(child);
+      }
-
-  protected Parse processSample(Parse reference) {
+  protected final Parse processSample(final Parse reference) {
-    Parse predictions[] = ParserTool.parseLine(sentenceText, parser, 1);
+    Parse[] predictions = ParserTool.parseLine(sentenceText, parser, 1);
-  public FMeasure getFMeasure() {
+  /**
+   * It returns the fmeasure result.
+   * @return the fmeasure value
+   */
+  public final ParseEval getFMeasure() {
-  public static void main(String[] args) {
-
-    // TODO: Move this to a test case!
+  /**
+   * Main method to show the example of running the evaluator.
+   * Moved to a test case soon, hopefully.
+   * @param args
+   */
+  // TODO: Move this to a test case!
+  public static void main(final String[] args) {
-    Span goldConsts[] = getConstituencySpans(Parse.parseParse(goldParseString));
+    Span[] goldConsts = getConstituencySpans(Parse.parseParse(goldParseString));
-    Span testConsts[] = getConstituencySpans(Parse.parseParse(testParseString));
+    Span[] testConsts = getConstituencySpans(Parse.parseParse(testParseString));
-    FMeasure measure = new FMeasure();
+    ParseEval measure = new ParseEval();
