OPENNLP-505 Added constructors which load the model from a File or URL object.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1361114 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.net.URI;
+import java.net.URL;
-  protected final Map<String, Object> artifactMap;
+  protected final Map<String, Object> artifactMap = new HashMap<String, Object>();
-  /**
-   * Initializes the current instance. The sub-class constructor should call the
-   * method {@link #checkArtifactMap()} to check the artifact map is OK.
-   * 
-   * @param componentName
-   *          the component name
-   * @param languageCode
-   *          the language code
-   * @param manifestInfoEntries
-   *          additional information in the manifest
-   */
-  protected BaseModel(String componentName, String languageCode, Map<String, String> manifestInfoEntries) {
-    this(componentName, languageCode, manifestInfoEntries, null);
+  private BaseModel(String componentName, boolean isLoadedFromSerialized) {
+    this.isLoadedFromSerialized = isLoadedFromSerialized;
+    
+    if (componentName == null)
+      throw new IllegalArgumentException("componentName must not be null!");
+    
+    this.componentName = componentName;
-    isLoadedFromSerialized = false;
+    this(componentName, false);
-    if (componentName == null)
-        throw new IllegalArgumentException("componentName must not be null!");
-    
-    this.componentName = componentName;
-    
-    artifactMap = new HashMap<String, Object>();
-    
+   * Initializes the current instance. The sub-class constructor should call the
+   * method {@link #checkArtifactMap()} to check the artifact map is OK.
+   * 
+   * @param componentName
+   *          the component name
+   * @param languageCode
+   *          the language code
+   * @param manifestInfoEntries
+   *          additional information in the manifest
+   */
+  protected BaseModel(String componentName, String languageCode, Map<String, String> manifestInfoEntries) {
+    this(componentName, languageCode, manifestInfoEntries, null);
+  }
+  
+  /**
-
-    this.isLoadedFromSerialized = true;
-
-    if (componentName == null)
-      throw new IllegalArgumentException("componentName must not be null!");
+    this(componentName, true);
-    this.componentName = componentName;
+    loadModel(in);
+  }
+
+  protected BaseModel(String componentName, File modelFile) throws IOException, InvalidFormatException  {
+    this(componentName, true);
-    artifactMap = new HashMap<String, Object>();
+    InputStream in = new BufferedInputStream(new FileInputStream(modelFile));
+    
+    try {
+      loadModel(in);
+    }
+    finally {
+      in.close();
+    }
+  }
+
+  protected BaseModel(String componentName, URL modelURL) throws IOException, InvalidFormatException  {
+    this(componentName, true);
+    
+    InputStream in = modelURL.openStream();
+
+    try {
+      loadModel(in);
+    }
+    finally {
+      in.close();
+    }
+  }
+
+  private void loadModel(InputStream in) throws IOException, InvalidFormatException {
-
+  
