OPENNLP-611
GeoHashBinScorer has java 1.7 dependant objects.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1536650 13f79535-47bb-0310-9956-ffa450edef68

+ private Map<String, Set<Integer>> countryMentions = new HashMap<String, Set<Integer>>();
-/**
- * Finds mentions of countries based on a list from MySQL stored procedure called getCountryList. This method finds country mentions in documents,
- * which is an essential element of the scoring that is done for geo linkedspans. Lazily loads the list from the database.
- * @param docText the full text of the document
- * @param properties EntityLinkerProperties for getting database connection
- * @return
- */
+
+  /**
+   * Finds mentions of countries based on a list from MySQL stored procedure
+   * called getCountryList. This method finds country mentions in documents,
+   * which is an essential element of the scoring that is done for geo
+   * linkedspans. Lazily loads the list from the database.
+   *
+   * @param docText    the full text of the document
+   * @param properties EntityLinkerProperties for getting database connection
+   * @return
+   */
-    Map<String, Set<Integer>> hits = new HashMap<String, Set<Integer>>();
+    countryMentions = new HashMap<String, Set<Integer>>();
+    nameCodesMap.clear();
-          if (hits.containsKey(code)) {
-            hits.get(code).add(start);
+          if (countryMentions.containsKey(code)) {
+            countryMentions.get(code).add(start);
-            hits.put(code, newset);
+            countryMentions.put(code, newset);
-    //System.out.println(hits);
-    return hits;
+
+    return countryMentions;
-/**
- * returns a unique list of country codes
- * @param hits the hits discovered
- * @return
- */
+
+  /**
+   * returns a unique list of country codes
+   *
+   * @param countryMentions the countryMentions discovered
+   * @return
+   */
-/**
- * reads the list from the database by calling a stored procedure getCountryList
- * @param properties
- * @return
- * @throws SQLException
- */
+
+  /**
+   * reads the list from the database by calling a stored procedure
+   * getCountryList
+   *
+   * @param properties
+   * @return
+   * @throws SQLException
+   */
+
+  public Map<String, Set<Integer>> getCountryMentions() {
+    return countryMentions;
+  }
+
