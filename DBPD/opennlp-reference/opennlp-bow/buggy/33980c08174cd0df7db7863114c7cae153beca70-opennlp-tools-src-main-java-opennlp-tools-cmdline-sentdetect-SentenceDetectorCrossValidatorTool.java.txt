OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.ArgumentParser;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
+import opennlp.tools.cmdline.AbstractCrossValidatorTool;
+import opennlp.tools.cmdline.sentdetect.SentenceDetectorCrossValidatorTool.CVToolParams;
-import opennlp.tools.util.ObjectStream;
-import opennlp.tools.util.TrainingParameters;
+import opennlp.tools.util.model.ModelUtil;
-public final class SentenceDetectorCrossValidatorTool implements CmdLineTool {
+public final class SentenceDetectorCrossValidatorTool
+    extends AbstractCrossValidatorTool<SentenceSample, CVToolParams> {
-    
-  public String getName() {
-    return "SentenceDetectorCrossValidator";
+  public SentenceDetectorCrossValidatorTool() {
+    super(SentenceSample.class, CVToolParams.class);
-  
+
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " " + ArgumentParser.createUsage(CVToolParams.class);
-  }
+  public void run(String format, String[] args) {
+    super.run(format, args);
-  public void run(String[] args) {
-    
-    String errorMessage = ArgumentParser.validateArgumentsLoudly(args, CVToolParams.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
+    mlParams = CmdLineUtil.loadTrainingParameters(params.getParams(), false);
+    if (mlParams == null) {
+      mlParams = ModelUtil.createTrainingParameters(params.getIterations(), params.getCutoff());
-    
-    CVToolParams params = ArgumentParser.parse(args, CVToolParams.class);
-    
-    TrainingParameters mlParams =
-      CmdLineUtil.loadTrainingParameters(params.getParams(), false);
-    
-    File trainingDataInFile = params.getData();
-    CmdLineUtil.checkInputFile("Training Data", trainingDataInFile);
-    
-    Charset encoding = params.getEncoding();
-    
-    ObjectStream<SentenceSample> sampleStream = SentenceDetectorTrainerTool.openSampleData("Training Data",
-        trainingDataInFile, encoding);
-    
+
-    if (mlParams == null) {
-      mlParams = new TrainingParameters();
-      mlParams.put(TrainingParameters.ALGORITHM_PARAM, "MAXENT");
-      mlParams.put(TrainingParameters.ITERATIONS_PARAM,
-          Integer.toString(params.getIterations()));
-      mlParams.put(TrainingParameters.CUTOFF_PARAM,
-          Integer.toString(params.getCutoff()));
-    }
-
-      Dictionary abbreviations = SentenceDetectorTrainerTool.loadDict(params
-          .getAbbDict());
-      validator = new SDCrossValidator(params.getLang(), mlParams,
-          abbreviations, errorListener);
+      Dictionary abbreviations = SentenceDetectorTrainerTool.loadDict(params.getAbbDict());
+      validator = new SDCrossValidator(factory.getLang(), mlParams, abbreviations, errorListener);
-      CmdLineUtil.printTrainingIoError(e);
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());
