OPENNLP-429: Refactored POSTaggerME constructors

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1243645 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Arrays;
-  private static class PosSequenceValidator implements SequenceValidator<String> {
-    
-    private POSDictionary tagDictionary;
-    
-    PosSequenceValidator(POSDictionary tagDictionary) {
-      this.tagDictionary = tagDictionary;
-    }
-    
-    public boolean validSequence(int i, String[] inputSequence,
-        String[] outcomesSequence, String outcome) {
-      if (tagDictionary == null) {
-        return true;
-      }
-      else {
-        String[] tags = tagDictionary.getTags(inputSequence[i]);
-        if (tags == null) {
-          return true;
-        }
-        else {
-          return Arrays.asList(tags).contains(outcome);
-        }
-      }
-    }
-  }
-  
+  /**
+   * Constructor that overrides the {@link SequenceValidator} from the model.
+   * 
+   * @deprecated use {@link #POSTaggerME(POSModel, int, int)} instead. The model
+   *             knows which {@link SequenceValidator} to use.
+   */
+    POSTaggerFactory factory = model.getFactory();
-    contextGen = new DefaultPOSContextGenerator(beamSize, model.getNgramDictionary());
-    tagDictionary = model.getTagDictionary();
+    contextGen = factory.getPOSContextGenerator(beamSize);
+    tagDictionary = factory.getPOSDictionary();
-    beam = new BeamSearch<String>(size, contextGen, posModel, sequenceValidator, cacheSize);
+    beam = new BeamSearch<String>(size, contextGen, posModel,
+        sequenceValidator, cacheSize);
-    this(model, beamSize, cacheSize, new PosSequenceValidator(model.getTagDictionary()));
+    POSTaggerFactory factory = model.getFactory();
+    posModel = model.getPosModel();
+    contextGen = factory.getPOSContextGenerator(beamSize);
+    tagDictionary = factory.getPOSDictionary();
+    size = beamSize;
+    beam = new BeamSearch<String>(size, contextGen, posModel,
+        factory.getSequenceValidator(), cacheSize);
