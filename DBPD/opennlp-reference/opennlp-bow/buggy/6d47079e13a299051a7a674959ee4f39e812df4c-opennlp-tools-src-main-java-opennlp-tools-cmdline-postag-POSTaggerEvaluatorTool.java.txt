OPENNLP-449: Modified POSTagger evaluator tools to use the new report.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1294201 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
+import opennlp.tools.cmdline.CmdLineUtil;
+import opennlp.tools.cmdline.ArgumentParser.OptionalParameter;
+import opennlp.tools.cmdline.ArgumentParser.ParameterDescription;
+    @ParameterDescription(valueName = "outputFile", description = "the path of the fine-grained report file.")
+    @OptionalParameter
+    File getReportOutputFile();
+    POSTaggerFineGrainedReportListener reportListener = null;
+    File reportFile = params.getReportOutputFile();
+    OutputStream reportOutputStream = null;
+    if (reportFile != null) {
+      CmdLineUtil.checkOutputFile("Report Output File", reportFile);
+      try {
+        reportOutputStream = new FileOutputStream(reportFile);
+        reportListener = new POSTaggerFineGrainedReportListener(
+            reportOutputStream);
+      } catch (FileNotFoundException e) {
+        throw new TerminateToolException(-1,
+            "IO error while creating POS Tagger fine-grained report file: "
+                + e.getMessage());
+      }
+    }
+
-        new opennlp.tools.postag.POSTaggerME(model), missclassifiedListener);
+        new opennlp.tools.postag.POSTaggerME(model), missclassifiedListener,
+        reportListener);
+    if (reportListener != null) {
+      System.out.println("Writing fine-grained report to "
+          + params.getReportOutputFile().getAbsolutePath());
+      reportListener.writeReport();
+
+      try {
+        // TODO: is it a problem to close the stream now?
+        reportOutputStream.close();
+      } catch (IOException e) {
+        // nothing to do
+      }
+    }
+
