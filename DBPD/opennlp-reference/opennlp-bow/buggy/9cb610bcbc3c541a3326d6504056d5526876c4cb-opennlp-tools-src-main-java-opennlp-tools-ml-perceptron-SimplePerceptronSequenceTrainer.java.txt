OPENNLP-871: Clean up code base for release

This closes #20

+import java.util.ArrayList;
+import java.util.List;
-
-  double[] modelDistribution;
+  private double[] modelDistribution;
-  private int VALUE = 0;
-  private int ITER = 1;
-  private int EVENT = 2;
+  private static final int VALUE = 0;
+  private static final int ITER = 1;
+  private static final int EVENT = 2;
-  int numSequences;
+  private int numSequences;
-    if (algorithmName != null
-        && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName))) {
-      return false;
-    }
-
-    return true;
+    return !(algorithmName != null
+      && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName)));
-    pmap = new HashMap<String, Integer>();
+    pmap = new HashMap<>();
-    omap = new HashMap<String,Integer>();
+    omap = new HashMap<>();
-    /*************** Create and return the model ******************/
+    /* Create and return the model ****/
-    Map<String,Float>[] featureCounts = new Map[numOutcomes];
+    List<Map<String,Float>> featureCounts = new ArrayList<>(numOutcomes);
-      featureCounts[oi] = new HashMap<String,Float>();
+      featureCounts.add(new HashMap<>());
-          featureCounts[oi].clear();
+          featureCounts.get(oi).clear();
-            Float c = featureCounts[oi].get(contextStrings[ci]);
+            Float c = featureCounts.get(oi).get(contextStrings[ci]);
-            featureCounts[oi].put(contextStrings[ci], c);
+            featureCounts.get(oi).put(contextStrings[ci], c);
-            Float c = featureCounts[oi].get(contextStrings[ci]);
+            Float c = featureCounts.get(oi).get(contextStrings[ci]);
-              featureCounts[oi].remove(contextStrings[ci]);
+              featureCounts.get(oi).remove(contextStrings[ci]);
-              featureCounts[oi].put(contextStrings[ci], c);
+              featureCounts.get(oi).put(contextStrings[ci], c);
-          for (String feature : featureCounts[oi].keySet()) {
+          for (String feature : featureCounts.get(oi).keySet()) {
-              params[pi].updateParameter(oi, featureCounts[oi].get(feature));
+              params[pi].updateParameter(oi, featureCounts.get(oi).get(feature));
