OPENNLP-946: GISTrainer should extend AbstractEventTrainer

This closes #104

+import opennlp.tools.ml.AbstractEventTrainer;
+import opennlp.tools.ml.model.AbstractModel;
+import opennlp.tools.ml.model.MaxentModel;
-public class GISTrainer {
+public class GISTrainer extends AbstractEventTrainer {
+  public static final String MAXENT_VALUE = "MAXENT";
+
+  /**
+   * If we are using smoothing, this is used as the "number" of times we want
+   * the trainer to imagine that it saw a feature that it actually didn't see.
+   * Defaulted to 0.1.
+   */
+  private static final double SMOOTHING_OBSERVATION = 0.1;
+
+  private static final String SMOOTHING_PARAM = "smoothing";
+  private static final boolean SMOOTHING_DEFAULT = false;
+
-  GISTrainer() {
+  public GISTrainer() {
+  @Override
+  public boolean isSortAndMerge() {
+    return true;
+  }
+
+  @Override
+  public MaxentModel doTrain(DataIndexer indexer) throws IOException {
+    int iterations = getIterations();
+
+    AbstractModel model;
+
+    boolean smoothing = trainingParameters.getBooleanParameter(SMOOTHING_PARAM, SMOOTHING_DEFAULT);
+    int threads = trainingParameters.getIntParameter(TrainingParameters.THREADS_PARAM, 1);
+
+    this.setSmoothing(smoothing);
+    model = trainModel(iterations, indexer, threads);
+
+    return model;
+  }
+
+   * Train a model using the GIS algorithm, assuming 100 iterations and no
+   * cutoff.
+   *
+   * @param eventStream
+   *          The EventStream holding the data on which this model will be
+   *          trained.
+   * @return The newly trained model, which can be used immediately or saved to
+   *         disk using an opennlp.tools.ml.maxent.io.GISModelWriter object.
+   */
+  public GISModel trainModel(ObjectStream<Event> eventStream) throws IOException {
+    return trainModel(eventStream, 100, 0);
+  }
+
+  /**
-    indexingParameters.put(GIS.CUTOFF_PARAM, Integer.toString(cutoff));
-    indexingParameters.put(GIS.ITERATIONS_PARAM, Integer.toString(iterations));
+    indexingParameters.put(GISTrainer.CUTOFF_PARAM, Integer.toString(cutoff));
+    indexingParameters.put(GISTrainer.ITERATIONS_PARAM, Integer.toString(iterations));
+   * @param threads
+   * @return The newly trained model, which can be used immediately or saved
+   * to disk using an opennlp.tools.ml.maxent.io.GISModelWriter object.
+   */
+  public GISModel trainModel(int iterations, DataIndexer di, int threads) {
+    return trainModel(iterations, di, new UniformPrior(), threads);
+  }
+
+  /**
+   * Train a model using the GIS algorithm.
+   *
+   * @param iterations The number of GIS iterations to perform.
+   * @param di         The data indexer used to compress events in memory.
-  private void display(String s) {
+  protected void display(String s) {
