OPENNLP-581 Added Trainer, EventTrainer and SequenceTrainer interfaces and some abstract implementations. Modified existing trainers to extend the abstract classes

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1489970 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import opennlp.tools.ml.AbstractSequenceTrainer;
-public class SimplePerceptronSequenceTrainer {
+public class SimplePerceptronSequenceTrainer extends AbstractSequenceTrainer {
+
+  public static final String PERCEPTRON_SEQUENCE_VALUE = "PERCEPTRON_SEQUENCE";
+  // >> members related to AbstractSequenceTrainer
+  public SimplePerceptronSequenceTrainer(Map<String, String> trainParams,
+      Map<String, String> reportMap) {
+    super(trainParams, reportMap);
+  }
+
+  public SimplePerceptronSequenceTrainer() {
+    super(Collections.<String, String> emptyMap(), Collections
+        .<String, String> emptyMap());
+  }
+
+  public boolean isValid() {
+
+    if (!super.isValid()) {
+      return false;
+    }
+
+    String algorithmName = getAlgorithm();
+
+    if (algorithmName != null
+        && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName))) {
+      return false;
+    }
+
+    return true;
+  }
+
+  public AbstractModel train(SequenceStream events) throws IOException {
+    if (!isValid()) {
+      throw new IllegalArgumentException("trainParams are not valid!");
+    }
+
+    int iterations = getIterations();
+    int cutoff = getCutoff();
+
+    boolean useAverage = getBooleanParam("UseAverage", true);
+
+    return trainModel(iterations, events, cutoff, useAverage);
+  }
+
+  // << members related to AbstractSequenceTrainer
+
