OPENNLP-641 Moved beam search parameter to the training parameters file

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1574524 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Properties;
+import opennlp.tools.ml.BeamSearch;
+import opennlp.tools.namefind.NameFinderME;
-    this(languageCode, posModel, null, new POSTaggerFactory(ngramDict,
+    this(languageCode, posModel, POSTaggerME.DEFAULT_BEAM_SIZE, null, new POSTaggerFactory(ngramDict,
-    checkArtifactMap();
+    // TODO: This fails probably for the sequence model ... ?! 
+    // checkArtifactMap();
+  }
+
+  public POSModel(String languageCode, MaxentModel posModel,
+      Map<String, String> manifestInfoEntries, POSTaggerFactory posFactory) {
+    this(languageCode, posModel, POSTaggerME.DEFAULT_BEAM_SIZE, manifestInfoEntries, posFactory);
-  public POSModel(String languageCode, MaxentModel posModel,
+  public POSModel(String languageCode, MaxentModel posModel, int beamSize,
-  // TODO: This should be deprecated for the release ...
+  /**
+   * @deprecated use getPosSequenceModel instead. This method will be removed soon.
+   */
+  @Deprecated
+
-    if (artifactMap.get(POS_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
+    
+    Properties manifest = (Properties) artifactMap.get(MANIFEST_ENTRY);
+    
+    if (artifactMap.get(POS_MODEL_ENTRY_NAME) instanceof MaxentModel) {
+      String beamSizeString = manifest.getProperty(BeamSearch.BEAM_SIZE_PARAMETER);
+      
+      int beamSize = NameFinderME.DEFAULT_BEAM_SIZE;
+      if (beamSizeString != null) {
+        beamSize = Integer.parseInt(beamSizeString);
+      }
+      
+      return new BeamSearch<>(beamSize, (MaxentModel) artifactMap.get(POS_MODEL_ENTRY_NAME));
+    }
+    else if (artifactMap.get(POS_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
