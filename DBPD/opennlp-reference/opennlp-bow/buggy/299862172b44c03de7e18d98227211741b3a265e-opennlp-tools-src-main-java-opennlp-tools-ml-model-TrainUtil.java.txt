OPENNLP-581 First proposal for a TrainerFactory. Again, I only changed the TrainUtil to avoid changing many classes. I still not happy with the implementation, but would like feedback

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1490460 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.ml.SequenceTrainer;
+import opennlp.tools.ml.TrainerFactory;
-  
-  private static final int CUTOFF_DEFAULT = 5;
-  private static final int ITERATIONS_DEFAULT = 100;
-  
-  private static String getStringParam(Map<String, String> trainParams, String key,
-      String defaultValue, Map<String, String> reportMap) {
-
-    String valueString = trainParams.get(key);
-
-    if (valueString == null)
-      valueString = defaultValue;
-    
-    if (reportMap != null)
-      reportMap.put(key, valueString);
-    
-    return valueString;
-  }
-  
-  
-    if (!isValid(trainParams))
-        throw new IllegalArgumentException("trainParams are not valid!");
-    
-    if(isSequenceTraining(trainParams))
-      throw new IllegalArgumentException("sequence training is not supported by this method!");
-    
-    String algorithmName = getStringParam(trainParams, ALGORITHM_PARAM, MAXENT_VALUE, reportMap);
-    
-    EventTrainer trainer;
-    if(PERCEPTRON_VALUE.equals(algorithmName)) {
-      
-      trainer = new PerceptronTrainer(trainParams, reportMap);
-      
-    } else if(MAXENT_VALUE.equals(algorithmName)) {
-      
-      trainer = new GIS(trainParams, reportMap);
-      
-    } else if(MAXENT_QN_VALUE.equals(algorithmName)) {
-      
-      trainer = new QNTrainer(trainParams, reportMap);
-    
-    } else {
-      trainer = new GIS(trainParams, reportMap); // default to maxent?
+    if(!TrainerFactory.isSupportEvent(trainParams)) {
+      throw new IllegalArgumentException("EventTrain is not supported");
+    EventTrainer trainer = TrainerFactory.getEventTrainer(trainParams, reportMap);
-    SimplePerceptronSequenceTrainer trainer = new SimplePerceptronSequenceTrainer(
-        trainParams, reportMap);
+    if(!TrainerFactory.isSupportSequence(trainParams)) {
+      throw new IllegalArgumentException("EventTrain is not supported");
+    }
+    SequenceTrainer trainer = TrainerFactory.getSequenceTrainer(trainParams, reportMap);
+    
