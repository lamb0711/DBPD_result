OPENNLP-226 Removed add/remove listener from Evaluator. Evaluator constructor expects a list of listeners. Removed the the notify methods, the code now is inline.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1159447 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.LinkedList;
-  private List<EvaluationSampleListener<T>> listeners = new LinkedList<EvaluationSampleListener<T>>();
+  private List<EvaluationSampleListener<T>> listeners;
+  
+  public Evaluator() {
+    this.listeners = null;
+  }
+  
+  public Evaluator(List<EvaluationSampleListener<T>> listeners) {
+    this.listeners = listeners;
+  }
-    if(sample.equals(predicted)) {
-      notifyCorrectlyClassified(sample, predicted);
-    } else {
-      notifyMissclassified(sample, predicted);
+    if(listeners != null) {
+      if(sample.equals(predicted)) {
+        for (EvaluationSampleListener<T> listener : listeners) {
+          listener.correctlyClassified(predicted, predicted);
+        }
+      } else {
+        for (EvaluationSampleListener<T> listener : listeners) {
+          listener.missclassified(sample, predicted);
+        } 
+      }
-  
-  /**
-   * Add a {@link EvaluationSampleListener} that will be notified when a sample is evaluated.
-   * @param listener the listener implementation to be added
-   */
-  public synchronized void addListener(EvaluationSampleListener<T> listener) {
-    this.listeners.add(listener);
-  }
-  
-  /**
-   * Removes a {@link EvaluationSampleListener}.
-   * @param listener the listener implementation to be removed
-   */
-  public synchronized void removeListener(EvaluationSampleListener<T> listener) {
-    this.listeners.remove(listener);
-  }
-  
-  private void notifyCorrectlyClassified(T reference, T prediction) {
-    for (EvaluationSampleListener<T> listener : listeners) {
-      listener.correctlyClassified(reference, prediction);
-    }
-  }
-  
-  private void notifyMissclassified(T reference, T prediction) {
-    for (EvaluationSampleListener<T> listener : listeners) {
-      listener.missclassified(reference, prediction);
-    }   
-  }
