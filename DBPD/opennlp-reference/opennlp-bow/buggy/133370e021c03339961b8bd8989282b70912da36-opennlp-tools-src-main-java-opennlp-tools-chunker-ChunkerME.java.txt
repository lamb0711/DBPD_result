OPENNLP-539: Implemented customization factory for the Chunker

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1392937 13f79535-47bb-0310-9956-ffa450edef68

+   * @deprecated Use {@link #ChunkerME(ChunkerModel, int)} instead 
+   *    and use the {@link ChunkerFactory} to configure the {@link SequenceValidator} and {@link ChunkerContextGenerator}.
+   * @deprecated Use {@link #ChunkerME(ChunkerModel, int)} instead 
+   *    and use the {@link ChunkerFactory} to configure the {@link SequenceValidator}.
-    this(model, beamSize, null);
+    this.model = model.getChunkerModel();
+    ChunkerContextGenerator contextGenerator = model.getFactory().getContextGenerator();
+    SequenceValidator<String> sequenceValidator = model.getFactory().getSequenceValidator();
+    beam = new BeamSearch<String>(beamSize, contextGenerator, this.model, sequenceValidator, 0);
+  
+  public static ChunkerModel train(String lang, ObjectStream<ChunkSample> in,
+      TrainingParameters mlParams, ChunkerFactory factory) throws IOException {
+    Map<String, String> manifestInfoEntries = new HashMap<String, String>();
+
+    EventStream es = new ChunkerEventStream(in, factory.getContextGenerator());
+
+    AbstractModel maxentModel = TrainUtil.train(es, mlParams.getSettings(),
+        manifestInfoEntries);
+
+    return new ChunkerModel(lang, maxentModel, manifestInfoEntries, factory);
+  }
+
+  /**
+   * @deprecated Use
+   *             {@link #train(String, ObjectStream, ChunkerContextGenerator, TrainingParameters, ChunkerFactory)}
+   *             instead.
+   */
