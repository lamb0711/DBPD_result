OPENNLP-505 Added constructors which load the model from a File or URL object.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1361114 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.net.URI;
+import java.net.URL;
-  protected final Map<String, Object> artifactMap;
+  protected final Map<String, Object> artifactMap = new HashMap<String, Object>();
-  /**
-   * Initializes the current instance. The sub-class constructor should call the
-   * method {@link #checkArtifactMap()} to check the artifact map is OK.
-   * 
-   * @param componentName
-   *          the component name
-   * @param languageCode
-   *          the language code
-   * @param manifestInfoEntries
-   *          additional information in the manifest
-   */
-  protected BaseModel(String componentName, String languageCode, Map<String, String> manifestInfoEntries) {
-    this(componentName, languageCode, manifestInfoEntries, null);
+  private BaseModel(String componentName, boolean isLoadedFromSerialized) {
+    this.isLoadedFromSerialized = isLoadedFromSerialized;
+    
+    if (componentName == null)
+      throw new IllegalArgumentException("componentName must not be null!");
+    
+    this.componentName = componentName;
-    isLoadedFromSerialized = false;
+    this(componentName, false);
-    if (componentName == null)
-        throw new IllegalArgumentException("componentName must not be null!");
-    
-    this.componentName = componentName;
-    
-    artifactMap = new HashMap<String, Object>();
-    
+   * Initializes the current instance. The sub-class constructor should call the
+   * method {@link #checkArtifactMap()} to check the artifact map is OK.
+   * 
+   * @param componentName
+   *          the component name
+   * @param languageCode
+   *          the language code
+   * @param manifestInfoEntries
+   *          additional information in the manifest
+   */
+  protected BaseModel(String componentName, String languageCode, Map<String, String> manifestInfoEntries) {
+    this(componentName, languageCode, manifestInfoEntries, null);
+  }
+  
+  /**
-
-    this.isLoadedFromSerialized = true;
-
-    if (componentName == null)
-      throw new IllegalArgumentException("componentName must not be null!");
+    this(componentName, true);
-    this.componentName = componentName;
+    loadModel(in);
+  }
+
+  protected BaseModel(String componentName, File modelFile) throws IOException, InvalidFormatException  {
+    this(componentName, true);
-    artifactMap = new HashMap<String, Object>();
+    InputStream in = new BufferedInputStream(new FileInputStream(modelFile));
+    
+    try {
+      loadModel(in);
+    }
+    finally {
+      in.close();
+    }
+  }
+
+  protected BaseModel(String componentName, URL modelURL) throws IOException, InvalidFormatException  {
+    this(componentName, true);
+    
+    InputStream in = modelURL.openStream();
+
+    try {
+      loadModel(in);
+    }
+    finally {
+      in.close();
+    }
+  }
+
+  private void loadModel(InputStream in) throws IOException, InvalidFormatException {
-
+  

INS26 INS26 INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS42 INS44 INS44 INS8 MOV29 INS83 INS42 MOV44 INS44 INS43 INS43 INS8 INS83 INS42 INS44 INS44 INS43 INS43 INS8 INS83 INS42 INS44 INS44 INS43 INS43 INS8 UPD83 INS39 UPD42 MOV14 INS43 INS42 INS39 INS42 MOV21 MOV25 MOV21 INS17 INS43 INS42 INS42 INS42 INS17 MOV25 INS21 INS43 INS42 INS43 INS42 INS42 INS42 INS17 INS60 INS54 INS43 INS42 INS43 INS42 INS42 INS42 INS17 INS60 INS54 INS42 INS42 INS9 INS42 INS42 INS9 INS32 INS42 INS42 INS42 INS9 INS43 INS59 INS8 INS8 INS42 INS42 INS42 INS9 INS43 INS59 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS14 INS21 INS21 INS42 INS42 INS32 INS21 INS21 INS43 INS14 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL9 DEL42 DEL9 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21