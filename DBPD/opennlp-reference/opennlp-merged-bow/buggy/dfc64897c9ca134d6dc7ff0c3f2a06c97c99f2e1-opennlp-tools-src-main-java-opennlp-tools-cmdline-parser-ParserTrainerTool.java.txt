OPENNLP-175 Updated cmd line interface and added train methods to train with trainig parameters file/object

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1124372 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.model.TrainUtil;
+    opennlp.tools.util.TrainingParameters mlParams = 
+      CmdLineUtil.loadTrainingParameters(CmdLineUtil.getParameter("-params", args));
+    
+    if (mlParams != null) {
+      if (!TrainUtil.isValid(mlParams.getSettings())) {
+        System.err.println("Training parameters file is invalid!");
+        throw new TerminateToolException(-1);
+      }
+      
+      if (TrainUtil.isSequenceTraining(mlParams.getSettings())) {
+        System.err.println("Sequence training is not supported!");
+        throw new TerminateToolException(-1);
+      }
+    }
+    
-      if (ParserType.CHUNKING.equals(parameters.getParserType())) {
-        model = opennlp.tools.parser.chunking.Parser.train(
-            parameters.getLanguage(), sampleStream, rules, 
-            parameters.getNumberOfIterations(), parameters.getCutoff());
-      }
-      else if (ParserType.TREEINSERT.equals(parameters.getParserType())) {
-        model = opennlp.tools.parser.treeinsert.Parser.train(parameters.getLanguage(), sampleStream, rules, parameters.getNumberOfIterations(), 
-            parameters.getCutoff());
+      if (mlParams == null) {
+        if (ParserType.CHUNKING.equals(parameters.getParserType())) {
+          model = opennlp.tools.parser.chunking.Parser.train(
+              parameters.getLanguage(), sampleStream, rules, 
+              parameters.getNumberOfIterations(), parameters.getCutoff());
+        }
+        else if (ParserType.TREEINSERT.equals(parameters.getParserType())) {
+          model = opennlp.tools.parser.treeinsert.Parser.train(parameters.getLanguage(), sampleStream, rules, parameters.getNumberOfIterations(), 
+              parameters.getCutoff());
+        }
+        else {
+          throw new IllegalStateException();
+        }
-        throw new IllegalStateException();
+        if (ParserType.CHUNKING.equals(parameters.getParserType())) {
+          model = opennlp.tools.parser.chunking.Parser.train(
+              parameters.getLanguage(), sampleStream, rules, 
+              mlParams);
+        }
+        else if (ParserType.TREEINSERT.equals(parameters.getParserType())) {
+          model = opennlp.tools.parser.treeinsert.Parser.train(parameters.getLanguage(), sampleStream, rules,
+              mlParams);
+        }
+        else {
+          throw new IllegalStateException();
+        }
+
-      

INS26 INS40 INS60 INS25 INS43 INS59 INS27 INS8 INS8 INS40 INS42 INS32 INS42 INS33 INS25 INS25 MOV60 INS25 INS42 INS42 INS32 INS38 INS8 INS32 INS8 INS27 MOV8 INS8 INS42 INS42 INS45 INS42 INS32 INS21 INS53 INS42 INS42 INS32 INS21 INS53 INS42 INS33 INS25 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS32 INS14 INS32 INS8 INS25 INS42 INS42 INS40 INS42 INS45 INS43 INS38 INS40 INS42 INS45 INS43 INS38 INS40 INS42 INS32 INS21 INS32 INS8 INS8 INS42 INS34 INS42 INS34 INS42 INS42 INS7 INS40 INS42 INS32 INS21 INS53 INS42 INS32 INS42 INS42 INS7 INS14 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42