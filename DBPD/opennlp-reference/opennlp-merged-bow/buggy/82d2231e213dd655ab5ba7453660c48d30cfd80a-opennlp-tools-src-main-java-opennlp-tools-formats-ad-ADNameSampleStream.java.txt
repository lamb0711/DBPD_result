OPENNLP-485: Improved how contractions are handled: some are expanded to more than 2 tokens. Also now we force tokenization of named entities that has punctuations.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1305904 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import java.util.LinkedList;
+  private static final Pattern whitespacePattern = Pattern.compile("\\s+");
+  private static final Pattern underlinePattern = Pattern.compile("[_]+");
+  private static final Pattern alphanumericPattern = Pattern.compile("^[\\p{L}\\p{Nd}-]+$");
+
-          sentence.add(c);
+          String[] parts = whitespacePattern.split(c);
+          sentence.addAll(Arrays.asList(parts));
-          String[] lexemes = leaf.getLexeme().split("_");
+          String[] lexemes = underlinePattern.split(leaf.getLexeme());
-        sentence.addAll(Arrays.asList(leaf.getLexeme().split("_")));
+        sentence.addAll(processLexeme(leaf.getLexeme()));
-        // we check if it is true, and expand the lest NER
+        // we check if it is true, and expand the last NER
-  
+  private List<String> processLexeme(String lexemeStr) {
+    List<String> out = new ArrayList<String>();
+    String[] parts = underlinePattern.split(lexemeStr);
+    for (String tok : parts) {
+      if(tok.length() > 1 && !alphanumericPattern.matcher(tok).matches()) {
+        out.addAll(processTok(tok));
+      } else {
+        out.add(tok);
+      }
+    }
+    return out;
+  }
-
-
-
+  private Collection<? extends String> processTok(String tok) {
+    String original = tok;
+    List<String> out = new ArrayList<String>();
+    LinkedList<String> suffix = new LinkedList<String>();
+    char first = tok.charAt(0);
+    if (first == '«') {
+      out.add(Character.toString(first));
+      tok = tok.substring(1);
+    }
+    char last = tok.charAt(tok.length() - 1);
+    if (last == '»' || last == ':' || last == ',' || last == '!' ) {
+      suffix.add(Character.toString(last));
+      tok = tok.substring(0, tok.length() - 1);
+    }
+    
+    if(!original.equals(tok) && tok.length() > 1 && !alphanumericPattern.matcher(tok).matches()) {
+      out.addAll(processTok(tok));
+    } else {
+      out.add(tok);
+    }
+    out.addAll(suffix);
+    return out;
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS60 INS60 INS70 INS41 INS43 INS76 INS43 INS42 INS60 INS60 INS60 INS60 INS25 INS60 INS25 INS25 INS21 INS41 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS74 INS59 INS5 INS59 INS44 INS42 INS8 INS42 INS42 INS43 INS42 INS43 INS59 INS74 INS59 INS74 INS59 INS39 INS59 INS27 INS8 INS39 INS59 INS27 INS8 INS27 INS8 INS8 INS32 INS42 INS43 INS43 INS42 INS14 INS43 INS85 INS42 INS32 INS43 INS42 INS25 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS14 INS42 INS32 INS42 INS13 INS21 INS21 INS42 INS32 INS27 INS27 INS21 INS21 INS27 INS38 INS21 INS21 INS42 INS42 INS42 MOV32 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS8 INS42 INS42 INS74 INS42 INS42 INS74 INS42 INS42 INS34 INS32 INS7 INS42 INS42 INS27 INS27 INS27 INS42 INS13 INS32 INS7 INS38 INS27 INS32 INS32 INS32 UPD42 UPD42 MOV32 INS43 INS43 INS27 INS38 INS21 INS21 INS43 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS32 INS32 INS34 INS27 INS27 INS42 INS13 INS42 INS42 INS32 INS42 INS32 INS32 INS32 INS34 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 INS42 INS42 INS32 INS34 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS13 INS42 INS13 INS42 INS42 INS42 INS42 INS42 INS34 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 MOV32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS34 INS5 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS32 UPD42 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 DEL45 DEL45 DEL42 DEL42 DEL32