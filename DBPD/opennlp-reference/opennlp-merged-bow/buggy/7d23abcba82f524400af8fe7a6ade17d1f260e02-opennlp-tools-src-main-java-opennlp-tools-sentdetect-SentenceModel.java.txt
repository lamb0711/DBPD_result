OPENNLP-434: The code that handles SenteceDetector resources and configuration moved to SentenceDetectorFactory

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1292630 13f79535-47bb-0310-9956-ffa450edef68

-  private static final String ABBREVIATIONS_ENTRY_NAME = "abbreviations.dictionary";
-  private static final String EOS_CHARACTERS_PROPERTY = "eosCharacters";
-
-  private static final String TOKEN_END_PROPERTY = "useTokenEnd";
-      boolean useTokenEnd, Dictionary abbreviations, char[] eosCharacters, Map<String, String> manifestInfoEntries) {
-
-    super(COMPONENT_NAME, languageCode, manifestInfoEntries);
-
+      Map<String, String> manifestInfoEntries, SentenceDetectorFactory sdFactory) {
+    super(COMPONENT_NAME, languageCode, manifestInfoEntries, sdFactory);
-
-    setManifestProperty(TOKEN_END_PROPERTY, Boolean.toString(useTokenEnd));
-
-    // Abbreviations are optional
-    if (abbreviations != null)
-      artifactMap.put(ABBREVIATIONS_ENTRY_NAME, abbreviations);
-
-    // EOS characters are optional
-    if (eosCharacters != null)
-      setManifestProperty(EOS_CHARACTERS_PROPERTY,
-          eosCharArrayToString(eosCharacters));
+  /**
+   * TODO: was added in 1.5.3 -> remove
+   * @deprecated Use
+   *             {@link #SentenceModel(String, AbstractModel, Map, SentenceDetectorFactory)}
+   *             instead and pass in a {@link SentenceDetectorFactory}
+   */
+  public SentenceModel(String languageCode, AbstractModel sentModel,
+      boolean useTokenEnd, Dictionary abbreviations, char[] eosCharacters, Map<String, String> manifestInfoEntries) {
+    this(languageCode, sentModel, manifestInfoEntries,
+        new SentenceDetectorFactory(languageCode, useTokenEnd, abbreviations,
+            eosCharacters));
+  }
+
+  /**
+   * TODO: was added in 1.5.3 -> remove
+   * 
+   * @deprecated Use
+   *             {@link #SentenceModel(String, AbstractModel, Map, SentenceDetectorFactory)}
+   *             instead and pass in a {@link SentenceDetectorFactory}
+   */
-    
-    if (getManifestProperty(TOKEN_END_PROPERTY) == null)
-      throw new InvalidFormatException(TOKEN_END_PROPERTY + " is a mandatory property!");
+  }
-    Object abbreviationsEntry = artifactMap.get(ABBREVIATIONS_ENTRY_NAME);
-
-    if (abbreviationsEntry != null && !(abbreviationsEntry instanceof Dictionary)) {
-      throw new InvalidFormatException("Abbreviations dictionary has wrong type!");
-    }
+  public SentenceDetectorFactory getFactory() {
+    return (SentenceDetectorFactory) this.toolFactory;
-    return (Dictionary) artifactMap.get(ABBREVIATIONS_ENTRY_NAME);
+    if (getFactory() != null) {
+      return getFactory().getAbbreviationDictionary();
+    }
+    return null;
-    return Boolean.parseBoolean(getManifestProperty(TOKEN_END_PROPERTY));
+    if (getFactory() != null) {
+      return getFactory().isUseTokenEnd();
+    }
+    return true;
-    String prop = getManifestProperty(EOS_CHARACTERS_PROPERTY);
-    if (prop != null)
-      return eosStringToCharArray(getManifestProperty(EOS_CHARACTERS_PROPERTY));
-    else
-      return null;
-  }
-
-  private String eosCharArrayToString(char[] eosCharacters) {
-    String eosString = "";
-    for (int i = 0; i < eosCharacters.length; i++)
-      eosString += eosCharacters[i];
-    return eosString;
-  }
-
-  private char[] eosStringToCharArray(String eosCharacters) {
-    return eosCharacters.toCharArray();
+    if (getFactory() != null) {
+      return getFactory().getEOSCharacters();
+    }
+    return null;

MOV31 INS31 INS44 INS29 INS83 INS42 INS44 INS44 MOV44 MOV44 MOV44 INS44 MOV8 INS29 INS43 INS42 MOV43 UPD42 UPD83 INS39 INS42 UPD83 MOV5 UPD42 INS8 INS43 INS42 INS46 INS65 INS65 INS43 INS42 INS43 INS42 INS74 INS42 INS17 INS65 INS65 INS42 INS41 INS25 INS25 MOV41 INS42 MOV42 MOV42 MOV42 INS42 INS66 INS66 INS65 INS66 INS65 MOV42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS14 INS66 INS66 INS65 INS66 INS65 INS11 INS8 INS33 INS27 INS8 INS9 INS27 INS8 INS68 INS42 INS42 MOV42 INS42 INS43 INS42 INS42 INS42 INS42 INS68 INS42 INS43 INS22 INS32 INS41 INS32 INS33 INS41 INS32 INS33 MOV41 INS42 INS69 INS69 INS69 INS69 UPD42 MOV42 INS42 INS69 INS69 INS69 INS69 INS42 INS52 INS42 INS42 INS32 INS42 INS32 INS42 MOV43 INS43 INS43 INS43 MOV43 INS43 INS43 INS43 INS32 UPD42 MOV42 INS32 INS42 INS32 UPD42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL46 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL25 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL41 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL45 DEL27 DEL14 DEL53 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL83 DEL42 DEL31 DEL39 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL32 DEL41 DEL42 DEL43 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL45 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL2 DEL7 DEL21 DEL24 DEL42 DEL39 DEL85 DEL5 DEL42 DEL43 DEL42 DEL44 DEL8