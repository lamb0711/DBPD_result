OPENNLP-871: Clean up code base for release

This closes #20

-
-import opennlp.tools.util.InvalidFormatException;
-    Map<Parse, Integer> parents = new HashMap<Parse, Integer>();
+    Map<Parse, Integer> parents = new HashMap<>();
-    /** Frontier nodes built from node in a completed parse.  Specifically,
+    /* Frontier nodes built from node in a completed parse.  Specifically,
-    List<Parse> rightFrontier = new ArrayList<Parse>();
-    List<Parse> builtNodes = new ArrayList<Parse>();
-    /** Nodes which characterize what the parse looks like to the parser as its being built.
+    List<Parse> rightFrontier = new ArrayList<>();
+    List<Parse> builtNodes = new ArrayList<>();
+    /* Nodes which characterize what the parse looks like to the parser as its being built.
-      /** Node selected for attachment. */
+      /* Node selected for attachment. */
-        /** Right frontier consisting of partially-built nodes based on current state of the parse.*/
+        /* Right frontier consisting of partially-built nodes based on current state of the parse.*/
-  public static void main(String[] args) throws java.io.IOException, InvalidFormatException {
+  public static void main(String[] args) throws java.io.IOException {
-      if (args[ai].equals("-build")) {
-        etype = ParserEventTypeEnum.BUILD;
-      }
-      else if (args[ai].equals("-attach")) {
-        etype = ParserEventTypeEnum.ATTACH;
-      }
-      else if (args[ai].equals("-chunk")) {
-        etype = ParserEventTypeEnum.CHUNK;
-      }
-      else if (args[ai].equals("-check")) {
-        etype = ParserEventTypeEnum.CHECK;
-      }
-      else if (args[ai].equals("-tag")) {
-        etype = ParserEventTypeEnum.TAG;
-      }
-      else if (args[ai].equals("-fun")) {
-        fun = true;
-      }
-      else if (args[ai].equals("-dict")) {
-        ai++;
-        dict = new Dictionary(new FileInputStream(args[ai]));
-      }
-      else if (args[ai].equals("-model")) {
-        ai++;
-        model = (new SuffixSensitiveGISModelReader(new File(args[ai]))).getModel();
-      }
-      else {
-        System.err.println("Invalid option " + args[ai]);
-        System.exit(1);
+      switch (args[ai]) {
+        case "-build":
+          etype = ParserEventTypeEnum.BUILD;
+          break;
+        case "-attach":
+          etype = ParserEventTypeEnum.ATTACH;
+          break;
+        case "-chunk":
+          etype = ParserEventTypeEnum.CHUNK;
+          break;
+        case "-check":
+          etype = ParserEventTypeEnum.CHECK;
+          break;
+        case "-tag":
+          etype = ParserEventTypeEnum.TAG;
+          break;
+        case "-fun":
+          fun = true;
+          break;
+        case "-dict":
+          ai++;
+          dict = new Dictionary(new FileInputStream(args[ai]));
+          break;
+        case "-model":
+          ai++;
+          model = (new SuffixSensitiveGISModelReader(new File(args[ai]))).getModel();
+          break;
+        default:
+          System.err.println("Invalid option " + args[ai]);
+          System.exit(1);

INS50 UPD74 UPD74 UPD74 MOV2 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL8 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25