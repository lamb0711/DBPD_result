OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.nio.charset.Charset;
-import java.nio.charset.IllegalCharsetNameException;
-    boolean isFailure;
-    
+    String isFailure = null;
+
-      System.err.println("The " + name + " file is a directory!");
-      isFailure = true;
+      isFailure = "The " + name + " file is a directory!";
-      System.err.println("The " + name + " file does not exist!");
-      isFailure = true;
+      isFailure = "The " + name + " file does not exist!";
-      System.err.println("No permissions to read the " + name + " file!");
-      isFailure = true;
+      isFailure = "No permissions to read the " + name + " file!";
-    else {
-      isFailure = false;
-    }
-    
-    if (isFailure) {
-      System.err.println("Path: " + inFile.getAbsolutePath());
-      throw new TerminateToolException(-1);
+
+    if (null != isFailure) {
+      throw new TerminateToolException(-1, isFailure + " Path: " + inFile.getAbsolutePath());
-   * @param name
-   * @param outFile
+   * @param name human-friendly file name. for example perceptron model
+   * @param outFile file
-    boolean isFailure = true;
+    String isFailure = null;
-        System.err.println("The " + name + " file is a directory!");
+        isFailure = "The " + name + " file is a directory!";
-        if (outFile.canWrite()) {
-          isFailure = false;
-        }
-        else {
-          System.err.println("No permissions to write the " + name + " file!");
+        if (!outFile.canWrite()) {
+          isFailure = "No permissions to write the " + name + " file!";
-        System.err.println("The " + name + " file is not a normal file!");
+        isFailure = "The " + name + " file is not a normal file!";
-        if (parentDir.canWrite()) {
-          isFailure = false;
-        }
-        else {
-          System.err.println("No permissions to create the " + name + " file!");
+        if (!parentDir.canWrite()) {
+          isFailure = "No permissions to create the " + name + " file!";
-        System.err.println("The parent directory of the " + name + " file does not exist, " +
-        		"please create it first!");
+        isFailure = "The parent directory of the " + name + " file does not exist, " +
+        		"please create it first!";
-    if (isFailure) {
-      System.err.println("Path: " + outFile.getAbsolutePath());
-      throw new TerminateToolException(-1);
+    if (null != isFailure) {
+      throw new TerminateToolException(-1, isFailure + " Path: " + outFile.getAbsolutePath());
-      System.err.println("File cannot be found: " + e.getMessage());
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "File cannot be found: " + e.getMessage());
-      System.err.println("Error during writing model file: " + e.getMessage());
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "Error during writing model file: " + e.getMessage());
-      System.err.println("Unkown language code, must be an ISO 639 code!");
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(1, "Unknown language code " + code + ", " +
+          "must be an ISO 639 code!");
-  
-  public static void printTrainingIoError(IOException e) {
-    System.err.println("IO error while reading training data or indexing data: " + e.getMessage());
-  }
-  
+
-    System.err.println("IO Error while reading from stdin: " + e.getMessage());
-    throw new TerminateToolException(-1);
+    throw new TerminateToolException(-1, "IO Error while reading from stdin: " + e.getMessage());
-        // TODO: print error and exit
-        e.printStackTrace();
+        throw new TerminateToolException(-1, "Error during parameters loading: " + e.getMessage());
-        System.err.println("Training parameters file is invalid!");
-        throw new TerminateToolException(-1);
+        throw new TerminateToolException(1, "Training parameters file is invalid!");
-        System.err.println("Sequence training is not supported!");
-        throw new TerminateToolException(-1);
+        throw new TerminateToolException(1, "Sequence training is not supported!");

MOV8 INS43 INS27 INS66 INS66 INS43 INS27 INS8 INS8 INS42 INS33 INS33 INS42 INS42 INS33 INS33 INS42 INS53 MOV8 INS53 MOV27 INS7 INS14 INS14 MOV8 MOV8 INS42 MOV27 INS7 MOV27 MOV43 MOV38 MOV27 INS43 INS34 INS27 MOV44 MOV8 INS42 MOV27 INS7 INS42 UPD45 INS7 INS38 INS7 INS42 UPD45 MOV27 MOV27 INS42 INS45 INS42 INS45 INS45 INS53 INS42 MOV27 INS42 MOV27 INS38 INS7 MOV32 INS42 MOV27 INS14 INS34 INS45 INS34 INS45 MOV32 INS42 MOV27 INS7 MOV43 MOV38 MOV27 INS7 INS42 MOV27 UPD45 INS42 MOV27 DEL40 DEL26 DEL40 DEL26 DEL39 DEL40 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL40 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL40 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL40 DEL42 DEL32 DEL21 DEL39 DEL9 DEL40 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL40 DEL42 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL14 DEL53 DEL8 DEL40 DEL42 DEL32 DEL21 DEL83 DEL83 DEL39 DEL42 DEL31 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL14 DEL53 DEL8 DEL40 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL40 DEL42 DEL45 DEL32 DEL21 DEL34 DEL38 DEL40 DEL42 DEL45 DEL32 DEL21 DEL34 DEL38