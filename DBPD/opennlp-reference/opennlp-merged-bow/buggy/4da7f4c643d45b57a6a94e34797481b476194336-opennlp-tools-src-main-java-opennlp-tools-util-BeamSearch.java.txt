OPENNLP-887: Replace the Cache class with a LinkedHashMap

This closes #9

-  private Cache contextsCache;
+  private Cache<String[], double[]> contextsCache;
-      contextsCache = new Cache(cacheSize);
+      contextsCache = new Cache<>(cacheSize);
-
-    if (validator != null) {
-      return validator.validSequence(i, inputSequence, outcomesSequence, outcome);
-    }
-    else {
-      return true;
-    }
+    return validator == null || validator.validSequence(i, inputSequence, outcomesSequence, outcome);
-    Heap<Sequence> prev = new ListHeap<Sequence>(size);
-    Heap<Sequence> next = new ListHeap<Sequence>(size);
+    Heap<Sequence> prev = new ListHeap<>(size);
+    Heap<Sequence> next = new ListHeap<>(size);
-          scores = (double[]) contextsCache.get(contexts);
+          scores = contextsCache.get(contexts);
-        for (int c = 0; c < scores.length; c++) {
-          temp_scores[c] = scores[c];
-        }
+        System.arraycopy(scores, 0, temp_scores, 0, scores.length);

INS74 MOV8 MOV43 INS5 MOV5 INS43 INS85 INS27 INS42 INS27 MOV32 INS42 INS33 UPD74 UPD74 MOV21 INS74 INS32 MOV43 INS42 INS42 INS42 INS34 INS42 INS34 INS40 MOV32 DEL42 DEL33 DEL27 DEL9 DEL41 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL43 DEL11 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL7 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24