OPENNLP-429: Refactored POSTaggerME constructors

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1243645 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Arrays;
-  private static class PosSequenceValidator implements SequenceValidator<String> {
-    
-    private POSDictionary tagDictionary;
-    
-    PosSequenceValidator(POSDictionary tagDictionary) {
-      this.tagDictionary = tagDictionary;
-    }
-    
-    public boolean validSequence(int i, String[] inputSequence,
-        String[] outcomesSequence, String outcome) {
-      if (tagDictionary == null) {
-        return true;
-      }
-      else {
-        String[] tags = tagDictionary.getTags(inputSequence[i]);
-        if (tags == null) {
-          return true;
-        }
-        else {
-          return Arrays.asList(tags).contains(outcome);
-        }
-      }
-    }
-  }
-  
+  /**
+   * Constructor that overrides the {@link SequenceValidator} from the model.
+   * 
+   * @deprecated use {@link #POSTaggerME(POSModel, int, int)} instead. The model
+   *             knows which {@link SequenceValidator} to use.
+   */
+    POSTaggerFactory factory = model.getFactory();
-    contextGen = new DefaultPOSContextGenerator(beamSize, model.getNgramDictionary());
-    tagDictionary = model.getTagDictionary();
+    contextGen = factory.getPOSContextGenerator(beamSize);
+    tagDictionary = factory.getPOSDictionary();
-    beam = new BeamSearch<String>(size, contextGen, posModel, sequenceValidator, cacheSize);
+    beam = new BeamSearch<String>(size, contextGen, posModel,
+        sequenceValidator, cacheSize);
-    this(model, beamSize, cacheSize, new PosSequenceValidator(model.getTagDictionary()));
+    POSTaggerFactory factory = model.getFactory();
+    posModel = model.getPosModel();
+    contextGen = factory.getPOSContextGenerator(beamSize);
+    tagDictionary = factory.getPOSDictionary();
+    size = beamSize;
+    beam = new BeamSearch<String>(size, contextGen, posModel,
+        factory.getSequenceValidator(), cacheSize);

INS31 INS29 MOV29 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS65 INS65 INS60 INS60 MOV21 INS21 INS21 INS21 INS21 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS43 INS59 INS43 INS59 INS7 INS7 INS7 INS7 INS42 INS68 INS42 INS42 INS42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS69 INS69 INS69 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD74 MOV74 INS42 INS42 INS42 INS32 INS42 INS43 INS39 INS39 UPD43 INS42 INS42 INS42 UPD42 DEL40 DEL26 DEL83 DEL83 DEL42 DEL83 DEL43 DEL59 DEL23 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL9 DEL41 DEL8 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL2 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL9 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL55 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL52 DEL42 DEL22 DEL42 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL17 DEL8 DEL31