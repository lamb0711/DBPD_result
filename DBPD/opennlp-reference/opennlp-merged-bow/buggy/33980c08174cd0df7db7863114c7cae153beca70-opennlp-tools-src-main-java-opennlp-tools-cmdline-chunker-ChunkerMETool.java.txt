OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.cmdline.BaseCLITool;
-import opennlp.tools.cmdline.CmdLineTool;
-import opennlp.tools.cmdline.TerminateToolException;
-public class ChunkerMETool implements CmdLineTool {
+public class ChunkerMETool extends BaseCLITool {
-  public String getName() {
-    return "ChunkerME";
-  }
-  
-      throw new TerminateToolException(1);
-    }
-    
-    ChunkerModel model = new ChunkerModelLoader().load(new File(args[0]));
-    
-    ChunkerME chunker = new ChunkerME(model, ChunkerME.DEFAULT_BEAM_SIZE,
-        new DefaultChunkerSequenceValidator());
-    
-    ObjectStream<String> lineStream =
-      new PlainTextByLineStream(new InputStreamReader(System.in));
-    
-    PerformanceMonitor perfMon = new PerformanceMonitor(System.err, "sent");
-    perfMon.start();
-    
-    try {
-      String line;
-      while ((line = lineStream.read()) != null) {
-        
-        POSSample posSample;
-        try {
-          posSample = POSSample.parse(line);
-        } catch (InvalidFormatException e) {
-          System.err.println("Invalid format:");
-          System.err.println(line);
-          continue;
+    } else {
+      ChunkerModel model = new ChunkerModelLoader().load(new File(args[0]));
+
+      ChunkerME chunker = new ChunkerME(model, ChunkerME.DEFAULT_BEAM_SIZE,
+          new DefaultChunkerSequenceValidator());
+
+      ObjectStream<String> lineStream =
+        new PlainTextByLineStream(new InputStreamReader(System.in));
+
+      PerformanceMonitor perfMon = new PerformanceMonitor(System.err, "sent");
+      perfMon.start();
+
+      try {
+        String line;
+        while ((line = lineStream.read()) != null) {
+
+          POSSample posSample;
+          try {
+            posSample = POSSample.parse(line);
+          } catch (InvalidFormatException e) {
+            System.err.println("Invalid format:");
+            System.err.println(line);
+            continue;
+          }
+
+          String[] chunks = chunker.chunk(posSample.getSentence(),
+              posSample.getTags());
+
+          System.out.println(new ChunkSample(posSample.getSentence(),
+              posSample.getTags(), chunks).nicePrint());
+
+          perfMon.incrementCounter();
-        
-        String[] chunks = chunker.chunk(posSample.getSentence(),
-            posSample.getTags());
-        
-        System.out.println(new ChunkSample(posSample.getSentence(),
-            posSample.getTags(), chunks).nicePrint());
-        
-        perfMon.incrementCounter();
-    } 
-    catch (IOException e) {
-      CmdLineUtil.handleStdinIoError(e);
+      catch (IOException e) {
+        CmdLineUtil.handleStdinIoError(e);
+      }
+
+      perfMon.stopAndPrintFinalResult();
-    
-    perfMon.stopAndPrintFinalResult();

MOV26 UPD40 UPD43 UPD42 INS8 MOV60 MOV60 MOV60 MOV60 MOV21 MOV54 MOV21 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL45 DEL41 DEL8 DEL31 DEL42 DEL43 DEL34 DEL14 DEL53