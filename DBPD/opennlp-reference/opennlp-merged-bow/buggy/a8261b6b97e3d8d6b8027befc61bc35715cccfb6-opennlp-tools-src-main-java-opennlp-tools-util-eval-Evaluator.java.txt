OPENNLP-226 Removed add/remove listener from Evaluator. Evaluator constructor expects a list of listeners. Removed the the notify methods, the code now is inline.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1159447 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.LinkedList;
-  private List<EvaluationSampleListener<T>> listeners = new LinkedList<EvaluationSampleListener<T>>();
+  private List<EvaluationSampleListener<T>> listeners;
+  
+  public Evaluator() {
+    this.listeners = null;
+  }
+  
+  public Evaluator(List<EvaluationSampleListener<T>> listeners) {
+    this.listeners = listeners;
+  }
-    if(sample.equals(predicted)) {
-      notifyCorrectlyClassified(sample, predicted);
-    } else {
-      notifyMissclassified(sample, predicted);
+    if(listeners != null) {
+      if(sample.equals(predicted)) {
+        for (EvaluationSampleListener<T> listener : listeners) {
+          listener.correctlyClassified(predicted, predicted);
+        }
+      } else {
+        for (EvaluationSampleListener<T> listener : listeners) {
+          listener.missclassified(sample, predicted);
+        } 
+      }
-  
-  /**
-   * Add a {@link EvaluationSampleListener} that will be notified when a sample is evaluated.
-   * @param listener the listener implementation to be added
-   */
-  public synchronized void addListener(EvaluationSampleListener<T> listener) {
-    this.listeners.add(listener);
-  }
-  
-  /**
-   * Removes a {@link EvaluationSampleListener}.
-   * @param listener the listener implementation to be removed
-   */
-  public synchronized void removeListener(EvaluationSampleListener<T> listener) {
-    this.listeners.remove(listener);
-  }
-  
-  private void notifyCorrectlyClassified(T reference, T prediction) {
-    for (EvaluationSampleListener<T> listener : listeners) {
-      listener.correctlyClassified(reference, prediction);
-    }
-  }
-  
-  private void notifyMissclassified(T reference, T prediction) {
-    for (EvaluationSampleListener<T> listener : listeners) {
-      listener.missclassified(reference, prediction);
-    }   
-  }

MOV31 INS31 INS42 MOV8 MOV83 INS42 INS44 MOV8 INS8 INS74 INS42 MOV60 INS25 INS7 UPD43 MOV43 INS74 INS7 INS27 INS8 MOV22 INS33 UPD42 MOV43 MOV43 MOV22 INS42 INS42 INS33 MOV25 INS8 INS8 INS70 INS70 MOV44 INS42 INS8 MOV44 INS42 INS8 MOV21 MOV21 INS43 INS43 INS43 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL14 DEL66 DEL42 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL32 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL32 DEL8 DEL8 DEL8 DEL66 DEL42 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL8 DEL31