OPENNLP-581 Deprecated TrainUtil methods and removed duplicated references to constants. Moved the isValid method to TrainerFactory, updated it to work with class names and created a junit test to validate it.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1521519 13f79535-47bb-0310-9956-ffa450edef68

-import opennlp.tools.ml.maxent.GIS;
-import opennlp.tools.ml.maxent.quasinewton.QNTrainer;
-import opennlp.tools.ml.perceptron.PerceptronTrainer;
-import opennlp.tools.ml.perceptron.SimplePerceptronSequenceTrainer;
-  public static final String ALGORITHM_PARAM = "Algorithm";
-  
-  public static final String MAXENT_VALUE = "MAXENT";
-  public static final String MAXENT_QN_VALUE = "MAXENT_QN_EXPERIMENTAL";
-  public static final String PERCEPTRON_VALUE = "PERCEPTRON";
-  public static final String PERCEPTRON_SEQUENCE_VALUE = "PERCEPTRON_SEQUENCE";
-  
-  public static final String CUTOFF_PARAM = "Cutoff";
-  
-  public static final String ITERATIONS_PARAM = "Iterations";
-  
-  public static final String DATA_INDEXER_PARAM = "DataIndexer";
-  public static final String DATA_INDEXER_ONE_PASS_VALUE = "OnePass";
-  public static final String DATA_INDEXER_TWO_PASS_VALUE = "TwoPass";
-  
+  /**
+   * @deprecated Use {@link TrainerFactory#isValid(Map)} instead.
+   */
-
-    // TODO: Need to validate all parameters correctly ... error prone?!
-    
-    String algorithmName = trainParams.get(ALGORITHM_PARAM);
-
-    if (algorithmName != null && !(MAXENT_VALUE.equals(algorithmName) ||
-    	MAXENT_QN_VALUE.equals(algorithmName) ||
-        PERCEPTRON_VALUE.equals(algorithmName) ||
-        PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName))) {
-      return false;
-    }
-
-    try {
-      String cutoffString = trainParams.get(CUTOFF_PARAM);
-      if (cutoffString != null) Integer.parseInt(cutoffString);
-      
-      String iterationsString = trainParams.get(ITERATIONS_PARAM);
-      if (iterationsString != null) Integer.parseInt(iterationsString);
-    }
-    catch (NumberFormatException e) {
-      return false;
-    }
-    
-    String dataIndexer = trainParams.get(DATA_INDEXER_PARAM);
-    
-    if (dataIndexer != null) {
-      if (!("OnePass".equals(dataIndexer) || "TwoPass".equals(dataIndexer))) {
-        return false;
-      }
-    }
-    
-    // TODO: Check data indexing ... 
-     
-    return true;
+    return TrainerFactory.isValid(trainParams);
-  
-  
+  /**
+   * @deprecated Use {@link TrainerFactory#getEventTrainer(Map, Map)} to get an
+   *             {@link EventTrainer} instead.
+   */
-   * Detects if the training algorithm requires sequence based feature generation
-   * or not.
+   * Detects if the training algorithm requires sequence based feature
+   * generation or not.
+   * 
+   * @deprecated Use {@link TrainerFactory#isSupportSequence(Map)} instead.
-    return PERCEPTRON_SEQUENCE_VALUE.equals(trainParams.get(ALGORITHM_PARAM));
+	return TrainerFactory.isSupportSequence(trainParams);
+  /**
+   * @deprecated Use {@link TrainerFactory#getSequenceTrainer(Map, Map)} to get an
+   *             {@link SequenceTrainer} instead.
+   */

INS31 INS29 INS83 INS83 MOV39 MOV42 MOV44 INS8 INS29 INS29 INS65 INS41 INS65 INS65 INS65 INS66 INS65 INS66 INS32 INS66 INS65 INS66 INS65 INS66 UPD66 UPD66 INS66 INS65 INS66 INS66 INS65 INS66 INS65 INS66 INS68 UPD42 MOV42 INS42 MOV42 INS68 INS42 INS68 UPD42 UPD42 MOV42 INS68 INS42 INS42 INS42 INS69 INS42 INS42 INS69 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS69 INS43 INS43 INS43 INS43 INS43 INS43 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL27 DEL36 DEL38 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL36 DEL38 DEL9 DEL41 DEL8 DEL25 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32