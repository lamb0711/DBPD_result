OPENNLP-871: Clean up code base for release

This closes #20

+import java.util.ArrayList;
+import java.util.List;
-
-  double[] modelDistribution;
+  private double[] modelDistribution;
-  private int VALUE = 0;
-  private int ITER = 1;
-  private int EVENT = 2;
+  private static final int VALUE = 0;
+  private static final int ITER = 1;
+  private static final int EVENT = 2;
-  int numSequences;
+  private int numSequences;
-    if (algorithmName != null
-        && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName))) {
-      return false;
-    }
-
-    return true;
+    return !(algorithmName != null
+      && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName)));
-    pmap = new HashMap<String, Integer>();
+    pmap = new HashMap<>();
-    omap = new HashMap<String,Integer>();
+    omap = new HashMap<>();
-    /*************** Create and return the model ******************/
+    /* Create and return the model ****/
-    Map<String,Float>[] featureCounts = new Map[numOutcomes];
+    List<Map<String,Float>> featureCounts = new ArrayList<>(numOutcomes);
-      featureCounts[oi] = new HashMap<String,Float>();
+      featureCounts.add(new HashMap<>());
-          featureCounts[oi].clear();
+          featureCounts.get(oi).clear();
-            Float c = featureCounts[oi].get(contextStrings[ci]);
+            Float c = featureCounts.get(oi).get(contextStrings[ci]);
-            featureCounts[oi].put(contextStrings[ci], c);
+            featureCounts.get(oi).put(contextStrings[ci], c);
-            Float c = featureCounts[oi].get(contextStrings[ci]);
+            Float c = featureCounts.get(oi).get(contextStrings[ci]);
-              featureCounts[oi].remove(contextStrings[ci]);
+              featureCounts.get(oi).remove(contextStrings[ci]);
-              featureCounts[oi].put(contextStrings[ci], c);
+              featureCounts.get(oi).put(contextStrings[ci], c);
-          for (String feature : featureCounts[oi].keySet()) {
+          for (String feature : featureCounts.get(oi).keySet()) {
-              params[pi].updateParameter(oi, featureCounts[oi].get(feature));
+              params[pi].updateParameter(oi, featureCounts.get(oi).get(feature));

INS26 INS26 INS40 INS40 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 MOV41 INS38 INS74 INS36 INS43 MOV74 INS14 MOV27 UPD74 UPD74 INS42 INS74 INS42 INS32 INS43 INS42 INS42 MOV14 UPD42 MOV42 UPD74 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL9 DEL8 DEL25 DEL9 DEL41 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL43 DEL85 DEL5 DEL42 DEL3 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL2 DEL7 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2