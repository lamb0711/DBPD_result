OPENNLP-1091: Fixing some issues found with FindBugs and IDE

closes #229

+import java.util.Arrays;
+import java.util.Objects;
-    if (outcome < ce.outcome)
-      return -1;
-    else if (outcome > ce.outcome)
-      return 1;
+    int compareOutcome = Integer.compare(outcome, ce.outcome);
+    if (compareOutcome != 0) {
+      return compareOutcome;
+    }
-    int smallerLength = predIndexes.length > ce.predIndexes.length ? ce.predIndexes.length
-        : predIndexes.length;
+    int smallerLength = Math.min(predIndexes.length, ce.predIndexes.length);
-      if (predIndexes[i] < ce.predIndexes[i])
-        return -1;
-      else if (predIndexes[i] > ce.predIndexes[i])
-        return 1;
+      int comparePredIndexes = Integer.compare(predIndexes[i], ce.predIndexes[i]);
+      if (comparePredIndexes != 0) {
+        return comparePredIndexes;
+      }
-        if (values[i] < ce.values[i])
-          return -1;
-        else if (values[i] > ce.values[i])
-          return 1;
+        float compareValues = Float.compare(values[i], ce.values[i]);
+        if (!Float.valueOf(compareValues).equals(Float.valueOf(0.0f))) {
+          return (int) compareValues;
+        }
-        if (values[i] < 1)
-          return -1;
-        else if (values[i] > 1)
-          return 1;
+        float compareValues = Float.compare(values[i], 1.0f);
+        if (!Float.valueOf(compareValues).equals(Float.valueOf(0.0f))) {
+          return (int) compareValues;
+        }
-        if (1 < ce.values[i])
-          return -1;
-        else if (1 > ce.values[i])
-          return 1;
+        float compareValues = Float.compare(1.0f, ce.values[i]);
+        if (!Float.valueOf(compareValues).equals(Float.valueOf(0.0f))) {
+          return (int) compareValues;
+        }
-    if (predIndexes.length < ce.predIndexes.length)
-      return -1;
-    else if (predIndexes.length > ce.predIndexes.length)
-      return 1;
+    int comparePredIndexesLength = Integer.compare(predIndexes.length, ce.predIndexes.length);
+    if (comparePredIndexesLength != 0) {
+      return comparePredIndexesLength;
+    }
+  @Override
+  public boolean equals(Object obj) {
+
+    if (this == obj)
+      return true;
+
+    if (obj instanceof ComparableEvent) {
+      ComparableEvent other = (ComparableEvent) obj;
+      return outcome == other.outcome &&
+          Arrays.equals(predIndexes, other.predIndexes) &&
+          seen == other.seen &&
+          Arrays.equals(values, other.values);
+    }
+
+    return false;
+  }
+
+  @Override
+  public int hashCode() {
+    return Objects.hash(outcome, Arrays.hashCode(predIndexes), seen, Arrays.hashCode(values));
+  }
+
-  private void sort(int[] pids, float[] values) {
-    for (int mi = 0; mi < pids.length; mi++) {
-      int min = mi;
-      for (int pi = mi + 1; pi < pids.length; pi++) {
-        if (pids[min] > pids[pi]) {
-          min = pi;
-        }
-      }
-      int pid = pids[mi];
-      pids[mi] = pids[min];
-      pids[min] = pid;
-      float val = values[mi];
-      values[mi] = values[min];
-      values[min] = val;
-    }
-  }

INS26 INS26 INS40 INS40 INS31 INS31 INS78 UPD83 MOV83 UPD39 MOV39 INS42 MOV44 INS8 INS78 INS83 INS39 INS42 INS8 INS60 INS25 INS60 INS25 INS42 INS43 INS42 INS25 INS25 INS41 INS42 INS41 INS39 INS59 UPD27 MOV27 INS8 INS39 INS59 UPD27 MOV27 INS8 INS42 INS27 INS41 INS62 INS8 INS9 INS32 INS42 INS32 UPD42 INS34 INS41 INS32 INS60 INS25 INS42 INS32 INS42 INS34 INS41 INS52 UPD42 MOV42 INS9 INS42 INS43 INS60 INS41 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS40 INS39 INS59 UPD27 MOV27 INS8 INS42 INS42 INS40 INS40 INS42 INS42 INS43 INS59 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS41 INS60 INS42 UPD42 MOV42 INS11 INS27 INS32 INS42 INS42 MOV2 MOV2 INS42 INS39 INS59 INS38 INS8 INS60 INS25 INS43 INS42 INS27 INS27 INS42 INS42 INS42 INS40 INS42 INS32 INS32 INS41 INS39 INS59 INS38 INS8 INS60 INS25 INS42 INS27 INS32 INS42 INS40 INS42 INS42 MOV2 MOV2 INS32 INS42 INS32 INS11 INS42 INS32 INS32 INS41 INS39 INS59 INS38 INS8 UPD42 MOV42 UPD40 MOV40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS34 INS39 INS42 INS42 INS42 MOV2 INS34 INS32 INS42 INS32 INS11 INS42 INS32 INS32 INS41 INS42 INS42 INS42 INS42 INS42 INS34 INS39 INS42 INS42 INS42 INS34 MOV2 INS32 INS42 INS32 INS11 INS42 INS42 INS42 INS42 INS42 INS34 INS39 INS42 DEL40 DEL42 DEL40 DEL27 DEL34 DEL38 DEL41 DEL34 DEL41 DEL25 DEL25 DEL40 DEL40 DEL27 DEL40 DEL40 DEL16 DEL42 DEL42 DEL2 DEL40 DEL42 DEL2 DEL27 DEL34 DEL38 DEL41 DEL34 DEL41 DEL25 DEL25 DEL42 DEL42 DEL2 DEL40 DEL42 DEL2 DEL27 DEL34 DEL38 DEL41 DEL27 DEL34 DEL41 DEL25 DEL42 DEL42 DEL2 DEL34 DEL27 DEL34 DEL38 DEL41 DEL34 DEL27 DEL34 DEL41 DEL25 DEL25 DEL34 DEL40 DEL42 DEL2 DEL27 DEL34 DEL38 DEL41 DEL34 DEL27 DEL34 DEL41 DEL25 DEL25 DEL40 DEL40 DEL40 DEL40 DEL27 DEL34 DEL38 DEL41 DEL34 DEL41 DEL25 DEL25 DEL39 DEL85 DEL5 DEL42 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL34 DEL59 DEL58 DEL40 DEL27 DEL42 DEL37 DEL39 DEL42 DEL42 DEL59 DEL60 DEL39 DEL42 DEL34 DEL27 DEL59 DEL58 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8 DEL24 DEL39 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL7 DEL21 DEL42 DEL42 DEL2 DEL42 DEL7 DEL21 DEL39 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL7 DEL21 DEL42 DEL42 DEL2 DEL42 DEL7 DEL21 DEL8 DEL24 DEL8 DEL31