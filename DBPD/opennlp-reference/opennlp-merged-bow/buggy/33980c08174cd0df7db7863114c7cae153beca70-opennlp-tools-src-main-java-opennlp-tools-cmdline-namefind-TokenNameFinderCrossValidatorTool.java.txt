OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.ArgumentParser;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
+import opennlp.tools.cmdline.AbstractCrossValidatorTool;
+import opennlp.tools.cmdline.namefind.TokenNameFinderCrossValidatorTool.CVToolParams;
-import opennlp.tools.util.ObjectStream;
-import opennlp.tools.util.TrainingParameters;
+import opennlp.tools.util.model.ModelUtil;
-public final class TokenNameFinderCrossValidatorTool implements CmdLineTool {
+public final class TokenNameFinderCrossValidatorTool
+    extends AbstractCrossValidatorTool<NameSample, CVToolParams> {
-  interface CVToolParams extends TrainingParams, CVParams, DetailedFMeasureEvaluatorParams{
-    
+  interface CVToolParams extends TrainingParams, CVParams, DetailedFMeasureEvaluatorParams {
-  public String getName() {
-    return "TokenNameFinderCrossValidator";
+  public TokenNameFinderCrossValidatorTool() {
+    super(NameSample.class, CVToolParams.class);
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " "
-        + ArgumentParser.createUsage(CVToolParams.class);
-  }
+  public void run(String format, String[] args) {
+    super.run(format, args);
-  public void run(String[] args) {
-    String errorMessage = ArgumentParser.validateArgumentsLoudly(args, CVToolParams.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
+    mlParams = CmdLineUtil.loadTrainingParameters(params.getParams(), false);
+    if (mlParams == null) {
+      mlParams = ModelUtil.createTrainingParameters(params.getIterations(), params.getCutoff());
-    
-    CVToolParams params = ArgumentParser.parse(args, CVToolParams.class);
-    opennlp.tools.util.TrainingParameters mlParams = CmdLineUtil
-        .loadTrainingParameters(params.getParams(),false);
+    byte featureGeneratorBytes[] =
+        TokenNameFinderTrainerTool.openFeatureGeneratorBytes(params.getFeaturegen());
-    byte featureGeneratorBytes[] = TokenNameFinderTrainerTool
-        .openFeatureGeneratorBytes(params.getFeaturegen());
+    Map<String, Object> resources =
+        TokenNameFinderTrainerTool.loadResources(params.getResources());
-    Map<String, Object> resources = TokenNameFinderTrainerTool
-        .loadResources(params.getResources());
-
-    File trainingDataInFile = params.getData();
-    CmdLineUtil.checkInputFile("Training Data", trainingDataInFile);
-    
-    Charset encoding = params.getEncoding();
-
-    ObjectStream<NameSample> sampleStream = TokenNameFinderTrainerTool
-        .openSampleData("Training Data", trainingDataInFile, encoding);
-
-    TokenNameFinderCrossValidator validator;
-    
-    
-    if (mlParams == null) {
-      mlParams = new TrainingParameters();
-      mlParams.put(TrainingParameters.ALGORITHM_PARAM, "MAXENT");
-      mlParams.put(TrainingParameters.ITERATIONS_PARAM,
-          Integer.toString(params.getIterations()));
-      mlParams.put(TrainingParameters.CUTOFF_PARAM,
-          Integer.toString(params.getCutoff()));
-    }
+    TokenNameFinderCrossValidator validator;
-      validator = new TokenNameFinderCrossValidator(params.getLang(),
-          params.getType(), mlParams, featureGeneratorBytes, resources, listeners.toArray(new TokenNameFinderEvaluationMonitor[listeners.size()]));
+      validator = new TokenNameFinderCrossValidator(factory.getLang(),
+          params.getType(), mlParams, featureGeneratorBytes, resources,
+          listeners.toArray(new TokenNameFinderEvaluationMonitor[listeners.size()]));
-      CmdLineUtil.printTrainingIoError(e);
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());

MOV26 MOV26 MOV31 UPD40 UPD40 UPD40 INS74 INS43 MOV43 MOV43 INS42 INS44 MOV60 MOV25 UPD42 MOV42 INS46 MOV43 INS42 INS21 INS21 INS57 MOV57 INS48 INS7 INS43 INS42 INS42 INS42 INS42 MOV32 INS42 INS7 INS42 MOV32 UPD42 UPD42 MOV32 INS27 UPD42 INS45 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL83 DEL42 DEL43 DEL42 DEL45 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL45 DEL40 DEL45 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL41 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL42 DEL40 DEL45 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL33 DEL42 DEL27 DEL40 DEL42 DEL42 DEL32 DEL21 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL34 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21