OPENNLP-1118: Adds data verification for eval tests.

+import java.math.BigInteger;
+import org.junit.BeforeClass;
-public class Conll00ChunkerEval {
+public class Conll00ChunkerEval extends AbstractEvalTest {
+  private static File TEST_DATA_FILE; 
+  private static File TRAIN_DATA_FILE;
+  
+  
+  @BeforeClass
+  public static void verifyTrainingData() throws Exception {
+    
+    TEST_DATA_FILE = new File(getOpennlpDataDir(), "conll00/test.txt");
+    TRAIN_DATA_FILE = new File(getOpennlpDataDir(), "conll00/train.txt");
+
+    verifyTrainingData(new ChunkSampleStream(
+            new PlainTextByLineStream(new MarkableFileInputStreamFactory(TEST_DATA_FILE),
+                    StandardCharsets.UTF_8)),
+        new BigInteger("84610235226433393380477662908529306002"));
+
+    verifyTrainingData(new ChunkSampleStream(
+            new PlainTextByLineStream(new MarkableFileInputStreamFactory(TEST_DATA_FILE),
+                    StandardCharsets.UTF_8)),
+        new BigInteger("84610235226433393380477662908529306002"));    
+
+  }
-    ChunkerModel maxentModel = train(new File(EvalUtil.getOpennlpDataDir(),
-        "conll00/train.txt"), EvalUtil.createPerceptronParams());
+    ChunkerModel maxentModel = train(TRAIN_DATA_FILE, createPerceptronParams());
-    eval(maxentModel,
-        new File(EvalUtil.getOpennlpDataDir(), "conll00/test.txt"),
-        0.9295018353434714d);
+    eval(maxentModel, TEST_DATA_FILE, 0.9295018353434714d);
-    ChunkerModel maxentModel = train(new File(EvalUtil.getOpennlpDataDir(),
-        "conll00/train.txt"), ModelUtil.createDefaultTrainingParameters());
+    ChunkerModel maxentModel = train(TRAIN_DATA_FILE, ModelUtil.createDefaultTrainingParameters());
-    eval(maxentModel,
-        new File(EvalUtil.getOpennlpDataDir(), "conll00/test.txt"),
-        0.9239687473746113d);
+    eval(maxentModel, TEST_DATA_FILE, 0.9239687473746113d);
-    TrainingParameters params = EvalUtil.createMaxentQnParams();
+    TrainingParameters params = createMaxentQnParams();
-    ChunkerModel maxentModel = train(new File(EvalUtil.getOpennlpDataDir(),
-        "conll00/train.txt"), params);
+    ChunkerModel maxentModel = train(TRAIN_DATA_FILE, params);
-    eval(maxentModel,
-        new File(EvalUtil.getOpennlpDataDir(), "conll00/test.txt"),
-        0.9302599230947028d);
+    eval(maxentModel, TEST_DATA_FILE, 0.9302599230947028d);

INS26 INS26 INS40 INS40 INS43 INS23 INS23 INS31 INS42 INS83 INS83 MOV43 INS59 INS83 INS83 MOV43 INS59 INS78 INS83 INS83 INS39 INS42 INS43 INS8 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS21 INS7 INS7 INS32 INS32 MOV43 MOV43 INS42 INS14 INS42 INS14 INS42 INS14 INS14 INS42 INS14 INS14 UPD42 MOV42 UPD42 MOV42 INS42 MOV43 INS32 INS45 MOV43 INS32 INS45 INS43 INS14 INS43 INS45 INS43 INS14 INS43 INS45 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS43 INS14 INS40 INS42 INS42 INS43 INS14 INS40 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS42 DEL42 DEL32 DEL45 DEL14 DEL42 DEL42 DEL32 DEL45 DEL14 DEL42 DEL32 DEL45 DEL14 DEL42 DEL32 DEL45 DEL14 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL45 DEL14 DEL42 DEL43 DEL42 DEL42 DEL32 DEL45 DEL14