OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import opennlp.tools.cmdline.ArgumentParser.ParameterDescription;
-import opennlp.tools.cmdline.ObjectStreamFactory;
+import opennlp.tools.cmdline.StreamFactoryRegistry;
+import opennlp.tools.cmdline.params.LanguageFormatParams;
-public class ConllXPOSSampleStreamFactory implements ObjectStreamFactory<POSSample> {
+public class ConllXPOSSampleStreamFactory extends LanguageSampleStreamFactory<POSSample> {
+
+  public static final String CONLLX_FORMAT = "conllx";
-  interface Parameters {
-    @ParameterDescription(valueName = "sampleData")
-    String getData();
-  }
-  
-  public String getUsage() {
-    return ArgumentParser.createUsage(Parameters.class);
+  interface Parameters extends LanguageFormatParams {
-  public String validateArguments(String[] args) {
-    return ArgumentParser.validateArgumentsLoudly(args, Parameters.class);
+  public static void registerFactory() {
+    StreamFactoryRegistry.registerFactory(POSSample.class,
+        CONLLX_FORMAT, new ConllXPOSSampleStreamFactory(Parameters.class));
-  ObjectStream<POSSample> create(Parameters params) {
+  protected <P> ConllXPOSSampleStreamFactory(Class<P> params) {
+    super(params);
+  }
+
+  public ObjectStream<POSSample> create(String[] args) {
+    Parameters params = ArgumentParser.parse(args, Parameters.class);
+    language = params.getLang();
+
-          CmdLineUtil.openInFile(new File(params.getData())), "UTF-8"));
+          CmdLineUtil.openInFile(params.getData()), "UTF-8"));
-      
+
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "UTF-8 encoding is not supported: " + e.getMessage());
-  
-  public ObjectStream<POSSample> create(String[] args) {
-    
-    Parameters params = ArgumentParser.parse(args, Parameters.class);
-    
-    return create(params);
-  }
-  
-

MOV26 MOV26 MOV31 UPD40 UPD40 UPD74 INS23 INS55 UPD43 INS83 INS83 INS83 MOV43 INS59 INS42 INS43 INS83 INS39 INS42 UPD83 INS73 INS42 INS44 INS8 INS83 UPD42 INS42 INS45 UPD42 MOV42 INS21 INS42 INS74 INS42 INS46 MOV5 UPD42 MOV60 INS21 INS32 INS43 INS43 INS42 INS7 UPD42 MOV42 UPD42 MOV42 MOV57 INS42 INS14 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 UPD43 INS43 MOV57 INS42 INS42 UPD42 INS42 INS27 INS45 INS32 MOV32 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL45 DEL80 DEL77 DEL42 DEL31 DEL55 DEL83 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL43 DEL42 DEL43 DEL14