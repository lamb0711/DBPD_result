OPENNLP-641 Added new method to detect the trainer type to Trainer Factory and updated Name Finder ME to use it

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1563002 13f79535-47bb-0310-9956-ffa450edef68

+// TODO: Another issue is that certain trainers will have certain properties,
+// the code using the trainer should have the possibilites to get these properties
+// in our case this could be communicated via the trainer interface itself!
+// For example via property methods.
+
+// 
+
+  public enum TrainerType {
+    EVENT_MODEL_TRAINER,
+    EVENT_MODEL_SEQUENCE_TRAINER,
+    SEQUENCE_TRAINER
+  }
+  
+  @Deprecated
-  // Note: A better way to indicate which training approach is necessary would be
-  // to use an enum which encodes the different possibilities ...
+  /**
+   * Determines the trainer type based on the ALGORITHM_PARAM value.
+   * 
+   * @param trainParams
+   * @return the trainer type or null if type couldn't be determined.
+   */
+  public static TrainerType getTrainerType(Map<String, String> trainParams){
+
+    String alogrithmValue = trainParams.get(AbstractTrainer.ALGORITHM_PARAM); 
+    
+    // Check if it is defaulting to the MAXENT trainer
+    if (alogrithmValue == null) {
+      return TrainerType.EVENT_MODEL_TRAINER;
+    }
+    
+    Class<?> trainerClass = BUILTIN_TRAINERS.get(alogrithmValue);
+    
+    // TODO: This will not work in an OSGi environment!
+    if (trainerClass == null) {
+      try {
+        trainerClass = Class.forName(alogrithmValue);
+      } catch (ClassNotFoundException e) {
+      }
+    }
+    
+    if(trainerClass != null) {
+      
+      if (EventTrainer.class.isAssignableFrom(trainerClass)) {
+        return TrainerType.EVENT_MODEL_TRAINER;
+      }
+      else if (EventModelSequenceTrainer.class.isAssignableFrom(trainerClass)) {
+        return TrainerType.EVENT_MODEL_SEQUENCE_TRAINER;
+      }
+      else if (SequenceTrainer.class.isAssignableFrom(trainerClass)) {
+        return TrainerType.SEQUENCE_TRAINER;
+      }
+    }
+    
+    return null;
+  }
+  /**
+   * @deprecated use getTrainerType instead!
+   */
+  @Deprecated
+  /**
+   * @deprecated use getTrainerType instead!
+   */
+  /**
+   * @deprecated use getTrainerType instead!
+   */
+  @Deprecated
+  /**
+   * @deprecated use getTrainerType instead!
+   */
+  @Deprecated
-   * This method is deprecated and should not be used! <br>
-   * Use {@link TrainerFactory#isSupportEventModelSequenceTraining(Map)} instead.
-   * 
-   * @param trainParams
-   * @return
+   * @deprecated use getTrainerType instead!
-    String trainerType = getTrainerType(trainParams);
+    String trainerType = getTrainerTypeInt(trainParams);
+  public static EventModelSequenceTrainer getEventModelSequenceTrainer(Map<String, String> trainParams,
+      Map<String, String> reportMap) {
+    return getSequenceTrainer(trainParams, reportMap);
+  }
+  
+  @Deprecated
-    String trainerType = getTrainerType(trainParams);
+    String trainerType = getTrainerTypeInt(trainParams);
-    String trainerType = getTrainerType(trainParams);
+    String trainerType = getTrainerTypeInt(trainParams);
-  private static String getTrainerType(Map<String, String> trainParams) {
+  private static String getTrainerTypeInt(Map<String, String> trainParams) {

INS71 INS31 INS31 INS83 INS42 INS72 INS72 INS72 INS78 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS29 INS29 INS78 INS29 INS78 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS78 UPD42 INS42 INS42 INS42 INS42 INS65 MOV65 INS65 INS42 INS74 INS42 INS60 INS25 INS60 INS25 INS25 INS41 INS65 INS42 INS65 INS65 INS42 INS65 INS42 UPD65 INS42 INS74 INS42 INS74 INS42 INS41 INS42 INS66 INS66 INS43 INS43 INS43 MOV43 INS59 INS27 INS8 INS74 INS59 INS27 INS8 INS27 INS8 INS33 INS66 INS66 INS66 INS66 UPD66 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS43 INS76 INS42 INS32 INS42 INS33 INS54 INS42 INS33 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS8 INS12 INS32 INS8 INS25 UPD42 UPD42 UPD42 INS21 INS44 INS8 INS57 INS42 INS42 INS41 INS32 INS8 INS25 INS7 INS43 INS42 INS43 INS40 INS57 INS42 INS42 INS41 INS32 INS8 INS42 INS32 INS42 INS42 INS43 INS40 INS57 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS43 INS40 INS42 DEL66 DEL66 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL65