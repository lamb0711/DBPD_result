OPENNLP-376 Added upport for feature generator definition file.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1202649 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool;
+ *   <tr><td>String</td> <td>opennlp.uima.FeatureGeneratorFile</td> <td>Feature Generator definition file which contain the feature generator configuration</td></tr>
+ *   <tr><td>String</td> <td>opennlp.uima.FeatureGeneratorResources</td> <td>Feature Generator resources dictionary</td></tr>
+  private static final String FEATURE_GENERATOR_DEFINITION_FILE_PARAMETER = "opennlp.uima.FeatureGeneratorFile";
+  private static final String FEATURE_GENERATOR_RESOURCES_PARAMETER = "opennlp.uima.FeatureGeneratorResources";
+  
+  private byte featureGeneratorDefinition[];
+  
+  private File featureGeneratorResourceDir;
+  
+    String featureGeneratorDefinitionFile = CasConsumerUtil.getOptionalStringParameter(
+        getUimaContext(), FEATURE_GENERATOR_DEFINITION_FILE_PARAMETER);
+    
+    if (featureGeneratorDefinitionFile != null) {
+      try {
+        featureGeneratorDefinition = OpennlpUtil.loadBytes(new File(featureGeneratorDefinitionFile));
+      } catch (IOException e) {
+        throw new ResourceInitializationException(e);
+      }
+      
+      String featureGeneratorResourcesDirName = CasConsumerUtil.getOptionalStringParameter(
+          getUimaContext(), FEATURE_GENERATOR_RESOURCES_PARAMETER);
+      
+      if (featureGeneratorResourcesDirName != null) {
+        featureGeneratorResourceDir = new File(featureGeneratorResourcesDirName);
+      }
+    }
+    
-    for (Iterator<AnnotationFS> tokenIterator = tokenList.iterator(); tokenIterator.hasNext();) {
-      AnnotationFS token = (AnnotationFS) tokenIterator.next();
-
-      for (Iterator<AnnotationFS> it = entityAnnotations.iterator(); it.hasNext();) {
-
-        AnnotationFS entity = (AnnotationFS) it.next();
+    for (AnnotationFS token : tokenList) {
+      for (AnnotationFS entity : entityAnnotations) {
-        tokenArray[i] = ((AnnotationFS) tokenList.get(i))
-            .getCoveredText();
+        tokenArray[i] = tokenList.get(i).getCoveredText();
-      NameSample traingSentence = new NameSample(tokenArray, names, null, false);
+      NameSample trainingSentence = new NameSample(tokenArray, names, null, false);
-      if (traingSentence.getSentence().length != 0) {
-        nameFinderSamples.add(traingSentence);
+      if (trainingSentence.getSentence().length != 0) {
+        nameFinderSamples.add(trainingSentence);
-          logger.log(Level.INFO, "Using addional training data file: " + additionalTrainingDataFile); 
+          logger.log(Level.INFO, "Using additional training data file: " + additionalTrainingDataFile);
-      // TODO: Make sure its possible to pass custom feature generator
-      // User could subclass this trainer to provide a custom feature generator
-      nameModel = NameFinderME.train(language, null,
-          samples, Collections.EMPTY_MAP, iterations, cutoff);
+      Map<String, Object> resourceMap;
+      
+      if (featureGeneratorResourceDir != null) {
+        resourceMap = TokenNameFinderTrainerTool.loadResources(featureGeneratorResourceDir);
+      }
+      else {
+        resourceMap = Collections.emptyMap();
+      }
+      
+      nameModel = NameFinderME.train(language, null,
+          samples, featureGeneratorDefinition, resourceMap, iterations, cutoff);

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS66 INS66 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS85 INS42 INS42 INS60 INS25 INS70 INS43 INS59 INS27 INS8 INS44 INS42 MOV8 INS42 INS42 INS32 INS42 INS33 INS54 INS60 INS25 MOV43 INS42 INS70 INS60 INS25 INS42 INS42 INS32 INS42 INS8 INS12 INS43 INS59 INS27 INS8 INS44 INS42 MOV8 INS74 INS59 INS27 INS8 INS8 INS42 INS21 INS44 INS8 INS42 INS42 INS32 INS42 INS33 INS21 MOV43 INS42 UPD42 INS43 INS43 INS43 INS42 INS42 INS33 INS21 INS21 INS7 INS43 INS42 INS53 INS42 INS42 INS32 INS42 INS7 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS14 UPD42 UPD42 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS43 INS42 INS43 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 UPD45 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL11 DEL36 DEL40