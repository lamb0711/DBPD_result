OPENNLP-641 The name finder can now use a sequence model to predict the outcome

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1562853 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.ml.model.SequenceClassificationModel;
+  public TokenNameFinderModel(String languageCode, SequenceClassificationModel nameFinderModel,
+      byte[] generatorDescriptor, Map<String, Object> resources, Map<String, String> manifestInfoEntries) {
+    super(COMPONENT_NAME, languageCode, manifestInfoEntries);
+    
+    // if (!isModelValid(nameFinderModel)) {
+    //  throw new IllegalArgumentException("Model not compatible with name finder!");
+    //}
+    
+    init(nameFinderModel, generatorDescriptor, resources, manifestInfoEntries);
+  }
+  
-    artifactMap.put(MAXENT_MODEL_ENTRY_NAME, nameFinderModel);
-    
-    if (generatorDescriptor != null && generatorDescriptor.length > 0)
-      artifactMap.put(GENERATOR_DESCRIPTOR_ENTRY_NAME, generatorDescriptor);
-    
-    if (resources != null) {
-      // The resource map must not contain key which are already taken
-      // like the name finder maxent model name
-      if (resources.containsKey(MAXENT_MODEL_ENTRY_NAME) ||
-          resources.containsKey(GENERATOR_DESCRIPTOR_ENTRY_NAME)) {
-        throw new IllegalArgumentException();
-      }
-      
-      // TODO: Add checks to not put resources where no serializer exists,
-      // make that case fail here, should be done in the BaseModel
-      artifactMap.putAll(resources); 
-    }
-    checkArtifactMap();
+    init(nameFinderModel, generatorDescriptor, resources, manifestInfoEntries);
-  
+  private void init(Object nameFinderModel,
+      byte[] generatorDescriptor, Map<String, Object> resources, Map<String, String> manifestInfoEntries) {
+    artifactMap.put(MAXENT_MODEL_ENTRY_NAME, nameFinderModel);
+    
+    if (generatorDescriptor != null && generatorDescriptor.length > 0)
+      artifactMap.put(GENERATOR_DESCRIPTOR_ENTRY_NAME, generatorDescriptor);
+    
+    if (resources != null) {
+      // The resource map must not contain key which are already taken
+      // like the name finder maxent model name
+      if (resources.containsKey(MAXENT_MODEL_ENTRY_NAME) ||
+          resources.containsKey(GENERATOR_DESCRIPTOR_ENTRY_NAME)) {
+        throw new IllegalArgumentException();
+      }
+      
+      // TODO: Add checks to not put resources where no serializer exists,
+      // make that case fail here, should be done in the BaseModel
+      artifactMap.putAll(resources); 
+    }
+    checkArtifactMap();
+  }
-    return (MaxentModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME);
+    
+    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof MaxentModel) {
+      return (MaxentModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME);
+    }
+    else {
+      return null;
+    }
+  public SequenceClassificationModel<String> getNameFinderSequenceModel() {
+    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
+      return (SequenceClassificationModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME);
+    }
+    else {
+      return null;
+    }
+  }
+  
-    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof MaxentModel) {
-      MaxentModel model = (MaxentModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME);
-      isModelValid(model);
+    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof MaxentModel ||
+        artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof SequenceClassificationModel) {
+      // TODO: Check should be performed on the possible outcomes!
+//      MaxentModel model = (MaxentModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME);
+//      isModelValid(model);

INS26 MOV31 INS40 INS31 INS31 INS31 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS42 MOV44 MOV44 INS44 INS44 INS44 INS8 UPD83 INS39 INS42 INS44 INS8 INS83 INS74 INS42 INS8 INS43 INS42 INS43 INS42 INS5 INS42 INS74 INS42 INS74 INS42 INS46 INS21 INS5 INS42 INS74 INS42 INS74 INS42 MOV46 MOV25 INS21 INS43 INS42 INS25 INS43 INS43 INS25 INS42 INS42 INS39 INS85 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS32 INS39 INS85 INS43 INS43 INS43 INS43 INS43 INS43 INS32 INS42 INS62 MOV8 INS8 INS42 INS42 INS62 MOV8 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS41 INS32 INS43 INS41 INS41 MOV62 INS62 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 MOV11 INS33 INS32 INS43 UPD43 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21