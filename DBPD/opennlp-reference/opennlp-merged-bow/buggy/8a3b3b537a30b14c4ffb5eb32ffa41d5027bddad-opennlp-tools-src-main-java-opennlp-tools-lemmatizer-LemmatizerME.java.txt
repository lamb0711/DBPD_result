OPENNLP-904 Harmonize lemmatizer API and function to get multiple lemmas

OPENNLP-904 add minor correction after PR comment

+import java.util.Arrays;
+  public static final int LEMMA_NUMBER = 29;
+    String[] ses = predictSES(toks, tags);
+    String[] lemmas = decodeLemmas(toks, ses);
+    return lemmas;
+  }
+
+  @Override public List<List<String>> lemmatize(List<String> toks,
+      List<String> tags) {
+    String[] tokens = toks.toArray(new String[toks.size()]);
+    String[] posTags = tags.toArray(new String[tags.size()]);
+    String[][] allLemmas = predictLemmas(LEMMA_NUMBER, tokens, posTags);
+    List<List<String>> predictedLemmas = new ArrayList<>();
+    for (int i = 0; i < allLemmas.length; i++) {
+      predictedLemmas.add(Arrays.asList(allLemmas[i]));
+    }
+    return predictedLemmas;
+  }
+
+  /**
+   * Predict Short Edit Script (automatically induced lemma class).
+   * @param toks the array of tokens
+   * @param tags the array of pos tags
+   * @return an array containing the lemma classes
+   */
+  public String[] predictSES(String[] toks, String[] tags) {
-    List<String> c = bestSequence.getOutcomes();
-    return c.toArray(new String[c.size()]);
+    List<String> ses = bestSequence.getOutcomes();
+    return ses.toArray(new String[ses.size()]);
+  }
+
+  /**
+   * Predict all possible lemmas (using a default upper bound).
+   * @param numLemmas the default number of lemmas
+   * @param toks the tokens
+   * @param tags the postags
+   * @return a double array containing all posible lemmas for each token and postag pair
+   */
+  public String[][] predictLemmas(int numLemmas, String[] toks, String[] tags) {
+    Sequence[] bestSequences = model.bestSequences(numLemmas, toks, new Object[] {tags},
+            contextGenerator, sequenceValidator);
+    String[][] allLemmas = new String[bestSequences.length][];
+    for (int i = 0; i < allLemmas.length; i++) {
+      List<String> ses = bestSequences[i].getOutcomes();
+      String[] sesArray = ses.toArray(new String[ses.size()]);
+      allLemmas[i] = decodeLemmas(toks,sesArray);
+    }
+    return allLemmas;
-  public String[] decodeLemmas(String[] toks, String[] preds) {
+  public static String[] decodeLemmas(String[] toks, String[] preds) {
-      //System.err.println("-> DEBUG: " + toks[i].toLowerCase() + " " + preds[i] + " " + lemma);
+  public static String[] encodeLemmas(String[] toks, String[] lemmas) {
+    List<String> sesList = new ArrayList<>();
+    for (int i = 0; i < toks.length; i++) {
+      String ses = StringUtil.getShortestEditScript(toks[i], lemmas[i]);
+      if (ses.length() == 0) {
+        ses = "_";
+      }
+      sesList.add(ses);
+    }
+    return sesList.toArray(new String[sesList.size()]);
+  }
+

INS26 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS5 INS42 INS44 INS44 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS8 INS29 UPD42 INS29 INS83 INS5 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS83 INS5 INS42 INS44 INS44 INS8 INS42 INS34 INS43 INS85 INS5 INS42 INS5 INS42 INS60 INS60 INS41 INS42 INS43 INS74 INS74 INS42 INS74 INS42 INS60 INS60 INS60 INS60 INS24 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS85 INS85 INS39 INS42 INS5 INS42 INS5 INS42 INS60 INS60 INS24 INS41 INS43 INS85 INS5 INS42 INS5 INS42 INS60 INS24 INS41 INS42 INS43 INS85 INS43 INS85 INS5 INS59 MOV5 INS59 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS5 INS59 INS5 INS59 INS5 INS59 INS74 INS59 INS58 INS27 INS37 INS8 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS85 INS43 INS85 INS5 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS43 INS85 INS43 INS85 INS74 INS59 INS58 INS27 INS37 INS8 INS32 INS42 INS42 INS43 INS85 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS32 INS43 INS85 INS85 INS42 INS32 INS43 INS74 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 UPD42 UPD42 INS42 INS42 INS43 INS85 INS42 INS32 INS43 INS85 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS60 INS60 INS21 INS42 INS42 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS21 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS34 INS32 INS5 INS42 INS42 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS5 INS40 INS42 INS34 INS74 INS59 INS5 INS59 INS7 INS42 INS42 INS74 INS42 INS34 INS43 INS59 INS27 INS8 INS32 INS5 INS32 INS5 INS32 INS5 INS32 INS42 INS42 INS43 INS42 INS42 INS32 INS43 INS85 UPD42 INS5 INS4 INS43 INS85 INS85 INS43 INS43 INS42 INS32 INS43 INS85 INS42 INS32 INS2 INS32 INS43 INS42 INS42 INS32 INS32 INS34 INS21 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS43 INS85 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS2 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS43 INS85 INS42 INS42 INS42