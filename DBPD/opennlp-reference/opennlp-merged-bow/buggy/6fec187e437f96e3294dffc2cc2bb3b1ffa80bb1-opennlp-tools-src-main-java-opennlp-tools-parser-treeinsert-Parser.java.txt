OPENNLP-175 Removed duplicate code in parser train methods

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1126943 13f79535-47bb-0310-9956-ffa450edef68

-    // TODO: training code should be shared between two parsers
-    // TODO: Make cutoff configurable ... which cutoff should be used here?
-    Dictionary mdict = buildDictionary(parseSamples, rules, 5);
+    Dictionary mdict = buildDictionary(parseSamples, rules, mlParams);
-    // TODO: training code should be shared between two parsers
-    System.err.println("Building dictionary");
-    Dictionary mdict = buildDictionary(parseSamples, rules, cut);
+    TrainingParameters params = new TrainingParameters();
+    params.put("dict", TrainingParameters.CUTOFF_PARAM, Integer.toString(cut));
-    parseSamples.reset();
-
-    // tag
-    POSModel posModel = POSTaggerME.train(languageCode, new PosSampleStream(
-        parseSamples), ModelType.MAXENT, null, null, cut, iterations);
-
-    parseSamples.reset();
-
-    // chunk
-    ChunkerModel chunkModel = ChunkerME.train(languageCode, new ChunkSampleStream(
-        parseSamples), cut, iterations, new ChunkContextGenerator());
-
-    parseSamples.reset();
-
-    // build
-    System.err.println("Training builder");
-    opennlp.model.EventStream bes = new ParserEventStream(parseSamples, rules,
-        ParserEventTypeEnum.BUILD, mdict);
-    AbstractModel buildModel = train(bes, iterations, cut);
-
-    parseSamples.reset();
-
-    // check
-    System.err.println("Training checker");
-    opennlp.model.EventStream kes = new ParserEventStream(parseSamples, rules,
-        ParserEventTypeEnum.CHECK);
-    AbstractModel checkModel = train(kes, iterations, cut);
-
-    parseSamples.reset();
+    params.put("tagger", TrainingParameters.CUTOFF_PARAM, Integer.toString(cut));
+    params.put("tagger", TrainingParameters.ITERATIONS_PARAM, Integer.toString(iterations));
+    params.put("chunker", TrainingParameters.CUTOFF_PARAM, Integer.toString(cut));
+    params.put("chunker", TrainingParameters.ITERATIONS_PARAM, Integer.toString(iterations));
+    params.put("check", TrainingParameters.CUTOFF_PARAM, Integer.toString(cut));
+    params.put("check", TrainingParameters.ITERATIONS_PARAM, Integer.toString(iterations));
+    params.put("build", TrainingParameters.CUTOFF_PARAM, Integer.toString(cut));
+    params.put("build", TrainingParameters.ITERATIONS_PARAM, Integer.toString(iterations));
-    // attach 
-    System.err.println("Training attacher");
-    opennlp.model.EventStream attachEvents = new ParserEventStream(parseSamples, rules,
-        ParserEventTypeEnum.ATTACH);
-    AbstractModel attachModel = train(attachEvents, iterations, cut);
-    
-    // TODO: Remove cast for HeadRules
-    return new ParserModel(languageCode, buildModel, checkModel,
-        attachModel, posModel, chunkModel, 
-        (opennlp.tools.parser.lang.en.HeadRules) rules, ParserType.TREEINSERT);
+    return train(languageCode, parseSamples, rules, params);

INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 UPD43 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 INS42 INS14 UPD42 UPD42 INS45 INS40 INS32 INS42 INS42 INS45 INS40 INS32 UPD42 MOV42 UPD42 MOV42 INS45 INS40 INS32 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS40 INS32 INS42 INS42 INS45 INS40 INS32 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS40 INS32 INS42 INS42 INS45 INS40 INS32 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS40 INS32 INS42 INS42 INS45 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 DEL34 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL40 DEL33 DEL33 DEL42 DEL32 DEL59 DEL60 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL43 DEL14 DEL32 DEL59 DEL60 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL43 DEL42 DEL11 DEL40 DEL14