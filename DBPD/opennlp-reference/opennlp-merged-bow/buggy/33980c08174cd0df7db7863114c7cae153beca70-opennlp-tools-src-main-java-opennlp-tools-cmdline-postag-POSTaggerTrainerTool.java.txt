OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.ArgumentParser;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
+import opennlp.tools.cmdline.AbstractTrainerTool;
+import opennlp.tools.cmdline.postag.POSTaggerTrainerTool.TrainerToolParams;
-import opennlp.tools.postag.WordTagSampleStream;
-import opennlp.tools.util.ObjectStream;
-import opennlp.tools.util.PlainTextByLineStream;
+import opennlp.tools.util.TrainingParameters;
+import opennlp.tools.util.model.ModelUtil;
-public final class POSTaggerTrainerTool implements CmdLineTool {
+public final class POSTaggerTrainerTool
+    extends AbstractTrainerTool<POSSample, TrainerToolParams> {
-  interface TrainerToolParams extends TrainingParams, TrainingToolParams{
-
+  interface TrainerToolParams extends TrainingParams, TrainingToolParams {
-  public String getName() {
-    return "POSTaggerTrainer";
+  public POSTaggerTrainerTool() {
+    super(POSSample.class, TrainerToolParams.class);
-  
+
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " "
-      + ArgumentParser.createUsage(TrainerToolParams.class);
-  }
+  public void run(String format, String[] args) {
+    super.run(format, args);
-  static ObjectStream<POSSample> openSampleData(String sampleDataName,
-      File sampleDataFile, Charset encoding) {
-    CmdLineUtil.checkInputFile(sampleDataName + " Data", sampleDataFile);
-
-    FileInputStream sampleDataIn = CmdLineUtil.openInFile(sampleDataFile);
-
-    ObjectStream<String> lineStream = new PlainTextByLineStream(sampleDataIn
-        .getChannel(), encoding);
-
-    return new WordTagSampleStream(lineStream);
-  }
-  
-  public void run(String[] args) {
-    String errorMessage = ArgumentParser.validateArgumentsLoudly(args, TrainerToolParams.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
-    }
-    
-    TrainerToolParams params = ArgumentParser.parse(args,
-        TrainerToolParams.class);    
-    
-    opennlp.tools.util.TrainingParameters mlParams =
-      CmdLineUtil.loadTrainingParameters(params.getParams(), true);
-    
+    mlParams = CmdLineUtil.loadTrainingParameters(params.getParams(), true);
-      System.err.println("Training parameters file is invalid!");
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(1, "Training parameters file is invalid!");
-    
-    File trainingDataInFile = params.getData();
+
+    if(mlParams == null) {
+      mlParams = ModelUtil.createTrainingParameters(params.getIterations(), params.getCutoff());
+      mlParams.put(TrainingParameters.ALGORITHM_PARAM, getModelType(params.getType()).toString());
+    }
+
-    
-    ObjectStream<POSSample> sampleStream = openSampleData("Training", trainingDataInFile,
-        params.getEncoding());
-    
-    
+
-        CmdLineUtil.printTrainingIoError(e);
-        throw new TerminateToolException(-1);
+        throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());
-      if (mlParams == null) {
-        // depending on model and sequence choose training method
-        model = opennlp.tools.postag.POSTaggerME.train(params.getLang(),
-             sampleStream, getModelType(params.getType()), tagdict, ngramDict, params.getCutoff(), params.getIterations());
-      }
-      else {
-        model = opennlp.tools.postag.POSTaggerME.train(params.getLang(),
-            sampleStream, mlParams, tagdict, ngramDict);
-      }
+      model = opennlp.tools.postag.POSTaggerME.train(factory.getLang(),
+          sampleStream, mlParams, tagdict, ngramDict);
-      CmdLineUtil.printTrainingIoError(e);
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());

MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 INS74 INS43 MOV43 MOV43 INS42 MOV44 UPD42 MOV42 INS46 UPD42 INS21 INS21 MOV25 INS57 MOV57 INS48 INS7 MOV43 INS42 INS42 INS42 INS42 MOV32 INS53 INS21 INS21 MOV44 INS14 INS32 INS7 INS53 MOV43 INS34 INS45 UPD42 MOV32 INS42 INS42 INS40 INS32 MOV44 INS8 INS42 INS32 INS14 UPD42 UPD42 MOV42 MOV32 INS42 MOV53 INS40 INS42 INS32 INS42 INS42 INS42 INS42 MOV43 MOV38 INS27 INS42 INS42 INS45 INS32 MOV43 MOV38 INS27 UPD42 MOV42 UPD42 MOV42 INS45 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL43 DEL42 DEL45 DEL41 DEL83 DEL42 DEL43 DEL42 DEL45 DEL40 DEL45 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL45 DEL27 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL33 DEL42 DEL27 DEL40 DEL42 DEL42 DEL32 DEL21 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL34 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL40 DEL43 DEL42 DEL59 DEL60 DEL40 DEL42 DEL45 DEL32 DEL21 DEL14 DEL53 DEL40 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL32 DEL21 DEL42 DEL43 DEL34 DEL38 DEL14 DEL53