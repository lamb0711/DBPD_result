OPENNLP-402 Added formats support to trainer and evaluator tools. Refactoring of various things. Thanks to Aliaksandr Autayeu for providing a patch.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1209220 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.ArgumentParser;
-import opennlp.tools.cmdline.CLI;
-import opennlp.tools.cmdline.CmdLineTool;
+import opennlp.tools.cmdline.AbstractCrossValidatorTool;
+import opennlp.tools.cmdline.tokenizer.TokenizerCrossValidatorTool.CVToolParams;
-import opennlp.tools.util.ObjectStream;
+import opennlp.tools.util.model.ModelUtil;
-public final class TokenizerCrossValidatorTool implements CmdLineTool {
+public final class TokenizerCrossValidatorTool
+    extends AbstractCrossValidatorTool<TokenSample, CVToolParams> {
-    
-  public String getName() {
-    return "TokenizerCrossValidator";
+  public TokenizerCrossValidatorTool() {
+    super(TokenSample.class, CVToolParams.class);
-  
+
-  public String getHelp() {
-    return "Usage: " + CLI.CMD + " " + getName() + " "
-        + ArgumentParser.createUsage(CVToolParams.class);
-  }
+  public void run(String format, String[] args) {
+    super.run(format, args);
-  public void run(String[] args) {
-    String errorMessage = ArgumentParser.validateArgumentsLoudly(args, CVToolParams.class);
-    if (null != errorMessage) {
-      System.err.println(errorMessage);
-      System.err.println(getHelp());
-      throw new TerminateToolException(1);
+    mlParams = CmdLineUtil.loadTrainingParameters(params.getParams(), false);
+    if (mlParams == null) {
+      mlParams = ModelUtil.createTrainingParameters(params.getIterations(), params.getCutoff());
-    
-    CVToolParams params = ArgumentParser.parse(args, CVToolParams.class);
-    
-    opennlp.tools.util.TrainingParameters mlParams = CmdLineUtil
-        .loadTrainingParameters(params.getParams(), false);
-    
-    File trainingDataInFile = params.getData();
-    CmdLineUtil.checkInputFile("Training Data", trainingDataInFile);
-    
-    Charset encoding = params.getEncoding(); 
-    
-    ObjectStream<TokenSample> sampleStream =
-        TokenizerTrainerTool.openSampleData("Training Data",
-        trainingDataInFile, encoding);
-    
-    
+
-    if (mlParams == null)
-      mlParams = TokenizerTrainerTool.createTrainingParameters(
-          params.getIterations(), params.getCutoff());
-    
-          params.getLang(), dict, params.getAlphaNumOpt(), mlParams, listener);
+          factory.getLang(), dict, params.getAlphaNumOpt(), mlParams, listener);
-      CmdLineUtil.printTrainingIoError(e);
-      throw new TerminateToolException(-1);
+      throw new TerminateToolException(-1, "IO error while reading training data or indexing data: " + e.getMessage());

MOV26 MOV26 MOV31 UPD40 UPD40 UPD40 INS74 INS43 MOV43 MOV43 INS42 INS44 MOV60 UPD42 MOV42 INS46 MOV43 INS42 INS21 INS21 INS57 MOV57 INS48 INS7 INS8 INS43 INS42 INS42 INS42 INS42 MOV32 MOV21 INS42 UPD42 INS27 UPD42 INS45 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL83 DEL42 DEL43 DEL42 DEL45 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL45 DEL40 DEL45 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL41 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL33 DEL42 DEL27 DEL40 DEL42 DEL42 DEL32 DEL21 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL34 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21