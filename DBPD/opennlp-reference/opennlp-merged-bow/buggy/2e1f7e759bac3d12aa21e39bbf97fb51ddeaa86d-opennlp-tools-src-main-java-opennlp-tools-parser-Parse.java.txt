OPENNLP-923: Wrap all lines longer than 110 chars

And also add checkstyle enforcement

-   * Creates a new parse node for this specified text and span of the specified type with the specified probability
-   * and the specified head index.
+   * Creates a new parse node for this specified text and span of the specified type
+   * with the specified probability and the specified head index.
-   * Creates a new parse node for this specified text and span of the specified type with the specified probability
-   * and the specified head and head index.
+   * Creates a new parse node for this specified text and span of the specified type with
+   * the specified probability and the specified head and head index.
-      //System.err.println("Parse.insert: "+constituent.hashCode()+" -> "+constituent.getParent().hashCode());
+      // System.err.println("Parse.insert: "+constituent.hashCode()+" -> "
+      // +constituent.getParent().hashCode());
-   * Returns the log of the product of the probability associated with all the decisions which formed this constituent.
+   * Returns the log of the product of the probability associated with all the
+   * decisions which formed this constituent.
-   * @return The log of the product of the probability associated with all the decisions which formed this constituent.
+   * @return The log of the product of the probability associated with all the
+   * decisions which formed this constituent.
-    Parse adjNode = new Parse(this.text,new Span(lastChild.getSpan().getStart(),node.getSpan().getEnd()),lastChild.getType(),1,rules.getHead(new Parse[]{lastChild,node},lastChild.getType()));
+    Parse adjNode = new Parse(this.text,new Span(lastChild.getSpan().getStart(),
+        node.getSpan().getEnd()),lastChild.getType(),1,
+        rules.getHead(new Parse[]{lastChild,node},lastChild.getType()));
-    Parse adjNode = new Parse(this.text,new Span(lastChild.getSpan().getStart(),sister.getSpan().getEnd()),lastChild.getType(),1,rules.getHead(new Parse[]{lastChild,sister},lastChild.getType()));
+    Parse adjNode = new Parse(this.text,new Span(lastChild.getSpan().getStart(),sister.getSpan().getEnd()),
+        lastChild.getType(),1,rules.getHead(new Parse[]{lastChild,sister},lastChild.getType()));
-            commonParent.insert(new Parse(commonParent.getText(), nameSpan, tag, 1.0, endToken.getHeadIndex()));
+            commonParent.insert(new Parse(commonParent.getText(), nameSpan,
+                tag, 1.0, endToken.getHeadIndex()));
-                commonParent.insert(new Parse(commonParent.getText(), commonParent.getSpan(), tag, 1.0, commonParent.getHeadIndex()));
+                commonParent.insert(new Parse(commonParent.getText(), commonParent.getSpan(),
+                    tag, 1.0, commonParent.getHeadIndex()));
-}
+}

UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 INS66