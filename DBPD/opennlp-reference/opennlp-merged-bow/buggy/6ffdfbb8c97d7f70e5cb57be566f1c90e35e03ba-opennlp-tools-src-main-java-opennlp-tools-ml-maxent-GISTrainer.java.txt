OPENNLP-946: GISTrainer should extend AbstractEventTrainer

This closes #104

+import opennlp.tools.ml.AbstractEventTrainer;
+import opennlp.tools.ml.model.AbstractModel;
+import opennlp.tools.ml.model.MaxentModel;
-public class GISTrainer {
+public class GISTrainer extends AbstractEventTrainer {
+  public static final String MAXENT_VALUE = "MAXENT";
+
+  /**
+   * If we are using smoothing, this is used as the "number" of times we want
+   * the trainer to imagine that it saw a feature that it actually didn't see.
+   * Defaulted to 0.1.
+   */
+  private static final double SMOOTHING_OBSERVATION = 0.1;
+
+  private static final String SMOOTHING_PARAM = "smoothing";
+  private static final boolean SMOOTHING_DEFAULT = false;
+
-  GISTrainer() {
+  public GISTrainer() {
+  @Override
+  public boolean isSortAndMerge() {
+    return true;
+  }
+
+  @Override
+  public MaxentModel doTrain(DataIndexer indexer) throws IOException {
+    int iterations = getIterations();
+
+    AbstractModel model;
+
+    boolean smoothing = trainingParameters.getBooleanParameter(SMOOTHING_PARAM, SMOOTHING_DEFAULT);
+    int threads = trainingParameters.getIntParameter(TrainingParameters.THREADS_PARAM, 1);
+
+    this.setSmoothing(smoothing);
+    model = trainModel(iterations, indexer, threads);
+
+    return model;
+  }
+
+   * Train a model using the GIS algorithm, assuming 100 iterations and no
+   * cutoff.
+   *
+   * @param eventStream
+   *          The EventStream holding the data on which this model will be
+   *          trained.
+   * @return The newly trained model, which can be used immediately or saved to
+   *         disk using an opennlp.tools.ml.maxent.io.GISModelWriter object.
+   */
+  public GISModel trainModel(ObjectStream<Event> eventStream) throws IOException {
+    return trainModel(eventStream, 100, 0);
+  }
+
+  /**
-    indexingParameters.put(GIS.CUTOFF_PARAM, Integer.toString(cutoff));
-    indexingParameters.put(GIS.ITERATIONS_PARAM, Integer.toString(iterations));
+    indexingParameters.put(GISTrainer.CUTOFF_PARAM, Integer.toString(cutoff));
+    indexingParameters.put(GISTrainer.ITERATIONS_PARAM, Integer.toString(iterations));
+   * @param threads
+   * @return The newly trained model, which can be used immediately or saved
+   * to disk using an opennlp.tools.ml.maxent.io.GISModelWriter object.
+   */
+  public GISModel trainModel(int iterations, DataIndexer di, int threads) {
+    return trainModel(iterations, di, new UniformPrior(), threads);
+  }
+
+  /**
+   * Train a model using the GIS algorithm.
+   *
+   * @param iterations The number of GIS iterations to perform.
+   * @param di         The data indexer used to compress events in memory.
-  private void display(String s) {
+  protected void display(String s) {

INS26 INS26 INS26 INS40 INS40 INS40 INS43 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS44 INS8 UPD83 INS42 INS42 INS45 INS65 INS42 INS34 INS42 INS42 INS45 INS42 INS9 INS42 INS41 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS21 INS21 INS41 INS65 INS65 INS65 INS42 INS74 INS42 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS41 INS66 INS66 INS66 INS9 INS42 INS39 INS59 INS43 INS59 INS39 INS59 INS39 INS59 INS32 INS7 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS43 INS43 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS52 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS34 INS34 UPD40 UPD40 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS34 INS42 INS42 INS42 INS42 INS43 INS42