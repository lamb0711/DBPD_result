OPENNLP-17 Added support for custom feature generator

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1127447 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.InputStream;
+import java.util.HashMap;
+import java.util.Map;
+import opennlp.tools.util.InvalidFormatException;
+import opennlp.tools.util.model.ArtifactSerializer;
+import opennlp.tools.util.model.ModelUtil;
+    
+    byte featureGeneratorBytes[] = null;
+    
+    // load descriptor file into memory
+    if (parameters.getFeatureGenDescriptorFile() != null) {
+      InputStream bytesIn = 
+          CmdLineUtil.openInFile(new File(parameters.getFeatureGenDescriptorFile()));
+      
+      try {
+        featureGeneratorBytes = ModelUtil.read(bytesIn);
+      } catch (IOException e) {
+        CmdLineUtil.printTrainingIoError(e);
+        throw new TerminateToolException(-1);
+      }
+      finally {
+        try {
+          bytesIn.close();
+        } catch (IOException e) {
+          // sorry that this can fail
+        }
+      }
+    }
+    
+    // TODO: Support Custom resources: 
+    //       Must be loaded into memory, or written to tmp file until descriptor 
+    //       is loaded which defines parses when model is loaded
+    
+    String resourceDirectory = parameters.getResourceDirectory();
+    
+    Map<String, Object> resources = new HashMap<String, Object>();
+    
+    if (resourceDirectory != null) {
+      
+      Map<String, ArtifactSerializer> artifactSerializers = 
+          TokenNameFinderModel.createArtifactSerializers();
+      
+      File resourcePath = new File(resourceDirectory);
+      
+      File resourceFiles[] = resourcePath.listFiles();
+      
+      // TODO: Filter files, also files with start with a dot
+      for (File resourceFile : resourceFiles) {
+        
+        // TODO: Move extension extracting code to method and
+        //       write unit test for it
+        
+        // extract file ending
+        String resourceName = resourceFile.getName();
+        
+        int lastDot = resourceName.lastIndexOf('.');
+        
+        if (lastDot == -1) {
+          continue;
+        }
+        
+        String ending = resourceName.substring(lastDot + 1);
+        
+        // lookup serializer from map
+        ArtifactSerializer serializer = artifactSerializers.get(ending);
+        
+        // TODO: Do different? For now just ignore ....
+        if (serializer == null)
+          continue;
+        
+        InputStream resoruceIn = CmdLineUtil.openInFile(resourceFile);
+        
+        try {
+          resources.put(resourceName, serializer.create(resoruceIn));
+        }
+        catch (InvalidFormatException e) {
+          // TODO: Fix exception handling
+          e.printStackTrace();
+        }
+        catch (IOException e) {
+          // TODO: Fix exception handling
+          e.printStackTrace();
+        }
+        finally {
+          try {
+            resoruceIn.close();
+          }
+          catch (IOException e) {
+          }
+        }
+      }
+    }
+    
-           sampleStream, Collections.<String, Object>emptyMap(),
-           parameters.getNumberOfIterations(), parameters.getCutoff());
+           sampleStream, featureGeneratorBytes, resources, parameters.getNumberOfIterations(),
+           parameters.getCutoff());

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS60 INS25 INS60 INS60 INS25 INS39 INS59 INS27 INS8 INS43 INS59 INS74 INS59 INS27 INS8 INS42 INS85 INS33 INS32 INS33 INS60 INS54 INS42 INS42 INS32 INS43 MOV43 MOV43 INS42 INS14 INS42 INS33 INS60 INS60 INS60 INS70 INS42 INS42 INS43 INS59 INS8 INS12 INS8 INS42 INS42 INS42 INS74 INS74 INS59 INS43 INS59 INS43 INS59 INS44 INS42 INS8 INS42 INS42 INS32 INS21 INS44 INS8 INS54 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS85 INS32 INS43 INS42 INS60 INS60 INS25 INS60 INS60 INS25 INS60 INS54 INS42 INS42 INS14 INS7 INS43 INS42 INS21 INS53 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS18 INS43 INS59 INS8 INS12 INS12 INS8 INS43 INS32 INS42 INS32 INS42 INS32 INS14 INS21 INS44 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS38 INS18 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS32 INS21 INS44 INS8 INS44 INS8 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS38 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS13 INS34 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS8 INS12 UPD42 MOV42 UPD42 MOV42 INS42 INS34 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 DEL32