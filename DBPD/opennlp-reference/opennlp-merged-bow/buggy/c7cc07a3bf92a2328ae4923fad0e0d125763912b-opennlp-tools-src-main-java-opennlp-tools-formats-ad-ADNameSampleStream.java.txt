OPENNLP-481: Instead of using a custom detokenizer we should use the new MERGE_BOTH option

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1309510 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
-  private static final Pattern alphanumericPattern = Pattern.compile("^[\\p{L}\\p{Nd}-]+$");
+  private static final Pattern hyphenPattern = Pattern.compile("((\\p{L}+)-$)|(^-(\\p{L}+)(.*))|((\\p{L}+)-(\\p{L}+)(.*))");
+  private static final Pattern alphanumericPattern = Pattern.compile("^[\\p{L}\\p{Nd}]+$");
-  private Collection<? extends String> processTok(String tok) {
+  private List<String> processTok(String tok) {
+    boolean tokAdded = false;
-    if(!original.equals(tok) && tok.length() > 1 && !alphanumericPattern.matcher(tok).matches()) {
-      out.addAll(processTok(tok));
-    } else {
-      out.add(tok);
+    // lets split all hyphens
+    if (tok.contains("-") && tok.length() > 1) {
+      Matcher matcher = hyphenPattern.matcher(tok);
+
+      String firstTok = null;
+      String hyphen = "-";
+      String secondTok = null;
+      String rest = null;
+
+      if (matcher.matches()) {
+        if (matcher.group(1) != null) {
+          firstTok = matcher.group(2);
+        } else if (matcher.group(3) != null) {
+          secondTok = matcher.group(4);
+          rest = matcher.group(5);
+        } else if (matcher.group(6) != null) {
+          firstTok = matcher.group(7);
+          secondTok = matcher.group(8);
+          rest = matcher.group(9);
+        }
+
+        addIfNotEmpty(firstTok, out);
+        addIfNotEmpty(hyphen, out);
+        addIfNotEmpty(secondTok, out);
+        addIfNotEmpty(rest, out);
+        tokAdded = true;
+      }
+    }
+    if (!tokAdded) {
+      if (!original.equals(tok) && tok.length() > 1
+          && !alphanumericPattern.matcher(tok).matches()) {
+        out.addAll(processTok(tok));
+      } else {
+        out.add(tok);
+      }
+  private void addIfNotEmpty(String firstTok, List<String> out) {
+    if (firstTok != null && firstTok.length() > 0) {
+      out.addAll(processTok(firstTok));
+    }
+  }
+

INS23 INS31 INS83 INS83 INS83 MOV43 INS59 INS43 UPD74 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS32 INS42 UPD43 INS43 INS60 INS25 INS25 INS43 INS42 INS74 INS42 INS25 INS42 INS42 INS45 UPD45 UPD42 INS42 INS39 INS59 INS27 INS8 INS38 INS8 INS42 INS43 INS43 INS27 INS8 INS42 INS9 INS32 INS27 INS60 INS60 INS60 INS60 INS60 INS25 INS42 MOV25 INS42 INS42 INS27 INS27 INS21 INS42 INS42 INS45 INS32 INS34 INS43 INS59 MOV43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS33 INS32 INS34 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS45 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS25 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS8 INS25 INS32 INS32 INS32 INS32 INS7 INS42 INS42 INS32 INS33 INS21 INS27 INS8 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS34 INS7 INS32 INS33 INS21 INS21 INS27 INS8 INS42 INS32 INS42 INS42 INS34 INS7 INS7 INS32 INS33 INS21 INS21 INS21 INS42 INS42 INS34 INS42 INS32 INS42 INS32 INS42 INS42 INS34 INS7 INS7 INS7 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS34 DEL40 DEL26 DEL76