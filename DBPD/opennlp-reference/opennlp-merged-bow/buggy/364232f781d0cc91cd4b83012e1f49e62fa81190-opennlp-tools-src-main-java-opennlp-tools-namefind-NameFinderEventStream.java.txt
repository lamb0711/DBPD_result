Restores type parameter in NameFinder

This closes #34
See issue OPENNLP-719

+import java.util.Objects;
+  private final String defaultType;
+
-  public NameFinderEventStream(ObjectStream<NameSample> dataStream, String type, NameContextGenerator contextGenerator, SequenceCodec codec) {
+  public NameFinderEventStream(ObjectStream<NameSample> dataStream, String type, NameContextGenerator contextGenerator, SequenceCodec<String> codec) {
-    String type1;
-    if (type != null)
-      type1 = type;
-    else
-      type1 = "default";
+    this.defaultType = type;
-    List<Event> events = new ArrayList<Event>(outcomes.length);
+    List<Event> events = new ArrayList<>(outcomes.length);
-    String outcomes[] = codec.encode(sample.getNames(), sample.getSentence().length);
+    Span[] names = sample.getNames();
+    if (!Objects.isNull(this.defaultType)) {
+      overrideDefaultType(names);
+    }
+
+    String outcomes[] = codec.encode(names, sample.getSentence().length);
+  private void overrideDefaultType(Span[] names) {
+    for (int i = 0; i < names.length; i++) {
+      Span n = names[i];
+      if (Objects.isNull(n.getType())) {
+        names[i] = new Span(n.getStart(), n.getEnd(), this.defaultType,
+                n.getProb());
+      }
+    }
+  }
+

INS26 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS74 INS21 INS60 INS25 INS5 INS42 INS24 MOV43 MOV43 MOV7 INS5 INS59 INS38 INS8 INS43 INS85 INS58 INS27 INS37 INS8 INS22 INS43 INS85 INS42 MOV32 INS32 INS21 INS42 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS52 INS42 UPD74 INS42 INS42 INS42 INS22 INS32 INS42 INS42 INS34 INS43 INS59 INS32 INS8 INS52 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS7 INS2 INS14 INS42 INS42 INS43 INS32 INS32 INS22 INS32 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 DEL42 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL21 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL43