OPENNLP-643
Removed old constructors in lieu of Map<String,Pattern[]> constructor and changed find methods appropriately. Updated unit tests for RegexNameFinder.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1564395 13f79535-47bb-0310-9956-ffa450edef68

-  private Pattern mPatterns[];
-  private String sType;
-  public RegexNameFinder(Pattern patterns[], String type) {
-    if (patterns == null || patterns.length == 0) {
-      throw new IllegalArgumentException("patterns must not be null or empty!");
-    }
-
-    mPatterns = patterns;
-    sType = type;
-  }
-
-  public RegexNameFinder(Pattern patterns[]) {
-    if (patterns == null || patterns.length == 0) {
-      throw new IllegalArgumentException("patterns must not be null or empty!");
-    }
-
-    mPatterns = patterns;
-    sType = null;
-  }
-
-    if (mPatterns == null && regexMap != null) {
+    if (regexMap != null) {
-    } else {
-      for (Pattern mPattern : mPatterns) {
-        Matcher matcher = mPattern.matcher(sentenceString);
-
-        while (matcher.find()) {
-          Integer tokenStartIndex =
-                  sentencePosTokenMap.get(matcher.start());
-          Integer tokenEndIndex =
-                  sentencePosTokenMap.get(matcher.end());
-
-          if (tokenStartIndex != null && tokenEndIndex != null) {
-            Span annotation = new Span(tokenStartIndex, tokenEndIndex, sType);
-            annotations.add(annotation);
-          }
-        }
-      }
+
-    if (mPatterns == null && regexMap != null) {
+    if (regexMap != null) {
-    } else {
-      for (Pattern mPattern : mPatterns) {
-        Matcher matcher = mPattern.matcher(text);
-
-        while (matcher.find()) {
-          Integer tokenStartIndex = matcher.start();
-          Integer tokenEndIndex = matcher.end();
-          Span annotation = new Span(tokenStartIndex, tokenEndIndex, sType);
-          annotations.add(annotation);
-
-        }
-      }
-
-  public Pattern[] getmPatterns() {
-    return mPatterns;
-  }
-
-  public void setmPatterns(Pattern[] mPatterns) {
-    this.mPatterns = mPatterns;
-  }
-
-  public String getsType() {
-    return sType;
-  }
-
-  public void setsType(String sType) {
-    this.sType = sType;
-  }
+ 

MOV27 MOV27 UPD42 MOV42 DEL83 DEL42 DEL43 DEL42 DEL85 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL85 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL42 DEL43 DEL42 DEL85 DEL44 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21 DEL8 DEL31 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL27 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL8 DEL70 DEL8 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL61 DEL8 DEL70 DEL8 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31