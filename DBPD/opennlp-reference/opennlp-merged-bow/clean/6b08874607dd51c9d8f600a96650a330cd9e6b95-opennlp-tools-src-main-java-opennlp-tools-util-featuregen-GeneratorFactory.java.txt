OPENNLP-1159: avoid letting users specify AggregatedFeatureGeneratorFactory in XML config (#300)


- *<p>
- *   &lt;generator class="opennlp.tools.util.featuregen.AggregatedFeatureGeneratorFactory"&gt;
+ * <p>
+ * &lt;featureGenerators name="namefind"&gt;
- *       &lt;generator class="opennlp.tools.util.featuregen.AggregatedFeatureGeneratorFactory"&gt;
- *       &lt;/generator&gt;
- *   &lt;/generator&gt;
+ * &lt;/featureGenerators&gt;
-      int generators = 0;
+      List<AdaptiveFeatureGenerator> generators = new ArrayList<>();
-            String key = "generator#" + Integer.toString(generators++);
+            String key = "generator#" + Integer.toString(generators.size());
+            generators.add(afg);
+
+      if (generators.size() > 1) {
+        AdaptiveFeatureGenerator aggregatedFeatureGenerator =
+            new AggregatedFeatureGenerator(generators.toArray(
+                new AdaptiveFeatureGenerator[generators.size()]));
+        args.put("generator#0", aggregatedFeatureGenerator);
+      }
-      Element firstElem = getFirstChild(generatorElement);
-      if (firstElem != null) {
-        if (firstElem.getTagName().equals("generator")) {
-          return buildGenerator(firstElem, resourceManager);
+
+      List<AdaptiveFeatureGenerator> generators = new ArrayList<>();
+      NodeList childNodes = generatorElement.getChildNodes();
+      for (int i = 0; i < childNodes.getLength(); i++) {
+        Node childNode = childNodes.item(i);
+        if (childNode instanceof Element) {
+          Element elem = (Element)childNode;
+          String type = elem.getTagName();
+          if (type.equals("generator")) {
+            generators.add(buildGenerator(elem, resourceManager));
+          }
+          else
+            throw new InvalidFormatException("Unexpected element: " + elementName);
-        else
-          throw new InvalidFormatException("Unexpected element: " + elementName);
+
+      if (generators.size() == 1)
+        return generators.get(0);
+      else if (generators.size() > 1)
+        return new AggregatedFeatureGenerator(generators.toArray(
+            new AdaptiveFeatureGenerator[generators.size()]));

UPD66 UPD66 INS60 INS25 INS74 INS59 INS27 INS8 INS60 INS24 INS25 INS43 INS43 INS42 INS14 INS32 INS34 MOV60 INS21 INS74 INS59 UPD43 INS58 INS27 INS37 INS8 INS27 INS41 INS25 INS42 INS42 INS74 INS42 INS42 INS43 INS32 INS43 INS43 INS42 INS14 UPD42 UPD42 INS39 INS59 UPD42 MOV42 INS32 INS42 INS60 MOV25 INS32 INS34 INS32 INS27 INS41 MOV53 INS43 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS42 INS74 UPD42 UPD42 INS42 INS34 INS42 INS42 INS43 INS59 INS62 INS8 INS42 INS42 INS42 INS42 INS34 INS32 INS34 INS14 INS42 INS43 INS32 INS43 INS42 INS42 INS32 INS42 INS43 INS60 INS60 INS25 INS42 INS42 INS43 INS32 INS21 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 MOV8 MOV53 INS42 INS42 INS42 INS3 INS32 INS5 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 MOV42 MOV45 INS21 INS5 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS43 INS42 UPD42 MOV42 MOV42 INS32 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 MOV42 UPD42 MOV42 MOV42 INS42 INS42 DEL66 DEL66 DEL42 DEL37 DEL39 DEL42 DEL34 DEL32 DEL41 DEL32 DEL32 DEL33 DEL27 DEL8 DEL25