Correct indentation and white spaces

This closes #30

See issue OPENNLP-914

-   * is starting.
+   *     is starting.
-      if (ci+1 != children.length) {
+      if (ci + 1 != children.length) {
-          for (Iterator<Parse> pit=nextPunct.iterator();pit.hasNext();) {
+          for (Iterator<Parse> pit = nextPunct.iterator(); pit.hasNext();) {
-        String punctbo = punctbo(p,c1.index <= 0 ? c1.index -1 : c1.index);
+        String punctbo = punctbo(p,c1.index <= 0 ? c1.index - 1 : c1.index);
-          if (c0.unigram) features.add(c0.cons+","+punctbo);
-          features.add(c0.consbo+","+punctbo);
+          if (c0.unigram) features.add(c0.cons + "," + punctbo);
+          features.add(c0.consbo + "," + punctbo);
-          if (c1.unigram) features.add(punctbo+","+c1.cons);
-          features.add(punctbo+","+c1.consbo);
+          if (c1.unigram) features.add(punctbo + "," + c1.cons);
+          features.add(punctbo + "," + c1.consbo);
-        if (bigram) features.add(c0.cons+","+punctbo+","+c1.cons);
-        if (c1.unigram)  features.add(c0.consbo+","+punctbo+","+c1.cons);
-        if (c0.unigram)  features.add(c0.cons+","+punctbo+","+c1.consbo);
-        features.add(c0.consbo+","+punctbo+","+c1.consbo);
+        if (bigram) features.add(c0.cons + "," + punctbo + "," + c1.cons);
+        if (c1.unigram)  features.add(c0.consbo + "," + punctbo + "," + c1.cons);
+        if (c0.unigram)  features.add(c0.cons + "," + punctbo + "," + c1.consbo);
+        features.add(c0.consbo + "," + punctbo + "," + c1.consbo);
-        for (Iterator<Parse> pi=punct1s.iterator();pi.hasNext();) {
+        for (Iterator<Parse> pi = punct1s.iterator(); pi.hasNext();) {
-//          String punct = punct(p,c1.index);
-          String punctbo = punctbo(p,c1.index <= 0 ? c1.index -1 : c1.index);
+          // String punct = punct(p,c1.index);
+          String punctbo = punctbo(p,c1.index <= 0 ? c1.index - 1 : c1.index);
-        for (Iterator<Parse> pi=punct2s.iterator();pi.hasNext();) {
+        for (Iterator<Parse> pi = punct2s.iterator(); pi.hasNext();) {
-//          String punct = punct(p,c2.index);
-          String punctbo = punctbo(p,c2.index <= 0 ? c2.index -1 : c2.index);
+          // String punct = punct(p,c2.index);
+          String punctbo = punctbo(p,c2.index <= 0 ? c2.index - 1 : c2.index);
-        for (Iterator<Parse> pi2=punct2s.iterator();pi2.hasNext();) {
-          String punctbo2 = punctbo(pi2.next(),c2.index <= 0 ? c2.index -1 : c2.index);
-          for (Iterator<Parse> pi1=punct1s.iterator();pi1.hasNext();) {
-            String punctbo1 = punctbo(pi1.next(),c1.index <= 0 ? c1.index -1 : c1.index);
-            if (trigram) features.add(c0.cons   + "," + punctbo1+","+c1.cons   + "," + punctbo2+","+c2.cons);
+        for (Iterator<Parse> pi2 = punct2s.iterator(); pi2.hasNext();) {
+          String punctbo2 = punctbo(pi2.next(),c2.index <= 0 ? c2.index - 1 : c2.index);
+          for (Iterator<Parse> pi1 = punct1s.iterator(); pi1.hasNext();) {
+            String punctbo1 = punctbo(pi1.next(),c1.index <= 0 ? c1.index - 1 : c1.index);
+            if (trigram) features.add(c0.cons   + "," + punctbo1 + "," + c1.cons   + "," + punctbo2 + "," + c2.cons);
-            if (bigram2) features.add(c0.consbo + "," + punctbo1+","+c1.cons   + "," + punctbo2+","+c2.cons);
-            if (c0.unigram && c2.unigram) features.add(c0.cons   + "," + punctbo1+","+c1.consbo + "," + punctbo2+","+c2.cons);
-            if (bigram1) features.add(c0.cons   + "," + punctbo1+","+c1.cons   + "," + punctbo2+","+c2.consbo);
+            if (bigram2) features.add(c0.consbo + "," + punctbo1 + "," + c1.cons   + "," + punctbo2 + "," + c2.cons);
+            if (c0.unigram && c2.unigram) features.add(c0.cons + "," + punctbo1 + "," + c1.consbo + "," + punctbo2 + "," + c2.cons);
+            if (bigram1) features.add(c0.cons + "," + punctbo1 + "," + c1.cons + "," + punctbo2 + ","  + c2.consbo);
-            if (c2.unigram) features.add(c0.consbo + "," + punctbo1+","+c1.consbo + "," + punctbo2+","+c2.cons);
-            if (c1.unigram) features.add(c0.consbo + "," + punctbo1+","+c1.cons   + "," + punctbo2+","+c2.consbo);
-            if (c0.unigram) features.add(c0.cons   + "," + punctbo1+","+c1.consbo + "," + punctbo2+","+c2.consbo);
+            if (c2.unigram) features.add(c0.consbo + "," + punctbo1 + "," + c1.consbo + "," + punctbo2 + "," + c2.cons);
+            if (c1.unigram) features.add(c0.consbo + "," + punctbo1 + "," + c1.cons   + "," + punctbo2 + "," + c2.consbo);
+            if (c0.unigram) features.add(c0.cons   + "," + punctbo1 + "," + c1.consbo + "," + punctbo2 + "," + c2.consbo);
-            features.add(c0.consbo + "," + punctbo1+","+c1.consbo + "," + punctbo2+","+c2.consbo);
+            features.add(c0.consbo + "," + punctbo1 + "," + c1.consbo + "," + punctbo2 + "," + c2.consbo);
-              if (bigram1) features.add(c0.cons   + "," + punctbo1+","+c1.cons   + "," + punctbo2);
-              if (c1.unigram)  features.add(c0.consbo + "," + punctbo1+","+c1.cons   + "," + punctbo2);
-              if (c0.unigram)  features.add(c0.cons   + "," + punctbo1+","+c1.consbo + "," + punctbo2);
-              features.add(c0.consbo + "," + punctbo1+","+c1.consbo + "," + punctbo2);
+              if (bigram1) features.add(c0.cons   + "," + punctbo1 + "," + c1.cons   + "," + punctbo2);
+              if (c1.unigram)  features.add(c0.consbo + "," + punctbo1 + "," + c1.cons   + "," + punctbo2);
+              if (c0.unigram)  features.add(c0.cons   + "," + punctbo1 + "," + c1.consbo + "," + punctbo2);
+              features.add(c0.consbo + "," + punctbo1 + "," + c1.consbo + "," + punctbo2);
-        for (Iterator<Parse> pi2=punct2s.iterator();pi2.hasNext();) {
-          String punctbo2 = punctbo(pi2.next(),c2.index <= 0 ? c2.index -1 : c2.index);
-          if (trigram) features.add(c0.cons   + "," + c1.cons   + "," + punctbo2+","+c2.cons);
+        for (Iterator<Parse> pi2 = punct2s.iterator(); pi2.hasNext();) {
+          String punctbo2 = punctbo(pi2.next(),c2.index <= 0 ? c2.index - 1 : c2.index);
+          if (trigram) features.add(c0.cons   + "," + c1.cons   + "," + punctbo2 + "," + c2.cons);
-          if (bigram2) features.add(c0.consbo + "," + c1.cons   + ","  + punctbo2+ "," + c2.cons);
-          if (c0.unigram && c2.unigram) features.add(c0.cons    + "," + c1.consbo + "," + punctbo2+","+c2.cons);
-          if (bigram1) features.add(c0.cons   + "," + c1.cons   + "," +  punctbo2+","+c2.consbo);
+          if (bigram2) features.add(c0.consbo + "," + c1.cons   + ","  + punctbo2 + "," + c2.cons);
+          if (c0.unigram && c2.unigram) features.add(c0.cons    + "," + c1.consbo + "," + punctbo2 + "," + c2.cons);
+          if (bigram1) features.add(c0.cons + "," + c1.cons   + "," +  punctbo2 + "," + c2.consbo);
-          if (c2.unigram) features.add(c0.consbo + "," + c1.consbo + "," + punctbo2+","+c2.cons);
-          if (c1.unigram) features.add(c0.consbo + "," + c1.cons   + "," + punctbo2+","+c2.consbo);
-          if (c0.unigram) features.add(c0.cons   + "," + c1.consbo + "," + punctbo2+","+c2.consbo);
+          if (c2.unigram) features.add(c0.consbo + "," + c1.consbo + "," + punctbo2 + "," + c2.cons);
+          if (c1.unigram) features.add(c0.consbo + "," + c1.cons   + "," + punctbo2 + "," + c2.consbo);
+          if (c0.unigram) features.add(c0.cons   + "," + c1.consbo + "," + punctbo2 + "," + c2.consbo);
-          features.add(c0.consbo + "," + c1.consbo + "," + punctbo2+","+c2.consbo);
+          features.add(c0.consbo + "," + c1.consbo + "," + punctbo2 + "," + c2.consbo);
-        for (Iterator<Parse> pi1=punct1s.iterator();pi1.hasNext();) {
-          String punctbo1 = punctbo(pi1.next(),c1.index <= 0 ? c1.index -1 : c1.index);
-          if (trigram) features.add(c0.cons     + "," + punctbo1   +","+ c1.cons   +","+c2.cons);
+        for (Iterator<Parse> pi1 = punct1s.iterator(); pi1.hasNext();) {
+          String punctbo1 = punctbo(pi1.next(), c1.index <= 0 ? c1.index - 1 : c1.index);
+          if (trigram) features.add(c0.cons + "," + punctbo1 + "," + c1.cons + "," + c2.cons);
-          if (bigram2) features.add(c0.consbo    + "," + punctbo1   +","+ c1.cons   +","+c2.cons);
-          if (c0.unigram && c2.unigram) features.add(c0.cons + "," + punctbo1   +","+ c1.consbo +","+c2.cons);
-          if (bigram1) features.add(c0.cons      + "," + punctbo1   +","+ c1.cons   +","+c2.consbo);
+          if (bigram2) features.add(c0.consbo + "," + punctbo1 + "," + c1.cons + "," + c2.cons);
+          if (c0.unigram && c2.unigram) features.add(c0.cons + "," + punctbo1 + "," + c1.consbo + "," + c2.cons);
+          if (bigram1) features.add(c0.cons + "," + punctbo1   + "," + c1.cons + "," + c2.consbo);
-          if (c2.unigram) features.add(c0.consbo  + "," + punctbo1   +","+ c1.consbo +","+c2.cons);
-          if (c1.unigram) features.add(c0.consbo  + "," + punctbo1   +","+ c1.cons   +","+c2.consbo);
-          if (c0.unigram) features.add(c0.cons    + "," + punctbo1   +","+ c1.consbo +","+c2.consbo);
+          if (c2.unigram) features.add(c0.consbo + "," + punctbo1 + "," + c1.consbo + "," + c2.cons);
+          if (c1.unigram) features.add(c0.consbo + "," + punctbo1 + "," + c1.cons   + "," + c2.consbo);
+          if (c0.unigram) features.add(c0.cons + "," + punctbo1 + "," + c1.consbo + "," + c2.consbo);
-          features.add(c0.consbo + "," + punctbo1   +","+ c1.consbo +","+c2.consbo);
+          features.add(c0.consbo + "," + punctbo1   + "," + c1.consbo + "," + c2.consbo);
-    if (punctuation !=null) {
-      for (Iterator<Parse> pi=punctuation.iterator();pi.hasNext();) {
+    if (punctuation != null) {
+      for (Iterator<Parse> pi = punctuation.iterator(); pi.hasNext();) {
-    for (int fi=0;fi<rf.size();fi++) {
+    for (int fi = 0; fi < rf.size(); fi++) {
-    for (int ni=leftIndex;ni<nodes.length;ni++){
+    for (int ni = leftIndex; ni < nodes.length; ni++) {

