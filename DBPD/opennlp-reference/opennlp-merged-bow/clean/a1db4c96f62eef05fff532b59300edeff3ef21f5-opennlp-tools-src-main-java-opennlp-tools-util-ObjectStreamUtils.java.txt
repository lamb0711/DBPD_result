OPENNLP-1116: Added concatenation of collection of stream.  renamed method, added test

+  public static <T> ObjectStream<T> concatenateObjectStream(final Collection<ObjectStream<T>> streams) {
+
+    // We may want to skip null streams instead of throwing a 
+    for (ObjectStream<T> stream : streams) {
+      if (stream == null) {
+        throw new NullPointerException("stream cannot be null");
+      }
+    }
+
+    return new ObjectStream<T>() {
+
+      private Iterator<ObjectStream<T>> iterator = streams.iterator();
+      private ObjectStream<T> currentStream = iterator.next();
+
+      @Override
+      public T read() throws IOException {
+        T object = null;
+
+        while (currentStream != null && object == null) {
+          object = currentStream.read();
+          if (object == null) {
+            currentStream = (iterator.hasNext()) ? iterator.next() : null;
+          }
+        }
+        return object;
+      }
+
+      @Override
+      public void reset() throws IOException, UnsupportedOperationException {
+        for (ObjectStream<T> stream : streams) {
+          stream.reset();
+        }
+        iterator = streams.iterator();
+      }
+
+      @Override
+      public void close() throws IOException {
+        for (ObjectStream<T> stream : streams) {
+          stream.close();
+        }
+      }
+
+    };
+
+  }
+
+  /**
+   * Creates a single concatenated ObjectStream from multiple individual
+   * ObjectStreams with the same type.
+   *
+   * @param streams
+   * @return
+   */
-  public static <T> ObjectStream<T> createObjectStream(final ObjectStream<T>... streams) {
+  public static <T> ObjectStream<T> concatenateObjectStream(final ObjectStream<T>... streams) {

INS31 INS29 INS83 INS83 INS73 INS74 INS42 INS44 INS8 UPD42 INS65 INS65 INS65 INS42 INS43 INS43 INS83 INS74 INS42 INS70 INS41 INS66 INS66 INS42 INS42 INS42 INS43 INS74 INS44 INS42 INS8 INS14 INS42 INS43 INS43 INS74 INS42 INS25 INS74 INS1 INS42 INS42 INS43 INS43 INS27 INS8 INS43 INS43 INS23 INS23 INS31 INS31 INS31 INS42 INS42 INS42 INS33 INS53 INS42 INS42 INS83 INS74 INS59 INS83 INS74 INS59 INS78 INS83 INS43 INS42 INS43 INS8 INS78 INS83 INS39 INS42 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS43 INS8 INS14 INS43 INS74 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS60 INS61 INS41 INS42 INS42 INS42 INS70 INS21 INS42 INS42 INS70 INS43 INS45 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS44 INS42 INS8 INS7 INS44 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS33 INS27 INS27 INS21 INS25 INS74 INS42 INS21 INS42 INS32 INS74 INS42 INS21 INS42 INS33 INS42 INS33 INS7 INS27 INS8 INS43 INS43 INS32 INS42 INS42 INS43 INS43 INS32 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS16 INS36 INS32 INS33 INS32 INS42 INS42 INS42 INS42