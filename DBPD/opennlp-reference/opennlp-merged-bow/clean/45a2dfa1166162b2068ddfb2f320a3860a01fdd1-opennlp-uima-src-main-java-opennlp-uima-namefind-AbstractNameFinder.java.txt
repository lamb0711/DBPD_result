Merge branch 'trunk' of https://git-wip-us.apache.org/repos/asf/opennlp into trunk

-import java.util.LinkedList;
-import java.util.List;
+import java.util.*;
+  protected Map<String, Type> mNameTypeMapping = Collections.emptyMap();
+
-    mNameType = AnnotatorUtil.getRequiredTypeParameter(context, typeSystem,
+    mNameType = AnnotatorUtil.getOptionalTypeParameter(context, typeSystem,
+
+    String typeMapString = (String) context.getConfigParameterValue(
+            NameFinder.NAME_TYPE_MAP_PARAMETER);
+
+    if (typeMapString != null) {
+      Map<String, Type> nameTypeMap = new HashMap<>();
+
+      String[] mappings = typeMapString.split(",");
+
+      for (String mapping : mappings) {
+        String[] parts = mapping.split(":");
+
+        if (parts.length == 2) {
+          nameTypeMap.put(parts[0].trim(), typeSystem.getType(parts[1].trim()));
+        }
+        else {
+            mLogger.log(Level.WARNING, String.format("Failed to parse a part of the type mapping [%s]", mapping));
+        }
+      }
+
+      mNameTypeMapping = Collections.unmodifiableMap(nameTypeMap);
+    }
+
+    if (mNameType == null && mNameTypeMapping.size() == 0) {
+        throw new AnalysisEngineProcessException(new Exception("No name type or valid name type mapping configured!"));
+    }
-        nameAnnotations[i] =
-            cas.createAnnotation(mNameType, startIndex, endIndex);
+        Type nameType = mNameTypeMapping.get(names[i].getType());
-        cas.getIndexRepository().addFS(nameAnnotations[i]);
+        if (nameType == null) {
+          nameType = mNameType;
+        }
+
+        // Types in the model which are not mapped should be ignored,
+        // this allows the usage of only some types in the model
+        if (nameType != null) {
+          nameAnnotations[i] = cas.createAnnotation(nameType, startIndex, endIndex);
+          cas.getIndexRepository().addFS(nameAnnotations[i]);
+        }

UPD40 INS23 INS83 INS74 INS59 INS43 INS43 INS43 INS42 INS32 INS60 INS25 INS25 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS42 INS11 INS42 INS33 INS60 INS60 INS70 INS21 INS27 INS27 INS53 UPD42 INS43 INS32 INS74 INS59 INS5 INS59 INS44 INS42 INS8 INS7 INS42 INS33 INS32 INS34 INS14 INS42 INS42 INS42 INS40 INS43 INS43 INS43 INS42 INS14 INS43 INS85 INS42 INS32 INS43 INS42 INS60 INS25 INS42 INS32 INS42 INS42 INS43 INS14 INS60 INS25 INS25 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS45 INS42 INS5 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS43 INS45 INS43 INS59 INS27 INS8 INS27 INS8 INS43 INS43 INS85 INS42 INS32 INS40 INS34 INS21 INS21 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS33 MOV21 MOV21 INS42 INS42 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS32 INS7 INS42 INS42 INS32 INS32 INS42 INS42 INS40 INS32 INS2 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 UPD42 INS42 INS34 INS2 INS42 INS42 INS34 DEL40 DEL26