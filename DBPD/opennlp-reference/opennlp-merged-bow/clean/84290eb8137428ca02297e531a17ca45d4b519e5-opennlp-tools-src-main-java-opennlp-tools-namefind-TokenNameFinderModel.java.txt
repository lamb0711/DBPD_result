OPENNLP-241 Unified model validation. Model is now validated independent on which constructor is used to create it.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1154873 13f79535-47bb-0310-9956-ffa450edef68

+    
+    checkArtifactMap();
+  @Override
+  protected void createArtifactSerializers(Map<String, ArtifactSerializer> serializers) {
+    super.createArtifactSerializers(serializers);
+    
+    serializers.put("featuregen", new ByteArraySerializer());
+  }
+  
+  public static Map<String, ArtifactSerializer> createArtifactSerializers()  {
+    
+    // TODO: Not so nice, because code cannot really be reused by the other create serializer method
+    //       Has to be redesigned, we need static access to default serializers
+    //       and these should be able to extend during runtime ?! 
+    
+    Map<String, ArtifactSerializer> serializers = BaseModel.createArtifactSerializers();
+    
+    serializers.put("featuregen", new ByteArraySerializer());
+    
+    return serializers;
+  }
+  
-
-  @Override
-  protected void createArtifactSerializers(Map<String, ArtifactSerializer> serializers) {
-    super.createArtifactSerializers(serializers);
-    
-    serializers.put("featuregen", new ByteArraySerializer());
-  }
-  
-  public static Map<String, ArtifactSerializer> createArtifactSerializers()  {
-    
-    // TODO: Not so nice, because code cannot really be reused by the other create serializer method
-    //       Has to be redesigned, we need static access to default serializers
-    //       and these should be able to extend during runtime ?! 
-    
-    Map<String, ArtifactSerializer> serializers = BaseModel.createArtifactSerializers();
-    
-    serializers.put("featuregen", new ByteArraySerializer());
-    
-    return serializers;
-  }
-    if (!(artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof AbstractModel)) {
+    if (artifactMap.get(MAXENT_MODEL_ENTRY_NAME) instanceof AbstractModel) {
+      AbstractModel model = (AbstractModel) artifactMap.get(MAXENT_MODEL_ENTRY_NAME);
+      isModelValid(model);
+    }
+    else {

MOV31 INS21 INS32 MOV62 INS8 INS42 INS60 INS21 INS43 INS59 INS32 INS42 INS42 INS11 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 DEL36 DEL38