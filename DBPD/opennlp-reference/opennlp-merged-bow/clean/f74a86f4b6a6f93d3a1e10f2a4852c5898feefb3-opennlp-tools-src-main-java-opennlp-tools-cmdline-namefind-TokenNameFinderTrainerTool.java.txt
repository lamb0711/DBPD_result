OPENNLP-1034: Move serializers to resource mapping to GeneratorFactory

Closes #173

-import java.util.ArrayList;
-import java.util.List;
-import org.w3c.dom.Element;
-
-  public static Map<String, Object> loadResources(File resourcePath, File featureGenDescriptor) {
+  public static Map<String, Object> loadResources(File resourcePath, File featureGenDescriptor)
+      throws IOException {
+      Map<String, ArtifactSerializer> artifactSerializers = new HashMap<>();
-      Map<String, ArtifactSerializer> artifactSerializers = TokenNameFinderModel
-          .createArtifactSerializers();
-      List<Element> elements = new ArrayList<>();
-      ArtifactSerializer serializer = null;
-
-
-      // TODO: If there is descriptor file, it should be consulted too
-              GeneratorFactory.extractCustomArtifactSerializerMappings(xmlDescriptorIn));
-        } catch (IOException e) {
-          // TODO: Improve error handling!
-          e.printStackTrace();
-        }
-
-        try (InputStream inputStreamXML = CmdLineUtil.openInFile(featureGenDescriptor)) {
-          elements = GeneratorFactory.getDescriptorElements(inputStreamXML);
-        } catch (IOException e) {
-          e.printStackTrace();
+              GeneratorFactory.extractArtifactSerializerMappings(xmlDescriptorIn));
-      File[] resourceFiles = resourcePath.listFiles();
-
-      for (File resourceFile : resourceFiles) {
-        String resourceName = resourceFile.getName();
-        //gettting the serializer key from the element tag name
-        //if the element contains a dict attribute
-        for (Element xmlElement : elements) {
-          String dictName = xmlElement.getAttribute("dict");
-          if (dictName != null && dictName.equals(resourceName)) {
-            serializer = artifactSerializers.get(xmlElement.getTagName());
-          }
-        }
-        // TODO: Do different? For now just ignore ....
-        if (serializer == null)
-          continue;
-
-        try (InputStream resourceIn = CmdLineUtil.openInFile(resourceFile)) {
-          resources.put(resourceName, serializer.create(resourceIn));
-        } catch (IOException e) {
-          // TODO: Fix exception handling
-          e.printStackTrace();
+      for (Map.Entry<String, ArtifactSerializer> serializerMapping : artifactSerializers.entrySet()) {
+        String resourceName = serializerMapping.getKey();
+        try (InputStream resourceIn = CmdLineUtil.openInFile(new File(resourcePath, resourceName))) {
+          resources.put(resourceName, serializerMapping.getValue().create(resourceIn));
-  /**
-   * Calls a loadResources method above to load any external resource required for training.
-   * @param resourceDirectory the directory where the resources are to be found
-   * @param featureGeneratorDescriptor the xml feature generator
-   * @return a map containing the file name of the resource and its mapped Object
-   */
-  static Map<String, Object> loadResources(String resourceDirectory, File featureGeneratorDescriptor) {
-
-    if (resourceDirectory != null) {
-      File resourcePath = new File(resourceDirectory);
-
-      return loadResources(resourcePath, featureGeneratorDescriptor);
-    }
-
-    return new HashMap<>();
-  }
-
-
-    Map<String, Object> resources = loadResources(params.getResources(), params.getFeaturegen());
+    Map<String, Object> resources;
+    try {
+      resources = loadResources(params.getResources(), params.getFeaturegen());
+    }
+    catch (IOException e) {
+      throw new TerminateToolException(-1, e.getMessage(), e);
+    }

INS43 INS42 INS54 INS8 INS12 INS21 MOV44 INS8 INS32 INS8 INS7 INS53 MOV14 INS74 UPD42 UPD42 MOV42 UPD42 MOV42 MOV60 MOV54 INS42 MOV32 INS14 INS43 MOV43 MOV43 MOV43 INS43 INS38 INS32 INS42 INS40 UPD42 MOV43 INS42 INS34 INS42 INS42 UPD42 UPD42 INS14 UPD42 MOV43 INS42 INS42 INS32 UPD42 MOV42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL45 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL70 DEL42 DEL33 DEL27 DEL18 DEL25 DEL8 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL41 DEL8 DEL31