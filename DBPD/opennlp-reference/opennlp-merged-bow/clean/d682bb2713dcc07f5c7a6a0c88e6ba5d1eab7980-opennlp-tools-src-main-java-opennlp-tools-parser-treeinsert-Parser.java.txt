OPENNLP-180 Removed old main methods

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1124657 13f79535-47bb-0310-9956-ffa450edef68

-
-  @Deprecated
-  private static void usage() {
-    System.err.println("Usage: ParserME -[dict|tag|chunk|build|attach|fun] trainingFile parserModelDirectory [iterations cutoff]");
-    System.err.println();
-    System.err.println("Training file should be one sentence per line where each line consists of a Penn Treebank Style parse");
-    System.err.println("-tag Just build the tagging model.");
-    System.err.println("-chunk Just build the chunking model.");
-    System.err.println("-build Just build the build model");
-    System.err.println("-attach Just build the attach model");
-    System.err.println("-fun Predict function tags");
-  }
-
-  @Deprecated
-  public static void main(String[] args) throws java.io.IOException {
-    if (args.length < 3) {
-      usage();
-      System.exit(1);
-    }
-    boolean tag = false;
-    boolean chunk = false;
-    boolean build = false;
-    boolean attach = false;
-    boolean check = false;
-    boolean fun = false;
-    boolean all = true;
-    int argIndex = 0;
-    while (args[argIndex].startsWith("-")) {
-      all = false;
-      if (args[argIndex].equals("-tag")) {
-        tag = true;
-      }
-      else if (args[argIndex].equals("-chunk")) {
-        chunk = true;
-      }
-      else if (args[argIndex].equals("-build")) {
-        build = true;
-      }
-      else if (args[argIndex].equals("-attach")) {
-        attach = true;
-      }
-      else if (args[argIndex].equals("-check")) {
-        check = true;
-      }
-      else if (args[argIndex].equals("-fun")) {
-        fun = true;
-      }
-      else if (args[argIndex].equals("--")) {
-        argIndex++;
-        break;
-      }
-      else {
-        System.err.println("Invalid option " + args[argIndex]);
-        usage();
-        System.exit(1);
-      }
-      argIndex++;
-    }
-    java.io.File inFile = new java.io.File(args[argIndex++]);
-    String modelDirectory = args[argIndex++];
-    HeadRules rules = new opennlp.tools.parser.lang.en.HeadRules(modelDirectory+"/head_rules");
-    java.io.File tagFile = new java.io.File(modelDirectory+"/tag.bin.gz");
-    java.io.File chunkFile = new java.io.File(modelDirectory+"/chunk.bin.gz");
-    java.io.File buildFile = new java.io.File(modelDirectory+"/build.bin.gz");
-    java.io.File attachFile = new java.io.File(modelDirectory+"/attach.bin.gz");
-    java.io.File checkFile = new java.io.File(modelDirectory+"/check.bin.gz");
-    int iterations = 100;
-    int cutoff = 5;
-    if (args.length > argIndex) {
-      iterations = Integer.parseInt(args[argIndex++]);
-      cutoff = Integer.parseInt(args[argIndex++]);
-    }
-    if (fun) {
-      Parse.useFunctionTags(true);
-    }
-    if (tag || all) {
-      System.err.println("Training tagger");
-      opennlp.model.EventStream tes = new ParserEventStream(new ParseSampleStream(new PlainTextByLineStream(new java.io.FileReader(inFile))), rules, ParserEventTypeEnum.TAG);
-      AbstractModel tagModel = train(tes, iterations, cutoff);
-      System.out.println("Saving the tagger model as: " + tagFile);
-      new opennlp.maxent.io.SuffixSensitiveGISModelWriter(tagModel, tagFile).persist();
-    }
-
-    if (chunk || all) {
-      System.err.println("Training chunker");
-      opennlp.model.EventStream ces = new ParserEventStream(new ParseSampleStream(new PlainTextByLineStream(new java.io.FileReader(inFile))), rules, ParserEventTypeEnum.CHUNK);
-      AbstractModel chunkModel = train(ces, iterations, cutoff);
-      System.out.println("Saving the chunker model as: " + chunkFile);
-      new opennlp.maxent.io.SuffixSensitiveGISModelWriter(chunkModel, chunkFile).persist();
-    }
-
-    if (build || all) {
-      System.err.println("Training builder");
-      opennlp.model.EventStream bes = new ParserEventStream(new ParseSampleStream(new PlainTextByLineStream(new java.io.FileReader(inFile))), rules, ParserEventTypeEnum.BUILD,null);
-      AbstractModel buildModel = train(bes, iterations, cutoff);
-      System.out.println("Saving the build model as: " + buildFile);
-      new opennlp.maxent.io.SuffixSensitiveGISModelWriter(buildModel, buildFile).persist();
-    }
-
-    if (attach || all) {
-      System.err.println("Training attacher");
-      opennlp.model.EventStream kes = new ParserEventStream(new ParseSampleStream(new PlainTextByLineStream(new java.io.FileReader(inFile))), rules, ParserEventTypeEnum.ATTACH);
-      AbstractModel attachModel = train(kes, iterations, cutoff);
-      System.out.println("Saving the attach model as: " + attachFile);
-      new opennlp.maxent.io.SuffixSensitiveGISModelWriter(attachModel, attachFile).persist();
-    }
-
-    if (check || all) {
-      System.err.println("Training checker");
-      opennlp.model.EventStream ces = new ParserEventStream(new ParseSampleStream(new PlainTextByLineStream(new java.io.FileReader(inFile))), rules, ParserEventTypeEnum.CHECK);
-      AbstractModel checkModel = train(ces, iterations, cutoff);
-      System.out.println("Saving the check model as: " + checkFile);
-      new opennlp.maxent.io.SuffixSensitiveGISModelWriter(checkModel, checkFile).persist();
-    }
-  }

DEL42 DEL78 DEL83 DEL83 DEL39 DEL42 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL8 DEL31 DEL42 DEL78 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL40 DEL43 DEL40 DEL34 DEL27 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL37 DEL21 DEL10 DEL8 DEL40 DEL42 DEL45 DEL42 DEL42 DEL2 DEL27 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL37 DEL21 DEL8 DEL61 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL37 DEL2 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL37 DEL2 DEL59 DEL60 DEL42 DEL43 DEL42 DEL40 DEL43 DEL42 DEL45 DEL27 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL45 DEL27 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL45 DEL27 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL45 DEL27 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL45 DEL27 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL45 DEL27 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL40 DEL42 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL37 DEL2 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL37 DEL2 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL43 DEL42 DEL14 DEL14 DEL14 DEL42 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL43 DEL42 DEL14 DEL14 DEL14 DEL42 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL43 DEL42 DEL14 DEL14 DEL14 DEL42 DEL40 DEL33 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL43 DEL42 DEL14 DEL14 DEL14 DEL42 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL43 DEL42 DEL14 DEL14 DEL14 DEL42 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL40 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31