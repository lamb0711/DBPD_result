OPENNLP-924: Remove all old and leftover main methods, this closes apache/opennlp#45

-import java.io.IOException;
-      this.prevPunctSet = new TreeSet<Parse>();
+      this.prevPunctSet = new TreeSet<>();
-      this.nextPunctSet = new TreeSet<Parse>();
+      this.nextPunctSet = new TreeSet<>();
-    List<Parse> nodes = new LinkedList<Parse>();
+    List<Parse> nodes = new LinkedList<>();
-    for (int ni = 0, nn = names.length; ni < nn; ni++) {
-      Span nameTokenSpan = names[ni];
+    for (Span nameTokenSpan : names) {
-        Span nameSpan = new Span(startToken.getSpan().getStart(),endToken.getSpan().getEnd());
+        Span nameSpan = new Span(startToken.getSpan().getStart(), endToken.getSpan().getEnd());
-          commonParent.insert(new Parse(commonParent.getText(),nameSpan,tag,1.0,endToken.getHeadIndex()));
-        }
-        else {
+          commonParent.insert(new Parse(commonParent.getText(), nameSpan, tag, 1.0, endToken.getHeadIndex()));
+        } else {
-          for (int ki = 0, kn = kids.length; ki < kn; ki++) {
-            if (nameSpan.crosses(kids[ki].getSpan())) {
+          for (Parse kid : kids) {
+            if (nameSpan.crosses(kid.getSpan())) {
-            commonParent.insert(new Parse(commonParent.getText(),nameSpan,tag,1.0,endToken.getHeadIndex()));
-          }
-          else {
+            commonParent.insert(new Parse(commonParent.getText(), nameSpan, tag, 1.0, endToken.getHeadIndex()));
+          } else {
-                commonParent.insert(new Parse(commonParent.getText(), commonParent.getSpan(), tag,1.0, commonParent.getHeadIndex()));
+                commonParent.insert(new Parse(commonParent.getText(), commonParent.getSpan(), tag, 1.0, commonParent.getHeadIndex()));
-
-  /**
-   * Reads training parses (one-sentence-per-line) and displays parse structure.
-   *
-   * @param args The head rules files.
-   *
-   * @throws IOException If the head rules file can not be opened and read.
-   */
-  @Deprecated
-  public static void main(String[] args) throws java.io.IOException {
-    if (args.length == 0) {
-      System.err.println("Usage: Parse -fun -pos head_rules < train_parses");
-      System.err.println("Reads training parses (one-sentence-per-line) and displays parse structure.");
-      System.exit(1);
-    }
-    int ai = 0;
-    boolean fixPossesives = false;
-    while (args[ai].startsWith("-") && ai < args.length) {
-      if (args[ai].equals("-fun")) {
-        Parse.useFunctionTags(true);
-        ai++;
-      }
-      else if (args[ai].equals("-pos")) {
-        fixPossesives = true;
-        ai++;
-      }
-    }
-
-    opennlp.tools.parser.lang.en.HeadRules rules = new opennlp.tools.parser.lang.en.HeadRules(args[ai]);
-    java.io.BufferedReader in = new java.io.BufferedReader(new java.io.InputStreamReader(System.in));
-
-    for (String line = in.readLine(); line != null; line = in.readLine()) {
-      Parse p = Parse.parseParse(line,rules);
-      Parse.pruneParse(p);
-      if (fixPossesives) {
-        Parse.fixPossesives(p);
-      }
-      p.updateHeads(rules);
-      p.show();
-      //p.showCodeTree();
-    }
-  }

INS70 INS44 INS42 MOV8 MOV43 INS42 UPD74 UPD74 UPD74 INS70 INS44 INS42 INS8 MOV43 INS42 MOV25 INS42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL42 DEL40 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL8 DEL24 DEL39 DEL42 DEL34 DEL59 DEL42 DEL40 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL24 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL40 DEL43 DEL40 DEL34 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL40 DEL27 DEL27 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL37 DEL21 DEL8 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL42 DEL37 DEL21 DEL8 DEL25 DEL25 DEL8 DEL61 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL2 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL40 DEL43 DEL40 DEL43 DEL40 DEL14 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31