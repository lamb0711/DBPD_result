OPENLP-24 Formated code to comply with conventions

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1063312 13f79535-47bb-0310-9956-ffa450edef68

-
-    
-    /**
-     * Creates an IntegerPool with 0..size Integer objects.
-     *
-     * @param size the size of the pool.
-     */
-    public IntegerPool (int size) {
-        _table = new Integer[size];
-        for (int i = 0; i < size; i++) {
-            _table[i] = new Integer(i);
-        } // end of for (int i = 0; i < size; i++)
-    }
-    /**
-     * Returns the shared Integer wrapper for <tt>value</tt> if it is
-     * inside the range managed by this pool.  if <tt>value</tt> is
-     * outside the range, a new Integer instance is returned.
-     *
-     * @param value an <code>int</code> value
-     * @return an <code>Integer</code> value
-     */
-    public Integer get(int value) {
-        if (value < _table.length && value >= 0) {
-            return _table[value];
-        } else {
-            return new Integer(value);
-        }
+  /**
+   * Creates an IntegerPool with 0..size Integer objects.
+   * 
+   * @param size
+   *          the size of the pool.
+   */
+  public IntegerPool(int size) {
+    _table = new Integer[size];
+    for (int i = 0; i < size; i++) {
+      _table[i] = new Integer(i);
+    } // end of for (int i = 0; i < size; i++)
+  }
+
+  /**
+   * Returns the shared Integer wrapper for <tt>value</tt> if it is inside the
+   * range managed by this pool. if <tt>value</tt> is outside the range, a new
+   * Integer instance is returned.
+   * 
+   * @param value
+   *          an <code>int</code> value
+   * @return an <code>Integer</code> value
+   */
+  public Integer get(int value) {
+    if (value < _table.length && value >= 0) {
+      return _table[value];
+    } else {
+      return new Integer(value);
-}// IntegerPool
+  }
+}

UPD66 UPD66 UPD66 UPD66 UPD66