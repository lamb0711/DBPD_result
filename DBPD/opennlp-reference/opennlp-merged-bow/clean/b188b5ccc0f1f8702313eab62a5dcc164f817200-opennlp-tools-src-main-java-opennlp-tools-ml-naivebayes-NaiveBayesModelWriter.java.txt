OPENNLP-1010: Fix NaiveBayes model writer

The previous sortValues method was based on Perceptron, but for some reason it was not working
for NaiveBayes. Changed it to the one from GIS fixed it.

this closes apache/opennlp#154

+
-    ComparablePredicate[] sortPreds;
-    ComparablePredicate[] tmpPreds = new ComparablePredicate[PARAMS.length];
-    int[] tmpOutcomes = new int[numOutcomes];
-    double[] tmpParams = new double[numOutcomes];
-    int numPreds = 0;
-    //remove parameters with 0 weight and predicates with no parameters
+
+    ComparablePredicate[] sortPreds = new ComparablePredicate[PARAMS.length];
+
+    int numParams = 0;
-      int numParams = 0;
-      double[] predParams = PARAMS[pid].getParameters();
-      int[] outcomePattern = PARAMS[pid].getOutcomes();
-      for (int pi = 0; pi < predParams.length; pi++) {
-        if (predParams[pi] != 0d) {
-          tmpOutcomes[numParams] = outcomePattern[pi];
-          tmpParams[numParams] = predParams[pi];
-          numParams++;
-        }
-      }
+      int[] predkeys = PARAMS[pid].getOutcomes();
+      // Arrays.sort(predkeys);
+      int numActive = predkeys.length;
+      double[] activeParams = PARAMS[pid].getParameters();
-      int[] activeOutcomes = new int[numParams];
-      double[] activeParams = new double[numParams];
-
-      for (int pi = 0; pi < numParams; pi++) {
-        activeOutcomes[pi] = tmpOutcomes[pi];
-        activeParams[pi] = tmpParams[pi];
-      }
-      if (numParams != 0) {
-        tmpPreds[numPreds] = new ComparablePredicate(PRED_LABELS[pid], activeOutcomes, activeParams);
-        numPreds++;
-      }
+      numParams += numActive;
+      /*
+       * double[] activeParams = new double[numActive];
+       *
+       * int id = 0; for (int i=0; i < predkeys.length; i++) { int oid =
+       * predkeys[i]; activeOutcomes[id] = oid; activeParams[id] =
+       * PARAMS[pid].getParams(oid); id++; }
+       */
+      sortPreds[pid] = new ComparablePredicate(PRED_LABELS[pid],
+          predkeys, activeParams);
-    System.err.println("Compressed " + PARAMS.length + " parameters to " + numPreds);
-    sortPreds = new ComparablePredicate[numPreds];
-    System.arraycopy(tmpPreds, 0, sortPreds, 0, numPreds);
+
+  protected List<List<ComparablePredicate>> compressOutcomes(ComparablePredicate[] sorted) {
+    List<List<ComparablePredicate>> outcomePatterns = new ArrayList<>();
+    if (sorted.length > 0) {
+      ComparablePredicate cp = sorted[0];
+      List<ComparablePredicate> newGroup = new ArrayList<>();
+      for (int i = 0; i < sorted.length; i++) {
+        if (cp.compareTo(sorted[i]) == 0) {
+          newGroup.add(sorted[i]);
+        } else {
+          cp = sorted[i];
+          outcomePatterns.add(newGroup);
+          newGroup = new ArrayList<>();
+          newGroup.add(sorted[i]);
+        }
+      }
+      outcomePatterns.add(newGroup);
+    }
+    return outcomePatterns;
+  }
+
+

INS31 INS31 MOV83 MOV5 MOV42 INS8 INS83 INS74 INS42 INS44 INS8 MOV60 MOV60 INS24 MOV21 MOV41 INS43 INS74 MOV5 INS42 INS60 INS25 INS41 MOV58 MOV27 MOV37 INS8 INS42 INS43 INS43 INS74 INS59 INS27 INS8 INS42 UPD42 MOV60 MOV60 MOV60 INS21 MOV21 INS42 INS42 INS43 INS74 INS42 INS14 INS40 INS34 INS60 INS60 INS24 INS21 INS39 INS7 INS42 INS43 INS43 INS74 INS43 INS59 INS74 MOV59 MOV58 MOV27 MOV37 INS8 INS32 UPD42 INS42 INS40 UPD42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS2 INS43 INS43 UPD42 INS14 UPD42 INS40 UPD42 INS25 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 INS34 INS42 INS42 INS74 UPD42 INS27 INS8 INS8 INS43 INS32 INS34 INS21 MOV21 MOV21 MOV21 MOV21 INS42 INS42 INS42 INS2 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS2 INS42 UPD42 INS42 INS42 UPD42 INS14 UPD42 UPD42 INS2 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS74 INS42 INS42 INS43 UPD42 MOV42 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL3 DEL39 DEL85 DEL5 DEL42 DEL3 DEL42 DEL42 DEL42 DEL2 DEL40 DEL45 DEL40 DEL45 DEL42 DEL27 DEL43 DEL85 DEL5 DEL42 DEL3 DEL42 DEL34 DEL42 DEL34 DEL42 DEL42 DEL59 DEL60 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL34 DEL27 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL7 DEL21 DEL42 DEL42 DEL2 DEL42 DEL2 DEL7 DEL21 DEL42 DEL37 DEL21 DEL8 DEL25 DEL8 DEL24 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL3 DEL59 DEL60 DEL39 DEL85 DEL5 DEL60 DEL2 DEL2 DEL7 DEL21 DEL8 DEL24 DEL42 DEL34 DEL27 DEL42 DEL37 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31