OPENNLP-823 Removed deprecated constructors

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1712561 13f79535-47bb-0310-9956-ffa450edef68

-  /**
-   * Initializes the name finder with the specified model.
-   *
-   * @param model
-   * @param beamSize
-   *
-   * @deprecated the beam size is now configured during training time in the
-   * trainer parameter file via beamSearch.beamSize
-   *
-   * @deprecated Use {@link #NameFinderME(TokenNameFinderModel)} instead and use
-   * the {@link TokenNameFinderFactory} to configure it.
-   */
-  @Deprecated
-  public NameFinderME(TokenNameFinderModel model, AdaptiveFeatureGenerator generator, int beamSize,
-          SequenceValidator<String> sequenceValidator) {
-
-    seqCodec = model.getFactory().createSequenceCodec();
-
-    this.sequenceValidator = sequenceValidator;
-
-    // TODO: getNameFinderModel should be removed! Instead the model should always return
-    // a sequence classification model
-    // To maintain backward compatibility this should be done later, e.g. for 1.7.0
-    if (model.getNameFinderSequenceModel() != null) {
-      this.model = model.getNameFinderSequenceModel();
-    } else {
-      this.model = new opennlp.tools.ml.BeamSearch<String>(beamSize,
-              model.getNameFinderModel());
-    }
-
-    // If generator is provided always use that one
-    if (generator != null) {
-      contextGenerator = new DefaultNameContextGenerator(generator);
-    } else {
-      // If model has a generator use that one, otherwise create default
-      AdaptiveFeatureGenerator featureGenerator = model.createFeatureGenerators();
-
-      if (featureGenerator == null) {
-        featureGenerator = createFeatureGenerator();
-      }
-
-      contextGenerator = new DefaultNameContextGenerator(featureGenerator);
-    }
-
-    // NOTE: This didn't turn out to work well ... anybody using this actually ?!
-    contextGenerator.addFeatureGenerator(
-            new WindowFeatureGenerator(additionalContextFeatureGenerator, 8, 8));
-
-    if (this.sequenceValidator == null) {
-      this.sequenceValidator = new NameFinderSequenceValidator();
-    }
-  }
-
-  /**
-   * @deprecated the beam size is now configured during training time in the
-   * trainer parameter file via beamSearch.beamSize
-   */
-  @Deprecated
-  public NameFinderME(TokenNameFinderModel model, AdaptiveFeatureGenerator generator, int beamSize) {
-    this(model, generator, beamSize, null);
-  }
-
-  /**
-   * @deprecated the beam size is now configured during training time in the
-   * trainer parameter file via beamSearch.beamSize
-   */
-  @Deprecated
-  public NameFinderME(TokenNameFinderModel model, int beamSize) {
-    this(model, null, beamSize);
-  }
-

DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL66 DEL66 DEL65 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL52 DEL42 DEL22 DEL40 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL34 DEL34 DEL14 DEL32 DEL21 DEL52 DEL42 DEL22 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL43 DEL14 DEL7 DEL21 DEL8 DEL25 DEL8 DEL31 DEL66 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL33 DEL17 DEL8 DEL31 DEL66 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL33 DEL42 DEL17 DEL8 DEL31