OPENNLP-622 Updated to OpenNLP 1.6.0 and Morfologik 2.1.0

+import java.nio.file.Path;
-import morfologik.stemming.Dictionary;
-import morfologik.tools.FSABuildTool;
+import morfologik.stemming.DictionaryMetadata;
+import morfologik.stemming.EncoderType;
+import morfologik.tools.FSACompile;
-   * @param isUsePrefixes
-   *          if to compact using prefixes
+   * @param encoderType
+   *          the Morfologik enconder type
-      String separator, boolean isUsePrefixes, boolean isUseInfixes)
+      String separator, EncoderType encoderType)
-
-    File propertiesFile = new File(
-        Dictionary.getExpectedFeaturesName(dictOutFile.getAbsolutePath()));
-    this.build(dictInFile, dictOutFile, propertiesFile, encoding, separator,
-        isUsePrefixes, isUseInfixes);
+    Path propertiesPath = DictionaryMetadata
+        .getExpectedMetadataLocation(dictOutFile.toPath()); 
+    
+    this.build(dictInFile, dictOutFile, propertiesPath.toFile(), encoding, separator,
+        encoderType);
-      Charset encoding, String separator, boolean isUsePrefixes,
-      boolean isUseInfixes) throws Exception {
+      Charset encoding, String separator, EncoderType encoderType) throws Exception {
-    File morph = tab2morph(dictInFile, separator, isUsePrefixes, isUseInfixes);
+    File morph = tab2morph(dictInFile, separator, encoderType);
-    createProperties(encoding, separator, isUsePrefixes, isUseInfixes,
+    createProperties(encoding, separator, encoderType,
-      boolean isUsePrefixes, boolean isUseInfixes, File propertiesFile)
+		  EncoderType encoderType, File propertiesFile)
-    properties.setProperty("fsa.dict.uses-prefixes",
-        Boolean.toString(isUsePrefixes));
-    properties.setProperty("fsa.dict.uses-infixes",
-        Boolean.toString(isUseInfixes));
+    properties.setProperty("fsa.dict.encoder", encoderType.name());
-    FSABuildTool.main(params);
+    FSACompile.main(params);
+    // FSABuildTool.main(params);
-      boolean isUsePrefixes, boolean isUseInfixes) throws Exception {
+      EncoderType encoderType) throws Exception {
-
-    if (isUsePrefixes) {
-      tag2morphParams.add("-pre");
-    }
-
-    if (isUseInfixes) {
-      tag2morphParams.add("-inf");
-    }
+    
+    tag2morphParams.add("--e");
+    tag2morphParams.add(encoderType.name());

INS26 INS26 INS40 UPD40 INS40 UPD40 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 MOV21 MOV21 UPD42 UPD66 INS42 UPD43 INS42 INS42 INS42 UPD42 UPD42 INS32 INS32 UPD42 UPD42 UPD45 UPD42 UPD45 INS32 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 INS42 INS42 UPD42 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL32 DEL14 DEL42 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL39 DEL42 DEL39 DEL42 DEL44 DEL45 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25