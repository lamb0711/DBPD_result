Correct indentation and white spaces

This closes #30

See issue OPENNLP-914

-      && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName)));
+        && !(PERCEPTRON_SEQUENCE_VALUE.equals(algorithmName)));
-    
+
-    for (int oli=0;oli<outcomeLabels.length;oli++) {
+    for (int oli = 0; oli < outcomeLabels.length; oli++) {
-    allOutcomesPattern= new int[numOutcomes];
+    allOutcomesPattern = new int[numOutcomes];
-      params[pi]=new MutableContext(allOutcomesPattern,new double[numOutcomes]);
+      params[pi] = new MutableContext(allOutcomesPattern, new double[numOutcomes]);
-      for (int aoi=0;aoi<numOutcomes;aoi++) {
+      for (int aoi = 0; aoi < numOutcomes; aoi++) {
-    */
+     */
-    int oei=0;
-    int si=0;
+    int oei = 0;
+    int si = 0;
-    for (int oi=0;oi<numOutcomes;oi++) {
+    for (int oi = 0; oi < numOutcomes; oi++) {
-      for (int ei=0;ei<events.length;ei++,oei++) {
+      for (int ei = 0; ei < events.length; ei++, oei++) {
-        for (int oi=0;oi<numOutcomes;oi++) {
+        for (int oi = 0; oi < numOutcomes; oi++) {
-        for (int ei=0;ei<events.length;ei++,oei++) {
+        for (int ei = 0; ei < events.length; ei++, oei++) {
-          for (int ci=0;ci<contextStrings.length;ci++) {
+          for (int ci = 0; ci < contextStrings.length; ci++) {
-              c+=value;
+              c += value;
-              c = -1*value;
+              c = -1 * value;
-              c-=value;
+              c -= value;
-        for (int oi=0;oi<numOutcomes;oi++) {
+        for (int oi = 0; oi < numOutcomes; oi++) {
-                  averageParams[pi].updateParameter(oi,updates[pi][oi][VALUE]*(numSequences*(iteration-updates[pi][oi][ITER])+(si-updates[pi][oi][EVENT])));
+                  averageParams[pi].updateParameter(oi,updates[pi][oi][VALUE] * (numSequences * (iteration - updates[pi][oi][ITER]) + (si - updates[pi][oi][EVENT])));
-    double totIterations = (double) iterations*si;
-    if (useAverage && iteration == iterations-1) {
+    double totIterations = (double) iterations * si;
+    if (useAverage && iteration == iterations - 1) {
-        for (int oi = 0;oi<numOutcomes;oi++) {
+        for (int oi = 0; oi < numOutcomes; oi++) {
-            predParams[oi] +=  updates[pi][oi][VALUE]*(numSequences*(iterations-updates[pi][oi][ITER])-updates[pi][oi][EVENT]);
+            predParams[oi] += updates[pi][oi][VALUE] * (numSequences * (iterations - updates[pi][oi][ITER]) - updates[pi][oi][EVENT]);
-            predParams[oi] /=totIterations;
+            predParams[oi] /= totIterations;
-    display(". ("+numCorrect+"/"+numEvents+") "+((double) numCorrect / numEvents) + "\n");
+    display(". (" + numCorrect + "/" + numEvents + ") " + ((double) numCorrect / numEvents) + "\n");
-    int oei=0;
+    int oei = 0;
-      for (int ei=0;ei<taggerEvents.length;ei++,oei++) {
+      for (int ei = 0; ei < taggerEvents.length; ei++, oei++) {
-    display(". ("+numCorrect+"/"+numEvents+") "+((double) numCorrect / numEvents) + "\n");
+    display(". (" + numCorrect + "/" + numEvents + ") " + ((double) numCorrect / numEvents) + "\n");

