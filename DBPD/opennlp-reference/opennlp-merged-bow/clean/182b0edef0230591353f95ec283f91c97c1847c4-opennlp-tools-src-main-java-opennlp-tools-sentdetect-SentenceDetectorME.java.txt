OPENNLP-225 Restored the abbreviation dictionary support in SentenceDetector

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1149021 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.dictionary.AbbreviationDictionary;
-    cgen = factory.createSentenceContextGenerator(model.getLanguage());
+    cgen = factory.createSentenceContextGenerator(model.getLanguage(), model.getAbbreviationDictionary());
-  
+
+  @Deprecated // should use AbbreviationDictionary (deprecated in 1.5.2)
+  @Deprecated // should use AbbreviationDictionary
+  @Deprecated // should use AbbreviationDictionary
+  
+  public static SentenceModel train(String languageCode,
+      ObjectStream<SentenceSample> samples, boolean useTokenEnd,
+      AbbreviationDictionary abbreviations, TrainingParameters mlParams)
+      throws IOException {
+
+    Map<String, String> manifestInfoEntries = new HashMap<String, String>();
+
+    Factory factory = new Factory();
+
+    // TODO: Fix the EventStream to throw exceptions when training goes wrong
+    EventStream eventStream = new SDEventStream(samples,
+        factory.createSentenceContextGenerator(languageCode, abbreviations),
+        factory.createEndOfSentenceScanner(languageCode));
+
+    AbstractModel sentModel = TrainUtil.train(eventStream,
+        mlParams.getSettings(), manifestInfoEntries);
+
+    return new SentenceModel(languageCode, sentModel, useTokenEnd,
+        abbreviations, manifestInfoEntries);
+  }
+
+  public static SentenceModel train(String languageCode,
+      ObjectStream<SentenceSample> samples, boolean useTokenEnd,
+      AbbreviationDictionary abbreviations, int cutoff, int iterations)
+      throws IOException {
+
+    TrainingParameters mlParams = new TrainingParameters();
+    mlParams.put(TrainingParameters.ALGORITHM_PARAM, "MAXENT");
+    mlParams.put(TrainingParameters.ITERATIONS_PARAM,
+        Integer.toString(iterations));
+    mlParams.put(TrainingParameters.CUTOFF_PARAM, Integer.toString(cutoff));
+
+    return train(languageCode, samples, useTokenEnd, abbreviations, mlParams);
+  }
+
+  public static SentenceModel train(String languageCode,
+      ObjectStream<SentenceSample> samples, boolean useTokenEnd,
+      AbbreviationDictionary abbreviations) throws IOException {
+    return train(languageCode, samples, useTokenEnd, abbreviations, 5, 100);
+  }

INS26 MOV31 INS40 INS31 INS31 INS31 INS78 INS78 INS43 INS44 INS44 INS44 MOV44 INS44 INS44 INS43 INS8 INS78 INS83 INS83 INS43 INS42 INS44 INS44 INS44 MOV44 INS43 INS8 INS83 INS83 MOV43 INS42 MOV44 MOV44 MOV44 INS44 INS44 INS43 INS8 INS44 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 MOV43 MOV8 INS42 INS42 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS42 INS60 INS21 INS21 INS21 INS41 INS42 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS42 INS41 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS41 INS43 INS42 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS43 INS42 INS42 INS43 INS43 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS43 INS43 INS32 INS42 INS42 INS74 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS14 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS40 INS45 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS34 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42