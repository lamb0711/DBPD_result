OPENNLP-922: Refactor equals and hashCode, add missing hashCode

This closes #42

Also adds a checkstyle rule to enforce presence
of both hashCode and equals

+import java.util.Objects;
-      lemmaString.append(tokens.get(ci)).append("\t").append(tags.get(ci)).append("\t").append(lemmas.get(ci)).append("\n");
+      lemmaString.append(tokens.get(ci)).append("\t").append(tags.get(ci))
+           .append("\t").append(lemmas.get(ci)).append("\n");
+  public int hashCode() {
+    return Objects.hash(Arrays.hashCode(getTokens()), Arrays.hashCode(getTags()),
+        Arrays.hashCode(getLemmas()));
+  }
+
+  @Override
-    } else if (obj instanceof LemmaSample) {
+    }
+
+    if (obj instanceof LemmaSample) {
+
-    } else {
-      return false;
+
+    return false;

INS26 INS40 INS31 INS78 INS83 INS39 INS42 INS8 INS42 INS41 MOV25 MOV41 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 DEL8