OPENNLP-641 Completed migration to sequence classification model

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1574820 13f79535-47bb-0310-9956-ffa450edef68

-  /**
-   * The maximum entropy model to use to evaluate contexts.
-   */
-  protected MaxentModel posModel;
-
+  private POSModel modelPackage;
+  
-    posModel = model.getPosModel();
+    
+    modelPackage = model;
+    
+    // TODO: Why is this the beam size?! not cache size?
-    return posModel.getNumOutcomes();
+    
+    // TODO: Lets discuss on the dev list how to do this properly!
+    // Nobody needs the number of tags, if the tags are not available.
+    
+    return model.getOutcomes().length;
+  // TODO: Add method to get tags ?! 
+  
-    double[] probs = posModel.eval(contextGen.getContext(index,
-        words.toArray(new String[words.size()]),
-        tags.toArray(new String[tags.size()]),null));
-
-    String[] orderedTags = new String[probs.length];
-    for (int i = 0; i < probs.length; i++) {
-      int max = 0;
-      for (int ti = 1; ti < probs.length; ti++) {
-        if (probs[ti] > probs[max]) {
-          max = ti;
+    
+    if (modelPackage.getPosModel() != null) {
+      
+      MaxentModel posModel = modelPackage.getPosModel();
+      
+      double[] probs = posModel.eval(contextGen.getContext(index,
+          words.toArray(new String[words.size()]),
+          tags.toArray(new String[tags.size()]),null));
+  
+      String[] orderedTags = new String[probs.length];
+      for (int i = 0; i < probs.length; i++) {
+        int max = 0;
+        for (int ti = 1; ti < probs.length; ti++) {
+          if (probs[ti] > probs[max]) {
+            max = ti;
+          }
+        orderedTags[i] = posModel.getOutcome(max);
+        if (tprobs != null){
+          tprobs[i]=probs[max];
+        }
+        probs[max] = 0;
-      orderedTags[i] = posModel.getOutcome(max);
-      if (tprobs != null){
-        tprobs[i]=probs[max];
-      }
-      probs[max] = 0;
+      return orderedTags;
-    return orderedTags;
-    
-    
+    else {
+      throw new UnsupportedOperationException("This method can only be called if the "
+          + "classifcation model is an event model!");
+    }

UPD83 INS43 INS8 INS42 UPD42 INS25 INS22 INS27 MOV8 INS8 UPD42 INS42 INS32 INS42 INS32 INS33 INS60 INS53 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV43 INS59 INS14 INS42 INS32 INS43 INS27 INS42 INS42 INS42 INS45 INS45 DEL66 DEL65 DEL29 DEL42 DEL42 DEL32 DEL32