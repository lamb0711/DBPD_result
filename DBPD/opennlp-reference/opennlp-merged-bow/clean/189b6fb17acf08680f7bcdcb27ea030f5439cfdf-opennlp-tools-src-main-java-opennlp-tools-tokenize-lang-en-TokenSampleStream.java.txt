OPENNLP-924: Remove all old and leftover main methods, this closes apache/opennlp#45

-    List<Span> spans = new ArrayList<Span>();
+    List<Span> spans = new ArrayList<>();
-      if (sb.length() == 0) {
-
-      }
-      else if (!alphaNumeric.matcher(token).find() || token.startsWith("'") || token.equalsIgnoreCase("n't")) {
-        if ((token.equals("``") || token.equals("--") || token.equals("$") ||
-            token.equals("(")  || token.equals("&")  || token.equals("#") ||
-            (token.equals("\"") && (evenq && ti != tokens.length - 1)))
-            && (!lastToken.equals("(") || !lastToken.equals("{"))) {
-          //System.out.print(" "+token);
-          length++;
+      if (sb.length() != 0) {
+        if (!alphaNumeric.matcher(token).find() || token.startsWith("'") || token.equalsIgnoreCase("n't")) {
+          if ((token.equals("``") || token.equals("--") || token.equals("$") ||
+              token.equals("(")  || token.equals("&")  || token.equals("#") ||
+              (token.equals("\"") && (evenq && ti != tokens.length - 1)))
+              && (!lastToken.equals("(") || !lastToken.equals("{"))) {
+            //System.out.print(" "+token);
+            length++;
+          }
-          //System.out.print(token);
-        }
-      }
-      else {
-        if (lastToken.equals("``") || (lastToken.equals("\"") && !evenq) || lastToken.equals("(") || lastToken.equals("{")
-            || lastToken.equals("$") || lastToken.equals("#")) {
-          //System.out.print(token);
-        }
-        else {
-          //System.out.print(" "+token);
-          length++;
+          if (!lastToken.equals("``") && (!lastToken.equals("\"") || evenq) && !lastToken.equals("(") && !lastToken.equals("{")
+              && !lastToken.equals("$") && !lastToken.equals("#")) {
+                //System.out.print(" "+token);
+                length++;
+              }
-        if (ti == tokens.length - 1) {
-          evenq = true;
-        }
-        else {
-          evenq = !evenq;
-        }
+        evenq = ti == tokens.length - 1 || !evenq;
-
-  public static void main(String[] args) throws IOException {
-    boolean showSpans = false;
-    int ai = 0;
-    while (ai < args.length) {
-      if (args[ai].equals("-spans")) {
-        showSpans = true;
-      }
-      else {
-        System.err.println("Unknown option " + args[ai]);
-        usage();
-      }
-      ai++;
-    }
-    TokenSampleStream tss = new TokenSampleStream(System.in);
-    while (tss.hasNext()) {
-      TokenSample ts = tss.next();
-      String text = ts.getText();
-      System.out.println(text);
-      Span[] tokenSpans = ts.getTokenSpans();
-      int ti = 0;
-      if (showSpans) {
-        for (int i = 0; i < text.length(); i++) {
-          if (ti - 1 >= 0 && i == tokenSpans[ti - 1].getEnd() - 1) {
-            System.out.print("]");
-          }
-          else if (i == tokenSpans[ti].getStart()) {
-            ti++;
-            if (ti - 1 >= 0 && i == tokenSpans[ti - 1].getEnd() - 1) {
-              System.out.print("|");
-            }
-            else {
-              System.out.print("[");
-            }
-          }
-          else {
-            System.out.print("-");
-          }
-        }
-        System.out.println();
-      }
-    }
-  }

UPD74 UPD27 MOV25 MOV21 INS27 UPD27 MOV27 MOV38 INS38 INS38 INS38 INS38 INS38 MOV32 UPD27 MOV32 MOV32 MOV32 MOV32 INS38 INS42 MOV32 DEL42 DEL43 DEL8 DEL42 DEL38 DEL8 DEL9 DEL8 DEL42 DEL7 DEL21 DEL8 DEL25 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL40 DEL42 DEL45 DEL42 DEL42 DEL2 DEL27 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL37 DEL21 DEL8 DEL61 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL34 DEL27 DEL34 DEL27 DEL42 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL32 DEL34 DEL27 DEL27 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL27 DEL42 DEL37 DEL21 DEL42 DEL34 DEL27 DEL34 DEL27 DEL42 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL32 DEL34 DEL27 DEL27 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL8 DEL40 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL40 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL24 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL8 DEL31