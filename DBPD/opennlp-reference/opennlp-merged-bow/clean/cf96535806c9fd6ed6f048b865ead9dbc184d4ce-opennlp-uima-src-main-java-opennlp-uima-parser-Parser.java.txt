OPENNLP-427 Fixed two bugs which caused exceptions on empty CASes. Removed unused code. Fixed formating.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1241839 13f79535-47bb-0310-9956-ffa450edef68

-    private String mSentence;
+    private final String mSentence;
-      sentenceStringBuilder.setLength(sentenceStringBuilder.length() - 1);
+      if (sentenceStringBuilder.length() > 0)
+        sentenceStringBuilder.setLength(sentenceStringBuilder.length() - 1);
+  public static final String CHILDREN_FEATURE_PARAMETER = 
+      "opennlp.uima.ChildrenFeature";
+  
+  
+  private Feature childrenFeature;
+    
+    childrenFeature = AnnotatorUtil.getRequiredFeatureParameter(context,
+        mParseType, CHILDREN_FEATURE_PARAMETER, CAS.TYPE_NAME_FS_ARRAY);
+    String sentence = sentenceAnnotation.getCoveredText();
+
-  
-    StringBuilder sentenceStringBuilder = new StringBuilder();
-    
-    while (containingTokens.hasNext()) {
-      AnnotationFS token = (AnnotationFS) containingTokens.next();
-
-      sentenceStringBuilder.append(token.getCoveredText());
-
-      // attention the offsets moves inside the sentence...
-      sentenceStringBuilder.append(' ');
-    }
-     
-    String sentence = sentenceStringBuilder.toString();
-    sentence = sentenceAnnotation.getCoveredText();
-
-    containingTokens = cas.createFilteredIterator(
-        allTokens.iterator(), containingConstraint);
-    
-   Parse parse = mParser.parse(converter.getParseForTagger());
+   
+    Parse unparsedTree = converter.getParseForTagger();
+   
+    if (unparsedTree.getChildCount() > 0) {
+      
+      Parse parse = mParser.parse(unparsedTree);
-   parse = converter.transformParseFromTagger(parse);
+      parse = converter.transformParseFromTagger(parse);
-   if (mLogger.isLoggable(Level.INFO)) {
-     StringBuffer parseString = new StringBuffer();
-     parse.show(parseString);
+      if (mLogger.isLoggable(Level.INFO)) {
+        StringBuffer parseString = new StringBuffer();
+        parse.show(parseString);
-     mLogger.log(Level.INFO, parseString.toString());
-   }
+        mLogger.log(Level.INFO, parseString.toString());
+      }
-   createAnnotation(cas, sentenceAnnotation.getBegin(), parse);
+      createAnnotation(cas, sentenceAnnotation.getBegin(), parse);
+    }

INS23 INS23 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 MOV60 INS83 INS42 INS42 INS45 INS42 INS42 INS21 INS25 INS25 INS7 MOV43 INS27 INS8 INS27 MOV21 INS42 INS32 UPD42 MOV32 UPD42 MOV32 INS32 INS34 MOV60 MOV21 MOV25 MOV21 INS32 INS34 INS42 INS42 INS42 INS42 INS42 INS40 UPD42 MOV42 UPD42 MOV42 UPD43 INS42 INS42 UPD42 UPD42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL13 DEL32 DEL21 DEL8 DEL61 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL32 DEL11