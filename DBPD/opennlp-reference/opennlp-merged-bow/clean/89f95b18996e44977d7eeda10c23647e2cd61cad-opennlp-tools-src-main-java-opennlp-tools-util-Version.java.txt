OPENNLP-189 Now maven version is used instead of hard coded version

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1129130 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Properties;
+
+  private static final String DEV_VERSION_STRING = "0.0.0-SNAPSHOT";
+  
+  public static final Version DEV_VERSION = Version.parse(DEV_VERSION_STRING);
+  
+  private static final String SNAPSHOT_MARKER = "-SNAPSHOT";
+  
+  private final boolean snapshot;
+  
+   * @param snapshot
-  public Version(int major, int minor, int revision) {
+  public Version(int major, int minor, int revision, boolean snapshot) {
+    this.snapshot = snapshot;
+   * Initializes the current instance with the provided
+   * versions. The version will not be a snapshot version.
+   *
+   * @param major
+   * @param minor
+   * @param revision
+   */
+  public Version(int major, int minor, int revision) {
+   this(major, minor, revision, false); 
+  }
+
+  
+  /**
+  public boolean isSnapshot() {
+    return snapshot;
+  }
+  
-      "." + Integer.toString(getRevision());
+      "." + Integer.toString(getRevision()) + (isSnapshot() ? SNAPSHOT_MARKER : "");
-          && getRevision() == version.getRevision();
+          && getRevision() == version.getRevision()
+          && isSnapshot() == version.isSnapshot();
+    int indexFirstDash = version.indexOf('-');
+    
+    int versionEnd;
+    if (indexFirstDash == -1) {
+      versionEnd = version.length();
+    }
+    else {
+      versionEnd = indexFirstDash;
+    }
+    
+    boolean snapshot = version.endsWith(SNAPSHOT_MARKER);
+    
-        Integer.parseInt(version.substring(indexSecondDot + 1)));
+        Integer.parseInt(version.substring(indexSecondDot + 1, versionEnd)), snapshot);
-    return new Version(1, 5, 2);
+    
+    Properties manifest = new Properties();
+    
+    // Try to read the version from the version file if it is available,
+    // otherwise set the version to the development version
+    
+    InputStream versionIn = Version.class.getResourceAsStream("opennlp.version");
+    
+    if (versionIn != null) {
+      try {
+        manifest.load(versionIn);
+      } catch (IOException e) {
+        // ignore error
+      }
+      finally {
+        try {
+          versionIn.close();
+        } catch (IOException e) {
+          // ignore error
+        }
+      }
+    }
+    
+    String versionString = 
+      manifest.getProperty("OpenNLP-Version", DEV_VERSION_STRING);
+    
+    if (versionString.equals("${pom.version}"))
+      versionString = DEV_VERSION_STRING;
+    
+    return Version.parse(versionString);

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS59 INS44 INS29 INS83 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS65 INS39 INS42 INS21 INS65 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS39 INS42 INS17 INS41 INS60 INS60 INS25 INS60 INS60 INS60 INS25 INS60 INS25 INS41 INS42 INS42 INS42 INS42 INS7 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS39 INS59 INS39 INS59 INS27 INS8 INS8 INS39 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS21 INS32 INS22 INS42 INS36 INS42 INS32 INS42 INS42 INS38 INS21 INS21 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS32 INS42 INS42 INS45 INS7 INS42 INS42 INS42 INS52 INS42 INS16 INS42 INS42 INS13 INS34 INS7 INS7 INS42 INS42 INS42 INS43 INS57 INS42 INS45 INS8 INS12 INS8 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS45 INS27 INS42 INS32 INS42 INS42 INS42 INS42 MOV43 INS21 INS44 INS8 INS54 INS42 MOV27 INS27 INS42 INS42 INS32 INS43 INS42 INS8 INS12 INS32 INS32 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 DEL34 DEL34 DEL34 DEL14 DEL41