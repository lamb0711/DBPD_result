OPENNLP-175 Removed duplicate code

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1124880 13f79535-47bb-0310-9956-ffa450edef68

-  public static SentenceModel train(String languageCode, ObjectStream<SentenceSample> samples,
-      boolean useTokenEnd, Dictionary abbreviations) throws IOException {
-    return train(languageCode, samples, useTokenEnd, abbreviations,5,100);
-  }
-  
-  public static SentenceModel train(String languageCode, ObjectStream<SentenceSample> samples,
-      boolean useTokenEnd, Dictionary abbreviations, int cutoff, int iterations) throws IOException {
-
-    Map<String, String> manifestInfoEntries = new HashMap<String, String>();
-    ModelUtil.addCutoffAndIterations(manifestInfoEntries, cutoff, iterations);
-    
-    Factory factory = new Factory();
-
-    // TODO: Fix the EventStream to throw exceptions when training goes wrong
-    EventStream eventStream = new SDEventStream(samples,
-        factory.createSentenceContextGenerator(languageCode),
-        factory.createEndOfSentenceScanner(languageCode));
-    
-    GISModel sentModel = GIS.trainModel(eventStream, iterations, cutoff);
-
-    return new SentenceModel(languageCode, sentModel,
-        useTokenEnd, abbreviations, manifestInfoEntries);
-  }
-    HashSumEventStream hses = new HashSumEventStream(eventStream);
-    AbstractModel sentModel = TrainUtil.train(hses, mlParams.getSettings(), manifestInfoEntries);
-    
-    manifestInfoEntries.put(BaseModel.TRAINING_EVENTHASH_PROPERTY, 
-        hses.calculateHashSum().toString(16));
+    AbstractModel sentModel = TrainUtil.train(eventStream, mlParams.getSettings(), manifestInfoEntries);
+  
+  public static SentenceModel train(String languageCode, ObjectStream<SentenceSample> samples,
+      boolean useTokenEnd, Dictionary abbreviations, int cutoff, int iterations) throws IOException {
+
+    TrainingParameters mlParams = new TrainingParameters();
+    mlParams.put(TrainingParameters.ALGORITHM_PARAM, "MAXENT");
+    mlParams.put(TrainingParameters.ITERATIONS_PARAM, Integer.toString(iterations));
+    mlParams.put(TrainingParameters.CUTOFF_PARAM, Integer.toString(cutoff));
+    
+    return train(languageCode, samples, useTokenEnd, abbreviations, mlParams);
+ }
+  
+  public static SentenceModel train(String languageCode, ObjectStream<SentenceSample> samples,
+      boolean useTokenEnd, Dictionary abbreviations) throws IOException {
+    return train(languageCode, samples, useTokenEnd, abbreviations,5,100);
+  }

MOV31 MOV31 INS21 INS21 INS43 INS32 INS32 INS32 UPD42 MOV42 UPD42 UPD42 UPD42 INS40 INS45 INS42 UPD42 MOV42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL34 DEL32 DEL32 DEL21 DEL42 DEL43 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14