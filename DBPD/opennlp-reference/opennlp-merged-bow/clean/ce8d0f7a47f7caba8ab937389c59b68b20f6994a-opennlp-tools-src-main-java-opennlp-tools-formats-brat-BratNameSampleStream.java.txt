OPENNLP-1194: Adds type name filter to BratDocumentParser

+import java.util.Set;
+  /**
+   * Creates a new {@link BratNameSampleStream}.
+   * @param sentDetector a {@link SentenceDetector} instance
+   * @param tokenizer a {@link Tokenizer} instance
+   * @param samples a {@link BratDocument} {@link ObjectStream}
+   */
-      Tokenizer tokenizer, ObjectStream<BratDocument> samples) {
+                              Tokenizer tokenizer, ObjectStream<BratDocument> samples) {
-    this.parser = new BratDocumentParser(sentDetector, tokenizer);
+    this.parser = new BratDocumentParser(sentDetector, tokenizer, null);
+  /**
+   * Creates a new {@link BratNameSampleStream}.
+   * @param sentModel a {@link SentenceModel} model
+   * @param tokenModel a {@link TokenizerModel} model
+   * @param samples a {@link BratDocument} {@link ObjectStream}
+   */
-      ObjectStream<BratDocument> samples) {
+                              ObjectStream<BratDocument> samples) {
-    this.parser = new BratDocumentParser(new SentenceDetectorME(sentModel), new TokenizerME(tokenModel)); 
+    this.parser = new BratDocumentParser(new SentenceDetectorME(sentModel),
+        new TokenizerME(tokenModel), null);
+  }
+
+  /**
+   * Creates a new {@link BratNameSampleStream}.
+   * @param sentDetector a {@link SentenceDetector} instance
+   * @param tokenizer a {@link Tokenizer} instance
+   * @param samples a {@link BratDocument} {@link ObjectStream}
+   * @param nameTypes the name types to use or null if all name types
+   */
+  public BratNameSampleStream(SentenceDetector sentDetector,
+      Tokenizer tokenizer, ObjectStream<BratDocument> samples, Set<String> nameTypes) {
+    super(samples);
+
+    this.parser = new BratDocumentParser(sentDetector, tokenizer, nameTypes);
+  }
+
+  /**
+   * Creates a new {@link BratNameSampleStream}.
+   * @param sentModel a {@link SentenceModel} model
+   * @param tokenModel a {@link TokenizerModel} model
+   * @param samples a {@link BratDocument} {@link ObjectStream}
+   * @param nameTypes the name types to use or null if all name types
+   */
+  public BratNameSampleStream(SentenceModel sentModel, TokenizerModel tokenModel,
+      ObjectStream<BratDocument> samples, Set<String> nameTypes) {
+    super(samples);
+
+    // TODO: We can pass in custom validators here ...
+    this.parser = new BratDocumentParser(new SentenceDetectorME(sentModel),
+        new TokenizerME(tokenModel), nameTypes);

INS26 INS40 INS31 INS31 INS29 MOV44 INS29 MOV44 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 MOV46 INS65 INS65 INS65 INS65 MOV46 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS46 INS21 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS46 INS21 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS65 INS42 INS66 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS7 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS65 INS42 INS66 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS7 INS42 INS42 INS42 INS42 INS42 MOV22 INS42 INS42 INS42 INS42 INS42 MOV22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS14 MOV43 INS33 MOV43 INS33 INS52 INS42 INS43 INS42 INS42 INS42 INS52 INS42 INS43 INS14 INS14 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS42