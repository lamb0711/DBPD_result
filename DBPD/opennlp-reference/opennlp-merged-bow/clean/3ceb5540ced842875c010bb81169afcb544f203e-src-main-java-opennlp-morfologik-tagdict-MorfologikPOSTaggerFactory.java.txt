OPENNLP-622 Fixed PosTaggerFactory and restored test.

+import java.nio.file.Path;
+import morfologik.stemming.DictionaryMetadata;
-
-  /**
-   * Creates a new {@link POSTaggerFactory} that uses the a Morfologik based {@link TagDictionary}.
-   * 
-   * @param ngramDictionary a ngramDictionary 
-   * @param morfologikDictionary a Morfologik dictionary
-   * @param morfologikDictionaryMetadata the dictionary metadata
-   * @throws IOException invalid Morfologik dictionary
-   */
-  public MorfologikPOSTaggerFactory(Dictionary ngramDictionary,
-      byte[] morfologikDictionary, byte[] morfologikDictionaryMetadata) throws IOException {
-    super(ngramDictionary, null);
-    this.dictData = morfologikDictionary;
-    this.dictInfo = morfologikDictionaryMetadata;
+  
+  public TagDictionary createTagDictionary(File dictionary)
+      throws InvalidFormatException, FileNotFoundException, IOException {
-    this.dict = createMorfologikDictionary(dictData, dictInfo);
+    if(!dictionary.canRead()) {
+      throw new FileNotFoundException("Could not read dictionary: " + dictionary.getAbsolutePath());
+    }
+    
+    Path dictionaryMeta = DictionaryMetadata.getExpectedMetadataLocation(dictionary.toPath());
+    
+    if(dictionaryMeta == null || !dictionaryMeta.toFile().canRead()) {
+      throw new FileNotFoundException("Could not read dictionary metadata: " + dictionaryMeta.getFileName());
+    }
+    
+    this.dictData = Files.readAllBytes(dictionary.toPath());
+    this.dictInfo = Files.readAllBytes(dictionaryMeta);
+    
+    return createMorfologikDictionary(dictData, dictInfo);
+    
+  
-    throw new UnsupportedOperationException(
-        "Morfologik POS Tagger factory does not support this operation");
+    this.dict = dictionary;
-  public TagDictionary createTagDictionary(File dictionary)
-      throws InvalidFormatException, FileNotFoundException, IOException {
-    throw new UnsupportedOperationException(
-        "Morfologik POS Tagger factory does not support this operation");
-  }
-
-  @Override

INS26 INS26 MOV31 INS40 INS40 INS31 INS83 MOV43 INS42 MOV44 MOV43 MOV43 MOV43 INS8 MOV78 INS39 UPD42 MOV44 INS25 INS60 INS25 MOV21 MOV21 INS41 MOV21 INS38 INS8 INS43 INS59 INS27 INS8 MOV32 INS32 INS53 UPD42 MOV42 INS42 INS32 INS27 INS38 MOV53 INS32 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS32 INS42 UPD43 INS27 INS42 INS42 INS42 INS45 INS32 INS42 INS42 UPD42 INS45 INS32 INS42 INS42 INS42 INS42 DEL45 DEL42 DEL42 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL44 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL33 DEL46 DEL8 DEL31 DEL83 DEL39 DEL42 DEL8 DEL31 DEL42 DEL78 DEL42 DEL43 DEL42 DEL43 DEL45 DEL14 DEL53