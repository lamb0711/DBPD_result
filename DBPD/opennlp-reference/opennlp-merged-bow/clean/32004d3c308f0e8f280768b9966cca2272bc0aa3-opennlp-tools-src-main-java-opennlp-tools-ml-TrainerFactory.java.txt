OPENNLP-635 pluggable trainers can now be correctly classified as event or sequence

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1559228 13f79535-47bb-0310-9956-ffa450edef68

-  public static boolean isSupportEvent(Map<String, String> trainParams) {
-    if (trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM) != null) {
-      if(EventTrainer.EVENT_VALUE.equals(trainParams
-            .get(AbstractTrainer.TRAINER_TYPE_PARAM))) {
-        return true;
+  private static String getPluggableTrainerType(String className) {
+    try {
+      Class<?> trainerClass = Class.forName(className);
+      if(trainerClass != null) {
+        
+        if (EventTrainer.class.isAssignableFrom(trainerClass)) {
+          return EventTrainer.EVENT_VALUE;
+        }
+        else if (SequenceTrainer.class.isAssignableFrom(trainerClass)) {
+          return SequenceTrainer.SEQUENCE_VALUE;
+        }
-      return false;
-    } else {
-      return true; // default to event train
+    } catch (ClassNotFoundException e) {
+    
+    return "UNKOWN";
+  }
+  
+  public static boolean isSupportEvent(Map<String, String> trainParams) {
+    
+    String trainerType = trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM);
+    
+    if (trainerType == null) {
+      trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));
+    }
+    
+    if (trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM) != null) {
+      return EventTrainer.EVENT_VALUE.equals(trainParams
+          .get(AbstractTrainer.TRAINER_TYPE_PARAM));
+    } 
+    
+    // default
+    return true;
-    if (SequenceTrainer.SEQUENCE_VALUE.equals(trainParams
-        .get(AbstractTrainer.TRAINER_TYPE_PARAM))) {
+    
+    String trainerType = trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM);
+    
+    if (trainerType == null) {
+      trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));
+    }
+    
+    if (SequenceTrainer.SEQUENCE_VALUE.equals(trainerType)) {
+    

INS31 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS54 INS41 INS60 INS25 MOV25 MOV41 INS60 INS25 INS42 INS8 INS12 INS45 INS43 INS59 INS27 MOV8 MOV27 INS43 INS59 INS27 INS8 INS32 MOV8 INS60 INS25 INS44 INS8 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS40 INS42 INS42 INS74 INS59 INS27 INS8 INS43 INS42 INS42 INS42 INS40 INS7 MOV32 INS42 INS42 INS40 INS7 INS43 INS76 INS42 INS32 INS42 INS33 INS25 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS8 INS25 INS42 INS32 UPD42 MOV42 MOV32 INS57 INS42 INS42 INS41 INS32 INS8 INS42 INS42 INS40 UPD40 INS43 INS40 INS57 INS42 INS42 INS41 INS42 INS43 INS40 INS42 DEL9 DEL41 DEL9 DEL8 DEL25 DEL40 DEL32