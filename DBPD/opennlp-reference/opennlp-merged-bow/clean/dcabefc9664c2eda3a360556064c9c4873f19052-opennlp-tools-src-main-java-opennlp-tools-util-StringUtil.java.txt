OPENNLP-760 adding learnable lemmatizer and model

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1731148 13f79535-47bb-0310-9956-ffa450edef68

+ * Read predicted SES by the lemmatizer model and apply the
+ * permutations to obtain the lemma from the wordForm.
+ * @param wordForm the wordForm
+ * @param permutations the permutations predicted by the lemmatizer model
+ * @return the lemma
+ */
+public static String decodeShortestEditScript(String wordForm, String permutations) {
+  
+  StringBuffer lemma = new StringBuffer(wordForm).reverse();
+  
+  int permIndex = 0;
+  while(true) {
+      if (permutations.length() <= permIndex) {
+        break;
+      }
+      //read first letter of permutation string
+      char nextOperation = permutations.charAt(permIndex);
+      //System.err.println("-> NextOP: " + nextOperation);
+      //go to the next permutation letter
+      permIndex++;
+      if (nextOperation == 'R') {
+          String charAtPerm = Character.toString(permutations.charAt(permIndex));
+          int charIndex = Integer.parseInt(charAtPerm);
+          // go to the next character in the permutation buffer
+          // which is the replacement character
+          permIndex++;
+          char replace = permutations.charAt(permIndex);
+          //go to the next char in the permutation buffer
+          // which is the candidate character
+          permIndex++;
+          char with = permutations.charAt(permIndex);
+          
+          if (lemma.length() <= charIndex) {
+            return wordForm; 
+          }
+          if (lemma.charAt(charIndex) == replace) {
+            lemma.setCharAt(charIndex, with);
+          }
+          //System.err.println("-> ROP: " + lemma.toString());
+          //go to next permutation
+          permIndex++;
+          
+      } else if (nextOperation == 'I') {
+          String charAtPerm = Character.toString(permutations.charAt(permIndex));
+          int charIndex = Integer.parseInt(charAtPerm);
+          permIndex++;
+          //character to be inserted
+          char in = permutations.charAt(permIndex);
+      
+          if (lemma.length() < charIndex) {
+            return wordForm; 
+          }
+          lemma.insert(charIndex, in);
+          //System.err.println("-> IOP " + lemma.toString());
+          //go to next permutation
+          permIndex++;
+      } else if (nextOperation == 'D') {
+          String charAtPerm = Character.toString(permutations.charAt(permIndex));
+          int charIndex = Integer.parseInt(charAtPerm);
+          if (lemma.length() <= charIndex) {
+            return wordForm;
+          }
+          lemma.deleteCharAt(charIndex);
+          permIndex++;
+          // go to next permutation
+          permIndex++;
+      }
+  }
+  return lemma.reverse().toString();
+}
+
+/**

INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS61 INS41 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS43 INS59 INS39 INS59 INS9 INS8 INS32 INS42 INS42 INS32 INS42 INS34 INS25 INS60 INS21 INS25 INS32 INS42 INS14 INS42 INS27 INS8 INS39 INS59 INS37 INS27 INS8 INS25 INS42 INS42 INS43 INS42 INS32 INS42 INS10 INS42 INS32 INS42 INS42 INS13 INS60 INS60 INS21 INS60 INS21 INS60 INS25 INS25 INS21 INS27 INS8 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS37 INS39 INS59 INS37 INS39 INS59 INS27 INS8 INS27 INS8 INS37 INS42 INS13 INS60 INS60 INS21 INS60 INS25 INS21 INS21 INS27 INS8 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS41 INS32 INS42 INS21 INS42 INS43 INS59 INS39 INS59 INS37 INS39 INS59 INS27 INS8 INS32 INS37 INS42 INS13 INS60 INS60 INS25 INS21 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS27 INS8 INS32 INS37 INS37 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42