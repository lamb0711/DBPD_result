Correct indentation and white spaces

This closes #30

See issue OPENNLP-914

-  private boolean containsPunct(Collection<Parse> puncts, String punct){
-    if (puncts != null){
-      for (Iterator<Parse> pi=puncts.iterator();pi.hasNext();) {
+  private boolean containsPunct(Collection<Parse> puncts, String punct) {
+    if (puncts != null) {
+      for (Iterator<Parse> pi = puncts.iterator(); pi.hasNext();) {
-    if (rfi+1 < rightFrontier.size()) {
-      fp = rightFrontier.get(rfi+1);
+    if (rfi + 1 < rightFrontier.size()) {
+      fp = rightFrontier.get(rfi + 1);
-    if (index+1 < constituents.length) {
-      p1 = constituents[index+1];
+    if (index + 1 < constituents.length) {
+      p1 = constituents[index + 1];
-    String consfp = cons(fp,-3);
-    String consf = cons(fn,-2);
-    String consp_1 = cons(p_1,-1);
-    String consp0 = cons(p0,0);
-    String consp1 = cons(p1,1);
+    String consfp = cons(fp, -3);
+    String consf = cons(fn, -2);
+    String consp_1 = cons(p_1, -1);
+    String consp0 = cons(p0, 0);
+    String consp1 = cons(p1, 1);
-    String consbofp = consbo(fp,-3);
-    String consbof = consbo(fn,-2);
-    String consbop_1 = consbo(p_1,-1);
-    String consbop0 = consbo(p0,0);
-    String consbop1 = consbo(p1,1);
+    String consbofp = consbo(fp, -3);
+    String consbof = consbo(fn, -2);
+    String consbop_1 = consbo(p_1, -1);
+    String consbop0 = consbo(p0, 0);
+    String consbop1 = consbo(p1, 1);
-    features.add("pn="+prod);
-    features.add("pd="+prod+","+p0.getType());
-    features.add("ps="+fn.getType()+"->"+fn.getType()+","+p0.getType());
+    features.add("pn=" + prod);
+    features.add("pd=" + prod + "," + p0.getType());
+    features.add("ps=" + fn.getType() + "->" + fn.getType() + "," + p0.getType());
-      for (Iterator<Parse> pi=punct_1s.iterator();pi.hasNext();) {
+      for (Iterator<Parse> pi = punct_1s.iterator(); pi.hasNext();) {
-    int headDistance = (p0.getHeadIndex()-fn.getHeadIndex());
-    features.add("hd="+headDistance);
-    features.add("nd="+ rfi);
+    int headDistance = (p0.getHeadIndex() - fn.getHeadIndex());
+    features.add("hd=" + headDistance);
+    features.add("nd=" + rfi);
-    features.add("nd="+p0.getType()+"."+ rfi);
-    features.add("hd="+p0.getType()+"."+headDistance);
+    features.add("nd=" + p0.getType() + "." + rfi);
+    features.add("hd=" + p0.getType() + "." + headDistance);

