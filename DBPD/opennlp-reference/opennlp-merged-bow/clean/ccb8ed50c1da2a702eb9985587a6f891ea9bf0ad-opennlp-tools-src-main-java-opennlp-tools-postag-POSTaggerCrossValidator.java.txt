OPENNLP-429: Now we can pass the POSTaggerFactory name from CLI

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1243937 13f79535-47bb-0310-9956-ffa450edef68

+
+  /* this will be used to load the factory after the ngram dictionary was created */
+  private String factoryClassName;
+  /* user can also send a ready to use factory */
+  private POSTaggerFactory factory;
-   * @deprecated use {@link #POSTaggerCrossValidator(String, TrainingParameters, POSDictionary, Dictionary, POSTaggerEvaluationMonitor...)}
-   * instead and pass in a TrainingParameters object.
+   * Creates a {@link POSTaggerCrossValidator} that builds a ngram dictionary
+   * dynamically. It instantiates a sub-class of {@link POSTaggerFactory} using
+   * the tag and the ngram dictionaries.
-  @Deprecated
-  public POSTaggerCrossValidator(String languageCode, ModelType modelType, POSDictionary tagDictionary,
-      Dictionary ngramDictionary, int cutoff, int iterations) {
-    this.languageCode = languageCode;
-    this.params = ModelUtil.createTrainingParameters(iterations, cutoff);
-    this.params.put(TrainingParameters.ALGORITHM_PARAM, modelType.toString());
-    this.tagDictionary = tagDictionary;
-    this.ngramDictionary = ngramDictionary;
-  }
-  
-  public POSTaggerCrossValidator(String languageCode, ModelType modelType, POSDictionary tagDictionary,
-      Dictionary ngramDictionary) {
-    this(languageCode, modelType, tagDictionary, ngramDictionary, 5, 100);
-  }
-
+      Integer ngramCutoff, String factoryClass,
+    this.ngramCutoff = ngramCutoff;
+    this.listeners = listeners;
+    this.factoryClassName = factoryClass;
+    this.ngramDictionary = null;
+  }
+
+  /**
+   * Creates a {@link POSTaggerCrossValidator} using the given
+   * {@link POSTaggerFactory}.
+   */
+  public POSTaggerCrossValidator(String languageCode,
+      TrainingParameters trainParam, POSTaggerFactory factory,
+      POSTaggerEvaluationMonitor... listeners) {
+    this.languageCode = languageCode;
+    this.params = trainParam;
+    this.listeners = listeners;
+    this.factory = factory;
+    this.tagDictionary = null;
-    this.listeners = listeners;
+  /**
+   * @deprecated use
+   *             {@link #POSTaggerCrossValidator(String, TrainingParameters, POSTaggerFactory, POSTaggerEvaluationMonitor...)}
+   *             instead and pass in a {@link TrainingParameters} object and a
+   *             {@link POSTaggerFactory}.
+   */
+  public POSTaggerCrossValidator(String languageCode, ModelType modelType, POSDictionary tagDictionary,
+      Dictionary ngramDictionary, int cutoff, int iterations) {
+    this(languageCode, create(modelType, cutoff, iterations), create(ngramDictionary, tagDictionary));
+  }
+  
+  /**
+   * @deprecated use
+   *             {@link #POSTaggerCrossValidator(String, TrainingParameters, POSTaggerFactory, POSTaggerEvaluationMonitor...)}
+   *             instead and pass in a {@link TrainingParameters} object and a
+   *             {@link POSTaggerFactory}.
+   */
+  public POSTaggerCrossValidator(String languageCode, ModelType modelType, POSDictionary tagDictionary,
+      Dictionary ngramDictionary) {
+    this(languageCode, create(modelType, 5, 100), create(ngramDictionary, tagDictionary));
+  }
+
+  /**
+   * @deprecated use
+   *             {@link #POSTaggerCrossValidator(String, TrainingParameters, POSTaggerFactory, POSTaggerEvaluationMonitor...)}
+   *             instead and pass in a {@link POSTaggerFactory}.
+   */
+  public POSTaggerCrossValidator(String languageCode,
+      TrainingParameters trainParam, POSDictionary tagDictionary,
+      POSTaggerEvaluationMonitor... listeners) {
+    this(languageCode, trainParam, create(null, tagDictionary), listeners);
+  }
+  
+  /**
+   * @deprecated use
+   *             {@link #POSTaggerCrossValidator(String, TrainingParameters, POSDictionary, Integer, String, POSTaggerEvaluationMonitor...)}
+   *             instead and pass in the name of {@link POSTaggerFactory}
+   *             sub-class.
+   */
-    this.languageCode = languageCode;
-    this.params = trainParam;
-    this.tagDictionary = tagDictionary;
-    this.ngramDictionary = null;
-    this.ngramCutoff = ngramCutoff;
-    this.listeners = listeners;
+    this(languageCode, trainParam, tagDictionary, ngramCutoff,
+        POSTaggerFactory.class.getCanonicalName(), listeners);
+  /**
+   * @deprecated use
+   *             {@link #POSTaggerCrossValidator(String, TrainingParameters, POSTaggerFactory, POSTaggerEvaluationMonitor...)}
+   *             instead and pass in a {@link POSTaggerFactory}.
+   */
-    this.languageCode = languageCode;
-    this.params = trainParam;
-    this.tagDictionary = tagDictionary;
-    this.ngramDictionary = ngramDictionary;
-    this.ngramCutoff = null;
-    this.listeners = listeners;
+    this(languageCode, trainParam, create(ngramDictionary, tagDictionary), listeners);
-
-      POSModel model = POSTaggerME.train(languageCode, trainingSampleStream, params,
-            this.tagDictionary, ngramDict);
+      
+      if (this.factory == null) {
+        this.factory = POSTaggerFactory.create(this.factoryClassName,
+            ngramDict, tagDictionary);
+      }
+      
+      POSModel model = POSTaggerME.train(languageCode, trainingSampleStream,
+          params, this.factory);
+  
+  private static TrainingParameters create(ModelType type, int cutoff, int iterations) {
+    TrainingParameters params = ModelUtil.createTrainingParameters(iterations, cutoff);
+    params.put(TrainingParameters.ALGORITHM_PARAM, type.toString());
+    return params;
+  }
+  
+  private static POSTaggerFactory create(Dictionary ngram, POSDictionary pos) {
+    return new POSTaggerFactory(ngram, pos);
+  }

MOV31 MOV31 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS29 INS44 MOV21 INS29 INS44 MOV21 INS29 MOV44 MOV44 MOV44 INS44 INS44 INS8 INS29 MOV44 MOV44 INS29 MOV83 MOV42 INS44 INS44 MOV44 MOV44 INS8 MOV29 INS83 INS42 MOV44 MOV44 MOV44 INS44 INS44 INS8 INS29 INS83 INS42 INS44 INS44 INS44 MOV44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 MOV44 MOV44 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS42 INS42 INS42 INS65 INS43 INS42 INS21 INS65 INS43 INS42 INS21 INS65 INS39 INS42 INS39 INS42 INS17 INS65 INS65 INS43 INS42 INS43 INS42 INS17 INS43 INS42 INS43 INS42 INS17 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS17 INS42 INS43 INS42 INS60 MOV21 INS41 INS42 MOV43 INS42 INS43 INS42 INS41 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS42 INS7 INS66 INS65 INS66 INS65 INS66 INS42 INS7 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS32 INS32 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS32 INS32 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS32 INS42 UPD66 UPD66 INS65 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS14 INS42 INS42 INS22 INS42 INS42 INS42 UPD42 INS22 INS33 INS68 INS42 INS42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS68 INS42 INS42 INS42 INS42 INS34 INS34 INS42 INS42 INS42 INS68 INS42 INS42 INS33 INS42 INS42 INS57 INS42 INS68 INS42 INS42 INS42 INS42 INS25 INS42 INS42 MOV32 INS42 INS42 INS40 INS32 INS43 INS42 INS42 INS52 INS42 UPD42 INS52 INS42 INS42 INS69 INS69 INS69 INS69 INS42 INS69 INS69 INS69 INS69 INS42 INS69 INS69 INS69 INS69 INS69 INS43 INS42 INS69 INS69 INS69 INS69 INS27 INS8 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS43 INS43 INS43 INS43 INS22 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS7 INS22 INS32 UPD42 INS52 INS42 INS42 INS42 INS22 INS42 INS42 INS52 INS42 DEL42 DEL78 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL32 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL34 DEL34 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL52 DEL42 DEL22 DEL33 DEL7