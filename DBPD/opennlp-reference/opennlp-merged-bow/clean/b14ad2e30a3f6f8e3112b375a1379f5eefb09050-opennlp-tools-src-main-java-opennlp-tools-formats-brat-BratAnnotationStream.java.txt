OPENNLP-961: Add support to parse event annotations in brat files

+  static class EventAnnotationParser extends BratAnnotationParser {
+
+    @Override
+    BratAnnotation parse(Span tokens[], CharSequence line) throws IOException {
+
+      String[] typeParts = tokens[TYPE_OFFSET].getCoveredText(line).toString().split(":");
+
+      if (typeParts.length != 2) {
+        throw new InvalidFormatException(String.format(
+            "Failed to parse [%s], type part must be in the format type:trigger", line));
+      }
+
+      String type = typeParts[0];
+      String eventTrigger = typeParts[1];
+
+      Map<String, String> arguments = new HashMap<>();
+
+      for (int i = TYPE_OFFSET + 1; i < tokens.length; i++) {
+        String[] parts = tokens[i].getCoveredText(line).toString().split(":");
+
+        if (parts.length != 2) {
+          throw new InvalidFormatException(String.format(
+              "Failed to parse [%s], argument parts must be in form argument:value", line));
+        }
+
+        arguments.put(parts[0], parts[1]);
+      }
+
+      return new EventAnnotation(tokens[ID_OFFSET].getCoveredText(line).toString(),type, eventTrigger,
+          arguments);
+    }
+  }
+
-  private final Map<String, BratAnnotationParser> parsers = new HashMap<>();
-
-    parsers.put(AnnotationConfiguration.SPAN_TYPE, new SpanAnnotationParser());
-    parsers.put(AnnotationConfiguration.ENTITY_TYPE, new SpanAnnotationParser());
-    parsers.put(AnnotationConfiguration.RELATION_TYPE, new RelationAnnotationParser());
-    parsers.put(AnnotationConfiguration.ATTRIBUTE_TYPE, new AttributeAnnotationParser());
-        String typeClass = config.getTypeClass(tokens[BratAnnotationParser.TYPE_OFFSET]
-            .getCoveredText(line).toString());
+        String annId = tokens[BratAnnotationParser.ID_OFFSET].getCoveredText(line).toString();
-        BratAnnotationParser parser = parsers.get(typeClass);
+        if (annId.length() == 0) {
+          throw new InvalidFormatException("annotation id is empty");
+        }
+
+        // The first leter of the annotation id marks the annotation type
+
+        final BratAnnotationParser parser;
+        switch (annId.charAt(0)) {
+          case 'T':
+            parser = new SpanAnnotationParser();
+            break;
+          case 'R':
+            parser = new RelationAnnotationParser();
+            break;
+          case 'A':
+            parser = new AttributeAnnotationParser();
+            break;
+          case 'E':
+            parser = new EventAnnotationParser();
+            break;
+
+          default:
+            // Skip it, do that for everything unsupported (e.g. "*" id)
+            return read();
+        }
-          throw new IOException("Failed to parse ann document with id " + id + ".ann" +
+          throw new IOException("Failed to parse ann document with id " + id + ".ann and" +

INS55 INS83 INS42 MOV43 INS31 INS78 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS85 INS43 INS42 INS42 INS60 INS25 INS60 INS60 INS60 INS24 INS41 INS42 INS42 INS5 INS59 INS27 INS8 INS43 INS59 INS43 INS59 UPD74 MOV74 MOV59 INS58 INS27 INS37 INS8 INS14 INS43 INS85 INS42 INS32 INS40 INS34 INS53 INS42 INS42 INS2 INS42 INS42 INS2 INS43 UPD42 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS21 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS14 INS42 INS34 INS42 INS34 INS42 INS42 INS27 INS5 INS59 INS27 INS8 INS32 INS42 INS32 INS42 INS25 INS60 INS50 INS32 INS42 INS43 INS32 INS42 INS34 INS43 INS85 INS42 INS32 INS40 INS34 INS53 INS42 INS42 INS2 INS2 INS2 INS42 INS42 INS27 INS8 INS83 MOV43 INS59 INS32 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 INS21 INS10 INS49 INS41 INS2 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS45 INS14 INS42 INS34 INS42 INS34 INS42 INS42 UPD42 INS32 INS32 INS34 INS53 MOV42 INS42 INS42 INS34 INS13 INS7 INS13 INS7 INS13 INS7 INS13 INS7 INS32 INS42 INS42 INS32 INS42 INS43 INS32 MOV32 MOV42 INS42 INS42 INS14 INS42 MOV14 INS42 MOV14 INS42 MOV14 INS42 INS14 UPD42 MOV42 INS2 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS45 INS43 INS42 INS42 UPD40 INS42 INS42 UPD45 DEL83 DEL83 DEL23 DEL42 DEL42 DEL40 DEL42 DEL43 DEL14 DEL32 DEL21 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60