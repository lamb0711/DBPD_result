OPENNLP-521: Mechanism to check POS Tagger dictionary only during its creation. Added a flag to the BaseModel (ArtifactProvider) to allow knowing if it was loaded from a stream. We use this flag to know if the dictionary should be validated or not.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1360365 13f79535-47bb-0310-9956-ffa450edef68

+  protected void validatePOSDictionary(POSDictionary posDict,
+      AbstractModel posModel) throws InvalidFormatException {
+    Set<String> dictTags = new HashSet<String>();
+
+    for (String word : posDict) {
+      Collections.addAll(dictTags, posDict.getTags(word));
+    }
+
+    Set<String> modelTags = new HashSet<String>();
+
+    for (int i = 0; i < posModel.getNumOutcomes(); i++) {
+      modelTags.add(posModel.getOutcome(i));
+    }
+
+    if (!modelTags.containsAll(dictTags)) {
+      StringBuilder unknownTag = new StringBuilder();
+      for (String d : dictTags) {
+        if (!modelTags.contains(d)) {
+          unknownTag.append(d).append(" ");
+        }
+      }
+      throw new InvalidFormatException("Tag dictioinary contains tags "
+          + "which are unknown by the model! The unknown tags are: "
+          + unknownTag.toString());
+    }
+  }
+  
-        POSDictionary posDict = (POSDictionary) tagdictEntry;
-        
-        Set<String> dictTags = new HashSet<String>();
-        
-        for (String word : posDict) {
-          Collections.addAll(dictTags, posDict.getTags(word)); 
+        if(!this.artifactProvider.isLoadedFromSerialized()) {
+          AbstractModel posModel = this.artifactProvider
+              .getArtifact(POSModel.POS_MODEL_ENTRY_NAME);
+          POSDictionary posDict = (POSDictionary) tagdictEntry; 
+          validatePOSDictionary(posDict, posModel);
-        
-        Set<String> modelTags = new HashSet<String>();
-        
-        AbstractModel posModel = this.artifactProvider
-            .getArtifact(POSModel.POS_MODEL_ENTRY_NAME);
-        
-        for  (int i = 0; i < posModel.getNumOutcomes(); i++) {
-          modelTags.add(posModel.getOutcome(i));
-        }
-        
-        if (!modelTags.containsAll(dictTags)) {
-          StringBuilder unknownTag = new StringBuilder();
-          for (String d : dictTags) {
-            if(!modelTags.contains(d)) {
-              unknownTag.append(d).append(" ");
-            }
-          }
-          throw new InvalidFormatException("Tag dictioinary contains tags " +
-                "which are unknown by the model! The unknown tags are: " + unknownTag.toString());
-        }
-      }
-      else {
-        throw new InvalidFormatException("Abbreviations dictionary has wrong type!");
+      } else {
+        throw new InvalidFormatException(
+            "POSTag dictionary has wrong type!");

INS31 UPD83 UPD42 INS44 INS44 MOV8 MOV78 INS83 INS39 INS42 INS43 MOV8 INS43 INS42 INS43 INS42 INS42 INS25 INS42 INS42 MOV27 INS8 MOV25 MOV62 MOV8 INS38 INS8 INS32 MOV60 MOV60 INS21 UPD45 INS22 INS42 INS32 INS52 INS42 INS42 INS42 INS42