OPENNLP-482: Updated trainer and cross validator to use TokenizerFactory

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1304680 13f79535-47bb-0310-9956-ffa450edef68

-  private final String language;
-  private final boolean alphaNumericOptimization;
-  
-  private final Dictionary abbreviations;
-  
+  private final TokenizerFactory factory;
+  public TokenizerCrossValidator(TrainingParameters params,
+      TokenizerFactory factory, TokenizerEvaluationMonitor... listeners) {
+    this.params = params;
+    this.listeners = listeners;
+    this.factory = factory;
+  }
+
+  /**
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+   */
-    this.language = language;
-    this.alphaNumericOptimization = alphaNumericOptimization;
-    this.abbreviations = abbreviations;
-    this.params = params;
-    this.listeners = listeners;
+    this(params, new TokenizerFactory(language, abbreviations,
+        alphaNumericOptimization, null), listeners);
-   * @deprecated use {@link #TokenizerCrossValidator(String, boolean, TrainingParameters, TokenizerEvaluationMonitor...)}
-   * instead and pass in a TrainingParameters object.
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+  /**
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+   */
+  /**
+   * @deprecated use
+   *             {@link #TokenizerCrossValidator(TrainingParameters, TokenizerFactory, TokenizerEvaluationMonitor...)}
+   *             instead and pass in a {@link TokenizerFactory}
+   */
-      model = TokenizerME.train(language, trainingSampleStream, abbreviations,
-          alphaNumericOptimization, params);
+      model = TokenizerME.train(trainingSampleStream, this.factory, params);

MOV23 INS31 UPD43 INS44 MOV21 INS29 INS83 INS42 MOV44 MOV44 MOV44 INS44 INS44 INS8 INS29 INS29 UPD42 UPD42 INS43 INS42 INS65 INS43 INS42 INS43 INS42 INS17 INS65 INS65 INS42 INS66 INS65 INS66 INS65 INS42 INS42 INS42 INS14 INS42 UPD66 UPD66 INS65 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS65 UPD42 INS68 INS42 INS43 INS42 INS42 INS42 INS33 MOV69 INS42 INS68 INS42 INS68 INS42 UPD42 INS42 INS69 INS69 INS69 UPD42 MOV42 INS42 INS69 INS69 INS69 INS42 INS69 INS69 INS69 INS43 INS43 INS43 UPD43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS52 INS42 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL83 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL39 DEL69 DEL42 DEL42 DEL42