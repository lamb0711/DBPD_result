OPENNLP-429: Modified the BaseModel behavior to allow serializers provided by tool factories.

Changed BaseModel to allow loading artifacts and serializers in two steps. The first will load basic artifacts and serializers, so we can load the manifest. Latter we can load information from manifest (factory name), get more serializers using this information, and finally loading more artifacts and serializers. To do that I had to change the BaseModel constructor, moving some of its code two methods that can be called by the sub-class at the right time.
All Model implementations had to change to add the post constructor actions;

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1243188 13f79535-47bb-0310-9956-ffa450edef68

+import opennlp.tools.util.BaseToolFactory;
+import opennlp.tools.util.model.ArtifactProvider;
-public class POSTaggerFactory {
+/**
+ * 
+ */
+public class POSTaggerFactory extends BaseToolFactory {
-  
-  public POSTaggerFactory() { 
+
+  /**
+   * Creates a {@link POSTaggerFactory} that provides the default implementation
+   * of the resources.
+   */
+  public POSTaggerFactory() {
-  public POSTaggerFactory(POSModel model) { 
-    if(model != null) {
-      this.ngramDictionary = model.getNgramDictionary();
-      this.posDictionary = model.getTagDictionary();
-    }
+  /**
+   * Creates a {@link POSTaggerFactory} with an {@link ArtifactProvider} that
+   * will be used to retrieve artifacts.
+   * <p>
+   * Sub-classes should implement a constructor with this signatures and call
+   * this constructor.
+   * <p>
+   * This will be used to load the factory from a serialized POSModel.
+   */
+  public POSTaggerFactory(ArtifactProvider artifactProvider) {
+    super(artifactProvider);
-  public POSTaggerFactory(Dictionary ngramDictionary, POSDictionary posDictionary) {
+  /**
+   * Creates a {@link POSTaggerFactory}. Use this constructor to
+   * programmatically create a factory.
+   * 
+   * @param ngramDictionary
+   * @param posDictionary
+   */
+  public POSTaggerFactory(Dictionary ngramDictionary,
+      POSDictionary posDictionary) {
+  public POSDictionary getPOSDictionary() {
+    return this.posDictionary;
+  }
+
-    return new DefaultPOSSequenceValidator(posDictionary);
+    return new DefaultPOSSequenceValidator(getPOSDictionary());
+

INS26 INS26 INS40 INS40 INS29 INS43 INS31 INS31 INS42 INS29 INS29 MOV83 MOV42 MOV44 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS65 UPD43 UPD42 INS46 INS65 INS65 INS65 INS42 INS41 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 UPD42 INS42 INS66 INS65 INS66 INS66 INS42 INS42 MOV22 INS42 INS42 INS42 INS42 INS32 INS42 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42