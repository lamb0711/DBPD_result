OPENNLP-588 eoEntityLinker does not provide a method for setting the properties file location in order to get the database connection, it is currently hard coded

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1519520 13f79535-47bb-0310-9956-ffa450edef68

-
-import opennlp.tools.entitylinker.GeoEntityLinker;
- * Generates Lists of EntityLinker implementations via
- * properties file configuration
+ * Generates Lists of EntityLinker implementations via properties file
+ * configuration
-   * entity linker types would be:
-   * linker.<yourtype>=<yourclass1,yourclass2>
-   * For example:
+   * entity linker types would be: linker.<yourtype>=<yourclass1,yourclass2> For
+   * example:
-   * @param properties the entitylinker properties that contain the configured entitylinkers
-   * @return  
-  
+   * @param properties the entitylinker properties that contain the configured
+   *                   entitylinkers
+   * @return *
-      String listoflinkers = properties.getProperty("linker." + entityType, GeoEntityLinker.class.getName());    
+      String listoflinkers = properties.getProperty("linker." + entityType, GeoEntityLinker.class.getName());
+        linker.setEntityLinkerProperties(properties);
-    } catch (Exception ex) {
+    } catch (InstantiationException ex) {
+      Logger.getLogger(EntityLinkerFactory.class.getName()).log(Level.SEVERE, null, ex);
+    } catch (IllegalAccessException ex) {
+      Logger.getLogger(EntityLinkerFactory.class.getName()).log(Level.SEVERE, null, ex);
+    } catch (ClassNotFoundException ex) {
+      Logger.getLogger(EntityLinkerFactory.class.getName()).log(Level.SEVERE, null, ex);
+    } catch (IOException ex) {
-   * @param entityTypes the types of entities, i.e person, location, organization
-     * @param properties the entitylinker properties that contain the configured entitylinkers
+   * @param entityTypes the types of entities, i.e person, location,
+   *                    organization
+   * @param properties  the entitylinker properties that contain the configured
+   *                    entitylinkers
-        String listoflinkers = properties.getProperty("linker." + entityType, GeoEntityLinker.class.getName());   
+        String listoflinkers = properties.getProperty("linker." + entityType, GeoEntityLinker.class.getName());
+          linker.setEntityLinkerProperties(properties);
-      }  catch (Exception ex) {
+      } catch (InstantiationException ex) {
+        Logger.getLogger(EntityLinkerFactory.class.getName()).log(Level.SEVERE, null, ex);
+      } catch (IllegalAccessException ex) {
+        Logger.getLogger(EntityLinkerFactory.class.getName()).log(Level.SEVERE, null, ex);
+      } catch (ClassNotFoundException ex) {
+        Logger.getLogger(EntityLinkerFactory.class.getName()).log(Level.SEVERE, null, ex);
+      } catch (IOException ex) {
-
-

UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 INS12 INS12 INS12 UPD66 INS66 UPD66 INS66 INS44 INS8 INS44 INS8 INS44 INS8 UPD43 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS12 INS12 INS12 INS21 UPD42 INS42 INS32 INS42 INS32 INS42 INS32 INS44 INS8 INS44 INS8 INS44 INS8 INS32 INS32 INS42 INS40 INS33 INS42 INS32 INS42 INS40 INS33 INS42 INS32 INS42 INS40 INS33 INS42 UPD43 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS21 UPD42 INS42 INS32 INS42 INS32 INS42 INS32 INS57 INS42 INS57 INS42 INS57 INS42 INS32 INS32 INS42 INS40 INS33 INS42 INS32 INS42 INS40 INS33 INS42 INS32 INS42 INS40 INS33 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS57 INS42 INS57 INS42 INS57 INS42 INS43 INS43 INS43 INS42 INS42 INS42 DEL40 DEL26 DEL66