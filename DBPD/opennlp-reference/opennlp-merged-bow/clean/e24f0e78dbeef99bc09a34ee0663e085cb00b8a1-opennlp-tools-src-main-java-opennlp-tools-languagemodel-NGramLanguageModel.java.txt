OPENNLP-1180 - LM API switches to String[] (#304)


+  public void add(String... tokens) {
+    add(new StringList(tokens), 1, n);
+  }
+
-  public double calculateProbability(StringList sample) {
+  public double calculateProbability(StringList tokens) {
-      for (StringList ngram : NGramUtils.getNGrams(sample, n)) {
+      for (StringList ngram : NGramUtils.getNGrams(tokens, n)) {
+          break;
+        }
+      }
+      probability = Math.exp(probability);
+    }
+    return probability;
+  }
+
+  @Override
+  public double calculateProbability(String... tokens) {
+    double probability = 0d;
+    if (size() > 0) {
+      for (String[] ngram : NGramUtils.getNGrams(tokens, n)) {
+        double score = stupidBackoff(new StringList(ngram));
+        probability += Math.log(score);
+        if (Double.isNaN(probability)) {
+          probability = 0d;
+          break;
+  @Override
+  public String[] predictNextTokens(String... tokens) {
+    double maxProb = Double.NEGATIVE_INFINITY;
+    String[] token = null;
+
+    for (StringList ngram : this) {
+      String[] sequence = new String[ngram.size() + tokens.length];
+      for (int i = 0; i < tokens.length; i++) {
+        sequence[i] = tokens[i];
+      }
+      for (int i = 0; i < ngram.size(); i++) {
+        sequence[i + tokens.length] = ngram.getToken(i);
+      }
+      double v = calculateProbability(sequence);
+      if (v > maxProb) {
+        maxProb = v;
+        token = new String[ngram.size()];
+        for (int i = 0; i < ngram.size(); i++) {
+          token[i] = ngram.getToken(i);
+        }
+      }
+    }
+
+    return token;
+  }
+

INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS5 INS42 INS44 INS8 INS43 INS42 INS21 INS43 INS42 INS42 INS43 INS42 INS60 INS25 INS41 INS42 INS43 INS85 INS43 INS42 INS60 INS60 INS70 INS41 INS42 INS32 INS42 INS42 INS39 INS59 INS27 INS8 INS42 INS42 INS42 INS39 INS59 INS5 INS59 INS44 INS52 INS8 INS42 INS42 INS14 INS34 INS42 INS42 INS34 INS32 INS34 INS70 INS21 INS42 INS40 INS43 INS85 INS42 INS33 INS43 INS42 INS60 INS24 INS24 INS60 INS25 MOV43 INS42 INS42 INS44 INS32 INS8 INS7 INS42 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS58 INS27 INS37 INS8 INS39 INS59 INS27 INS8 UPD42 INS5 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS25 INS42 INS32 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS39 INS59 INS42 INS32 INS42 INS21 INS42 INS32 INS42 INS42 INS21 INS21 INS24 INS43 INS85 INS39 INS59 INS7 INS32 INS8 INS42 INS42 INS42 INS42 INS5 INS27 INS42 INS34 INS7 INS42 INS34 INS42 INS42 INS7 INS42 INS42 INS7 INS7 INS58 INS27 INS37 INS8 INS10 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS21 INS10 INS43 INS85 INS32 INS40 INS2 INS2 INS2 INS32 INS42 INS42 INS42 INS3 INS39 INS59 INS42 INS32 INS42 INS21 INS42 INS14 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS5 INS32 INS42 INS34 INS42 INS42 INS7 INS43 INS42 INS42 INS34 INS42 INS40 INS43 INS85 INS42 INS42 INS2 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42