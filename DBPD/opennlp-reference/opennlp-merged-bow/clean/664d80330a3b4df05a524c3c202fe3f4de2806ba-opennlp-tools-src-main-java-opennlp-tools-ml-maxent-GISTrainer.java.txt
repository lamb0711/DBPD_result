Speed up GIS training by saving Executor in the GISTrainer

Thanks to Daniel Russ  for providing a patch

See issue OPENNLP-759

+import java.util.concurrent.CompletionService;
+import java.util.concurrent.ExecutorCompletionService;
+	int threads=modelExpects.length;
+	ExecutorService executor = Executors.newFixedThreadPool(threads);
+	CompletionService<ModelExpactationComputeTask> completionService=new ExecutorCompletionService<GISTrainer.ModelExpactationComputeTask>(executor);
-      currLL = nextIteration(correctionConstant);
+      currLL = nextIteration(correctionConstant,completionService);
+    executor.shutdown();
-  private double nextIteration(double correctionConstant) {
+  private double nextIteration(double correctionConstant, CompletionService<ModelExpactationComputeTask> completionService) {
+    // Each thread gets equal number of tasks, if the number of tasks
+    // is not divisible by the number of threads, the first "leftOver" 
+    // threads have one extra task.
-
-    ExecutorService executor = Executors.newFixedThreadPool(numberOfThreads);
-
-
-    List<Future<?>> futures = new ArrayList<Future<?>>();
-
+    // submit all tasks to the completion service.
-      if (i != numberOfThreads - 1)
-        futures.add(executor.submit(new ModelExpactationComputeTask(i, i*taskSize, taskSize)));
+      if (i < leftOver)
+        completionService.submit(new ModelExpactationComputeTask(i, i*taskSize+i, taskSize+1));
-        futures.add(executor.submit(new ModelExpactationComputeTask(i, i*taskSize, taskSize + leftOver)));
+        completionService.submit(new ModelExpactationComputeTask(i, i*taskSize+leftOver, taskSize));
-    for (Future<?> future : futures) {
-      ModelExpactationComputeTask finishedTask;
+    for (int i=0; i<numberOfThreads; i++) {
+      ModelExpactationComputeTask finishedTask = null;
-        finishedTask = (ModelExpactationComputeTask) future.get();
+        finishedTask = completionService.take().get();
-    executor.shutdown();
-

INS26 INS26 INS40 INS40 INS44 MOV21 MOV24 INS60 INS60 INS60 MOV21 INS74 INS42 INS24 INS39 INS59 MOV43 INS59 INS74 INS59 INS43 MOV43 INS58 INS27 INS37 MOV8 INS42 INS40 INS42 INS32 INS43 INS43 INS42 INS14 INS42 MOV21 INS39 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 UPD27 UPD42 MOV42 INS34 MOV43 INS43 INS43 UPD42 MOV42 MOV32 INS32 INS33 INS42 INS40 INS42 UPD42 UPD42 MOV42 MOV42 MOV14 INS27 MOV43 INS27 INS32 MOV27 INS42 INS34 MOV27 INS42 INS32 MOV42 INS42 UPD42 MOV42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL74 DEL14 DEL59 DEL60 DEL34 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL32 DEL11 DEL42 DEL43 DEL76 DEL74 DEL42 DEL44 DEL42 DEL70