Correct indentation and white spaces

This closes #30

See issue OPENNLP-914

-  public enum ModelType {Maxent,Perceptron,MaxentQn,NaiveBayes}
+  public enum ModelType {
+    Maxent,
+    Perceptron,
+    MaxentQn,
+    NaiveBayes
+  }
-  private void init(String[] predLabels, String[] outcomeNames){
+  private void init(String[] predLabels, String[] outcomeNames) {
-    
+
-    
+
-      int best = 0;
-      for (int i = 1; i<ocs.length; i++)
-          if (ocs[i] > ocs[best]) best = i;
-      return outcomeNames[best];
+    int best = 0;
+    for (int i = 1; i < ocs.length; i++)
+      if (ocs[i] > ocs[best]) best = i;
+    return outcomeNames[best];
-  public ModelType getModelType(){
+  public ModelType getModelType() {
-      if (ocs.length != outcomeNames.length) {
-          return "The double array sent as a parameter to GISModel.getAllOutcomes() must not have been produced by this model.";
+    if (ocs.length != outcomeNames.length) {
+      return "The double array sent as a parameter to GISModel.getAllOutcomes() must not have been produced by this model.";
+    }
+    else {
+      DecimalFormat df =  new DecimalFormat("0.0000");
+      StringBuilder sb = new StringBuilder(ocs.length * 2);
+      sb.append(outcomeNames[0]).append("[").append(df.format(ocs[0])).append("]");
+      for (int i = 1; i < ocs.length; i++) {
+        sb.append("  ").append(outcomeNames[i]).append("[").append(df.format(ocs[i])).append("]");
-      else {
-        DecimalFormat df =  new DecimalFormat("0.0000");
-        StringBuilder sb = new StringBuilder(ocs.length * 2);
-        sb.append(outcomeNames[0]).append("[").append(df.format(ocs[0])).append("]");
-        for (int i = 1; i<ocs.length; i++) {
-          sb.append("  ").append(outcomeNames[i]).append("[").append(df.format(ocs[i])).append("]");
-        }
-        return sb.toString();
-      }
+      return sb.toString();
+    }
-      return outcomeNames[i];
+    return outcomeNames[i];
-   * model, -1 if it does not.
+   *     model, -1 if it does not.
-      for (int i=0; i<outcomeNames.length; i++) {
-          if (outcomeNames[i].equals(outcome))
-              return i;
-      }
-      return -1;
+    for (int i = 0; i < outcomeNames.length; i++) {
+      if (outcomeNames[i].equals(outcome))
+        return i;
+    }
+    return -1;
-   * 	          unique ids in the model.
+   *            unique ids in the model.
-      Object[] data = new Object[5];
-      data[0] = evalParams.getParams();
-      data[1] = pmap;
-      data[2] = outcomeNames;
-      data[3] = (int) evalParams.getCorrectionConstant();
-      data[4] = evalParams.getCorrectionParam();
-      return data;
+    Object[] data = new Object[5];
+    data[0] = evalParams.getParams();
+    data[1] = pmap;
+    data[2] = outcomeNames;
+    data[3] = (int) evalParams.getCorrectionConstant();
+    data[4] = evalParams.getCorrectionParam();
+    return data;

