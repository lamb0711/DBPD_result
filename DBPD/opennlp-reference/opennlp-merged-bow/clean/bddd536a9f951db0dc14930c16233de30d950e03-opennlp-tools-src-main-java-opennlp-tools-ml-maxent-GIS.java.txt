OPENNLP-123: Feature cutoff should only be done by data indexers, this closes apache/opennlp#65

-  public static double SMOOTHING_OBSERVATION = 0.1;
+  private static final double SMOOTHING_OBSERVATION = 0.1;
-  public static final String SMOOTHING_PARAM = "smoothing";
-  public static final boolean SMOOTHING_DEFAULT = false;
+  private static final String SMOOTHING_PARAM = "smoothing";
+  private static final boolean SMOOTHING_DEFAULT = false;
-    int cutoff = getCutoff();
-    model = trainModel(iterations, indexer, printMessages, smoothing, null, cutoff, threads);
+    model = trainModel(iterations, indexer, printMessages, smoothing, null, threads);
-    if (sigma > 0)
+    if (sigma > 0) {
+    }
-  public static GISModel trainModel(int iterations, DataIndexer indexer,
-      boolean smoothing) {
-    return trainModel(iterations, indexer, true, smoothing, null, 0);
+  public static GISModel trainModel(int iterations, DataIndexer indexer, boolean smoothing) {
+    return trainModel(iterations, indexer, true, smoothing, null, 1);
-    return trainModel(iterations, indexer, true, false, null, 0);
+    return trainModel(iterations, indexer, true, false, null, 1);
-   * @param cutoff
-   *          The number of times a predicate must occur to be used in a model.
-      boolean printMessagesWhileTraining, boolean smoothing, Prior modelPrior,
-      int cutoff) {
-    return trainModel(iterations, indexer, printMessagesWhileTraining,
-        smoothing, modelPrior, cutoff, 1);
+                                    boolean printMessagesWhileTraining, boolean smoothing,
+                                    Prior modelPrior) {
+    return trainModel(iterations, indexer, printMessagesWhileTraining, smoothing, modelPrior, 1);
-   * @param cutoff
-   *          The number of times a predicate must occur to be used in a model.
-      boolean printMessagesWhileTraining, boolean smoothing, Prior modelPrior,
-      int cutoff, int threads) {
+                                    boolean printMessagesWhileTraining, boolean smoothing,
+                                    Prior modelPrior, int threads) {
-
-    return trainer.trainModel(iterations, indexer, modelPrior, cutoff, threads);
+    return trainer.trainModel(iterations, indexer, modelPrior, threads);

UPD83 INS83 UPD83 UPD83 INS8 MOV21 UPD34 UPD34 DEL39 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL66 DEL65 DEL39 DEL42 DEL44 DEL42 DEL42 DEL66 DEL65 DEL39 DEL42 DEL44 DEL42