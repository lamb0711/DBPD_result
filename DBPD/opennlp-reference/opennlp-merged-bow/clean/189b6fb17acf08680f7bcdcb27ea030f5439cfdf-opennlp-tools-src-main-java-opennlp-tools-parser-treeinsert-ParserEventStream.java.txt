OPENNLP-924: Remove all old and leftover main methods, this closes apache/opennlp#45

-import java.io.File;
-import java.io.FileInputStream;
-import java.nio.charset.Charset;
-import opennlp.tools.cmdline.SystemInputStreamFactory;
+
-import opennlp.tools.ml.maxent.io.SuffixSensitiveGISModelReader;
-import opennlp.tools.ml.model.AbstractModel;
-import opennlp.tools.parser.ParseSampleStream;
-import opennlp.tools.util.PlainTextByLineStream;
-
-  public static void main(String[] args) throws java.io.IOException {
-    if (args.length == 0) {
-      System.err.println("Usage ParserEventStream -[tag|chunk|build|attach] [-fun] "
-          + "[-dict dictionary] [-model model] head_rules < parses");
-      System.exit(1);
-    }
-    ParserEventTypeEnum etype = null;
-    boolean fun = false;
-    int ai = 0;
-    Dictionary dict = null;
-    AbstractModel model = null;
-
-    while (ai < args.length && args[ai].startsWith("-")) {
-      switch (args[ai]) {
-        case "-build":
-          etype = ParserEventTypeEnum.BUILD;
-          break;
-        case "-attach":
-          etype = ParserEventTypeEnum.ATTACH;
-          break;
-        case "-chunk":
-          etype = ParserEventTypeEnum.CHUNK;
-          break;
-        case "-check":
-          etype = ParserEventTypeEnum.CHECK;
-          break;
-        case "-tag":
-          etype = ParserEventTypeEnum.TAG;
-          break;
-        case "-fun":
-          fun = true;
-          break;
-        case "-dict":
-          ai++;
-          dict = new Dictionary(new FileInputStream(args[ai]));
-          break;
-        case "-model":
-          ai++;
-          model = (new SuffixSensitiveGISModelReader(new File(args[ai]))).getModel();
-          break;
-        default:
-          System.err.println("Invalid option " + args[ai]);
-          System.exit(1);
-      }
-      ai++;
-    }
-    HeadRules rules = new opennlp.tools.parser.lang.en.HeadRules(args[ai++]);
-    if (fun) {
-      Parse.useFunctionTags(true);
-    }
-
-    try (ObjectStream<Event> es = new ParserEventStream(
-        new ParseSampleStream(new PlainTextByLineStream(
-            new SystemInputStreamFactory(), Charset.defaultCharset())),
-        rules, etype, dict)) {
-      Event e;
-      while ((e = es.read()) != null) {
-        if (model != null) {
-          System.out.print(
-              model.eval(e.getContext())[model.getIndex(e.getOutcome())] + " ");
-        }
-        System.out.println(e);
-      }
-    }
-  }

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL40 DEL43 DEL40 DEL34 DEL27 DEL40 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL2 DEL45 DEL49 DEL42 DEL40 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL40 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL40 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL40 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL40 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL9 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL37 DEL21 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL2 DEL14 DEL14 DEL7 DEL21 DEL10 DEL45 DEL49 DEL42 DEL37 DEL21 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL2 DEL14 DEL14 DEL36 DEL42 DEL32 DEL7 DEL21 DEL10 DEL49 DEL40 DEL42 DEL45 DEL42 DEL42 DEL2 DEL27 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL50 DEL42 DEL37 DEL21 DEL8 DEL61 DEL42 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL37 DEL2 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL14 DEL42 DEL42 DEL32 DEL14 DEL14 DEL42 DEL42 DEL42 DEL14 DEL59 DEL58 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL33 DEL27 DEL42 DEL33 DEL27 DEL40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL2 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL61 DEL8 DEL54 DEL8 DEL31