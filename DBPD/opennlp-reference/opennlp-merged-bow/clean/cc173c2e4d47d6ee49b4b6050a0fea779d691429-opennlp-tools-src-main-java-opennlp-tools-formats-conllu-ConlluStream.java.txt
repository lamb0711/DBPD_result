OPENNLP-1083: Conll-U Sample contraction handling

closes apache/opennlp#222

+import java.util.HashMap;
+import java.util.Map;
+import java.util.stream.Collectors;
+      wordLines = postProcessContractions(wordLines);
+
+  private List<ConlluWordLine> postProcessContractions(List<ConlluWordLine> lines) {
+
+
+    // 1. Find contractions
+    Map<String, Integer> index = new HashMap();
+    Map<String, List<String>> contractions = new HashMap();
+    List<String> linesToDelete = new ArrayList();
+
+    for (int i = 0; i < lines.size(); i++) {
+      ConlluWordLine line = lines.get(i);
+      index.put(line.getId(), i);
+      if (line.getId().contains("-")) {
+        List<String> expandedContractions = new ArrayList();
+        String[] ids = line.getId().split("-");
+        int start = Integer.parseInt(ids[0]);
+        int end = Integer.parseInt(ids[1]);
+        for (int j = start; j <= end; j++) {
+          String js = Integer.toString(j);
+          expandedContractions.add(js);
+          linesToDelete.add(js);
+        }
+        contractions.put(line.getId(), expandedContractions);
+      }
+    }
+
+    // 2. Merge annotation
+    for (String contractionId: contractions.keySet()) {
+      ConlluWordLine contraction = lines.get(index.get(contractionId));
+      List<ConlluWordLine> expandedParts = new ArrayList();
+      for (String id : contractions.get(contractionId)) {
+        expandedParts.add(lines.get(index.get(id)));
+      }
+      ConlluWordLine merged = mergeAnnotation(contraction, expandedParts);
+      lines.set(index.get(contractionId), merged);
+    }
+
+    // 3. Delete the expanded parts
+    for (int i = linesToDelete.size() - 1; i >= 0; i--) {
+      lines.remove(index.get(linesToDelete.get(i)).intValue());
+    }
+    return lines;
+  }
+
+  /**
+   * Merges token level annotations
+   * @param contraction the line that receives the annotation
+   * @param expandedParts the lines to get annotation
+   * @return the merged line
+   */
+  private ConlluWordLine mergeAnnotation(ConlluWordLine contraction,
+                                         List<ConlluWordLine> expandedParts) {
+    String id = contraction.getId();
+    String form = contraction.getForm();
+    String lemma = expandedParts.stream()
+        .filter(p -> !"_".equals(p.getLemma()))
+        .map(p -> p.getLemma())
+        .collect(Collectors.joining("+"));
+
+    String uPosTag = expandedParts.stream()
+        .filter(p -> !"_".equals(p.getPosTag(ConlluTagset.U)))
+        .map(p -> p.getPosTag(ConlluTagset.U))
+        .collect(Collectors.joining("+"));
+
+    String xPosTag = expandedParts.stream()
+        .filter(p -> !"_".equals(p.getPosTag(ConlluTagset.X)))
+        .map(p -> p.getPosTag(ConlluTagset.X))
+        .collect(Collectors.joining("+"));
+
+    String feats = expandedParts.stream()
+        .filter(p -> !"_".equals(p.getFeats()))
+        .map(p -> p.getFeats())
+        .collect(Collectors.joining("+"));
+
+    String head = contraction.getHead();
+    String deprel = contraction.getDeprel();
+    String deps = contraction.getDeps();
+    String misc = contraction.getMisc();
+
+    return new ConlluWordLine(id, form, lemma, uPosTag, xPosTag, feats,head, deprel, deps, misc);
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS83 INS74 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS43 INS43 INS74 INS42 INS60 INS60 INS60 INS24 INS70 INS24 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS74 INS42 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS41 INS42 INS42 INS43 INS43 INS74 INS59 INS74 INS59 INS74 INS59 INS58 INS27 INS37 INS8 INS44 INS32 INS8 INS58 INS27 INS37 INS8 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS43 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS14 INS21 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS74 INS42 INS14 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS32 INS42 INS60 INS21 INS25 INS43 INS42 INS42 INS42 INS60 INS60 INS70 INS60 INS21 INS39 INS59 INS42 INS34 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS43 INS42 INS34 INS42 INS42 INS43 INS59 INS32 INS32 INS8 INS42 INS43 INS59 INS74 INS59 INS44 INS32 INS8 INS43 INS59 INS32 INS42 INS27 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS45 INS60 INS60 INS60 INS60 INS24 INS21 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS34 INS42 INS42 INS32 INS32 INS42 INS86 INS42 INS42 INS45 INS32 INS42 INS86 INS42 INS42 INS45 INS32 INS42 INS86 INS42 INS42 INS45 INS32 INS42 INS86 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS5 INS59 INS39 INS59 INS39 INS59 INS58 INS27 INS37 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS86 INS59 INS32 INS32 INS42 INS86 INS59 INS32 INS32 INS42 INS86 INS59 INS32 INS32 INS42 INS86 INS59 INS32 INS43 INS43 INS42 INS14 INS43 INS85 INS42 INS32 INS42 INS32 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS59 INS38 INS42 INS42 INS42 INS42 INS42 INS59 INS38 INS42 INS42 INS42 INS40 INS42 INS42 INS59 INS38 INS42 INS42 INS42 INS40 INS42 INS42 INS59 INS38 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS45 INS42 INS42 INS2 INS42 INS42 INS2 INS42 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS45 INS42 INS32 INS45 INS42 INS32 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42