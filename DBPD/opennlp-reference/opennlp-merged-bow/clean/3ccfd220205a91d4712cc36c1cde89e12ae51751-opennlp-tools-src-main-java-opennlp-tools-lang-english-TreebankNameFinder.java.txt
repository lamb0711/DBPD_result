OPENNLP-56 Now uses Parse.addNames, that is a one to one copy of the prior used addNames method.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1308811 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import opennlp.model.AbstractModel;
-import opennlp.maxent.io.PooledGISModelReader;
-  private static void addNames(String tag, Span[] names, Parse[] tokens) {
-    for (int ni=0,nn=names.length;ni<nn;ni++) {
-      Span nameTokenSpan = names[ni];
-      Parse startToken = tokens[nameTokenSpan.getStart()];
-      Parse endToken = tokens[nameTokenSpan.getEnd()-1];
-      Parse commonParent = startToken.getCommonParent(endToken);
-      //System.err.println("addNames: "+startToken+" .. "+endToken+" commonParent = "+commonParent);
-      if (commonParent != null) {
-        Span nameSpan = new Span(startToken.getSpan().getStart(),endToken.getSpan().getEnd());
-        if (nameSpan.equals(commonParent.getSpan())) {
-          commonParent.insert(new Parse(commonParent.getText(),nameSpan,tag,1.0,endToken.getHeadIndex()));
-        }
-        else {
-          Parse[] kids = commonParent.getChildren();
-          boolean crossingKids = false;
-          for (int ki=0,kn=kids.length;ki<kn;ki++) {
-            if (nameSpan.crosses(kids[ki].getSpan())){
-              crossingKids = true;
-            }
-          }
-          if (!crossingKids) {
-            commonParent.insert(new Parse(commonParent.getText(),nameSpan,tag,1.0,endToken.getHeadIndex()));
-          }
-          else {
-            if (commonParent.getType().equals("NP")) {
-              Parse[] grandKids = kids[0].getChildren();
-              if (grandKids.length > 1 && nameSpan.contains(grandKids[grandKids.length-1].getSpan())) {
-                commonParent.insert(new Parse(commonParent.getText(),commonParent.getSpan(),tag,1.0,commonParent.getHeadIndex()));
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  
-        addNames(tags[fi],nameSpans[fi],tagNodes);
+        Parse.addNames(tags[fi],nameSpans[fi],tagNodes);

INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL34 DEL59 DEL42 DEL40 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL2 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL2 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL34 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL42 DEL40 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL38 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL34 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL34 DEL2 DEL42 DEL32 DEL59 DEL60 DEL40 DEL34 DEL27 DEL42 DEL42 DEL42 DEL40 DEL34 DEL27 DEL2 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL34 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31