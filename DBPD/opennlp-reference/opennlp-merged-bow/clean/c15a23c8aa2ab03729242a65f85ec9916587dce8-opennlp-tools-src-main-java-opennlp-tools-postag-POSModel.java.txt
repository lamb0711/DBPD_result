OPENNLP-127 Now checks when model is loaded that tag dictionary is compatible

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1129054 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
-    if (tagdictEntry != null && !(tagdictEntry instanceof POSDictionary)) {
-      throw new InvalidFormatException("Abbreviations dictionary has wrong type!");
+    if (tagdictEntry != null) {
+      if (tagdictEntry instanceof POSDictionary) {
+        POSDictionary posDict = (POSDictionary) tagdictEntry;
+        
+        Set<String> dictTags = new HashSet<String>();
+        
+        for (String word : posDict) {
+          Collections.addAll(dictTags, posDict.getTags(word)); 
+        }
+        
+        Set<String> modelTags = new HashSet<String>();
+        
+        AbstractModel posModel = getPosModel();
+        
+        for  (int i = 0; i < posModel.getNumOutcomes(); i++) {
+          modelTags.add(posModel.getOutcome(i));
+        }
+        
+        if (!modelTags.containsAll(dictTags)) {
+          throw new InvalidFormatException("Tag dictioinary contains tags " +
+          		"which are unkown by the model!");
+        }
+      }
+      else {
+        throw new InvalidFormatException("Abbreviations dictionary has wrong type!");
+      }

INS26 INS26 INS26 INS40 INS40 INS40 INS25 MOV27 INS8 INS25 MOV62 INS8 MOV8 INS60 INS60 INS70 INS60 INS60 INS24 MOV25 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS74 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS38 INS8 INS42 INS42 INS11 INS43 INS43 INS42 INS14 INS43 INS42 INS21 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS21 INS32 INS53 INS43 INS42 INS42 INS42 INS74 INS42 INS32 INS42 INS42 INS74 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS43 INS43 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS42 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 DEL36 DEL38 DEL27