Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class MemberLevelDiskMonitor extends MBeanStatsMonitor{
+public class MemberLevelDiskMonitor extends MBeanStatsMonitor {
-  
+
-  
-  private Map<Statistics ,MemberLevelDiskStatisticsListener > listeners;
+
+  private Map<Statistics, MemberLevelDiskStatisticsListener> listeners;
-  public void addStatisticsToMonitor(Statistics stats) { 
+  public void addStatisticsToMonitor(Statistics stats) {
-  
+
-  
+
-    
+
-        if(removed){
+        if (removed) {
-          log(name,value);
+          log(name, value);
-     * Only decrease those values which can both increase and decrease and not
-     * values which can only increase like read/writes
+     * Only decrease those values which can both increase and decrease and not values which can only
+     * increase like read/writes
-     * Remove last sample value from the aggregate. Last Sampled value can be
-     * obtained from the DefaultHashMap for the disk
+     * Remove last sample value from the aggregate. Last Sampled value can be obtained from the
+     * DefaultHashMap for the disk
-        backupsInProgress -= statsMap.get(StatsKey.BACKUPS_IN_PROGRESS)
-            .intValue();
-        ;
+        backupsInProgress -= statsMap.get(StatsKey.BACKUPS_IN_PROGRESS).intValue();;
-  
-  private Number computeDelta(DefaultHashMap statsMap, String name,
-      Number currentValue) {
+
+  private Number computeDelta(DefaultHashMap statsMap, String name, Number currentValue) {
-    
+
-    if (name.equals(StatsKey.BACKUPS_IN_PROGRESS)) { 
+    if (name.equals(StatsKey.BACKUPS_IN_PROGRESS)) {
-       *  A negative value is also OK. 
-       * previous backup_in_progress = 5
-       * curr_backup_in_progress = 2
-       * delta = -3
-       * delta should be added to aggregate backup in progress
+       * A negative value is also OK. previous backup_in_progress = 5 curr_backup_in_progress = 2
+       * delta = -3 delta should be added to aggregate backup in progress

UPD66 UPD66 UPD66 UPD66