Revert "GEODE-7157: SSLConfigurationFactory thread-safe"

This reverts commit 649acd2d5c8711e40c160fc64bb7b55afddc12f3.

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import org.apache.geode.GemFireConfigException;
+  private DistributionConfig distributionConfig = null;
+  private Map<SecurableCommunicationChannel, SSLConfig> registeredSSLConfig =
+      new ConcurrentHashMap<>();
+  private DistributionConfig getDistributionConfig() {
+    if (distributionConfig == null) {
+      throw new GemFireConfigException("SSL Configuration requires a valid distribution config.");
+    }
+    return distributionConfig;
+  }
+
+  public static void setDistributionConfig(final DistributionConfig distributionConfig) {
+    if (distributionConfig == null) {
+      throw new GemFireConfigException("SSL Configuration requires a valid distribution config.");
+    }
+    getInstance().distributionConfig = distributionConfig;
+  }
+
+  /**
+   * @deprecated since GEODE 1.3, use #{getSSLConfigForComponent({@link DistributionConfig} ,
+   *             {@link SecurableCommunicationChannel})} instead
+   */
+  @Deprecated
+  public static SSLConfig getSSLConfigForComponent(
+      SecurableCommunicationChannel sslEnabledComponent) {
+    SSLConfig sslConfig = getInstance().getRegisteredSSLConfigForComponent(sslEnabledComponent);
+    if (sslConfig == null) {
+      sslConfig = getInstance().createSSLConfigForComponent(sslEnabledComponent);
+      getInstance().registeredSSLConfigForComponent(sslEnabledComponent, sslConfig);
+    }
+    return sslConfig;
+  }
+
+  private void registeredSSLConfigForComponent(
+      final SecurableCommunicationChannel sslEnabledComponent, final SSLConfig sslConfig) {
+    registeredSSLConfig.put(sslEnabledComponent, sslConfig);
+  }
+
+  private SSLConfig createSSLConfigForComponent(
+      final SecurableCommunicationChannel sslEnabledComponent) {
+    return createSSLConfigForComponent(getDistributionConfig(), sslEnabledComponent);
+  }
+
+  private SSLConfig getRegisteredSSLConfigForComponent(
+      final SecurableCommunicationChannel sslEnabledComponent) {
+    return registeredSSLConfig.get(sslEnabledComponent);
+  }
+
+  public static void close() {
+    getInstance().clearSSLConfigForAllComponents();
+    getInstance().distributionConfig = null;
+  }
+
+  private synchronized void clearSSLConfigForAllComponents() {
+    registeredSSLConfig.clear();
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS74 INS59 INS83 INS43 INS42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS78 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS42 INS42 INS33 INS43 INS43 INS43 INS42 INS14 INS42 INS25 INS41 INS83 INS43 INS42 INS25 INS21 INS65 INS42 INS42 INS43 INS42 INS60 INS25 INS41 INS83 INS43 INS42 INS83 INS43 INS42 INS21 INS42 INS83 INS43 INS42 INS41 INS42 INS83 INS43 INS42 INS41 INS21 INS21 INS21 INS42 INS42 INS42 INS74 INS27 INS8 INS42 INS42 INS27 INS8 INS7 INS66 INS65 INS66 INS65 INS66 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS7 INS32 INS43 INS42 INS33 INS53 INS42 INS33 INS53 INS22 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS22 INS33 INS42 INS42 INS42 INS14 INS14 INS32 INS42 INS32 INS42 INS42 INS7 INS32 INS42 INS42 INS32 INS42 INS43 INS45 INS43 INS45 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42