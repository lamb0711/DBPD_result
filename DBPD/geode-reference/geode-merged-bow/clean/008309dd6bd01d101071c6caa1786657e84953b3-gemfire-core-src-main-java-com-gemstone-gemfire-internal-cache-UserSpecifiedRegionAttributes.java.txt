Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+  private boolean hasCustomEviction = false;
+
-  /**
+  private boolean hasHDFSStoreName = false;
+  
+  private boolean hasHDFSWriteOnly = false;
+  
+/**
+  /**
+   * Whether this region has enable off-heap memory set.
+   * 
+   * @since 9.0
+   */
+  private boolean hasOffHeap = false;
+  
-  
-  
+  public boolean hasCustomEviction()
+  {
+    return this.hasCustomEviction;
+  }
+
+  public boolean hasOffHeap() {
+    return this.hasOffHeap;
+  }
+  
+  public void setHasCustomEviction(boolean hasCustomEviction)
+  {
+    this.hasCustomEviction = hasCustomEviction;
+  }
+  public void setHasOffHeap(boolean hasOffHeap) {
+    this.hasOffHeap = hasOffHeap;
+  }
+  
-  private static final int HAS_COUNT = 39;
+  private static final int HAS_COUNT = 43;
+
+  public boolean hasHDFSStoreName()
+  {
+    return this.hasHDFSStoreName;
+  }
+  public void setHasHDFSStoreName(boolean val)
+  {
+    this.hasHDFSStoreName = val;
+  }
+  
+  public void setHasHDFSWriteOnly(boolean val)
+  {
+    this.hasHDFSWriteOnly = val;
+  }
+  public boolean hasHDFSWriteOnly()
+  {
+    return this.hasHDFSWriteOnly;
+  }

INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS29 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS42 INS9 INS42 INS9 INS42 INS9 INS65 INS65 INS42 INS9 INS41 INS41 INS39 INS42 INS21 INS39 INS42 INS21 UPD34 INS41 INS39 INS42 INS21 INS39 INS42 INS21 INS41 INS66 INS66 INS22 INS22 INS7 INS7 INS22 INS7 INS7 INS22 INS52 INS42 INS52 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42