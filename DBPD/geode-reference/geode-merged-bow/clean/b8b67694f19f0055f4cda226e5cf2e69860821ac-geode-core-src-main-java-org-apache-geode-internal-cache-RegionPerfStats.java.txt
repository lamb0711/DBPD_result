Merge branch 'develop' into feature/GEODE-7049

-import java.util.function.LongSupplier;
-
-import org.apache.geode.internal.NanoTimer;
+import org.apache.geode.internal.statistics.StatisticsClock;
-class RegionPerfStats extends CachePerfStats {
+class RegionPerfStats extends CachePerfStats implements RegionStats {
+  private final StatisticsClock clock;
-      InternalRegion region,
-      MeterRegistry meterRegistry) {
-    this(statisticsFactory, textId, createClock(), cachePerfStats, region,
+      InternalRegion region, MeterRegistry meterRegistry, StatisticsClock clock) {
+    this(statisticsFactory, textId, clock, cachePerfStats, region,
-  RegionPerfStats(StatisticsFactory statisticsFactory, String textId, LongSupplier clock,
-      CachePerfStats cachePerfStats,
-      InternalRegion region, MeterRegistry meterRegistry) {
+  RegionPerfStats(StatisticsFactory statisticsFactory, String textId, StatisticsClock clock,
+      CachePerfStats cachePerfStats, InternalRegion region,
+      MeterRegistry meterRegistry) {
+    this.clock = clock;
-    entriesGauge = Gauge.builder("member.region.entries", region::getLocalSize)
+    entriesGauge = Gauge.builder("geode.cache.entries", region::getLocalSize)
-        .tag("region.name", region.getName())
+        .tag("region", region.getName())
-  private static LongSupplier createClock() {
-    return enableClockStats ? NanoTimer::getTime : () -> 0;
-  }
-
-  /**
-   * @return the timestamp that marks the start of the operation
-   */
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    // should not be disabled by enableClockStats==false
+    // should not be disabled by clock.isEnabled()==false
-  /**
-   * @return the timestamp that marks the start of the operation
-   */
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  /**
-   * @return the timestamp that marks the start of the operation
-   */
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    // not be disabled by enableClockStats==false
+    // not be disabled by clock.isEnabled()==false
-  /**
-   * @return the timestamp that marks the start of the operation
-   */
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  /**
-   * @return the timestamp that marks the start of the operation
-   * @since GemFire 3.5
-   */
-  /**
-   * @param start the timestamp taken when the operation started
-   * @since GemFire 3.5
-   */
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  /**
-   * @return the timestamp that marks the start of the operation
-   */
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  /**
-   * @param start the timestamp taken when the operation started
-   */
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  /**
-   * @param start the timestamp taken when the operation started
-   * @param isUpdate true if the put was an update (origin remote)
-   */
-      if (enableClockStats) {
+      if (clock.isEnabled()) {
-      if (enableClockStats) {
+      if (clock.isEnabled()) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-  protected void incEventQueueThrottleTime(long nanos) {
+  public void incEventQueueThrottleTime(long nanos) {
-  protected void incEventThreads(int items) {
+  public void incEventThreads(int items) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {
-    if (enableClockStats) {
+    if (clock.isEnabled()) {

UPD40 INS43 INS23 INS42 INS83 INS83 INS43 INS59 INS44 UPD83 UPD83 UPD42 MOV42 INS42 INS43 INS42 UPD43 INS21 INS25 MOV25 INS42 INS42 UPD42 INS7 INS32 INS32 INS32 INS32 MOV8 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS32 INS42 INS42 INS42 INS42 UPD45 UPD45 DEL40 DEL26 DEL42 DEL32 DEL83 DEL83 DEL43 DEL42 DEL42 DEL42 DEL42 DEL90 DEL34 DEL86 DEL16 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL25 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42