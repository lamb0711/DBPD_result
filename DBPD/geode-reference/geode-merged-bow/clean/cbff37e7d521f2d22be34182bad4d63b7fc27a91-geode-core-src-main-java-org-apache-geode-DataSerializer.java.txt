GEODE-2127 old client support service is not set up to handle arrays

Array classes start with some number of left-brackets ("[") followed by
"L" and the name of the class the array contains.  This adds a unit test
for arrays and adds support for handling them in OldClientSupportProvider.

-import org.apache.geode.internal.cache.tier.sockets.OldClientSupportService;
-      cname = swizzleClassNameForWrite(cname, out);
+      cname = InternalDataSerializer.processOutgoingClassName(cname, out);
-    writeString(swizzleClassNameForWrite(className, out), out);
+    writeString(InternalDataSerializer.processOutgoingClassName(className, out), out);
-      className = swizzleClassNameForRead(className, in);
-   * For backward compatibility we must swizzle the package of some classes that had to be moved
-   * when GemFire was open- sourced. This preserves backward-compatibility.
-   * 
-   * @param name the fully qualified class name
-   * @param in the source of the class name
-   * @return the name of the class in this implementation
-   */
-  private static String swizzleClassNameForRead(String name, DataInput in) {
-    // TCPServer classes are used before a cache exists and support for old clients has been
-    // initialized
-    String oldPackage = "com.gemstone.org.jgroups.stack.tcpserver";
-    String newPackage = "org.apache.geode.distributed.internal.tcpserver";
-    if (name.startsWith(oldPackage)) {
-      return newPackage + name.substring(oldPackage.length());
-    }
-    OldClientSupportService svc = InternalDataSerializer.getOldClientSupportService();
-    if (svc != null) {
-      return svc.processIncomingClassName(name, in);
-    }
-    return name;
-  }
-
-  /**
-   * For backward compatibility we must swizzle the package of some classes that had to be moved
-   * when GemFire was open- sourced. This preserves backward-compatibility.
-   * 
-   * @param name the fully qualified class name
-   * @param out the consumer of the serialized object
-   * @return the name of the class in this implementation
-   */
-  private static String swizzleClassNameForWrite(String name, DataOutput out) {
-    // TCPServer classes are used before a cache exists and support for old clients has been
-    // initialized
-    String oldPackage = "com.gemstone.org.jgroups.stack.tcpserver";
-    String newPackage = "org.apache.geode.distributed.internal.tcpserver";
-    if (name.startsWith(newPackage)) {
-      return oldPackage + name.substring(newPackage.length());
-    }
-    OldClientSupportService svc = InternalDataSerializer.getOldClientSupportService();
-    if (svc != null) {
-      return svc.processOutgoingClassName(name, out);
-    }
-    return name;
-  }
-
-  /**
-    return swizzleClassNameForRead(readString(in), in);
+    return InternalDataSerializer.processIncomingClassName(readString(in));

MOV32 UPD42 UPD42 INS42 UPD42 INS42 UPD42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31