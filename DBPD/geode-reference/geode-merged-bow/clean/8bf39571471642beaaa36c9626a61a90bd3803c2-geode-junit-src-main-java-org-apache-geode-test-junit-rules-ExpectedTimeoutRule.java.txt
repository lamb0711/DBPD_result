Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-  
+
+
+
-   * Adds to the list of requirements for any thrown exception that it should
-   * be an instance of {@code type}.
+   * Adds to the list of requirements for any thrown exception that it should be an instance of
+   * {@code type}.
-   * Adds to the list of requirements for any thrown exception that it should
-   * <em>contain</em> string {@code substring}
+   * Adds to the list of requirements for any thrown exception that it should <em>contain</em>
+   * string {@code substring}
-   * Adds {@code matcher} to the list of requirements for the message returned
-   * from any thrown exception.
+   * Adds {@code matcher} to the list of requirements for the message returned from any thrown
+   * exception.
-   * Adds {@code matcher} to the list of requirements for the cause of
-   * any thrown exception.
+   * Adds {@code matcher} to the list of requirements for the cause of any thrown exception.
-  
+
-  
+
-      assertThat(this.timeUnit.convert(duration, TimeUnit.NANOSECONDS), new TimeMatcher(this.timeUnit, this.minDuration, this.maxDuration));
+      assertThat(this.timeUnit.convert(duration, TimeUnit.NANOSECONDS),
+          new TimeMatcher(this.timeUnit, this.minDuration, this.maxDuration));
-  
+
-    
+
- 
+
- 
+
-          .appendValue(this.minDuration)
-          .appendText(" and less than or equal to ")
-          .appendValue(this.maxDuration)
-          .appendText(" ")
-          .appendValue(this.timeUnit);
+          .appendValue(this.minDuration).appendText(" and less than or equal to ")
+          .appendValue(this.maxDuration).appendText(" ").appendValue(this.timeUnit);
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66