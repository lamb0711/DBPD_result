GEODE-2619: Lucene APIs unwrap function exception and throw the cause.

	* This is done so that users do not encounter Function Exceptions while executing Lucene APIs.

	This closes #434

+import org.apache.geode.cache.CacheClosedException;
+import org.apache.geode.internal.cache.PrimaryBucketException;
+import org.apache.geode.internal.cache.execute.InternalFunctionInvocationTargetException;
-    RegionFunctionContext ctx = (RegionFunctionContext) context;
-    Region region = PartitionRegionHelper.getLocalDataForContext(ctx);
-    Set<?> keys = ctx.getFilter();
-
-    List<PageEntry> results = new PageResults(keys.size());
-
-    for (Object key : keys) {
-      PageEntry entry = getEntry(region, key);
-      if (entry != null) {
-        results.add(entry);
+    try {
+      RegionFunctionContext ctx = (RegionFunctionContext) context;
+      Region region = PartitionRegionHelper.getLocalDataForContext(ctx);
+      Set<?> keys = ctx.getFilter();
+      List<PageEntry> results = new PageResults(keys.size());
+      for (Object key : keys) {
+        PageEntry entry = getEntry(region, key);
+        if (entry != null) {
+          results.add(entry);
+        }
+      ctx.getResultSender().lastResult(results);
+    } catch (CacheClosedException | PrimaryBucketException e) {
+      logger.debug("Exception during lucene query function", e);
+      throw new InternalFunctionInvocationTargetException(e);
-    ctx.getResultSender().lastResult(results);

INS26 INS26 INS26 INS40 INS40 INS40 INS8 INS54 MOV8 INS12 INS44 INS8 INS84 INS42 INS21 INS53 INS43 INS43 INS32 INS14 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS42 INS42