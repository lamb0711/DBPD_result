Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The HttpInvocationHandler class is an implementation of InvocationHandler serving as a proxy that uses HTTP remoting
- * for the actual method invocation on the target resource.
+ * The HttpInvocationHandler class is an implementation of InvocationHandler serving as a proxy that
+ * uses HTTP remoting for the actual method invocation on the target resource.
+ * 
-  public HttpInvocationHandler(final HttpOperationInvoker operationInvoker, final ObjectName objectName) {
+  public HttpInvocationHandler(final HttpOperationInvoker operationInvoker,
+      final ObjectName objectName) {
-    // the attribute accessor method name either begins with 'get' or 'is' as defined by the JMX specification
+    // the attribute accessor method name either begins with 'get' or 'is' as defined by the JMX
+    // specification
-  public Object invoke(final Object proxy, final Method method, final Object[] args) throws Throwable {
+  public Object invoke(final Object proxy, final Method method, final Object[] args)
+      throws Throwable {
-    }
-    else {
-      return getOperationInvoker().invoke(getResourceName(), method.getName(), args, getSignature(method));
+    } else {
+      return getOperationInvoker().invoke(getResourceName(), method.getName(), args,
+          getSignature(method));

UPD66 UPD66