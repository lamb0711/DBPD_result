Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
-   
+
+
-//import org.apache.geode.internal.admin.*;
+// import org.apache.geode.internal.admin.*;
-//import java.net.*;
-//import java.util.*;
+// import java.net.*;
+// import java.util.*;
+ * 
-  
-  /** An exception thrown while configuring the cache
-   *
-   * @since GemFire 4.0 */
-  private Exception exception;
-  
+
-   * Returns a <code>CacheConfigResponse</code> that will be returned to the
-   * specified recipient.
+   * An exception thrown while configuring the cache
+   *
+   * @since GemFire 4.0
-  public static CacheConfigResponse create(DistributionManager dm, InternalDistributedMember recipient, int cacheId, byte attributeCode, int newValue) {
+  private Exception exception;
+
+  /**
+   * Returns a <code>CacheConfigResponse</code> that will be returned to the specified recipient.
+   */
+  public static CacheConfigResponse create(DistributionManager dm,
+      InternalDistributedMember recipient, int cacheId, byte attributeCode, int newValue) {
-      GemFireCacheImpl c = (GemFireCacheImpl)CacheFactory.getInstanceCloseOk(dm.getSystem());
+      GemFireCacheImpl c = (GemFireCacheImpl) CacheFactory.getInstanceCloseOk(dm.getSystem());
-        case RemoteGemFireVM.LOCK_TIMEOUT_CODE:
-          c.setLockTimeout(newValue);
-          break;
-        case RemoteGemFireVM.LOCK_LEASE_CODE:
-          c.setLockLease(newValue);
-          break;
-        case RemoteGemFireVM.SEARCH_TIMEOUT_CODE:
-          c.setSearchTimeout(newValue);
-          break;
-        default:
-          Assert.assertTrue(false, "Unknown config code: " +
-                            attributeCode);
+          case RemoteGemFireVM.LOCK_TIMEOUT_CODE:
+            c.setLockTimeout(newValue);
+            break;
+          case RemoteGemFireVM.LOCK_LEASE_CODE:
+            c.setLockLease(newValue);
+            break;
+          case RemoteGemFireVM.SEARCH_TIMEOUT_CODE:
+            c.setSearchTimeout(newValue);
+            break;
+          default:
+            Assert.assertTrue(false, "Unknown config code: " + attributeCode);
-    } 
-    catch (CancelException ex) {
+    } catch (CancelException ex) {
-  
+
-   * Returns the exception that was thrown while changing the cache
-   * configuration.
+   * Returns the exception that was thrown while changing the cache configuration.
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    this.info = (RemoteCacheInfo)DataSerializer.readObject(in);
+    this.info = (RemoteCacheInfo) DataSerializer.readObject(in);

UPD66 UPD66 UPD66 DEL66 DEL66