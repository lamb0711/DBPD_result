Merge branch 'release/1.5.0'

-import org.apache.geode.StatisticsFactory;
-import org.apache.geode.StatisticsType;
-import org.apache.geode.cache.CacheCallback;
-import org.apache.geode.cache.Region;
+import org.apache.geode.internal.cache.BucketRegion;
-public interface EvictionController extends CacheCallback {
+public interface EvictionController {
-  int entrySize(Object key, Object value) throws IllegalArgumentException;
+  int entrySize(Object key, Object value);
-  /** setup stats for this LRU type, if reset is true, initialize counter on stats to zero. */
-  EvictionStatistics initStats(Object region, StatisticsFactory statsFactory);
-
-  EvictionStatistics getStatistics();
+  EvictionCounters getCounters();
-   * Returns the statistics for this LRU algorithm
-   */
-  StatisticsType getStatisticsType();
-
-  /**
-   * Returns the name of the statistics for this LRU algorithm
-   */
-  String getStatisticsName();
-
-  /**
-   * Returns the id of the "limit" statistic for this LRU algorithm's statistics
-   */
-  int getLimitStatId();
-
-  /**
-   * Returns the id of the "counter" statistic for this LRU algorithm's statistics.
-   */
-  int getCountStatId();
-
-  /**
-   * Returns the id of the "evictions" statistic for this LRU algorithm's statistics.
-   */
-  int getEvictionsStatId();
-
-  /**
-   * Returns the id of the "destroys" statistic for this LRU algorithm's statistics.
-   */
-  int getDestroysStatId();
-
-  /**
-   * Returns the id of the "destroysLimit" statistic for this LRU algorithm's statistics
-   */
-  int getDestroysLimitStatId();
-
-  /**
-   * Returns the id of the "evaluations" statistic for this LRU algorithm's statistics.
-   */
-  int getEvaluationsStatId();
-
-  /**
-   * Returns the id of the "greedyReturns" statistic for this LRU algorithm's statistics
-   *
-   * @return the id
-   */
-  int getGreedyReturnsStatId();
-
-  /**
-  boolean mustEvict(EvictionStatistics stats, InternalRegion region, int delta);
+  boolean mustEvict(EvictionCounters stats, InternalRegion region, int delta);
-  boolean lruLimitExceeded(EvictionStatistics stats, DiskRegionView diskRegionView);
-
-  void setBucketRegion(Region region);
+  boolean lruLimitExceeded(EvictionCounters stats, DiskRegionView diskRegionView);
+
+  void close();
+
+  void closeBucket(BucketRegion bucketRegion);
+
+  void setPerEntryOverhead(int entryOverhead);
+

MOV31 MOV31 MOV31 MOV31 UPD40 UPD43 UPD42 INS39 INS42 MOV44 UPD39 UPD42 UPD39 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD43 UPD42 INS39 INS42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL31 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL31 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42