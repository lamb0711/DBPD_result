GEODE-6984: Make OQL Security API Public (#4030)

- Addded javadocs for MethodInvocationAuthorizer.
- Fixed warnings and added Unit Tests for MethodDispatch.
- Fixed warnings and added Unit Tests for AttributeDescriptor.
- Moved 'MethodInvocationAuthorizer' and 'RestrictedMethodAuthorizer'
  from an internal package to a public one,
  'org.apache.geode.cache.query.security'.
-
+import static org.apache.geode.cache.query.security.RestrictedMethodAuthorizer.UNAUTHORIZED_STRING;
-
+import org.apache.geode.cache.query.security.MethodInvocationAuthorizer;
+import org.apache.geode.security.NotAuthorizedException;
- *
- * @version $Revision: 1.1 $
-
-      _methodInvocationAuthorizer.authorizeMethodInvocation(_method, target);
+      if (!_methodInvocationAuthorizer.authorize(_method, target)) {
+        throw new NotAuthorizedException(UNAUTHORIZED_STRING + _method.getName());
+      }
+
-          String.format(
-              "Method ' %s ' in class ' %s ' is not accessible to the query processor",
-              new Object[] {_method.getName(), target.getClass().getName()}),
+          String.format("Method ' %s ' in class ' %s ' is not accessible to the query processor",
+              _method.getName(), target.getClass().getName()),
-
-
-
-
-
-
-              new Object[] {_methodName, _targetClass.getName(), Arrays.asList(_argTypes)}));
+              _methodName, _targetClass.getName(), Arrays.asList(_argTypes)));
-
-
-
-              new Object[] {meth1.getName(), _targetClass.getName(),
-                  Arrays.asList(_argTypes)}));
+              meth1.getName(), _targetClass.getName(), Arrays.asList(_argTypes)));
-
-
-  protected boolean methodConvertible(Method m1, Method m2) {
+  private boolean methodConvertible(Method m1, Method m2) {
-
-
-      if (argTypes[i] != null && p1[i] != p2[i] && TypeUtils.isTypeConvertible(p1[i], p2[i])) // assumes
-                                                                                              // m1
-                                                                                              // is
-                                                                                              // <=
-                                                                                              // m2
-                                                                                              // in
-                                                                                              // specificity
+      // assumes m1 is <= m2 in specificity
+      if (argTypes[i] != null && p1[i] != p2[i] && TypeUtils.isTypeConvertible(p1[i], p2[i]))
+
-

INS26 INS26 INS26 INS40 INS40 INS40 UPD83 INS25 INS38 INS8 INS32 INS53 MOV32 MOV32 MOV32 MOV42 UPD42 MOV42 MOV42 MOV42 INS14 INS42 MOV32 MOV32 INS43 INS27 MOV32 MOV32 INS42 INS42 INS32 INS42 INS42 DEL66 DEL65 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3