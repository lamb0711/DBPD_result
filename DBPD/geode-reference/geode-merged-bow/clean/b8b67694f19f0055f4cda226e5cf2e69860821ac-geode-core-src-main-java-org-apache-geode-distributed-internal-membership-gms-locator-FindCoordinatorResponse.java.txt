Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.distributed.internal.membership.NetView;
-import org.apache.geode.internal.DataSerializableFixedID;
-import org.apache.geode.internal.InternalDataSerializer;
-import org.apache.geode.internal.Version;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.distributed.internal.membership.gms.messages.AbstractGMSMessage;
+import org.apache.geode.internal.serialization.DataSerializableFixedID;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.StaticSerialization;
+import org.apache.geode.internal.serialization.Version;
-public class FindCoordinatorResponse extends HighPriorityDistributionMessage
+public class FindCoordinatorResponse extends AbstractGMSMessage
-  private InternalDistributedMember coordinator;
-  private InternalDistributedMember senderId;
+  private GMSMember coordinator;
+  private GMSMember senderId;
-  private NetView view;
-  private Set<InternalDistributedMember> registrants;
+  private GMSMembershipView view;
+  private Set<GMSMember> registrants;
-  public FindCoordinatorResponse(InternalDistributedMember coordinator,
-      InternalDistributedMember senderId, boolean fromView, NetView view,
-      HashSet<InternalDistributedMember> registrants, boolean networkPartitionDectionEnabled,
+  public FindCoordinatorResponse(GMSMember coordinator,
+      GMSMember senderId, boolean fromView, GMSMembershipView view,
+      HashSet<GMSMember> registrants, boolean networkPartitionDectionEnabled,
-  public FindCoordinatorResponse(InternalDistributedMember coordinator,
-      InternalDistributedMember senderId, byte[] pk, int requestId) {
+  public FindCoordinatorResponse(GMSMember coordinator,
+      GMSMember senderId, byte[] pk, int requestId) {
-  public InternalDistributedMember getCoordinator() {
+  public GMSMember getCoordinator() {
-  public InternalDistributedMember getSenderId() {
+  public GMSMember getSenderId() {
-  public NetView getView() {
+  public GMSMembershipView getView() {
-  public Set<InternalDistributedMember> getRegistrants() {
+  public Set<GMSMember> getRegistrants() {
-          + ", locators preferred as coordinators=" + this.usePreferredCoordinators + ")";
+          + ", locators preferred as coordinators=" + this.usePreferredCoordinators
+          + ", view=" + view + ")";
+  // TODO serialization not backward compatible with 1.9 - may need InternalDistributedMember, not
+  // GMSMember
-  public void toData(DataOutput out) throws IOException {
-    DataSerializer.writeObject(coordinator, out);
-    DataSerializer.writeObject(senderId, out);
-    InternalDataSerializer.writeByteArray(coordinatorPublicKey, out);
-    InternalDataSerializer.writeString(rejectionMessage, out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
+    GMSUtil.writeMemberID(coordinator, out, context);
+    GMSUtil.writeMemberID(senderId, out, context);
+    StaticSerialization.writeByteArray(coordinatorPublicKey, out);
+    StaticSerialization.writeString(rejectionMessage, out);
-    DataSerializer.writeObject(view, out);
-    InternalDataSerializer.writeSet(registrants, out);
+    context.getSerializer().writeObject(view, out);
+    GMSUtil.writeSetOfMemberIDs(registrants, out, context);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    coordinator = DataSerializer.readObject(in);
-    senderId = DataSerializer.readObject(in);
-    coordinatorPublicKey = InternalDataSerializer.readByteArray(in);
-    rejectionMessage = InternalDataSerializer.readString(in);
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
+    coordinator = GMSUtil.readMemberID(in, context);
+    senderId = GMSUtil.readMemberID(in, context);
+    coordinatorPublicKey = StaticSerialization.readByteArray(in);
+    rejectionMessage = StaticSerialization.readString(in);
-      view = DataSerializer.readObject(in);
-      registrants = InternalDataSerializer.readHashSet(in);
+      view = (GMSMembershipView) context.getDeserializer().readObject(in);
+      registrants = GMSUtil.readHashSetOfMemberIDs(in, context);
-  protected void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message should not be executed");
-  }
-
-  @Override

INS26 UPD40 UPD40 UPD40 UPD40 INS40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD43 UPD74 INS44 INS44 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 INS43 INS42 INS43 INS42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS32 UPD42 UPD42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS45 INS42 INS11 INS43 INS32 UPD42 UPD42 INS42 INS42 INS32 MOV42 MOV42 INS42 UPD42 MOV42 DEL32 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31