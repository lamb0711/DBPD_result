GEODE-4131: Do not reference deployed jars as byte arrays anymore (#1212)

* GEODE-4131: Do not reference deployed jars as byte arrays anymore

- All jars are streamed between locators and servers using the RMIIO library.
- Whenever an upload happens (either deploying jars or importing cluster
  config) we stage the files initially and then proceed with the command.
-import java.io.FileNotFoundException;
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.transform.TransformerException;
+
+import org.xml.sax.SAXException;
-  public Result importSharedConfig(@CliOption(key = {CliStrings.IMPORT_SHARED_CONFIG__ZIP},
-      mandatory = true, help = CliStrings.IMPORT_SHARED_CONFIG__ZIP__HELP) String zip) {
+  public Result importSharedConfig(
+      @CliOption(key = {CliStrings.IMPORT_SHARED_CONFIG__ZIP}, mandatory = true,
+          help = CliStrings.IMPORT_SHARED_CONFIG__ZIP__HELP) String zip)
+      throws IOException, TransformerException, SAXException, ParserConfigurationException {
-    byte[][] shellBytesData = CommandExecutionContext.getBytesFromShell();
-    String zipFileName = CliUtil.bytesToNames(shellBytesData)[0];
-    byte[] zipBytes = CliUtil.bytesToData(shellBytesData)[0];
+    List<String> filePathFromShell = CommandExecutionContext.getFilePathFromShell();
-    File zipFile = new File(zipFileName);
-    try {
-      ClusterConfigurationService sc = locator.getSharedConfiguration();
+    String zipFilePath = filePathFromShell.get(0);
-      // backup the old config
-      for (Configuration config : sc.getConfigurationRegion().values()) {
-        sc.writeConfigToFile(config);
-      }
-      sc.renameExistingSharedConfigDirectory();
+    ClusterConfigurationService sc = locator.getSharedConfiguration();
-      FileUtils.writeByteArrayToFile(zipFile, zipBytes);
-      ZipUtils.unzip(zipFileName, sc.getSharedConfigurationDirPath());
-
-      // load it from the disk
-      sc.loadSharedConfigurationFromDisk();
-      infoData.addLine(CliStrings.IMPORT_SHARED_CONFIG__SUCCESS__MSG);
-
-    } catch (Exception e) {
-      ErrorResultData errorData = ResultBuilder.createErrorResultData();
-      errorData.addLine("Import failed");
-      if (Gfsh.getCurrentInstance() != null) {
-        Gfsh.getCurrentInstance().logSevere(e.getMessage(), e);
-      }
-      result = ResultBuilder.buildResult(errorData);
-      // if import is unsuccessful, don't need to bounce the server.
-      return result;
-    } finally {
-      FileUtils.deleteQuietly(zipFile);
+    // backup the old config
+    for (Configuration config : sc.getConfigurationRegion().values()) {
+      sc.writeConfigToFile(config);
+    sc.renameExistingSharedConfigDirectory();
+
+    ZipUtils.unzip(zipFilePath, sc.getSharedConfigurationDirPath());
+
+    // load it from the disk
+    sc.loadSharedConfigurationFromDisk();
+    infoData.addLine(CliStrings.IMPORT_SHARED_CONFIG__SUCCESS__MSG);
-      FileResult fileResult;
+      FileResult fileResult = new FileResult();
-      try {
-        fileResult = new FileResult(new String[] {zip});
-      } catch (FileNotFoundException fnfex) {
-        return ResultBuilder.createUserErrorResult("'" + zip + "' not found.");
-      } catch (IOException ioex) {
-        return ResultBuilder
-            .createGemFireErrorResult(ioex.getClass().getName() + ": " + ioex.getMessage());
+      File zipFile = new File(zip);
+      if (!zipFile.exists()) {
+        return ResultBuilder.createUserErrorResult(zip + " not found");
+      fileResult.addFile(zipFile);
+

MOV26 INS26 INS26 INS40 UPD40 INS40 MOV43 INS43 INS43 INS43 MOV60 INS42 INS42 INS42 MOV60 MOV70 MOV21 MOV21 MOV21 MOV21 INS74 MOV60 INS25 INS21 INS43 MOV43 UPD42 UPD42 INS32 UPD42 MOV43 MOV43 INS38 INS8 INS32 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 INS34 INS14 INS32 MOV41 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV43 MOV43 UPD42 INS42 INS42 UPD45 DEL39 DEL85 DEL85 DEL5 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL2 DEL59 DEL60 DEL42 DEL32 DEL34 DEL2 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL41 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL45 DEL42 DEL85 DEL5 DEL42 DEL4 DEL3 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL32 DEL45 DEL42 DEL32 DEL27 DEL32 DEL41 DEL8 DEL12 DEL54