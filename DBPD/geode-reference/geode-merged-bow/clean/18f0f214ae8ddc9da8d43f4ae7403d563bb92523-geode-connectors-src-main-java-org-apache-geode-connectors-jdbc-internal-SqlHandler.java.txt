GEODE-6461: Report errors when table metadata and region mapping do not match (#3256)

Co-authored-by: Ben Ross <bross@pivotal.io>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen@pivotal.io>

-  private final TableMetaDataManager tableMetaDataManager;
+  private final TableMetaDataView tableMetaData;
-  private final Map<String, FieldMapping> jdbcToFieldMappings = new HashMap<>();
-    this.tableMetaDataManager = tableMetaDataManager;
+    this.tableMetaData = getTableMetaDataView(tableMetaDataManager);
+    cache.getService(JdbcConnectorService.class).validateMapping(regionMapping, dataSource);
+  private TableMetaDataView getTableMetaDataView(TableMetaDataManager tableMetaDataManager) {
+    try (Connection connection = getConnection()) {
+      return tableMetaDataManager.getTableMetaDataView(connection, regionMapping);
+    } catch (SQLException ex) {
+      throw new JdbcConnectorException("Could not connect to datasource \""
+          + regionMapping.getDataSourceName() + "\" because: " + ex);
+    }
+  }
+
-      this.jdbcToFieldMappings.put(fieldMapping.getJdbcName(), fieldMapping);
-      if (!fieldMapping.getPdxName().isEmpty()) {
-        this.pdxToFieldMappings.put(fieldMapping.getPdxName(), fieldMapping);
-      }
+      this.pdxToFieldMappings.put(fieldMapping.getPdxName(), fieldMapping);
-    FieldMapping exactMatch = this.pdxToFieldMappings.get(fieldName);
-    if (exactMatch != null) {
-      return exactMatch.getJdbcName();
+    FieldMapping match = this.pdxToFieldMappings.get(fieldName);
+    if (match != null) {
+      return match.getJdbcName();
-    exactMatch = this.jdbcToFieldMappings.get(fieldName);
-    if (exactMatch != null) {
-      this.pdxToFieldMappings.put(fieldName, exactMatch);
-      return exactMatch.getJdbcName();
-    }
-    FieldMapping inexactMatch = null;
-    for (FieldMapping fieldMapping : regionMapping.getFieldMappings()) {
-      if (fieldMapping.getJdbcName().equalsIgnoreCase(fieldName)) {
-        if (inexactMatch != null) {
-          throw new JdbcConnectorException(
-              "Multiple columns matched the pdx field \"" + fieldName + "\".");
-        }
-        inexactMatch = fieldMapping;
-      }
-    }
-    if (inexactMatch == null) {
-      throw new JdbcConnectorException("No column matched the pdx field \"" + fieldName + "\".");
-    }
-    this.pdxToFieldMappings.put(fieldName, inexactMatch);
-    return inexactMatch.getJdbcName();
+    return null;
-      TableMetaDataView tableMetaData =
-          this.tableMetaDataManager.getTableMetaDataView(connection, regionMapping);
-      TableMetaDataView tableMetaData =
-          this.tableMetaDataManager.getTableMetaDataView(connection, regionMapping);
-        if (!keyColumnNames.contains(columnName)) {
+        if (columnName == null || !keyColumnNames.contains(columnName)) {
+      if (columnName == null) {
+        // The user must have added a new field to their pdx domain class.
+        // To support PDX class versioning we will ignore this field.
+        continue;
+      }

MOV23 INS31 INS31 MOV43 MOV21 INS83 MOV43 INS42 INS44 INS8 MOV8 INS83 MOV43 INS42 MOV44 INS8 UPD42 INS21 INS43 INS42 INS54 INS70 MOV60 INS25 INS41 INS32 UPD42 MOV42 INS58 INS8 INS12 MOV44 MOV32 MOV8 UPD27 MOV27 INS8 INS33 INS32 INS32 INS42 INS42 INS42 INS43 INS59 INS41 INS44 INS8 UPD42 UPD42 MOV41 INS25 UPD42 INS42 INS42 INS42 INS42 INS57 UPD42 MOV42 INS42 INS32 INS32 UPD43 MOV43 UPD42 MOV42 MOV53 INS27 INS8 INS43 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS42 INS33 INS18 INS42 INS27 UPD45 INS32 UPD45 INS42 INS27 MOV38 INS42 INS42 INS42 INS33 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL74 DEL14 DEL59 DEL23 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL38 DEL25 DEL70 DEL8 DEL83 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60