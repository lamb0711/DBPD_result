GEODE-4059: Changing protobuf handshake to not need communication mode bytes

This closes pull request #1137

Squashed commit of the following:

commit d9f5144cd7f7ddcf42eb7eb5febed531cbf67362
Merge: 6fa9bf6c8 8fd707201
Author: Bruce Schuchardt <bschuchardt@pivotal.io>
Date:   Fri Dec 8 09:34:55 2017 -0800

    Merge branch 'feature/GEODE-4059' of https://github.com/WireBaron/geode into WireBaron-feature/GEODE-4059

commit 8fd707201f0e02b1fdf81c1596f93d3fd9ccb0cf
Author: Brian Rowe <browe@pivotal.io>
Date:   Thu Dec 7 14:53:28 2017 -0800

    Removing extra handshake from a unit test.

    Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>

commit 7d07c6f5163d99b92a12ca856a1b397fda6e0eb4
Author: Galen O'Sullivan <gosullivan@pivotal.io>
Date:   Wed Dec 6 16:20:25 2017 -0800

    GEODE-4059: Changing protobuf handshake to not need communication mode bytes

    - Moved handshake proto messages into top level handshake.proto
    - Changed protobuf communication mode to match leading byte of handshake
    - Updated handshake handler and tests to handle changes
    - Modified locator to accept protobuf communication mode in lieu of gossip

    Signed-off-by: Brian Rowe <browe@pivotal.io>

+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
-   * This indicates whether this specific state processor is able to handle handshake requests.
+   * Allow the state processor to take over the entire processing of a given message.
-   * @return specialized ConnectionHandshakingStateProcessor interface implementation which can move
-   *         to a new state
-   * @throws ConnectionStateException if unable to handle handshakes in this state.
+   * @return - True if the message has been handled by the state processor, false to continue normal
+   *         processing.
-  default ConnectionHandshakingStateProcessor allowHandshake() throws ConnectionStateException {
-    throw new ConnectionStateException(ProtocolErrorCode.UNSUPPORTED_OPERATION,
-        "Requested operation not allowed at this time");
+  default boolean handleMessageIndependently(InputStream inputStream, OutputStream outputStream,
+      MessageExecutionContext executionContext) throws IOException {
+    return false;

INS26 INS26 INS26 INS40 INS40 INS40 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 UPD42 MOV42 INS41 UPD66 UPD66 UPD66 UPD42 MOV42 INS42 UPD42 MOV42 INS9 DEL42 DEL66 DEL65 DEL43 DEL42 DEL43 DEL43 DEL40 DEL45 DEL14 DEL53 DEL8