GEODE-420: Renaming of SecurableComponents to SecurableCommunicationChannel
Renaming of HTTP_SERVICE -> WEB

+import com.gemstone.gemfire.internal.security.SecurableCommunicationChannel;
-  private Map<SecurableComponent, SSLConfig> registeredSSLConfig = new HashMap<>();
+  private Map<SecurableCommunicationChannel, SSLConfig> registeredSSLConfig = new HashMap<>();
-  public static SSLConfig getSSLConfigForComponent(SecurableComponent sslEnabledComponent) {
+  public static SSLConfig getSSLConfigForComponent(SecurableCommunicationChannel sslEnabledComponent) {
-  private synchronized void registeredSSLConfigForComponent(final SecurableComponent sslEnabledComponent, final SSLConfig sslConfig) {
+  private synchronized void registeredSSLConfigForComponent(final SecurableCommunicationChannel sslEnabledComponent, final SSLConfig sslConfig) {
-  private SSLConfig createSSLConfigForComponent(final SecurableComponent sslEnabledComponent) {
+  private SSLConfig createSSLConfigForComponent(final SecurableCommunicationChannel sslEnabledComponent) {
-    SecurableComponent[] sslEnabledComponents = getDistributionConfig().getSSLEnabledComponents();
+    SecurableCommunicationChannel[] sslEnabledComponents = getDistributionConfig().getSecurableCommunicationChannels();
-    sslConfig.setSslEnabledComponent(sslEnabledComponent);
+    sslConfig.setSecurableCommunicationChannel(sslEnabledComponent);
-        createSSLConfigForComponent(SecurableComponent.HTTP_SERVICE);
+        createSSLConfigForComponent(SecurableCommunicationChannel.WEB);
-      case HTTP_SERVICE: {
+      case WEB: {
-  private SSLConfig createSSLConfig(final SecurableComponent sslEnabledComponent) {
+  private SSLConfig createSSLConfig(final SecurableCommunicationChannel sslEnabledComponent) {
-  private boolean determineIfSSLEnabledForSSLComponent(final SecurableComponent sslEnabledComponent) {
-    if (ArrayUtils.contains(getDistributionConfig().getSSLEnabledComponents(), SecurableComponent.NONE)) {
+  private boolean determineIfSSLEnabledForSSLComponent(final SecurableCommunicationChannel sslEnabledComponent) {
+    if (ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(), SecurableComponent.NONE)) {
-    if (ArrayUtils.contains(getDistributionConfig().getSSLEnabledComponents(), SecurableComponent.ALL)) {
+    if (ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(), SecurableComponent.ALL)) {
-    return ArrayUtils.contains(getDistributionConfig().getSSLEnabledComponents(), sslEnabledComponent) ? true : false;
+    return ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(), sslEnabledComponent) ? true : false;
-  private SSLConfig getRegisteredSSLConfigForComponent(final SecurableComponent sslEnabledComponent) {
+  private SSLConfig getRegisteredSSLConfigForComponent(final SecurableCommunicationChannel sslEnabledComponent) {

INS26 INS40 UPD74 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD5 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD40 UPD42