Merge branch 'release/1.8.0'

-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
-import org.apache.geode.internal.cache.xmlcache.CacheCreation;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
+import org.apache.geode.internal.cache.xmlcache.RegionCreation;
-  CONNECTION_SERVICE("connector-service") {
+  JDBC_MAPPING("mapping") {
-      if (!(stack.peek() instanceof CacheCreation)) {
+      if (!(stack.peek() instanceof RegionCreation)) {
-            "jdbc <connector-service> elements must occur within <cache> elements");
+            "<jdbc:mapping> elements must occur within <region> elements");
-      CacheCreation cacheCreation = (CacheCreation) stack.peek();
-      JdbcServiceConfiguration serviceConfig = new JdbcServiceConfiguration();
-      cacheCreation.getExtensionPoint().addExtension(serviceConfig);
-      stack.push(serviceConfig);
-    }
-
-    @Override
-    void endElement(Stack<Object> stack) {
-      stack.pop();
-    }
-  },
-  CONNECTION("connection") {
-    @Override
-    void startElement(Stack<Object> stack, Attributes attributes) {
-      if (!(stack.peek() instanceof JdbcServiceConfiguration)) {
-        throw new CacheXmlException(
-            "jdbc <connection> elements must occur within <connector-service> elements");
-      }
-      ConnectorService.Connection connection = new ConnectorService.Connection();
-      connection.setName(attributes.getValue(JdbcConnectorServiceXmlParser.NAME));
-      connection.setUrl(attributes.getValue(JdbcConnectorServiceXmlParser.URL));
-      connection.setUser(attributes.getValue(JdbcConnectorServiceXmlParser.USER));
-      connection.setPassword(attributes.getValue(JdbcConnectorServiceXmlParser.PASSWORD));
-      connection.setParameters(parseParameters(attributes));
-      stack.push(connection);
-    }
-
-    private String[] parseParameters(Attributes attributes) {
-      String[] result = null;
-      String value = attributes.getValue(JdbcConnectorServiceXmlParser.PARAMETERS);
-      if (value != null) {
-        result = value.split(",");
-      }
-      return result;
-    }
-
-    @Override
-    void endElement(Stack<Object> stack) {
-      ConnectorService.Connection config = (ConnectorService.Connection) stack.pop();
-      JdbcServiceConfiguration connectorService = (JdbcServiceConfiguration) stack.peek();
-      connectorService.addConnectionConfig(config);
-    }
-  },
-  REGION_MAPPING("region-mapping") {
-    @Override
-    void startElement(Stack<Object> stack, Attributes attributes) {
-      if (!(stack.peek() instanceof JdbcServiceConfiguration)) {
-        throw new CacheXmlException(
-            "jdbc <region-mapping> elements must occur within <connector-service> elements");
-      }
-      ConnectorService.RegionMapping mapping = new ConnectorService.RegionMapping();
-      mapping.setRegionName(attributes.getValue(JdbcConnectorServiceXmlParser.REGION));
+      RegionCreation regionCreation = (RegionCreation) stack.peek();
+      RegionMapping mapping = new RegionMapping();
+      mapping.setRegionName(regionCreation.getFullPath().substring(1));
-      mapping.setPdxClassName(attributes.getValue(JdbcConnectorServiceXmlParser.PDX_CLASS));
-      mapping.setPrimaryKeyInValue(
-          Boolean.valueOf(attributes.getValue(JdbcConnectorServiceXmlParser.PRIMARY_KEY_IN_VALUE)));
+      mapping.setPdxName(attributes.getValue(JdbcConnectorServiceXmlParser.PDX_NAME));
-      ConnectorService.RegionMapping mapping = (ConnectorService.RegionMapping) stack.pop();
-      JdbcServiceConfiguration connectorService = (JdbcServiceConfiguration) stack.peek();
-      connectorService.addRegionMapping(mapping);
+      RegionMapping mapping = (RegionMapping) stack.pop();
+      RegionCreation regionCreation = (RegionCreation) stack.peek();
+      regionCreation.getExtensionPoint().addExtension(new RegionMappingConfiguration(mapping));
-  },
-  FIELD_MAPPING("field-mapping") {
-    @Override
-    void startElement(Stack<Object> stack, Attributes attributes) {
-      if (!(stack.peek() instanceof ConnectorService.RegionMapping)) {
-        throw new CacheXmlException(
-            "jdbc <field-mapping> elements must occur within <region-mapping> elements");
-      }
-      ConnectorService.RegionMapping mapping = (ConnectorService.RegionMapping) stack.peek();
-      mapping.getFieldMapping()
-          .add(new ConnectorService.RegionMapping.FieldMapping(
-              attributes.getValue(JdbcConnectorServiceXmlParser.FIELD_NAME),
-              attributes.getValue(JdbcConnectorServiceXmlParser.COLUMN_NAME)));
-    }
-
-    @Override
-    void endElement(Stack<Object> stack) {}

UPD40 UPD40 UPD42 UPD45 MOV31 MOV78 MOV44 MOV25 MOV60 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 INS42 INS32 UPD42 INS42 UPD42 UPD42 UPD42 INS32 UPD42 INS14 UPD43 UPD43 MOV32 INS42 INS34 UPD40 UPD43 UPD43 UPD42 MOV42 INS42 INS43 INS42 UPD43 UPD45 UPD42 INS42 UPD42 UPD42 INS42 UPD42 INS42 UPD42 DEL42 DEL45 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL72 DEL42 DEL45 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL36 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL40 DEL43 DEL42 DEL40 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL45 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL1 DEL72 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL36 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL40 DEL40 DEL40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL32 DEL21 DEL42 DEL78 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL40 DEL40 DEL42 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL45 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL40 DEL43 DEL62 DEL36 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL40 DEL43 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL14 DEL32 DEL21 DEL8 DEL31 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL8 DEL31 DEL1 DEL72