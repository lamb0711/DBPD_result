GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-import java.util.Properties;
-
+import org.apache.geode.distributed.internal.SecurityConfig;
+import org.apache.geode.security.GemFireSecurityException;
+import java.util.Properties;
+
-    return GemFireCacheImpl.create(system, existingOk, cacheConfig);
+    return GemFireCacheImpl.create((InternalDistributedSystem) system, existingOk, cacheConfig);
+        validateUsabilityOfSecurityCallbacks(ds);
-        ds = DistributedSystem.connect(this.dsProps);
+        // use ThreadLocal to avoid exposing new User API in DistributedSystem
+        SecurityConfig.set(this.cacheConfig.getSecurityManager(),
+            this.cacheConfig.getPostProcessor());
+        try {
+          ds = DistributedSystem.connect(this.dsProps);
+        } finally {
+          SecurityConfig.remove();
+        }
-      return create(ds, true, cacheConfig);
+      return create(ds, true, this.cacheConfig);
+    }
+  }
+
+  /**
+   * Throws GemFireSecurityException if existing DistributedSystem connection cannot use specified
+   * SecurityManager or PostProcessor.
+   */
+  private void validateUsabilityOfSecurityCallbacks(DistributedSystem ds)
+      throws GemFireSecurityException {
+    if (ds == null) {
+      return;
+    }
+    // pre-existing DistributedSystem already has an incompatible SecurityService in use
+    if (this.cacheConfig.getSecurityManager() != null) {
+      // invalid configuration
+      throw new GemFireSecurityException(
+          "Existing DistributedSystem connection cannot use specified SecurityManager");
+    }
+    if (this.cacheConfig.getPostProcessor() != null) {
+      // invalid configuration
+      throw new GemFireSecurityException(
+          "Existing DistributedSystem connection cannot use specified PostProcessor");
-   * sets the securityManager for the cache. If this securityManager is set. It will override the
+   * Sets the securityManager for the cache. If this securityManager is set, it will override the
-   * sets the postProcessor for the cache. If this postProcessor is set. It will override thie
+   * Sets the postProcessor for the cache. If this postProcessor is set, it will override the

MOV26 INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS43 INS42 INS42 INS25 INS25 INS25 MOV65 MOV65 INS66 INS66 INS42 INS27 INS8 INS27 INS8 INS27 INS8 UPD66 UPD66 INS11 INS42 INS33 INS41 INS32 INS33 INS53 INS32 INS33 INS53 INS43 INS42 INS8 INS22 INS42 INS14 INS22 INS42 INS14 INS42 INS21 INS21 INS54 INS22 INS52 INS42 INS43 INS45 INS52 INS42 INS43 INS45 INS32 INS32 MOV8 INS8 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS22 INS42 INS22 INS42 INS32 INS52 INS42 INS52 INS42 INS42 INS42 DEL42 DEL42