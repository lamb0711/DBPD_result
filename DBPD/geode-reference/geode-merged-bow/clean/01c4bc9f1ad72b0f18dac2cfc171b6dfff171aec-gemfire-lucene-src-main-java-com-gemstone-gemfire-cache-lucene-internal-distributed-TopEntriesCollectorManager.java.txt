GEODE-11: Refactor CollectorManager interface

CollectorManager creates new collectors and merges results of the collectors.
Earlier the merge result type could be different from the collector type.
CollectorManager could actually use a collector itself to merge the results.
That way the actions on members and search coordinator will be the same.

https://reviews.apache.org/r/38320/

-public class TopEntriesCollectorManager implements CollectorManager<TopEntries, TopEntriesCollector> {
+public class TopEntriesCollectorManager implements CollectorManager<TopEntriesCollector> {
-  
+  final String id;
+
-    this(LuceneQueryFactory.DEFAULT_LIMIT);
+    this(null, 0);
-  
-  public TopEntriesCollectorManager(int resultLimit) {
-    this.limit = resultLimit;
-    logger.debug("Max count of entries to be returned: " + limit);
+
+  public TopEntriesCollectorManager(String id) {
+    this(id, 0);
+  }
+
+  public TopEntriesCollectorManager(String id, int resultLimit) {
+    this.limit = resultLimit < 0 ? LuceneQueryFactory.DEFAULT_LIMIT : resultLimit;
+    this.id = id == null ? String.valueOf(this.hashCode()) : id;
+    logger.debug("Max count of entries to be produced by {} is {}", id, limit);
-  public TopEntries reduce(Collection<IndexResultCollector> collectors) throws IOException {
+  public TopEntriesCollector reduce(Collection<TopEntriesCollector> collectors) throws IOException {
-    TopEntries mergedResult = new TopEntries();
+    TopEntriesCollector mergedResult = new TopEntriesCollector(id, limit);
-      if (logger.isDebugEnabled()) {
-        logger.debug("Number of entries found in bucket {} is {}", collector.getName(), collector.size());
-      }
+      logger.debug("Number of entries found in collector {} is {}", collector.getName(), collector.size());
-        entryListsPriorityQueue.add(((TopEntriesCollector)collector).getEntries().getHits());
+        entryListsPriorityQueue.add(((TopEntriesCollector) collector).getEntries().getHits());
-      mergedResult.addHit(entry);
+      mergedResult.collect(entry);
+    logger.debug("Reduced size of {} is {}", mergedResult.name, mergedResult.size());

UPD74 INS23 INS31 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS44 UPD43 INS42 INS42 INS43 INS42 INS17 INS43 INS42 INS21 UPD42 UPD74 INS21 INS33 INS34 INS42 INS42 INS34 INS42 INS7 UPD43 UPD43 MOV8 INS32 INS16 INS22 INS16 INS45 INS42 INS42 UPD42 UPD42 MOV25 INS42 INS42 INS45 INS40 INS32 INS27 INS40 INS42 INS52 INS42 INS27 INS32 INS42 UPD43 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS33 INS42 INS42 INS32 UPD42 UPD45 UPD42 INS52 INS42 DEL42 DEL43 DEL40 DEL42 DEL45 DEL42 DEL27 DEL42 DEL42 DEL32 DEL25 DEL8