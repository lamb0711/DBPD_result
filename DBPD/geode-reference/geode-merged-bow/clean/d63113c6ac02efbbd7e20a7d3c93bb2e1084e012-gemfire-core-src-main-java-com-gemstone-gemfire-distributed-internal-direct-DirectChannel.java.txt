Merge branch 'feature/GEODE-77' into develop

Conflicts:
	gemfire-core/src/test/java/com/gemstone/gemfire/cache/management/MemoryThresholdsOffHeapDUnitTest.java

+import java.util.Map;
+import com.gemstone.gemfire.CancelCriterion;
+import com.gemstone.gemfire.i18n.StringId;
-import com.gemstone.org.jgroups.util.StringId;
+     * Returns the endpoint ID for the direct channel
+     */
+    public Stub getLocalStub() {
+      return conduit.getId();
+    }
+    
+    /**
+    
+    /**
+     * Returns the cancel criterion for the channel,
+     * which will note if the channel is abnormally
+     * closing
+     */
+    public CancelCriterion getCancelCriterion() {
+      return conduit.getCancelCriterion();
+    }
-      this.address = initAddress(dm);
+      this.address = initAddress(dm, dc);
-        if (logger.isTraceEnabled(LogMarker.DM)) {
-          logger.trace(LogMarker.DM, "{}{}) to {} peers ({}) via tcp/ip",
+        if (logger.isDebugEnabled()) {
+          logger.debug("{}{}) to {} peers ({}) via tcp/ip",
-  private InetAddress initAddress(DistributedMembershipListener dm) {
+  private InetAddress initAddress(DistributedMembershipListener dm, DistributionConfig dc) {
-    String bindAddress = System.getProperty("gemfire.jg-bind-address");
+    String bindAddress = dc.getBindAddress();
-    Stub stub = new Stub(addr.getIpAddress(), port, addr.getVmViewId());
+    Stub stub = new Stub(addr.getInetAddress(), port, addr.getVmViewId());
-  public void waitForChannelState(Stub member, HashMap channelState)
+  public void waitForChannelState(Stub member, Map channelState)

MOV26 INS26 INS26 INS40 INS40 UPD40 INS31 INS31 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS44 INS65 INS42 INS41 INS65 INS42 INS41 INS43 INS42 UPD43 INS66 INS32 INS66 INS66 INS66 INS32 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL40 DEL45