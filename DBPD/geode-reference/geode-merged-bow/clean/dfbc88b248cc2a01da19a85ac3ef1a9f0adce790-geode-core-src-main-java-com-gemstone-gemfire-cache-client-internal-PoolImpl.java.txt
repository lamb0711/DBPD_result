Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

-import com.gemstone.gemfire.internal.DummyStatisticsFactory;
+import com.gemstone.gemfire.internal.statistics.DummyStatisticsFactory;
-  public boolean getKeepAlive(){
-      return this.keepAlive;
-  }
-  
+      this.keepAlive = keepAlive;
-   * TODO - The use of the this method should be removed
-   * from the gateway code. This method is fine for tests,
-   * but these connections should really be managed inside
-   * the pool code. If the gateway needs to persistent connection
-   * to a single server, which should create have the OpExecutor
-   * that holds a reference to the connection (similar to the way
-   * we do with thread local connections).
-   * TODO use {@link ExecutablePool#setupServerAffinity(boolean)} for
-   * gateway code
+  public boolean getKeepAlive() {
+    GemFireCacheImpl cache = GemFireCacheImpl.getInstance();
+    if(cache == null) {
+      return keepAlive;
+    }
+
+    return cache.keepDurableSubscriptionsAlive();
+  }
+

UPD40 INS31 INS83 INS39 INS42 INS8 INS60 INS25 INS41 INS43 INS59 INS27 INS8 INS32 INS21 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS7 INS42 INS42 INS42 MOV22 INS42 DEL83 DEL39 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL42 DEL42 DEL39 DEL69 DEL68 DEL65 DEL66 DEL66