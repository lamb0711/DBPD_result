Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import com.gemstone.gemfire.internal.DummyStatisticsImpl;
+import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
-  private static FunctionStats disabledStats ;
+  private final static FunctionStats dummy = createDummy();
-    InternalDistributedSystem iDS = InternalDistributedSystem.getAnyInstance();
-    this._stats = iDS.createAtomicStatistics(this._type);
-    aggregateStats = iDS.getFunctionServiceStats();
+    this._stats = new DummyStatisticsImpl(this._type, null, 0);
+    this.aggregateStats = FunctionServiceStats.createDummy();
+  }
+
+  static FunctionStats createDummy() {
+    return new FunctionStats();
-  
-
-//  // /////////////////// Instance Methods /////////////////////
-//
-//  public FunctionStats(Statistics statistics) {
-//    this._stats = statistics;
-//  }
-
-
-  
-  public static FunctionStats getFunctionStats(String functionID,
-      InternalDistributedSystem ds) {
-    boolean statsDisabled = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "statsDisabled");
-    if (statsDisabled) {
-      if(disabledStats == null){
-        disabledStats = new FunctionStats();
-      }
-      return disabledStats;
-    }
-   else {
-      if (ds == null) {
-        ds = InternalDistributedSystem.getAnyInstance();
-      }
+  public static FunctionStats getFunctionStats(String functionID, InternalDistributedSystem ds) {
+    if (isDisabled()) {
+      return dummy;
+    } else {
+
+  public static FunctionStats getFunctionStats(String functionID) {
+    if (isDisabled()) {
+      return dummy;
+    } else {
+      InternalDistributedSystem ds = InternalDistributedSystem.getAnyInstance();
+      return ds.getFunctionStats(functionID);
+    }
+  }
+
+  private static boolean isDisabled() {
+    return Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "statsDisabled");
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS83 INS83 INS43 INS42 MOV8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS8 UPD42 INS32 INS42 INS41 INS25 INS42 INS43 INS42 INS25 INS41 INS42 MOV14 INS32 INS8 MOV8 INS42 INS32 INS8 MOV8 MOV32 INS14 INS22 INS42 INS41 INS41 INS42 INS41 INS60 INS43 MOV22 INS33 INS34 INS52 INS42 UPD42 UPD42 INS42 INS32 INS42 MOV43 INS59 INS42 INS42 INS42 INS42 INS42 MOV32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL25 DEL42 DEL41 DEL39 DEL42 DEL59 DEL60 DEL42 DEL25 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL8 DEL25