Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.Version;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.StaticSerialization;
+import org.apache.geode.internal.serialization.Version;
-public class SuspectMembersMessage extends HighPriorityDistributionMessage {
+public class SuspectMembersMessage extends AbstractGMSMessage {
-  public SuspectMembersMessage(List<InternalDistributedMember> recipients, List<SuspectRequest> s) {
+  public SuspectMembersMessage(List<GMSMember> recipients, List<SuspectRequest> s) {
-  @Override
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
-  }
-
-  public void toData(DataOutput out) throws IOException {
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
-        DataSerializer.writeObject(sr.getSuspectMember(), out);
-        DataSerializer.writeString(sr.getReason(), out);
+        GMSUtil.writeMemberID(sr.getSuspectMember(), out, context);
+        StaticSerialization.writeString(sr.getReason(), out);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
-          (InternalDistributedMember) DataSerializer.readObject(in), DataSerializer.readString(in));
+          GMSUtil.readMemberID(in, context), StaticSerialization.readString(in));

INS26 UPD40 UPD40 UPD40 UPD40 INS40 UPD40 UPD43 UPD42 INS44 INS44 UPD74 INS43 INS42 INS43 INS42 UPD43 INS42 INS42 UPD42 MOV43 MOV43 INS32 UPD42 UPD42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 UPD42 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31 DEL42 DEL43 DEL32 DEL11