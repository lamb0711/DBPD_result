GEODE-7456: Moving GMSMembershipManager into gms package (#4313)

Adding a Distribution class that ClusterDistributionManager and the
rest of geode-core uses, which wraps GMSMembershipManager. Moving
GMSMembershipManager into the gms package and renaming to MembershipImpl.

Distribution now owns the DirectChannel, rather than MembershipImpl.

Removing the MembershipManager interface and replacing uses of it with the
Membership interface.

* Added an ArchUnitTest for geode-core to only use Distribution to access Membership.

-import static org.apache.geode.distributed.internal.membership.adapter.SocketCreatorAdapter.asTcpSocketCreator;
-import org.apache.geode.distributed.internal.membership.MembershipManager;
-import org.apache.geode.distributed.internal.membership.adapter.ServiceConfig;
-import org.apache.geode.distributed.internal.membership.adapter.auth.GMSAuthenticator;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipBuilder;
-import org.apache.geode.distributed.internal.tcpserver.TcpClient;
+import org.apache.geode.distributed.internal.membership.gms.api.Membership;
-import org.apache.geode.internal.InternalDataSerializer;
-import org.apache.geode.internal.net.SocketCreatorFactory;
-import org.apache.geode.internal.security.SecurableCommunicationChannel;
- * The <code>DistributionManager</code> uses a {@link MembershipManager} to distribute
+ * The <code>DistributionManager</code> uses a {@link Membership} to distribute
+  private Distribution distribution;
-  private MembershipManager membershipManager;
-
-              if (distributionManager.getMembershipManager().verifyMember(m,
+              if (distributionManager.getDistribution().verifyMember(m,
-      membershipManager = MembershipBuilder.newMembershipBuilder(this)
-          .setAuthenticator(
-              new GMSAuthenticator(system.getSecurityProperties(), system.getSecurityService(),
-                  system.getSecurityLogWriter(), system.getInternalLogWriter()))
-          .setStatistics(stats)
-          .setMessageListener(this::handleIncomingDMsg)
-          .setMembershipListener(listener)
-          .setConfig(new ServiceConfig(transport, system.getConfig()))
-          .setSerializer(InternalDataSerializer.getDSFIDSerializer())
-          .setMemberIDFactory(new ClusterDistributionManagerIDFactory())
-          .setLocatorClient(new TcpClient(
-              asTcpSocketCreator(
-                  SocketCreatorFactory
-                      .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),
-              InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),
-              InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer()))
-          .create();
+      distribution = DistributionImpl
+          .createDistribution(this, transport, system, listener,
+              this::handleIncomingDMsg);
-      localAddress = membershipManager.getLocalMember();
-
-      membershipManager.postConnect();
+      localAddress = distribution.getLocalMember();
-      membershipManager.startEventProcessing();
+      distribution.startEventProcessing();
-          membershipManager.waitForEventProcessing();
+          distribution.waitForEventProcessing();
-    return membershipManager.getView().getMembers();
+    return distribution.getView().getMembers();
-    return membershipManager.testMulticast();
+    return distribution.testMulticast();
-      MembershipView v = membershipManager.getView();
+      MembershipView v = distribution.getView();
-    membershipManager.startEventProcessing();
+    distribution.startEventProcessing();
-    membershipManager.forceUDPMessagingForCurrentThread();
+    distribution.forceUDPMessagingForCurrentThread();
-    membershipManager.releaseUDPMessagingForCurrentThread();
+    distribution.releaseUDPMessagingForCurrentThread();
-    return membershipManager.getMembersNotShuttingDown();
+    return distribution.getMembersNotShuttingDown();
-    MembershipManager m = membershipManager;
+    Distribution m = distribution;
-    return membershipManager.doWithViewLocked((manager) -> {
+    return distribution.doWithViewLocked(() -> {
-      return manager.getMembersNotShuttingDown();
+      return distribution.getMembersNotShuttingDown();
-      if (membershipManager != null) {
-        membershipManager.setShutdown();
+      if (distribution != null) {
+        distribution.setShutdown();
-        if (membershipManager != null) {
+        if (distribution != null) {
-          membershipManager.disconnect(beforeJoined);
+          distribution.disconnect(beforeJoined);
-    return membershipManager.doWithViewLocked((manager) -> {
+    return distribution.doWithViewLocked(() -> {
-      return manager.getMembersNotShuttingDown();
+      return distribution.getMembersNotShuttingDown();
-    return membershipManager.getView().contains(id);
+    return distribution.getView().contains(id);
-    membershipManager.shutdownMessageReceived(theId, reason);
+    distribution.shutdownMessageReceived(theId, reason);
-    if (membershipManager == null) {
+    if (distribution == null) {
-    return membershipManager.send(destinations, content);
+    return distribution.send(destinations, content);
-    return membershipManager.getView().getMembers().stream()
+    return distribution.getView().getMembers().stream()
-  public MembershipManager getMembershipManager() {
+  public Distribution getDistribution() {
-    return membershipManager;
+    return distribution;
-    return membershipManager.getMembersNotShuttingDown().stream()
+    return distribution.getMembersNotShuttingDown().stream()
-    return membershipManager.getMembersNotShuttingDown().stream()
+    return distribution.getMembersNotShuttingDown().stream()

MOV23 UPD40 UPD43 MOV78 MOV78 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV52 INS42 MOV42 UPD42 MOV42 MOV90 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL14 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL43 DEL14 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL59 DEL42 DEL59