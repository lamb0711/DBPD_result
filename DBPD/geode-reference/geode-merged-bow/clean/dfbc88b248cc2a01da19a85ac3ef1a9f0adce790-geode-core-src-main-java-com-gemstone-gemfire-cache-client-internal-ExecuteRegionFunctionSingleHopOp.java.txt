Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

+import com.gemstone.gemfire.cache.CacheClosedException;
+import com.gemstone.gemfire.cache.execute.FunctionInvocationTargetException;
+import com.gemstone.gemfire.internal.cache.execute.BucketMovedException;
+            Exception exception = null;
-
-                  throw ex;
-
-                return null;
+                  exception = ex;
+              }
+              else if(result instanceof BucketMovedException) {
+                FunctionInvocationTargetException fite = new InternalFunctionInvocationTargetException(
+                    ((BucketMovedException)result).getMessage());
+                exception = new FunctionException(fite);
+              }
+              else if(result instanceof CacheClosedException) {
+                FunctionInvocationTargetException fite = new InternalFunctionInvocationTargetException(
+                    ((CacheClosedException)result).getMessage());
+                if (resultResponse instanceof ArrayList) {
+                  DistributedMember memberID = (DistributedMember) ((ArrayList) resultResponse)
+                      .get(1);
+                  this.failedNodes.add(memberID.getId());
+                }                
+                exception = new FunctionException(fite);
-                throw new ServerOperationException(s, (Throwable)result);
+                exception = new ServerOperationException(s, (Throwable)result);
+
+            if (exception != null) {
+              throw exception;
+            }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS25 INS43 INS59 INS27 INS8 INS42 INS42 INS33 INS42 INS33 INS53 INS25 INS42 INS62 INS8 INS25 INS21 INS42 INS43 INS60 INS21 INS62 INS8 MOV25 INS7 INS42 INS43 INS59 INS7 INS42 INS43 INS60 INS25 INS21 INS42 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS43 INS59 INS62 INS8 INS7 INS21 INS43 INS32 INS43 INS42 INS42 INS42 INS14 INS42 INS43 INS60 INS21 INS42 INS14 INS7 INS42 INS36 INS42 INS42 INS43 INS32 INS42 INS43 INS59 INS32 INS43 INS42 INS42 MOV14 INS11 INS42 INS36 INS42 INS42 INS42 INS11 INS22 INS42 INS32 INS42 INS43 INS42 INS11 INS43 INS32 INS52 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS36 INS42 INS34 INS42 INS11 INS43 INS42 INS42 DEL42 DEL53 DEL33 DEL41 DEL53