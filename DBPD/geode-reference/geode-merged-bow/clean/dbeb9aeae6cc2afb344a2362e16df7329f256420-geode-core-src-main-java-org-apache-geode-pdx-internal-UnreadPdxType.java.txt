Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Just like a PdxType but also keeps track of the unreadFields.
- * This is used when we deserialize a pdx and the blob we are deserializing
- * contains fields that our local version does not read.
- * Note that instances of the class are only kept locally so I didn't add code
- * to serialize unreadFieldIndexes.
+ * Just like a PdxType but also keeps track of the unreadFields. This is used when we deserialize a
+ * pdx and the blob we are deserializing contains fields that our local version does not read. Note
+ * that instances of the class are only kept locally so I didn't add code to serialize
+ * unreadFieldIndexes.
-  
+
-  }  
+  }
-//   public String toString() {
-//     return "unreadFieldIdxs=" + java.util.Arrays.toString(this.unreadFieldIndexes) + super.toString();
-//   }
+  // public String toString() {
+  // return "unreadFieldIdxs=" + java.util.Arrays.toString(this.unreadFieldIndexes) +
+  // super.toString();
+  // }

UPD66 UPD66 UPD66 UPD66 DEL66