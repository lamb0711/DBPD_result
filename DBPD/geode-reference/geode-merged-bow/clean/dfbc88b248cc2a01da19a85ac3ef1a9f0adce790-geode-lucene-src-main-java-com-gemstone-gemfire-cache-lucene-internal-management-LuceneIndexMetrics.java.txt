Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

+  private final float queryRate;
+
+  private final long queryRateAverageLatency;
+
+  private final float updateRate;
+
+  private final long updateRateAverageLatency;
+
+  private final float commitRate;
+
+  private final long commitRateAverageLatency;
+
-  @ConstructorProperties( { "regionPath", "indexName", "queryExecutions", "queryExecutionTime",
-      "queryExecutionsInProgress", "queryExecutionTotalHits", "updates", "updateTime", "updatesInProgress",
-      "commits", "commitTime", "commitsInProgress", "documents"
+  @ConstructorProperties( { "regionPath", "indexName", "queryExecutions", "queryExecutionTime", "queryRate",
+      "queryRateAverageLatency", "queryExecutionsInProgress", "queryExecutionTotalHits", "updates",
+      "updateTime", "updateRate", "updateRateAverageLatency", "updatesInProgress", "commits",
+      "commitTime", "commitRate", "commitRateAverageLatency", "commitsInProgress", "documents"
-      int queryExecutionsInProgress, long queryExecutionTotalHits, int updates, long updateTime,
-      int updatesInProgress, int commits, long commitTime, int commitsInProgress, int documents) {
+      float queryRate, long queryRateAverageLatency, int queryExecutionsInProgress, long queryExecutionTotalHits,
+      int updates, long updateTime, float updateRate, long updateRateAverageLatency, int updatesInProgress,
+      int commits, long commitTime, float commitRate, long commitRateAverageLatency, int commitsInProgress,
+      int documents) {
+    this.queryRate = queryRate;
+    this.queryRateAverageLatency = queryRateAverageLatency;
+    this.updateRate = updateRate;
+    this.updateRateAverageLatency = updateRateAverageLatency;
+    this.commitRate = commitRate;
+    this.commitRateAverageLatency = commitRateAverageLatency;
+  public float getQueryRate() {
+    return this.queryRate;
+  }
+
+  public long getQueryRateAverageLatency() {
+    return this.queryRateAverageLatency;
+  }
+
+  public float getUpdateRate() {
+    return this.updateRate;
+  }
+
+  public long getUpdateRateAverageLatency() {
+    return this.updateRateAverageLatency;
+  }
+
+  public float getCommitRate() {
+    return this.commitRate;
+  }
+
+  public long getCommitRateAverageLatency() {
+    return this.commitRateAverageLatency;
+  }
+
+        .append("; queryRate=")
+        .append(this.queryRate)
+        .append("; queryRateAverageLatency=")
+        .append(this.queryRateAverageLatency)
+        .append("; updateRate=")
+        .append(this.updateRate)
+        .append("; updateRateAverageLatency=")
+        .append(this.updateRateAverageLatency)
+        .append("; commitRate=")
+        .append(this.commitRate)
+        .append("; commitRateAverageLatency=")
+        .append(this.commitRateAverageLatency)

INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS44 INS44 INS44 INS44 INS44 INS44 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS41 INS41 INS41 INS41 INS41 INS45 INS45 INS45 INS45 INS45 INS45 INS7 INS7 INS7 INS7 INS7 INS7 INS22 INS22 INS22 INS22 INS22 INS22 INS32 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS45 INS32 INS42 MOV22 MOV32 INS42 INS45 INS32 INS42 MOV22 MOV32 UPD42 MOV42 INS45 INS22 INS45 INS52 INS42 INS22 INS45 INS52 INS42 INS32 INS42 MOV22 MOV32 MOV42 UPD45 MOV45 INS32 INS42 MOV22 MOV32 MOV42 INS45 INS32 INS42 MOV22 MOV32 MOV42 UPD45 MOV45 INS22 UPD45 INS52 INS42 INS22 UPD45 INS52 INS42 INS32 INS42 MOV32 MOV42 INS45 INS32 INS42 MOV22 MOV32 MOV42 UPD45 MOV45 INS32 INS42 MOV22 MOV32 MOV42 INS45 INS32 INS42 MOV22 MOV32 MOV42 UPD45 MOV45 INS22 UPD45 INS52 INS42 INS22 UPD45 INS52 INS42 DEL45 DEL45