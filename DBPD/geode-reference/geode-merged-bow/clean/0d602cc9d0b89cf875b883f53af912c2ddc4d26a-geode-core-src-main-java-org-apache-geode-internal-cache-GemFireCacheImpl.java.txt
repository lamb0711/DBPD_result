GEODE-8035: Parallel Disk Store Recovery when Cluster Restarts (#5014)

* Add parallel stream for disk store recovery

* Replace synchronized block with CountDownLatch

* Add the new system property parallelDiskStoreRecovery

* Add documentation of the new system property

Authored-by: Jianxia Chen <jchen21@apache.org>
+  private ConcurrentMap<String, CountDownLatch> diskStoreLatches = new ConcurrentHashMap();
+
+  @Override
+  public void lockDiskStore(String diskStoreName) {
+    doLockDiskStore(diskStoreName);
+  }
+
+  /**
+   * If the disk store is not associated with a {@code CountDownLatch},
+   * constructs a {@code CountDownLatch} with count one, and associate it with the disk store;
+   * otherwise wait until the associated {@code CountDownLatch} has counted down to zero.
+   *
+   * @param diskStoreName the name of the disk store
+   * @return {@code true} if it does not call {@code CountDownLatch.await()};
+   *         {@code false} otherwise.
+   */
+  @VisibleForTesting
+  boolean doLockDiskStore(String diskStoreName) {
+    CountDownLatch countDownLatch =
+        diskStoreLatches.putIfAbsent(diskStoreName, new CountDownLatch(1));
+    if (countDownLatch != null) {
+      try {
+        countDownLatch.await();
+        return false;
+      } catch (InterruptedException e) {
+        throw new InternalGemFireError(e);
+      }
+    }
+    return true;
+  }
+
+  @Override
+  public void unlockDiskStore(String diskStoreName) {
+    doUnlockDiskStore(diskStoreName);
+  }
+
+  /**
+   * Decrements the count of the {@code CountDownLatch} associated with the disk store.
+   *
+   * @param diskStoreName the name of the disk store
+   * @return {@code true} if the disk store associated {@code CountDownLatch} has decremented;
+   *         {@code false} otherwise.
+   */
+  @VisibleForTesting
+  boolean doUnlockDiskStore(String diskStoreName) {
+    CountDownLatch countDownLatch = diskStoreLatches.get(diskStoreName);
+    if (countDownLatch != null) {
+      countDownLatch.countDown();
+      return true;
+    }
+    return false;
+  }
+
+    diskStoreLatches.remove(diskStore.getName());

INS23 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS78 INS83 INS39 INS42 INS44 INS8 INS29 INS78 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS29 INS78 INS39 INS42 INS44 INS8 INS43 INS43 INS43 INS42 INS14 INS42 INS43 INS42 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS25 INS41 INS42 INS43 INS42 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS25 INS41 INS21 INS42 INS42 INS42 INS43 INS42 INS32 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS42 INS66 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS43 INS59 INS27 INS8 INS9 INS42 INS32 INS66 INS65 INS66 INS42 INS66 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS42 INS43 INS59 INS27 INS8 INS9 INS32 INS42 INS42 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS66 INS66 INS66 INS66 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS8 INS12 INS42 INS42 INS42 INS32 INS9 INS42 INS42 INS43 INS34 INS21 INS41 INS44 INS8 INS42 INS42 INS42 INS32 INS9 INS43 INS42 INS53 INS42 INS42 INS42 INS14 INS43 INS42 INS42