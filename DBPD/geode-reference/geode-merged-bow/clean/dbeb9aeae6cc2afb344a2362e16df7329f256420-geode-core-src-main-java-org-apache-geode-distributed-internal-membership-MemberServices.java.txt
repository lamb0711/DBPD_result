Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   * @param i the name of the host for the specified NetMember, the current host (hopefully)
-   * if there are any problems.
+   * @param i the name of the host for the specified NetMember, the current host (hopefully) if
+   *        there are any problems.
-  public abstract NetMember newNetMember(InetAddress i, int port, 
-      boolean splitBrainEnabled, boolean canBeCoordinator, MemberAttributes payload, short version);
+  public abstract NetMember newNetMember(InetAddress i, int port, boolean splitBrainEnabled,
+      boolean canBeCoordinator, MemberAttributes payload, short version);
+   * 
-  
-   /**
+
+  /**
+   * 
-   * @param transport holds configuration information that can be used by the manager to configure itself
+   * @param transport holds configuration information that can be used by the manager to configure
+   *        itself
-          DistributionConfig config,
-          RemoteTransportConfig transport, DMStats stats);
+      DistributionConfig config, RemoteTransportConfig transport, DMStats stats);
-   * currently this is a test method but it ought to be used by InternalLocator
-   * to create the peer location TcpHandler
+   * currently this is a test method but it ought to be used by InternalLocator to create the peer
+   * location TcpHandler
-  public abstract NetLocator newLocatorHandler(InetAddress bindAddress,
-      File stateFile, String locatorString, boolean usePreferredCoordinators,
+  public abstract NetLocator newLocatorHandler(InetAddress bindAddress, File stateFile,
+      String locatorString, boolean usePreferredCoordinators,

UPD66 UPD66 UPD66 INS66 UPD66 UPD66