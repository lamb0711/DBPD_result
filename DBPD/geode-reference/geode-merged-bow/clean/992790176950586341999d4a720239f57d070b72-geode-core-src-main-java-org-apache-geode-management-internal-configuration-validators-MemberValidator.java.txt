 GEODE-6306: add capability to check cache element compatibility (#3695)



-import java.util.ArrayList;
+import java.util.HashMap;
-import java.util.List;
+import java.util.Map;
-    String[] groupWithThisElement = findGroupsWithThisElement(config, manager);
-    if (groupWithThisElement.length == 0) {
+    Map<String, CacheElement> existingElementsAndTheirGroups =
+        findCacheElement(config.getId(), manager);
+    if (existingElementsAndTheirGroups.size() == 0) {
-    Set<DistributedMember> membersOfExistingGroups = findMembers(groupWithThisElement);
+    Set<DistributedMember> membersOfExistingGroups =
+        findMembers(existingElementsAndTheirGroups.keySet().toArray(new String[0]));
+
+    // if there is no common member, we still need to verify if the new config is compatible with
+    // the existing ones.
+    for (Map.Entry<String, CacheElement> existing : existingElementsAndTheirGroups.entrySet()) {
+      manager.checkCompatibility(config, existing.getKey(), existing.getValue());
+    }
-  public String[] findGroupsWithThisElement(CacheElement config, ConfigurationManager manager) {
-    // if the same element exists in some groups already, make sure the groups has no common members
-    List<String> groupWithThisElement = new ArrayList<>();
+  public String[] findGroupsWithThisElement(String id, ConfigurationManager manager) {
+    return findCacheElement(id, manager).keySet().toArray(new String[0]);
+  }
+
+  /**
+   * this returns a map of CacheElement with this id, with the group as the key of the map
+   */
+  public Map<String, CacheElement> findCacheElement(String id, ConfigurationManager manager) {
+    Map<String, CacheElement> results = new HashMap<>();
-      if (cacheConfig != null && manager.get(config.getId(), cacheConfig) != null) {
-        groupWithThisElement.add(group);
+      if (cacheConfig == null) {
+        continue;
+      }
+      CacheElement existing = manager.get(id, cacheConfig);
+      if (existing != null) {
+        results.put(group, existing);
-    return groupWithThisElement.toArray(new String[0]);
+    return results;

MOV26 UPD40 UPD40 INS31 INS31 MOV83 MOV5 MOV42 INS44 INS44 INS8 INS29 INS83 INS74 INS42 INS44 MOV44 MOV8 INS70 INS43 INS42 INS43 INS42 MOV41 INS65 INS43 INS43 INS43 INS43 INS42 INS41 INS74 INS44 INS32 INS8 INS42 INS42 INS66 INS42 INS42 MOV42 INS42 UPD74 INS42 INS43 INS43 INS43 UPD42 INS32 INS74 INS42 INS42 INS42 INS21 INS32 UPD43 INS43 UPD42 INS25 INS60 INS25 INS42 MOV42 INS42 UPD42 MOV32 INS42 INS42 INS32 INS43 INS43 INS43 INS32 INS32 INS42 UPD42 INS42 UPD74 INS27 INS8 INS43 INS59 INS27 MOV8 INS42 INS32 INS42 INS3 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS32 UPD42 MOV42 INS42 INS42 UPD43 MOV42 MOV33 INS18 INS42 INS42 INS32 INS42 MOV33 UPD42 MOV42 INS42 INS5 INS34 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 INS43 INS85 UPD42 UPD42 INS42 INS42 DEL43 DEL85 DEL5 DEL40 DEL27 DEL32 DEL27 DEL27 DEL25 DEL43 DEL42 DEL44 DEL31