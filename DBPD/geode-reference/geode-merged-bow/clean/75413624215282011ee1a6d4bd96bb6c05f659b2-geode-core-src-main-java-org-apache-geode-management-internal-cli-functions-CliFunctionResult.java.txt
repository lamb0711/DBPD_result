GEODE-5206: Add an 'ignoreFailure' flag to CliFunctionResult (#1957)

- The intention of this is to avoid needing to pass 'skip-if-exists' or
  'if-not-exists' flags to any command function. The function should set this
  flag if it determines that the construct it is dealing with either already
  exists or does not exist depending on the action. The calling command will
  then be able to use this information do display and set status appropriately.
- Collapse the state of successful and ignoreable into a single enum - OK,
  ERROR or IGNORED.
-  private boolean successful;
+  private StatusState state;
+
+  public enum StatusState {
+    OK, ERROR, IGNORED
+  }
-    this.successful = true;
+    this.state = StatusState.OK;
-    this.successful = true;
+    this.state = StatusState.OK;
-    this.successful = true;
+    this.state = StatusState.OK;
-    this.successful = true;
+    this.state = StatusState.OK;
-    this.successful = true;
+    this.state = StatusState.OK;
+  /**
+   * @deprecated Use {@code CliFunctionResult(String, StatusState, String)} instead
+   */
+  @Deprecated
+    this(memberIdOrName, successful ? StatusState.OK : StatusState.ERROR, message);
+  }
+
+  public CliFunctionResult(final String memberIdOrName, final StatusState state,
+      final String message) {
-    this.successful = successful;
+    this.state = state;
-      this.successful = false;
+      this.state = StatusState.ERROR;
-      this.successful = true;
+      this.state = StatusState.OK;
+    if (isIgnorableFailure()) {
+      return "IGNORED";
+    }
+
+    return isSuccessful() ? "OK" : "ERROR";
+  }
+
+  public String getStatusMessage() {
-    if (successful) {
+    if (isSuccessful()) {
+      return message;
+    }
+
+    String errorMessage = "";
+    if (message != null
+        && (resultObject == null || !((Throwable) resultObject).getMessage().contains(message))) {
+      errorMessage = message;
+    }
+
+    if (resultObject != null) {
+      errorMessage = errorMessage.trim() + " " + ((Throwable) resultObject).getClass().getName()
+          + ": " + ((Throwable) resultObject).getMessage();
+    }
+
+    return errorMessage;
+  }
+
+  /**
+   * This can be removed once all commands are using ResultModel.
+   */
+  @Deprecated
+  public String getLegacyStatus() {
+    String message = getMessage();
+
+    if (isSuccessful()) {
-    if (successful) {
+    if (isSuccessful()) {
+    toDataPre_GEODE_1_6_0_0(out);
+    DataSerializer.writeEnum(this.state, out);
+  }
+
+  public void toDataPre_GEODE_1_6_0_0(DataOutput out) throws IOException {
-    DataSerializer.writePrimitiveBoolean(this.successful, out);
+    DataSerializer.writePrimitiveBoolean(this.isSuccessful(), out);
+    fromDataPre_GEODE_1_6_0_0(in);
+    this.state = DataSerializer.readEnum(StatusState.class, in);
+  }
+
+  public void fromDataPre_GEODE_1_6_0_0(DataInput in) throws IOException, ClassNotFoundException {
-    this.successful = DataSerializer.readPrimitiveBoolean(in);
+    this.state = DataSerializer.readPrimitiveBoolean(in) ? StatusState.OK : StatusState.ERROR;
-    return this.successful;
+    return this.state == StatusState.OK;
+  }
+
+  public boolean isIgnorableFailure() {
+    return this.state == StatusState.IGNORED;
+  }
+
+  /**
+   * Use this to signal that an operation failed but it might be OK to ignore. This is intended to
+   * obviate the need to send a 'skip-if-exists' or 'if-not-exists' flag to any relevant function
+   * and allows the caller to now decide how to handle the result.
+   * <p/>
+   * An {@code IllegalStateException} will be thrown if the state of this {@code CliFunctionResult}
+   * is not already error.
+   */
+  public void setIgnorableFailure() {
+    if (isSuccessful()) {
+      throw new IllegalStateException("Cannot call setIgnorableFailure when state == OK");
+    }
+    this.state = StatusState.IGNORED;
-    return "CliFunctionResult [memberId=" + this.memberIdOrName + ", successful=" + this.successful
-        + ", xmlEntity=" + this.xmlEntity + ", serializables=" + Arrays.toString(this.serializables)
-        + ", throwable=" + this.resultObject + ", byteData=" + Arrays.toString(this.byteData) + "]";
+    return "CliFunctionResult [memberId=" + this.memberIdOrName + ", successful="
+        + this.isSuccessful() + ", xmlEntity=" + this.xmlEntity + ", serializables="
+        + Arrays.toString(this.serializables) + ", throwable=" + this.resultObject + ", byteData="
+        + Arrays.toString(this.byteData) + "]";

MOV23 INS71 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS43 INS83 INS42 INS72 INS72 INS72 INS29 INS78 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS44 INS44 INS44 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS29 INS78 UPD42 MOV78 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 MOV78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 UPD42 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS42 UPD42 INS42 INS42 INS42 INS65 INS42 INS17 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS25 INS41 INS42 INS60 MOV25 INS60 INS25 INS25 INS41 INS65 INS42 INS25 INS43 INS42 INS42 INS21 INS21 INS43 INS42 INS42 INS42 INS21 INS21 INS41 INS65 INS25 INS21 INS66 INS65 INS66 INS42 INS16 INS42 INS42 INS42 INS42 INS32 INS8 INS16 INS43 INS59 INS32 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS66 INS32 INS8 INS32 INS42 INS32 INS32 INS42 INS32 INS7 INS27 INS27 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS32 INS8 INS7 INS40 INS40 INS40 INS40 INS40 INS66 INS42 INS40 INS40 UPD42 INS42 INS41 INS32 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS27 INS36 INS21 INS42 INS33 INS21 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS32 INS42 INS42 INS22 INS32 INS16 INS22 INS40 INS22 INS40 INS66 INS66 INS42 INS53 INS22 INS40 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS45 INS42 INS42 INS42 INS33 INS27 INS7 INS7 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS57 INS42 UPD42 MOV32 INS40 INS40 MOV52 UPD42 MOV42 INS52 INS42 INS14 INS52 INS42 INS52 INS42 INS40 INS40 INS27 INS38 INS42 INS42 INS42 INS27 INS43 INS43 INS45 UPD42 UPD42 INS42 INS33 INS32 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS36 INS42 INS36 INS42 INS36 INS42 INS11 INS11 INS11 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 DEL39 DEL9 DEL9 DEL9 DEL9 DEL9 DEL9 DEL9 DEL42 DEL42 DEL52 DEL42 DEL22 DEL22 DEL52 DEL42 DEL22