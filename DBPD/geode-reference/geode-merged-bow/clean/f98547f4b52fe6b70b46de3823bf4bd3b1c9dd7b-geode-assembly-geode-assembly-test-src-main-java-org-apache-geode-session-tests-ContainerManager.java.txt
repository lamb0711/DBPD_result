GEODE-3613: Allocate unique ports to containers

ServerContainer sometimes assigned the same port to multiple containers.

ServerContainer used AvailablePortHelper to allocate available ports.
Due to an inherent design flaw, AvailablePortHelper sometimes delivers
the same port number on multiple calls, which results in the same port
being used for multiple purposes.

ServerContainer now allocates ports using a single UniquePortSupplier
created by the test.

Additionally:

- Convert Cargo-based tests from DUnit base class to rule-based
- Start a new locator for each test
- Add cargo version to dependency-versions.properties
- Give each test class its own temp directory
- Fix bad check for container state validity
- Fix modify_war script to detect missing jar command and abort
- General test cleanup and de-duplication
- Announce start and end of each test to stdout

Co-Authored-By: Galen O'Sullivan <gosullivan@pivotal.io>
Co-Authored-By: Dale Emery <demery@pivotal.io>

-    for (ServerContainer container : getActiveContainers()) {
+    for (ServerContainer container : containers) {
+    if (!(state.equals(State.STARTED.toString()) || state.equals(State.STOPPED.toString())
+        || state.equals(State.STARTING.toString()) || state.equals(State.STOPPING.toString())
+        || state.equals(State.UNKNOWN.toString()))) {
+      throw new IllegalArgumentException(
+          "State must be one of the 5 specified cargo state strings (stopped, started, starting, stopping, or unknown). State given was: "
+              + state);
+    }
+
-      // Checks that the state passed in is one of the 5 supported by Cargo
-      if (state.equals(State.STARTED.toString()) || state.equals(State.STOPPED.toString())
-          || state.equals(State.STARTED.toString()) || state.equals(State.STOPPING.toString())
-          || state.equals(State.UNKNOWN.toString())) {
-        if (getContainer(i).getState().toString().equals(state))
-          indexes.add(i);
-      } else
-        throw new IllegalArgumentException(
-            "State must be one of the 5 specified cargo state strings (stopped, started, starting, stopping, or unknown). State given was: "
-                + state);
+      if (getContainer(i).getState().toString().equals(state))
+        indexes.add(i);

MOV8 MOV60 INS24 MOV41 INS42 INS38 INS8 MOV58 MOV27 MOV37 MOV8 INS36 MOV53 MOV27 UPD40 DEL42 DEL32 DEL24 DEL8