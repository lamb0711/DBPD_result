GEODE_6883: Creating membership api classes (#3985)

Creating a new membership API package. Starting that package out with
these classes:
* MembershipBuilder - created by moving NetMember and NetLocator factory stuff
  out of MembershipFactory and renaming MembershipFactory to MembershipBuilder
* Membership - Extracted an interface from MembershipManager
* Authenticator - Moved Authenticator to the API package
* MembershipStatistics - Extracted interface from DMStats
* MembershipListener and MessageListener - Creating these new membership
  specific interfaces by splitting up DistributedMembershipListener into two
  separate interfaces.
* MembershipConfig - Extracted interface from ServiceConfig

* Adding an archunit test for the membership API. Ensure that the API only
  depends on other API classes.

* Removing GMSMemberFactory and MemberServices
  These classes were adding another layer to creating a MembershipManager,
  but they didn't actually allow swapping in a different implementation.
  Inlining these methods into the respective NetLocatorFactory,
  NetMemberFactory, and MembershipManagerFactory.

* Removing getDM from DirectChannelListener - We want to get rid of this
  interface in favor of other membership
  specific interfaces that don't depend on core.

-    this.netMbr = MemberFactory.newNetMember(i, hostName, p, splitBrainEnabled, canBeCoordinator,
+    this.netMbr = NetMemberFactory.newNetMember(i, hostName, p, splitBrainEnabled, canBeCoordinator,
-    this(MemberFactory.newNetMember(i, p));
+    this(NetMemberFactory.newNetMember(i, p));
-        MemberFactory.newNetMember(addr, location.getHostName(), location.getPort(), false, true,
+        NetMemberFactory.newNetMember(addr, location.getHostName(), location.getPort(), false, true,
-    netMbr = MemberFactory.newNetMember(addr, host, p, false, true, Version.CURRENT_ORDINAL, mattr);
+    netMbr = NetMemberFactory
+        .newNetMember(addr, host, p, false, true, Version.CURRENT_ORDINAL, mattr);
-    netMbr = MemberFactory.newNetMember(i, p);
+    netMbr = NetMemberFactory.newNetMember(i, p);
-    netMbr = MemberFactory.newNetMember(addr, p);
+    netMbr = NetMemberFactory.newNetMember(addr, p);
-    netMbr = MemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord, version,
+    netMbr = NetMemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord, version,
-        MemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord, version, attr);
+        NetMemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord, version, attr);
-        MemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord, version, attr);
+        NetMemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord, version, attr);
-    netMbr = MemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord,
+    netMbr = NetMemberFactory.newNetMember(inetAddr, hostName, port, sbEnabled, elCoord,

UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42