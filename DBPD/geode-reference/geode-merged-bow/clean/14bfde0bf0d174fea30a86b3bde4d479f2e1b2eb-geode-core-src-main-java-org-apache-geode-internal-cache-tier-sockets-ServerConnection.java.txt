Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-    this.logWriter = (InternalLogWriter) internalCache.getLoggerI18n();
+    this.logWriter = (InternalLogWriter) internalCache.getLogger();
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.ServerHandShakeProcessor_0_HANDSHAKE_REPLY_CODE_TIMEOUT_NOT_RECEIVED_WITH_IN_1_MS,
-              new Object[] {getName(), handshakeTimeout}));
+          logger.warn("{}: Handshake reply code timeout, not received with in {} ms",
+              new Object[] {getName(), handshakeTimeout});
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.ServerHandShakeProcessor_0_RECEIVED_NO_HANDSHAKE_REPLY_CODE,
-              getName()), e);
+          logger.warn(getName() + ": Received no handshake reply code",
+              e);
-              logger.warn(LocalizedMessage.create(
-                  LocalizedStrings.ServerConnection_0_UNEXPECTED_CANCELLATION, getName()), e);
+              logger.warn(getName() + ": Unexpected cancellation: ", e);
-          logger.warn(LocalizedMessage
-              .create(LocalizedStrings.ServerConnection_RECEIVED_UNKNOWN_HANDSHAKE_REPLY_CODE));
-          refuseHandshake(LocalizedStrings.ServerConnection_RECEIVED_UNKNOWN_HANDSHAKE_REPLY_CODE
-              .toLocalizedString(), AcceptorImpl.REPLY_INVALID);
+          logger.warn("Received Unknown handshake reply code.");
+          refuseHandshake("Received Unknown handshake reply code.", Handshake.REPLY_INVALID);
-    refuseHandshake(ex.getMessage(), AcceptorImpl.REPLY_REFUSED);
+    refuseHandshake(ex.getMessage(), Handshake.REPLY_REFUSED);
-        securityLogWriter.warning(LocalizedStrings.ONE_ARG,
-            getName() + ": Security exception: " + exStr);
+        securityLogWriter.warning(String.format("%s",
+            getName() + ": Security exception: " + exStr));
-        securityLogWriter.warning(LocalizedStrings.ONE_ARG,
-            getName() + ": Security exception: " + exStr);
+        securityLogWriter.warning(String.format("%s",
+            getName() + ": Security exception: " + exStr));
-                  LocalizedStrings.ServerConnection_DUPLICATE_DURABLE_CLIENTID_0
-                      .toLocalizedString(proxyId.getDurableId());
-              logger.warn(LocalizedMessage.create(LocalizedStrings.TWO_ARG_COLON,
-                  new Object[] {this.name, handshakeRefusalMessage}));
+                  String.format("Duplicate durable clientId (%s)",
+                      proxyId.getDurableId());
+              logger.warn("{} : {}",
+                  new Object[] {this.name, handshakeRefusalMessage});
-          if (numRefs.toInteger() <= 0) {
+          if (numRefs.intValue() <= 0) {
-          if (numRefs.toInteger() <= 0) {
+          if (numRefs.intValue() <= 0) {
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.ServerConnection_SERVER_FAILED_TO_ENCRYPT_DATA_0, ex));
+      logger.warn("Server failed to encrypt data " + ex);
-        logger.warn(
-            LocalizedMessage.create(LocalizedStrings.ServerConnection_0__UNEXPECTED_EXCEPTION, ex));
+        logger.warn(ex.toString() + " : Unexpected Exception");
-   * Switch this guy to blocking mode so we can use oldIO to read and write messages.
+   * Switch this connection to blocking mode so we can use oldIO to read and write messages.
-      return LocalizedStrings.ServerConnection_ERROR_IN_GETSOCKETSTRING_0
-          .toLocalizedString(e.getLocalizedMessage());
+      return String.format("Error in getSocketString: %s",
+          e.getLocalizedMessage());
-      logger.warn(LocalizedMessage.create(
-          LocalizedStrings.ServerConnection_BATCH_IDS_ARE_OUT_OF_ORDER_SETTING_LATESTBATCHID_TO_0_IT_WAS_1,
+      logger.warn("Batch IDs are out of order. Setting latestBatchId to: {}. It was: {}",
-              this.latestBatchIdReplied}));
+              this.latestBatchIdReplied});
-            LocalizedStrings.ServerConnection_0_AN_EXCEPTION_WAS_THROWN_WHILE_CLOSING_CLIENT_POSTPROCESS_AUTHORIZATION_CALLBACK_1,
-            new Object[] {this.name, ex});
+            String.format(
+                "%s: An exception was thrown while closing client post-process authorization callback. %s",
+                new Object[] {this.name, ex}));
-            LocalizedStrings.ServerConnection_THE_ID_PASSED_IS_0_WHICH_DOES_NOT_CORRESPOND_WITH_ANY_TRANSIENT_DATA
-                .toLocalizedString(boolID));
+            String.format("The ID passed is %s which does not correspond with any transient data",
+                boolID));
-            LocalizedStrings.ServerConnection_THE_ID_PASSED_IS_0_WHICH_DOES_NOT_CORRESPOND_WITH_ANY_TRANSIENT_DATA
-                .toLocalizedString(boolID));
+            String.format("The ID passed is %s which does not correspond with any transient data",
+                boolID));
-          LocalizedStrings.HandShake_NO_SECURITY_CREDENTIALS_ARE_PROVIDED.toLocalizedString());
+          "No security credentials are provided");
-              LocalizedStrings.ServerHandShakeProcessor_0_AUTHORIZATION_ENABLED_BUT_AUTHENTICATION_CALLBACK_1_RETURNED_WITH_NULL_CREDENTIALS_FOR_PROXYID_2,
-              new Object[] {getName(), SECURITY_CLIENT_AUTHENTICATOR, getProxyID()});
+              String.format(
+                  "%s: Authorization enabled but authentication callback (%s)  returned with null credentials for proxyID: %s",
+                  new Object[] {getName(), SECURITY_CLIENT_AUTHENTICATOR, getProxyID()}));
-              LocalizedStrings.ServerHandShakeProcessor_0_POSTPROCESS_AUTHORIZATION_ENABLED_BUT_NO_AUTHENTICATION_CALLBACK_2_IS_CONFIGURED,
-              new Object[] {getName(), SECURITY_CLIENT_AUTHENTICATOR});
+              String.format(
+                  "%s: Post-process authorization enabled, but no authentication callback (%s) is configured",
+                  new Object[] {getName(), SECURITY_CLIENT_AUTHENTICATOR}));

UPD66 UPD40 MOV32 UPD42 UPD42 UPD42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS32 INS27 UPD42 INS42 INS45 INS45 INS42 INS42 MOV32 INS32 INS45 INS42 INS32 UPD42 UPD42 INS45 INS42 INS42 MOV32 INS27 INS42 INS42 MOV32 INS32 INS32 MOV32 INS45 INS45 UPD40 UPD42 UPD42 INS45 INS32 INS45 UPD42 UPD42 INS45 INS42 INS42 MOV32 INS42 INS42 MOV32 UPD42 UPD42 INS45 INS27 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS45 UPD42 UPD42 INS45 MOV32 INS45 MOV32 UPD42 UPD42 INS45 INS27 UPD42 INS42 INS45 MOV32 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40