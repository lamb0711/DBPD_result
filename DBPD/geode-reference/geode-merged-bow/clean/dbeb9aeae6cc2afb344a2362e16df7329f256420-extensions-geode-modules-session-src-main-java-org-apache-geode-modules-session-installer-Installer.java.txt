Merge branch 'release/1.1.0'

-* Licensed to the Apache Software Foundation (ASF) under one or more
-* contributor license agreements.  See the NOTICE file distributed with
-* this work for additional information regarding copyright ownership.
-* The ASF licenses this file to You under the Apache License, Version 2.0
-* (the "License"); you may not use this file except in compliance with
-* the License.  You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
-      new Argument("-h", false).
-          setDescription("Displays this help message.");
+      new Argument("-h", false).setDescription("Displays this help message.");
-  private static Argument ARG_GEMFIRE_PARAMETERS =
-      new Argument("-p", false, "param=value").
-          setDescription("Specific parameter for inclusion into the "
-              + "session filter definition as a regular "
-              + "init-param. Can be given multiple times.");
+  private static Argument ARG_GEMFIRE_PARAMETERS = new Argument("-p", false, "param=value")
+      .setDescription("Specific parameter for inclusion into the "
+          + "session filter definition as a regular " + "init-param. Can be given multiple times.");
-  private static Argument ARG_CACHE_TYPE =
-      new Argument("-t", false, "cache-type").
-          setDescription(
-              "Type of cache. Must be one of 'peer-to-peer' or "
-                  + "'client-server'. Default is peer-to-peer.").
-          setDefaults("peer-to-peer");
+  private static Argument ARG_CACHE_TYPE = new Argument("-t", false, "cache-type")
+      .setDescription("Type of cache. Must be one of 'peer-to-peer' or "
+          + "'client-server'. Default is peer-to-peer.")
+      .setDefaults("peer-to-peer");
-      new Argument("-w", true, "web.xml file").
-          setDescription("The web.xml file to be modified.");
+      new Argument("-w", true, "web.xml file").setDescription("The web.xml file to be modified.");
-        public void handleUnknownArgument(
-            final String form, final String[] params) {
-          log("Unknown argument being ignored: "
-              + form + " (" + params.length + " params)");
+        public void handleUnknownArgument(final String form, final String[] params) {
+          log("Unknown argument being ignored: " + form + " (" + params.length + " params)");
-        final UsageException usageException =
-            new UsageException("Usage requested by user");
+        final UsageException usageException = new UsageException("Usage requested by user");
-  public void processWebXml(final InputStream webXml,
-      final OutputStream out) throws Exception {
+  public void processWebXml(final InputStream webXml, final OutputStream out) throws Exception {
-  private Document createWebXmlDoc(final InputStream webXml)
-      throws Exception {
+  private Document createWebXmlDoc(final InputStream webXml) throws Exception {
-    final DocumentBuilderFactory factory =
-        DocumentBuilderFactory.newInstance();
+    final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
-    append(doc, initParam, "param-value",
-        argValues.getFirstResult(ARG_CACHE_TYPE));
+    append(doc, initParam, "param-value", argValues.getFirstResult(ARG_CACHE_TYPE));
-    docElement.insertBefore(contextListener,
-        after(docElement, "filter-mapping"));
+    docElement.insertBefore(contextListener, after(docElement, "filter-mapping"));
-  private Node append(final Document doc, final Node parent,
-      final String element,
+  private Node append(final Document doc, final Node parent, final String element,
-      transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount",
-          "4");
+      transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");

