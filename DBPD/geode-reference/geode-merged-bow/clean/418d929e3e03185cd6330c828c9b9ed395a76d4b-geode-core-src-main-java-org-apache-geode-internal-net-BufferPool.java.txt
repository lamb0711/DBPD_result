GEODE-6661: Fixed use of Direct and Non-Direct buffers (#4267)

- Fixed use of Direct and Non-Direct buffers
-  public ByteBuffer acquireSenderBuffer(int size) {
-    return acquireBuffer(size, true);
+  public ByteBuffer acquireDirectSenderBuffer(int size) {
+    return acquireDirectBuffer(size, true);
-  public ByteBuffer acquireReceiveBuffer(int size) {
-    return acquireBuffer(size, false);
+  public ByteBuffer acquireDirectReceiveBuffer(int size) {
+    return acquireDirectBuffer(size, false);
-  private ByteBuffer acquireBuffer(int size, boolean send) {
+  /**
+   * try to acquire direct buffer, if enabled by configuration
+   */
+  private ByteBuffer acquireDirectBuffer(int size, boolean send) {
+  public ByteBuffer acquireNonDirectSenderBuffer(int size) {
+    ByteBuffer result = ByteBuffer.allocate(size);
+    stats.incSenderBufferSize(size, false);
+    return result;
+  }
+
+  public ByteBuffer acquireNonDirectReceiveBuffer(int size) {
+    ByteBuffer result = ByteBuffer.allocate(size);
+    stats.incReceiverBufferSize(size, false);
+    return result;
+  }
+
-    ByteBuffer newBuffer = acquireBuffer(type, desiredCapacity);
+    ByteBuffer newBuffer;
+    if (existing.isDirect()) {
+      newBuffer = acquireDirectBuffer(type, desiredCapacity);
+    } else {
+      newBuffer = acquireNonDirectBuffer(type, desiredCapacity);
+    }
-    ByteBuffer newBuffer = acquireBuffer(type, desiredCapacity);
+    ByteBuffer newBuffer;
+    if (existing.isDirect()) {
+      newBuffer = acquireDirectBuffer(type, desiredCapacity);
+    } else {
+      newBuffer = acquireNonDirectBuffer(type, desiredCapacity);
+    }
-  ByteBuffer acquireBuffer(BufferPool.BufferType type, int capacity) {
+  ByteBuffer acquireDirectBuffer(BufferPool.BufferType type, int capacity) {
-        return acquireSenderBuffer(capacity);
+        return acquireDirectSenderBuffer(capacity);
-        return acquireReceiveBuffer(capacity);
+        return acquireDirectReceiveBuffer(capacity);
+    }
+    throw new IllegalArgumentException("Unexpected buffer type " + type.toString());
+  }
+
+  ByteBuffer acquireNonDirectBuffer(BufferPool.BufferType type, int capacity) {
+    switch (type) {
+      case UNTRACKED:
+        return ByteBuffer.allocate(capacity);
+      case TRACKED_SENDER:
+        return acquireNonDirectSenderBuffer(capacity);
+      case TRACKED_RECEIVER:
+        return acquireNonDirectReceiveBuffer(capacity);
-    if (useDirectBuffers) {
+    if (bb.isDirect()) {

INS31 INS31 INS31 UPD42 UPD42 INS29 UPD42 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 UPD42 INS43 INS42 INS44 INS44 INS8 INS65 INS42 INS39 INS42 INS60 INS21 INS41 INS42 INS39 INS42 INS60 INS21 INS41 INS60 INS25 INS60 INS25 INS42 INS43 INS42 INS39 INS42 INS50 INS53 INS66 INS43 INS59 INS32 INS42 MOV43 INS59 INS32 INS42 INS43 INS59 INS32 INS8 INS8 MOV43 INS59 INS32 INS8 INS8 INS40 INS42 INS49 INS41 INS49 INS41 INS49 INS41 INS14 INS32 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS9 INS42 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS21 INS21 MOV42 INS42 INS42 INS21 INS21 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 UPD42 MOV42 MOV42 MOV42 INS42 INS42 INS42 UPD42 MOV42 MOV42 MOV42 INS42 INS42 INS42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL59 DEL60 DEL42