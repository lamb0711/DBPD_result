GEODE-4094: ClientHealthMonitor may cause an NPE in a ServerConnection (#1326)

* GEODE-4094: ClientHealthMonitor may cause an NPE in a ServerConnection

- minor refactoring of AcceptorImpl and Handshake to improve testability
- added a unit test to demonstrate race condition
- refactored connection map into a new object to prevent race

-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-  private final SecurityService securityService;
+  protected final SecurityService securityService;
+  private ServerConnectionCollection serverConnectionCollection;
-  /*
-   * Uniquely identifying the client's Distributed System
-   *
-   *
-   * private String membershipId;
-   *
-   *
-   * Uniquely identifying the client's ConnectionProxy object
-   *
-   *
-   * private String proxyID ;
+  /**
+   * Client identity from handshake
-        boolean readHandShake = ServerHandShakeProcessor.readHandShake(this, getSecurityService());
+        boolean readHandShake =
+            ServerHandShakeProcessor.readHandShake(this, getSecurityService(), acceptor);
-  private ClientHealthMonitor getClientHealthMonitor() {
-    return acceptor.getClientHealthMonitor();
-  }
-
-  private boolean processHandShake() {
+  protected boolean processHandShake() {
-          InternalDistributedMember idm =
-              (InternalDistributedMember) this.proxyId.getDistributedMember();
-      chm.addConnection(this.proxyId, this);
+      serverConnectionCollection = chm.addConnection(this.proxyId, this);
+    if (serverConnectionCollection == null) {
+      // return here if we haven't successfully completed handshake
+      logger.warn("Continued processing ServerConnection after handshake failed");
+      this.processMessages = false;
+      return;
+    }
+    synchronized (serverConnectionCollection) {
+      if (serverConnectionCollection.isTerminating) {
+        // Client is being disconnected, don't try to process message.
+        this.processMessages = false;
+        return;
+      }
+      serverConnectionCollection.connectionsProcessing.incrementAndGet();
+    }
-        if (AcceptorImpl.isIntegratedSecurity()
+        if (securityService.isIntegratedSecurity()
+      serverConnectionCollection.connectionsProcessing.decrementAndGet();
-
-            InternalDistributedMember idm =
-                (InternalDistributedMember) this.proxyId.getDistributedMember();
-  private void initializeCommands() {
+  protected void initializeCommands() {
+    processMessages = false;
-    if (AcceptorImpl.isIntegratedSecurity()) {
+    if (securityService.isIntegratedSecurity()) {
-    if (AcceptorImpl.isIntegratedSecurity()) {
+    if (securityService.isIntegratedSecurity()) {

INS23 UPD83 INS83 INS43 INS59 INS29 UPD83 UPD83 UPD42 MOV42 INS42 INS65 INS25 INS51 INS21 INS66 INS27 INS8 INS42 INS8 INS7 INS42 INS33 INS21 INS21 INS41 INS25 INS21 INS21 INS42 INS9 UPD42 UPD42 INS7 INS32 INS7 INS40 INS8 INS32 INS32 INS42 MOV32 INS42 INS42 INS45 INS22 INS9 INS21 INS41 INS40 INS42 INS40 INS42 INS52 INS42 INS7 INS22 INS9 INS42 INS52 INS42 UPD42 DEL40 DEL26 DEL83 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL11 DEL59 DEL60