Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public abstract class VersionedStatsRegionEntryOffHeap extends VersionedStatsRegionEntry implements OffHeapRegionEntry {
+public abstract class VersionedStatsRegionEntryOffHeap extends VersionedStatsRegionEntry
+    implements OffHeapRegionEntry {
-  private static final VersionedStatsRegionEntryOffHeapFactory factory = new VersionedStatsRegionEntryOffHeapFactory();
-  
+
+  private static final VersionedStatsRegionEntryOffHeapFactory factory =
+      new VersionedStatsRegionEntryOffHeapFactory();
+
+
-          return new VersionedStatsRegionEntryOffHeapIntKey(context, (Integer)key, value);
+          return new VersionedStatsRegionEntryOffHeapIntKey(context, (Integer) key, value);
-          return new VersionedStatsRegionEntryOffHeapLongKey(context, (Long)key, value);
+          return new VersionedStatsRegionEntryOffHeapLongKey(context, (Long) key, value);
-              return new VersionedStatsRegionEntryOffHeapStringKey1(context, skey, value, byteEncoded);
+              return new VersionedStatsRegionEntryOffHeapStringKey1(context, skey, value,
+                  byteEncoded);
-              return new VersionedStatsRegionEntryOffHeapStringKey2(context, skey, value, byteEncoded);
+              return new VersionedStatsRegionEntryOffHeapStringKey2(context, skey, value,
+                  byteEncoded);
-          return new VersionedStatsRegionEntryOffHeapUUIDKey(context, (UUID)key, value);
+          return new VersionedStatsRegionEntryOffHeapUUIDKey(context, (UUID) key, value);
+
-	@Override
+
+    @Override

