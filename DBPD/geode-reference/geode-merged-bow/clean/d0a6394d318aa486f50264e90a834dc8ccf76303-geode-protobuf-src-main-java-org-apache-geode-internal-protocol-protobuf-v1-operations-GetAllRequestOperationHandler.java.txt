GEODE-4168 Can't get json object stored as PDX using the new protocol
GEODE-4116 Can't get PDX objects using the new protocol

Added a distributed test to ensure end-to-end handling of JSON documents
is functioning correctly.  For GEODE-4168 I changed the class-check from
equals() to isAssignableFrom().  For GEODE-4116 I modified the Get and
GetAll operation handlers to inhibit deserialization of PdxInstances
when reading values from the cache.  The test for 4116 ensures that
the value is in serialized form by putting it into a distributed Region
in another JVM.

There are unrelated javadoc changes in this commit for DM.java and
a couple of classes in the protobuf Driver module.  I also added
constraints to the Regions in the Driver's unit test to get rid of
compilation warnings.

This closes #1209

+import org.apache.geode.internal.cache.InternalCache;
-    Map<Boolean, List<Object>> resultsCollection = request.getKeyList().stream()
-        .map((key) -> processOneMessage(serializationService, region, key))
-        .collect(Collectors.partitioningBy(x -> x instanceof BasicTypes.Entry));
+    Map<Boolean, List<Object>> resultsCollection;
+    try {
+      ((InternalCache) messageExecutionContext.getCache()).setReadSerializedForCurrentThread(true);
+
+      resultsCollection = request.getKeyList().stream()
+          .map((key) -> processOneMessage(serializationService, region, key))
+          .collect(Collectors.partitioningBy(x -> x instanceof BasicTypes.Entry));
+    } finally {
+      ((InternalCache) messageExecutionContext.getCache()).setReadSerializedForCurrentThread(false);
+    }

INS26 INS40 INS54 INS8 INS8 INS21 INS21 INS21 INS32 INS7 INS32 INS36 INS42 INS9 INS42 MOV32 INS36 INS42 INS9 INS11 INS11 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42