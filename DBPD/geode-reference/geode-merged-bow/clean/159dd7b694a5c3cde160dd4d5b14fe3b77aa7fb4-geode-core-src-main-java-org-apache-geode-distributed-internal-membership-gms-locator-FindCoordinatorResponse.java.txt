GEODE-6883 Move the membership code into a separate gradle sub-project

This commit is focused on removing references to
InternalDistributedMember and DistributionMessage from "gms"
packages.

    GMS classes only refer to GMSMember
    GMS classes use GMSMembershipView.  NetView is now an interface
    GMS classes do not refer to DistributionMessage.  JGroupsMessenger
      expects GMSMessage instances.  Geode messages to be sent over UDP
      are wrapped in a GMSMessageAdapter.
    "gms" messages extend AbstractGMSMessage which implements GMSMessage
    GMSMembershipManager has an inner class that implements the GMS Manager
      interface and is now in the "adapter" package
    GMSMembershipManager translates GMSMembershipView into a MembershipView
      for the rest of Geode to use (this is the old NetView class)
    GMS instantiation allows us to inject the Manager into the new Services
      instance.
    Other adapter classes have been added to translate between Geode
      and GMS.

    GMSUtil has new methods for marshalling/unmarshalling
    InternalDistributedMember instances for backward-compatibility.
    GMSMember now has the same on-wire form as
    InternalDistributedMember.  This allows the GMS classes to
    deserialize a message from a pre-1.10 member whose code writes
    InternalDistributedMembers when serializing something like a
    JoinRequest.

-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.distributed.internal.membership.NetView;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.distributed.internal.membership.gms.messages.AbstractGMSMessage;
-public class FindCoordinatorResponse extends HighPriorityDistributionMessage
+public class FindCoordinatorResponse extends AbstractGMSMessage
-  private InternalDistributedMember coordinator;
-  private InternalDistributedMember senderId;
+  private GMSMember coordinator;
+  private GMSMember senderId;
-  private NetView view;
-  private Set<InternalDistributedMember> registrants;
+  private GMSMembershipView view;
+  private Set<GMSMember> registrants;
-  public FindCoordinatorResponse(InternalDistributedMember coordinator,
-      InternalDistributedMember senderId, boolean fromView, NetView view,
-      HashSet<InternalDistributedMember> registrants, boolean networkPartitionDectionEnabled,
+  public FindCoordinatorResponse(GMSMember coordinator,
+      GMSMember senderId, boolean fromView, GMSMembershipView view,
+      HashSet<GMSMember> registrants, boolean networkPartitionDectionEnabled,
-  public FindCoordinatorResponse(InternalDistributedMember coordinator,
-      InternalDistributedMember senderId, byte[] pk, int requestId) {
+  public FindCoordinatorResponse(GMSMember coordinator,
+      GMSMember senderId, byte[] pk, int requestId) {
-  public InternalDistributedMember getCoordinator() {
+  public GMSMember getCoordinator() {
-  public InternalDistributedMember getSenderId() {
+  public GMSMember getSenderId() {
-  public NetView getView() {
+  public GMSMembershipView getView() {
-  public Set<InternalDistributedMember> getRegistrants() {
+  public Set<GMSMember> getRegistrants() {
-          + ", locators preferred as coordinators=" + this.usePreferredCoordinators + ")";
+          + ", locators preferred as coordinators=" + this.usePreferredCoordinators
+          + ", view=" + view + ")";
+  // TODO serialization not backward compatible with 1.9 - may need InternalDistributedMember, not
+  // GMSMember
-    DataSerializer.writeObject(coordinator, out);
-    DataSerializer.writeObject(senderId, out);
+    GMSUtil.writeMemberID(coordinator, out);
+    GMSUtil.writeMemberID(senderId, out);
-    InternalDataSerializer.writeSet(registrants, out);
+    GMSUtil.writeSetOfMemberIDs(registrants, out);
-    coordinator = DataSerializer.readObject(in);
-    senderId = DataSerializer.readObject(in);
+    coordinator = GMSUtil.readMemberID(in);
+    senderId = GMSUtil.readMemberID(in);
-      registrants = InternalDataSerializer.readHashSet(in);
+      registrants = GMSUtil.readHashSetOfMemberIDs(in);
-  protected void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message should not be executed");
-  }
-
-  @Override

UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD43 UPD74 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS45 INS42 UPD42 UPD42 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31