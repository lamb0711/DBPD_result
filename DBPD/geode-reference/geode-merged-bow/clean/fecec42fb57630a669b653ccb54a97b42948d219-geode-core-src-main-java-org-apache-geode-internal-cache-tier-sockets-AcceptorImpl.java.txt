GEODE-3059: LoadMonitor.connectionClosed incrementing statistics only for client-server connection

The stat should only be incremented/decremented for certain kinds of
connections.  I've modified it to include protobuf connections.  All
of the constant byte identifiers in Acceptor.java have been moved to
an enum in CommunicationMode.java.  In that class I've added some
"isa" checks to replace the many big "if" checks for different kinds
of connection modes.

A new connection modes will henceforth need to be added to
CommunicationMode.java where the appropriate "isa" methods can be
updated to include the new mode.

+import static org.apache.geode.internal.cache.tier.CommunicationMode.ClientToServerForQueue;
+import org.apache.geode.internal.cache.tier.CommunicationMode;
-import javax.net.ssl.SSLException;
+    final CommunicationMode mode;
+    try {
+      mode = CommunicationMode.fromModeNumber(communicationMode);
+    } catch (IllegalArgumentException e) {
+      // possible if a client uses SSL & the server isn't configured to use SSL
+      logger.warn("Error processing client connection", e);
+      throw new EOFException();
+    }
+
-    if (communicationMode == PRIMARY_SERVER_TO_CLIENT
-        || communicationMode == SECONDARY_SERVER_TO_CLIENT) {
-      boolean primary = communicationMode == PRIMARY_SERVER_TO_CLIENT;
+    if (mode.isSubscriptionFeed()) {
+      boolean primary = mode == CommunicationMode.PrimaryServerToClient;
-    communicationModeStr = getCommunicationMode(communicationMode);
+    communicationModeStr = mode.toString();
-    if (communicationMode != CLIENT_TO_SERVER_FOR_QUEUE) {
+    boolean notForQueue = (mode != ClientToServerForQueue);
+    if (notForQueue) {
-    if (communicationMode != CLIENT_TO_SERVER_FOR_QUEUE) {
+    if (notForQueue) {
-  private String getCommunicationMode(byte communicationMode) throws IOException {
-    switch (communicationMode) {
-      default:
-        throw new IOException("Acceptor received unknown communication mode: " + communicationMode);
-      case CLIENT_TO_SERVER:
-        return "client";
-      case GATEWAY_TO_GATEWAY:
-        return "gateway";
-      case MONITOR_TO_SERVER:
-        return "monitor";
-      case CLIENT_TO_SERVER_FOR_QUEUE:
-        return "clientToServerForQueue";
-      case PROTOBUF_CLIENT_SERVER_PROTOCOL:
-        return "Protobuf client";
-    }
-  }
-

MOV26 INS26 INS40 UPD40 INS60 INS54 INS21 INS60 INS83 INS43 INS59 INS8 INS12 INS32 INS7 INS39 INS59 INS42 INS42 INS42 INS42 MOV21 INS44 INS8 INS42 INS42 INS42 INS32 INS42 INS36 INS43 INS42 INS21 INS53 INS42 INS42 INS27 UPD42 INS42 INS32 INS14 INS42 INS42 UPD42 INS42 INS42 INS42 INS45 INS42 INS43 UPD42 INS40 INS42 DEL42 DEL42 DEL27 DEL42 DEL42 DEL27 DEL27 DEL42 DEL42 DEL42 DEL27 DEL42 DEL42 DEL27 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL49 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL42 DEL49 DEL45 DEL41 DEL42 DEL49 DEL45 DEL41 DEL42 DEL49 DEL45 DEL41 DEL42 DEL49 DEL45 DEL41 DEL42 DEL49 DEL45 DEL41 DEL50 DEL8 DEL31