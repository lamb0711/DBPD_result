GEODE-6185: management rest end point returns correct status code and message

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>


-import javax.management.InstanceNotFoundException;
-import javax.management.MalformedObjectNameException;
-import org.apache.logging.log4j.Logger;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.security.access.AccessDeniedException;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.management.internal.api.ClusterManagementResult;
-import org.apache.geode.security.AuthenticationFailedException;
-import org.apache.geode.security.NotAuthorizedException;
-  private static final Logger logger = LogService.getLogger();
-
-  @ExceptionHandler(Exception.class)
-  public ResponseEntity<ClusterManagementResult> internalError(final Exception e) {
-    logger.error(e.getMessage(), e);
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.INTERNAL_SERVER_ERROR);
-  }
-
-  @ExceptionHandler(AuthenticationFailedException.class)
-  public ResponseEntity<ClusterManagementResult> unauthorized(AuthenticationFailedException e) {
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.UNAUTHORIZED);
-  }
-
-  @ExceptionHandler({NotAuthorizedException.class, SecurityException.class})
-  public ResponseEntity<ClusterManagementResult> forbidden(Exception e) {
-    logger.info(e.getMessage());
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.FORBIDDEN);
-  }
-
-  @ExceptionHandler(MalformedObjectNameException.class)
-  public ResponseEntity<ClusterManagementResult> badRequest(final MalformedObjectNameException e) {
-    logger.info(e.getMessage(), e);
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.BAD_REQUEST);
-  }
-
-  @ExceptionHandler(InstanceNotFoundException.class)
-  public ResponseEntity<ClusterManagementResult> notFound(final InstanceNotFoundException e) {
-    logger.info(e.getMessage(), e);
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.NOT_FOUND);
-  }
-
-  /**
-   * Handles an AccessDenied Exception thrown by a REST API web service endpoint, HTTP request
-   * handler method.
-   * <p/>
-   *
-   * @param cause the Exception causing the error.
-   * @return a ResponseEntity with an appropriate HTTP status code (403 - Forbidden)
-   */
-  @ExceptionHandler(AccessDeniedException.class)
-  public ResponseEntity<ClusterManagementResult> handleException(
-      final AccessDeniedException cause) {
-    logger.info(cause.getMessage(), cause);
-    return new ResponseEntity<>(new ClusterManagementResult(false, cause.getMessage()),
-        HttpStatus.FORBIDDEN);
-  }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL42 DEL42 DEL43 DEL57 DEL79 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL43 DEL57 DEL79 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL43 DEL57 DEL42 DEL43 DEL57 DEL4 DEL79 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL43 DEL57 DEL79 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL43 DEL57 DEL79 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL57 DEL79 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31