Merge branch 'release/1.5.0'

-import org.apache.geode.internal.protocol.OperationContext;
+import org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.DecodingException;
-public class ProtobufOperationContext<OperationRequest, OperationResponse> extends
-    OperationContext<OperationRequest, OperationResponse, ClientProtocol.ErrorResponse, ClientProtocol.Request, ClientProtocol.Response.Builder, ProtobufSerializationService> {
-
-  public ProtobufOperationContext(Function<ClientProtocol.Request, OperationRequest> fromRequest,
-      ProtobufOperationHandler<OperationRequest, OperationResponse> operationHandler,
-      Function<OperationResponse, ClientProtocol.Response.Builder> toResponse,
-      ResourcePermission permissionRequired) {
-    super(fromRequest, operationHandler, toResponse, permissionRequired);
+public class ProtobufOperationContext<OperationRequest, OperationResponse> {
+  @FunctionalInterface
+  public interface PermissionFunction<OperationRequest> {
+    ResourcePermission apply(OperationRequest request, ProtobufSerializationService service)
+        throws DecodingException;
-  @Override
-  protected ClientProtocol.Response.Builder makeErrorBuilder(
+  private final ProtobufOperationHandler<OperationRequest, OperationResponse> operationHandler;
+  private final Function<ClientProtocol.Message, OperationRequest> fromRequest;
+  private final Function<OperationResponse, ClientProtocol.Message.Builder> toResponse;
+  private final Function<ClientProtocol.ErrorResponse, ClientProtocol.Message.Builder> toErrorResponse;
+  private final PermissionFunction<OperationRequest> accessPermissionRequired;
+
+  private class StaticResourcePermissionProvider implements PermissionFunction<OperationRequest> {
+    private final ResourcePermission permission;
+
+    StaticResourcePermissionProvider(ResourcePermission requiredPermission) {
+      permission = requiredPermission;
+    }
+
+    @Override
+    public ResourcePermission apply(OperationRequest request,
+        ProtobufSerializationService serializer) {
+      return permission;
+    }
+  }
+
+  public ProtobufOperationContext(Function<ClientProtocol.Message, OperationRequest> fromRequest,
+      ProtobufOperationHandler<OperationRequest, OperationResponse> operationHandler,
+      Function<OperationResponse, ClientProtocol.Message.Builder> toResponse,
+      ResourcePermission permissionRequired) {
+    this.operationHandler = operationHandler;
+    this.fromRequest = fromRequest;
+    this.toResponse = toResponse;
+    this.toErrorResponse = this::makeErrorBuilder;
+    accessPermissionRequired = new StaticResourcePermissionProvider(permissionRequired);
+  }
+
+  public ProtobufOperationContext(Function<ClientProtocol.Message, OperationRequest> fromRequest,
+      ProtobufOperationHandler<OperationRequest, OperationResponse> operationHandler,
+      Function<OperationResponse, ClientProtocol.Message.Builder> toResponse,
+      PermissionFunction<OperationRequest> permissionRequired) {
+    this.operationHandler = operationHandler;
+    this.fromRequest = fromRequest;
+    this.toResponse = toResponse;
+    this.toErrorResponse = this::makeErrorBuilder;
+    accessPermissionRequired = permissionRequired;
+  }
+
+
+  protected ClientProtocol.Message.Builder makeErrorBuilder(
-    return ClientProtocol.Response.newBuilder().setErrorResponse(errorResponse);
+    return ClientProtocol.Message.newBuilder().setErrorResponse(errorResponse);
+  }
+
+  public ProtobufOperationHandler<OperationRequest, OperationResponse> getOperationHandler() {
+    return operationHandler;
+  }
+
+  public Function<ClientProtocol.Message, OperationRequest> getFromRequest() {
+    return fromRequest;
+  }
+
+  public Function<OperationResponse, ClientProtocol.Message.Builder> getToResponse() {
+    return toResponse;
+  }
+
+  public Function<ClientProtocol.ErrorResponse, ClientProtocol.Message.Builder> getToErrorResponse() {
+    return toErrorResponse;
+  }
+
+  public ResourcePermission getAccessPermissionRequired(OperationRequest request,
+      ProtobufSerializationService serializer) throws DecodingException {
+    return accessPermissionRequired.apply(request, serializer);

MOV26 UPD40 INS55 INS23 INS23 INS23 INS23 INS23 INS55 INS31 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS42 INS73 INS31 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS83 INS42 INS74 INS23 INS31 INS31 INS83 INS42 INS44 INS44 INS44 INS44 INS8 UPD43 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS44 INS44 INS43 INS43 MOV43 MOV43 INS42 MOV43 UPD43 MOV43 MOV43 INS42 MOV43 MOV43 UPD43 MOV43 INS42 INS43 MOV43 INS43 INS42 INS43 INS43 INS42 INS43 INS43 INS83 INS83 INS43 INS59 INS42 INS44 INS8 MOV78 INS83 INS43 INS42 INS44 INS44 INS8 UPD74 UPD74 INS21 INS21 INS21 INS21 INS21 INS74 INS42 INS74 INS42 INS74 INS42 INS74 INS42 INS21 INS21 INS21 INS21 INS21 UPD40 INS43 INS43 INS43 INS41 INS43 INS43 INS43 INS41 INS43 INS43 INS43 INS41 INS43 INS43 INS43 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 MOV43 INS42 INS42 INS42 UPD40 UPD40 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS43 INS42 INS41 INS43 UPD43 INS43 INS43 INS43 UPD43 INS7 INS7 INS7 INS7 INS7 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS7 INS42 INS42 INS42 INS42 UPD40 INS42 INS42 INS42 UPD40 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS90 INS42 INS14 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS90 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 UPD40 INS42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL46