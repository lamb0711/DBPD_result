GEODE-5971: Refactor gateway receiver/gateway sender commands to extend SingleGfshCommand base type (#2769)

* GEODE-5971 Refactor gateway receiver/gateway sender commands to extend SingleGfshCommand base type

Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>

+import java.util.List;
+import java.util.Optional;
+import java.util.stream.Collectors;
+
+import org.apache.geode.cache.configuration.CacheConfig;
+import org.apache.geode.cache.configuration.DeclarableType;
-  private static final long serialVersionUID = -5158224572470173267L;
+  private static final long serialVersionUID = 4636678328980816780L;
-  private final String[] gatewayEventFilters;
-  private final String[] gatewayTransportFilters;
+  private final List<String> gatewayEventFilters;
+  private final List<String> gatewayTransportFilters;
-  public GatewaySenderFunctionArgs(String id, Integer remoteDSId, Boolean parallel,
-      Boolean manualStart, Integer socketBufferSize, Integer socketReadTimeout,
-      Boolean enableBatchConflation, Integer batchSize, Integer batchTimeInterval,
-      Boolean enablePersistence, String diskStoreName, Boolean diskSynchronous,
-      Integer maxQueueMemory, Integer alertThreshold, Integer dispatcherThreads, String orderPolicy,
-      String[] gatewayEventFilters, String[] gatewayTransportFilters) {
+  public GatewaySenderFunctionArgs(CacheConfig.GatewaySender sender) {
+    this.id = sender.getId();
+    this.remoteDSId = string2int(sender.getRemoteDistributedSystemId());
+    this.parallel = sender.isParallel();
+    this.manualStart = sender.isManualStart();
+    this.socketBufferSize = string2int(sender.getSocketBufferSize());
+    this.socketReadTimeout = string2int(sender.getSocketReadTimeout());
+    this.enableBatchConflation = sender.isEnableBatchConflation();
+    this.batchSize = string2int(sender.getBatchSize());
+    this.batchTimeInterval = string2int(sender.getBatchTimeInterval());
+    this.enablePersistence = sender.isEnablePersistence();
+    this.diskStoreName = sender.getDiskStoreName();
+    this.diskSynchronous = sender.isDiskSynchronous();
+    this.maxQueueMemory = string2int(sender.getMaximumQueueMemory());
+    this.alertThreshold = string2int(sender.getAlertThreshold());
+    this.dispatcherThreads = string2int(sender.getDispatcherThreads());
+    this.orderPolicy = sender.getOrderPolicy();
+    this.gatewayEventFilters =
+        Optional.of(sender.getGatewayEventFilters())
+            .map(filters -> filters
+                .stream().map(DeclarableType::getClassName)
+                .collect(Collectors.toList()))
+            .orElse(null);
+    this.gatewayTransportFilters =
+        Optional.of(sender.getGatewayTransportFilters())
+            .map(filters -> filters
+                .stream().map(DeclarableType::getClassName)
+                .collect(Collectors.toList()))
+            .orElse(null);
+  }
-    this.id = id;
-    this.remoteDSId = remoteDSId;
-    this.parallel = parallel;
-    this.manualStart = manualStart;
-    this.socketBufferSize = socketBufferSize;
-    this.socketReadTimeout = socketReadTimeout;
-    this.enableBatchConflation = enableBatchConflation;
-    this.batchSize = batchSize;
-    this.batchTimeInterval = batchTimeInterval;
-    this.enablePersistence = enablePersistence;
-    this.diskStoreName = diskStoreName;
-    this.diskSynchronous = diskSynchronous;
-    this.maxQueueMemory = maxQueueMemory;
-    this.alertThreshold = alertThreshold;
-    this.dispatcherThreads = dispatcherThreads;
-    this.orderPolicy = orderPolicy;
-    this.gatewayEventFilters = gatewayEventFilters;
-    this.gatewayTransportFilters = gatewayTransportFilters;
+  private Integer string2int(String x) {
+    return Optional.ofNullable(x).map(Integer::valueOf).orElse(null);
-  public String[] getGatewayEventFilter() {
+  public List<String> getGatewayEventFilter() {
-  public String[] getGatewayTransportFilter() {
+  public List<String> getGatewayTransportFilter() {

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS74 INS74 MOV83 MOV42 MOV44 MOV8 INS83 MOV43 INS42 MOV44 INS8 INS74 INS74 INS34 INS43 MOV43 INS43 MOV43 UPD43 UPD42 MOV43 INS42 INS41 INS43 MOV43 INS43 MOV43 UPD42 MOV42 INS42 INS40 INS32 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS33 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS32 INS42 INS33 INS32 INS42 INS90 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS86 INS32 INS42 INS86 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS59 INS32 INS42 INS42 INS32 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS90 INS42 INS42 INS32 INS42 INS90 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL34 DEL38 DEL43 DEL85 DEL5 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL85 DEL5 DEL42 DEL44 DEL31 DEL85 DEL5 DEL85 DEL5