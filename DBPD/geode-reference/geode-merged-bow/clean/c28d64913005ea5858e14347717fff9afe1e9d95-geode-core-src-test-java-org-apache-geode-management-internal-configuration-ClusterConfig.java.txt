Merge branch 'release/1.4.0'

-import org.apache.commons.lang.StringUtils;
-import org.apache.geode.cache.Cache;
-import org.apache.geode.distributed.internal.ClusterConfigurationService;
-import org.apache.geode.distributed.internal.InternalLocator;
-import org.apache.geode.internal.ClassPathLoader;
-import org.apache.geode.internal.DeployedJar;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-import org.apache.geode.management.internal.configuration.domain.Configuration;
-import org.apache.geode.test.junit.rules.Locator;
-import org.apache.geode.test.dunit.rules.LocatorServerStartupRule;
-import org.apache.geode.test.dunit.rules.MemberVM;
-import org.apache.geode.test.junit.rules.Server;
-
+import java.util.Objects;
+import org.apache.commons.lang.StringUtils;
+
+import org.apache.geode.cache.Cache;
+import org.apache.geode.distributed.internal.ClusterConfigurationService;
+import org.apache.geode.distributed.internal.InternalLocator;
+import org.apache.geode.internal.ClassPathLoader;
+import org.apache.geode.internal.DeployedJar;
+import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.management.internal.configuration.domain.Configuration;
+import org.apache.geode.test.dunit.rules.ClusterStartupRule;
+import org.apache.geode.test.dunit.rules.MemberVM;
+
-  public String getMaxLogFileSize() {
+  public Set<String> getMaxLogFileSizes() {
-      return null;
+      return Collections.emptySet();
-    ConfigGroup lastGroupAdded = this.groups.get(this.groups.size() - 1);
-    return lastGroupAdded.getMaxLogFileSize();
+    return this.groups.stream().map(ConfigGroup::getMaxLogFileSize).filter(Objects::nonNull)
+        .collect(toSet());
-  public void verifyLocator(MemberVM<Locator> locatorVM) {
+  public void verifyLocator(MemberVM locatorVM) {
-      InternalLocator internalLocator = LocatorServerStartupRule.locatorStarter.getLocator();
+      InternalLocator internalLocator = ClusterStartupRule.getLocator();
-      Set<String> actualGroupConfigs = sc.getEntireConfiguration().keySet();
+      Set<String> actualGroupConfigs = sc.getConfigurationRegion().keySet();
-  public void verifyServer(MemberVM<Server> serverVM) {
+  public void verifyServer(MemberVM serverVM) {
-      if (StringUtils.isNotBlank(this.getMaxLogFileSize())) {
+      if (this.getMaxLogFileSizes().size() > 0) {
-        assertThat(props.getProperty(LOG_FILE_SIZE_LIMIT)).isEqualTo(this.getMaxLogFileSize());
+        assertThat(this.getMaxLogFileSizes()).contains(props.getProperty(LOG_FILE_SIZE_LIMIT));
-        DeployedJar deployedJar = ClassPathLoader.getLatest().getJarDeployer().findDeployedJar(jar);
+        DeployedJar deployedJar = ClassPathLoader.getLatest().getJarDeployer().getDeployedJar(jar);
-            ClassPathLoader.getLatest().getJarDeployer().findDeployedJar(jar);
+            ClassPathLoader.getLatest().getJarDeployer().getDeployedJar(jar);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 INS74 UPD42 INS43 INS43 INS41 MOV43 MOV43 INS42 MOV42 INS32 INS32 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 INS90 UPD42 MOV42 INS42 INS42 INS32 INS42 INS90 INS42 INS42 MOV22 INS42 INS42 INS42 INS27 INS32 INS34 INS42 MOV32 INS42 MOV32 UPD42 UPD42 INS32 INS42 MOV42 INS32 UPD42 UPD42 INS52 INS42 DEL40 DEL26 DEL43 DEL33 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL34 DEL27 DEL32 DEL59 DEL60 DEL32 DEL41 DEL42 DEL43 DEL74 DEL40 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL52 DEL42 DEL32 DEL32