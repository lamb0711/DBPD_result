GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import java.io.BufferedReader;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.PrintStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+import java.util.concurrent.atomic.AtomicReference;
+
+import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
-import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
-import java.io.BufferedReader;
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.PrintStream;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Set;
-import java.util.concurrent.atomic.AtomicReference;
-
- * </p>
- * 
+ *
-  protected Set<DistributedMember> getMembers(final Cache cache) {
+  protected Set<DistributedMember> getMembers(final InternalCache cache) {
-  protected Set<DistributedMember> getNormalMembers(final Cache cache) {
+  protected Set<DistributedMember> getNormalMembers(final InternalCache cache) {
-      GemFireCacheImpl cache = (GemFireCacheImpl) CacheFactory.getAnyInstance();
+      InternalCache cache = getCache();
-
-
-
-      diskStoreAttributes.setDiskUsageWarningPercentage(diskUsageWarningPercentage);;
+      diskStoreAttributes.setDiskUsageWarningPercentage(diskUsageWarningPercentage);
-
-        InternalDistributedSystem ds =
-            (InternalDistributedSystem) getCache().getDistributedSystem();
+        InternalDistributedSystem ds = getCache().getInternalDistributedSystem();
-    Cache cache = getCache();
+    InternalCache cache = getCache();
-
-
-      // do we have to waitFor??
-      // upgraderProcess.waitFor();
-
-
-      DistributedSystemMXBean dsMXBean = ManagementService
-          .getManagementService(CacheFactory.getAnyInstance()).getDistributedSystemMXBean();
+      DistributedSystemMXBean dsMXBean =
+          ManagementService.getManagementService(getCache()).getDistributedSystemMXBean();
-
-
-

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 INS32 UPD42 MOV42 MOV32 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL42 DEL43 DEL42 DEL32 DEL11 DEL20 DEL42 DEL43 DEL11 DEL42