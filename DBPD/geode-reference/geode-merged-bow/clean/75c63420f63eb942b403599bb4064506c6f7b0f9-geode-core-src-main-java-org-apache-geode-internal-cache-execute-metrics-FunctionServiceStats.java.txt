GEODE-7184: Add function execution timers (#4135)

- Add micrometer timers for recording function executions
- Refactor FunctionStats and FunctionServiceStats
- Change static fields to instance fields on FunctionStatsManager
- Mark static field as @Immutable on NoopMeterRegistry
- Rename FunctionServiceStats.endFunctionExecutionWithElapsedTime to
distinguish it from FunctionStats.endFunctionExecution which takes a
start time.
- Remove extra call to FunctionStats.getTime() in
MemberFunctionStreamingMessage and add boolean to prevent calling
endFunctionExecutionWithException before startFunctionExecution was
called.
- Remove FunctionStats.getTime() in favor of returning the time from
FunctionStats.startFunctionExecution()

Functions with hasResult()=false execute asynchronously on an executor.
Previously, the instrumentation code recorded a successful function
execution after submitting a function to an executor, which is incorrect
because the function has not necessarily executed at that point. Now, we
record the execution time only after the function actually executes.

Co-authored-by: Aaron Lindsey <alindsey@pivotal.io>
Co-authored-by: Kirk Lund <klund@apache.org>
Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Mark Hanson <mhanson@pivotal.io>
-package org.apache.geode.internal.cache.execute;
+package org.apache.geode.internal.cache.execute.metrics;
-   * @param start The start of the functionExecution (which is decremented from the current time to
-   *        determine the function Execution processing time).
+   * @param elapsedNanos The elapsed time for function execution in nanoseconds
-  public void endFunctionExecution(long start, boolean haveResult) {
-    long ts = getTime();
-
+  public void endFunctionExecutionWithElapsedTime(long elapsedNanos, boolean haveResult) {
-    long elapsed = ts - start;
-    this._stats.incLong(_functionExecutionsCompletedProcessingTimeId, elapsed);
+    this._stats.incLong(_functionExecutionsCompletedProcessingTimeId, elapsedNanos);
-      this._stats.incLong(_functionExecutionsHasResultCompletedProcessingTimeId, elapsed);
+      this._stats.incLong(_functionExecutionsHasResultCompletedProcessingTimeId, elapsedNanos);
-

UPD40 UPD42 MOV8 UPD42 MOV21 MOV21 INS25 UPD42 UPD66 INS42 INS8 UPD42 UPD42 MOV21 MOV21 UPD42 UPD42 DEL66 DEL39 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL27 DEL59 DEL60 DEL42 DEL25 DEL8