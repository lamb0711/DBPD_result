GEODE-7953: Restore Redundancy Internal API (#5010)

- Add RestoreRedundancyOperation interface and Impl class
- Add RestoreRedundancyResults interface and Impl class
- Add RegionRedundancyStatus interface and Impl class
- Add accessor methods for RestoreRedundancyOperation to ResourceManager interface
- Replace manually-synchronized sets in InternalResourceManager with
ConcurrentHashMap
- Add stats for restore redundancy operations
- Add unit and DUnit tests for all the above

This commit restores the changes originally introduced in 0f9918510b24f2169189936a92951b9bb4f313f1 and reverted in 9fad2c0fba51f1a8beb24c311255dfa55a537c99

Authored-by: Donal Evans <doevans@pivotal.io>
+import org.apache.geode.internal.cache.partitioned.rebalance.CompositeDirector;
-      PartitionedRegionLoadModel model = null;
+      PartitionedRegionLoadModel loadModel = null;
-      model = buildModel(parallelOperator, detailsMap, resourceManager);
+      loadModel = buildModel(parallelOperator, detailsMap, resourceManager);
-            model.getPartitionedMemberDetails(details.getRegionPath()));
+            loadModel.getPartitionedMemberDetails(details.getRegionPath()));
-      director.initialize(model);
+      director.initialize(loadModel);
+      String operationType = "Rebalancing";
+      if (director instanceof CompositeDirector
+          && ((CompositeDirector) director).isRestoreRedundancy()) {
+        operationType = "Restoring redundancy";
+      }
-          debug("Rebalancing {} detected membership changes. Refetching details", leaderRegion);
+          debug(operationType + " {} detected membership changes. Refetching details",
+              leaderRegion);
-          model.waitForOperations();
+          loadModel.waitForOperations();
-          model = buildModel(parallelOperator, detailsMap, resourceManager);
-          director.membershipChanged(model);
+          loadModel = buildModel(parallelOperator, detailsMap, resourceManager);
+          director.membershipChanged(loadModel);
-          logger.debug("Rebalancing {} Model:{}\n", leaderRegion, model);
+          logger.debug(operationType + " {} Model:{}\n", leaderRegion, loadModel);
-      debug("Rebalancing {} complete. Model:{}\n", leaderRegion, model);
+      debug(operationType + " {} complete. Model:{}\n", leaderRegion, loadModel);
-            model.getPartitionedMemberDetails(details.getRegionPath()));
+            loadModel.getPartitionedMemberDetails(details.getRegionPath()));
+  public PartitionedRegion getTargetRegion() {
+    return targetRegion;
+  }
+

INS26 INS40 INS31 INS83 INS43 INS42 INS8 INS42 INS41 INS42 INS60 INS25 INS43 INS59 INS27 INS8 UPD42 UPD42 UPD42 INS42 INS42 INS45 INS62 INS32 INS21 INS27 UPD42 INS42 INS43 INS36 INS42 INS7 INS42 INS45 INS42 INS11 INS42 INS45 UPD42 INS43 INS42 UPD42 INS42 INS27 UPD42 UPD42 UPD42 INS27 UPD42 INS42 INS45 INS42 INS45 DEL45 DEL45 DEL45