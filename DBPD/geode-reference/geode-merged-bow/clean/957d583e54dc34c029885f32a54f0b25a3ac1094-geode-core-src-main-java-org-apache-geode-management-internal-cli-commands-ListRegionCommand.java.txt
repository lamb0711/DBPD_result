GEODE-3267: Refactoring QueueCommands - updated based on feedback

+import java.util.Arrays;
+import java.util.List;
-import java.util.TreeSet;
+import java.util.stream.Collectors;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
-      Set<RegionInformation> regionInfoSet = new LinkedHashSet<>();
-      TabularResultData resultData = ResultBuilder.createTabularResultData();
-      ArrayList<?> resultList = (ArrayList<?>) rc.getResult();
+      List<?> resultList = (ArrayList<?>) rc.getResult();
-      if (resultList != null) {
-
-        for (Object resultObj : resultList) {
-          if (resultObj != null) {
-            if (resultObj instanceof Object[]) {
-              Object[] resultObjectArray = (Object[]) resultObj;
-              for (Object regionInfo : resultObjectArray) {
-                if (regionInfo instanceof RegionInformation) {
-                  regionInfoSet.add((RegionInformation) regionInfo);
-                }
-              }
-            }
-          }
-        }
-
-        Set<String> regionNames = new TreeSet<>();
-
-        for (RegionInformation regionInfo : regionInfoSet) {
-          regionNames.add(regionInfo.getName());
-          Set<String> subRegionNames = regionInfo.getSubRegionNames();
-
-          regionNames.addAll(subRegionNames);
-        }
-
-        for (String regionName : regionNames) {
-          resultData.accumulate("List of regions", regionName);
-        }
-
-        if (!regionNames.isEmpty()) {
-          result = ResultBuilder.buildResult(resultData);
-
-        } else {
-          result = ResultBuilder.createInfoResult(CliStrings.LIST_REGION__MSG__NOT_FOUND);
-        }
+      if (resultList == null) {
+        return null;
+
+      resultList.stream().filter(resultObj -> resultObj instanceof Object[])
+          .map(resultObj -> (Object[]) resultObj).flatMap(Arrays::stream)
+          .filter(regionInfo -> regionInfo instanceof RegionInformation)
+          .map(regionInfo -> (RegionInformation) regionInfo)
+          .collect(Collectors.toCollection(LinkedHashSet::new));

MOV26 MOV26 INS26 INS40 UPD40 UPD40 INS25 INS21 UPD74 UPD27 MOV27 INS8 INS32 UPD43 INS41 INS32 INS42 INS32 UPD42 INS33 INS32 UPD42 MOV42 INS86 UPD42 MOV42 UPD42 MOV42 INS89 INS32 UPD42 MOV42 INS86 INS59 MOV11 MOV43 INS32 INS42 INS90 INS59 MOV62 INS42 INS32 INS42 INS86 INS42 INS42 INS42 INS32 INS42 INS86 INS59 MOV11 INS42 INS42 INS59 MOV62 UPD42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL33 DEL27 DEL42 DEL43 DEL85 DEL5 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL40 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25