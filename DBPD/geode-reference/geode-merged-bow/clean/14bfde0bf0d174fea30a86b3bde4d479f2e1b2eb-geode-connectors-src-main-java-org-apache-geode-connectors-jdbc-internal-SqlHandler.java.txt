Merge branch 'release/1.8.0'

+import javax.sql.DataSource;
+
-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
+import org.apache.geode.internal.jndi.JNDIInvoker;
-  private final DataSourceManager manager;
+  private final DataSourceFactory dataSourceFactory;
-  public SqlHandler(DataSourceManager manager, TableMetaDataManager tableMetaDataManager,
-      JdbcConnectorService configService) {
-    this.manager = manager;
+  public SqlHandler(TableMetaDataManager tableMetaDataManager, JdbcConnectorService configService,
+      DataSourceFactory dataSourceFactory) {
+    this.dataSourceFactory = dataSourceFactory;
-  public void close() {
-    manager.close();
+  public SqlHandler(TableMetaDataManager tableMetaDataManager, JdbcConnectorService configService) {
+    this(tableMetaDataManager, configService,
+        dataSourceName -> JNDIInvoker.getDataSource(dataSourceName));
-  Connection getConnection(ConnectorService.Connection config) throws SQLException {
-    return manager.getOrCreateDataSource(config).getConnection();
+  Connection getConnection(String connectionName) throws SQLException {
+    return getDataSource(connectionName).getConnection();
+  }
+
+  DataSource getDataSource(String connectionName) {
+    DataSource dataSource = this.dataSourceFactory.getDataSource(connectionName);
+    if (dataSource == null) {
+      throw new JdbcConnectorException("JDBC connection with name " + connectionName
+          + " not found. Create the connection with the gfsh command 'create jndi-binding'");
+    }
+    return dataSource;
-    ConnectorService.RegionMapping regionMapping = getMappingForRegion(region.getName());
-    ConnectorService.Connection connectionConfig =
-        getConnectionConfig(regionMapping.getConnectionConfigName());
+    RegionMapping regionMapping = getMappingForRegion(region.getName());
-    try (Connection connection = getConnection(connectionConfig)) {
+    try (Connection connection = getConnection(regionMapping.getConnectionConfigName())) {
-  private ConnectorService.RegionMapping getMappingForRegion(String regionName) {
-    ConnectorService.RegionMapping regionMapping =
+  private RegionMapping getMappingForRegion(String regionName) {
+    RegionMapping regionMapping =
-  private ConnectorService.Connection getConnectionConfig(String connectionConfigName) {
-    ConnectorService.Connection connectionConfig =
-        this.configService.getConnectionConfig(connectionConfigName);
-    if (connectionConfig == null) {
-      throw new JdbcConnectorException("JDBC connection with name " + connectionConfigName
-          + " not found. Create the connection with the gfsh command 'create jdbc-connection'");
-    }
-    return connectionConfig;
-  }
-
-      value = character == Character.valueOf((char) 0) ? null : character.toString();
+      value = character.equals(Character.valueOf((char) 0)) ? null : character.toString();
-    ConnectorService.RegionMapping regionMapping = getMappingForRegion(region.getName());
-    ConnectorService.Connection connectionConfig =
-        getConnectionConfig(regionMapping.getConnectionConfigName());
+    RegionMapping regionMapping = getMappingForRegion(region.getName());
-    try (Connection connection = getConnection(connectionConfig)) {
+    try (Connection connection = getConnection(regionMapping.getConnectionConfigName())) {
-      ConnectorService.RegionMapping regionMapping, K key, PdxInstance value, Operation operation) {
+      RegionMapping regionMapping, K key, PdxInstance value, Operation operation) {
-      ConnectorService.RegionMapping regionMapping, PdxInstance value) {
+      RegionMapping regionMapping, PdxInstance value) {
+  public interface DataSourceFactory {
+    public DataSource getDataSource(String dataSourceName);
+  }

INS26 INS26 MOV23 MOV31 INS40 UPD40 INS40 MOV44 INS55 UPD43 MOV21 INS42 INS44 INS44 UPD43 UPD42 UPD43 INS83 INS42 INS31 UPD42 UPD42 UPD43 UPD42 INS43 INS42 INS43 INS42 INS17 UPD43 UPD42 INS42 UPD42 INS42 UPD43 UPD43 INS83 INS43 INS42 INS44 UPD42 INS42 INS42 INS42 INS42 INS86 INS42 UPD43 UPD42 UPD43 UPD43 UPD43 INS42 INS42 INS42 INS43 INS42 UPD42 INS59 INS32 INS42 UPD42 UPD42 INS42 MOV59 INS42 INS42 MOV59 INS42 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD45 INS32 INS42 INS42 MOV32 DEL39 DEL42 DEL32 DEL21 DEL40 DEL42 DEL83 DEL40 DEL40 DEL40 DEL40 DEL43 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL40 DEL40 DEL42 DEL27 DEL40 DEL40 DEL43 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL40 DEL40