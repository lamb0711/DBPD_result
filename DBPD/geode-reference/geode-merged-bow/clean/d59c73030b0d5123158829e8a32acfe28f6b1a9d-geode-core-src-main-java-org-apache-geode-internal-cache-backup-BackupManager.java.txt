Merge pull request #1053 from apache/feature/GEODE-3940

Feature/geode 3940
-package org.apache.geode.internal.cache;
+package org.apache.geode.internal.cache.backup;
+import java.nio.file.Files;
-import org.apache.geode.internal.cache.persistence.BackupInspector;
-import org.apache.geode.internal.cache.persistence.RestoreScript;
+import org.apache.geode.internal.cache.DirectoryHolder;
+import org.apache.geode.internal.cache.DiskStoreBackup;
+import org.apache.geode.internal.cache.DiskStoreImpl;
+import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.cache.Oplog;
-  private static final Logger logger = LogService.getLogger(BackupManager.class);
+  private static final Logger logger = LogService.getLogger();
-        oplog.copyTo(backupDir);
+        backupOplog(backupDir, oplog);
-        Object childLock = childOplog.lock;
+        Object childLock = childOplog.getLock();
-            logger.debug("done snaphotting for disk store {}", diskStore.getName());
+            logger.debug("done backing up disk store {}", diskStore.getName());
-      if (!done) {
-        if (backup != null) {
-          backupByDiskStore.remove(diskStore);
-          backup.cleanup();
-        }
+      if (!done && backup != null) {
+        backupByDiskStore.remove(diskStore);
+        backup.cleanup();
+  private void backupOplog(File targetDir, Oplog oplog) throws IOException {
+    File crfFile = oplog.getCrfFile();
+    backupFile(targetDir, crfFile);
+
+    File drfFile = oplog.getDrfFile();
+    backupFile(targetDir, drfFile);
+
+    oplog.finishKrf();
+    File krfFile = oplog.getKrfFile();
+    backupFile(targetDir, krfFile);
+  }
+
+  private void backupFile(File targetDir, File file) throws IOException {
+    if (file != null && file.exists()) {
+      try {
+        Files.createLink(targetDir.toPath().resolve(file.getName()), file.toPath());
+      } catch (IOException | UnsupportedOperationException e) {
+        logger.warn("Unable to create hard link for + {}. Reverting to file copy", targetDir);
+        FileUtils.copyFileToDirectory(file, targetDir);
+      }
+    }
+  }
+

INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 UPD40 INS40 INS40 INS40 UPD40 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS21 INS21 INS60 INS21 INS43 INS42 INS43 INS42 INS42 INS25 MOV8 INS42 INS42 INS43 INS59 INS32 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS42 INS42 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS32 INS54 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS8 INS12 MOV38 MOV27 INS21 INS44 INS8 INS32 INS84 INS42 INS21 INS21 UPD42 INS42 INS32 INS42 INS42 INS32 INS32 INS43 INS43 INS32 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD45 DEL42 DEL43 DEL57 DEL42 DEL40 DEL25 DEL8