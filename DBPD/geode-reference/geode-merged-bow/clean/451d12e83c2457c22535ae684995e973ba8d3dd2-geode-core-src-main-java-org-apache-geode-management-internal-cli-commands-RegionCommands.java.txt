GEODE-2919: Provide finer grained security

 - For full details, see https://cwiki.apache.org/confluence/display/GEODE/Finer+grained+security

+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeSet;
+
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
-import org.apache.geode.management.internal.cli.result.CommandResultException;
-import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeSet;
-  @CliMetaData(shellOnly = false, relatedTopic = CliStrings.TOPIC_GEODE_REGION)
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.READ)
+  @CliMetaData(relatedTopic = CliStrings.TOPIC_GEODE_REGION)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.READ)
-      Set<RegionInformation> regionInfoSet = new LinkedHashSet<RegionInformation>();
-      ResultCollector<?, ?> rc = null;
+      Set<RegionInformation> regionInfoSet = new LinkedHashSet<>();
+      ResultCollector<?, ?> rc;
-        Iterator<?> iters = resultList.iterator();
-        while (iters.hasNext()) {
-          Object resultObj = iters.next();
-
+        for (Object resultObj : resultList) {
-        Set<String> regionNames = new TreeSet<String>();
+        Set<String> regionNames = new TreeSet<>();
-          for (String subRegionName : subRegionNames) {
-            regionNames.add(subRegionName);
-          }
+          regionNames.addAll(subRegionNames);
-  @CliMetaData(shellOnly = false,
-      relatedTopic = {CliStrings.TOPIC_GEODE_REGION, CliStrings.TOPIC_GEODE_CONFIG})
+  @CliMetaData(relatedTopic = {CliStrings.TOPIC_GEODE_REGION, CliStrings.TOPIC_GEODE_CONFIG})
-    Result result = null;
+    Result result;
-      List<RegionDescription> regionDescriptionList = new ArrayList<RegionDescription>();
+      List<RegionDescription> regionDescriptionList = new ArrayList<>();
-      Iterator<RegionDescription> iters = regionDescriptionList.iterator();
-      while (iters.hasNext()) {
-        RegionDescription regionDescription = iters.next();
-
+      for (RegionDescription regionDescription : regionDescriptionList) {
-        String memberType = "";
+        String memberType;
-        // table.setHeader(CliStrings.format(CliStrings.DESCRIBE_REGION__NONDEFAULT__PERMEMBERATTRIBUTES__HEADER,
-        // memberType));
-            boolean memberNameAdded = false;
+            boolean memberNameAdded;
-                CliStrings.DESCRIBE_REGION__ATTRIBUTE__TYPE__REGION, ndRa, member, memberNameAdded);
+                CliStrings.DESCRIBE_REGION__ATTRIBUTE__TYPE__REGION, ndRa, member, false);
-            // Fix for #46767
-            // writeAttributeToTable(table, "", "", "", "");
-        if (setHeader == true) {
+        if (setHeader) {
-      Iterator<String> iters = attributes.iterator();
-
-      while (iters.hasNext()) {
-        String attributeName = iters.next();
+      for (String attributeName : attributes) {
-      Iterator<String> iters = attributes.iterator();
-
-      while (iters.hasNext()) {
-        String attributeName = iters.next();
+      for (String attributeName : attributes) {

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 INS70 INS70 INS70 INS44 INS42 MOV8 INS44 INS42 MOV8 INS44 INS42 MOV8 INS70 MOV43 INS42 MOV43 INS42 MOV43 INS42 UPD74 INS44 INS42 MOV8 UPD74 INS42 MOV43 INS42 MOV21 UPD74 UPD42 UPD42 INS9 DEL40 DEL26 DEL40 DEL26 DEL42 DEL9 DEL80 DEL42 DEL43 DEL33 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL8 DEL70 DEL42 DEL9 DEL80 DEL33 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL45 DEL9 DEL42 DEL42 DEL9 DEL27 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61