GEODE-6033: Add VMEventListener for DUnit Rules (#3161)

A DUnit Rule (or even a test) can now register a VMEventListener:

VM.getVMEventListenerRegistry().addVMEventListener(vmEventListener);

VMEventListeners will receive the following notifications:

void afterCreateVM(VM vm);
void beforeBounceVM(VM vm);
void afterBounceVM(VM vm);

DUnit Rules can use these callbacks in order to support dynamic 
creation or bouncing of VMs.

Add junitparams dependency to geode-dunit.

-import static org.apache.geode.test.dunit.VM.getVMCount;
-import static org.assertj.core.api.Assertions.assertThat;
+import org.apache.geode.test.dunit.VM;
+import org.apache.geode.test.dunit.VMEventListener;
-  private volatile int beforeVmCount;
-
-
-  public Statement apply(final Statement base, final Description description) {
-    return statement(base, description);
+  public Statement apply(final Statement statement, final Description description) {
+    return statement(statement, description);
-  private Statement statement(final Statement base, Description testDescription) {
+  private Statement statement(final Statement baseStatement, final Description description) {
-        beforeDistributedTest(testDescription);
+        VMEventListener vmEventListener = new InternalVMEventListener();
+        beforeDistributedTest(description);
+        VM.addVMEventListener(vmEventListener);
-          base.evaluate();
+          baseStatement.evaluate();
-          afterDistributedTest(testDescription);
+          VM.removeVMEventListener(vmEventListener);
+          afterDistributedTest(description);
-  private void beforeDistributedTest(Description testDescription) throws Throwable {
-    TestHistoryLogger.logTestHistory(testDescription.getTestClass().getSimpleName(),
-        testDescription.getMethodName());
+  private void beforeDistributedTest(final Description description) throws Throwable {
+    TestHistoryLogger.logTestHistory(description.getTestClass().getSimpleName(),
+        description.getMethodName());
-    beforeVmCount = getVMCount();
-    System.out.println("\n\n[setup] START TEST " + testDescription.getClassName() + "."
-        + testDescription.getMethodName());
+    System.out.println("\n\n[setup] START TEST " + description.getClassName() + "."
+        + description.getMethodName());
-  private void afterDistributedTest(Description testDescription) throws Throwable {
-    System.out.println("\n\n[setup] END TEST " + testDescription.getTestClass().getSimpleName()
-        + "." + testDescription.getMethodName());
-    int afterVmCount = getVMCount();
-    assertThat(afterVmCount).isEqualTo(beforeVmCount);
+  private void afterDistributedTest(final Description description) throws Throwable {
+    System.out.println("\n\n[setup] END TEST " + description.getTestClass().getSimpleName()
+        + "." + description.getMethodName());
-    // override
+    // override if needed
-    // override
+    // override if needed
+
+  protected void afterCreateVM(VM vm) {
+    // override if needed
+  }
+
+  protected void beforeBounceVM(VM vm) {
+    // override if needed
+  }
+
+  protected void afterBounceVM(VM vm) {
+    // override if needed
+  }
+
+  private class InternalVMEventListener implements VMEventListener {
+
+    @Override
+    public void afterCreateVM(VM vm) {
+      AbstractDistributedRule.this.afterCreateVM(vm);
+    }
+
+    @Override
+    public void beforeBounceVM(VM vm) {
+      AbstractDistributedRule.this.beforeBounceVM(vm);
+    }
+
+    @Override
+    public void afterBounceVM(VM vm) {
+      AbstractDistributedRule.this.afterBounceVM(vm);
+    }
+  }

MOV26 MOV26 UPD40 UPD40 INS31 INS31 INS31 INS31 INS55 MOV83 MOV39 MOV42 MOV44 MOV43 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS42 INS43 INS31 INS31 INS31 UPD42 UPD42 INS83 UPD42 INS83 UPD42 INS83 UPD42 MOV21 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS21 INS42 INS43 INS42 MOV21 UPD42 INS42 INS32 INS42 INS32 INS42 UPD42 INS52 INS42 INS42 INS52 UPD42 MOV42 INS42 INS52 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS60 INS21 UPD42 INS43 INS59 INS32 INS42 INS42 INS14 UPD42 INS42 INS42 INS42 INS21 INS43 INS32 INS42 UPD42 INS42 INS42 INS42 UPD42 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL32 DEL59 DEL60 DEL8 DEL31 DEL42 DEL32 DEL42