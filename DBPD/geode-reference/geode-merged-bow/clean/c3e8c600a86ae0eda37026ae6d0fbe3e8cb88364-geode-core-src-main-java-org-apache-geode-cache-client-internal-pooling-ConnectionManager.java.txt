Merge remote-tracking branch 'origin/develop' into geode-6400

+import org.apache.geode.InternalGemFireException;
+import org.apache.geode.cache.client.ServerConnectivityException;
+import org.apache.geode.cache.client.ServerOperationException;
+import org.apache.geode.distributed.PoolCancelledException;
-   * Borrow an existing idle connection or create a new one.
+   * Borrow an existing idle connection or create a new one. Fails after one failed attempt to
+   * create a new connection.
-   * @throws AllConnectionsInUseException If the maximum number of connections are already in use
+   * @throws AllConnectionsInUseException If the maximum number of connections are already, in use
+   * @throws ServerOperationException if there is an issue with security or connecting to a gateway
+   * @throws PoolCancelledException if the pool is being shut down
-   * Borrow an existing idle connection or create a new one to a specific server.
+   * Borrow an existing idle connection or create a new one to a specific server. Fails after one
+   * failed attempt to create a new connection. May cause pool to exceed maxConnections by one, if
+   * no connection is available.
+   * @param onlyUseExistingCnx if true, will not create a new connection if none are available.
-   * @throws AllConnectionsInUseException If the maximum number of connections are already in use
-   *         and no connection becomes free within the aquireTimeout.
-   * @throws NoAvailableServersException if we can't connect to any server
+   * @throws AllConnectionsInUseException If there is no available connection on the desired server,
+   *         and onlyUseExistingCnx is set.
+   * @throws ServerOperationException If there is an issue creating the connection due to security
+   * @throws NoAvailableServersException If we can't connect to any server
+   * @throws ServerConnectivityException If finding a connection and creating a connection both fail
+   *         to return a connection
-   * Exchange one connection for a new connection to a different server.
+   * Exchange one connection for a new connection to a different server. This method can break the
+   * max connection contract if there is no available connection and maxConnections has already been
+   * reached.
+   * @param aquireTimeout The amount of time to wait for a connection to be available
+   * @throws InternalGemFireException if the found connection is already active
+   * @throws NoAvailableServersException if no servers are available to connect to
+   * @throws ServerOperationException if creating a connection fails due to authentication issues
-  Connection exchangeConnection(Connection conn, Set/* <ServerLocation> */ excludedServers,
+  Connection exchangeConnection(Connection conn, Set<ServerLocation> excludedServers,
+   *
+   * @return true if connection activated, false if could not be activated because it is destroyed
+   * @throws InternalGemFireException when the connection is already active
-  void activate(Connection conn);
+  boolean activate(Connection conn);
+   *
+   * @throws InternalGemFireException when the connection is already passive

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD39 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS74 INS65 INS65 INS65 UPD66 INS66 UPD66 INS42 INS66 INS42 INS66 UPD66 INS66 INS66 INS42 INS66 UPD66 UPD66 INS42 INS66 UPD66 INS42 INS66 INS66 UPD66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 MOV43 INS43 INS66 INS42 INS66 INS42 INS66 INS42