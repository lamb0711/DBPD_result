Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   * TODO: Amogh: Using ConcurrentHashMap may be beneficial. It gives us
-   * putEntryIfAbsent()!
+   * TODO: Amogh: Using ConcurrentHashMap may be beneficial. It gives us putEntryIfAbsent()!
-   * This map helps us retrieve the proxy id at the receiver side during GII so
-   * that we can retain the cqlist of a client for an event which already
-   * existed at the receiver side.
+   * This map helps us retrieve the proxy id at the receiver side during GII so that we can retain
+   * the cqlist of a client for an event which already existed at the receiver side.
-    if (proxy != null){
+    if (proxy != null) {
-//    InternalDistributedSystem.getLoggerI18n().info(LocalizedStrings.DEBUG, "adding proxy for " + haName + ": " + proxy, new Exception("stack trace"));
+    // InternalDistributedSystem.getLoggerI18n().info(LocalizedStrings.DEBUG, "adding proxy for " +
+    // haName + ": " + proxy, new Exception("stack trace"));
-//    InternalDistributedSystem.getLoggerI18n().info(LocalizedStrings.DEBUG, "removing proxy for " + haName, new Exception("stack trace"));
+    // InternalDistributedSystem.getLoggerI18n().info(LocalizedStrings.DEBUG, "removing proxy for "
+    // + haName, new Exception("stack trace"));
-  
+
-	public Object getKey(Object key) {
-		Entry entry = (Entry) map.get(key);
-		return (entry == null) ? null : entry.getKey();
-	}
+  public Object getKey(Object key) {
+    Entry entry = (Entry) map.get(key);
+    return (entry == null) ? null : entry.getKey();
+  }
-    //return map.containsValue(value);
+    // return map.containsValue(value);
-    //return map.entrySet();
+    // return map.entrySet();
-    Entry entry = (Entry)map.get(key);
+    Entry entry = (Entry) map.get(key);
-    Entry entry = (Entry)map.remove(key);
+    Entry entry = (Entry) map.remove(key);
-    //return map.values();
+    // return map.values();

UPD66 UPD66 UPD66 DEL66 DEL66