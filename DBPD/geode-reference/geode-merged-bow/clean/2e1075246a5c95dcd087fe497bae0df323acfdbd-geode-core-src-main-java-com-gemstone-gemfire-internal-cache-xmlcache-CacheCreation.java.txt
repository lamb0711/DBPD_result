Merge branch 'release/1.0.0-incubating.M3'

-import com.gemstone.gemfire.cache.hdfs.HDFSStoreFactory;
-import com.gemstone.gemfire.cache.hdfs.internal.HDFSIntegrationUtil;
-import com.gemstone.gemfire.cache.hdfs.internal.HDFSStoreCreation;
-import com.gemstone.gemfire.cache.hdfs.internal.HDFSStoreFactoryImpl;
-import com.gemstone.gemfire.cache.hdfs.internal.HDFSStoreImpl;
- * @since 3.0
+ * @since GemFire 3.0
-  protected final Map hdfsStores = new LinkedHashMap();
-  
+
-   * @since 8.1
+   * @since GemFire 8.1
-   * @since 5.7
+   * @since GemFire 5.7
-   * @since 5.7
+   * @since GemFire 5.7
-   * @since prPersistSprint2
+   * @since GemFire prPersistSprint2
-   * @since 5.7
+   * @since GemFire 5.7
-   * @since 5.7
+   * @since GemFire 5.7
+    extensionPoint.beforeCreate(cache);
+
-    for(Iterator iter = this.hdfsStores.entrySet().iterator(); iter.hasNext(); ) {
-      Entry entry = (Entry) iter.next();
-      HDFSStoreCreation hdfsStoreCreation = (HDFSStoreCreation) entry.getValue();
-      HDFSStoreFactory storefactory = cache.createHDFSStoreFactory(hdfsStoreCreation);
-      storefactory.create((String) entry.getKey());
-    }
-
-      // TODO: HDFS: HDFS store/queue will be mapped against region path and not
-      // the attribute id; don't really understand what this is trying to do
-      if (creation.getHDFSStoreName() != null)
-      {
-        HDFSStoreImpl store = cache.findHDFSStore(creation.getHDFSStoreName());
-        if(store == null) {
-          HDFSIntegrationUtil.createDefaultAsyncQueueForHDFS((Cache)cache, creation.getHDFSWriteOnly(), id);
-        }
-      }
-      if (creation.getHDFSStoreName() != null && creation.getPartitionAttributes().getColocatedWith() == null) {
-        creation.addAsyncEventQueueId(HDFSStoreFactoryImpl.getEventQueueName(id));
-      }
-      
-   * @since 6.5
+   * @since GemFire 6.5
-   * @since 6.5
+   * @since GemFire 6.5
-   * @since 6.5
+   * @since GemFire 6.5
-   * @since 6.5
+   * @since GemFire 6.5
-   * @since 4.0
+   * @since GemFire 4.0
-   * @since 4.0
+   * @since GemFire 4.0
-   * @since 4.0
+   * @since GemFire 4.0
-   * @since prPersistSprint2
+   * @since GemFire prPersistSprint2
-   * @since 6.6
+   * @since GemFire 6.6
-   * @since 8.1
+   * @since GemFire 8.1
-  public Collection<HDFSStoreImpl> getHDFSStores() {
-    return this.hdfsStores.values();
-  }
-
-  public void addHDFSStore(String name, HDFSStoreCreation hs) {
-    this.hdfsStores.put(name, hs);
-  }
-
-  
-
-  @Override

UPD66 MOV21 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL24 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31