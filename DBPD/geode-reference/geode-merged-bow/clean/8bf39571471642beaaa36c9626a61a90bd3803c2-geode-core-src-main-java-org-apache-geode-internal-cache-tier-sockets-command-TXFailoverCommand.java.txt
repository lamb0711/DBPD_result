Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Used for bootstrapping txState/PeerTXStateStub on the server.
- * This command is send when in client in a transaction is about
- * to failover to this server
+ * Used for bootstrapping txState/PeerTXStateStub on the server. This command is send when in client
+ * in a transaction is about to failover to this server
-  
+
-  private TXFailoverCommand() {
-  }
-  
+  private TXFailoverCommand() {}
+
-    InternalDistributedMember client = (InternalDistributedMember) servConn.getProxyID().getDistributedMember();
+    InternalDistributedMember client =
+        (InternalDistributedMember) servConn.getProxyID().getDistributedMember();
-    mgr.waitForCompletingTransaction(txId); // in case it's already completing here in another thread
+    mgr.waitForCompletingTransaction(txId); // in case it's already completing here in another
+                                            // thread
-      FindRemoteTXMessageReplyProcessor processor = FindRemoteTXMessage.send(servConn.getCache(), txId);
+      FindRemoteTXMessageReplyProcessor processor =
+          FindRemoteTXMessage.send(servConn.getCache(), txId);
-          logger.debug("TX: txState is not local, bootstrapping PeerTXState stub for targetNode: {}", hostingMember);
+          logger.debug(
+              "TX: txState is not local, bootstrapping PeerTXState stub for targetNode: {}",
+              hostingMember);
-        GemFireCacheImpl cache = (GemFireCacheImpl)servConn.getCache();
+        GemFireCacheImpl cache = (GemFireCacheImpl) servConn.getCache();
-          WaitForViewInstallation.send((DistributionManager)cache.getDistributionManager());
+          WaitForViewInstallation.send((DistributionManager) cache.getDistributionManager());
-          writeException(msg, new TransactionDataNodeHasDepartedException("Could not find transaction host for "+txId), false, servConn);
+          writeException(msg, new TransactionDataNodeHasDepartedException(
+              "Could not find transaction host for " + txId), false, servConn);

UPD66 UPD66 DEL66