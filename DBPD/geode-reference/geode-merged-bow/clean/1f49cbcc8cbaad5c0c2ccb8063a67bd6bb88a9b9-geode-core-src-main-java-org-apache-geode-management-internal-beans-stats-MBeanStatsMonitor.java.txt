GEODE-1027: add unit test for previously committed fix

+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.i18n.LogWriterI18n;
+import org.apache.geode.internal.logging.LogService;
- * 
- * 
+  private static final Logger logger = LogService.getLogger();
+
-  private LogWriterI18n logger;
-
-  public MBeanStatsMonitor(String name) {
-    this.monitorName = name;
-    this.monitor = new ValueMonitor();
-    this.statsMap = new DefaultHashMap();
-    this.logger = InternalDistributedSystem.getLoggerI18n();
-
+  public MBeanStatsMonitor(final String name) {
+    this(name, new ValueMonitor());
-  public void addStatisticsToMonitor(Statistics stats) {
+  MBeanStatsMonitor(final String name, final ValueMonitor monitor) {
+    this.monitorName = name;
+    this.monitor = monitor;
+    this.statsMap = new DefaultHashMap();
+  }
+
+  public void addStatisticsToMonitor(final Statistics stats) {
-  public void removeStatisticsFromMonitor(Statistics stats) {
+  public void removeStatisticsFromMonitor(final Statistics stats) {
-  public Number getStatistic(String statName) {
-    return statsMap.get(statName) != null ? statsMap.get(statName) : 0;
+  public Number getStatistic(final String statName) {
+    Number value = statsMap.get(statName);
+    return value != null ? value : 0;
-  public void handleNotification(StatisticsNotification notification) {
-
+  public void handleNotification(final StatisticsNotification notification) {
-
-  protected void log(String name, Number value) {
-
-    if (logger != null && logger.finestEnabled()) {
-      logger.finest("Monitor = " + monitorName + " descriptor = " + name + " And Value = " + value);
+  protected void log(final String name, final Number value) {
+    if (logger.isTraceEnabled()) {
+      logger.trace("Monitor = {} descriptor = {} And value = {}", monitorName, name, value);
-  public static class DefaultHashMap {
-    private Map<String, Number> internalMap = new HashMap<String, Number>();
+  public static class DefaultHashMap { // TODO: delete this class
+    private Map<String, Number> internalMap = new HashMap<>();
-    public Number get(String key) {
+    public Number get(final String key) {
-    public void put(String key, Number value) {
+    public void put(final String key, final Number value) {
+
+    /**
+     * For testing only
+     */
+    Map<String, Number> getInternalMap() {
+      return this.internalMap;
+    }

MOV26 MOV23 UPD40 UPD40 INS31 INS83 INS83 UPD43 INS83 INS42 MOV44 INS8 INS42 INS44 INS44 INS31 UPD42 INS32 INS83 INS17 INS83 MOV43 INS42 INS83 INS43 INS42 INS83 INS83 INS83 INS60 INS83 INS83 MOV43 INS83 MOV43 INS44 MOV44 INS29 INS74 INS42 INS8 INS42 INS42 INS42 MOV14 INS42 MOV43 INS59 INS32 INS83 MOV43 INS42 INS83 INS83 INS65 INS43 INS43 INS43 INS41 INS42 INS42 MOV32 INS42 MOV42 UPD42 MOV42 UPD74 INS66 INS42 INS42 INS42 INS22 INS42 INS52 INS42 UPD42 INS45 INS42 INS42 INS42 DEL83 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL32 DEL27 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL42 DEL44