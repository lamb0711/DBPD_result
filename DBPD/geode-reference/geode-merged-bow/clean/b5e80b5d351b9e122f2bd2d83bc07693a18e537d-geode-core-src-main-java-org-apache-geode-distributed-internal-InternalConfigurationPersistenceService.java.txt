Merge remote-tracking branch 'origin/develop' into geode-5600

-import java.text.SimpleDateFormat;
-import java.util.Date;
+import joptsimple.internal.Strings;
+    clusterConfigRootDir = new File(clusterConfigRootDir).getAbsolutePath();
-        loadSharedConfigurationFromDisk();
+        loadSharedConfigurationFromDir(new File(this.configDirPath));
+  public void setConfiguration(String groupName, Configuration configuration) {
+    getConfigurationRegion().put(groupName, configuration);
+  }
+
+  public boolean hasXmlConfiguration() {
+    Region<String, Configuration> configRegion = getConfigurationRegion();
+    return configRegion.values().stream().anyMatch(c -> c.getCacheXmlContent() != null);
+  }
+
+  public Map<String, Configuration> getEntireConfiguration() {
+    Set<String> keys = getConfigurationRegion().keySet();
+    return getConfigurationRegion().getAll(keys);
+  }
+
+  public Path getClusterConfigDirPath() {
+    return Paths.get(configDirPath);
+  }
+
-  /**
-   * Loads the internal region with the configuration in the configDirPath
-   */
-  public void loadSharedConfigurationFromDisk()
+  // configDir is the dir that has all the groups structure underneath it.
+  public void loadSharedConfigurationFromDir(File configDir)
-    File[] groupNames =
-        new File(this.configDirPath).listFiles((FileFilter) DirectoryFileFilter.INSTANCE);
-
+      File[] groupNames = configDir.listFiles((FileFilter) DirectoryFileFilter.INSTANCE);
+      boolean needToCopyJars = true;
+      if (configDir.getAbsolutePath().equals(getSharedConfigurationDirPath())) {
+        needToCopyJars = false;
+      }
+
+      logger.info("loading the cluster configuration: ");
+        logger.info(configuration.getConfigName() + " xml content: \n"
+            + configuration.getCacheXmlContent());
+        logger.info(configuration.getConfigName() + " properties: "
+            + configuration.getGemfireProperties().size());
+        logger.info(configuration.getConfigName() + " jars: "
+            + Strings.join(configuration.getJarNames(), ", "));
+        if (needToCopyJars && configuration.getJarNames().size() > 0) {
+          Path groupDirPath = createConfigDirIfNecessary(configuration.getConfigName()).toPath();
+          for (String jarName : configuration.getJarNames()) {
+            Files.copy(groupName.toPath().resolve(jarName), groupDirPath.resolve(jarName));
+          }
+        }
-  public void renameExistingSharedConfigDirectory() {
-    File configDirFile = new File(this.configDirPath);
-    if (configDirFile.exists()) {
-      String configDirFileName2 = CLUSTER_CONFIG_ARTIFACTS_DIR_NAME
-          + new SimpleDateFormat("yyyyMMddhhmm").format(new Date()) + '.' + System.nanoTime();
-      try {
-        File configDirFile2 = new File(configDirFile.getParent(), configDirFileName2);
-        FileUtils.moveDirectory(configDirFile, configDirFile2);
-      } catch (IOException e) {
-        logger.info(e);
-      }
-    }
-  }
-
-
-  public void writeConfigToFile(final Configuration configuration) throws IOException {
-    File configDir = createConfigDirIfNecessary(configuration.getConfigName());
+  public void writeConfigToFile(final Configuration configuration, File rootDir)
+      throws IOException {
+    File configDir = createConfigDirIfNecessary(rootDir, configuration.getConfigName());
+
+    // copy the jars if the rootDir is different than the configDirPath
+    if (rootDir.getAbsolutePath().equals(getSharedConfigurationDirPath())) {
+      return;
+    }
+
+    File locatorConfigDir =
+        new File(getSharedConfigurationDirPath(), configuration.getConfigName());
+    if (locatorConfigDir.exists()) {
+      File[] jarFiles = locatorConfigDir.listFiles(x -> x.getName().endsWith(".jar"));
+      for (File file : jarFiles) {
+        Files.copy(file.toPath(), configDir.toPath().resolve(file.getName()));
+      }
+    }
-    File clusterConfigDir = new File(getSharedConfigurationDirPath());
+    return createConfigDirIfNecessary(new File(getSharedConfigurationDirPath()), configName);
+  }
+
+  private File createConfigDirIfNecessary(File clusterConfigDir, final String configName)
+      throws IOException {

MOV26 UPD40 INS31 INS31 INS31 INS31 INS31 MOV83 MOV39 UPD42 MOV42 INS44 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS74 INS42 INS8 INS83 INS43 INS42 INS8 UPD42 INS44 INS44 MOV29 INS83 MOV43 INS42 INS44 MOV43 INS8 INS44 INS21 INS43 INS42 INS43 INS42 INS21 INS60 INS41 INS43 INS43 INS43 MOV60 INS41 INS42 INS41 MOV43 INS42 MOV43 INS42 INS25 INS60 INS25 INS83 INS43 UPD42 MOV42 INS41 INS43 INS42 INS7 UPD42 MOV42 UPD42 MOV42 INS32 INS74 INS59 INS32 INS42 INS42 INS42 INS74 INS32 INS32 INS42 MOV43 INS32 INS8 MOV43 INS59 INS32 INS8 INS42 INS32 INS42 INS42 INS32 INS32 UPD42 MOV42 INS42 INS42 INS43 INS43 INS43 UPD42 MOV42 INS32 INS32 INS42 INS86 INS43 INS43 UPD42 INS32 INS32 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 MOV60 INS60 INS25 INS21 INS32 INS42 INS32 INS41 INS42 INS14 INS42 INS42 INS60 INS70 UPD42 MOV42 MOV14 UPD42 MOV42 INS14 INS42 UPD42 MOV42 INS42 MOV42 INS42 INS42 INS32 INS42 INS59 INS27 INS42 INS42 INS32 UPD42 MOV42 INS42 INS39 INS59 INS32 INS8 INS32 INS8 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS5 INS59 INS44 INS42 INS8 INS43 INS42 INS42 UPD42 MOV42 INS42 MOV32 INS33 UPD42 MOV42 INS42 INS9 INS32 INS42 INS32 INS21 INS42 INS42 INS45 MOV60 INS21 INS21 INS21 MOV21 INS25 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS43 INS42 INS21 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS7 INS32 INS32 INS32 INS27 INS8 INS42 INS42 INS42 INS86 INS42 INS32 UPD42 MOV14 INS42 INS9 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS27 INS60 INS70 INS59 INS32 INS42 INS42 INS32 INS32 INS32 INS45 INS32 INS32 INS45 INS32 INS32 INS45 INS32 INS32 INS34 INS43 INS59 INS44 INS32 MOV8 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS42 INS32 MOV43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL32 DEL42 DEL14 DEL66 DEL65 DEL29 DEL42 DEL43 DEL52 DEL42 DEL22 DEL14 DEL42 DEL59 DEL60 DEL32 DEL42 DEL42 DEL43 DEL45 DEL14 DEL42 DEL43 DEL14 DEL32 DEL13 DEL27 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL44 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL31 DEL42 DEL59 DEL60