Merge branch 'release/1.0.0-incubating.M3'

-import java.io.DataInput;
-import java.io.DataOutput;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.CancellationException;
-import java.util.concurrent.atomic.AtomicInteger;
-
-import org.apache.logging.log4j.Logger;
-
-import com.gemstone.gemfire.CancelCriterion;
-import com.gemstone.gemfire.CancelException;
-import com.gemstone.gemfire.InternalGemFireError;
-import com.gemstone.gemfire.StatisticsFactory;
-import com.gemstone.gemfire.SystemFailure;
-import com.gemstone.gemfire.distributed.DistributedLockService;
-import com.gemstone.gemfire.distributed.DistributedSystem;
-import com.gemstone.gemfire.distributed.DistributedSystemDisconnectedException;
-import com.gemstone.gemfire.distributed.LeaseExpiredException;
-import com.gemstone.gemfire.distributed.LockNotHeldException;
-import com.gemstone.gemfire.distributed.LockServiceDestroyedException;
+import com.gemstone.gemfire.*;
+import com.gemstone.gemfire.distributed.*;
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
+import org.apache.logging.log4j.Logger;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.util.*;
+import java.util.concurrent.CancellationException;
+import java.util.concurrent.atomic.AtomicInteger;
-      "gemfire.DLockService.notGrantorSleep", 100).longValue();
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.notGrantorSleep", 100).longValue();
-      "gemfire.DLockService.debug.disallowNotHolder");
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.debug.disallowNotHolder");
-      "gemfire.DLockService.debug.disallowLockRequestLoop");
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.debug.disallowLockRequestLoop");
-      "gemfire.DLockService.debug.disallowLockRequestLoopCount", 20).intValue();
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.debug.disallowLockRequestLoopCount", 20).intValue();
-      "gemfire.DLockService.debug.nonGrantorDestroyLoop");
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.debug.nonGrantorDestroyLoop");
-      "gemfire.DLockService.debug.nonGrantorDestroyLoopCount", 20).intValue();
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.debug.nonGrantorDestroyLoopCount", 20).intValue();
-      "gemfire.DLockService.debug.enforceSafeExit");
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.debug.enforceSafeExit");
-      "gemfire.DLockService.automateFreeResources");
+      DistributionConfig.GEMFIRE_PREFIX + "DLockService.automateFreeResources");
-  private final DistributedLockStats dlockStats = getOrCreateStats();
+  private final DistributedLockStats dlockStats;
-            dm.getCancelCriterion().cancelInProgress() == null) {
+            !dm.getCancelCriterion().isCancelInProgress()) {
-            dm.getCancelCriterion().cancelInProgress() == null) {
+            !dm.getCancelCriterion().isCancelInProgress()) {
-            || this.dm.getCancelCriterion().cancelInProgress() != null
+            || this.dm.getCancelCriterion().isCancelInProgress()
+    this.dlockStats = getOrCreateStats(ds);
-   * @since 3.5
+   * @since GemFire 3.5
-        if (this.ds.getCancelCriterion().cancelInProgress() != null) {
+        if (this.ds.getCancelCriterion().isCancelInProgress()) {
-      "gemfire.DistributedLockService.startSerialNumber", 1).intValue();
+      DistributionConfig.GEMFIRE_PREFIX + "DistributedLockService.startSerialNumber", 1).intValue();
-   * @since 3.5
+   * @since GemFire 3.5
-  protected static synchronized DistributedLockStats getOrCreateStats() {
+  protected static synchronized DistributedLockStats getOrCreateStats(DistributedSystem ds) {
-      InternalDistributedSystem ds =
-          InternalDistributedSystem.getAnyInstance();
-          "Cannot find any instance of InternalDistributedSystem");
+          "Need an instance of InternalDistributedSystem");

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 INS44 INS21 INS43 INS42 INS27 INS27 INS27 INS27 INS27 INS7 UPD66 UPD66 INS42 INS27 INS40 INS45 INS40 INS45 INS27 INS40 INS45 INS27 INS40 INS45 INS40 INS45 INS22 INS32 INS27 INS40 INS45 INS40 INS45 INS40 INS45 INS52 INS42 INS42 INS42 MOV32 INS40 INS45 UPD42 UPD45 UPD27 MOV27 INS38 MOV38 MOV38 INS38 MOV27 INS32 MOV32 UPD27 MOV32 MOV32 INS42 UPD42 MOV27 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL32 DEL33 DEL42 DEL32 DEL33 DEL27 DEL27 DEL33 DEL27 DEL33 DEL27 DEL45 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60