GEODE-5971: refactor misc commands to use ResultModel (#3363)


-import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.cli.GfshCommand;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-public class PDXRenameCommand extends InternalGfshCommand {
+public class PDXRenameCommand extends GfshCommand {
-  public Result pdxRename(@CliOption(key = CliStrings.PDX_RENAME_OLD, mandatory = true,
+  public ResultModel pdxRename(@CliOption(key = CliStrings.PDX_RENAME_OLD, mandatory = true,
-          help = CliStrings.PDX_DISKDIR__HELP) String[] diskDirs) {
+          help = CliStrings.PDX_DISKDIR__HELP) String[] diskDirs)
+      throws Exception {
-    try {
-      final File[] dirs = new File[diskDirs.length];
-      for (int i = 0; i < diskDirs.length; i++) {
-        dirs[i] = new File((diskDirs[i]));
-      }
-      Collection<Object> results =
-          DiskStoreImpl.pdxRename(diskStore, dirs, oldClassName, newClassName);
-
-      if (results.isEmpty()) {
-        return ResultBuilder
-            .createGemFireErrorResult(CliStrings.format(CliStrings.PDX_RENAME__EMPTY));
-      }
-
-      ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
-      PrintStream printStream = new PrintStream(outputStream);
-      for (Object p : results) {
-        if (p instanceof PdxType) {
-          ((PdxType) p).toStream(printStream, false);
-        } else {
-          ((EnumInfo) p).toStream(printStream);
-        }
-      }
-      String resultString =
-          CliStrings.format(CliStrings.PDX_RENAME__SUCCESS, outputStream.toString());
-      return ResultBuilder.createInfoResult(resultString);
-
-    } catch (Exception e) {
-      return ResultBuilder.createGemFireErrorResult(
-          CliStrings.format(CliStrings.PDX_RENAME__ERROR, e.getMessage()));
+    final File[] dirs = new File[diskDirs.length];
+    for (int i = 0; i < diskDirs.length; i++) {
+      dirs[i] = new File((diskDirs[i]));
+
+    Collection<Object> results =
+        DiskStoreImpl.pdxRename(diskStore, dirs, oldClassName, newClassName);
+
+    if (results.isEmpty()) {
+      return ResultModel.createError(CliStrings.format(CliStrings.PDX_RENAME__EMPTY));
+    }
+
+    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
+    PrintStream printStream = new PrintStream(outputStream);
+    for (Object p : results) {
+      if (p instanceof PdxType) {
+        ((PdxType) p).toStream(printStream, false);
+      } else {
+        ((EnumInfo) p).toStream(printStream);
+      }
+    }
+    String resultString =
+        CliStrings.format(CliStrings.PDX_RENAME__SUCCESS, outputStream.toString());
+    return ResultModel.createInfo(resultString);

UPD40 UPD40 UPD43 UPD42 UPD43 MOV43 MOV8 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL8 DEL12 DEL54 DEL8