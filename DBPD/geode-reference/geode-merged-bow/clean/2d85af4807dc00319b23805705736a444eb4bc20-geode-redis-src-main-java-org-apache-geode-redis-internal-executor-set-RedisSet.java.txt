GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

-import org.apache.geode.InvalidDeltaException;
+import org.apache.geode.redis.internal.AbstractRedisData;
+import org.apache.geode.redis.internal.AddsDeltaInfo;
+import org.apache.geode.redis.internal.DeltaInfo;
+import org.apache.geode.redis.internal.RemsDeltaInfo;
-public class RedisSet implements RedisData {
+public class RedisSet extends AbstractRedisData {
-  public static transient RedisSet EMPTY = new EmptyRedisSet();
+  public static final RedisSet EMPTY = new EmptyRedisSet();
-  private transient ArrayList<ByteArrayWrapper> deltas;
-  // true if deltas contains adds; false if removes
-  private transient boolean deltasAreAdds;
-        continue;
-      this.deltasAreAdds = false;
-      this.deltas = popped;
-      try {
-        region.put(key, this);
-      } finally {
-        this.deltas = null;
-      }
+      storeChanges(region, key, new RemsDeltaInfo(popped));
-  // DELTA
-  @Override
-  public boolean hasDelta() {
-    return deltas != null;
-  }
-  public void toDelta(DataOutput out) throws IOException {
-    DataSerializer.writeBoolean(deltasAreAdds, out);
-    DataSerializer.writeArrayList(deltas, out);
-  }
-
-  @Override
-  public void fromDelta(DataInput in)
-      throws IOException, InvalidDeltaException {
-    boolean deltaAdds = DataSerializer.readBoolean(in);
-    try {
-      ArrayList<ByteArrayWrapper> deltas = DataSerializer.readArrayList(in);
-      if (deltas != null) {
-        if (deltaAdds) {
-          members.addAll(deltas);
-        } else {
-          members.removeAll(deltas);
-        }
-      }
-    } catch (ClassNotFoundException e) {
-      throw new RuntimeException(e);
+  protected void applyDelta(DeltaInfo deltaInfo) {
+    if (deltaInfo instanceof AddsDeltaInfo) {
+      AddsDeltaInfo addsDeltaInfo = (AddsDeltaInfo) deltaInfo;
+      members.addAll(addsDeltaInfo.getAdds());
+    } else {
+      RemsDeltaInfo remsDeltaInfo = (RemsDeltaInfo) deltaInfo;
+      members.removeAll(remsDeltaInfo.getRemoves());
+    super.toData(out);
+    super.fromData(in);
-      deltasAreAdds = true;
-      deltas = membersToAdd;
-      try {
-        region.put(key, this);
-      } finally {
-        deltas = null;
-      }
+      storeChanges(region, key, new AddsDeltaInfo(membersToAdd));
-      if (members.isEmpty()) {
-        region.remove(key);
-      } else {
-        deltasAreAdds = false;
-        deltas = membersToRemove;
-        try {
-          region.put(key, this);
-        } finally {
-          deltas = null;
-        }
-      }
+      storeChanges(region, key, new RemsDeltaInfo(membersToRemove));
-   * by future changes to this DeltaSet.
+   * by future changes to this instance.
+
+  @Override
+  protected boolean removeFromRegion() {
+    return members.isEmpty();
+  }

MOV26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 UPD43 INS31 INS31 UPD42 UPD83 MOV78 INS83 MOV39 UPD42 MOV42 MOV44 INS8 MOV78 INS83 INS39 INS42 INS8 UPD43 UPD42 INS25 INS21 INS21 INS41 UPD42 INS62 INS8 INS8 INS48 INS48 UPD66 MOV32 INS21 INS42 INS43 INS60 INS21 MOV60 MOV21 INS42 INS42 INS42 INS42 INS21 INS21 INS32 INS42 INS43 INS59 INS32 INS43 INS32 INS32 INS42 MOV42 MOV42 INS14 UPD42 MOV42 INS42 INS11 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 INS11 INS32 INS42 MOV42 MOV42 INS14 UPD42 MOV42 UPD42 MOV42 MOV42 INS14 INS43 INS42 INS43 INS42 UPD42 MOV42 INS42 INS43 INS42 UPD42 MOV42 INS42 INS43 INS42 INS43 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL18 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL52 DEL32 DEL21 DEL8 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL8 DEL54 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL83 DEL39 DEL42 DEL42 DEL33 DEL27 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL43 DEL39 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL52 DEL32 DEL21 DEL8 DEL42 DEL33 DEL7 DEL21 DEL8 DEL54 DEL32 DEL21 DEL8 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL52 DEL32 DEL21 DEL8 DEL42 DEL33 DEL7 DEL21 DEL8 DEL54 DEL8 DEL25