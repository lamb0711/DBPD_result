Merge branch 'release/1.4.0'

+import org.apache.geode.internal.cache.entries.DiskEntry;
- * 
+ *
-   * 
+   *
-  abstract long getKeyId();
+  public abstract long getKeyId();
-  abstract long getOffsetInOplog();
+  public abstract long getOffsetInOplog();
-  synchronized long getOplogId() {
+  public synchronized long getOplogId() {
-  abstract void setKeyId(long keyId);
+  public abstract void setKeyId(long keyId);
-   * 
+   *
-  abstract void setOffsetInOplog(long offsetInOplog);
+  public abstract void setOffsetInOplog(long offsetInOplog);
-  abstract void markForWriting();
+  public abstract void markForWriting();
-  abstract void unmarkForWriting();
+  public abstract void unmarkForWriting();
-  abstract boolean needsToBeWritten();
+  public abstract boolean needsToBeWritten();
-  synchronized long setOplogId(long oplogId) {
+  public synchronized long setOplogId(long oplogId) {
-  // /**
-  // * Setter for the flush buffer toggle flag
-  // *
-  // * @param flag -
-  // * The flush buffer toggle flag which identifies whether the latest
-  // * value is present in the pendingflushes buffer or the pending
-  // * writes buffer
-  // */
-  // void setFlushBufferToggleFlag(boolean flag) {
-  // if (flag) {
-  // this.id = this.id | IS_FLUSH_BUFFER_TOGGLE_BIT;// set the toggle flag bit
-  // //Assert.assertTrue(getFlushBufferToggleFlag());
-  // }
-  // else {
-  // this.id = this.id & 0x5FFFFFFF;// reset the toggle flag bit
-  // //Assert.assertTrue(!getFlushBufferToggleFlag());
-  // }
-
-  // }
-
-  // /**
-  // * @return Returns the flush buffer toggle flag.
-  // */
-  // boolean getFlushBufferToggleFlag() {
-  // return (this.id & IS_FLUSH_BUFFER_TOGGLE_BIT) != 0; //return true if toggle
-  // // flag bit is 1 else
-  // // return false.
-  // //return this.flushBufferToggleFlag;
-  // }
-
-  synchronized byte getUserBits() {
+  public synchronized byte getUserBits() {
-  synchronized void setUserBits(byte userBits) {
+  public synchronized void setUserBits(byte userBits) {
-   * 
+   *
-  int getValueLength() {
+  public int getValueLength() {
-  void setValueLength(int valueLength) {
+  public void setValueLength(int valueLength) {
-    StringBuffer temp = new StringBuffer("Oplog ID = ");
+    StringBuilder temp = new StringBuilder("Oplog ID = ");
-   * 
-   * @param maxOplogSize
+   *
-  static DiskId createDiskId(long maxOplogSize, boolean isPersistenceType,
+  public static DiskId createDiskId(long maxOplogSize, boolean isPersistenceType,
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
-   * 
+   *
+   *
-  protected static abstract class IntOplogOffsetDiskId extends DiskId {
+  protected abstract static class IntOplogOffsetDiskId extends DiskId {
-    long getOffsetInOplog() {
+    public long getOffsetInOplog() {
-     * 
+     *
-    void setOffsetInOplog(long offsetInOplog) {
+    public void setOffsetInOplog(long offsetInOplog) {
-   * 
-   * 
+   *
+   *
-  protected static abstract class LongOplogOffsetDiskId extends DiskId {
+  protected abstract static class LongOplogOffsetDiskId extends DiskId {
-    long getOffsetInOplog() {
+    public long getOffsetInOplog() {
-     * 
+     *
-    void setOffsetInOplog(long offsetInOplog) {
+    public void setOffsetInOplog(long offsetInOplog) {
-    long getKeyId() {
+    public long getKeyId() {
-    void setKeyId(long keyId) {
+    public void setKeyId(long keyId) {
-    void markForWriting() {
+    public void markForWriting() {
-    void unmarkForWriting() {
+    public void unmarkForWriting() {
-    boolean needsToBeWritten() {
+    public boolean needsToBeWritten() {
-  final protected static class OverflowOnlyWithIntOffset extends OverflowOnlyWithIntOffsetNoLL {
+  protected static final class OverflowOnlyWithIntOffset extends OverflowOnlyWithIntOffsetNoLL {
-     * 
+     *
-     * 
+     *
-    long getKeyId() {
+    public long getKeyId() {
-    void setKeyId(long keyId) {
+    public void setKeyId(long keyId) {
-    void markForWriting() {
+    public void markForWriting() {
-    void unmarkForWriting() {
+    public void unmarkForWriting() {
-    boolean needsToBeWritten() {
+    public boolean needsToBeWritten() {
-  final protected static class OverflowOnlyWithLongOffset extends OverflowOnlyWithLongOffsetNoLL {
+  protected static final class OverflowOnlyWithLongOffset extends OverflowOnlyWithLongOffsetNoLL {
-     * 
+     *
-     * 
+     *
-    long getKeyId() {
+    public long getKeyId() {
-    void setKeyId(long keyId) {
+    public void setKeyId(long keyId) {
-    void markForWriting() {
+    public void markForWriting() {
-    void unmarkForWriting() {
+    public void unmarkForWriting() {
-    boolean needsToBeWritten() {
+    public boolean needsToBeWritten() {
-      StringBuffer temp = new StringBuffer("Oplog Key ID = ");
+      StringBuilder temp = new StringBuilder("Oplog Key ID = ");
-  final protected static class PersistenceWithIntOffset extends PersistenceWithIntOffsetNoLL {
+  protected static final class PersistenceWithIntOffset extends PersistenceWithIntOffsetNoLL {
-     * 
+     *
-     * 
+     *
-    long getKeyId() {
+    public long getKeyId() {
-    void setKeyId(long keyId) {
+    public void setKeyId(long keyId) {
-    void markForWriting() {
+    public void markForWriting() {
-    void unmarkForWriting() {
+    public void unmarkForWriting() {
-      StringBuffer temp = new StringBuffer("Oplog Key ID = ");
+      StringBuilder temp = new StringBuilder("Oplog Key ID = ");
-    boolean needsToBeWritten() {
+    public boolean needsToBeWritten() {
-  final protected static class PersistenceWithLongOffset extends PersistenceWithLongOffsetNoLL {
+  protected static final class PersistenceWithLongOffset extends PersistenceWithLongOffsetNoLL {
-     * 
+     *
-     * 
+     *
-

INS26 INS40 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS78 INS83 INS83 MOV78 INS83 INS83 MOV78 INS83 INS78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 INS83 MOV78 MOV78 INS83 INS78 INS83 INS83 MOV78 INS83 MOV78 MOV78 INS83 UPD43 INS42 INS42 MOV42 INS42 MOV42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 DEL42 DEL65 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83