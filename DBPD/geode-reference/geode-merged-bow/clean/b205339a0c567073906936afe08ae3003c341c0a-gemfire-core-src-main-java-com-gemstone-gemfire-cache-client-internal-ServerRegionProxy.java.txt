Merge branch 'feature/GEODE-8' into develop

-      ClientMetadataService cms = region.getCache()
-      .getClientMetadataService();
-      if (serverRegionExecutor.getFilter().isEmpty()) {
-        HashMap<ServerLocation, HashSet<Integer>> serverToBuckets = cms
-        .groupByServerToAllBuckets(this.region, function.optimizeForWrite());
-        if (serverToBuckets == null || serverToBuckets.isEmpty()) {
-          ExecuteRegionFunctionOp.execute(this.pool, rgnName, function,
-              serverRegionExecutor, resultCollector, hasResult, retryAttempts);
-          cms.scheduleGetPRMetaData(region, false);
+      ClientMetadataService cms = region.getCache().getClientMetadataService();
+      if (cms.isMetadataStable()) {
+        if (serverRegionExecutor.getFilter().isEmpty()) {
+          HashMap<ServerLocation, HashSet<Integer>> serverToBuckets = cms
+              .groupByServerToAllBuckets(this.region,
+                  function.optimizeForWrite());
+          if (serverToBuckets == null || serverToBuckets.isEmpty()) {
+            ExecuteRegionFunctionOp
+                .execute(this.pool, rgnName, function, serverRegionExecutor,
+                    resultCollector, hasResult, retryAttempts);
+            cms.scheduleGetPRMetaData(region, false);
+          } else {
+            ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
+                function, serverRegionExecutor, resultCollector, hasResult,
+                serverToBuckets, retryAttempts, true);
+          }
+        } else {
+          boolean isBucketFilter = serverRegionExecutor.getExecuteOnBucketSetFlag();
+          Map<ServerLocation, HashSet> serverToFilterMap = cms
+              .getServerToFilterMap(serverRegionExecutor.getFilter(), region,
+                  function.optimizeForWrite(), isBucketFilter);
+          if (serverToFilterMap == null || serverToFilterMap.isEmpty()) {
+            ExecuteRegionFunctionOp
+                .execute(this.pool, rgnName, function, serverRegionExecutor,
+                    resultCollector, hasResult, retryAttempts);
+            cms.scheduleGetPRMetaData(region, false);
+          } else {
+            ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
+                function, serverRegionExecutor, resultCollector, hasResult,
+                serverToFilterMap, retryAttempts, isBucketFilter);
+          }
-        else {
-          ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
-              function, serverRegionExecutor, resultCollector, hasResult,
-              serverToBuckets, retryAttempts, true);
-        }
-      }
-      else {
-        boolean isBucketFilter = serverRegionExecutor.getExecuteOnBucketSetFlag();
-        Map<ServerLocation, HashSet> serverToFilterMap = cms
-        .getServerToFilterMap(serverRegionExecutor.getFilter(), region,
-            function.optimizeForWrite(), isBucketFilter);
-        if (serverToFilterMap == null || serverToFilterMap.isEmpty()) {         
-          ExecuteRegionFunctionOp.execute(this.pool, rgnName, function,
-              serverRegionExecutor, resultCollector, hasResult, retryAttempts);
-            cms.scheduleGetPRMetaData(region, false);          
-        }
-        else {
-          //Asif: In case of withBucketFilter , the serverToFilterMap is nothing but
-          // serverToBucketsMap, so allBuckets flag should be true in that case 
-          // so allBuckets flag is governed by isBucketFilter flag
-          ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
-              function, serverRegionExecutor, resultCollector, hasResult,
-              serverToFilterMap, retryAttempts, isBucketFilter);
-          
-         
-        }
+      } else {
+        cms.scheduleGetPRMetaData(region, false);
+        ExecuteRegionFunctionOp.execute(this.pool, rgnName, function,
+            serverRegionExecutor, resultCollector, hasResult, retryAttempts);
-
-      .getClientMetadataService();
-      if (serverRegionExecutor.getFilter().isEmpty()) {
-        HashMap<ServerLocation, HashSet<Integer>> serverToBuckets = cms
-        .groupByServerToAllBuckets(this.region, optimizeForWrite);
-        if (serverToBuckets == null || serverToBuckets.isEmpty()) {
-          ExecuteRegionFunctionOp.execute(this.pool, rgnName, functionId,
-              serverRegionExecutor, resultCollector, hasResult, retryAttempts, isHA, optimizeForWrite);
-          cms.scheduleGetPRMetaData(this.region, false);
+          .getClientMetadataService();
+      if (cms.isMetadataStable()) {
+        if (serverRegionExecutor.getFilter().isEmpty()) {
+          HashMap<ServerLocation, HashSet<Integer>> serverToBuckets = cms
+              .groupByServerToAllBuckets(this.region, optimizeForWrite);
+          if (serverToBuckets == null || serverToBuckets.isEmpty()) {
+            ExecuteRegionFunctionOp.execute(this.pool, rgnName, functionId,
+                serverRegionExecutor, resultCollector, hasResult,
+                retryAttempts, isHA, optimizeForWrite);
+            cms.scheduleGetPRMetaData(this.region, false);
+          } else {
+            ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
+                functionId, serverRegionExecutor, resultCollector, hasResult,
+                serverToBuckets, retryAttempts, true, isHA, optimizeForWrite);
+          }
+        } else {
+          boolean isBucketsAsFilter = serverRegionExecutor.getExecuteOnBucketSetFlag();
+          Map<ServerLocation, HashSet> serverToFilterMap = cms
+              .getServerToFilterMap(serverRegionExecutor.getFilter(), region,
+                  optimizeForWrite, isBucketsAsFilter);
+          if (serverToFilterMap == null || serverToFilterMap.isEmpty()) {
+            ExecuteRegionFunctionOp.execute(this.pool, rgnName, functionId,
+                serverRegionExecutor, resultCollector, hasResult,
+                retryAttempts, isHA, optimizeForWrite);
+            cms.scheduleGetPRMetaData(region, false);
+          } else {
+            ExecuteRegionFunctionSingleHopOp
+                .execute(this.pool, this.region, functionId,
+                    serverRegionExecutor, resultCollector, hasResult,
+                    serverToFilterMap, retryAttempts, false, isHA,
+                    optimizeForWrite);
+          }
-        else {
-          ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
-              functionId, serverRegionExecutor, resultCollector, hasResult,
-              serverToBuckets, retryAttempts, true, isHA, optimizeForWrite);
-        }
-      }
-      else {
-        boolean isBucketsAsFilter = serverRegionExecutor.getExecuteOnBucketSetFlag();
-        Map<ServerLocation, HashSet> serverToFilterMap = cms
-        .getServerToFilterMap(serverRegionExecutor.getFilter(), region,
-            optimizeForWrite, isBucketsAsFilter);
-        if (serverToFilterMap == null || serverToFilterMap.isEmpty()) {         
-          ExecuteRegionFunctionOp.execute(this.pool, rgnName, functionId,
-              serverRegionExecutor, resultCollector, hasResult, retryAttempts, isHA, optimizeForWrite);
-            cms.scheduleGetPRMetaData(region, false);          
-        }
-        else {
-          ExecuteRegionFunctionSingleHopOp.execute(this.pool, this.region,
-              functionId, serverRegionExecutor, resultCollector, hasResult,
-              serverToFilterMap, retryAttempts, false, isHA, optimizeForWrite);
-        }
+      } else {
+        cms.scheduleGetPRMetaData(region, false);
+        ExecuteRegionFunctionOp.execute(this.pool, rgnName, functionId,
+            serverRegionExecutor, resultCollector, hasResult, retryAttempts,
+            isHA, optimizeForWrite);

INS8 INS8 MOV60 INS25 MOV60 INS25 INS32 MOV8 INS8 INS32 MOV8 INS8 INS42 INS42 INS21 INS21 INS42 INS42 INS21 INS21 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42