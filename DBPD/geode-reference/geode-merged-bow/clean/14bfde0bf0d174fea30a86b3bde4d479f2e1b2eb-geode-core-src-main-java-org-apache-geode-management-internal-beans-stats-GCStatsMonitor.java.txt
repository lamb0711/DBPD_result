Merge branch 'release/1.8.0'

+import java.util.Map;
+
+import org.apache.geode.distributed.ConfigurationProperties;
+/**
+ * This class acts as a monitor and listen for GC statistics updates on behalf of MemberMBean.
+ * <p>
+ * There's only one dedicated thread that wakes up at the
+ * {@link ConfigurationProperties#STATISTIC_SAMPLE_RATE} configured, samples all the statistics,
+ * writes them to the {@link ConfigurationProperties#STATISTIC_ARCHIVE_FILE} configured (if any) and
+ * notifies listeners of changes. The mutable fields are declared as {@code volatile} to make sure
+ * readers of the statistics get the latest recorded value.
+ * <p>
+ * This class is conditionally thread-safe, there can be multiple concurrent readers accessing a
+ * instance, but concurrent writers need to be synchronized externally.
+ *
+ * @see org.apache.geode.internal.statistics.HostStatSampler
+ * @see org.apache.geode.distributed.ConfigurationProperties
+ * @see org.apache.geode.management.internal.beans.stats.MBeanStatsMonitor
+ */
-
-
+  long getCollections() {
+    return collections;
+  }
+
+  long getCollectionTime() {
+    return collectionTime;
+  }
+  void decreasePrevValues(Map<String, Number> statsMap) {
+    collections -= statsMap.getOrDefault(StatsKey.VM_GC_STATS_COLLECTIONS, 0).longValue();
+    collectionTime -= statsMap.getOrDefault(StatsKey.VM_GC_STATS_COLLECTION_TIME, 0).longValue();
+  }
+
+  void increaseStats(String name, Number value) {
+    if (name.equals(StatsKey.VM_GC_STATS_COLLECTIONS)) {
+      collections += value.longValue();
+      return;
+    }
+
+    if (name.equals(StatsKey.VM_GC_STATS_COLLECTION_TIME)) {
+      collectionTime += value.longValue();
+      return;
+    }
+  }
+
+
+
-
+
+
+
-
-  private void decreasePrevValues(DefaultHashMap statsMap) {
-    collections -= statsMap.get(StatsKey.VM_GC_STATS_COLLECTIONS).intValue();
-    collectionTime -= statsMap.get(StatsKey.VM_GC_STATS_COLLECTION_TIME).intValue();
-  }
-
-  private void increaseStats(String name, Number value) {
-    if (name.equals(StatsKey.VM_GC_STATS_COLLECTIONS)) {
-      collections += value.longValue();
-      return;
-    }
-    if (name.equals(StatsKey.VM_GC_STATS_COLLECTION_TIME)) {
-      collectionTime += value.longValue();
-      return;
-    }
-  }
-
-  public long getCollections() {
-    return collections;
-  }
-
-  public long getCollectionTime() {
-    return collectionTime;
-  }

INS26 INS26 MOV31 MOV31 MOV31 MOV31 INS40 INS40 INS29 INS65 INS65 INS65 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS40 INS40 INS40 INS74 INS67 INS67 INS66 INS43 INS43 INS43 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 UPD42 INS34 UPD42 INS34 DEL83 DEL83 DEL83 DEL43 DEL83