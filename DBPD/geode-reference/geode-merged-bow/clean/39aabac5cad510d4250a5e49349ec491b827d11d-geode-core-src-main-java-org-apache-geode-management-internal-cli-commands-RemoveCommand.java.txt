Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

+import static org.apache.geode.management.internal.cli.result.ResultBuilder.createUserErrorResult;
-import org.apache.commons.lang.StringUtils;
+import org.apache.geode.security.ResourcePermission.Operation;
+import org.apache.geode.security.ResourcePermission.Resource;
+  public static final String REGION_NOT_FOUND = "Region <%s> not found in any of the members";
+
-    DataCommandResult dataResult;
-
-    if (StringUtils.isEmpty(regionPath)) {
-      return makePresentationResult(DataCommandResult.createRemoveResult(key, null, null,
-          CliStrings.REMOVE__MSG__REGIONNAME_EMPTY, false));
-    }
-      return makePresentationResult(DataCommandResult.createRemoveResult(null, null, null,
-          CliStrings.REMOVE__MSG__KEY_EMPTY, false));
+      return createUserErrorResult(CliStrings.REMOVE__MSG__KEY_EMPTY);
-      cache.getSecurityService().authorizeRegionWrite(regionPath);
+      cache.getSecurityService().authorize(Resource.DATA, Operation.WRITE, regionPath);
-      cache.getSecurityService().authorizeRegionWrite(regionPath, key);
+      cache.getSecurityService().authorize(Resource.DATA, Operation.WRITE, regionPath, key);
-    @SuppressWarnings("rawtypes")
+    DataCommandResult dataResult;
-      if (CollectionUtils.isNotEmpty(memberList)) {
-        DataCommandRequest request = new DataCommandRequest();
-        request.setCommand(CliStrings.REMOVE);
-        request.setKey(key);
-        request.setKeyClass(keyClass);
-        request.setRemoveAllKeys(removeAllKeys ? "ALL" : null);
-        request.setRegionName(regionPath);
-        dataResult = callFunctionForRegion(request, removefn, memberList);
-      } else {
-        dataResult = DataCommandResult.createRemoveInfoResult(key, null, null,
-            CliStrings.format(CliStrings.REMOVE__MSG__REGION_NOT_FOUND_ON_ALL_MEMBERS, regionPath),
-            false);
+
+      if (CollectionUtils.isEmpty(memberList)) {
+        return createUserErrorResult(String.format(REGION_NOT_FOUND, regionPath));
+      DataCommandRequest request = new DataCommandRequest();
+      request.setCommand(CliStrings.REMOVE);
+      request.setKey(key);
+      request.setKeyClass(keyClass);
+      request.setRemoveAllKeys(removeAllKeys ? "ALL" : null);
+      request.setRegionName(regionPath);
+      dataResult = callFunctionForRegion(request, removefn, memberList);
-    dataResult.setKeyClass(keyClass);
+    dataResult.setKeyClass(keyClass);

MOV26 INS26 INS26 INS40 INS40 UPD40 INS23 INS83 INS83 INS83 INS43 INS59 MOV8 INS42 INS42 INS45 MOV60 INS25 MOV25 MOV8 MOV60 MOV60 MOV60 MOV21 MOV41 MOV27 INS8 MOV27 INS41 MOV60 INS25 INS32 INS32 INS8 INS42 INS40 UPD42 INS40 INS40 UPD42 INS40 INS40 INS42 INS42 INS42 INS42 INS41 MOV42 INS32 UPD42 UPD42 MOV42 MOV42 MOV42 MOV16 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL45 DEL79 DEL42 DEL42 DEL42 DEL32 DEL33 DEL33 DEL40 DEL42 DEL32 DEL9 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL33 DEL33 DEL40 DEL9 DEL32 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL33 DEL33 DEL33 DEL40 DEL9 DEL32 DEL32 DEL41 DEL8 DEL25 DEL25 DEL8