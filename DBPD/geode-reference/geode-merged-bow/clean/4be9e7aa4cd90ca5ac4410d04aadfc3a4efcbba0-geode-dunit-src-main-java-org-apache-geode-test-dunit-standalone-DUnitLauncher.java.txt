GEODE-2644: Make LogWriterAppender optional and support log4j2.xml

LogWriterAppender is now configured in log4j2.xml and it supports
sessions that correspond with Cache lifecycle. This allows Geode to
pause and resume LogWriterAppender and GeodeConsoleAppender without
resorting to dynamically adding and removing appenders.

When the Cache exists, log events stop going to the Console and instead
go to the Geode log file. Whenever the Cache does not exist, log events
go only to the Console.

These changes remove as much of the Log4j2 Core manipulation as
possible.

Also fixed:
* GEODE-5789: Geode now updates log level of all Geode loggers.

List of changes:
* Change LogWriterAppender to be pausable and session-oriented
* Add GeodeConsoleAppender which is pausable
* Log4j2 Core dependency is now optional
* Internal Logging interfaces allow Logging service to be pluggable
* Log4j2 xml integration testing now uses JUnit Rule from Log4j2
* Reduce coupling between Logging and the rest of Geode
* Greatly increase test coverage for Logging

-import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.internal.logging.Configuration;
-        ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(LogService.BASE_LOGGER_NAME))
-            .getContext();
+        ((org.apache.logging.log4j.core.Logger) LogManager
+            .getLogger(Configuration.MAIN_LOGGER_NAME))
+                .getContext();
-        appenderContext.getConfiguration().getLoggerConfig(LogService.BASE_LOGGER_NAME);
+        appenderContext.getConfiguration().getLoggerConfig(Configuration.MAIN_LOGGER_NAME);

UPD40 UPD40 UPD40