GEODE-4857: add interface methods to ClusterConfigurationService (#1637)

* GEODE-4857: add interface methods to ClusterConfigurationService

+import java.util.ArrayList;
+import java.util.List;
+import java.util.function.UnaryOperator;
+
+import org.apache.geode.internal.cache.configuration.CacheConfig;
+import org.apache.geode.internal.cache.configuration.CacheElement;
+import org.apache.geode.internal.cache.configuration.RegionConfig;
+import org.apache.geode.lang.Identifiable;
+import org.apache.geode.management.internal.cli.exceptions.EntityNotFoundException;
+
+  /**
+   * retrieves the configuration object of a member group
+   *
+   * @param group the member group name, if null, then "cluster" is assumed
+   * @param additionalBindClass custom element classes if needed
+   * @return the configuration object
+   */
+  CacheConfig getCacheConfig(String group, Class<? extends CacheElement>... additionalBindClass);
+
+  /**
+   * update the cluster configuration of a member group
+   *
+   * @param group the member group name, if null, then "cluster" is assumed
+   * @param mutator the change you want to apply to the configuration
+   * @param additionalBindClass custom element classes if needed
+   */
+  void updateCacheConfig(String group, UnaryOperator<CacheConfig> mutator,
+      Class<? extends CacheElement>... additionalBindClass);
+
+
+  default <T extends CacheElement> T getCustomCacheElement(String group, String id,
+      Class<T> classT) {
+    CacheConfig cacheConfig = getCacheConfig(group, classT);
+    return findCustomCacheElement(cacheConfig, id, classT);
+  }
+
+  default void saveCustomCacheElement(String group, CacheElement element) {
+    updateCacheConfig(group, cacheConfig -> {
+      CacheElement foundElement =
+          findCustomCacheElement(cacheConfig, element.getId(), element.getClass());
+      if (foundElement != null) {
+        cacheConfig.getCustomCacheElements().remove(foundElement);
+      }
+      cacheConfig.getCustomCacheElements().add(element);
+      return cacheConfig;
+    }, element.getClass());
+  }
+
+  default void deleteCustomCacheElement(String group, String id,
+      Class<? extends CacheElement> classT) {
+    updateCacheConfig(group, config -> {
+      CacheElement cacheElement = findCustomCacheElement(config, id, classT);
+      if (cacheElement == null) {
+        return null;
+      }
+      config.getCustomCacheElements().remove(cacheElement);
+      return config;
+    }, classT);
+  }
+
+  default <T extends CacheElement> T getCustomRegionElement(String group, String regionPath,
+      String id, Class<T> classT) {
+    CacheConfig cacheConfig = getCacheConfig(group, classT);
+    return findCustomRegionElement(cacheConfig, regionPath, id, classT);
+  }
+
+  default void saveCustomRegionElement(String group, String regionPath, CacheElement element) {
+    updateCacheConfig(group, cacheConfig -> {
+      RegionConfig regionConfig = findRegionConfiguration(cacheConfig, regionPath);
+      if (regionConfig == null) {
+        throw new EntityNotFoundException(
+            String.format("region %s does not exist in group %s", regionPath, group));
+      }
+
+      CacheElement oldElement =
+          findCustomRegionElement(cacheConfig, regionPath, element.getId(), element.getClass());
+
+      if (oldElement != null) {
+        regionConfig.getCustomRegionElements().remove(oldElement);
+      }
+      regionConfig.getCustomRegionElements().add(element);
+      return cacheConfig;
+    }, element.getClass());
+  }
+
+  default void deleteCustomRegionElement(String group, String regionPath, String id,
+      Class<? extends CacheElement> classT) {
+    updateCacheConfig(group, cacheConfig -> {
+      RegionConfig regionConfig = findRegionConfiguration(cacheConfig, regionPath);
+      if (regionConfig == null) {
+        throw new EntityNotFoundException(
+            String.format("region %s does not exist in group %s", regionPath, group));
+      }
+      CacheElement element = findCustomRegionElement(cacheConfig, regionPath, id, classT);
+      if (element == null) {
+        return null;
+      }
+      regionConfig.getCustomRegionElements().remove(element);
+      return cacheConfig;
+    }, classT);
+  }
+
+
+  default <T extends Identifiable<String>> T findIdentifiable(List<T> list, String id) {
+    return list.stream().filter(o -> o.getId().equals(id)).findFirst().orElse(null);
+  }
+
+  default RegionConfig findRegionConfiguration(CacheConfig cacheConfig, String regionPath) {
+    return findIdentifiable(cacheConfig.getRegion(), regionPath);
+  }
+
+  default <T extends CacheElement> List<T> findCustomCacheElements(CacheConfig cacheConfig,
+      Class<T> classT) {
+
+    List<T> newList = new ArrayList<>();
+    // streaming won't work here, because it's trying to cast element into CacheElement
+    for (Object element : cacheConfig.getCustomCacheElements()) {
+      if (classT.isInstance(element)) {
+        newList.add(classT.cast(element));
+      }
+    }
+    return newList;
+  }
+
+  default <T extends CacheElement> T findCustomCacheElement(CacheConfig cacheConfig,
+      String elementId, Class<T> classT) {
+    return findIdentifiable(findCustomCacheElements(cacheConfig, classT), elementId);
+  }
+
+  default <T extends CacheElement> List<T> findCustomRegionElements(CacheConfig cacheConfig,
+      String regionPath, Class<T> classT) {
+    List<T> newList = new ArrayList<>();
+    RegionConfig regionConfig = findRegionConfiguration(cacheConfig, regionPath);
+    if (regionConfig == null) {
+      return newList;
+    }
+
+    // streaming won't work here, because it's trying to cast element into CacheElement
+    for (Object element : regionConfig.getCustomRegionElements()) {
+      if (classT.isInstance(element)) {
+        newList.add(classT.cast(element));
+      }
+    }
+    return newList;
+  }
+
+  default <T extends CacheElement> T findCustomRegionElement(CacheConfig cacheConfig,
+      String regionPath, String elementId, Class<T> classT) {
+    return findIdentifiable(findCustomRegionElements(cacheConfig, regionPath, classT), elementId);
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS43 INS42 INS44 INS44 INS29 INS39 INS42 INS44 INS44 INS44 INS83 INS73 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS73 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS73 INS43 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS73 INS74 INS42 INS44 INS44 INS8 INS83 INS73 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS73 INS74 INS42 INS44 INS44 INS44 INS8 INS83 INS73 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS74 INS42 INS65 INS65 INS65 INS65 INS43 INS42 INS74 INS42 INS74 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS60 INS41 INS43 INS42 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS74 INS42 INS21 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS60 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS21 INS42 INS74 INS42 INS74 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS43 INS43 INS43 INS42 INS74 INS42 INS60 INS70 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS41 INS42 INS43 INS43 INS43 INS43 INS42 INS43 INS42 INS74 INS42 INS60 INS60 INS25 INS70 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS41 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS76 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS43 INS43 INS76 INS42 INS42 INS42 INS43 INS43 INS43 INS59 INS32 INS42 INS42 INS32 INS42 INS42 INS43 INS76 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS76 INS32 INS43 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS59 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS59 INS43 INS59 INS27 INS8 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS32 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS86 INS32 INS42 INS43 INS42 INS42 INS86 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS86 INS32 INS42 INS43 INS42 INS42 INS86 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS41 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS59 INS8 INS42 INS42 INS42 INS59 INS8 INS42 INS42 INS42 INS59 INS8 INS42 INS42 INS42 INS59 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS60 INS25 INS21 INS41 INS42 INS60 INS25 INS21 INS41 INS42 INS60 INS25 INS60 INS25 INS21 INS41 INS42 INS60 INS25 INS60 INS25 INS21 INS41 INS32 INS42 INS86 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS42 INS42 INS21 INS43 INS59 INS27 INS8 INS32 INS42 INS43 INS59 INS27 INS8 INS32 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS59 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS32 INS42 INS33 INS21 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS32 INS42 INS33 INS41 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42