Merge branch 'release/1.4.0'

+import java.io.File;
+import java.io.FileInputStream;
+import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.List;
+import com.healthmarketscience.rmiio.RemoteInputStream;
+import com.healthmarketscience.rmiio.RemoteOutputStreamClient;
+import com.healthmarketscience.rmiio.SimpleRemoteInputStream;
+import org.apache.commons.io.IOUtils;
+
-import org.apache.geode.internal.util.ArrayUtils;
+import org.apache.geode.management.internal.beans.FileUploader;
+import org.apache.geode.management.internal.beans.FileUploaderMBean;
+import org.apache.geode.management.internal.security.ResourceConstants;
- * 
+ *
+  private FileUploaderMBean fileUploadMBeanProxy;
-      env.put(JMXConnector.CREDENTIALS, gfProperties);
+
+      // when not using JMXShiroAuthenticator in the integrated security, JMX own password file
+      // authentication requires the credentials been sent in String[] format.
+      // Our JMXShiroAuthenticator handles both String[] and Properties format
+      String username = gfProperties.getProperty(ResourceConstants.USER_NAME);
+      String password = gfProperties.getProperty(ResourceConstants.PASSWORD);
+      if (username != null) {
+        env.put(JMXConnector.CREDENTIALS, new String[] {username, password});
+      }
+          this.fileUploadMBeanProxy = JMX.newMBeanProxy(mbsc,
+              new ObjectName(ManagementConstants.OBJECTNAME__FILEUPLOADER_MBEAN),
+              FileUploaderMBean.class);
-   * 
+   *
-  public Object processCommand(final CommandRequest commandRequest) throws JMXInvocationException {
-    Byte[][] binaryData = null;
-    if (commandRequest.hasFileData()) {
-      binaryData = ArrayUtils.toByteArray(commandRequest.getFileData());
+  public Object processCommand(final CommandRequest commandRequest) {
+    List<String> stagedFilePaths = null;
+
+    try {
+      if (commandRequest.hasFileList()) {
+        stagedFilePaths = new ArrayList<>();
+        for (File file : commandRequest.getFileList()) {
+          FileUploader.RemoteFile remote = fileUploadMBeanProxy.uploadFile(file.getName());
+          FileInputStream source = new FileInputStream(file);
+
+          OutputStream target = RemoteOutputStreamClient.wrap(remote.getOutputStream());
+          IOUtils.copyLarge(source, target);
+          target.close();
+
+          stagedFilePaths.add(remote.getFilename());
+        }
+      }
+    } catch (IOException e) {
+      throw new JMXInvocationException("Unable to upload file", e);
-    return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
-        commandRequest.getEnvironment(), binaryData);
+
+    try {
+      return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
+          commandRequest.getEnvironment(), stagedFilePaths);
+    } finally {
+      if (stagedFilePaths != null) {
+        fileUploadMBeanProxy.deleteFiles(stagedFilePaths);
+      }
+    }
-   * 
+   *
- * 
+ *

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS23 INS83 INS43 INS59 INS8 INS42 INS42 INS60 INS54 INS54 INS74 INS59 INS8 INS12 MOV8 INS8 INS60 INS60 INS25 INS43 INS43 INS42 INS33 INS25 INS44 INS8 INS25 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS8 INS43 INS42 INS53 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS21 INS70 INS42 INS14 UPD42 INS42 INS33 INS21 INS42 INS42 INS40 INS42 INS42 INS40 INS7 INS44 INS32 INS8 MOV43 INS45 INS42 INS32 INS3 INS21 INS42 INS14 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS21 INS21 INS21 INS42 INS42 INS42 INS5 INS4 INS7 INS74 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS43 INS85 INS42 INS42 INS22 INS32 INS43 INS40 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS42 INS14 INS57 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS40 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL43 DEL85 DEL85 DEL5 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25