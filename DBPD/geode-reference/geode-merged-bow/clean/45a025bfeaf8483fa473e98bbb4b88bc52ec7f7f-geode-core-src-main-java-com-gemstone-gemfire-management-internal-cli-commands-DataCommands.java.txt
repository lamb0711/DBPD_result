Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import java.io.Serializable;
-import org.apache.geode.security.GeodePermission.Operation;
-import org.apache.geode.security.GeodePermission.Resource;
+import org.apache.geode.security.ResourcePermission.Operation;
+import org.apache.geode.security.ResourcePermission.Resource;
+import org.apache.shiro.subject.Subject;
-import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
+import com.gemstone.gemfire.internal.security.IntegratedSecurityService;
+import com.gemstone.gemfire.internal.security.SecurityService;
+  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+
-    GeodeSecurityUtil.authorizeRegionRead(regionName);
+    this.securityService.authorizeRegionRead(regionName);
-    GeodeSecurityUtil.authorizeRegionWrite(regionName);
+    this.securityService.authorizeRegionWrite(regionName);
-    GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+    this.securityService.authorizeRegionWrite(regionPath);
-    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
+        Subject subject = this.securityService.getSubject();
+        if(subject!=null){
+          request.setPrincipal((Serializable)subject.getPrincipal());
+        }
-      dataResult = getfn.get(key, keyClass, valueClass, regionPath, loadOnCacheMiss);
+      dataResult = getfn.get(null, key, keyClass, valueClass, regionPath, loadOnCacheMiss);
-    Object result = GeodeSecurityUtil.postProcess(regionPath, key, dataResult.getGetResult());
-    dataResult.setGetResult(result);
-
-    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
-      GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+      this.securityService.authorizeRegionWrite(regionPath);
-      GeodeSecurityUtil.authorizeRegionWrite(regionPath, key);
+      this.securityService.authorizeRegionWrite(regionPath, key);

INS26 INS26 INS26 INS40 UPD40 UPD40 INS40 INS40 UPD40 INS23 INS83 INS43 INS59 INS42 INS42 INS32 INS42 INS42 INS22 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS60 INS25 INS22 INS22 INS43 INS59 INS27 INS8 INS33 INS52 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS22 INS42 INS32 INS52 INS42 INS42 INS42 INS11 INS43 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42