Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Exception thrown when a DistributionMessage is processed to be propagated
- * back to the sender of the message.
+ * Exception thrown when a DistributionMessage is processed to be propagated back to the sender of
+ * the message.
-  
+
-  public ReplyException() {
-  }
-  
-  
+  public ReplyException() {}
+
+
+   * 
-  
+
-   * Constructs an instance of <code>ReplyException</code> with the specified detail message
-   * and cause.
+   * Constructs an instance of <code>ReplyException</code> with the specified detail message and
+   * cause.
+   * 
-  
+
+   * 
-  
-  /** After expected reply exceptions have already been handled, 
-   * call this method to handle this exception as unexpected,
-   * i.e. converts to an appropriate runtime exception and throws it.
-   * If there is a a causal exception, then this method will
-   * throw that instead of the ReplyException.
+
+  /**
+   * After expected reply exceptions have already been handled, call this method to handle this
+   * exception as unexpected, i.e. converts to an appropriate runtime exception and throws it. If
+   * there is a a causal exception, then this method will throw that instead of the ReplyException.
-      throw new InternalGemFireException(LocalizedStrings.ReplyException_UNEXPECTED_EXCEPTION_ON_MEMBER_0.toLocalizedString(getSender()), this);
+      throw new InternalGemFireException(
+          LocalizedStrings.ReplyException_UNEXPECTED_EXCEPTION_ON_MEMBER_0
+              .toLocalizedString(getSender()),
+          this);
-      throw (RuntimeException)c;
+      throw (RuntimeException) c;
-      throw (Error)c;
+      throw (Error) c;
-      //for bug 43602
+      // for bug 43602
-    throw new InternalGemFireException(LocalizedStrings.ReplyException_UNEXPECTED_EXCEPTION_ON_MEMBER_0.toLocalizedString(getSender()), c);
+    throw new InternalGemFireException(
+        LocalizedStrings.ReplyException_UNEXPECTED_EXCEPTION_ON_MEMBER_0
+            .toLocalizedString(getSender()),
+        c);
+
-   * Fixes a remote exception that this ReplyException has wrapped. Adds the 
-   * local stack frames. The remote stack elements have the sender id info. 
+   * Fixes a remote exception that this ReplyException has wrapped. Adds the local stack frames. The
+   * remote stack elements have the sender id info.
-   
+
-    StackTraceElement[] localStack  = Thread.currentThread().getStackTrace();
+    StackTraceElement[] localStack = Thread.currentThread().getStackTrace();
-    StackTraceElement[] newStack =  new StackTraceElement[remoteStack.length + 
-                                                         localStack.length - 
-                                                         localStartIdx];
-   
+    StackTraceElement[] newStack =
+        new StackTraceElement[remoteStack.length + localStack.length - localStartIdx];
+
-    for (int j=2; i < newStack.length; j++, i++) {
+    for (int j = 2; i < newStack.length; j++, i++) {
-   
+
-   * Adds the sender information to the stack trace elements of the given
-   * exception. Also traverses recursively over the 'cause' for adding this
-   * sender information.
+   * Adds the sender information to the stack trace elements of the given exception. Also traverses
+   * recursively over the 'cause' for adding this sender information.
-   * @param toModify
-   *          Throwable instance to modify the stack trace elements
-   * @param senderId
-   *          id of the sender member
+   * @param toModify Throwable instance to modify the stack trace elements
+   * @param senderId id of the sender member
-   
+
-                          REMOTE_MEMBER_TOKEN + " '"+ senderId + 
-                          "' in " + element.getClassName(), 
-                          element.getMethodName(), 
-                          element.getFileName(), 
-                          element.getLineNumber());
+            REMOTE_MEMBER_TOKEN + " '" + senderId + "' in " + element.getClassName(),
+            element.getMethodName(), element.getFileName(), element.getLineNumber());
-   
+
-   
+
+   * 
+   * 
-    return (s!=null) ? ("From " + s + ": " + m) : m;
+    return (s != null) ? ("From " + s + ": " + m) : m;

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66