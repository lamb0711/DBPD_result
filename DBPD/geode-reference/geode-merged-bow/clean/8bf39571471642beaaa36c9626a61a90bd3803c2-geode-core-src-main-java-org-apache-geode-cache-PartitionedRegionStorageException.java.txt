Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * When a <code>PartitionedRegionStorageException</code> message contains
- * the string:
+ * When a <code>PartitionedRegionStorageException</code> message contains the string:
- * When a <code>PartitionedRegionStorageException</code> message contains
- * the string:
+ * When a <code>PartitionedRegionStorageException</code> message contains the string:
- * There are enough data stores, however some have refused possibly due to these
- * conditions:
+ * There are enough data stores, however some have refused possibly due to these conditions:
- * <li>The amount of storage allocated to the partitioned region on that
- * distributed member exceeds its localMaxMemory setting.</li>
- * <li>The partitioned region instance on that distributed member has been
- * closed or destroyed.</li>
+ * <li>The amount of storage allocated to the partitioned region on that distributed member exceeds
+ * its localMaxMemory setting.</li>
+ * <li>The partitioned region instance on that distributed member has been closed or destroyed.</li>
- * When a <code>PartitionedRegionStorageException</code> message contains
- * the string:
+ * When a <code>PartitionedRegionStorageException</code> message contains the string:
- * If the number of attempts is lesser than the number of available
- * data store members, contact GemFire support providing all logs and statistics files from 
- * all members containing the partitioned region.  Otherwise, shutdown and then restart one 
- * or more of the data stores, given that it is safe to do so, for example when redundantCopies 
- * is greater than 0.
+ * 
+ * If the number of attempts is lesser than the number of available data store members, contact
+ * GemFire support providing all logs and statistics files from all members containing the
+ * partitioned region. Otherwise, shutdown and then restart one or more of the data stores, given
+ * that it is safe to do so, for example when redundantCopies is greater than 0.
-public class PartitionedRegionStorageException extends CacheRuntimeException  {
-private static final long serialVersionUID = 5905463619475329732L;
+public class PartitionedRegionStorageException extends CacheRuntimeException {
+  private static final long serialVersionUID = 5905463619475329732L;
-    /** Creates a new instance of PartitionedRegionStorageException */
-    public PartitionedRegionStorageException() {
-    }
-    
-    
-    /**
-     * Creates a new {@link PartitionedRegionStorageException} with a message.
-     * @param msg The string message for the PartitionedRegionStorageException.
-     */
- 
-    public PartitionedRegionStorageException(String msg) {
-      super(msg);
-    }    
-    
-    /**
-     * Creates a new {@link PartitionedRegionStorageException} with a message and Throwable cause.
-     * @param message The string message for the PartitionedRegionStorageException.
-     * @param cause Throwable cause for this {@link PartitionedRegionStorageException}.
-     */
-    public PartitionedRegionStorageException(String message, Throwable cause) {
-        super(message, cause);
-    }
+  /** Creates a new instance of PartitionedRegionStorageException */
+  public PartitionedRegionStorageException() {}
+
+
+  /**
+   * Creates a new {@link PartitionedRegionStorageException} with a message.
+   * 
+   * @param msg The string message for the PartitionedRegionStorageException.
+   */
+
+  public PartitionedRegionStorageException(String msg) {
+    super(msg);
+  }
+
+  /**
+   * Creates a new {@link PartitionedRegionStorageException} with a message and Throwable cause.
+   * 
+   * @param message The string message for the PartitionedRegionStorageException.
+   * @param cause Throwable cause for this {@link PartitionedRegionStorageException}.
+   */
+  public PartitionedRegionStorageException(String message, Throwable cause) {
+    super(message, cause);
+  }

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66