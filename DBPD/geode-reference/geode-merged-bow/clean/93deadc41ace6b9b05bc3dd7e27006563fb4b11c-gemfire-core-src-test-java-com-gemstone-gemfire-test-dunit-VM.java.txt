GEODE-832: Modifying the dunit framework to allow lambda expressions

Lambdas can now be used for VM.invoke and VM.invokeAsync. For example

vm.invoke(() -> {System.out.println("Hello from remote VM")})
String value = vm.invoke(() -> {return "Hello from remote VM")

This theoretically could be more efficient than using anonymous
classes, because they do not capture (and Serialize) a reference to
the enclosing test class unless they reference state of that class.

-  public AsyncInvocation invokeAsync(Runnable r) {
+  public AsyncInvocation invokeAsync(SerializableRunnableIF r) {
-  public AsyncInvocation invokeAsync(Callable c) {
+  public <T> AsyncInvocation<T> invokeAsync(SerializableCallableIF<T> c) {
-  public void invoke(Runnable r) {
+  public void invoke(SerializableRunnableIF r) {
-  public Object invoke(Callable c) {
-    return invoke(c, "call");
+  public <T>  T invoke(SerializableCallableIF<T> c) {
+    return (T) invoke(c, "call");

INS73 INS74 INS73 UPD43 UPD43 INS42 MOV43 INS43 INS74 UPD43 INS42 UPD42 INS74 UPD42 INS42 INS43 INS43 UPD42 INS43 INS43 INS11 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS43 MOV32 INS42 DEL43 DEL43