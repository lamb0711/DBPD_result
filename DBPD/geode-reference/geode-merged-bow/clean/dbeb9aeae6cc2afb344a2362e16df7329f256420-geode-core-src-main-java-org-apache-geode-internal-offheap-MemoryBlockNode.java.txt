Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
+
+
+
+
+
+
+
+
-        return "compressed byte[" + ((OffHeapStoredObject)this.block).getDataSize() + "]";
+        return "compressed byte[" + ((OffHeapStoredObject) this.block).getDataSize() + "]";
-        return "byte[" + ((OffHeapStoredObject)this.block).getDataSize() + "]";
+        return "byte[" + ((OffHeapStoredObject) this.block).getDataSize() + "]";
-      return "compressed object of size " + ((OffHeapStoredObject)this.block).getDataSize();
+      return "compressed object of size " + ((OffHeapStoredObject) this.block).getDataSize();
-    //Object obj = EntryEventImpl.deserialize(((Chunk)this.block).getRawBytes());
-    byte[] bytes = ((OffHeapStoredObject)this.block).getRawBytes();
+    // Object obj = EntryEventImpl.deserialize(((Chunk)this.block).getRawBytes());
+    byte[] bytes = ((OffHeapStoredObject) this.block).getRawBytes();
+
+
+
-      return ((OffHeapStoredObject)this.block).getCompressedBytes();
+      return ((OffHeapStoredObject) this.block).getCompressedBytes();
-      //return "byte[" + ((Chunk)this.block).getDataSize() + "]";
-      return ((OffHeapStoredObject)this.block).getRawBytes();
+      // return "byte[" + ((Chunk)this.block).getDataSize() + "]";
+      return ((OffHeapStoredObject) this.block).getRawBytes();
-        byte[] bytes = ((OffHeapStoredObject)this.block).getRawBytes();
+        byte[] bytes = ((OffHeapStoredObject) this.block).getRawBytes();
+
-  
+
-      o = ((MemoryBlockNode)o).block;
+      o = ((MemoryBlockNode) o).block;
-  
+
-}
+}

