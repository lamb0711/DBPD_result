Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A callback for partitioned regions, invoked when a partition region is
- * created or any bucket in a partitioned region becomes primary.<br>
+ * A callback for partitioned regions, invoked when a partition region is created or any bucket in a
+ * partitioned region becomes primary.<br>
- * A sample implementation of this interface to colocate partition regions using
- * a primary key without having to honor the redundancy contract for every
- * colocate partition regions is as follows : <br>
+ * A sample implementation of this interface to colocate partition regions using a primary key
+ * without having to honor the redundancy contract for every colocate partition regions is as
+ * follows : <br>
- * public class ColocatingPartitionListener extends PartitionListenerAdapter
- *     implements Declarable {
+ * public class ColocatingPartitionListener extends PartitionListenerAdapter implements Declarable {
- *   public ColocatingPartitionListener() {
- *   }
+ *   public ColocatingPartitionListener() {}
- * A sample declaration of the ColocatingPartitionListener in cache.xml as
- * follows :<br>
+ * A sample declaration of the ColocatingPartitionListener in cache.xml as follows :<br>
-   * @param bucketId
-   *          id of the bucket which became primary
+   * @param bucketId id of the bucket which became primary
-   * @param region
-   *          handle of the region which is created
+   * @param region handle of the region which is created
-   * Callback invoked after a bucket has been removed from a member (e.g. during
-   * rebalancing). This API is useful for maintaining external data structures
-   * by bucket id or key.
+   * Callback invoked after a bucket has been removed from a member (e.g. during rebalancing). This
+   * API is useful for maintaining external data structures by bucket id or key.
-   * @param bucketId
-   *          id of the bucket removed
-   * @param keys
-   *          keys in the bucket removed
+   * @param bucketId id of the bucket removed
+   * @param keys keys in the bucket removed
-   * Callback invoked after a bucket has been created in a member (e.g. during
-   * rebalancing). This API is useful for maintaining external data structures
-   * by bucket id or key. Note that this API is invoked after the initial image
-   * has been completed so creates and destroys may occur in the keys. It is
-   * best to use this API during periods of no cache activity.
+   * Callback invoked after a bucket has been created in a member (e.g. during rebalancing). This
+   * API is useful for maintaining external data structures by bucket id or key. Note that this API
+   * is invoked after the initial image has been completed so creates and destroys may occur in the
+   * keys. It is best to use this API during periods of no cache activity.
-   * @param bucketId
-   *          id of the bucket created
-   * @param keys
-   *          keys in the bucket created
+   * @param bucketId id of the bucket created
+   * @param keys keys in the bucket created

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66