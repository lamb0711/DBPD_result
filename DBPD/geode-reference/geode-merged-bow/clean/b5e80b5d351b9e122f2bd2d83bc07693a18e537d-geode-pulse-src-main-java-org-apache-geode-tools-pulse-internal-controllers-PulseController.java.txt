Merge remote-tracking branch 'origin/develop' into geode-5600

-    ObjectNode queryResult = mapper.createObjectNode();
-    try {
-
-      if (StringUtils.isNotBlank(query)) {
-        // get cluster object
-        Cluster cluster = Repository.get().getCluster();
-        String userName = request.getUserPrincipal().getName();
-
-        // Call execute query method
-        queryResult = cluster.executeQuery(query, members, limit);
-
-        // Add query in history if query is executed successfully
-        if (!queryResult.has("error")) {
-          // Add html escaped query to history
-          String escapedQuery = StringEscapeUtils.escapeHtml(query);
-          cluster.addQueryInHistory(escapedQuery, userName);
-        }
-      }
-    } catch (Exception e) {
-      logger.debug("Exception Occurred : ", e);
-    }
+    ObjectNode queryResult = executeQuery(request, query, members, limit);
-    ObjectNode queryResult = mapper.createObjectNode();
-    try {
-
-      if (StringUtils.isNotBlank(query)) {
-        // get cluster object
-        Cluster cluster = Repository.get().getCluster();
-        String userName = request.getUserPrincipal().getName();
-
-        // Call execute query method
-        queryResult = cluster.executeQuery(query, members, limit);
-
-        // Add query in history if query is executed successfully
-        if (!queryResult.has("error")) {
-          // Add html escaped query to history
-          String escapedQuery = StringEscapeUtils.escapeHtml(query);
-          cluster.addQueryInHistory(escapedQuery, userName);
-        }
-      }
-    } catch (Exception e) {
-      logger.debug("Exception Occurred : ", e);
-    }
+    ObjectNode queryResult = executeQuery(request, query, members, limit);
+
+  private ObjectNode executeQuery(HttpServletRequest request, String query, String members,
+      int limit) {
+    ObjectNode queryResult = mapper.createObjectNode();
+    try {
+
+      if (StringUtils.isNotBlank(query)) {
+        // get cluster object
+        Cluster cluster = Repository.get().getCluster();
+        String userName = request.getUserPrincipal().getName();
+
+        // Add html escaped query to history
+        String escapedQuery = StringEscapeUtils.escapeHtml(query);
+        cluster.addQueryInHistory(escapedQuery, userName);
+
+        // Call execute query method
+        queryResult = cluster.executeQuery(query, members, limit);
+      }
+    } catch (Exception e) {
+      logger.debug("Exception Occurred : ", e);
+    }
+    return queryResult;
+  }

INS31 INS83 INS43 INS42 INS44 INS44 INS44 INS44 MOV8 INS60 INS60 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 MOV60 INS54 INS41 MOV43 INS59 INS43 INS59 INS42 INS42 INS42 MOV8 MOV12 INS42 MOV42 INS32 UPD42 MOV42 INS42 INS32 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV32 MOV60 MOV60 MOV21 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL45 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL54 DEL42 DEL42 DEL45 DEL32 DEL38 DEL25