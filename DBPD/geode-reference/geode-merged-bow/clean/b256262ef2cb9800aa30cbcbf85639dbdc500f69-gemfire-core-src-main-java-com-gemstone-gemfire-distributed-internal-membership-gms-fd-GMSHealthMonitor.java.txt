GMSHealthMonitor was only accepting a health-check response to see if a member was alive or not.  This change-set modifies it to allow any message from the suspect to prove that the suspect is alive.  This reduced the amount of suspect processing going on quite a bit, and made it less likely to incorrectly oust a busy member.

GMSMembershipManager was not throwing an exception when distribution was attempted but the manager was shutting down.  This caused large inconsistencies between clients and servers in client/server HA testing.

TCPServer's message to determine the locator's version was using a 2-minute timeout, totally ignoring the timeout passed to it.  It now pays attention to the requested timeout.

A number of tests were using Java assertions instead of JUnit Assert.  I changed all of these in our recently added tests to use the JUnit assertions in case the JUnit jvm doesn't have assertions enabled.

+import java.util.concurrent.ConcurrentMap;
-  final private Map<InternalDistributedMember, CustomTimeStamp> memberVsLastMsgTS = new ConcurrentHashMap<>();
+  final ConcurrentMap<InternalDistributedMember, CustomTimeStamp> memberVsLastMsgTS = new ConcurrentHashMap<>();
-  private ScheduledFuture monitorFuture;
+  private ScheduledFuture<?> monitorFuture;
-    CustomTimeStamp cTS = memberVsLastMsgTS.get(sender);
+    CustomTimeStamp cTS = new CustomTimeStamp(currentTimeStamp);
+    cTS = memberVsLastMsgTS.putIfAbsent(sender, cTS);
-    } else {
-      cTS = new CustomTimeStamp();
-      cTS.setTimeStamp(currentTimeStamp);
-      memberVsLastMsgTS.put(sender, cTS);
-    volatile long timeStamp;
+    private volatile long timeStamp;
+    
+    CustomTimeStamp(long timeStamp) {
+      this.timeStamp = timeStamp;
+    }
-          CustomTimeStamp customTS = new CustomTimeStamp();
-          customTS.setTimeStamp(currentTime);
+          CustomTimeStamp customTS = new CustomTimeStamp(currentTime);
-        CustomTimeStamp customTS = new CustomTimeStamp();
-        customTS.setTimeStamp(cts);
+        CustomTimeStamp customTS = new CustomTimeStamp(cts);
+              long startTime = System.currentTimeMillis();
+              CustomTimeStamp ts = new CustomTimeStamp(startTime);
+              memberVsLastMsgTS.put(mbr, ts);
+
-                GMSHealthMonitor.this.services.getJoinLeave().remove(mbr, reason);
+                ts = memberVsLastMsgTS.get(mbr);
+                if (ts == null || ts.getTimeStamp() <= startTime) {
+                  services.getJoinLeave().remove(mbr, reason);
+                }
-    NetView v = currentView;

INS26 INS40 UPD74 INS74 INS31 UPD43 MOV43 INS76 INS60 INS21 INS83 INS42 INS44 INS8 UPD42 MOV43 INS59 INS7 INS39 INS42 INS21 MOV42 MOV14 INS42 INS32 INS7 INS42 MOV42 UPD42 MOV42 MOV42 INS42 INS22 INS42 INS52 INS42 MOV43 MOV43 MOV43 INS42 MOV43 INS42 INS8 INS60 INS60 INS21 MOV21 MOV60 INS25 MOV21 INS39 INS59 INS43 INS59 INS32 MOV27 INS8 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS21 MOV25 INS42 INS42 INS43 INS42 INS7 INS27 INS42 INS42 INS32 INS27 INS27 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS42 DEL83 DEL32 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL52 DEL42 DEL22 DEL8 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60