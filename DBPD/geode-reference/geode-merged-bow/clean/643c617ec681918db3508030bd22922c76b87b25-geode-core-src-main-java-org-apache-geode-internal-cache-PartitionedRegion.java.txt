GEODE-8073: Fix NPE after FetchKeysMessage failed. (#5055)


-      for (Integer bucket : buckets) {
-        Set keys = null;
-        if (bucketKeys == null) {
-          try {
-            FetchKeysResponse fkr = FetchKeysMessage.send(member, this, bucket, true);
-            keys = fkr.waitForKeys();
-          } catch (ForceReattemptException ignore) {
-            failures.add(bucket);
-          }
-        } else {
-          keys = bucketKeys.get(bucket);
-        }
-
-        // TODO (ashetkar) Use single Get70 instance for all?
-        for (Object key : keys) {
-          Get70 command = (Get70) Get70.getCommand();
-          Get70.Entry ge = command.getValueAndIsObject(this, key, null, servConn);
-
-          if (ge.keyNotPresent) {
-            values.addObjectPartForAbsentKey(key, ge.value, ge.versionTag);
-          } else {
-            values.addObjectPart(key, ge.value, ge.isObject, ge.versionTag);
-          }
-
-          if (values.size() == BaseCommand.MAXIMUM_CHUNK_SIZE) {
-            BaseCommand.sendNewRegisterInterestResponseChunk(this, "keyList", values, false,
-                servConn);
-            values.clear();
-          }
-        }
-      }
+      fetchKeysAndValues(values, servConn, failures, member, bucketKeys, buckets);
+  void fetchKeysAndValues(VersionedObjectList values, ServerConnection servConn,
+      Set<Integer> failures, InternalDistributedMember member,
+      HashMap<Integer, HashSet> bucketKeys, Set<Integer> buckets)
+      throws IOException {
+    for (Integer bucket : buckets) {
+      Set keys = null;
+      if (bucketKeys == null) {
+        try {
+          FetchKeysResponse fetchKeysResponse = getFetchKeysResponse(member, bucket);
+          keys = fetchKeysResponse.waitForKeys();
+        } catch (ForceReattemptException ignore) {
+          failures.add(bucket);
+        }
+      } else {
+        keys = bucketKeys.get(bucket);
+      }
+      if (keys != null) {
+        getValuesForKeys(values, servConn, keys);
+      }
+    }
+  }
+
+  FetchKeysResponse getFetchKeysResponse(InternalDistributedMember member,
+      Integer bucket)
+      throws ForceReattemptException {
+    return FetchKeysMessage.send(member, this, bucket, true);
+  }
+
+  void getValuesForKeys(VersionedObjectList values, ServerConnection servConn, Set keys)
+      throws IOException {
+    // TODO (ashetkar) Use single Get70 instance for all?
+    for (Object key : keys) {
+      Get70 command = (Get70) Get70.getCommand();
+      Get70.Entry ge = command.getValueAndIsObject(this, key, null, servConn);
+
+      if (ge.keyNotPresent) {
+        values.addObjectPartForAbsentKey(key, ge.value, ge.versionTag);
+      } else {
+        values.addObjectPart(key, ge.value, ge.isObject, ge.versionTag);
+      }
+
+      if (values.size() == BaseCommand.MAXIMUM_CHUNK_SIZE) {
+        BaseCommand.sendNewRegisterInterestResponseChunk(this, "keyList", values, false,
+            servConn);
+        values.clear();
+      }
+    }
+  }
+

INS31 INS31 INS31 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 MOV43 INS42 INS44 INS44 INS43 MOV8 INS39 INS42 INS44 INS44 INS44 INS43 MOV8 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS42 INS70 INS43 INS42 INS43 INS42 INS42 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS43 INS43 INS43 MOV44 INS42 INS8 INS42 INS42 MOV32 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV60 MOV25 INS25 INS32 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS8 INS32 INS60 INS21 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL70 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21