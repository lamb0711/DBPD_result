GEODE-5614: rename DistributedTestRule as DistributedRule

* Cleanup javadocs on rules that referred to DistributedTestRule.
* Add ClientCacheFactoryDistributedTest for ClientCacheRule.

+import static org.apache.geode.test.dunit.Disconnect.disconnectAllFromDS;
-import org.apache.geode.test.dunit.Disconnect;
- * {@code ClientCacheRule} follows the standard convention of using a {@code Builder} for
- * configuration as introduced in the JUnit {@code Timeout} rule.
- *
- * <p>
- * {@literal @}ClassRule
- * public static DistributedTestRule distributedTestRule = new DistributedTestRule();
+ * {@literal @}Rule
+ * public DistributedRule distributedRule = new DistributedRule();
- * public void hasClient() {
- *   vm0.invoke(() -> clientCacheRule.createClientCache());
+ * public void createClientCache() {
+ *   vm0.invoke(() -> clientCacheRule.createClientCache(new ClientCacheFactory().setPoolThreadLocalConnections(true));
+ * }
+ * </pre>
+ *
+ * <p>
+ * {@link ClientCacheRule.Builder} can also be used to construct an instance with more options:
+ *
+ * <pre>
+ * {@literal @}Rule
+ * public DistributedRule distributedRule = new DistributedRule();
+ *
+ * {@literal @}Rule
+ * public ClientCacheRule clientCacheRule = ClientCacheRule.builder().createClientCacheInLocal().build();
+ *
+ * {@literal @}Test
+ * public void controllerVmCreatedClientCache() {
+ *   assertThat(clientCacheRule.getClientCache()).isNotNull();
-@SuppressWarnings({"serial", "unused"})
-public class ClientCacheRule extends AbstractDistributedTestRule {
+@SuppressWarnings("serial,unused")
+public class ClientCacheRule extends AbstractDistributedRule {
-      Disconnect.disconnectAllFromDS();
+      disconnectAllFromDS();

MOV26 UPD40 UPD43 MOV65 MOV65 MOV65 INS45 UPD42 UPD66 INS66 INS66 UPD65 UPD66 UPD66 UPD65 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 UPD65 UPD66 UPD66 UPD66 UPD66 INS65 UPD66 UPD66 UPD66 UPD66 INS40 INS66 DEL66 DEL66 DEL45 DEL45 DEL4 DEL42