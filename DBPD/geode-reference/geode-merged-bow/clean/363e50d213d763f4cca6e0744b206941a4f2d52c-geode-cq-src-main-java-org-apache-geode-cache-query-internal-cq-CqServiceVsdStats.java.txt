GEODE-2632: refactor code to use InternalCache instead of GemFireCacheImpl

* minor cleanup also

+import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-  protected static final String CQS_CREATED = "numCqsCreated";
+  private static final String CQS_CREATED = "numCqsCreated";
-  protected static final String CQS_ACTIVE = "numCqsActive";
+  private static final String CQS_ACTIVE = "numCqsActive";
-  protected static final String CQS_STOPPED = "numCqsStopped";
+  private static final String CQS_STOPPED = "numCqsStopped";
-  protected static final String CQS_CLOSED = "numCqsClosed";
+  private static final String CQS_CLOSED = "numCqsClosed";
-  protected static final String CQS_ON_CLIENT = "numCqsOnClient";
+  private static final String CQS_ON_CLIENT = "numCqsOnClient";
-  protected static final String CLIENTS_WITH_CQS = "numClientsWithCqs";
-
+  private static final String CLIENTS_WITH_CQS = "numClientsWithCqs";
-  protected static final String CQ_QUERY_EXECUTION_TIME = "cqQueryExecutionTime";
+  private static final String CQ_QUERY_EXECUTION_TIME = "cqQueryExecutionTime";
-  protected static final String CQ_QUERY_EXECUTION_IN_PROGRESS = "cqQueryExecutionInProgress";
+  private static final String CQ_QUERY_EXECUTION_IN_PROGRESS = "cqQueryExecutionInProgress";
-  protected static final String CQ_QUERY_EXECUTIONS_COMPLETED = "cqQueryExecutionsCompleted";
+  private static final String CQ_QUERY_EXECUTIONS_COMPLETED = "cqQueryExecutionsCompleted";
-  protected static final String UNIQUE_CQ_QUERY = "numUniqueCqQuery";
+  private static final String UNIQUE_CQ_QUERY = "numUniqueCqQuery";
-  /**
+  /*
-
-  public CqServiceVsdStats(StatisticsFactory factory) {
+  CqServiceVsdStats(StatisticsFactory factory) {
-  // /////////////////// Instance Methods /////////////////////
-
-  public long getNumCqsCreated() {
+  long getNumCqsCreated() {
-  public void incCqsCreated() {
+  void incCqsCreated() {
-  public long getNumCqsActive() {
+  long getNumCqsActive() {
-  public void incCqsActive() {
+  void incCqsActive() {
-  public void decCqsActive() {
+  void decCqsActive() {
-  public long getNumCqsStopped() {
+  long getNumCqsStopped() {
-  public void incCqsStopped() {
+  void incCqsStopped() {
-  public void decCqsStopped() {
+  void decCqsStopped() {
-  public long getNumCqsClosed() {
+  long getNumCqsClosed() {
-  public void incCqsClosed() {
+  void incCqsClosed() {
-  public long getNumCqsOnClient() {
+  long getNumCqsOnClient() {
-  public void incCqsOnClient() {
+  void incCqsOnClient() {
-  public void decCqsOnClient() {
+  void decCqsOnClient() {
-  public void incClientsWithCqs() {
+  void incClientsWithCqs() {
-  public void decClientsWithCqs() {
+  void decClientsWithCqs() {
-  public long startCqQueryExecution() {
+  long startCqQueryExecution() {
-  public void endCqQueryExecution(long start) {
+  void endCqQueryExecution(long start) {
-  public void incUniqueCqQuery() {
+  void incUniqueCqQuery() {
-  public void decUniqueCqQuery() {
+  void decUniqueCqQuery() {
-   * 
-   * @param regionName
-  public long numCqsOnRegion(String regionName) {
-    GemFireCacheImpl cache = GemFireCacheImpl.getInstance();
+  public long numCqsOnRegion(final InternalCache cache, String regionName) {

MOV26 UPD40 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 INS44 INS83 INS43 INS42 INS42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL65 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60