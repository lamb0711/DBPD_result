GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.i18n.StringId;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-              LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                  .toLocalizedString(),
+              "The DiskRegion has been closed or destroyed",
-              LocalizedStrings.DiskRegion_CLEAR_OPERATION_ABORTING_THE_ONGOING_ENTRY_0_OPERATION_FOR_ENTRY_WITH_DISKID_1
-                  .toLocalizedString(
-                      new Object[] {((doingCreate) ? "creation" : "modification"), id}));
+              String.format(
+                  "Clear operation aborting the ongoing Entry %s operation for Entry with DiskId, %s",
+
+                  new Object[] {((doingCreate) ? "creation" : "modification"), id}));
-            LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                .toLocalizedString(),
+            "The DiskRegion has been closed or destroyed",
-                LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                    .toLocalizedString(),
+                "The DiskRegion has been closed or destroyed",
-          LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-              .toLocalizedString(),
+          "The DiskRegion has been closed or destroyed",
-          LocalizedStrings.DiskRegion_DATA_FOR_DISKENTRY_HAVING_DISKID_AS_0_COULD_NOT_BE_OBTAINED_FROM_DISK_A_CLEAR_OPERATION_MAY_HAVE_DELETED_THE_OPLOGS
-              .toLocalizedString(id),
+          String.format(
+              "Data  for DiskEntry having DiskId as  %s  could not be obtained from Disk. A clear operation may have deleted the oplogs",
+              id),
-            LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                .toLocalizedString(),
+            "The DiskRegion has been closed or destroyed",
-            LocalizedStrings.DiskRegion_ENTRY_HAS_BEEN_CLEARED_AND_IS_NOT_PRESENT_ON_DISK
-                .toLocalizedString(),
+            "Entry has been cleared and is not present on disk",
-            LocalizedStrings.DiskRegion_ENTRY_HAS_BEEN_CLEARED_AND_IS_NOT_PRESENT_ON_DISK
-                .toLocalizedString(),
+            "Entry has been cleared and is not present on disk",
-            LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                .toLocalizedString(),
+            "The DiskRegion has been closed or destroyed",
-            LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                .toLocalizedString(),
+            "The DiskRegion has been closed or destroyed",
-            LocalizedStrings.DiskRegion_CLEAR_OPERATION_ABORTING_THE_ONGOING_ENTRY_DESTRUCTION_OPERATION_FOR_ENTRY_WITH_DISKID_0
-                .toLocalizedString(entry.getDiskId()));
+            String.format(
+                "Clear operation aborting the ongoing Entry destruction operation for Entry with DiskId, %s",
+                entry.getDiskId()));
-        LocalizedStrings.DiskRegion_ASYNCHRONOUS_DISK_WRITER_0.toLocalizedString(getName());
+        String.format("Asynchronous disk writer for region %s", getName());
-        logger.fatal(LocalizedMessage.create(LocalizedStrings.DiskStoreImpl_FATAL_ERROR_ON_FLUSH),
+        logger.fatal("Fatal error from asynchronous flusher thread",
-            LocalizedStrings.DiskStoreImpl_FATAL_ERROR_ON_FLUSH.toLocalizedString(), t, diskStore);
+            "Fatal error from asynchronous flusher thread", t, diskStore);
-          throw new IOException(LocalizedStrings.Oplog_THE_FILE_0_IS_BEING_USED_BY_ANOTHER_PROCESS
-              .toLocalizedString(f));
+          throw new IOException(String.format("The file %s is being used by another process.",
+              f));
-            LocalizedStrings.Oplog_COULD_NOT_LOCK_0.toLocalizedString(f.getPath()), ex, this);
+            String.format(
+                "Could not lock %s. Other JVMs might have created diskstore with same name using the same directory.",
+                f.getPath()),
+            ex, this);
-                + LocalizedStrings.DiskStoreAlreadyInVersion_0
-                    .toLocalizedString(getRecoveredGFVersionName()));
+                + String.format("This disk store is already at version %s.",
+                    getRecoveredGFVersionName()));
-                + LocalizedStrings.DiskStoreStillAtVersion_0
-                    .toLocalizedString(getRecoveredGFVersionName()));
+                + String.format("This disk store is still at version %s.",
+                    getRecoveredGFVersionName()));
-            LocalizedMessage.create(LocalizedStrings.DiskStoreImpl_RecoveredDiskStore_0_With_Id_1,
-                new Object[] {getName(), getDiskStoreID()}));
+            "Recovered disk store {} with unique id {}",
+            getName(), getDiskStoreID());
-            LocalizedMessage.create(LocalizedStrings.DiskStoreImpl_CreatedDiskStore_0_With_Id_1,
-                new Object[] {getName(), getDiskStoreID()}));
+            "Created disk store {} with unique id {}",
+            getName(), getDiskStoreID());
-                  LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                      .toLocalizedString(),
+                  "The DiskRegion has been closed or destroyed",
-          logger.warn(
-              LocalizedMessage.create(
-                  LocalizedStrings.DiskRegion_COMPLEXDISKREGION_CLOSE_EXCEPTION_IN_STOPPING_COMPACTOR),
-              e);
+          logger.warn("DiskRegion::close: Exception in stopping compactor", e);
-      logger.info(LocalizedMessage.create(LocalizedStrings.DiskRegion_COMPACTION_SUMMARY,
-          new Object[] {totalCount, ((endTime - start) / 1000000)}));
+      logger.info("compaction did {} creates and updates in {} ms",
+          totalCount, ((endTime - start) / 1000000));
-          logger.info(LocalizedMessage.create(LocalizedStrings.DiskRegion_COMPACTION_OPLOGIDS,
-              new Object[] {getName(), ids}));
+          logger.info("OplogCompactor for {} compaction oplog id(s): {}",
+              getName(), ids);
-            logger.warn(LocalizedMessage.create(LocalizedStrings.DiskRegion_COMPACTION_FAILURE,
-                new Object[] {getName(), ids}));
+            logger.warn("OplogCompactor for {} did NOT complete compaction of oplog id(s): {}",
+                getName(), ids);
-                logger.warn(LocalizedMessage.create(
-                    LocalizedStrings.DisKRegion_OUTSTANDING_OPS_REMAIN_AFTER_0_SECONDS_FOR_DISK_REGION_1,
-                    new Object[] {loopCount, dr.getName()}));
+                logger.warn("Outstanding ops remain after {} seconds for disk region {}",
+                    loopCount, dr.getName());
-                logger.info(LocalizedMessage.create(
-                    LocalizedStrings.DisKRegion_OUTSTANDING_OPS_CLEARED_FOR_DISK_REGION_0,
-                    dr.getName()));
+                logger.info("Outstanding ops cleared for disk region {}",
+                    dr.getName());
-    final StringId sid =
-        LocalizedStrings.LocalRegion_A_DISKACCESSEXCEPTION_HAS_OCCURRED_WHILE_WRITING_TO_THE_DISK_FOR_DISKSTORE_0_THE_CACHE_WILL_BE_CLOSED;
-    logger.error(LocalizedMessage.create(sid, DiskStoreImpl.this.getName()), dae);
+    final String message =
+        "A DiskAccessException has occurred while writing to the disk for disk store {}. The cache will be closed.";
+    logger.error(message, DiskStoreImpl.this.getName(), dae);
-        getCache().close(sid.toLocalizedString(DiskStoreImpl.this.getName(), dae), dae);
+        getCache().close(String.format(message, DiskStoreImpl.this.getName(), dae), dae);
-
-        logger.error(LocalizedMessage.create(
-            LocalizedStrings.LocalRegion_AN_EXCEPTION_OCCURRED_WHILE_CLOSING_THE_CACHE), e);
+        logger.error("An Exception occurred while closing the cache.", e);
-            LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                .toLocalizedString(),
+            "The DiskRegion has been closed or destroyed",
-            LocalizedStrings.DiskRegion_THE_DISKREGION_HAS_BEEN_CLOSED_OR_DESTROYED
-                .toLocalizedString(),
+            "The DiskRegion has been closed or destroyed",

MOV21 MOV25 MOV60 UPD43 MOV32 MOV32 UPD42 UPD42 INS45 UPD42 UPD42 INS42 MOV32 MOV27 UPD42 INS42 INS45 MOV32 MOV8 UPD42 UPD42 INS45 INS42 MOV36 INS45 INS53 MOV53 UPD42 INS42 INS45 INS14 INS45 INS45 MOV32 INS45 MOV32 INS45 INS45 INS45 INS45 MOV27 MOV27 INS45 MOV32 MOV32 INS45 MOV32 MOV32 MOV43 INS45 MOV32 INS45 UPD42 INS42 INS45 INS45 INS45 MOV32 INS42 MOV21 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 INS45 MOV32 INS42 MOV32 UPD42 MOV42 INS45 UPD42 INS42 UPD42 UPD42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 MOV32 INS45 INS42 MOV32 UPD42 UPD42 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3 DEL32 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL14 DEL53