GEODE-17: WIP adding JMX security

+import java.util.HashSet;
+import static com.gemstone.gemfire.management.internal.security.ResourceConstants.*;
+/**
+ * This class intercepts all MBean requests for GemFire MBeans and passed it to
+ * ManagementInterceptor for authorization
+ *
+ *
+ * @author tushark
+ * @since 9.0
+ *
+ */
-  private void doAuthorization(ObjectName name, String methodName, Object[] methodParams){
-    interceptor.authorize(name,methodName, methodParams);
+  private ResourceOperationContext doAuthorization(ObjectName name, String methodName, Object[] methodParams){
+    return interceptor.authorize(name,methodName, methodParams);
+  }
+
+  private void doAuthorizationPost(ObjectName name, String methodName, ResourceOperationContext context, Object result){
+    interceptor.postAuthorize(name,methodName,context,result);
-    doAuthorization(name, "createMBean", new Object[]{name});
-    return mbs.createMBean(className, name);
+    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name});
+    ObjectInstance result = mbs.createMBean(className, name);
+    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
+    return result;
-    doAuthorization(name, "createMBean", new Object[]{name});
-    return mbs.createMBean(className, name, loaderName);
+    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name});
+    ObjectInstance result = mbs.createMBean(className, name, loaderName);
+    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
+    return result;
-    doAuthorization(name, "createMBean", new Object[]{name, params});
-    return mbs.createMBean(className,name,params,signature);
+    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name, params});
+    ObjectInstance result = mbs.createMBean(className,name,params,signature);
+    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
+    return result;
-    doAuthorization(name, "createMBean", new Object[]{name});
-    return mbs.createMBean(className, name, loaderName, params, signature);
+    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name});
+    ObjectInstance result = mbs.createMBean(className, name, loaderName, params, signature);
+    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
+    return result;
-    doAuthorization(name, "registerMBean", new Object[]{name});
-    return mbs.registerMBean(object, name);
+    ResourceOperationContext ctx = doAuthorization(name, REGISTER_MBEAN, new Object[]{name});
+    ObjectInstance result = mbs.registerMBean(object, name);
+    doAuthorizationPost(name, REGISTER_MBEAN, ctx, result);
+    return result;
-    doAuthorization(name, "registerMBean", new Object[]{});
+    ResourceOperationContext ctx = doAuthorization(name, UNREGISTER_MBEAN, new Object[]{});
+    doAuthorizationPost(name, UNREGISTER_MBEAN, ctx, null);
-    return mbs.queryMBeans(name, query);
+    return filterAccessControlMBeanInstance(mbs.queryMBeans(name, query));
+  }
+
+  private Set<ObjectInstance> filterAccessControlMBeanInstance(Set<ObjectInstance> queryMBeans) {
+    Set<ObjectInstance> set = new HashSet<ObjectInstance>();
+    for(ObjectInstance oi : queryMBeans) {
+      if(!oi.getObjectName().equals(interceptor.getAccessControlMBeanON())){
+        set.add(oi);
+      }
+    }
+    return set;
-    return mbs.queryNames(name, query);
+    return filterAccessControlMBean(mbs.queryNames(name, query));
+  }
+
+  private Set<ObjectName> filterAccessControlMBean(Set<ObjectName> queryNames) {
+    Set<ObjectName> set = new HashSet<ObjectName>();
+    for(ObjectName oi : queryNames) {
+      if(!oi.equals(interceptor.getAccessControlMBeanON())){
+        set.add(oi);
+      }
+    }
+    return set;
-    doAuthorization(name, "getAttribute",  new Object[]{attribute});
-    return mbs.getAttribute(name, attribute);
+    ResourceOperationContext ctx = doAuthorization(name, GET_ATTRIBUTE,  new Object[]{attribute});
+    Object result = mbs.getAttribute(name, attribute);
+    doAuthorizationPost(name, GET_ATTRIBUTE, ctx, result);
+    return result;
-    doAuthorization(name, "getAttributes", new Object[]{attributes});
-    return mbs.getAttributes(name, attributes);
+    ResourceOperationContext ctx = doAuthorization(name, GET_ATTRIBUTES, new Object[]{attributes});
+    AttributeList result = mbs.getAttributes(name, attributes);
+    doAuthorizationPost(name,GET_ATTRIBUTES, ctx, result);
+    return result;
-    doAuthorization(name, "setAttribute", new Object[]{attribute});
+    ResourceOperationContext ctx = doAuthorization(name, SET_ATTRIBUTE, new Object[]{attribute});
+    doAuthorizationPost(name, SET_ATTRIBUTE, ctx, null);
-    doAuthorization(name, "setAttributes", new Object[]{attributes});
-    return mbs.setAttributes(name, attributes);
+    ResourceOperationContext ctx = doAuthorization(name, SET_ATTRIBUTES, new Object[]{attributes});
+    AttributeList result = mbs.setAttributes(name, attributes);
+    doAuthorizationPost(name, SET_ATTRIBUTES, ctx, result);
+    return result;
-    doAuthorization(name, operationName, new Object[]{params, signature});
-    return mbs.invoke(name, operationName, params, signature);
+    ResourceOperationContext ctx = doAuthorization(name, operationName, new Object[]{params, signature});
+    Object result = mbs.invoke(name, operationName, params, signature);
+    doAuthorizationPost(name, operationName, ctx, result);
+    return result;
+  @SuppressWarnings("deprecation")

INS26 INS26 INS40 INS40 INS29 INS31 INS31 INS31 INS65 INS65 INS65 INS43 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS43 INS43 INS43 MOV21 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 MOV21 INS79 INS66 INS66 INS66 INS66 INS42 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS42 INS60 INS60 INS42 INS60 INS60 INS21 INS60 INS60 INS42 INS60 INS60 INS21 INS60 INS60 INS60 INS43 INS43 INS74 INS42 INS60 INS70 INS41 INS43 INS43 INS74 INS42 INS60 INS70 INS41 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS42 INS45 MOV32 INS42 INS42 INS42 INS42 INS32 INS43 INS59 MOV43 INS59 INS32 INS42 INS43 INS59 MOV43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS59 MOV43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS43 INS43 INS74 INS59 INS44 INS42 INS8 INS42 INS32 INS42 INS42 INS43 INS43 INS74 INS59 INS44 INS42 INS8 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS33 INS42 MOV32 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS25 INS42 MOV32 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS25 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 INS42 INS42 INS33 INS42 INS42 MOV32 INS42 INS42 MOV32 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS3 MOV42 MOV42 INS42 MOV3 INS42 MOV42 MOV42 INS42 MOV3 INS42 INS42 INS42 INS42 INS74 INS42 INS38 INS8 INS42 INS42 INS74 INS42 INS38 INS8 INS42 INS42 INS42 MOV3 INS42 INS42 INS42 MOV3 INS42 INS42 INS5 INS4 MOV5 MOV4 INS43 INS43 INS32 INS21 INS43 INS43 INS32 INS21 INS43 INS85 INS42 MOV85 MOV42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL39 DEL21 DEL45 DEL32 DEL21 DEL45 DEL45 DEL32 DEL21 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45