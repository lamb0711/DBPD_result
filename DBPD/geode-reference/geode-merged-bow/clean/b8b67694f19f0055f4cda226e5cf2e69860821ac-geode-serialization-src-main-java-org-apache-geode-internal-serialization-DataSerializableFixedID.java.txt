Merge branch 'develop' into feature/GEODE-7049

-package org.apache.geode.internal;
+package org.apache.geode.internal.serialization;
-import org.apache.geode.DataSerializer;
-import org.apache.geode.Instantiator;
-
- * Note that this class is for internal use only. Customer classes that want to do something
- * similar should implement a subclass of {@link DataSerializer} or {@link Instantiator}.
+ * Note that this class is for internal use only.
- * <li>Define a private static method in {@link DSFIDFactory} that returns an instance of the class
- * from step 2 usually be calling its zero-arg constructor and then calling fromData(in). See the
- * end of {@link DSFIDFactory} for examples.
- * <li>Add a case statement in {@link DSFIDFactory#create} for the constant from step 1 that calls
- * the method from step 3.
+ * <li>Add registration of your class to DSFIDFactory's registration method.
- * <code>DataSerializer</code>. Make sure you follow the javadocs for these methods to add support
+ * DataSerializable class. Make sure you follow the javadocs for these methods to add support
- * @see DataSerializer
- *
- * @since GemFire 5.7
-   * add a new toDataPre_GFE_X_X_X_X() method and add an entry for the current {@link Version} in
-   * the getSerializationVersions array of the implementing class. e.g. if msg format changed in
-   * version 80, create toDataPre_GFE_8_0_0_0, add Version.GFE_80 to the getSerializationVersions
-   * array and copy previous toData contents to this newly created toDataPre_GFE_X_X_X_X() method.
+   * add a new toDataPre_GFE_X_X_X_X() method and add an entry for the current {@link
+   * Version} in the getSerializationVersions array of the
+   * implementing class. e.g. if msg format changed in version 80, create toDataPre_GFE_8_0_0_0, add
+   * Version.GFE_80 to the getSerializationVersions array and copy previous toData contents to this
+   * newly created toDataPre_GFE_X_X_X_X() method.
-  void toData(DataOutput out) throws IOException;
+  void toData(DataOutput out, SerializationContext context) throws IOException;
-   * add a new fromDataPre_GFE_X_X_X_X() method and add an entry for the current {@link Version} in
-   * the getSerializationVersions array of the implementing class. e.g. if msg format changed in
-   * version 80, create fromDataPre_GFE_8_0_0_0, add Version.GFE_80 to the getSerializationVersions
-   * array and copy previous fromData contents to this newly created fromDataPre_GFE_X_X_X_X()
-   * method.
+   * add a new fromDataPre_GFE_X_X_X_X() method and add an entry for the current {@link
+   * Version} in the getSerializationVersions array of the
+   * implementing class. e.g. if msg format changed in version 80, create fromDataPre_GFE_8_0_0_0,
+   * add Version.GFE_80 to the getSerializationVersions array and copy previous fromData contents to
+   * this newly created fromDataPre_GFE_X_X_X_X() method.
-  void fromData(DataInput in) throws IOException, ClassNotFoundException;
+  void fromData(DataInput in, DeserializationContext context)
+      throws IOException, ClassNotFoundException;

UPD40 INS44 INS44 UPD66 UPD66 UPD66 INS43 INS42 INS43 INS42 MOV65 UPD66 UPD66 UPD66 UPD66 INS42 MOV65 UPD66 UPD66 UPD66 UPD66 INS42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL42 DEL65 DEL66 DEL66 DEL42 DEL42 DEL67 DEL65 DEL66 DEL66 DEL42 DEL65 DEL66 DEL65 DEL66