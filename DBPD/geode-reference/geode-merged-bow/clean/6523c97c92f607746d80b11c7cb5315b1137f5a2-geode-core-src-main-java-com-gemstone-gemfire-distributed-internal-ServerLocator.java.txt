GEODE-1393 locator returns incorrect server information when starting up

When a locator auto-reconnects its ServerLocator needs to initialize its
ControllerAdvisor so that it has server information to give to clients.
The ServerLocator was creating a new ControllerAdvisor but didn't ask it
to perform a handshake to fill in its profiles.

ReconnectDUnitTest had an existing testReconnectWithQuorum test that
wasn't doing what it was supposed to.  I've removed the TODO from that
test and modified it to force-disconnect the tests Locator.  The
locator must restart its TcpServer component before it can start
a DistributedSystem, so this exercises the path in
InternalLocator.attemptReconnect() that boots the TcpServer prior to
connecting the DistributedSystem.  After the DistributedSystem
finishes reconnecting the ServerLocator's distribution advisor
should have been initialized by performing the handshake.

-import java.util.Iterator;
+import com.gemstone.gemfire.internal.DataSerializableFixedID;
-import com.gemstone.gemfire.cache.client.internal.locator.LocatorStatusRequest;
-    Object response;
+    if ( ! (request instanceof ServerLocationRequest) ) {
+      throw new InternalGemFireException("Expected ServerLocationRequest, got " + request.getClass());
+    }
-    if (request instanceof ServerLocationRequest) {
-      if (request instanceof LocatorStatusRequest) {
+    Object response;
+    int id = ((DataSerializableFixedID)request).getDSFID();
+    switch (id) {
+      case DataSerializableFixedID.LOCATOR_STATUS_REQUEST:
-      }
-      else if (request instanceof LocatorListRequest) {
+        break;
+      case DataSerializableFixedID.LOCATOR_LIST_REQUEST:
-      }
-      else if (request instanceof ClientReplacementRequest) {
+        break;
+      case DataSerializableFixedID.CLIENT_REPLACEMENT_REQUEST:
-      }
-      else if (request instanceof GetAllServersRequest) {
+        break;
+      case DataSerializableFixedID.GET_ALL_SERVERS_REQUEST:
-      }
-      else if (request instanceof ClientConnectionRequest) {
+        break;
+      case DataSerializableFixedID.CLIENT_CONNECTION_REQUEST:
-      }
-      else if (request instanceof QueueConnectionRequest) {
+        break;
+      case DataSerializableFixedID.QUEUE_CONNECTION_REQUEST:
-      }
-      else {
+        break;
+      default:
-      }
-    }
-    else {
-      throw new InternalGemFireException("Expected ServerLocationRequest, got " + request.getClass());
+      if (ds.isConnected()) {
+        this.advisor.handshake();  // GEODE-1393: need to get server information during restart
+      }

MOV26 UPD40 MOV8 MOV25 MOV25 INS25 MOV60 INS60 INS50 MOV25 MOV41 INS38 MOV8 INS39 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV53 INS36 INS42 INS32 INS40 INS40 INS40 INS40 INS40 INS40 INS25 MOV62 INS36 INS42 INS32 INS8 INS11 INS42 INS42 INS21 UPD42 MOV42 INS43 INS42 INS32 UPD42 MOV42 INS22 INS42 INS52 INS42 DEL40 DEL26 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL43 DEL62 DEL8 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL43 DEL62 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL8