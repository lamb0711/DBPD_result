GEODE-6176: Make FunctionService testable with internal delegates

Introduce new internal FunctionExecutionService API interfaces:
* FunctionExecutionService
* InternalFunctionExecutionService

Implement interfaces with:
* InternalFunctionExecutionServiceImpl

Collapse FunctionServiceManager into InternalFunctionExecutionServiceImpl

Change the two static API classes to delegate to an instance of
InternalFunctionExecutionServiceImpl:
* FunctionService (User API) -- only has private internal changes
* InternalFunctionService -- now extends FunctionService

Geode classes that use the static API classes directly can now be
changed to depend on one of the two interfaces using constructor
injection to facilitate unit testing without PowerMock.

-import org.apache.geode.cache.execute.internal.FunctionServiceManager;
-import org.apache.geode.distributed.DistributedSystemDisconnectedException;
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.internal.cache.execute.FunctionExecutionService;
+import org.apache.geode.internal.cache.execute.InternalFunctionExecutionServiceImpl;
-  private static final FunctionServiceManager functionSvcMgr = new FunctionServiceManager();
-  FunctionService() {}
+  private static final FunctionService INSTANCE =
+      new FunctionService(new InternalFunctionExecutionServiceImpl());
+
+  private final FunctionExecutionService functionExecutionService;
+
+  /**
+   * Protected visibility to allow InternalFunctionService to extend FunctionService.
+   */
+  protected FunctionService(FunctionExecutionService functionExecutionService) {
+    this.functionExecutionService = functionExecutionService;
+  }
-    return functionSvcMgr.onRegion(region);
+    return getFunctionExecutionService().onRegion(region);
-    return functionSvcMgr.onServer(pool);
+    return getFunctionExecutionService().onServer(pool);
-    return functionSvcMgr.onServers(pool);
+    return getFunctionExecutionService().onServers(pool);
-    return functionSvcMgr.onServer(regionService);
+    return getFunctionExecutionService().onServer(regionService);
-    return functionSvcMgr.onServers(regionService);
+    return getFunctionExecutionService().onServers(regionService);
-   *
-    return functionSvcMgr.onMember(getDistributedSystem(), distributedMember);
+    return getFunctionExecutionService().onMember(distributedMember);
-    return functionSvcMgr.onMembers(getDistributedSystem(), groups);
+    return getFunctionExecutionService().onMembers(groups);
-    return functionSvcMgr.onMembers(getDistributedSystem(), distributedMembers);
+    return getFunctionExecutionService().onMembers(distributedMembers);
-    return functionSvcMgr.onMember(getDistributedSystem(), groups);
+    return getFunctionExecutionService().onMember(groups);
-    return functionSvcMgr.getFunction(functionId);
+    return getFunctionExecutionService().getFunction(functionId);
-    functionSvcMgr.registerFunction(function);
+    getFunctionExecutionService().registerFunction(function);
-    functionSvcMgr.unregisterFunction(functionId);
+    getFunctionExecutionService().unregisterFunction(functionId);
-    return functionSvcMgr.isRegistered(functionId);
+    return getFunctionExecutionService().isRegistered(functionId);
-
-    return functionSvcMgr.getRegisteredFunctions();
+    return getFunctionExecutionService().getRegisteredFunctions();
-  private static DistributedSystem getDistributedSystem() {
-    DistributedSystem system = InternalDistributedSystem.getConnectedInstance();
-    if (system == null) {
-      throw new DistributedSystemDisconnectedException(
-          "This connection to a distributed system has been disconnected.");
-    }
-    return system;
+  private static FunctionExecutionService getFunctionExecutionService() {
+    return INSTANCE.functionExecutionService;

MOV26 UPD40 UPD40 INS23 INS31 INS31 UPD43 INS83 INS83 INS43 INS59 INS29 INS83 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS8 UPD42 UPD42 UPD42 MOV42 INS42 INS65 INS43 INS42 INS21 UPD42 MOV42 INS41 UPD43 INS14 INS66 UPD42 MOV42 INS7 INS40 UPD42 INS43 INS22 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL8 DEL31 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL83 DEL83 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31