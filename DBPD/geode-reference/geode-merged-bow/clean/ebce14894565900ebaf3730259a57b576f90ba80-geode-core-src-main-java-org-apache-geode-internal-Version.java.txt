GEODE-5027 Bump version to 1.6.0 and add v1.5.0 for testing

* I bumped the version in Version.java to 1.6.0 and added a 1.6 command set
  to CommandInitializer.
* I added v1.5.0 to geode-old-versions for backward compatibility testing.

* I removed junk in Version.java that hasn't been used since the SQLFire/GFX
  days.
* I also removed AcceptorImpl.VERSION which seemed to serve no good purpose.

* I added a unit test to make sure that folks update the CommandInitializer
  table when adding a new Version.  Without this test folks would have to run
  distributedTests to notice any problems with their changes.

* I changed CommandInitializer to not create new maps unless necessary.

* I fixed a test's expectation that the default connection pool exists after starting
  a client cache.  Starting with 1.5 the pool isn't created until it's needed.

This closes #1753

+import java.util.Arrays;
+import java.util.stream.Collectors;
-  /**
-   * Set to non-null if the underlying GemFire version is different from product version
-   */
-  private Version gemfireVersion;
-
-  public static final int HIGHEST_VERSION = 80;
+  public static final int HIGHEST_VERSION = 85;
+
+  private static final byte GEODE_160_ORDINAL = 85;
+
+  public static final Version GEODE_160 =
+      new Version("GEODE", "1.6.0", (byte) 1, (byte) 6, (byte) 0, (byte) 0, GEODE_160_ORDINAL);
+
+  /* NOTE: when adding a new version bump the ordinal by 5. Ordinals can be short ints */
+
-  public static final Version CURRENT = GEODE_150;
+  public static final Version CURRENT = GEODE_160;
-    this.gemfireVersion = null;
-  /**
-   * Creates a new instance of <code>Version</code> with a different underlying GemFire version
-   */
-  private Version(String product, String name, byte major, byte minor, byte release, byte patch,
-      byte ordinal, Version gemfireVersion) {
-    this(product, name, major, minor, release, patch, ordinal);
-    this.gemfireVersion = gemfireVersion;
-  }
-
-   * Fixed number of bytes required for serializing this version when "compressed" flag is false in
-   * {@link #writeOrdinal(DataOutput, boolean)}.
-   */
-  public static int uncompressedSize() {
-    return 3;
-  }
-
-  /**
-   * Fixed number of bytes required for serializing this version when "compressed" flag is true in
-   * {@link #writeOrdinal(DataOutput, boolean)}.
-   */
-  public int compressedSize() {
-    if (ordinal <= Byte.MAX_VALUE) {
-      return 1;
-    } else {
-      return 3;
-    }
-  }
-
-  /**
-  public static void writeOrdinal(ByteBuffer buffer, short ordinal, boolean compressed)
-      throws IOException {
+  public static void writeOrdinal(ByteBuffer buffer, short ordinal, boolean compressed) {
-  public Version getGemFireVersion() {
-    return this.gemfireVersion != null ? this.gemfireVersion : this;
-  }
-
-  public String getProductName() {
-    return this.productName;
-  }
-
+
-    if (this.gemfireVersion == null) {
-      return this.productName + " " + this.name;
-    } else {
-      return this.productName + " " + this.name + '[' + this.gemfireVersion.toString() + ']';
-    }
+    return this.productName + " " + this.name;
+
+  public static Iterable<? extends Version> getAllVersions() {
+    return Arrays.asList(VALUES).stream().filter(x -> x != null && x != TEST_VERSION)
+        .collect(Collectors.toList());
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 MOV43 INS59 MOV8 MOV83 MOV83 INS74 INS42 INS8 UPD34 INS42 INS34 INS42 INS14 UPD42 INS43 INS76 INS41 MOV43 INS45 INS45 INS11 INS11 INS11 INS11 INS42 INS42 MOV43 INS32 INS39 INS34 INS39 INS34 INS39 INS34 INS39 INS34 INS32 INS42 INS32 INS32 INS42 INS86 INS42 INS42 INS32 INS42 INS59 INS27 INS42 INS42 INS42 INS42 INS27 INS27 INS42 MOV33 INS42 INS42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL17 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL39 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL34 DEL41 DEL8 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL39 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL40 DEL27 DEL34 DEL41 DEL8 DEL34 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL83 DEL42 DEL52 DEL42 DEL22 DEL27 DEL52 DEL42 DEL22 DEL52 DEL16 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL52 DEL42 DEL22 DEL33 DEL27 DEL52 DEL42 DEL22 DEL45 DEL52 DEL42 DEL22 DEL13 DEL52 DEL42 DEL22 DEL42 DEL32 DEL13 DEL27 DEL41 DEL8 DEL25 DEL8