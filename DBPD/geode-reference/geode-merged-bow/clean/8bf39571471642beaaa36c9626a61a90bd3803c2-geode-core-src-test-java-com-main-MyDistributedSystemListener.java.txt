Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This is an implementation of DistributedSystemListener. When a
- * addedDistributedSystem is called a Region is created on both sites and
- * GatewaySender and GatewayReciever is started on site 1 and site 2
- * respectively.
+ * This is an implementation of DistributedSystemListener. When a addedDistributedSystem is called a
+ * Region is created on both sites and GatewaySender and GatewayReciever is started on site 1 and
+ * site 2 respectively.
- * When a removedDistributedSystem is called, GatewaySender and GatewayReceiver
- * is stopped on site1 and site2 respectively.
+ * When a removedDistributedSystem is called, GatewaySender and GatewayReceiver is stopped on site1
+ * and site2 respectively.
-  
-  public MyDistributedSystemListener() {
-  }
-  
+
+  public MyDistributedSystemListener() {}
+
-   * Please note that dynamic addition of the sender id to region is not yet available.  
+   * Please note that dynamic addition of the sender id to region is not yet available.
-    
-    //When a site with distributed-system-id = 2 joins, create a region and a gatewaysender with remoteDsId = 2 
+
+    // When a site with distributed-system-id = 2 joins, create a region and a gatewaysender with
+    // remoteDsId = 2
-        GatewaySender serialSender= cache
-            .createGatewaySenderFactory()
-            .setManualStart(true)
-            .setPersistenceEnabled(false)
-            .setDiskStoreName("LN_" + remoteDsId)
-            .create("LN_"+ remoteDsId, remoteDsId);
+        GatewaySender serialSender =
+            cache.createGatewaySenderFactory().setManualStart(true).setPersistenceEnabled(false)
+                .setDiskStoreName("LN_" + remoteDsId).create("LN_" + remoteDsId, remoteDsId);
-        
-        Region region= cache.createRegionFactory()
-                       //.addSerialGatewaySenderId("LN_" + remoteDsId)
-                       .create("MyRegion");
+
+        Region region = cache.createRegionFactory()
+            // .addSerialGatewaySenderId("LN_" + remoteDsId)
+            .create("MyRegion");
-        
+
-        }
-        catch (Exception e) {
+        } catch (Exception e) {
-      }
-      else {
+      } else {
-    }else{ //When a site with distributed-system-id = 1 joins, create a region and a gatewayReceiver with  
+    } else { // When a site with distributed-system-id = 1 joins, create a region and a
+             // gatewayReceiver with
-        System.out.println("Created Region :" +  region.getName());
+        System.out.println("Created Region :" + region.getName());
-        GatewayReceiver receiver= cache.createGatewayReceiverFactory()
-                                 .setStartPort(12345)
-                                 .setManualStart(true)
-                                 .create();
+        GatewayReceiver receiver =
+            cache.createGatewayReceiverFactory().setStartPort(12345).setManualStart(true).create();
-        }
-        catch (IOException e) {
+        } catch (IOException e) {
-    if (remoteDsId == 2) { //When a site with distributed-system-id = -2 joins, stop gatewaysender with remoteDsId = 2 
+    if (remoteDsId == 2) { // When a site with distributed-system-id = -2 joins, stop gatewaysender
+                           // with remoteDsId = 2
-        GatewaySender sender = cache.getGatewaySender("LN_"+2);
+        GatewaySender sender = cache.getGatewaySender("LN_" + 2);
-    }
-    else{ // When a site with distributed-system-id = -1 joins, stop gatewayReceiver
+    } else { // When a site with distributed-system-id = -1 joins, stop gatewayReceiver

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66