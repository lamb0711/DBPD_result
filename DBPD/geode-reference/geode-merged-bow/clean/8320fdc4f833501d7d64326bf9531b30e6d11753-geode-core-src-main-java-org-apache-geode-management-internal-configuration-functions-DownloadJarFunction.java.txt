GEODE-6709: Locators should not start when ClusterConfigurationServicâ€¦ (#3503)

Co-authored-by: Jinmei Liao <jiliao@pivotal.io>


-import java.io.FileNotFoundException;
-import java.rmi.RemoteException;
-import org.apache.geode.cache.execute.FunctionException;
+import org.apache.geode.management.internal.ManagementAgent;
-    InternalLocator locator = (InternalLocator) Locator.getLocator();
+    InternalLocator locator = getLocator();
+        SystemManagementService managementService = getExistingManagementService(context);
+        ManagementAgent managementAgent = managementService.getManagementAgent();
+        if (managementAgent == null) {
+          throw new IllegalStateException(
+              "Failed to download jar because JMX Management agent is not available. Please ensure geode property jmx-manager is set to true.");
+        }
+
+        RemoteInputStreamServer istream = null;
-          RemoteStreamExporter exporter = ((SystemManagementService) SystemManagementService
-              .getExistingManagementService(context.getCache())).getManagementAgent()
-                  .getRemoteStreamExporter();
-          RemoteInputStreamServer istream = null;
-          try {
-            istream =
-                new SimpleRemoteInputStream(new BufferedInputStream(new FileInputStream(jarFile)));
-            result = exporter.export(istream);
-            istream = null;
-          } catch (FileNotFoundException | RemoteException ex) {
-            throw new FunctionException(ex);
-          } finally {
-            // we will only close the stream here if the server fails before
-            // returning an exported stream
-            if (istream != null) {
-              istream.close();
-            }
-          }
+          RemoteStreamExporter exporter = managementAgent.getRemoteStreamExporter();
+          istream =
+              new SimpleRemoteInputStream(new BufferedInputStream(new FileInputStream(jarFile)));
+          result = exporter.export(istream);
+          istream = null;
+
+        } finally {
+          // we will only close the stream here if the server fails before
+          // returning an exported stream
+          if (istream != null) {
+            istream.close();
+          }
+  InternalLocator getLocator() {
+    return (InternalLocator) Locator.getLocator();
+  }
+
+  SystemManagementService getExistingManagementService(FunctionContext<Object[]> context) {
+    return (SystemManagementService) SystemManagementService
+        .getExistingManagementService(context.getCache());
+  }
+

MOV26 UPD40 INS31 INS31 MOV8 MOV43 INS42 INS8 INS43 INS42 INS44 INS8 INS60 MOV60 MOV60 MOV60 MOV60 MOV21 INS41 INS42 INS74 INS42 INS41 INS43 INS59 MOV27 MOV11 INS43 INS5 MOV11 INS42 INS42 INS32 MOV60 INS25 INS42 INS43 INS85 INS42 MOV27 MOV8 INS42 INS60 INS25 INS43 INS59 INS43 INS27 INS8 INS42 INS42 INS32 INS42 UPD42 INS42 INS33 INS53 MOV60 INS60 MOV44 INS42 INS42 UPD42 MOV42 UPD42 INS14 MOV43 INS59 UPD42 MOV42 MOV21 MOV53 INS43 INS45 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 UPD43 MOV43 UPD42 DEL40 DEL26 DEL40 DEL26 DEL36 DEL32 DEL42 DEL43 DEL43 DEL84 DEL42 DEL54 DEL42 DEL59 DEL60 DEL25 DEL8