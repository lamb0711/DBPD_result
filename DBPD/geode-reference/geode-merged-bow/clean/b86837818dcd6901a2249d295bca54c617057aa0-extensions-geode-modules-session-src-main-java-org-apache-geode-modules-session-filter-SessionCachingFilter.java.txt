GEODE-6875: Remove unused & deprecated API usage (#3813)

- Fixed warnings.
- Replaced deprecated API in Http Session.
- Replaced usage of internal API in Http Session.
- Removed unused classes and methods in Http Session.
-    /**
-     * Need to save this in case we need the original {@code RequestDispatcher}
-     */
-    private HttpServletRequest originalRequest;
-
-    public RequestWrapper(SessionManager manager, HttpServletRequest request,
+    RequestWrapper(SessionManager manager, HttpServletRequest request,
-      this.originalRequest = request;
-    // Non-API methods
-
-    void setOuterWrapper(HttpServletRequest outer) {
-      this.outerRequest = outer;
-    }
-
-    //////////////////////////////////////////////////////////////
-    public ResponseWrapper(HttpServletResponse response) throws IOException {
+    ResponseWrapper(HttpServletResponse response) {
-    public HttpServletResponse getOriginalResponse() {
-      return originalResponse;
-    }
-
-    /**
-     * Early out if this isn't the right kind of request. We might see a RequestWrapper instance
-     * during a forward or include request.
-     */
+    // Early out if this isn't the right kind of request. We might see a RequestWrapper instance
+    // during a forward or include request.
-    /**
-     * Commit any updates. What actually happens at that point is dependent on the type of
-     * attributes defined for use by the sessions.
-     */
+    // Commit any updates. What actually happens at that point is dependent on the type of
+    // attributes defined for use by the sessions.
-   * Return the filter configuration object for this filter.
-   */
-  public FilterConfig getFilterConfig() {
-    return (this.filterConfig);
-  }
-
-  /**
-   * Set the filter configuration object for this filter.
-   *
-   * @param filterConfig The filter configuration object
-   */
-  public void setFilterConfig(FilterConfig filterConfig) {
-    this.filterConfig = filterConfig;
-  }
-
-  /**
-      /**
-       * Allow override for testing purposes
-       */
+      // Allow override for testing purposes
+        // Ignore.
-    StringBuilder sb = new StringBuilder("SessionCachingFilter(");
-    sb.append(filterConfig);
-    sb.append(")");
-    return (sb.toString());
+    return ("SessionCachingFilter(" + filterConfig + ")");
-
-      } catch (Exception ex) {
+      } catch (Exception ignored) {
-      } catch (Exception ex) {
+      } catch (Exception ignored) {
-  public static String getStackTrace(Throwable t) {
+  private static String getStackTrace(Throwable t) {
-    } catch (Exception ex) {
+    } catch (Exception ignored) {
+

UPD83 INS41 INS36 MOV12 INS27 INS45 INS42 INS45 INS12 UPD42 INS44 INS8 MOV43 INS42 UPD42 DEL66 DEL66 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL36 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL36 DEL41 DEL42 DEL44 DEL8 DEL12