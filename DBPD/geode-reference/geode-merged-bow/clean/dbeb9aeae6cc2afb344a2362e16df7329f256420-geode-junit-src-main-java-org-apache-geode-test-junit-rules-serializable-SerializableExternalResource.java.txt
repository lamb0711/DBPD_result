Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+import java.io.Serializable;
+
+import org.junit.runner.Description;
+import org.junit.runners.model.Statement;
-public abstract class SerializableExternalResource extends ExternalResource implements SerializableTestRule {
+public abstract class SerializableExternalResource extends ExternalResource
+    implements SerializableTestRule {
+
+  public Statement apply(Statement base, Description description) {
+    return statement(base);
+  }
+
+  private Statement statement(final Statement base) {
+    return new SerializableStatement() {
+      @Override
+      public void evaluate() throws Throwable {
+        before();
+        try {
+          base.evaluate();
+        } finally {
+          after();
+        }
+      }
+    };
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS83 INS43 INS42 INS41 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS43 INS1 INS42 INS31 INS78 INS83 INS39 INS42 INS43 INS8 INS42 INS42 INS21 INS54 INS32 INS8 INS8 INS42 INS21 INS21 INS32 INS32 INS42 INS42 INS42