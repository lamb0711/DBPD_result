Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An extension to {@link DataOutput}, {@link DataInput} used internally in
- * product to indicate that the input/output stream is attached to a GemFire
- * peer having a different version.
+ * An extension to {@link DataOutput}, {@link DataInput} used internally in product to indicate that
+ * the input/output stream is attached to a GemFire peer having a different version.
- * {@link DataSerializable} and change serialization format must check this on
- * DataInput/DataOutput (see
- * {@link InternalDataSerializer#getVersionForDataStream} methods) and deal with
- * serialization with previous {@link Version}s appropriately.
+ * {@link DataSerializable} and change serialization format must check this on DataInput/DataOutput
+ * (see {@link InternalDataSerializer#getVersionForDataStream} methods) and deal with serialization
+ * with previous {@link Version}s appropriately.
-   * If the remote peer to which this input/output is connected has a lower
-   * version that this member, then this returns the {@link Version} of the peer
-   * else null. If the peer has a higher {@link Version}, then this member
-   * cannot do any adjustment to serialization and its the remote peer's
-   * responsibility to adjust the serialization/deserialization according to
-   * this peer.
+   * If the remote peer to which this input/output is connected has a lower version that this
+   * member, then this returns the {@link Version} of the peer else null. If the peer has a higher
+   * {@link Version}, then this member cannot do any adjustment to serialization and its the remote
+   * peer's responsibility to adjust the serialization/deserialization according to this peer.

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66