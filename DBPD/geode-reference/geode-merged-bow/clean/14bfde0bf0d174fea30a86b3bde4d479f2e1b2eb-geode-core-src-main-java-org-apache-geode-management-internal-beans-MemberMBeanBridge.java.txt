Merge branch 'release/1.8.0'

- * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * "License")); you may not use this file except in compliance with the License. You may obtain a
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingThread;
-import org.apache.geode.management.internal.ManagementStrings;
-        new MBeanStatsMonitor(ManagementStrings.MEMBER_CACHE_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("MemberMXBeanMonitor");
-    this.gcMonitor = new GCStatsMonitor(ManagementStrings.GC_STATS_MONITOR.toLocalizedString());
+    this.gcMonitor = new GCStatsMonitor("GCStatsMonitor");
-        new VMStatsMonitor(ManagementStrings.VM_STATS_MONITOR.toLocalizedString());
+        new VMStatsMonitor("VMStatsMonitor");
-        new MBeanStatsMonitor(ManagementStrings.SYSTEM_STATS_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("SystemStatsManager");
-        new MBeanStatsMonitor(ManagementStrings.MEMBER_CACHE_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("MemberMXBeanMonitor");
-    this.gcMonitor = new GCStatsMonitor(ManagementStrings.GC_STATS_MONITOR.toLocalizedString());
+    this.gcMonitor = new GCStatsMonitor("GCStatsMonitor");
-        new VMStatsMonitor(ManagementStrings.VM_STATS_MONITOR.toLocalizedString());
+        new VMStatsMonitor("VMStatsMonitor");
-        new MBeanStatsMonitor(ManagementStrings.SYSTEM_STATS_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("SystemStatsManager");
-              LocalizedStrings.TailLogResponse_NO_LOG_FILE_WAS_SPECIFIED_IN_THE_CONFIGURATION_MESSAGES_WILL_BE_DIRECTED_TO_STDOUT
-                  .toLocalizedString();
+              "No log file was specified in the configuration, messages will be directed to stdout.";
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.TailLogResponse_ERROR_OCCURRED_WHILE_READING_SYSTEM_LOG__0, e));
+      logger.warn("Error occurred while reading system log:", e);
-      return LocalizedStrings.SystemMemberImpl_NO_LOG_FILE_CONFIGURED_LOG_MESSAGES_WILL_BE_DIRECTED_TO_STDOUT
-          .toLocalizedString();
+      return "No log file configured, log messages will be directed to stdout.";
-            .append(LocalizedStrings.SystemMemberImpl_TAIL_OF_CHILD_LOG.toLocalizedString())
+            .append("-------------------- tail of child log --------------------")
-      Thread t = new Thread(new Runnable() {
-        public void run() {
-          try {
-            // Allow the Function call to exit
-            Thread.sleep(1000);
-          } catch (InterruptedException ignore) {
-          }
-          ConnectionTable.threadWantsSharedResources();
-          if (ids.isConnected()) {
-            ids.disconnect();
-          }
+      Thread t = new LoggingThread("Shutdown member", false, () -> {
+        try {
+          // Allow the Function call to exit
+          Thread.sleep(1000);
+        } catch (InterruptedException ignore) {
+        }
+        ConnectionTable.threadWantsSharedResources();
+        if (ids.isConnected()) {
+          ids.disconnect();
-      t.setDaemon(false);

UPD40 MOV31 MOV29 UPD42 INS8 MOV60 INS25 MOV32 INS8 INS60 MOV21 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 MOV43 INS59 INS42 INS14 INS45 MOV42 INS43 INS45 INS9 INS86 INS42 MOV8 INS45 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL1 DEL14 DEL14 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31