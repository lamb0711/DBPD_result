GEODE-7600-4: Further cleanup (#4642)

* GEODE-7600-4: Further cleanup
- Cleaning the teardown approach
- Change to wait for event history to be correct.
- Getting rid of a timing issue
- Getting rid of a debug change.

-import java.util.Iterator;
-  protected EnumListenerEvent _operation;
+  EnumListenerEvent _operation;
-  protected byte _valueIsObject;
+  private byte _valueIsObject;
-  protected Object _callbackArgument;
+  private Object _callbackArgument;
-  protected ClientProxyMembershipID _membershipId;
+  ClientProxyMembershipID _membershipId;
-  protected EventID _eventIdentifier;
+  EventID _eventIdentifier;
-  public boolean isInvalidateRegion() {
+  private boolean isInvalidateRegion() {
-  public boolean isClientCompatible() {
-    return false;
-  }
-
-    Message message = null;
-    boolean conflation = false;
+    Message message;
+    boolean conflation;
-      /**
+      /*
-    Message message = null;
+    Message message;
-        message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
+        message.addObjPart(isClientInterested(proxyId));
-        message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-        message.addObjPart(Boolean.valueOf(clientHasCq));
+        message.addObjPart(isClientInterested(proxyId));
+        message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(isClientInterested(proxyId));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-  protected Message getGFE61Message(CacheClientProxy proxy, byte[] latestValue, boolean conflation,
+  private Message getGFE61Message(CacheClientProxy proxy, byte[] latestValue, boolean conflation,
-    Message message = null;
+    Message message;
-        message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
+        message.addObjPart(isClientInterested(proxyId));
-        message.addObjPart(Boolean.valueOf(isClientInterested));
+        message.addObjPart(isClientInterested);
-        message.addObjPart(Boolean.valueOf(clientHasCq));
+        message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(isClientInterested(proxyId));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-  protected Message getGFE65Message(CacheClientProxy proxy, byte[] p_latestValue,
+  private Message getGFE65Message(CacheClientProxy proxy, byte[] p_latestValue,
-    Message message = null;
+    Message message;
-      message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(isClientInterested(proxyId));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(isClientInterested(proxyId));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-  protected Message getGFE70Message(CacheClientProxy proxy, byte[] p_latestValue,
+  private Message getGFE70Message(CacheClientProxy proxy, byte[] p_latestValue,
-    Message message = null;
+
+    Message message;
-      message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(isClientInterested(proxyId));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(isClientInterested(proxyId)));
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(isClientInterested(proxyId));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      message.addObjPart(Boolean.valueOf(clientHasCq));
+      message.addObjPart(clientHasCq);
-      new ThreadLocal<Map<Integer, Message>>() {
-        @Override
-        protected Map<Integer, Message> initialValue() {
-          return new HashMap<Integer, Message>();
-        };
-      };
+      ThreadLocal.withInitial(HashMap::new);
-      if (cqs != null && !cqs.isEmpty()) {
-        return true;
-      }
+      return cqs != null && !cqs.isEmpty();
-  public String[] getCqs(ClientProxyMembershipID clientId) {
+  private String[] getCqs(ClientProxyMembershipID clientId) {
-  public void addClientCq(ClientProxyMembershipID clientId, String cqName, Integer cqEvent) {
+  void addClientCq(ClientProxyMembershipID clientId, String cqName, Integer cqEvent) {
-   * @see HAEventWrapper#fromData(DataInput)
+   * @see HAEventWrapper#fromData(DataInput, DeserializationContext)
-   * @see HAEventWrapper#fromData(DataInput)
+   * @see HAEventWrapper#fromData(DataInput, DeserializationContext)
-  protected Object deserialize(byte[] serializedBytes) {
+  private Object deserialize(byte[] serializedBytes) {
-    } catch (Exception e) {
+    } catch (Exception ignored) {
-    StringBuffer buffer = new StringBuffer();
+    StringBuilder buffer = new StringBuilder();
-    public ClientCqConcurrentMap() {
+    ClientCqConcurrentMap() {
-    public CqNameToOpSingleEntry(String name, Integer op) {
+    CqNameToOpSingleEntry(String name, Integer op) {
-      this.op = op.intValue();
+      this.op = op;
-        DataSerializer.writeObject(Integer.valueOf(this.op), out);
+        DataSerializer.writeObject(this.op, out);
-        this.op = op.intValue();
+        this.op = op;
-        this.op = op.intValue();
+        this.op = op;
-    public CqNameToOpHashMap(CqNameToOpSingleEntry se) {
+    CqNameToOpHashMap(CqNameToOpSingleEntry se) {
-      Iterator<Entry<String, Integer>> entries = entrySet().iterator();
-      while (entries.hasNext()) {
-        Entry<String, Integer> entry = entries.next();
+      for (Entry<String, Integer> entry : entrySet()) {
-        int op = entry.getValue().intValue();
+        int op = entry.getValue();

UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 INS29 MOV29 UPD83 MOV25 MOV25 MOV25 INS32 INS65 MOV65 MOV8 MOV27 MOV8 MOV27 MOV8 MOV25 MOV27 MOV8 MOV25 INS42 INS42 INS89 INS68 UPD43 INS21 INS70 MOV27 MOV8 INS21 INS21 MOV27 MOV8 INS21 INS21 MOV27 MOV8 MOV43 MOV41 INS42 INS42 MOV69 INS69 INS69 UPD42 INS7 INS44 MOV32 INS8 MOV32 INS25 MOV21 INS21 MOV8 INS25 INS32 INS32 MOV21 MOV32 INS25 INS32 INS32 MOV21 MOV32 INS25 MOV27 INS43 INS43 UPD42 UPD43 MOV22 INS42 MOV21 MOV74 INS42 MOV60 MOV21 MOV60 MOV21 MOV32 MOV21 MOV32 MOV8 INS25 MOV32 INS32 MOV21 MOV21 MOV32 MOV8 MOV25 MOV42 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV32 MOV21 MOV32 MOV8 INS25 MOV42 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV32 MOV21 MOV32 MOV8 INS25 INS42 INS42 UPD42 MOV32 MOV21 MOV32 MOV32 UPD42 UPD42 MOV42 INS21 INS21 MOV32 MOV8 MOV8 MOV32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 INS21 INS21 MOV32 MOV8 UPD42 UPD42 MOV42 MOV32 MOV8 MOV8 UPD42 UPD42 MOV42 MOV32 MOV8 MOV8 UPD42 UPD42 INS42 INS42 MOV32 UPD42 UPD42 UPD42 UPD42 MOV42 MOV42 INS32 INS32 UPD42 UPD42 MOV42 MOV42 MOV42 INS32 INS32 MOV21 MOV42 MOV21 INS21 MOV42 MOV21 INS21 INS42 MOV42 UPD42 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 MOV42 MOV32 MOV42 UPD42 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 INS32 MOV42 INS32 MOV42 UPD40 MOV40 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 DEL40 DEL26 DEL83 DEL83 DEL83 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31 DEL33 DEL9 DEL33 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL25 DEL25 DEL33 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL25 DEL33 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL25 DEL25 DEL33 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL25 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL41 DEL8 DEL31 DEL1 DEL14 DEL9 DEL8 DEL25 DEL83 DEL42 DEL42 DEL68 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL83 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL8