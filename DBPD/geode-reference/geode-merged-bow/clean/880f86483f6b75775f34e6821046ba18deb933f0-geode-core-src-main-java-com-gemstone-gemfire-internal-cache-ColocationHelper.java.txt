GEODE-1464: remove sqlf code

-   /**
-    * An utility method to retrieve colocated region name of a given partitioned
-    * region without waiting on initialize
-    *
-    * @param partitionedRegion
-    * @return colocated PartitionedRegion
-    * @since GemFire cheetah
-    */
-  public static PartitionedRegion getColocatedRegionName(
-      final PartitionedRegion partitionedRegion) {
-    Assert.assertTrue(partitionedRegion != null); // precondition1
-    String colocatedWith = partitionedRegion.getPartitionAttributes().getColocatedWith();
-    if (colocatedWith == null) {
-      // the region is not colocated with any region
-      return null;
-    }
-    PartitionedRegion colocatedPR = partitionedRegion.getColocatedWithRegion();
-    if (colocatedPR != null && !colocatedPR.isLocallyDestroyed
-        && !colocatedPR.isDestroyed()) {
-      return colocatedPR;
-    }
-    Region prRoot = PartitionedRegionHelper.getPRRoot(partitionedRegion
-        .getCache());
-    PartitionRegionConfig prConf = (PartitionRegionConfig)prRoot
-        .get(getRegionIdentifier(colocatedWith));
-    int prID = -1; 
-    try {
-      if (prConf == null) {
-        colocatedPR = getColocatedPR(partitionedRegion, colocatedWith);
-      }
-      else {
-        prID = prConf.getPRId();
-        colocatedPR = PartitionedRegion.getPRFromId(prID);
-        if (colocatedPR == null && prID > 0) {
-          // colocatedPR might have not called registerPartitionedRegion() yet, but since prID is valid,
-          // we are able to get colocatedPR and do colocatedPR.waitOnBucketMetadataInitialization()
-          colocatedPR = getColocatedPR(partitionedRegion, colocatedWith);
-        }
-      }
-    }
-    catch (PRLocallyDestroyedException e) {
-      if (logger.isDebugEnabled()) {
-        logger.debug("PRLocallyDestroyedException : Region with prId=" + prID
-            + " is locally destroyed on this node", e);
-      } 
-    } 
-    return colocatedPR;
-  }
-    private static PartitionedRegion getColocatedPR(
-      final PartitionedRegion partitionedRegion, final String colocatedWith) {
-    PartitionedRegion colocatedPR = (PartitionedRegion) partitionedRegion
-        .getCache().getPartitionedRegion(colocatedWith, false);
-    assert colocatedPR != null;
-    return colocatedPR;
-  }
+
-  
-  // Gemfirexd will skip initialization for PR, so just get region name without waitOnInitialize
-  public static PartitionedRegion getLeaderRegionName(PartitionedRegion prRegion) {
-    PartitionedRegion parentRegion;
-    
-    while((parentRegion = getColocatedRegionName(prRegion)) != null) {
-      prRegion = parentRegion;
-    } 
-      
-    return prRegion;
-  }

DEL66 DEL66 DEL65 DEL42 DEL65 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL33 DEL27 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL38 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL38 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL34 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL12 DEL54 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL9 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL6 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL33 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL61 DEL42 DEL41 DEL8 DEL31