Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   * Constructs a new exception with the specified detail message and
-   * principal.
+   * Constructs a new exception with the specified detail message and principal.
-   * @param  message the detail message (which is saved for later retrieval
-   *         by the {@link #getMessage()} method).  (A <tt>null</tt> value
-   *         is permitted.)
+   * @param message the detail message (which is saved for later retrieval by the
+   *        {@link #getMessage()} method). (A <tt>null</tt> value is permitted.)
-   * <p>If {@code message} is null, then the detail message associated with
-   * {@code cause} <i>is</i> automatically used as this exception's detail
-   * message.
+   * <p>
+   * If {@code message} is null, then the detail message associated with {@code cause} <i>is</i>
+   * automatically used as this exception's detail message.
-   * @param  message the detail message (which is saved for later retrieval
-   *         by the {@link #getMessage()} method).  (A <tt>null</tt> value
-   *         is permitted.)
-   * @param  cause the cause (which is saved for later retrieval by the
-   *         {@link #getCause()} method).  (A <tt>null</tt> value is
-   *         permitted, and indicates that the cause is nonexistent or
-   *         unknown.)
+   * @param message the detail message (which is saved for later retrieval by the
+   *        {@link #getMessage()} method). (A <tt>null</tt> value is permitted.)
+   * @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method).
+   *        (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or
+   *        unknown.)
-   * Constructs a new exception with the specified detail message and
-   * principal.
+   * Constructs a new exception with the specified detail message and principal.
-   * @param  message the detail message (which is saved for later retrieval
-   *         by the {@link #getMessage()} method).  (A <tt>null</tt> value
-   *         is permitted.)
-   * @param  principal the principal for which authorization failed.
-   *         (A <tt>null</tt> value is permitted.)
+   * @param message the detail message (which is saved for later retrieval by the
+   *        {@link #getMessage()} method). (A <tt>null</tt> value is permitted.)
+   * @param principal the principal for which authorization failed. (A <tt>null</tt> value is
+   *        permitted.)
-   * Constructs a new exception with the specified detail message, cause and
-   * principal.
+   * Constructs a new exception with the specified detail message, cause and principal.
-   * <p>If {@code message} is null, then the detail message associated with
-   * {@code cause} <i>is</i> automatically used as this exception's detail
-   * message.
+   * <p>
+   * If {@code message} is null, then the detail message associated with {@code cause} <i>is</i>
+   * automatically used as this exception's detail message.
-   * @param  message the detail message (which is saved for later retrieval
-   *         by the {@link #getMessage()} method).  (A <tt>null</tt> value
-   *         is permitted.)
-   * @param  cause the cause (which is saved for later retrieval by the
-   *         {@link #getCause()} method).  (A <tt>null</tt> value is
-   *         permitted, and indicates that the cause is nonexistent or
-   *         unknown.)
-   * @param  principal the principal for which authorization failed.
-   *         (A <tt>null</tt> value is permitted.)
+   * @param message the detail message (which is saved for later retrieval by the
+   *        {@link #getMessage()} method). (A <tt>null</tt> value is permitted.)
+   * @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method).
+   *        (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or
+   *        unknown.)
+   * @param principal the principal for which authorization failed. (A <tt>null</tt> value is
+   *        permitted.)
-  public NotAuthorizedException(final String message, final Throwable cause, final Principal principal) {
+  public NotAuthorizedException(final String message, final Throwable cause,
+      final Principal principal) {

UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66