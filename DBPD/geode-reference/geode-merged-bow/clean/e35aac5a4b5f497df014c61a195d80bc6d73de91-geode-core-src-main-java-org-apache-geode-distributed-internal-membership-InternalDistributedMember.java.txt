Merge branch 'release/1.5.0'

-import java.net.Inet4Address;
+import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.DistributionManager;
-    // checkHostName();
-  // private void checkHostName() {
-  // // bug #44858: debug method to find who is putting a host name instead of addr into an ID
-  // if (!SocketCreator.resolve_dns
-  // && this.hostName != null && this.hostName.length() > 0
-  // && !Character.isDigit(this.hostName.charAt(0))) {
-  // throw new RuntimeException("found hostname that doesn't start with a digit: " + this.hostName);
-  // }
-  // }
-
-    netMbr.setVmKind(DistributionManager.NORMAL_DM_TYPE);
+    netMbr.setVmKind(ClusterDistributionManager.NORMAL_DM_TYPE);
-    netMember.setVmKind(DistributionManager.NORMAL_DM_TYPE);
+    netMember.setVmKind(ClusterDistributionManager.NORMAL_DM_TYPE);
-   * @see org.apache.geode.distributed.internal.DistributionManager#getDMType()
-   * @see org.apache.geode.distributed.internal.DistributionManager#NORMAL_DM_TYPE
+   * @see ClusterDistributionManager#getDMType()
+   * @see ClusterDistributionManager#NORMAL_DM_TYPE
-   * Returns this member's unique tag (such as randomly generated bytes) or null if no unique tag
-   * was created.
-   */
-  public String getUniqueTag() {
-    return this.uniqueTag;
-  }
-
-  /**
-    if (vmPid > 0 || vmKind != DistributionManager.NORMAL_DM_TYPE || !"".equals(myName)) {
+    if (vmPid > 0 || vmKind != ClusterDistributionManager.NORMAL_DM_TYPE || !"".equals(myName)) {
-        case DistributionManager.NORMAL_DM_TYPE:
+        case ClusterDistributionManager.NORMAL_DM_TYPE:
-        case DistributionManager.LOCATOR_DM_TYPE:
+        case ClusterDistributionManager.LOCATOR_DM_TYPE:
-        case DistributionManager.ADMIN_ONLY_DM_TYPE:
+        case ClusterDistributionManager.ADMIN_ONLY_DM_TYPE:
-        case DistributionManager.LONER_DM_TYPE:
+        case ClusterDistributionManager.LONER_DM_TYPE:
-    if (vmKind != DistributionManager.LONER_DM_TYPE && netMbr.preferredForCoordinator()) {
+    if (vmKind != ClusterDistributionManager.LONER_DM_TYPE && netMbr.preferredForCoordinator()) {
-    // if (dcPort > 0 && vmKind != DistributionManager.LONER_DM_TYPE) {
-    // sb.append("/");
-    // sb.append(Integer.toString(dcPort));
-    // }
-
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+    if (vmKind == ClusterDistributionManager.LONER_DM_TYPE) {
-    assert netMbr.getVmKind() == DistributionManager.LONER_DM_TYPE;
+    assert netMbr.getVmKind() == ClusterDistributionManager.LONER_DM_TYPE;
-  /** drop the cached toString rep of this ID */
-  public void dropCachedString() {
-    this.cachedToString = null;
-  }
-
-  /*
-   * if (this.ipAddr == null) { return "<null>"; } else { StringBuffer sb = new StringBuffer();
-   * InetAddress addr = this.ipAddr.getIpAddress(); if(addr.isMulticastAddress()) {
-   * sb.append(addr.getHostAddress()); } else { appendShortName(addr.getHostName(), sb); } if
-   * (this.vmPid != 0) { sb.append("("); sb.append(this.vmPid); sb.append(")"); } sb.append(":");
-   * sb.append(this.ipAddr.getPort()); return sb.toString(); } }
-   *
-   * // Helper method for getId()... copied from IpAddress. private void appendShortName(String
-   * hostname, StringBuffer sb) { if (hostname == null) return; int index = hostname.indexOf('.');
-   * if(index > 0 && !Character.isDigit(hostname.charAt(0))) { sb.append(hostname.substring(0,
-   * index)); } else { sb.append(hostname); } }
-   */
-      return "InternalDistrubtedMemberWrapper [mbr=" + mbr + "]";
+      return "InternalDistributedMemberWrapper [mbr=" + mbr + "]";

MOV26 UPD40 UPD40 UPD40 INS42 INS42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD45 UPD40 UPD40 UPD40 UPD40 UPD40 DEL40 DEL26 DEL40 DEL40 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL8 DEL31