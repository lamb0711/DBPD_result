Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import com.gemstone.gemfire.cache.CacheClosedException;
+import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
-import com.gemstone.org.jgroups.util.StringId;
+import com.gemstone.gemfire.i18n.StringId;
+  private void handleRegionNull(ServerConnection servConn, String regionName, int batchId) {
+    GemFireCacheImpl gfc = (GemFireCacheImpl)servConn.getCachedRegionHelper().getCache();
+    if (gfc != null && gfc.isCacheAtShutdownAll()) {
+      throw new CacheClosedException("Shutdown occurred during message processing");
+    } else {
+      String reason = LocalizedStrings.ProcessBatch_WAS_NOT_FOUND_DURING_BATCH_CREATE_REQUEST_0.toLocalizedString(new Object[] {regionName, Integer.valueOf(batchId)});
+      throw new RegionDestroyedException(reason, regionName);
+    }
+  }
+  
+        return;
-        
-          
-            String reason = LocalizedStrings.ProcessBatch_WAS_NOT_FOUND_DURING_BATCH_CREATE_REQUEST_0.toLocalizedString(new Object[] {regionName, Integer.valueOf(batchId)});
-            throw new RegionDestroyedException(reason, regionName);
+            handleRegionNull(servConn, regionName, batchId);
-            handleMessageRetry(msg, region, clientEvent);
+            handleMessageRetry(region, clientEvent);
-
-                //logger.debug("KBKBKB : Increase Create Request");
-
-            String reason = LocalizedStrings.ProcessBatch_WAS_NOT_FOUND_DURING_BATCH_CREATE_REQUEST_0.toLocalizedString(new Object[] {regionName, Integer.valueOf(batchId)});
-            throw new RegionDestroyedException(reason, regionName);
+            handleRegionNull(servConn, regionName, batchId);
-            handleMessageRetry(msg, region, clientEvent);
+            handleMessageRetry(region, clientEvent);
-
-            String reason = LocalizedStrings.ProcessBatch_WAS_NOT_FOUND_DURING_BATCH_CREATE_REQUEST_0.toLocalizedString(new Object[] {regionName, Integer.valueOf(batchId)});
-            throw new RegionDestroyedException(reason, regionName);
+            handleRegionNull(servConn, regionName, batchId);
-            handleMessageRetry(msg, region, clientEvent);
+            handleMessageRetry(region, clientEvent);
-              String reason = LocalizedStrings.ProcessBatch_WAS_NOT_FOUND_DURING_BATCH_UPDATE_VERSION_REQUEST_0.toLocalizedString(new Object[] {regionName});
-              throw new RegionDestroyedException(reason, regionName);
+              handleRegionNull(servConn, regionName, batchId);
-  private void handleMessageRetry(Message msg, LocalRegion region,
-      EntryEventImpl clientEvent) {
-    if (msg.isRetry()) {
-      clientEvent.setPossibleDuplicate(true);
+  private void handleMessageRetry(LocalRegion region, EntryEventImpl clientEvent) {
+    if (clientEvent.isPossibleDuplicate()) {

INS26 INS26 INS40 INS40 UPD40 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS43 INS42 MOV43 INS42 INS39 INS42 INS60 INS25 INS42 INS43 INS59 INS27 INS8 MOV8 INS42 INS42 INS11 INS27 INS32 INS53 UPD42 UPD42 INS43 INS32 INS42 INS33 INS42 INS42 INS14 INS42 INS32 INS42 INS43 INS45 INS41 INS42 INS42 INS42 INS8 INS21 INS21 INS21 INS32 INS32 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS42 MOV42 INS21 INS32 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL42 DEL43 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL42 DEL42 DEL43 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL9 DEL32 DEL21