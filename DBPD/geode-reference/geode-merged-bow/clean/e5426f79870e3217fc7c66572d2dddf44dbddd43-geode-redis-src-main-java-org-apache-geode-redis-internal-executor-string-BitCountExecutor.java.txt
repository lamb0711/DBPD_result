change more string commands to have CommandFunction support (#5184)

* CommandFunction now supports getrange, setrange, bitcount, bitop, bitpos, getbit, setbit, incrbyfloat, mget, and strlen.

Added integration test coverage for untested string commands.

-  private final String ERROR_NOT_INT = "The indexes provided must be numeric values";
+  private static final String ERROR_NOT_INT = "The indexes provided must be numeric values";
-    ByteArrayWrapper wrapper = stringCommands.get(key);
-    if (wrapper == null) {
-      return RedisResponse.integer(0);
-    }
-    byte[] value = wrapper.toBytes();
-
-    long startL = 0;
-    long endL = value.length - 1;
+    long result;
+      int start;
+      int end;
-        startL = Coder.bytesToLong(commandElems.get(2));
-        endL = Coder.bytesToLong(commandElems.get(3));
+        start = Math.toIntExact(Coder.bytesToLong(commandElems.get(2)));
+        end = Math.toIntExact(Coder.bytesToLong(commandElems.get(3)));
+      } catch (ArithmeticException ex) {
+        return RedisResponse.error(RedisConstants.ERROR_OUT_OF_RANGE);
+      result = stringCommands.bitcount(key, start, end);
+    } else {
+      result = stringCommands.bitcount(key);
-    if (startL > Integer.MAX_VALUE || endL > Integer.MAX_VALUE) {
-      return RedisResponse.error(RedisConstants.ERROR_OUT_OF_RANGE);
-    }
-
-    int start = (int) startL;
-    int end = (int) endL;
-    if (start < 0) {
-      start += value.length;
-    }
-    if (end < 0) {
-      end += value.length;
-    }
-
-    if (start < 0) {
-      start = 0;
-    }
-    if (end < 0) {
-      end = 0;
-    }
-
-    if (end > value.length - 1) {
-      end = value.length - 1;
-    }
-
-    if (end < start || start >= value.length) {
-      return RedisResponse.integer(0);
-    }
-
-    long setBits = 0;
-    for (int j = start; j <= end; j++) {
-      setBits += Integer.bitCount(0xFF & value[j]); // 0xFF keeps same bit sequence as the byte as
-    }
-    // opposed to keeping the same value
-
-    return RedisResponse.integer(setBits);
+    return RedisResponse.integer(result);
-

INS83 INS8 UPD42 INS60 INS60 INS21 INS21 UPD42 INS39 INS59 INS39 INS59 INS12 INS7 INS7 INS42 INS42 INS44 MOV8 INS42 INS32 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS32 UPD42 INS32 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL25 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL34 DEL39 DEL42 DEL40 DEL34 DEL27 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL40 DEL27 DEL27 DEL25 DEL39 DEL42 DEL39 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL39 DEL42 DEL11 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL34 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL34 DEL27 DEL42 DEL34 DEL7 DEL21 DEL8 DEL25 DEL42 DEL34 DEL27 DEL42 DEL34 DEL7 DEL21 DEL8 DEL25 DEL42 DEL40 DEL34 DEL27 DEL27 DEL42 DEL40 DEL34 DEL27 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL25 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL42 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL34 DEL42 DEL42 DEL2 DEL27 DEL32 DEL7 DEL21 DEL8 DEL24