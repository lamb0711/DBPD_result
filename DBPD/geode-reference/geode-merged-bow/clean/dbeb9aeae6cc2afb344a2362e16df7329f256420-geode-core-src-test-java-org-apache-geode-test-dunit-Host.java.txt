Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+import java.util.HashSet;
+import java.util.Set;
+import org.apache.geode.test.dunit.standalone.VersionManager;
- * <P>This class represents a host on which a remote method may be
- * invoked.  It provides access to the VMs and GemFire systems that
- * run on that host.</P>
+ * <P>
+ * This class represents a host on which a remote method may be invoked. It provides access to the
+ * VMs and GemFire systems that run on that host.
+ * </P>
- * <P>Additionally, it provides access to the Java RMI registry that
- * runs on the host.  By default, an RMI registry is only started on
- * the host on which Hydra's Master VM runs.  RMI registries may be
- * started on other hosts via additional Hydra configuration.</P>
+ * <P>
+ * Additionally, it provides access to the Java RMI registry that runs on the host. By default, an
+ * RMI registry is only started on the host on which Hydra's Master VM runs. RMI registries may be
+ * started on other hosts via additional Hydra configuration.
+ * </P>
-  ////////////////////  Instance Fields  ////////////////////
+  //////////////////// Instance Fields ////////////////////
-  
+
-  
-  ////////////////////  Static Methods  /////////////////////
+
+  //////////////////// Static Methods /////////////////////
-   * @param n
-   *        A zero-based identifier of the host
+   * @param n A zero-based identifier of the host
-   * @throws IllegalArgumentException
-   *         <code>n</code> is more than the number of hosts
+   * @throws IllegalArgumentException <code>n</code> is more than the number of hosts
-      String s = "Cannot request host " + n + ".  There are only " +
-        size + " hosts.";
+      String s = "Cannot request host " + n + ".  There are only " + size + " hosts.";
-  /////////////////////  Constructors  //////////////////////
+  /**
+   * Reset all VMs to be using the current version of Geode. Some backward-compatibility tests will
+   * set a VM to a different version. This will ensure that all are using the current build.
+   */
+  public static void setAllVMsToCurrentVersion() {
+    int numHosts = getHostCount();
+    for (int hostIndex = 0; hostIndex < numHosts; hostIndex++) {
+      Host host = Host.getHost(hostIndex);
+      int numVMs = host.getVMCount();
+      for (int i = 0; i < numVMs; i++) {
+        try {
+          host.getVM(VersionManager.CURRENT_VERSION, i);
+        } catch (UnsupportedOperationException e) {
+          // not all implementations support versioning
+        }
+      }
+    }
+
+  }
+
+  ///////////////////// Constructors //////////////////////
-  ////////////////////  Instance Methods  ////////////////////
+  //////////////////// Instance Methods ////////////////////
-   * @param n
-   *        A zero-based identifier of the VM
+   * @param n A zero-based identifier of the VM
-   * @throws IllegalArgumentException
-   *         <code>n</code> is more than the number of VMs
+   * @throws IllegalArgumentException <code>n</code> is more than the number of VMs
-      String s = "Cannot request VM " + n + ".  There are only " +
-        size + " VMs on " + this;
+      String s = "Cannot request VM " + n + ".  There are only " + size + " VMs on " + this;
+   * return a collection of all VMs
+   */
+  public Set<VM> getAllVMs() {
+    return new HashSet<>(vms);
+  }
+
+  /**
+   * Returns the nth VM of the given version. Optional operation currently supported only in
+   * distributedTests.
+   * 
+   * @param version
+   * @param n
+   * @return the requested VM
+   */
+  public VM getVM(String version, int n) {
+    throw new UnsupportedOperationException("Not supported in this implementation of Host");
+  }
+
+  /**
-  
+
-  
+
-  ////////////////////  Utility Methods  ////////////////////
+  //////////////////// Utility Methods ////////////////////
-   * Two <code>Host</code>s are considered equal if they have the same
-   * name.
+   * Two <code>Host</code>s are considered equal if they have the same name.
-   * A <code>Host</code>'s hash code is based on the hash code of its
-   * name. 
+   * A <code>Host</code>'s hash code is based on the hash code of its name.

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS8 INS29 INS83 INS74 INS42 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS65 INS60 INS24 INS65 INS43 INS43 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS53 UPD66 UPD66 INS66 INS66 INS39 INS59 INS58 INS27 INS37 INS8 UPD66 UPD66 INS66 INS42 INS42 INS14 INS66 INS66 INS42 INS42 INS66 INS42 INS14 UPD66 UPD66 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS60 INS60 INS24 INS74 INS42 INS43 INS45 INS42 INS42 INS34 INS43 INS59 INS39 INS59 INS58 INS27 INS37 INS8 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS8 INS12 INS21 INS44 INS8 INS32 INS43 INS42 INS42 INS42 INS40 INS42 INS42 DEL66 DEL66