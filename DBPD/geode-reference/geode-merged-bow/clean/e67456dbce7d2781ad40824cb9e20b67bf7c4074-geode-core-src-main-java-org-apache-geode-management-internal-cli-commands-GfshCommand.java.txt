GEODE-3539: cleanup GfshCommand and refactor tests

* remove more try catch blocks in commands
* make GfshCommand a pure wrapper around CliUtil for easy mocking
* unify EntityNotFoundException

-import java.io.PrintWriter;
-import java.io.StringWriter;
-import org.apache.commons.lang.StringUtils;
-import org.apache.geode.management.cli.CliMetaData;
+import org.apache.geode.management.internal.cli.exceptions.EntityNotFoundException;
-import org.apache.geode.management.internal.cli.util.MemberNotFoundException;
+ * this provides wrapper around the static methods in CliUtils for easy mock of the commands
- * @see org.apache.geode.cache.Cache
- * @see org.apache.geode.cache.execute.FunctionService
- * @see org.apache.geode.distributed.DistributedMember
- * @see org.apache.geode.management.internal.cli.shell.Gfsh
- * @see org.springframework.shell.core.CommandMarker
+ * this class should not have much implementation of its own other then those tested in
+ * GfshCommandJUnitTest
-  default String convertDefaultValue(final String from, final String to) {
-    return CliMetaData.ANNOTATION_DEFAULT_VALUE.equals(from) ? to : from;
-  }
-
-  default String toString(final Boolean condition, final String trueValue,
-      final String falseValue) {
-    return Boolean.TRUE.equals(condition) ? StringUtils.defaultIfBlank(trueValue, "true")
-        : StringUtils.defaultIfBlank(falseValue, "false");
-  }
-
-  default String toString(final Throwable t, final boolean printStackTrace) {
-    String message = t.getMessage();
-
-    if (printStackTrace) {
-      StringWriter writer = new StringWriter();
-      t.printStackTrace(new PrintWriter(writer));
-      message = writer.toString();
-    }
-
-    return message;
-  }
-
-
-    DistributedMember member = CliUtil.getDistributedMemberByNameOrId(memberName);
+    DistributedMember member = findMember(memberName);
-      throw new MemberNotFoundException(
+      throw new EntityNotFoundException(
+   * this will return the member found or null if no member with that name
+   */
+  default DistributedMember findMember(final String memberName) {
+    return CliUtil.getDistributedMemberByNameOrId(memberName);
+  }
+
+  /**
+  /**
+   * if no members matches these names, an empty set would return
+   */
+  /**
+   * if no members matches these names, a UserErrorException will be thrown
+   */
+  default Set<DistributedMember> getMembers(String[] groups, String[] members) {
+    Set<DistributedMember> matchingMembers = findMembers(groups, members);
+    if (matchingMembers.size() == 0) {
+      throw new EntityNotFoundException(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+    }
+    return matchingMembers;
+  }
+
+  /**
+   * if no members matches these names, an empty set would return
+   */
+  default Set<DistributedMember> findMembersIncludingLocators(String[] groups, String[] members) {
+    return CliUtil.findMembersIncludingLocators(groups, members);
+  }
+
+  /**
+   * if no members matches these names, a UserErrorException will be thrown
+   */
+  default Set<DistributedMember> getMembersIncludingLocators(String[] groups, String[] members) {
+    Set<DistributedMember> matchingMembers = findMembersIncludingLocators(groups, members);
+    if (matchingMembers.size() == 0) {
+      throw new EntityNotFoundException(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+    }
+    return matchingMembers;
+  }
+

MOV26 MOV31 MOV31 UPD40 INS31 INS31 INS29 MOV43 INS42 INS29 INS29 INS74 INS42 INS29 MOV83 INS74 INS42 MOV44 INS44 INS8 INS29 INS83 INS74 INS42 INS44 INS44 INS8 INS66 INS66 INS66 INS65 UPD42 INS65 INS65 INS43 INS43 INS5 UPD42 INS5 UPD42 INS60 INS25 INS41 INS65 INS43 INS43 INS5 INS42 INS5 INS42 INS41 INS65 INS43 INS43 INS5 INS42 INS5 INS42 INS60 INS25 MOV41 INS43 INS66 MOV32 INS66 INS66 UPD42 MOV42 UPD42 MOV42 INS43 INS85 INS43 INS85 INS74 INS59 INS27 INS8 INS42 INS66 UPD42 MOV42 UPD42 MOV42 INS43 INS85 INS43 INS85 INS32 INS66 INS42 INS42 INS43 INS85 INS43 INS85 INS74 INS59 INS27 INS8 UPD42 INS42 INS32 MOV42 MOV42 INS43 INS43 INS42 INS32 INS32 INS34 INS53 INS42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS43 INS43 INS42 INS32 INS32 INS34 INS53 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS14 INS42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS14 UPD43 INS43 INS40 INS43 INS40 UPD42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL65 DEL40 DEL65 DEL40 DEL65 DEL40 DEL65 DEL40 DEL65 DEL43 DEL42 DEL83 DEL43 DEL42 DEL44 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL21 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL16 DEL43 DEL42 DEL83 DEL43 DEL42 DEL44 DEL83 DEL43 DEL83 DEL43 DEL40 DEL42 DEL42 DEL32 DEL45 DEL32 DEL42 DEL45 DEL32 DEL16 DEL41 DEL83 DEL39 DEL42