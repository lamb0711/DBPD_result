GEODE-6280: Create new public module for the Management API (#3083)

- This moves the classes under `org.apache.geode.cache.configuration` package
  into a public module: `geode-managament`. The intent is that this module
  will have no dependencies to `geode-core` but will allow consumers to perform
  administration tasks (creating regions, etc.).
- `geode-core` will now depend on both `geode-management` as well as
  `geode-common` (transitively). Suggestions on how to improve these new
  dependencies are welcome.

Signed-off-by: Peter Tran <ptran@pivotal.io>
Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>
-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.Declarable;
-import org.apache.geode.internal.ClassPathLoader;
- *
- *
- *
-   * This accessor method returns a reference to the live list,
-   * not a snapshot. Therefore any modification you make to the
-   * returned list will be present inside the JAXB object.
-   * This is why there is not a <CODE>set</CODE> method for the parameter property.
+   * This accessor method returns a reference to the live list, not a snapshot. Therefore any
+   * modification you make to the returned list will be present inside the JAXB object. This is why
+   * there is not a <CODE>set</CODE> method for the parameter property.
-   * Objects of the following type(s) are allowed in the list
-   * {@link ParameterType }
-   *
-   *
+   * Objects of the following type(s) are allowed in the list {@link ParameterType }
-  public <T> T newInstance(Cache cache) {
-    try {
-      Class<T> loadedClass = (Class<T>) ClassPathLoader.getLatest().forName(className);
-      T object = loadedClass.newInstance();
-      if (object instanceof Declarable) {
-        Declarable declarable = (Declarable) object;
-        Properties initProperties = new Properties();
-        for (ParameterType parameter : parameters) {
-          initProperties.put(parameter.getName(), parameter.newInstance(cache));
-        }
-        declarable.initialize(cache, initProperties);
-      }
-      return object;
-    } catch (Exception e) {
-      throw new RuntimeException("Error instantiating class: <" + className + ">", e);
-    }
-  }

UPD66 UPD66 UPD66 UPD66 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL83 DEL42 DEL73 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31