Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
-   
+
+
- * A message that is sent to a particular application to get the
- * region for the specified path.
+ * A message that is sent to a particular application to get the region for the specified path.
+ * 
-  //////////////////////  Instance Fields  //////////////////////
+  ////////////////////// Instance Fields //////////////////////
-  //////////////////////  Static Methods  ///////////////////////
+  ////////////////////// Static Methods ///////////////////////
-   * Returns a <code>RegionRequest</code> for getting a region with
-   * the given name.
+   * Returns a <code>RegionRequest</code> for getting a region with the given name.
-   * @param c
-   *        The admin object for the remote cache
-   * @param path
-   *        The full path to the region
+   * @param c The admin object for the remote cache
+   * @param path The full path to the region
-   * Returns a <code>RegionRequest</code> for creating a VM root
-   * region with the given name and attributes. 
+   * Returns a <code>RegionRequest</code> for creating a VM root region with the given name and
+   * attributes.
-  public static RegionRequest createForCreateRoot(CacheInfo c,
-                                                  String name,
-                                                  RegionAttributes attrs) {
+  public static RegionRequest createForCreateRoot(CacheInfo c, String name,
+      RegionAttributes attrs) {
-   * Returns a <code>RegionRequest</code> for creating a VM root
-   * region with the given name and attributes. 
+   * Returns a <code>RegionRequest</code> for creating a VM root region with the given name and
+   * attributes.
-  public static RegionRequest 
-    createForCreateSubregion(CacheInfo c, String parentPath,
-                             String name, RegionAttributes attrs) {
+  public static RegionRequest createForCreateSubregion(CacheInfo c, String parentPath, String name,
+      RegionAttributes attrs) {
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    this.newRegionAttributes =
-      (RegionAttributes) DataSerializer.readObject(in);
+    this.newRegionAttributes = (RegionAttributes) DataSerializer.readObject(in);
-  
+
-        rgnRqst.friendlyName = LocalizedStrings.RegionRequest_GET_A_SPECIFIC_REGION_FROM_THE_ROOT.toLocalizedString();
+        rgnRqst.friendlyName =
+            LocalizedStrings.RegionRequest_GET_A_SPECIFIC_REGION_FROM_THE_ROOT.toLocalizedString();
-        rgnRqst.friendlyName = LocalizedStrings.RegionRequest_CREATE_A_NEW_ROOT_VM_REGION.toLocalizedString();
+        rgnRqst.friendlyName =
+            LocalizedStrings.RegionRequest_CREATE_A_NEW_ROOT_VM_REGION.toLocalizedString();
-        rgnRqst.friendlyName = LocalizedStrings.RegionRequest_CREATE_A_NEW_VM_REGION.toLocalizedString();
+        rgnRqst.friendlyName =
+            LocalizedStrings.RegionRequest_CREATE_A_NEW_VM_REGION.toLocalizedString();
-        rgnRqst.friendlyName = LocalizedStrings.RegionRequest_UNKNOWN_OPERATION_0.toLocalizedString(Integer.valueOf(rgnRqst.action));
+        rgnRqst.friendlyName = LocalizedStrings.RegionRequest_UNKNOWN_OPERATION_0
+            .toLocalizedString(Integer.valueOf(rgnRqst.action));
-      }
+    }

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66