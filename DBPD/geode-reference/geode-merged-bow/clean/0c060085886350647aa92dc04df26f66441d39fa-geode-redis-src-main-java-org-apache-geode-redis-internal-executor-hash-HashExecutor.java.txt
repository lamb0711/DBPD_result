GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4781)

* Revert "Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)"

This reverts commit f0982cdedf1b122f734919d0647434cca33ec254.

* Fix sporadic test failures for concurrent HSetNX
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.geode.cache.TimeoutException;
+import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.redis.internal.RedisLockService;
+import org.apache.geode.redis.internal.RegionProvider;
+/**
+ * Executor for handling HASH datatypes
+ */
+
-  @Override
-  @SuppressWarnings("unchecked")
-  protected Region<ByteArrayWrapper, ByteArrayWrapper> getOrCreateRegion(
-      ExecutionHandlerContext context, ByteArrayWrapper key, RedisDataType type) {
-    return (Region<ByteArrayWrapper, ByteArrayWrapper>) context.getRegionProvider()
-        .getOrCreateRegion(key, type, context);
-  }
-
-  @SuppressWarnings("unchecked")
-  protected Region<ByteArrayWrapper, ByteArrayWrapper> getRegion(ExecutionHandlerContext context,
+  /**
+   * Get the save map
+   *
+   * @param context the context
+   * @param key the region hash key region:<key>
+   * @return the map data
+   */
+  protected Map<ByteArrayWrapper, ByteArrayWrapper> getMap(ExecutionHandlerContext context,
-    return (Region<ByteArrayWrapper, ByteArrayWrapper>) context.getRegionProvider().getRegion(key);
+    Region<ByteArrayWrapper, Map<ByteArrayWrapper, ByteArrayWrapper>> region =
+        context.getRegionProvider().getHashRegion();
+
+    Map<ByteArrayWrapper, ByteArrayWrapper> map = region.get(key);
+    if (map == null) {
+      map = new HashMap<>();
+    }
+
+    return map;
+  protected AutoCloseableLock withRegionLock(ExecutionHandlerContext context, ByteArrayWrapper key)
+      throws InterruptedException, TimeoutException {
+    RedisLockService lockService = context.getHashLockService();
+
+    return lockService.lock(key);
+  }
+
+
+  /**
+   * Save the map information to a region
+   *
+   * @param map the map to save
+   * @param context the execution handler context
+   * @param key the raw HASH key
+   */
+  protected void saveMap(Map<ByteArrayWrapper, ByteArrayWrapper> map,
+      ExecutionHandlerContext context, ByteArrayWrapper key) {
+
+    if (map == null) {
+      return;
+    }
+
+    RegionProvider rp = context.getRegionProvider();
+
+    rp.getHashRegion().put(key, map);
+    context.getKeyRegistrar().register(key, RedisDataType.REDIS_HASH);
+  }

INS26 INS26 INS26 INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS40 INS40 INS40 INS29 INS31 INS65 INS29 UPD74 MOV74 UPD42 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS29 INS39 INS42 INS44 INS8 INS66 INS65 INS65 INS65 INS65 UPD43 INS60 INS60 INS25 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS41 INS65 INS65 INS65 INS65 INS74 INS42 INS25 INS60 INS21 INS21 INS66 INS42 INS66 INS42 INS66 INS66 UPD42 UPD74 MOV74 INS59 UPD74 MOV74 INS59 INS27 INS8 INS42 INS42 INS42 INS43 INS59 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD43 MOV43 INS43 MOV43 INS27 INS8 INS43 INS59 INS32 INS32 MOV43 INS74 INS42 MOV32 UPD43 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 INS42 INS42 INS33 INS41 UPD42 MOV42 INS42 MOV32 INS32 INS42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS40 INS43 MOV43 MOV43 UPD42 UPD42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS14 INS74 INS43 INS42 DEL42 DEL45 DEL79 DEL42 DEL11 DEL42 DEL78 DEL42 DEL45 DEL79 DEL74 DEL42 DEL43 DEL42 DEL44 DEL32 DEL11 DEL41 DEL8