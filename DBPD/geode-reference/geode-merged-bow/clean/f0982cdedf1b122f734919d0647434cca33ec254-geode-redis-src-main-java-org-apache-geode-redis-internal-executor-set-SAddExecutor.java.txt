Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.HashSet;
+import java.util.HashMap;
-import java.util.Set;
+import java.util.Map;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-    long entriesAdded = 0L;
-
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
+    @SuppressWarnings("unchecked")
+    Region<ByteArrayWrapper, Boolean> keyRegion = (Region<ByteArrayWrapper, Boolean>) context
+        .getRegionProvider().getOrCreateRegion(key, RedisDataType.REDIS_SET, context);
-      Set<ByteArrayWrapper> entries = region.get(key);
-      if (entries == null) {
-        entries = new HashSet<>();
-      }
+    if (commandElems.size() >= 4) {
+      Map<ByteArrayWrapper, Boolean> entries = new HashMap<ByteArrayWrapper, Boolean>();
+      for (int i = 2; i < commandElems.size(); i++)
+        entries.put(new ByteArrayWrapper(commandElems.get(i)), true);
-      for (int i = 2; i < commandElems.size(); i++) {
-        if (entries.add(new ByteArrayWrapper(commandElems.get(i)))) {
-          entriesAdded++;
-        }
-      }
-
-      region.put(key, entries);
+      keyRegion.putAll(entries);
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entries.size()));
+    } else {
+      Object v = keyRegion.put(new ByteArrayWrapper(commandElems.get(2)), true);
-          .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entriesAdded));
-
-      // Save key
-      context.getKeyRegistrar().register(command.getKey(), RedisDataType.REDIS_SET);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
+          .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), v == null ? 1 : 0));

UPD40 UPD40 INS60 INS25 INS79 INS74 INS59 INS27 INS8 INS8 INS42 INS45 INS43 MOV43 INS43 UPD42 MOV42 INS11 INS32 INS34 INS60 MOV24 MOV21 MOV21 INS60 MOV21 UPD42 MOV42 INS42 UPD74 MOV74 INS32 UPD42 MOV42 UPD42 MOV42 UPD74 MOV74 INS59 INS21 INS43 INS59 UPD43 MOV43 INS32 UPD42 MOV42 MOV42 INS40 INS42 UPD43 INS43 MOV42 INS14 MOV32 UPD42 UPD42 INS42 INS42 INS32 UPD42 INS42 UPD42 MOV42 UPD42 INS42 UPD74 MOV74 UPD42 INS9 INS32 UPD42 MOV42 UPD42 MOV42 INS14 INS9 UPD42 MOV32 INS16 UPD43 INS43 INS43 UPD42 MOV42 INS42 INS43 INS32 INS27 INS34 INS34 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS34 INS42 INS33 DEL40 DEL26 DEL40 DEL26 DEL39 DEL42 DEL34 DEL59 DEL60 DEL74 DEL42 DEL37 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL45 DEL43 DEL32 DEL59 DEL58 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL32 DEL21 DEL8 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL41 DEL8 DEL12 DEL54