GEODE-17: enhance the GeodeSecurityUtil and review changes

* allow operations that does not require any authorizations
* put/get, import/export and locate entry will check region access
* rename EnvronmentVariablesHandlerInterceptor
* rename ShiroUtil to GeodeSecurityUtil
* reformat code and review changes

+import com.gemstone.gemfire.cache.operations.OperationContext;
+import com.gemstone.gemfire.cache.operations.OperationContext.OperationCode;
+import com.gemstone.gemfire.cache.operations.OperationContext.Resource;
+import org.apache.commons.lang.StringUtils;
-public class ShiroUtil {
+public class GeodeSecurityUtil {
-  public static void authorize(ResourceOperationContext context) {
-    authorize(context.getResource().name(), context.getOperationCode().name(), context.getRegionName());
+  public static void authorize(ResourceOperation resourceOperation) {
+    if(resourceOperation==null)
+      return;
+
+    authorize(resourceOperation.resource().name(),
+      resourceOperation.operation().name(),
+      null);
-  public static void authorize(ResourceOperation resourceOperation) {
-    authorize(resourceOperation.resource().name(), resourceOperation.operation().name());
+  public static void authorizeClusterManage(){
+    authorize("CLUSTER", "MANAGE");
+  }
+
+  public static void authorizeClusterWrite(){
+    authorize("CLUSTER", "WRITE");
+  }
+
+  public static void authorizeClusterRead(){
+    authorize("CLUSTER", "READ");
+  }
+
+  public static void authorizeDataManage(){
+    authorize("DATA", "MANAGE");
+  }
+
+  public static void authorizeDataWrite(){
+    authorize("DATA", "WRITE");
+  }
+
+  public static void authorizeDataRead(){
+    authorize("DATA", "READ");
+  }
+
+  public static void authorizeRegionWrite(String regionName){
+    authorize("DATA", "WRITE", regionName);
+  }
+
+  public static void authorizeRegionRead(String regionName){
+    authorize("DATA", "READ", regionName);
-  public static void authorize(String resource, String operation, String regionName){
+  private static void authorize(String resource, String operation, String regionName){
+    regionName = StringUtils.stripStart(regionName, "/");
+    authorize(new ResourceOperationContext(resource, operation, regionName));
+  }
+
+  public static void authorize(OperationContext context) {
+    if(context==null)
+      return;
+
+    if(context.getResource()== Resource.NULL && context.getOperationCode()== OperationCode.NULL)
+      return;
+
-    ResourceOperationContext permission = new ResourceOperationContext(resource, operation, regionName);
+
-      currentUser.checkPermission(permission);
+      currentUser.checkPermission(context);
-      logger.info(currentUser.getPrincipal() + " not authorized for "+resource+":"+operation+":"+regionName);
+      logger.info(currentUser.getPrincipal() + " not authorized for " + context);
-

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD42 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 MOV83 MOV83 MOV39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 MOV44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 MOV44 MOV44 MOV44 INS8 INS44 INS25 INS21 INS21 INS21 INS21 INS21 INS21 UPD43 UPD42 INS21 INS43 INS42 INS21 INS21 INS21 INS43 INS42 INS25 INS25 INS27 INS41 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 INS32 INS42 INS32 INS7 INS32 INS42 INS27 INS41 INS27 INS41 INS42 INS33 INS33 INS42 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS45 MOV42 INS45 INS45 INS42 INS42 INS45 INS45 UPD42 MOV42 INS42 INS32 INS42 MOV14 INS42 INS33 INS27 INS27 INS42 UPD42 MOV42 UPD42 MOV42 INS45 MOV32 INS40 MOV32 INS40 UPD42 UPD42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL59 DEL60 DEL45 DEL42 DEL45 DEL42