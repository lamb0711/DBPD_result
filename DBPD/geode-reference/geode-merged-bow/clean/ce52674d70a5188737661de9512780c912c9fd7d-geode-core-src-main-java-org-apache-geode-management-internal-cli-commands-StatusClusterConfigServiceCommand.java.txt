GEODE-5971: Refactor StatusClusterConfigServiceCommand to extend GfshCommand base type (#2960)

GEODE-5971: Refactor StartClusterConfigServiceCommand to extend GfshCommand base type
* Remove unnecessary cleanup step
* Add more test coverage to status-cluster-config, by shutting down a locator

Signed-off-by: Ken Howe <khowe@pivotal.io>
Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>

-import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.cli.GfshCommand;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-public class StatusClusterConfigServiceCommand extends InternalGfshCommand {
-  private static final FetchSharedConfigurationStatusFunction fetchSharedConfigStatusFunction =
-      new FetchSharedConfigurationStatusFunction();
-
+public class StatusClusterConfigServiceCommand extends GfshCommand {
-  public Result statusSharedConfiguration() {
+  public ResultModel statusSharedConfiguration() {
+
-      return ResultBuilder.createInfoResult(CliStrings.NO_LOCATORS_WITH_SHARED_CONFIG);
-    } else {
-      return ResultBuilder.buildResult(getSharedConfigurationStatus(locators));
+      return ResultModel.createInfo(CliStrings.NO_LOCATORS_WITH_SHARED_CONFIG);
+
+    ResultModel resultModel = new ResultModel();
+    TabularResultModel tabularResultModel =
+        resultModel.addTable("Status of shared configuration on locators");
+    if (!populateSharedConfigurationStatus(locators, tabularResultModel)) {
+      resultModel.setStatus(Status.ERROR);
+    }
+
+    return resultModel;
-  private TabularResultData getSharedConfigurationStatus(Set<DistributedMember> locators) {
+  private boolean populateSharedConfigurationStatus(Set<DistributedMember> locators,
+      TabularResultModel tabularResultModel) {
-        CliUtil.executeFunction(fetchSharedConfigStatusFunction, null, locators);
+        CliUtil.executeFunction(new FetchSharedConfigurationStatusFunction(), null, locators);
-    TabularResultData table = ResultBuilder.createTabularResultData();
-    table.setHeader("Status of shared configuration on locators");
-      table.accumulate(CliStrings.STATUS_SHARED_CONFIG_NAME_HEADER, result.getMemberIdOrName());
-      String status = (String) result.getSerializables()[0];
-      table.accumulate(CliStrings.STATUS_SHARED_CONFIG_STATUS, status);
+      tabularResultModel.accumulate(CliStrings.STATUS_SHARED_CONFIG_NAME_HEADER,
+          result.getMemberIdOrName());
+      String status = (String) result.getResultObject();
+      tabularResultModel.accumulate(CliStrings.STATUS_SHARED_CONFIG_STATUS, status);
-    if (!isSharedConfigRunning) {
-      table.setStatus(Status.ERROR);
-    }
-    return table;
+    return isSharedConfigRunning;

UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 INS39 INS42 INS44 UPD42 INS25 INS60 INS60 INS25 INS41 INS43 INS42 INS41 MOV32 MOV8 INS43 INS59 INS43 INS59 INS38 INS8 INS42 UPD42 MOV42 MOV59 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS21 INS42 INS32 INS43 INS42 INS42 INS45 UPD42 MOV42 MOV42 INS42 INS32 INS42 INS42 MOV14 INS33 INS42 MOV43 UPD42 UPD42 INS42 INS42 INS42 INS40 UPD42 UPD42 MOV43 INS32 MOV42 UPD42 MOV42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL23 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL25 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL32 DEL59 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL32 DEL34 DEL2 DEL42 DEL38 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL42 DEL41