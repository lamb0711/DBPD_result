Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  //TODO: private static final boolean ALLOW_EXTRA_WHITESPACE = true;
-  
+  // TODO: private static final boolean ALLOW_EXTRA_WHITESPACE = true;
+
-  
+
-  
+
-  
-  public void assertOutputMatchesGoldenFile(final String actualOutput, final String goldenFileName) throws IOException {
+
+  public void assertOutputMatchesGoldenFile(final String actualOutput, final String goldenFileName)
+      throws IOException {
-    
+
-    
+
-    
+
-      
+
-        fail("EOF reached in actual output but golden file, " + goldenFileName + ", continues at line " + lineCount + ": " + goldenLine + new OutputFormatter(actualStrings));
-      
+        fail("EOF reached in actual output but golden file, " + goldenFileName
+            + ", continues at line " + lineCount + ": " + goldenLine
+            + new OutputFormatter(actualStrings));
+
-        fail("EOF reached in golden file, " + goldenFileName + ", but actual output continues at line " + lineCount + ": " + actualLine + new OutputFormatter(actualStrings));
-      
+        fail("EOF reached in golden file, " + goldenFileName
+            + ", but actual output continues at line " + lineCount + ": " + actualLine
+            + new OutputFormatter(actualStrings));
+
-        assertTrue("Actual output \"" + actualLine + "\" did not match expected pattern \"" + goldenLine + "\" at line " + lineCount + " in " + goldenFileName + ": " + new OutputFormatter(actualStrings), compareLines(actualLine, goldenLine));
+        assertTrue("Actual output \"" + actualLine + "\" did not match expected pattern \""
+            + goldenLine + "\" at line " + lineCount + " in " + goldenFileName + ": "
+            + new OutputFormatter(actualStrings), compareLines(actualLine, goldenLine));
-  
+
-  
+
-    } while(line != null);
+    } while (line != null);
-  
+
-  
+
-  
+
-      fail("Actual output contains a problem (warning/error/severe) on line " + lineCount + ": " + line);
+      fail("Actual output contains a problem (warning/error/severe) on line " + lineCount + ": "
+          + line);

