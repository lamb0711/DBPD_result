GEODE-4372: clean up RemoteOperationMessage classes (#1338)


* throw RemoteOperationException instead of ForceReattemptException when cache is closing. All ForceReattemptException throwing by RemoteOperationMessage has been removed.

* now uses SERIAL_EXECUTOR for all RemoteOperationMessages.
Previously most of these messages where processed in the partitioned message
thread pool even though most all of these messages where not partitioned.
It is possible that RemotePutAll and RemoteRemoveAll will have some trouble
being SERIAL_EXECUTOR.

* added comments for all RemoteOperationMessages describing what
they are used for

* Improved RemoteOperationMessageTest

* added a BucketTXRegionStub to calculate bucket region size on a stub.

* removed GemFireCacheImpl.getInstance call

* added RemoteOperationResponse unit test

* renamed handleAsUnexpected to handleCause

* renamed waitForCacheException to waitForRemoteResponse

* moved RemoteOperation classes to tx package


-   * After expected reply exceptions have already been handled, call this method to handle this
-   * exception as unexpected, i.e. converts to an appropriate runtime exception and throws it. If
-   * there is a a causal exception, then this method will throw that instead of the ReplyException.
+   * Before calling this method any expected "checked" causes should be handled by the caller. If
+   * cause is null or a checked exception (that is not ClassNotFound) then throw an
+   * InternalGemFireException because those should have already been handled. Otherwise
+   * ClassNotFoundException will be handled by throwing SerializationException. RuntimeException and
+   * Error will have their stack fixed up and then are thrown.
-  public void handleAsUnexpected() {
+  public void handleCause() {

UPD42 INS66 INS66 UPD66 UPD66 UPD66