Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-   * Utility Method to obtain MemberMXBean proxy reference for a particular
-   * Member
+   * Utility Method to obtain MemberMXBean proxy reference for a particular Member
-  public static MemberMXBean getMemberMbeanProxy(DistributedMember member)
-      throws Exception {
+  public static MemberMXBean getMemberMbeanProxy(DistributedMember member) throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
-          bean = service.getMBeanProxy(memberMBeanName, MemberMXBean.class);
+        bean = service.getMBeanProxy(memberMBeanName, MemberMXBean.class);
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :MemberMBean Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :MemberMBean Proxy Should Not be Empty for : "
-   * Utility Method to obtain CacheServerMXBean proxy reference for a particular
-   * Member
+   * Utility Method to obtain CacheServerMXBean proxy reference for a particular Member
-  public static CacheServerMXBean getCacheServerMbeanProxy(
-      DistributedMember member, int port) throws Exception {
+  public static CacheServerMXBean getCacheServerMbeanProxy(DistributedMember member, int port)
+      throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
-    final ObjectName cacheServerMBeanName = service
-        .getCacheServerMBeanName(port,member);
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
+    final ObjectName cacheServerMBeanName = service.getCacheServerMBeanName(port, member);
-        bean = service.getMBeanProxy(cacheServerMBeanName,
-            CacheServerMXBean.class);
+        bean = service.getMBeanProxy(cacheServerMBeanName, CacheServerMXBean.class);
-      bean = service.getMBeanProxy(cacheServerMBeanName,
-          CacheServerMXBean.class);
+      bean = service.getMBeanProxy(cacheServerMBeanName, CacheServerMXBean.class);
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :CacheServer Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :CacheServer Proxy Should Not be Empty for : "
- 
+
-   * Utility Method to obtain LockServiceMXBean proxy reference for a particular
-   * lock service on a Member
+   * Utility Method to obtain LockServiceMXBean proxy reference for a particular lock service on a
+   * Member
-  public static LockServiceMXBean getLockServiceMbeanProxy(
-      DistributedMember member, String lockServiceName) throws Exception {
+  public static LockServiceMXBean getLockServiceMbeanProxy(DistributedMember member,
+      String lockServiceName) throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
-    final ObjectName lockServiceMBeanName = service.getLockServiceMBeanName(
-        member, lockServiceName);
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
+    final ObjectName lockServiceMBeanName =
+        service.getLockServiceMBeanName(member, lockServiceName);
-        bean = service.getMBeanProxy(lockServiceMBeanName,
-            LockServiceMXBean.class);
+        bean = service.getMBeanProxy(lockServiceMBeanName, LockServiceMXBean.class);
-      bean = service.getMBeanProxy(lockServiceMBeanName,
-          LockServiceMXBean.class);
+      bean = service.getMBeanProxy(lockServiceMBeanName, LockServiceMXBean.class);
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :LockService Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :LockService Proxy Should Not be Empty for : "
-   * Utility Method to obtain RegionMXBean proxy reference for a particular
-   * region on a member
+   * Utility Method to obtain RegionMXBean proxy reference for a particular region on a member
-  public static RegionMXBean getRegionMbeanProxy(DistributedMember member,
-      String regionPath) throws Exception {
+  public static RegionMXBean getRegionMbeanProxy(DistributedMember member, String regionPath)
+      throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
-    final ObjectName regionMBeanName = service.getRegionMBeanName(
-        member, regionPath);
-    
-    Wait.waitForCriterion(new WaitCriterion(){ 
-      
+    final ObjectName regionMBeanName = service.getRegionMBeanName(member, regionPath);
+
+    Wait.waitForCriterion(new WaitCriterion() {
+
+
-        boolean done = (bean !=null);
+        boolean done = (bean != null);
-    
+
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :RegionMBean Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :RegionMBean Proxy Should Not be Empty for : "
-  
+
-   * Utility Method to obtain GatewaySenderMXBean proxy reference for a
-   * particular sender id on a member
+   * Utility Method to obtain GatewaySenderMXBean proxy reference for a particular sender id on a
+   * member
-   * @param member
-   *          distributed member
-   * @param gatwaySenderId
-   *          sender id
+   * @param member distributed member
+   * @param gatwaySenderId sender id
-  public static GatewaySenderMXBean getGatewaySenderMbeanProxy(
-      DistributedMember member, String gatwaySenderId) throws Exception {
+  public static GatewaySenderMXBean getGatewaySenderMbeanProxy(DistributedMember member,
+      String gatwaySenderId) throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
-        bean = service
-            .getMBeanProxy(senderMBeanName, GatewaySenderMXBean.class);
+        bean = service.getMBeanProxy(senderMBeanName, GatewaySenderMXBean.class);
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :GatewaySender MBean Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :GatewaySender MBean Proxy Should Not be Empty for : "
-  
+
-   * Utility Method to obtain AsyncEventQueueMXBean proxy reference for a
-   * particular queue id on a member
+   * Utility Method to obtain AsyncEventQueueMXBean proxy reference for a particular queue id on a
+   * member
-   * @param member
-   *          distributed member
-   * @param queueId
-   *          Queue id
+   * @param member distributed member
+   * @param queueId Queue id
-  public static AsyncEventQueueMXBean getAsyncEventQueueMBeanProxy(
-      DistributedMember member, String queueId) throws Exception {
-    
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
+  public static AsyncEventQueueMXBean getAsyncEventQueueMBeanProxy(DistributedMember member,
+      String queueId) throws Exception {
-    final ObjectName queueMBeanName = service.getAsyncEventQueueMBeanName(
-        member, queueId);
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
+
+    final ObjectName queueMBeanName = service.getAsyncEventQueueMBeanName(member, queueId);
-        bean = service.getMBeanProxy(queueMBeanName,
-            AsyncEventQueueMXBean.class);
+        bean = service.getMBeanProxy(queueMBeanName, AsyncEventQueueMXBean.class);
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :Async Event Queue MBean Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :Async Event Queue MBean Proxy Should Not be Empty for : "
-   * @param member
-   *          distributed member
+   * @param member distributed member
-  public static GatewayReceiverMXBean getGatewayReceiverMbeanProxy(
-      DistributedMember member) throws Exception {
+  public static GatewayReceiverMXBean getGatewayReceiverMbeanProxy(DistributedMember member)
+      throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
-        bean = service
-            .getMBeanProxy(receiverMBeanName, GatewayReceiverMXBean.class);
+        bean = service.getMBeanProxy(receiverMBeanName, GatewayReceiverMXBean.class);
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :GatewaySender MBean Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :GatewaySender MBean Proxy Should Not be Empty for : "
-   * Utility Method to obtain DistributedRegionMXBean proxy reference for a
-   * particular region
+   * Utility Method to obtain DistributedRegionMXBean proxy reference for a particular region
-   * @param regionName
-   *          name of the region
+   * @param regionName name of the region
-  public static DistributedRegionMXBean getDistributedRegionMbean(
-      final String regionName, final int expectedMembers) throws Exception {
+  public static DistributedRegionMXBean getDistributedRegionMbean(final String regionName,
+      final int expectedMembers) throws Exception {
-    final ManagementService service = ManagementTestBase
-        .getManagementService();
+    final ManagementService service = ManagementTestBase.getManagementService();
-        return "Waiting for " + regionName + " With " +  expectedMembers
+        return "Waiting for " + regionName + " With " + expectedMembers
-   * Utility Method to obtain DistributedRegionMXBean proxy reference for a
-   * particular region
+   * Utility Method to obtain DistributedRegionMXBean proxy reference for a particular region
-   * @param lockServiceName
-   *          name of the lock service
+   * @param lockServiceName name of the lock service
-  public static DistributedLockServiceMXBean getDistributedLockMbean(
-      final String lockServiceName, final int expectedMembers) throws Exception {
+  public static DistributedLockServiceMXBean getDistributedLockMbean(final String lockServiceName,
+      final int expectedMembers) throws Exception {
-    final ManagementService service = ManagementTestBase
-        .getManagementService();
+    final ManagementService service = ManagementTestBase.getManagementService();
-        return "Waiting for " + expectedMembers
-            + " proxies to get reflected at managing node";
+        return "Waiting for " + expectedMembers + " proxies to get reflected at managing node";
-  
+
-   * @param member
-   *          distributed member
+   * @param member distributed member
-  public static LocatorMXBean getLocatorMbeanProxy(DistributedMember member)
-      throws Exception {
+  public static LocatorMXBean getLocatorMbeanProxy(DistributedMember member) throws Exception {
-    final SystemManagementService service = (SystemManagementService) ManagementTestBase
-        .getManagementService();
+    final SystemManagementService service =
+        (SystemManagementService) ManagementTestBase.getManagementService();
-        InternalDistributedSystem.getLoggerI18n().fine(
-            "Undesired Result :Locator MBean Proxy Should Not be Empty for : "
+        InternalDistributedSystem.getLoggerI18n()
+            .fine("Undesired Result :Locator MBean Proxy Should Not be Empty for : "
-  
+
-            "<ExpectedString> " + propertyName + " = " + propertyValue
-                + "</ExpectedString> ");
+            "<ExpectedString> " + propertyName + " = " + propertyValue + "</ExpectedString> ");

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66