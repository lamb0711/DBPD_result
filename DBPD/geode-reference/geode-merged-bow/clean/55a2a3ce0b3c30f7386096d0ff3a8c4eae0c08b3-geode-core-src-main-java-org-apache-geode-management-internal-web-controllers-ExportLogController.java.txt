GEODE-2267: enhance error output for gfsh.

* correctly output error message if gfsh execution has an error
* export logs should output correct log message over http connection as well

+import org.apache.commons.io.IOUtils;
+import org.apache.geode.management.cli.Result;
+import org.springframework.http.MediaType;
-    // the result is json string from CommandResult
+    return getResponse(result);
-    // parse the result to get the file path. This file Path should always exist in the file system
-    String filePath = ResultBuilder.fromJson(result).nextLine().trim();
+  }
+  ResponseEntity<InputStreamResource> getResponse(String result) {
+    // the result is json string from CommandResul
+    Result commandResult = ResultBuilder.fromJson(result);
+    if (commandResult.getStatus().equals(Result.Status.OK)) {
+      return getOKResponse(commandResult);
+
+    } else {
+      return getErrorResponse(result);
+    }
+  }
+
+  private ResponseEntity<InputStreamResource> getErrorResponse(String result) {
+    InputStreamResource isr;// if the command is successful, the output is the filepath,
+    // else we need to send the orignal result back so that the receiver will know to turn it
+    // into a Result object
+    try {
+      isr = new InputStreamResource(IOUtils.toInputStream(result, "UTF-8"));
+      respHeaders.set(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE);
+      return new ResponseEntity<InputStreamResource>(isr, respHeaders, HttpStatus.OK);
+    } catch (Exception e) {
+      throw new RuntimeException("IO Error writing file to output stream", e);
+    }
+  }
+
+  private ResponseEntity<InputStreamResource> getOKResponse(Result commandResult) {
+    HttpHeaders respHeaders = new HttpHeaders();
+    InputStreamResource isr;// if the command is successful, the output is the filepath,
+    String filePath = commandResult.nextLine().trim();
-      InputStreamResource isr = new InputStreamResource(new FileInputStream(zipFile));
+      isr = new InputStreamResource(new FileInputStream(zipFile));
+      respHeaders.set(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_OCTET_STREAM_VALUE);
-    } catch (Exception ex) {
-      throw new RuntimeException("IOError writing file to output stream", ex);
+    } catch (Exception e) {
+      throw new RuntimeException("IO Error writing file to output stream", e);
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS41 INS43 INS43 MOV43 INS42 MOV60 INS25 INS43 INS43 INS43 INS42 INS60 INS60 INS54 INS43 INS43 INS43 INS42 MOV60 INS60 INS60 MOV60 MOV54 INS32 INS42 INS42 INS43 INS32 INS8 INS8 INS42 INS42 INS42 INS43 INS59 MOV43 INS59 INS8 MOV12 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS12 INS42 INS42 INS42 UPD42 MOV32 INS32 INS42 INS40 INS41 INS41 INS42 INS42 INS14 INS42 INS21 INS21 INS41 INS42 INS42 INS42 INS42 INS32 INS21 INS21 INS44 INS8 INS42 INS42 INS32 INS32 INS43 INS7 INS32 INS14 UPD42 INS32 INS42 INS7 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS40 INS40 INS74 INS42 INS42 INS40 INS42 INS42 INS42 MOV14 INS42 INS42 INS40 INS40 INS42 INS14 INS43 INS32 INS43 INS43 UPD45 UPD42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL59 DEL60