Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Ping to check if a server is alive. It waits for a specified 
- * time before returning false. 
+ * Ping to check if a server is alive. It waits for a specified time before returning false.
-  
-  public ServerPingMessage() {
-  }
-  
+  public ServerPingMessage() {}
+
+
-  
+
-   * Sends a ping message. The pre-GFXD_101 recipients are filtered out 
-   * and it is assumed that they are pingable. 
+   * Sends a ping message. The pre-GFXD_101 recipients are filtered out and it is assumed that they
+   * are pingable.
-  public static boolean send (GemFireCacheImpl cache, 
-      Set<InternalDistributedMember> recipients) {
-    
+  public static boolean send(GemFireCacheImpl cache, Set<InternalDistributedMember> recipients) {
+
-    Set <InternalDistributedMember> filteredRecipients = new HashSet<InternalDistributedMember>();
-     
-    // filtered recipients 
+    Set<InternalDistributedMember> filteredRecipients = new HashSet<InternalDistributedMember>();
+
+    // filtered recipients
-      if(Version.GFE_81.compareTo(recipient.getVersionObject()) <= 0) {
+      if (Version.GFE_81.compareTo(recipient.getVersionObject()) <= 0) {
-      } 
+      }
-   
+
-   
+
-        cache.getLoggerI18n().fine("Pinging following servers " +  filteredRecipients);
+        cache.getLoggerI18n().fine("Pinging following servers " + filteredRecipients);
-      
+
-      
+
-      
+
-      cache.getLoggerI18n().error(LocalizedStrings.Server_Ping_Failure, filteredRecipients, e );
+      cache.getLoggerI18n().error(LocalizedStrings.Server_Ping_Failure, filteredRecipients, e);
-   
-    if (failedServers == null  || failedServers.size() == 0)
-      return true; 
-    
+
+    if (failedServers == null || failedServers.size() == 0)
+      return true;
+
-    
+
-  
+
-    // do nothing. We are just pinging the server. send the reply back. 
-    ReplyMessage.send(getSender(), this.processorId,  null, dm); 
+    // do nothing. We are just pinging the server. send the reply back.
+    ReplyMessage.send(getSender(), this.processorId, null, dm);
- 
+
-  
+
-  
+

UPD66 UPD66 UPD66 DEL66