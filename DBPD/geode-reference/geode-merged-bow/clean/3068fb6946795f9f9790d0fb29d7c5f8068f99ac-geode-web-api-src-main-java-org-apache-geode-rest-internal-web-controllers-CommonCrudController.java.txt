Merge remote-tracking branch 'origin/develop' into develop

+import org.apache.logging.log4j.Logger;
+import org.json.JSONException;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.security.access.prepost.PreAuthorize;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+
-import org.apache.logging.log4j.Logger;
-import org.json.JSONException;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
+  @PreAuthorize("@securityService.authorize('DATA', 'READ')")
-    securityService.authorizeDataRead();
-    if(logger.isDebugEnabled()){
-      logger.debug("Listing all resources (Regions) in GemFire...");
-    }
+    logger.debug("Listing all resources (Regions) in GemFire...");
+  @PreAuthorize("@securityService.authorize('DATA', 'READ', #region)")
-    securityService.authorizeRegionRead(region);
-    if(logger.isDebugEnabled()){
-      logger.debug("Reading all Keys in Region ({})...", region);
-    }
-    
+    logger.debug("Reading all Keys in Region ({})...", region);
+
+  @PreAuthorize("@securityService.authorize('WRITE', #region, #keys)")
-    for (String key : keys)
-      securityService.authorizeRegionWrite(region, key);
-    if(logger.isDebugEnabled()){
-      logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[])keys), region);
-    }
-    
+    logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[])keys), region);
+
+  @PreAuthorize("@securityService.authorize('DATA', 'WRITE', #region)")
-    securityService.authorizeRegionWrite(region);
-    if(logger.isDebugEnabled()){
-      logger.debug("Deleting all data in Region ({})...", region);
-    }
+    logger.debug("Deleting all data in Region ({})...", region);
+  @PreAuthorize("@securityService.authorize('CLUSTER', 'READ')")
-    securityService.authorizeClusterRead();
-    if(logger.isDebugEnabled()){
-      logger.debug("Executing function to get REST enabled gemfire nodes in the DS!");
-    }
+    logger.debug("Executing function to get REST enabled gemfire nodes in the DS!");

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 INS79 INS79 INS79 MOV8 INS79 INS79 INS42 INS45 MOV21 INS42 INS45 MOV21 INS42 INS45 MOV21 MOV21 MOV41 INS42 INS45 MOV21 INS42 INS45 MOV21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL70 DEL42 DEL42 DEL32 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25