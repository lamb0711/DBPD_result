GEODE-2644: Cleanup logging related files

Cleanup files that helped fix logging related test failures or helped
with reviewing and understanding code while working on GEODE-2644.

* Remove warnings and improve code cleanliness
* Improve testing and failure messages

+import java.util.StringTokenizer;
+import org.apache.geode.LogWriter;
- * Parses a log file written by a {@link org.apache.geode.LogWriter} into
- * {@link LogFileParser.LogEntry}s. It behaves sort of like an {@link java.util.StringTokenizer}.
- *
+ * Parses a log file written by a {@link LogWriter} into {@link LogFileParser.LogEntry}s. It
+ * behaves sort of like an {@link StringTokenizer}.
+
-  /////////////////////// Instance Fields ///////////////////////
-
-  private BufferedReader br;
+  private final BufferedReader br;
-  /** The pattern used to match the first line of a log entry */
-  // private Pattern pattern;
-
-  private boolean suppressBlanks;
-
-  ////////////////////// Constructors //////////////////////
+  private final boolean suppressBlanks;
-  public LogFileParser(String logFileName, BufferedReader br) {
+  public LogFileParser(final String logFileName, final BufferedReader br) {
-  public LogFileParser(String logFileName, BufferedReader br, boolean tabOut,
-      boolean suppressBlanks) {
+  public LogFileParser(final String logFileName, final BufferedReader br, final boolean tabOut,
+      final boolean suppressBlanks) {
-    this.hasMoreEntries = true;
-    // this.pattern =
-    // Pattern.compile("\\[\\w+ (\\d\\d\\d\\d/\\d\\d/\\d\\d \\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\d) .*");
-    this.timestamp = null;
-    this.sb = new StringBuffer();
+    hasMoreEntries = true;
+    timestamp = null;
+    sb = new StringBuffer();
-    this.whiteFileName = new StringBuffer();
+    whiteFileName = new StringBuffer();
-      for (int i = ((logFileName.length() + 2) % 8); i > 0; i--) {
+      for (int i = (logFileName.length() + 2) % 8; i > 0; i--) {
-      this.extLogFileName = this.logFileName + ": ";
+      extLogFileName = this.logFileName + ": ";
-      this.extLogFileName = null;
+      extLogFileName = null;
-  //////////////////// Instance Methods ////////////////////
-
-    return this.hasMoreEntries;
+    return hasMoreEntries;
-  private String getTimestamp(String line) {
+  private String getTimestamp(final String line) {
-        if ((line.charAt(1) == 'i' && line.charAt(2) == 'n'
-            && line.charAt(3) == 'f' /*
-                                      * && line.charAt(4) == 'o'
-                                      */) ||
+        if (line.charAt(1) == 'i' && line.charAt(2) == 'n'
+            && line.charAt(3) == 'f' ||
-            (line.charAt(1) == 'f' && line.charAt(2) == 'i'
-                && line.charAt(3) == 'n' /*
-                                          * && line.charAt(4) == 'e'
-                                          */)
+            line.charAt(1) == 'f' && line.charAt(2) == 'i'
+                && line.charAt(3) == 'n'
-            (line.charAt(1) == 'w' && line.charAt(2) == 'a'
-                && line.charAt(3) == 'r' /*
-                                          * && line.charAt(4) == 'n' && line.charAt(5) == 'i' &&
-                                          * line.charAt(6) == 'n' && line.charAt(7) == 'g'
-                                          */)
+            line.charAt(1) == 'w' && line.charAt(2) == 'a'
+                && line.charAt(3) == 'r'
-            (line.charAt(1) == 'd' && line.charAt(2) == 'e'
-                && line.charAt(3) == 'b'/*
-                                         * && line.charAt(4) == 'u' && line.charAt(5) == 'g'
-                                         */)
+            line.charAt(1) == 'd' && line.charAt(2) == 'e'
+                && line.charAt(3) == 'b'
-            (line.charAt(1) == 't' && line.charAt(2) == 'r'
-                && line.charAt(3) == 'a' /*
-                                          * && line.charAt(4) == 'c' && line.charAt(5) == 'e'
-                                          */)
+            line.charAt(1) == 't' && line.charAt(2) == 'r'
+                && line.charAt(3) == 'a'
-            (line.charAt(1) == 's' && line.charAt(2) == 'e'
-                && line.charAt(3) == 'v' /*
-                                          * && line.charAt(4) == 'e' && line.charAt(5) == 'r' &&
-                                          * line.charAt(6) == 'e'
-                                          */)
+            line.charAt(1) == 's' && line.charAt(2) == 'e'
+                && line.charAt(3) == 'v'
-            (line.charAt(1) == 'c' && line.charAt(2) == 'o'
-                && line.charAt(3) == 'n' /*
-                                          * && line.charAt(4) == 'f' && line.charAt(5) == 'i' &&
-                                          * line.charAt(6) == 'g'
-                                          */)
+            line.charAt(1) == 'c' && line.charAt(2) == 'o'
+                && line.charAt(3) == 'n'
-            (line.charAt(1) == 'e' && line.charAt(2) == 'r'
-                && line.charAt(3) == 'r' /*
-                                          * && line.charAt(4) == 'o' && line.charAt(5) == 'r'
-                                          */)
+            line.charAt(1) == 'e' && line.charAt(2) == 'r'
+                && line.charAt(3) == 'r'
-            (line.charAt(1) == 's' && line.charAt(2) == 'e' && line.charAt(3) == 'c'
-                && line.charAt(4) == 'u' && line.charAt(5) == 'r')) {
+            line.charAt(1) == 's' && line.charAt(2) == 'e' && line.charAt(3) == 'c'
+                && line.charAt(4) == 'u' && line.charAt(5) == 'r') {
-      if (this.suppressBlanks || this.firstEntry) {
+      if (suppressBlanks || firstEntry) {
-          // System.out.println(this.logFileName + ": skipping line '" + lineStr + "'");
-          entry = new LogEntry(timestamp, sb.toString(), this.suppressBlanks);
+          entry = new LogEntry(timestamp, sb.toString(), suppressBlanks);
-        if (!this.firstEntry) {
+        if (!firstEntry) {
-          this.firstEntry = false;
+          firstEntry = false;
-        if (this.extLogFileName != null) {
-          sb.append(this.extLogFileName);
+        if (extLogFileName != null) {
+          sb.append(extLogFileName);
-          if (this.extLogFileName != null) {
-            sb.append(this.extLogFileName);
+          if (extLogFileName != null) {
+            sb.append(extLogFileName);
-        sb.append(this.whiteFileName);
+        sb.append(whiteFileName);
-      sb.insert(0, this.extLogFileName);
+      sb.insert(0, extLogFileName);
-    this.sb = null;
-    this.hasMoreEntries = false;
+    sb = null;
+    hasMoreEntries = false;
-  ////////////////////// Main Program ///////////////////////
-
-  public static void main(String[] args) throws Throwable {
+  public static void main(final String[] args) throws Exception {
-
-  ////////////////////// Inner Classes //////////////////////
-
-   * <code>String</code>. {@link java.text.DateFormat#parse(java.lang.String) Parsing} it was too
+   * <code>String</code>. {@link DateFormat#parse(String) Parsing} it was too
-    private String timestamp;
+    private final String timestamp;
-    private String contents;
+    private final String contents;
-    //////////////////// Constructors ////////////////////
-
-    public LogEntry(String timestamp, String contents) {
+    public LogEntry(final String timestamp, final String contents) {
-    public LogEntry(String timestamp, String contents, boolean suppressBlanks) {
+    public LogEntry(final String timestamp, final String contents, final boolean suppressBlanks) {
-    //////////////////// Instance Methods ////////////////////
-
-      return this.timestamp;
+      return timestamp;
-      return this.contents;
+      return contents;
-    public void writeTo(PrintWriter pw) {
-      pw.println(this.contents);
-      if (!this.suppressBlanks) {
+    public void writeTo(final PrintWriter pw) {
+      pw.println(contents);
+      if (!suppressBlanks) {
-    public LastLogEntry(String timestamp, String contents) {
+
+    public LastLogEntry(final String timestamp, final String contents) {
-

INS26 INS26 INS40 INS40 INS83 INS83 UPD43 MOV44 UPD66 INS66 UPD66 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 UPD42 INS83 INS83 INS44 MOV44 INS42 INS42 INS42 INS83 INS43 INS83 MOV43 INS42 INS83 UPD42 INS83 UPD42 INS83 INS83 INS83 UPD42 INS83 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 MOV27 INS27 MOV27 INS42 INS42 INS27 MOV27 INS42 INS27 MOV27 INS42 INS42 INS27 MOV27 INS42 INS42 INS27 MOV27 INS27 MOV27 INS42 INS27 MOV27 MOV27 MOV27 DEL40 DEL40 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL36 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL36 DEL36 DEL36 DEL36 DEL36 DEL36 DEL36 DEL36 DEL36 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL40 DEL40 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22