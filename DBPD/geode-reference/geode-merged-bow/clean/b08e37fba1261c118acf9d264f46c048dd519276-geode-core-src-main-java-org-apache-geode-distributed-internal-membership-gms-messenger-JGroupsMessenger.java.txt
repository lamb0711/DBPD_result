GEODE-5546 auto-reconnecting member reuses old address including vmViewId

Old membership IDs are now retained in JGroupsMessenger and GMSJoinLeave
uses a new method, Messenger.isOldMembershipIdentifier(), to avoid accepting
a prepared view that contains an old identity.

GMSJoinLeave is also modified to send an immediate removal message to
servers that are no longer members of the cluster but are attempting to interact
with the cluster.

This closes #2286

+import org.apache.geode.InternalGemFireError;
+  /**
+   * DistributedMember identifiers already used, either in this JGroupsMessenger instance
+   * or in a past one & retained through an auto-reconnect.
+   */
+  private Set<DistributedMember> usedDistributedMemberIdentifiers = new HashSet<>();
+
-      Object oldChannel = services.getConfig().getTransport().getOldDSMembershipInfo();
-      if (oldChannel != null) {
+      Object oldDSMembershipInfo = services.getConfig().getTransport().getOldDSMembershipInfo();
+      if (oldDSMembershipInfo != null) {
+        MembershipInformation oldInfo = (MembershipInformation) oldDSMembershipInfo;
+        myChannel = oldInfo.getChannel();
+        usedDistributedMemberIdentifiers = oldInfo.getMembershipIdentifiers();
-        myChannel = (JChannel) oldChannel;
+  @Override
+  public boolean isOldMembershipIdentifier(DistributedMember id) {
+    return usedDistributedMemberIdentifiers.contains(id);
+  }
+
+    if (localAddress != null && localAddress.getVmViewId() >= 0) {
+      // keep track of old addresses that were used to successfully join the cluster
+      usedDistributedMemberIdentifiers.add(localAddress);
+    }
-        logger
-            .info("Unable to find getPhysicallAddress method in UDP - parsing its address instead");
+        throw new InternalGemFireError(
+            "Unable to configure JGroups channel for membership communications", e);
-
+    if (localAddress.getVmViewId() >= 0) {
+      // keep track of old addresses that were used to successfully join the cluster
+      usedDistributedMemberIdentifiers.add(localAddress);
+    }
-        new GMSQuorumChecker(view, services.getConfig().getLossThreshold(), this.myChannel);
+        new GMSQuorumChecker(view, services.getConfig().getLossThreshold(), this.myChannel,
+            usedDistributedMemberIdentifiers);

INS26 INS40 INS23 INS31 INS29 INS83 INS74 INS59 INS78 INS83 INS39 INS42 INS44 INS8 INS65 INS43 INS43 INS42 INS14 INS42 INS43 INS42 INS41 INS25 INS25 INS66 INS66 INS42 INS42 INS74 INS42 INS32 INS27 INS8 INS27 INS8 INS43 INS42 INS42 INS42 INS27 INS27 INS21 INS32 INS34 INS21 INS42 INS42 INS33 INS32 INS34 INS32 INS42 INS42 INS32 INS42 UPD42 UPD42 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS53 INS42 INS42 INS11 INS32 INS42 INS32 INS14 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL45 DEL32 DEL21