Merge branch 'release/1.8.0'

+
+import java.net.SocketTimeoutException;
-import java.security.cert.Certificate;
+import javax.net.ssl.SSLProtocolException;
-import javax.net.ssl.SSLSession;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+    if (sslConfig.useDefaultSSLContext()) {
+      return SSLContext.getDefault();
+    }
+
-            new BindException(LocalizedStrings.SocketCreator_FAILED_TO_CREATE_SERVER_SOCKET_ON_0_1
-                .toLocalizedString(bindAddr, Integer.valueOf(nport)));
+            new BindException(String.format("Failed to create server socket on %s[%s]",
+                bindAddr, Integer.valueOf(nport)));
-            new BindException(LocalizedStrings.SocketCreator_FAILED_TO_CREATE_SERVER_SOCKET_ON_0_1
-                .toLocalizedString(bindAddr, Integer.valueOf(nport)));
+            new BindException(String.format("Failed to create server socket on %s[%s]",
+                bindAddr == null ? InetAddress.getLocalHost() : bindAddr,
+                String.valueOf(nport)));
-              LocalizedStrings.TCPConduit_UNABLE_TO_FIND_FREE_PORT.toLocalizedString());
+              "Unable to find a free port in the membership-port-range");
-        SSLSession session = sslSocket.getSession();
-        Certificate[] peer = session.getPeerCertificates();
-        if (logger.isDebugEnabled()) {
-          logger.debug(
-              LocalizedMessage.create(LocalizedStrings.SocketCreator_SSL_CONNECTION_FROM_PEER_0,
-                  ((X509Certificate) peer[0]).getSubjectDN()));
-        }
-              LocalizedMessage.create(
-                  LocalizedStrings.SocketCreator_SSL_ERROR_IN_AUTHENTICATING_PEER_0_1,
+              String.format("SSL Error in authenticating peer %s[%s].",
-        // else ignore
+      }
+      // Pre jkd11, startHandshake is throwing SocketTimeoutException.
+      // in jdk 11 it is throwing SSLProtocolException with a cause of SocketTimeoutException.
+      // this is to keep the exception consistent across jdk
+      catch (SSLProtocolException ex) {
+        if (ex.getCause() instanceof SocketTimeoutException) {
+          throw (SocketTimeoutException) ex.getCause();
+        } else {
+          throw ex;
+        }
-        socket.setSoTimeout(oldTimeout);
+        try {
+          socket.setSoTimeout(oldTimeout);
+        }
+        // ignore
+        catch (SocketException e) {
+        }
+      } else {
+        logger.warn("Your SSL configuration disables hostname validation. "
+            + "Future releases of Apache GEODE will mandate hostname validation. "
+            + "Please refer to the Apache GEODE SSL Documentation for SSL Property: ssl‑endpoint‑identification‑enabled");
-        SSLSession session = sslSocket.getSession();
-        Certificate[] peer = session.getPeerCertificates();
-        if (logger.isDebugEnabled()) {
-          logger.debug(
-              LocalizedMessage.create(LocalizedStrings.SocketCreator_SSL_CONNECTION_FROM_PEER_0,
-                  ((X509Certificate) peer[0]).getSubjectDN()));
+      }
+      // Pre jkd11, startHandshake is throwing SocketTimeoutException.
+      // in jdk 11 it is throwing SSLProtocolException with a cause of SocketTimeoutException.
+      // this is to keep the exception consistent across jdk
+      catch (SSLProtocolException ex) {
+        if (ex.getCause() instanceof SocketTimeoutException) {
+          throw (SocketTimeoutException) ex.getCause();
+        } else {
+          throw ex;
-            .fatal(
-                LocalizedMessage.create(
-                    LocalizedStrings.SocketCreator_SSL_ERROR_IN_CONNECTING_TO_PEER_0_1,
-                    new Object[] {socket.getInetAddress(), Integer.valueOf(socket.getPort())}),
+            .fatal(String.format("SSL Error in connecting to peer %s[%s].",
+                new Object[] {socket.getInetAddress(), Integer.valueOf(socket.getPort())}),
-          logger.fatal(LocalizedMessage
-              .create(LocalizedStrings.SocketCreator_SSL_ERROR_IN_AUTHENTICATING_PEER), ex);
+          logger.fatal("SSL Error in authenticating peer.", ex);
-          LocalizedStrings.StartupMessage_UNABLE_TO_EXAMINE_NETWORK_INTERFACES.toLocalizedString(),
+          "Unable to examine network interfaces",
-              LocalizedStrings.InetAddressUtil_UNABLE_TO_QUERY_NETWORK_INTERFACE
-                  .toLocalizedString(),
+              "Unable to query network interface",

MOV26 MOV26 UPD40 UPD40 INS25 INS32 INS8 INS42 INS42 INS41 INS32 INS8 INS12 INS8 INS8 INS8 INS12 INS42 INS42 MOV21 INS44 INS8 INS54 INS21 MOV25 MOV21 INS44 INS8 INS43 INS42 INS25 MOV8 INS12 INS32 INS43 INS42 INS25 INS45 MOV43 MOV43 UPD42 MOV42 INS62 INS8 INS8 INS44 INS8 INS42 INS42 INS27 UPD42 MOV42 INS62 INS8 MOV8 INS32 INS43 INS53 INS53 INS43 INS42 INS45 INS45 INS45 INS32 INS43 INS53 INS53 MOV43 MOV43 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS11 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS11 INS42 UPD42 UPD42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS16 INS43 INS32 INS43 INS32 INS45 INS27 INS32 INS42 UPD42 UPD42 UPD42 INS45 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS45 INS42 INS33 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL40 DEL42 DEL40 DEL42 DEL32 DEL43 DEL42 DEL32 DEL59 DEL60 DEL43 DEL85 DEL5 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL40 DEL43 DEL42 DEL34 DEL2 DEL11 DEL36 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL40 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL43 DEL42 DEL34 DEL2 DEL11 DEL36 DEL42 DEL32 DEL32 DEL32 DEL21 DEL43 DEL42 DEL32 DEL59 DEL60 DEL43 DEL85 DEL5 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL25 DEL8 DEL40 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32