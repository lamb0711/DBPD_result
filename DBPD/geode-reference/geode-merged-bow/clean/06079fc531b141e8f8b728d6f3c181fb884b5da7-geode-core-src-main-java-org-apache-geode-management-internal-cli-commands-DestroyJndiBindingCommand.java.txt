GEODE-4858: refactor JndiBinding commands (#1935)


-import static org.apache.geode.management.internal.cli.result.ResultBuilder.buildResult;
+import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.cli.SingleGfshCommand;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-public class DestroyJndiBindingCommand extends InternalGfshCommand {
+public class DestroyJndiBindingCommand extends SingleGfshCommand {
-  public Result destroyJDNIBinding(
+  public ResultModel destroyJDNIBinding(
-    Result result;
-    boolean persisted = false;
-      service.updateCacheConfig("cluster", cc -> {
-        List<JndiBindingsType.JndiBinding> bindings = cc.getJndiBindings();
-        JndiBindingsType.JndiBinding binding = CacheElement.findElement(bindings, jndiName);
-        if (binding == null) {
-          throw new EntityNotFoundException(
-              CliStrings.format("Jndi binding with jndi-name \"{0}\" does not exist.", jndiName),
-              ifExists);
-        }
-        bindings.remove(binding);
-        return cc;
-      });
-      persisted = true;
+      List<JndiBindingsType.JndiBinding> bindings =
+          service.getCacheConfig("cluster").getJndiBindings();
+      JndiBindingsType.JndiBinding binding = CacheElement.findElement(bindings, jndiName);
+      // fail fast when CC is running and if required binding not found assuming that
+      // when CC is running then every configuration goes through CC
+      if (binding == null) {
+        throw new EntityNotFoundException(
+            CliStrings.format("Jndi binding with jndi-name \"{0}\" does not exist.", jndiName),
+            ifExists);
+      }
-      return buildResult(jndiCreationResult);
+      ResultModel result = ResultModel.createMemberStatusResult(jndiCreationResult);
+      result.setConfigObject(jndiName);
+      return result;
-      if (persisted) {
-        result = ResultBuilder.createInfoResult(CliStrings.format(
-            "No members found. Jndi-binding \"{0}\" is removed from cluster configuration.",
-            jndiName));
-      } else {
-        result = ResultBuilder.createInfoResult("No members found.");
-      }
+      return ResultModel.createInfo("No members found.");
-    result.setCommandPersisted(persisted);
-    return result;
+  }
+
+  @Override
+  public void updateClusterConfig(String group, CacheConfig config, Object element) {
+    CacheElement.removeElement(config.getJndiBindings(), (String) element);

MOV26 UPD40 UPD40 UPD40 UPD43 INS31 UPD42 UPD43 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS8 UPD42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS21 MOV8 MOV8 INS42 INS42 INS42 INS32 INS60 INS21 MOV41 INS41 INS42 INS42 INS32 INS11 INS43 INS59 INS32 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV45 INS42 INS32 UPD42 MOV42 INS42 MOV42 UPD42 MOV42 INS42 INS45 DEL42 DEL43 DEL42 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL42 DEL42 DEL45 DEL42 DEL59 DEL86 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL32 DEL41 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21