GEODE-6301: Use ThreadInfo.toString in ExecutorServiceRule.dumpThreads

Cleanup javadocs and warnings in all ExecutorServiceRule tests.

-   * Returns formatted call stacks of the {@code Thread}s that are directly in the
-   * {@code ExecutorService}'s {@code ThreadGroup} excluding subgroups.
+   * Returns thread dumps for the {@code Thread}s that are in the {@code ExecutorService}'s
+   * {@code ThreadGroup} excluding subgroups.
-    StringBuilder dump = new StringBuilder();
+    StringBuilder dumpWriter = new StringBuilder();
+
-    ThreadInfo[] threadInfos = threadMXBean.getThreadInfo(getThreadIds(), 100);
+    ThreadInfo[] threadInfos = threadMXBean.getThreadInfo(getThreadIds(), true, true);
+
-      dump.append('"');
-      dump.append(threadInfo.getThreadName());
-      dump.append("\" ");
-      final Thread.State state = threadInfo.getThreadState();
-      dump.append("\n   java.lang.Thread.State: ");
-      dump.append(state);
-      final StackTraceElement[] stackTraceElements = threadInfo.getStackTrace();
-      for (final StackTraceElement stackTraceElement : stackTraceElements) {
-        dump.append("\n        at ");
-        dump.append(stackTraceElement);
+      if (threadInfo == null) {
+        // sometimes ThreadMXBean.getThreadInfo returns array with one or more null elements
+        continue;
-      dump.append("\n\n");
+      // ThreadInfo toString includes monitor and synchronizer details
+      dumpWriter.append(threadInfo);
-    return dump.toString();
+
+    return dumpWriter.toString();
-  static class DedicatedThreadFactory implements ThreadFactory {
-    private static final AtomicInteger poolNumber = new AtomicInteger(1);
+  protected static class DedicatedThreadFactory implements ThreadFactory {
+
+    private static final AtomicInteger POOL_NUMBER = new AtomicInteger(1);
+
-    DedicatedThreadFactory() {
+    protected DedicatedThreadFactory() {
-      namePrefix = "pool-" + poolNumber.getAndIncrement() + "-thread-";
+      namePrefix = "pool-" + POOL_NUMBER.getAndIncrement() + "-thread-";
-    Set<Thread> getThreads() {
+    protected Set<Thread> getThreads() {
-     *

INS83 INS83 INS83 UPD66 UPD66 UPD66 UPD42 UPD42 INS25 UPD42 INS9 INS9 INS27 INS8 INS42 INS33 INS18 UPD42 MOV42 UPD42 DEL34 DEL42 DEL42 DEL13 DEL32 DEL21 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL83 DEL40 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL45 DEL32 DEL21