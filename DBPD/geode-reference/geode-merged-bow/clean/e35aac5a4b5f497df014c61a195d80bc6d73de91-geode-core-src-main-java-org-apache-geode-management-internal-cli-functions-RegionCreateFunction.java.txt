Merge branch 'release/1.5.0'

+import java.util.ArrayList;
+import java.util.List;
+import org.apache.commons.lang.exception.ExceptionUtils;
-import org.apache.geode.cache.execute.Function;
-import org.apache.geode.internal.InternalEntity;
+import org.apache.geode.internal.cache.execute.InternalFunction;
+import org.apache.geode.management.internal.cli.domain.ClassName;
-public class RegionCreateFunction implements Function, InternalEntity {
+public class RegionCreateFunction implements InternalFunction {
-    if (regionCreateArgs.isSkipIfExists()) {
+    if (regionCreateArgs.isIfNotExists()) {
-        exceptionMsg = CliUtil.stackTraceAsString(e);
+        exceptionMsg = ExceptionUtils.getStackTrace(e);
-    if (entryExpirationIdleTime != null) {
-      factory.setEntryIdleTimeout(entryExpirationIdleTime.convertToExpirationAttributes());
+    if (entryExpirationIdleTime.isTimeOrActionSet()) {
+      factory.setEntryIdleTimeout(entryExpirationIdleTime.getExpirationAttributes());
+
+    if (regionCreateArgs.getEntryIdleTimeCustomExpiry() != null) {
+      factory.setCustomEntryIdleTimeout(
+          regionCreateArgs.getEntryIdleTimeCustomExpiry().newInstance(cache));
+    }
+
+    if (regionCreateArgs.getEntryTTLCustomExpiry() != null) {
+      factory
+          .setCustomEntryTimeToLive(regionCreateArgs.getEntryTTLCustomExpiry().newInstance(cache));
+    }
+
-    if (entryExpirationTTL != null) {
-      factory.setEntryTimeToLive(entryExpirationTTL.convertToExpirationAttributes());
+    if (entryExpirationTTL.isTimeOrActionSet()) {
+      factory.setEntryTimeToLive(entryExpirationTTL.getExpirationAttributes());
-    if (regionExpirationIdleTime != null) {
-      factory.setRegionIdleTimeout(regionExpirationIdleTime.convertToExpirationAttributes());
+    if (regionExpirationIdleTime.isTimeOrActionSet()) {
+      factory.setRegionIdleTimeout(regionExpirationIdleTime.getExpirationAttributes());
-    if (regionExpirationTTL != null) {
-      factory.setRegionTimeToLive(regionExpirationTTL.convertToExpirationAttributes());
+    if (regionExpirationTTL.isTimeOrActionSet()) {
+      factory.setRegionTimeToLive(regionExpirationTTL.getExpirationAttributes());
-    final Set<String> cacheListeners = regionCreateArgs.getCacheListeners();
+    final Set<ClassName<CacheListener>> cacheListeners = regionCreateArgs.getCacheListeners();
-      for (String cacheListener : cacheListeners) {
-        Class<CacheListener<K, V>> cacheListenerKlass =
-            CliUtil.forName(cacheListener, CliStrings.CREATE_REGION__CACHELISTENER);
-        factory.addCacheListener(
-            CliUtil.newInstance(cacheListenerKlass, CliStrings.CREATE_REGION__CACHELISTENER));
+      List<CacheListener<K, V>> newListeners = new ArrayList<>();
+      for (ClassName<CacheListener> cacheListener : cacheListeners) {
+        newListeners.add(cacheListener.newInstance(cache));
+      factory.initCacheListeners(newListeners.toArray(new CacheListener[0]));
-    final String cacheLoader = regionCreateArgs.getCacheLoader();
+    final ClassName<CacheLoader> cacheLoader = regionCreateArgs.getCacheLoader();
-      Class<CacheLoader<K, V>> cacheLoaderKlass =
-          CliUtil.forName(cacheLoader, CliStrings.CREATE_REGION__CACHELOADER);
-      factory.setCacheLoader(
-          CliUtil.newInstance(cacheLoaderKlass, CliStrings.CREATE_REGION__CACHELOADER));
+      factory.setCacheLoader(cacheLoader.newInstance(cache));
-    final String cacheWriter = regionCreateArgs.getCacheWriter();
+    final ClassName<CacheWriter> cacheWriter = regionCreateArgs.getCacheWriter();
-      Class<CacheWriter<K, V>> cacheWriterKlass =
-          CliUtil.forName(cacheWriter, CliStrings.CREATE_REGION__CACHEWRITER);
-      factory.setCacheWriter(
-          CliUtil.newInstance(cacheWriterKlass, CliStrings.CREATE_REGION__CACHEWRITER));
+      factory.setCacheWriter(cacheWriter.newInstance(cache));

MOV26 MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 UPD43 UPD42 MOV60 MOV60 MOV60 MOV25 INS25 INS25 INS25 INS25 INS32 INS32 INS32 INS8 INS32 INS8 UPD74 MOV27 INS74 MOV27 INS8 INS74 MOV27 INS8 UPD42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS21 INS42 INS42 MOV21 INS74 MOV60 INS70 INS43 INS43 INS21 INS43 MOV43 MOV21 INS42 INS42 INS42 INS42 INS32 UPD43 MOV43 INS43 UPD74 INS44 INS42 INS8 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 UPD42 INS32 UPD42 INS42 INS42 INS32 UPD42 UPD42 INS42 UPD43 UPD42 INS14 INS74 INS42 INS21 UPD42 INS42 INS42 INS32 UPD42 INS32 INS42 UPD42 MOV32 INS42 INS42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 INS74 UPD43 MOV43 UPD43 MOV43 INS32 UPD42 UPD42 INS3 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS42 UPD42 MOV42 UPD42 UPD42 INS43 UPD42 UPD42 INS42 INS42 INS32 INS5 INS34 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS85 UPD42 UPD42 INS42 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL33 DEL27 DEL42 DEL40 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL40 DEL42 DEL43 DEL42 DEL44 DEL42 DEL8 DEL70 DEL8 DEL25 DEL43 DEL43 DEL40 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL40 DEL32 DEL59 DEL60 DEL8 DEL25