Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
-   
+
+
- * A message that is sent to a particular distribution manager to
- * fetch its health diagnosis
+ * A message that is sent to a particular distribution manager to fetch its health diagnosis
+ * 
-    m.init_( id, healthCode );
+    m.init_(id, healthCode);
-    init_( 0, null );
+    init_(0, null);
-  @Override  
+  @Override
-    return FetchHealthDiagnosisResponse.create(dm, this.getSender(),
-                                               this.id, this.healthCode);
+    return FetchHealthDiagnosisResponse.create(dm, this.getSender(), this.id, this.healthCode);
-  @Override  
+  @Override
-  @Override  
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  @Override
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    init_( i, oHC );
+    init_(i, oHC);
-  @Override  
+  @Override
-    return LocalizedStrings.FetchHealthDiagnosisRequest_FETCHHEALTHDIAGNOSISREQUEST_FROM_ID_1_HEALTHCODE_2.toLocalizedString(new Object[] {this.getRecipient(), Integer.valueOf(this.id), this.healthCode});
+    return LocalizedStrings.FetchHealthDiagnosisRequest_FETCHHEALTHDIAGNOSISREQUEST_FROM_ID_1_HEALTHCODE_2
+        .toLocalizedString(
+            new Object[] {this.getRecipient(), Integer.valueOf(this.id), this.healthCode});
-  private void init_( int i, GemFireHealth.Health oHC ) {
+  private void init_(int i, GemFireHealth.Health oHC) {
-    this.friendlyName = LocalizedStrings.FetchHealthDiagnosisRequest_FETCH_HEALTH_DIAGNOSIS_FOR_HEALTH_CODE_0.toLocalizedString(this.healthCode);
+    this.friendlyName =
+        LocalizedStrings.FetchHealthDiagnosisRequest_FETCH_HEALTH_DIAGNOSIS_FOR_HEALTH_CODE_0
+            .toLocalizedString(this.healthCode);

UPD66 DEL66