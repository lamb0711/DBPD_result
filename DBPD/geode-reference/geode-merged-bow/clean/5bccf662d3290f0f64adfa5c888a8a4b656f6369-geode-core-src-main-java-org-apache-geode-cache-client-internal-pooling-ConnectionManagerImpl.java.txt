GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.ConnectionManagerImpl_ERROR_CLOSING_CONNECTION_0, pooledConn), e);
+        logger.warn(String.format("Error closing connection %s", pooledConn), e);
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.ConnectionManagerImpl_TIMEOUT_WAITING_FOR_LOAD_CONDITIONING_TASKS_TO_COMPLETE));
+          logger.warn("Timeout waiting for load conditioning tasks to complete");
-      logger.error(LocalizedMessage.create(
-          LocalizedStrings.ConnectionManagerImpl_ERROR_STOPPING_LOADCONDITIONINGPROCESSOR), e);
+      logger.error("Error stopping loadConditioningProcessor", e);
-          LocalizedMessage.create(
-              LocalizedStrings.ConnectionManagerImpl_INTERRUPTED_STOPPING_LOADCONDITIONINGPROCESSOR),
+          "Interrupted stopping loadConditioningProcessor",
-      logInfo(LocalizedStrings.ConnectionManagerImpl_ERROR_PREFILLING_CONNECTIONS, t);
+      logInfo("Error prefilling connections", t);
-            .info(LocalizedStrings.ConnectionManagerImpl_UNABLE_TO_PREFILL_POOL_TO_MINIMUM_BECAUSE_0
-                .toLocalizedString(ex.getMessage()));
+            .info(String.format("Unable to prefill pool to minimum because: %s",
+                ex.getMessage()));
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.ConnectionManagerImpl_LOADCONDITIONINGTASK_0_ENCOUNTERED_EXCEPTION,
-            this), t);
+        logger.warn(String.format("LoadConditioningTask <%s> encountered exception",
+            this),
+            t);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.ConnectionManagerImpl_IDLEEXPIRECONNECTIONSTASK_0_ENCOUNTERED_EXCEPTION,
-            this), t);
+        logger.warn(String.format("IdleExpireConnectionsTask <%s> encountered exception",
+            this),
+            t);
-              LocalizedStrings.ConnectionManagerImpl_SECURITY_EXCEPTION_CONNECTING_TO_SERVER_0_1,
-              new Object[] {sl, e});
+              String.format("Security exception connecting to server '%s': %s",
+                  new Object[] {sl, e}));
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.ConnectionManagerImpl_SERVER_0_REFUSED_NEW_CONNECTION_1,
-              new Object[] {sl, srce}));
+          logger.warn("Server '{}' refused new connection: {}",
+              new Object[] {sl, srce});
-            logger.info(LocalizedMessage.create(
-                LocalizedStrings.ConnectionManagerImpl_ERROR_CLOSING_CONNECTION_TO_SERVER_0,
-                pc.getServer()), se);
+            logger.info("Error closing connection to server " +
+                pc.getServer(),
+                se);
-            logger.warn(LocalizedMessage.create(
-                LocalizedStrings.ConnectionManagerImpl_ERROR_CLOSING_CONNECTION_TO_SERVER_0,
-                pc.getServer()), e);
+            logger.warn("Error closing connection to server " +
+                pc.getServer(),
+                e);
-            logger.warn(LocalizedMessage.create(
-                LocalizedStrings.ConnectionManagerImpl_ERROR_EXPIRING_CONNECTION_0, connection));
+            logger.warn("Error expiring connection {}", connection);
-  private void logInfo(StringId message, Throwable t) {
+  private void logInfo(String message, Throwable t) {
-      securityLogWriter.info(LocalizedStrings.TWO_ARG_COLON,
-          new Object[] {message.toLocalizedString(), t}, t);
+      securityLogWriter.info(String.format("%s : %s",
+          new Object[] {message, t}, t));
-      logger.info(LocalizedMessage.create(LocalizedStrings.TWO_ARG_COLON,
-          new Object[] {message.toLocalizedString(), t}), t);
+      logger.info(String.format("%s : %s",
+          new Object[] {message, t}), t);

UPD43 MOV8 UPD42 INS32 UPD42 INS42 INS42 MOV32 MOV3 INS42 INS45 INS45 INS45 UPD42 UPD42 INS45 INS42 UPD42 UPD42 INS45 UPD42 UPD42 INS45 UPD42 UPD42 INS45 INS42 INS42 UPD42 UPD42 INS45 INS45 UPD42 INS42 INS45 INS32 MOV32 INS42 INS42 MOV32 UPD42 UPD42 INS45 INS45 MOV42 UPD42 UPD42 INS45 INS27 INS27 INS45 MOV32 INS45 MOV32 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32