GEODE-1669: Made changes to add/remove list of interested keys using addAll() and removeAll()

The client interests are managed in "FilterProfile" class on server side. These are maintained
using the concurrent data structures CopyOnWriteHashSet and CopyOnWriteHashMap...

When set of keys are registered from client, the keys are added to CopyOnWriteHashSet one by
one (FilterProfile.registerClientInterestList()); Where a new HashSet is created each time when
an entry is added, which could impact performance based on the number of keys registered.

Testing:
precheckin
Added new unit test.

-    Set keysRegistered = new HashSet();
+    Set keysRegistered = new HashSet(keys);
-      Map<Object, Set> koi = updatesAsInvalidates?
-          getKeysOfInterestInv() : getKeysOfInterest();
-      Set interestList = koi.get(clientID);
+      Map<Object, Set> koi = updatesAsInvalidates?getKeysOfInterestInv():getKeysOfInterest();
+      CopyOnWriteHashSet interestList = (CopyOnWriteHashSet)koi.get(clientID);
+      } else {
+        // Get the list of keys that will be registered new, not already registered.
+        keysRegistered.removeAll(interestList.getSnapshot());
-      for (Object key: keys) { 
-        if (interestList.add(key)) { 
-          keysRegistered.add(key); 
-        } 
-      } 
+      interestList.addAll(keys);
+
-    Set keysUnregistered = new HashSet(); 
+    Set keysUnregistered = new HashSet(keys);
+    Set keysNotUnregistered = new HashSet(keys);
-      Set interestList = getKeysOfInterest().get(clientID);
+      CopyOnWriteHashSet interestList = (CopyOnWriteHashSet)getKeysOfInterest().get(clientID);
-        for (Iterator i = keys.iterator(); i.hasNext();) { 
-          Object keyOfInterest = i.next(); 
-          if (interestList.remove(keyOfInterest)) { 
-            keysUnregistered.add(keyOfInterest); 
-          } 
-        }       
+        // Get the list of keys that are not registered but in unregister set.
+        keysNotUnregistered.removeAll(interestList.getSnapshot());
+        interestList.removeAll(keys);
+
-      interestList = getKeysOfInterestInv().get(clientID);
+      interestList = (CopyOnWriteHashSet)getKeysOfInterestInv().get(clientID);
-        for (Iterator i = keys.iterator(); i.hasNext();) { 
-          Object keyOfInterest = i.next(); 
-          if (interestList.remove(keyOfInterest)) { 
-            keysUnregistered.add(keyOfInterest); 
-          } 
-        }       
+        keysNotUnregistered.removeAll(interestList.getSnapshot());
+        interestList.removeAll(keys);
+
+
+    // Get the keys that are not unregistered.
+    keysUnregistered.removeAll(keysNotUnregistered);

INS60 INS21 MOV43 INS59 INS32 MOV21 INS42 INS14 INS42 INS42 INS42 INS42 UPD43 INS8 INS42 INS43 INS42 INS43 UPD42 INS11 INS21 UPD42 UPD42 UPD42 INS42 INS42 INS11 INS21 MOV21 INS11 INS21 MOV21 INS43 MOV32 INS32 INS43 MOV32 INS32 INS43 MOV32 INS32 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 UPD42 UPD42 INS42 INS42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL8 DEL25 DEL8 DEL24 DEL42 DEL43 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL8 DEL25 DEL8 DEL24