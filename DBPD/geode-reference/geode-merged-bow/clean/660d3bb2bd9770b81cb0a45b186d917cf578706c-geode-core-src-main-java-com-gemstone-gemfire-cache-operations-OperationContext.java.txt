GEODE-17: Convert OperationCode to enum

-import java.util.HashMap;
-import java.util.Map;
-
-import com.gemstone.gemfire.cache.Cache;
-import com.gemstone.gemfire.cache.Region;
-
- * 
+ *
- * 
+ *
-   * 
+   *
-  public static final class OperationCode {
-
-    private static final byte OP_GET = 1;
-
-    private static final byte OP_PUT = 2;
-
-    private static final byte OP_DESTROY = 3;
-
-    private static final byte OP_INVALIDATE = 4;
-
-    private static final byte OP_REGISTER_INTEREST = 5;
-
-    private static final byte OP_UNREGISTER_INTEREST = 6;
-
-    private static final byte OP_CONTAINS_KEY = 7;
-
-    private static final byte OP_KEY_SET = 8;
-
-    private static final byte OP_QUERY = 9;
-
-    private static final byte OP_EXECUTE_CQ = 10;
-
-    private static final byte OP_STOP_CQ = 11;
-
-    private static final byte OP_CLOSE_CQ = 12;
-
-    private static final byte OP_REGION_CLEAR = 13;
-
-    private static final byte OP_REGION_CREATE = 14;
-
-    private static final byte OP_REGION_DESTROY = 15;
-    
-    private static final byte OP_PUTALL = 16;
-    
-    private static final byte OP_EXECUTE_FUNCTION = 17;
-    
-    private static final byte OP_GET_DURABLE_CQS = 18;
-    
-    private static final byte OP_REMOVEALL = 19;
-    
-    private static final byte OP_RESOURCE = 20;
-    
-    private static final byte OP_LIST = 21;
-
-    private static final byte OP_CREATE_QUERY = 22;
-
-    private static final byte OP_UPDATE_QUERY = 23;
-
-    private static final byte OP_DELETE_QUERY = 24;
-
-    private static final OperationCode[] VALUES = new OperationCode[25];
-
-    private static final Map OperationNameMap = new HashMap();
-
-    /**
-     * A LIST operation.
-     * LIST regions, registered functions, named queries in DS.
-     */
-    public static final OperationCode LIST = new OperationCode(
-        "LIST", OP_LIST);
-
-    /**
-     * A create parameterized query operation with developer REST APIs.
-     */
-    public static final OperationCode CREATE_QUERY = new OperationCode(
-        "CREATE_QUERY", OP_CREATE_QUERY);
-
-    /**
-     * A update parameterized query operation with developer REST APIs.
-     */
-    public static final OperationCode UPDATE_QUERY = new OperationCode(
-        "UPDATE_QUERY", OP_UPDATE_QUERY);
-
-    /**
-     * A delete parameterized query operation with developer REST APIs.
-     */
-    public static final OperationCode DELETE_QUERY = new OperationCode(
-        "DELETE_QUERY", OP_DELETE_QUERY);
-
-    /**
-     * An entry get operation.
-     * 
-     * @see Region#get(Object)
-     */
-    public static final OperationCode GET = new OperationCode("GET", OP_GET);
-
-    /**
-     * An entry create/update operation.
-     * 
-     * @see Region#put(Object, Object)
-     */
-    public static final OperationCode PUT = new OperationCode("PUT", OP_PUT);
-
-    /**
-     * An map putAll operation.
-     * 
-     * @see Region#putAll(Map map)
-     */
-    public static final OperationCode PUTALL = new OperationCode("PUTALL", OP_PUTALL);
-    
-    /**
-     * A region removeAll operation.
-     * 
-     * @see Region#removeAll(java.util.Collection)
-     * @since 8.1
-     */
-    public static final OperationCode REMOVEALL = new OperationCode("REMOVEALL", OP_REMOVEALL);
-    
-    /**
-     * An entry destroy operation.
-     * 
-     * @see Region#destroy(Object, Object)
-     */
-    public static final OperationCode DESTROY = new OperationCode("DESTROY",
-        OP_DESTROY);
-
-    /**
-     * An entry invalidate operation.
-     * 
-     * @see Region#invalidate(Object, Object)
-     */
-    public static final OperationCode INVALIDATE = new OperationCode(
-        "INVALIDATE", OP_INVALIDATE);
-
-    /**
-     * A register interest operation.
-     * 
-     * @see Region#registerInterest(Object)
-     */
-    public static final OperationCode REGISTER_INTEREST = new OperationCode(
-        "REGISTER_INTEREST", OP_REGISTER_INTEREST);
-
-    /**
-     * An unregister interest operation.
-     * 
-     * @see Region#unregisterInterest
-     */
-    public static final OperationCode UNREGISTER_INTEREST = new OperationCode(
-        "UNREGISTER_INTEREST", OP_UNREGISTER_INTEREST);
-
-    /**
-     * A region <code>containsKey</code> operation.
-     * 
-     * @see Region#containsKey
-     */
-    public static final OperationCode CONTAINS_KEY = new OperationCode(
-        "CONTAINS_KEY", OP_CONTAINS_KEY);
-
-    /**
-     * A region <code>keySet</code> operation.
-     * 
-     * @see Region#keySet
-     */
-    public static final OperationCode KEY_SET = new OperationCode("KEY_SET",
-        OP_KEY_SET);
-
-    /**
-     * A cache query operation.
-     * 
-     * @see Region#query
-     */
-    public static final OperationCode QUERY = new OperationCode("QUERY",
-        OP_QUERY);
-
-    /**
-     * A continuous query execution operation.
-     */
-    public static final OperationCode EXECUTE_CQ = new OperationCode(
-        "EXECUTE_CQ", OP_EXECUTE_CQ);
-
-    /**
-     * A continuous query stop operation.
-     */
-    public static final OperationCode STOP_CQ = new OperationCode("STOP_CQ",
-        OP_STOP_CQ);
-
-    /**
-     * A continuous query close operation.
-     */
-    public static final OperationCode CLOSE_CQ = new OperationCode("CLOSE_CQ",
-        OP_CLOSE_CQ);
-
-    /**
-     * A region clear operation.
-     * 
-     * @see Region#clear
-     */
-    public static final OperationCode REGION_CLEAR = new OperationCode(
-        "REGION_CLEAR", OP_REGION_CLEAR);
-
-    /**
-     * A region create operation.
-     * 
-     * @see Region#createSubregion
-     * @see Cache#createRegion
-     */
-    public static final OperationCode REGION_CREATE = new OperationCode(
-        "REGION_CREATE", OP_REGION_CREATE);
-
-    /**
-     * A region destroy operation.
-     * 
-     * @see Region#destroyRegion(Object)
-     */
-    public static final OperationCode REGION_DESTROY = new OperationCode(
-        "REGION_DESTROY", OP_REGION_DESTROY);
-    
-    /**
-     * A function execution operation
-     */
-    public static final OperationCode EXECUTE_FUNCTION = new OperationCode(
-        "EXECUTE_FUNCTION", OP_EXECUTE_FUNCTION);
-    
-    /**
-     * A get durable continuous query operation
-     */
-    public static final OperationCode GET_DURABLE_CQS = new OperationCode(
-        "GET_DURABLE_CQS", OP_GET_DURABLE_CQS);
-    
-    
-    /**
-     * A resource operation. See ResourceOperationContext for more details
-     */
-    public static final OperationCode RESOURCE = new OperationCode(
-        "RESOURCE", OP_RESOURCE);
-
-    /** The name of this operation. */
-    private final String name;
-
-    /**
-     * One of the following: OP_GET, OP_CREATE, OP_UPDATE, OP_INVALIDATE,
-     * OP_DESTROY, OP_REGISTER_INTEREST, OP_REGISTER_INTEREST_REGEX,
-     * OP_UNREGISTER_INTEREST, OP_UNREGISTER_INTEREST_REGEX, OP_QUERY,
-     * OP_REGION_CREATE, OP_REGION_DESTROY, OP_PUTALL
-     */
-    private final byte opCode;
-
-    /** Creates a new instance of Operation. */
-    private OperationCode(String name, byte opCode) {
-      this.name = name;
-      this.opCode = opCode;
-      VALUES[opCode] = this;
-      OperationNameMap.put(name, this);
-    }
+  public enum OperationCode {
+    GET,
+    PUT,
+    DESTROY,
+    INVALIDATE,
+    REGISTER_INTEREST,
+    UNREGISTER_INTEREST,
+    CONTAINS_KEY,
+    KEY_SET,
+    QUERY,
+    EXECUTE_CQ,
+    STOP_CQ,
+    CLOSE_CQ,
+    REGION_CLEAR,
+    REGION_CREATE,
+    REGION_DESTROY,
+    PUTALL,
+    EXECUTE_FUNCTION,
+    GET_DURABLE_CQS,
+    REMOVEALL,
+    RESOURCE,
+    LIST,
+    CREATE_QUERY,
+    UPDATE_QUERY,
+    DELETE_QUERY;
-      return (this.opCode == OP_LIST);
+      return (this == LIST);
-      return (this.opCode == OP_CREATE_QUERY);
+      return (this == CREATE_QUERY);
-      return (this.opCode == OP_UPDATE_QUERY);
+      return (this == UPDATE_QUERY);
-      return (this.opCode == OP_DELETE_QUERY);
+      return (this == DELETE_QUERY);
-      return (this.opCode == OP_GET);
+      return (this == GET);
-      return (this.opCode == OP_PUT);
+      return (this == PUT);
-    
+
-      return (this.opCode == OP_PUTALL);
+      return (this == PUTALL);
-    
+
-      return (this.opCode == OP_REMOVEALL);
+      return (this == REMOVEALL);
-      return (this.opCode == OP_DESTROY);
+      return (this == DESTROY);
-      return (this.opCode == OP_INVALIDATE);
+      return (this == INVALIDATE);
-      return (this.opCode == OP_REGISTER_INTEREST);
+      return (this == REGISTER_INTEREST);
-      return (this.opCode == OP_UNREGISTER_INTEREST);
+      return (this == UNREGISTER_INTEREST);
-      return (this.opCode == OP_CONTAINS_KEY);
+      return (this == CONTAINS_KEY);
-      return (this.opCode == OP_KEY_SET);
+      return (this == KEY_SET);
-      return (this.opCode == OP_QUERY);
+      return (this == QUERY);
-      return (this.opCode == OP_EXECUTE_CQ);
+      return (this == EXECUTE_CQ);
-      return (this.opCode == OP_STOP_CQ);
+      return (this == STOP_CQ);
-      return (this.opCode == OP_CLOSE_CQ);
+      return (this == CLOSE_CQ);
-      return (this.opCode == OP_REGION_CLEAR);
+      return (this == REGION_CLEAR);
-      return (this.opCode == OP_REGION_CREATE);
+      return (this == REGION_CREATE);
-      return (this.opCode == OP_REGION_DESTROY);
+      return (this == REGION_DESTROY);
-    
+
-      return (this.opCode == OP_EXECUTE_FUNCTION);
+      return (this == EXECUTE_FUNCTION);
-      return (this.opCode == OP_GET_DURABLE_CQS);
-    }
-    
-    /**
-     * Returns the <code>OperationCode</code> represented by specified byte.
-     */
-    public static OperationCode fromOrdinal(byte opCode) {
-      return VALUES[opCode];
+      return (this == GET_DURABLE_CQS);
-    /**
-     * Returns the <code>OperationCode</code> represented by specified string.
-     */
-    public static OperationCode parse(String operationName) {
-      return (OperationCode)OperationNameMap.get(operationName);
-    }
-    /**
-     * Returns the byte representing this operation code.
-     * 
-     * @return a byte representing this operation.
-     */
-    public byte toOrdinal() {
-      return this.opCode;
-    }
-
-    /**
-     * Returns a string representation for this operation.
-     * 
-     * @return the name of this operation.
-     */
-    @Override
-    final public String toString() {
-      return this.name;
-    }
-
-    /**
-     * Indicates whether other object is same as this one.
-     * 
-     * @return true if other object is same as this one.
-     */
-    @Override
-    final public boolean equals(final Object obj) {
-      if (obj == this) {
-        return true;
-      }
-      if (!(obj instanceof OperationCode)) {
-        return false;
-      }
-      final OperationCode other = (OperationCode)obj;
-      return (other.opCode == this.opCode);
-    }
-
-    /**
-     * Indicates whether other <code>OperationCode</code> is same as this one.
-     * 
-     * @return true if other <code>OperationCode</code> is same as this one.
-     */
-    final public boolean equals(final OperationCode opCode) {
-      return (opCode != null && opCode.opCode == this.opCode);
-    }
-
-    /**
-     * Returns a hash code value for this <code>OperationCode</code> which is
-     * the same as the byte representing its operation type.
-     * 
-     * @return the hashCode of this operation.
-     */
-    @Override
-    final public int hashCode() {
-      return this.opCode;
-    }
-   * 
+   *
-   * 
+   *
-      switch (getOperationCode().opCode) {
-        case OperationCode.OP_PUT:
-        case OperationCode.OP_PUTALL:
-        case OperationCode.OP_DESTROY:
-        case OperationCode.OP_REMOVEALL:
-        case OperationCode.OP_INVALIDATE:
-        case OperationCode.OP_REGION_CREATE:
-        case OperationCode.OP_REGION_DESTROY:
-        case OperationCode.OP_REGION_CLEAR:
+      switch (getOperationCode()) {
+        case PUT:
+        case PUTALL:
+        case DESTROY:
+        case REMOVEALL:
+        case INVALIDATE:
+        case REGION_CREATE:
+        case REGION_DESTROY:
+        case REGION_CLEAR:
-            || opCode.isRemoveAll()
-            || opCode.isInvalidate() || opCode.isRegionCreate()
-            || opCode.isRegionDestroy() || opCode.isRegionClear());
+        || opCode.isRemoveAll()
+        || opCode.isInvalidate() || opCode.isRegionCreate()
+        || opCode.isRegionDestroy() || opCode.isRegionClear());

INS71 MOV29 INS83 INS42 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS72 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV29 MOV83 MOV39 MOV42 MOV8 MOV32 INS49 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS52 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL83 DEL83 DEL83 DEL42 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL42 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL40 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL67 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL67 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL67 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL67 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL67 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL67 DEL65 DEL42 DEL42 DEL67 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL2 DEL52 DEL7 DEL21 DEL42 DEL42 DEL42 DEL52 DEL32 DEL21 DEL8 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL2 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL52 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL9 DEL41 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL40 DEL52 DEL42 DEL22 DEL27 DEL36 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL40 DEL52 DEL42 DEL22 DEL27 DEL27 DEL36 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL55 DEL42 DEL22 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL49