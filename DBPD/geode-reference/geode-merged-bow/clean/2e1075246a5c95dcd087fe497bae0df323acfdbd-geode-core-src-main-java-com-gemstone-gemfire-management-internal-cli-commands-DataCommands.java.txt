Merge branch 'release/1.0.0-incubating.M3'

-import java.util.concurrent.CancellationException;
+import org.apache.geode.security.GeodePermission.Operation;
+import org.apache.geode.security.GeodePermission.Resource;
+import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
-import com.gemstone.gemfire.management.internal.security.Resource;
-import com.gemstone.gemfire.management.internal.security.ResourceConstants;
-import com.gemstone.gemfire.management.internal.security.ResourceOperationContext.ResourceOperationCode;
- * @since 7.0
+ * @since GemFire 7.0
-  @CliMetaData(relatedTopic = { CliStrings.TOPIC_GEMFIRE_DATA,
-      CliStrings.TOPIC_GEMFIRE_REGION })
-  @ResourceOperation(resource = Resource.DISTRIBUTED_SYSTEM, operation= ResourceConstants.REBALANCE)
+  @CliMetaData(relatedTopic = { CliStrings.TOPIC_GEODE_DATA,
+      CliStrings.TOPIC_GEODE_REGION })
+  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+
-  @CliMetaData(relatedTopic = { CliStrings.TOPIC_GEMFIRE_DATA,
-      CliStrings.TOPIC_GEMFIRE_REGION })
-  @ResourceOperation(resource = Resource.REGION, operation= ResourceConstants.EXPORT_DATA)
+  @CliMetaData(relatedTopic = { CliStrings.TOPIC_GEODE_DATA,
+      CliStrings.TOPIC_GEODE_REGION
+  })
+    GeodeSecurityUtil.authorizeRegionRead(regionName);
-    if (!filePath.endsWith(CliStrings.GEMFIRE_DATA_FILE_EXTENSION)) {
+    if (!filePath.endsWith(CliStrings.GEODE_DATA_FILE_EXTENSION)) {
-          CliStrings.GEMFIRE_DATA_FILE_EXTENSION));
+          CliStrings.GEODE_DATA_FILE_EXTENSION));
-  @CliMetaData(relatedTopic = { CliStrings.TOPIC_GEMFIRE_DATA,
-      CliStrings.TOPIC_GEMFIRE_REGION })
-  @ResourceOperation(resource = Resource.REGION, operation= ResourceConstants.IMPORT_DATA)
+  @CliMetaData(relatedTopic = { CliStrings.TOPIC_GEODE_DATA,
+      CliStrings.TOPIC_GEODE_REGION
+  })
+    GeodeSecurityUtil.authorizeRegionWrite(regionName);
+
-      if (!filePath.endsWith(CliStrings.GEMFIRE_DATA_FILE_EXTENSION)) {
+      if (!filePath.endsWith(CliStrings.GEODE_DATA_FILE_EXTENSION)) {
-            CliStrings.GEMFIRE_DATA_FILE_EXTENSION));
+            CliStrings.GEODE_DATA_FILE_EXTENSION));
-      CliStrings.TOPIC_GEMFIRE_DATA, CliStrings.TOPIC_GEMFIRE_REGION })
+      CliStrings.TOPIC_GEODE_DATA, CliStrings.TOPIC_GEODE_REGION
+  })
-  @ResourceOperation(resource = Resource.REGION, operation= ResourceConstants.PUT)
+    GeodeSecurityUtil.authorizeRegionWrite(regionPath);
-      CliStrings.TOPIC_GEMFIRE_DATA, CliStrings.TOPIC_GEMFIRE_REGION })
+      CliStrings.TOPIC_GEODE_DATA, CliStrings.TOPIC_GEODE_REGION
+  })
+    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+
+    Object result = GeodeSecurityUtil.postProcess(regionPath, key, dataResult.getGetResult());
+    dataResult.setGetResult(result);
+
-      CliStrings.TOPIC_GEMFIRE_DATA, CliStrings.TOPIC_GEMFIRE_REGION })
+      CliStrings.TOPIC_GEODE_DATA, CliStrings.TOPIC_GEODE_REGION
+  })
-  @ResourceOperation(resource = Resource.REGION, operation= ResourceConstants.LOCATE_ENTRY)
-    // Cache cache = CacheFactory.getAnyInstance();
+    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+
+
-      CliStrings.TOPIC_GEMFIRE_DATA, CliStrings.TOPIC_GEMFIRE_REGION })
+      CliStrings.TOPIC_GEODE_DATA, CliStrings.TOPIC_GEODE_REGION
+  })
-
+    if(removeAllKeys){
+      GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+    }
+    else {
+      GeodeSecurityUtil.authorizeRegionWrite(regionPath, key);
+    }
+
-      CliStrings.TOPIC_GEMFIRE_DATA, CliStrings.TOPIC_GEMFIRE_REGION })
+      CliStrings.TOPIC_GEODE_DATA, CliStrings.TOPIC_GEODE_REGION
+  })
-  @ResourceOperation(resource = Resource.DISTRIBUTED_SYSTEM, operation= ResourceConstants.QUERYDATA_DS)
-      @CliOption(key = CliStrings.QUERY__STEPNAME, mandatory = false, help = "Stpe name", unspecifiedDefaultValue = CliStrings.QUERY__STEPNAME__DEFAULTVALUE) String stepName,
+      @CliOption(key = CliStrings.QUERY__STEPNAME, mandatory = false, help = "Step name", unspecifiedDefaultValue = CliStrings.QUERY__STEPNAME__DEFAULTVALUE) String stepName,

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD66 INS21 INS21 INS21 INS21 INS60 INS21 INS21 INS25 UPD40 UPD40 INS32 INS32 INS32 INS32 INS43 INS59 INS32 INS32 INS42 INS8 INS8 UPD40 UPD40 UPD40 UPD40 INS42 INS42 INS42 UPD40 UPD40 INS42 INS42 INS42 UPD40 UPD40 INS42 INS42 INS42 UPD40 UPD40 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 UPD40 UPD40 INS42 INS42 INS42 INS42 UPD40 UPD40 INS21 INS21 UPD40 UPD40 UPD45 UPD40 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD40 UPD40 UPD40 DEL40 DEL26 DEL42 DEL42 DEL40 DEL80 DEL42 DEL40 DEL80 DEL77 DEL42 DEL42 DEL40 DEL80 DEL42 DEL40 DEL80 DEL77 DEL42 DEL42 DEL40 DEL80 DEL42 DEL40 DEL80 DEL77 DEL42 DEL42 DEL40 DEL80 DEL42 DEL40 DEL80 DEL77 DEL42 DEL42 DEL40 DEL80 DEL42 DEL40 DEL80 DEL77