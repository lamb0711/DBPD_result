GEODE-4317 add error handling to the experimental ProtobufDriver's Region implementation

I've added checks to ProtobufRegion for "error" responses from the server.
Along the way I found we were converting some keys to their string
representations and fixed that as well.

The exceptions thrown show the error text returned by the server.  The
handling of putAll responses was already looking for errors but wasn't
including the server's message text so I changed it to do so.

This closes #1322

-  @Override
-  public V get(K key) throws IOException {
-    final OutputStream outputStream = socket.getOutputStream();
-    ClientProtocol.Message.newBuilder()
-        .setRequest(ClientProtocol.Request.newBuilder().setGetRequest(RegionAPI.GetRequest
-            .newBuilder().setRegionName(name).setKey(ValueEncoder.encodeValue(key))))
-        .build().writeDelimitedTo(outputStream);
-
+  private ClientProtocol.Response readResponse() throws IOException {
-    return (V) ValueEncoder.decodeValue(ClientProtocol.Message.parseDelimitedFrom(inputStream)
-        .getResponse().getGetResponse().getResult());
+    ClientProtocol.Response response =
+        ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse();
+    final ClientProtocol.ErrorResponse errorResponse = response.getErrorResponse();
+    if (errorResponse != null && errorResponse.hasError()) {
+      throw new IOException(errorResponse.getError().getMessage());
+    }
+    return response;
+
-    final InputStream inputStream = socket.getInputStream();
-    return new RegionAttributes(ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse()
-        .getGetRegionResponse().getRegion());
+    return new RegionAttributes(readResponse().getGetRegionResponse().getRegion());
+  public V get(K key) throws IOException {
+    final OutputStream outputStream = socket.getOutputStream();
+    ClientProtocol.Message.newBuilder()
+        .setRequest(ClientProtocol.Request.newBuilder().setGetRequest(RegionAPI.GetRequest
+            .newBuilder().setRegionName(name).setKey(ValueEncoder.encodeValue(key))))
+        .build().writeDelimitedTo(outputStream);
+
+    final ClientProtocol.Response response = readResponse();
+    return (V) ValueEncoder.decodeValue(response.getGetResponse().getResult());
+  }
+
+  @Override
-      getAllRequest.addKey(ValueEncoder.encodeValue(key.toString()));
+      getAllRequest.addKey(ValueEncoder.encodeValue(key));
-    final InputStream inputStream = socket.getInputStream();
-    final RegionAPI.GetAllResponse getAllResponse =
-        ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getGetAllResponse();
+    final RegionAPI.GetAllResponse getAllResponse = readResponse().getGetAllResponse();
+    Map<Object, String> failures = new HashMap<>();
+    if (getAllResponse.getFailuresCount() > 0) {
+      for (BasicTypes.KeyedError keyedError : getAllResponse.getFailuresList()) {
+        failures.put(ValueEncoder.decodeValue(keyedError.getKey()),
+            keyedError.getError().getMessage());
+      }
+      throw new IOException("Unable to process the following keys: " + failures);
+    }
-    final InputStream inputStream = socket.getInputStream();
-    ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getPutResponse();
+    readResponse();
-    final InputStream inputStream = socket.getInputStream();
-    final RegionAPI.PutAllResponse putAllResponse =
-        ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getPutAllResponse();
+    final RegionAPI.PutAllResponse putAllResponse = readResponse().getPutAllResponse();
-      StringBuilder builder = new StringBuilder();
+      Map<Object, String> failures = new HashMap<>();
-        if (0 < builder.length()) {
-          builder.append(", ");
-        }
-        builder.append(ValueEncoder.decodeValue(keyedError.getKey()).toString());
+        failures.put(ValueEncoder.decodeValue(keyedError.getKey()),
+            keyedError.getError().getMessage());
-      throw new IOException("Unable to put the following keys: " + builder.toString());
+      throw new IOException("Unable to put the following keys: " + failures);
-    final InputStream inputStream = socket.getInputStream();
-    ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getRemoveResponse();
+    readResponse();

MOV31 INS31 INS83 INS43 INS42 INS43 INS8 INS40 INS42 MOV60 INS60 INS60 INS25 INS41 INS60 INS60 INS60 INS25 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS42 INS83 INS43 INS59 MOV83 MOV43 INS59 INS74 INS59 INS27 INS8 INS32 INS32 INS40 INS42 MOV32 INS40 INS42 INS32 INS27 INS32 INS53 INS40 INS42 INS32 INS42 INS32 INS43 INS43 INS43 UPD42 MOV42 INS14 INS32 INS34 INS70 INS53 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS33 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS74 UPD42 MOV42 UPD42 MOV42 INS44 INS32 INS8 INS14 INS74 INS43 INS32 INS42 INS43 INS43 INS42 INS42 INS42 INS21 INS43 INS27 UPD42 INS43 INS43 INS43 UPD42 INS42 INS32 INS42 UPD42 INS42 MOV42 INS42 INS40 INS32 INS42 INS45 INS42 INS42 INS42 UPD42 MOV42 INS74 MOV32 INS42 INS42 INS42 INS42 INS42 MOV32 INS32 INS43 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL32 DEL43 DEL32 DEL59 DEL60 DEL83 DEL42 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL43 DEL43 DEL34 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32