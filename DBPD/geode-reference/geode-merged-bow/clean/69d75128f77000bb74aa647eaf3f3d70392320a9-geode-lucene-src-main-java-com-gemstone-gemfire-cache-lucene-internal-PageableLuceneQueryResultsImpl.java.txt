Merge branch 'develop' into feature/GEODE-1571

+import java.util.Collections;
-  
+
+  /**
+   * * Current page of results
+   */
+  private List<LuceneResultStruct<K,V>> currentPage;
+
+  public List<LuceneResultStruct<K,V>> getHitEntries(int fromIndex, int toIndex) {
+    List<EntryScore<K>> scores = hits.subList(fromIndex, toIndex);
+    ArrayList<K> keys = new ArrayList<K>(scores.size());
+    for(EntryScore<K> score : scores) {
+      keys.add(score.getKey());
+    }
+
+    Map<K,V> values = userRegion.getAll(keys);
+
+    ArrayList<LuceneResultStruct<K,V>> results = new ArrayList<LuceneResultStruct<K,V>>(scores.size());
+    for(EntryScore<K> score : scores) {
+      V value = values.get(score.getKey());
+      if (value!=null)
+        results.add(new LuceneResultStructImpl(score.getKey(), value, score.getScore()));
+    }
+    return results;
+  }
+
-    
-    int end = currentHit + pageSize;
-    end = end > hits.size() ? hits.size() : end;
-    List<EntryScore<K>> scores = hits.subList(currentHit, end);
-    
-    ArrayList<K> keys = new ArrayList<K>(hits.size());
-    for(EntryScore<K> score : scores) {
-      keys.add(score.getKey());
-    }
-    
-    Map<K,V> values = userRegion.getAll(keys);
+    List<LuceneResultStruct<K,V>> result = advancePage();
+    currentPage = null;
+    return result;
+  }
-    ArrayList<LuceneResultStruct<K,V>> results = new ArrayList<LuceneResultStruct<K,V>>(hits.size());
-    for(EntryScore<K> score : scores) {
-      V value = values.get(score.getKey());
-      results.add(new LuceneResultStructImpl(score.getKey(), value, score.getScore()));
+  private List<LuceneResultStruct<K, V>> advancePage() {
+    if(currentPage != null) {
+      return currentPage;
-    
-    currentHit = end;
-    
-    return results;
+    int resultSize = (pageSize != Integer.MAX_VALUE) ? pageSize : hits.size();
+    currentPage = new ArrayList<LuceneResultStruct<K,V>>(resultSize);
+    while (currentPage.size()<pageSize && currentHit < hits.size()) {
+      int end = currentHit + pageSize - currentPage.size();
+      end = end > hits.size() ? hits.size() : end;
+      currentPage.addAll(getHitEntries(currentHit, end));
+      currentHit = end;
+    }
+    return currentPage;
-    return hits.size() > currentHit;
+
+    advancePage();
+    if ( currentPage.isEmpty() ) {
+      return false;
+    }
+    return true;

INS26 INS40 INS23 INS31 INS31 INS29 INS83 INS74 INS59 UPD42 INS44 INS44 MOV78 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 INS65 INS43 INS74 INS42 INS39 INS42 INS39 INS42 INS43 INS74 MOV25 INS60 INS21 INS41 INS43 INS74 INS25 INS60 INS21 INS61 INS41 INS21 INS25 INS41 INS66 INS42 INS43 INS43 INS43 MOV74 MOV74 INS42 INS43 INS43 INS43 INS74 INS59 INS7 INS42 INS42 INS43 INS43 INS43 INS27 INS8 INS39 INS59 INS7 INS27 INS8 INS42 INS32 INS32 INS8 INS9 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS43 INS74 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS42 INS33 INS41 INS42 INS16 INS42 INS14 INS27 INS27 MOV60 MOV21 INS21 MOV21 UPD42 MOV42 INS42 INS42 INS41 UPD42 UPD42 MOV74 INS32 MOV74 INS32 INS27 MOV21 INS42 INS43 INS43 INS43 INS42 INS42 INS36 INS42 MOV32 INS74 INS42 INS32 INS42 INS42 MOV32 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS27 INS43 INS74 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS40 INS42 INS43 INS43 INS43 MOV27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL27 DEL41