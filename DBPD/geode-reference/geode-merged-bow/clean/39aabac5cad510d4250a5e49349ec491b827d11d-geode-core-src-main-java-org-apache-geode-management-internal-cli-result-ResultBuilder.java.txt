Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

+import java.nio.file.Paths;
+import org.apache.commons.lang.StringUtils;
+
-  // Result with constant message & error code
-  public static final Result ERROR_RESULT_DEFAULT =
-      createErrorResult(ERRORCODE_DEFAULT, "Error occurred while executing command.");
-
-   * @return Result for connection error
-  public static Result createConnectionErrorResult(String message) {
+  public static CommandResult createConnectionErrorResult(String message) {
-  public static Result createShellClientErrorResult(String message) {
+  public static CommandResult createShellClientErrorResult(String message) {
-  public static Result createShellClientAbortOperationResult(String message) {
+  public static CommandResult createShellClientAbortOperationResult(String message) {
-   * @return Result for parsing error
-  public static Result createParsingErrorResult(String message) {
+  public static CommandResult createParsingErrorResult(String message) {
-  public static Result createBadConfigurationErrorResult(String message) {
+  public static CommandResult createBadConfigurationErrorResult(String message) {
-   * @return Result for error in Geode while executing command.
-  public static Result createGemFireErrorResult(String message) {
+  public static CommandResult createGemFireErrorResult(String message) {
-  public static Result createGemFireUnAuthorizedErrorResult(String message) {
+  public static CommandResult createGemFireUnAuthorizedErrorResult(String message) {
-  public static Result createUserErrorResult(String message) {
+  public static CommandResult createUserErrorResult(String message) {
-   * @return Result for unreadable command response.
-  public static Result createBadResponseErrorResult(String message) {
+  public static CommandResult createBadResponseErrorResult(String message) {
-   * @return Result object with the given error code & message. If there's an exception while
-   *         building result object, returns {@link #ERROR_RESULT_DEFAULT}
-  private static Result createErrorResult(int errorCode, String message) {
+  private static CommandResult createErrorResult(int errorCode, String message) {
-   * @return Result of InfoResultData type
-   * @return Result object built from the given ResultData
-  public static Result buildResult(ResultData resultData) {
+  public static CommandResult buildResult(ResultData resultData) {
-   * @return Result from the given GemFire JSON Object
-  public static Result fromJson(GfJsonObject gfJsonObject) {
+  public static CommandResult fromJson(GfJsonObject gfJsonObject) {
-   * @return Result object prepare from the JSON string. If it fails, creates an error Result for
-   *         Bad Response.
-  public static Result fromJson(String json) {
-    Result result;
+  public static CommandResult fromJson(String json) {
+    CommandResult result;
+      String fileToDownloadPath = jsonObject.getString("fileToDownload");
+      if (StringUtils.isNotBlank(fileToDownloadPath) && !fileToDownloadPath.equals("null")) {
+        result.setFileToDownload(Paths.get(fileToDownloadPath));
+      }
+

INS26 INS26 INS40 INS40 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 INS60 INS25 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS32 INS38 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL23 DEL66 DEL65 DEL66 DEL65 DEL66 DEL65 DEL66 DEL65 DEL66 DEL66 DEL42 DEL67 DEL65 DEL65 DEL66 DEL65 DEL66 DEL65 DEL66 DEL65 DEL66 DEL66 DEL65