GEODE-6883 Move the membership code into a separate gradle sub-project

This commit is focused on removing references to
InternalDistributedMember and DistributionMessage from "gms"
packages.

    GMS classes only refer to GMSMember
    GMS classes use GMSMembershipView.  NetView is now an interface
    GMS classes do not refer to DistributionMessage.  JGroupsMessenger
      expects GMSMessage instances.  Geode messages to be sent over UDP
      are wrapped in a GMSMessageAdapter.
    "gms" messages extend AbstractGMSMessage which implements GMSMessage
    GMSMembershipManager has an inner class that implements the GMS Manager
      interface and is now in the "adapter" package
    GMSMembershipManager translates GMSMembershipView into a MembershipView
      for the rest of Geode to use (this is the old NetView class)
    GMS instantiation allows us to inject the Manager into the new Services
      instance.
    Other adapter classes have been added to translate between Geode
      and GMS.

    GMSUtil has new methods for marshalling/unmarshalling
    InternalDistributedMember instances for backward-compatibility.
    GMSMember now has the same on-wire form as
    InternalDistributedMember.  This allows the GMS classes to
    deserialize a message from a pre-1.10 member whose code writes
    InternalDistributedMembers when serializing something like a
    JoinRequest.

-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
-public class JoinRequestMessage extends HighPriorityDistributionMessage {
-  private InternalDistributedMember memberID;
+public class JoinRequestMessage extends AbstractGMSMessage {
+  private GMSMember memberID;
+  private boolean useMulticast;
-  public JoinRequestMessage(InternalDistributedMember coord, InternalDistributedMember id,
+  public JoinRequestMessage(GMSMember coord, GMSMember id,
-    setRecipient(coord);
+    if (coord != null) {
+      setRecipient(coord);
+    }
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
+  public boolean getMulticast() {
+    return useMulticast;
-  public InternalDistributedMember getMemberID() {
+  @Override
+  public void setMulticast(boolean useMulticast) {
+    this.useMulticast = useMulticast;
+  }
+
+  public GMSMember getMemberID() {
-    return getShortClassName() + "(" + memberID
+    return getClass().getSimpleName() + "(" + memberID
-    DataSerializer.writeObject(memberID, out);
+    GMSUtil.writeMemberID(memberID, out);
-    out.writeBoolean(getMulticast());
+    out.writeBoolean(false);
-    memberID = DataSerializer.readObject(in);
+    memberID = GMSUtil.readMemberID(in);
-    setMulticast(in.readBoolean());
+    // setMulticast(in.readBoolean());
+    in.readBoolean();

UPD40 UPD40 UPD43 INS23 INS31 UPD42 UPD43 INS83 INS39 INS59 MOV78 INS83 INS39 INS42 INS8 INS78 UPD42 UPD43 UPD42 INS42 UPD43 UPD43 INS25 INS41 INS42 INS39 INS42 INS21 UPD42 UPD42 UPD42 INS27 INS8 INS42 INS7 MOV32 INS42 INS33 MOV21 INS22 INS42 INS32 UPD42 UPD42 INS9 INS52 INS42 INS32 INS42 UPD42 UPD42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL32 DEL42 DEL32 DEL42 DEL32