Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * {@link org.apache.geode.cache.PartitionAttributes#getFixedPartitionAttributes()}
- * returns all fixed partitions in Partitioned Region attributes. </p>
+ * {@link org.apache.geode.cache.PartitionAttributes#getFixedPartitionAttributes()} returns all
+ * fixed partitions in Partitioned Region attributes.
+ * </p>
- * configures <code>FixedPartitionAttributes</Code> in
- * <code>PartitionedRegionAttributes</code> </p>
+ * configures <code>FixedPartitionAttributes</Code> in <code>PartitionedRegionAttributes</code>
+ * </p>
-  
+
-  
+
-   * @param name
-   *          Name of the fixed partition.
+   * @param name Name of the fixed partition.
-    return new FixedPartitionAttributesImpl().setPartitionName(name).isPrimary(
-        DEFAULT_PRIMARY_STATUS).setNumBuckets(DEFAULT_NUM_BUCKETS);
+    return new FixedPartitionAttributesImpl().setPartitionName(name)
+        .isPrimary(DEFAULT_PRIMARY_STATUS).setNumBuckets(DEFAULT_NUM_BUCKETS);
-   * @param name
-   *          Name of the fixed partition.
-   * @param isPrimary
-   *          True if this member is the primary for the partition.
+   * @param name Name of the fixed partition.
+   * @param isPrimary True if this member is the primary for the partition.
-  final public static FixedPartitionAttributes createFixedPartition(
-      String name, boolean isPrimary) {
-    return new FixedPartitionAttributesImpl().setPartitionName(name).isPrimary(
-        isPrimary).setNumBuckets(DEFAULT_NUM_BUCKETS);
+  final public static FixedPartitionAttributes createFixedPartition(String name,
+      boolean isPrimary) {
+    return new FixedPartitionAttributesImpl().setPartitionName(name).isPrimary(isPrimary)
+        .setNumBuckets(DEFAULT_NUM_BUCKETS);
-   * @param name
-   *          Name of the fixed partition.
-   * @param isPrimary
-   *          True if this member is the primary for the partition.
-   * @param numBuckets
-   *          Number of buckets allowed for the partition.
+   * @param name Name of the fixed partition.
+   * @param isPrimary True if this member is the primary for the partition.
+   * @param numBuckets Number of buckets allowed for the partition.
-  final public static FixedPartitionAttributes createFixedPartition(
-      String name, boolean isPrimary, int numBuckets) {
-    return new FixedPartitionAttributesImpl().setPartitionName(name).isPrimary(
-        isPrimary).setNumBuckets(numBuckets);
+  final public static FixedPartitionAttributes createFixedPartition(String name, boolean isPrimary,
+      int numBuckets) {
+    return new FixedPartitionAttributesImpl().setPartitionName(name).isPrimary(isPrimary)
+        .setNumBuckets(numBuckets);
-   * @param name
-   *          Name of the fixed partition.
-   * @param numBuckets
-   *          Number of buckets allowed for the partition.
+   * @param name Name of the fixed partition.
+   * @param numBuckets Number of buckets allowed for the partition.
-  final public static FixedPartitionAttributes createFixedPartition(
-      String name, int numBuckets) {
-    return new FixedPartitionAttributesImpl().setPartitionName(name).isPrimary(
-        DEFAULT_PRIMARY_STATUS).setNumBuckets(numBuckets);
+  final public static FixedPartitionAttributes createFixedPartition(String name, int numBuckets) {
+    return new FixedPartitionAttributesImpl().setPartitionName(name)
+        .isPrimary(DEFAULT_PRIMARY_STATUS).setNumBuckets(numBuckets);

INS66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66