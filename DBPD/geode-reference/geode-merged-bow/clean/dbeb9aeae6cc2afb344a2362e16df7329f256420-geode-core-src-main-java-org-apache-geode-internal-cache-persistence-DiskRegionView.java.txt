Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-  public void setConfig(byte lruAlgorithm, byte lruAction, int lruLimit,
-                        int concurrencyLevel, int initialCapacity,
-                        float loadFactor, boolean statisticsEnabled,
-                        boolean isBucket, EnumSet<DiskRegionFlag> flags,
-                        String partitionName, int startingBucketId,
-                        String compressorClassName, boolean offHeap);
+
+  public void setConfig(byte lruAlgorithm, byte lruAction, int lruLimit, int concurrencyLevel,
+      int initialCapacity, float loadFactor, boolean statisticsEnabled, boolean isBucket,
+      EnumSet<DiskRegionFlag> flags, String partitionName, int startingBucketId,
+      String compressorClassName, boolean offHeap);
+
+
+
+
+
+
+
+
+
+
+
-  
+
-   * Return true if this region has data in disk to allow it be be recovered.
-   * Return false if it is a brand new region that has not yet written data to disk.
+   * Return true if this region has data in disk to allow it be be recovered. Return false if it is
+   * a brand new region that has not yet written data to disk.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-  /** Update stats*/
+
+  /** Update stats */
+
+
+
+
+
+
+
+

UPD66 UPD66 UPD66