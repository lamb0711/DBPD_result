Merge branch 'release/1.5.0'

-import org.apache.geode.internal.cache.tier.sockets.HandShake;
+import org.apache.geode.internal.cache.tier.sockets.EncryptorImpl;
+import org.apache.geode.internal.cache.tier.sockets.Handshake;
+   * Feature flag to enable multiple caches within a JVM.
+   */
+  public static boolean ALLOW_MULTIPLE_SYSTEMS =
+      Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "ALLOW_MULTIPLE_SYSTEMS");
+
+  /**
-  protected DM dm;
+  protected DistributionManager dm;
-  public static InternalDistributedSystem newInstanceForTesting(DM dm, Properties nonDefault) {
+  public static InternalDistributedSystem newInstanceForTesting(DistributionManager dm,
+      Properties nonDefault) {
-        HandShake.initCertsMap(this.config.getSecurityProps());
-        HandShake.initPrivateKey(this.config.getSecurityProps());
-        HandShake.initDHKeys(this.config);
+        EncryptorImpl.initCertsMap(this.config.getSecurityProps());
+        EncryptorImpl.initPrivateKey(this.config.getSecurityProps());
+        EncryptorImpl.initDHKeys(this.config);
-          this.dm = DistributionManager.create(this);
+          this.dm = ClusterDistributionManager.create(this);
-  void setDM(DM dm) {
+  void setDM(DistributionManager dm) {
-  /*
-   * public Cache myCache;
-   *
-   * public void setCache(Cache cache){ myCache=cache; } public Cache getCache(){ return myCache; }
-   */
-
-          InternalCache currentCache = GemFireCacheImpl.getInstance();
+          InternalCache currentCache = getCache();
-  public DM getDistributionManager() {
+  public DistributionManager getDistributionManager() {
-  public DM getDM() {
+  public DistributionManager getDM() {
-            throw new CacheClosedException(
-                LocalizedStrings.InternalDistributedSystem_SOME_REQUIRED_ROLES_MISSING
-                    .toLocalizedString());
+            InternalCache internalCache = dm.getCache();
+            if (internalCache == null) {
+              throw new CacheClosedException(
+                  LocalizedStrings.InternalDistributedSystem_SOME_REQUIRED_ROLES_MISSING
+                      .toLocalizedString());
+            } else {
+              throw internalCache.getCacheClosedException(
+                  LocalizedStrings.InternalDistributedSystem_SOME_REQUIRED_ROLES_MISSING
+                      .toLocalizedString());
+            }
-        DM newDM = this.reconnectDS.getDistributionManager();
-        if (newDM instanceof DistributionManager) {
+        DistributionManager newDM = this.reconnectDS.getDistributionManager();
+        if (newDM instanceof ClusterDistributionManager) {
-          if (newDM.getDMType() != DistributionManager.ADMIN_ONLY_DM_TYPE) {
+          if (newDM.getDMType() != ClusterDistributionManager.ADMIN_ONLY_DM_TYPE) {
+
+  public InternalCache getCache() {
+    return this.dm == null ? null : this.dm.getCache();
+  }

INS26 INS40 UPD40 INS23 INS31 INS29 INS83 INS83 INS39 INS59 UPD43 UPD43 UPD43 INS83 INS43 INS42 INS8 INS65 INS42 INS32 UPD42 UPD43 UPD43 UPD42 UPD42 INS42 INS41 INS66 INS42 INS42 INS27 UPD42 UPD42 INS16 INS40 INS45 INS27 INS33 INS32 MOV21 INS22 INS33 INS22 INS42 INS52 INS42 INS52 INS42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 INS60 INS25 UPD40 UPD42 UPD42 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS32 INS42 INS33 MOV53 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 DEL42