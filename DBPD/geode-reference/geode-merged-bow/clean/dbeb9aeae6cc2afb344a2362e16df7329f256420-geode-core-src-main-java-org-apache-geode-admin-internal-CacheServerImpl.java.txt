Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class CacheServerImpl extends ManagedSystemMemberImpl
-  implements CacheVm, CacheServer {
+public class CacheServerImpl extends ManagedSystemMemberImpl implements CacheVm, CacheServer {
-  ///////////////////////  Instance Fields  ///////////////////////
+  /////////////////////// Instance Fields ///////////////////////
-  /////////////////////////  Constructors  ////////////////////////
+  ///////////////////////// Constructors ////////////////////////
-   * Creates a new <code>CacheServerImpl</code> that represents a
-   * non-existsing (unstarted) cache server in a given distributed
-   * system.
+   * Creates a new <code>CacheServerImpl</code> that represents a non-existsing (unstarted) cache
+   * server in a given distributed system.
-  public CacheServerImpl(AdminDistributedSystemImpl system,
-                         CacheVmConfig config) 
-    throws AdminException {
+  public CacheServerImpl(AdminDistributedSystemImpl system, CacheVmConfig config)
+      throws AdminException {
-   * Creates a new <code>CacheServerImpl</code> that represents an
-   * existing dedicated cache server in a given distributed system.
+   * Creates a new <code>CacheServerImpl</code> that represents an existing dedicated cache server
+   * in a given distributed system.
-  public CacheServerImpl(AdminDistributedSystemImpl system,
-                         GemFireVM vm) 
-    throws AdminException {
+  public CacheServerImpl(AdminDistributedSystemImpl system, GemFireVM vm) throws AdminException {
-  //////////////////////  Instance Methods  //////////////////////
+  ////////////////////// Instance Methods //////////////////////
-  
+
-    DM dm = ((AdminDistributedSystemImpl)getDistributedSystem()).getDistributionManager();
-    if(dm == null) {
+    DM dm = ((AdminDistributedSystemImpl) getDistributedSystem()).getDistributionManager();
+    if (dm == null) {
-      }
-      catch (IllegalStateException e) {
+      } catch (IllegalStateException e) {
-    return ((DistributionManager)dm).getDistributionManagerIdsIncludingAdmin().contains(getDistributedMember());
+    return ((DistributionManager) dm).getDistributionManagerIdsIncludingAdmin()
+        .contains(getDistributedMember());
-  ////////////////////////  Command execution  ////////////////////////
+  //////////////////////// Command execution ////////////////////////
-   * @param durableClientId -
-   *                durable-id of the client
+   * @param durableClientId - durable-id of the client
-  public boolean isPrimaryForDurableClient(String durableClientId)
-  {
-    RemoteApplicationVM vm = (RemoteApplicationVM)this.getGemFireVM();
+  public boolean isPrimaryForDurableClient(String durableClientId) {
+    RemoteApplicationVM vm = (RemoteApplicationVM) this.getGemFireVM();
-}
+    }

UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66