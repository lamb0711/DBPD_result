GEODE-2644: Make AlertAppender optional and support log4j2.xml

AlertAppender is now configured in log4j2.xml and it supports sessions
that correspond with Cache lifecycle. This allows Geode to pause and
resume AlertAppender without resorting to dynamically adding and
removing appenders.

List of changes:
* Change AlertAppender to be pausable and session-oriented
* Make AlertAppender support configuration from log4j2.xml
* Log4j2 Core dependency is now optional
* Internal Alerting interfaces allow Alerting service to be pluggable
* Reduce coupling between Alerting and the rest of Geode
* Greatly increase test coverage for Alerting

+import org.apache.geode.internal.alerting.AlertingService;
-import org.apache.geode.internal.logging.log4j.AlertAppender;
+  private final AlertingService alertingService;
+
-      distributionManager = new ClusterDistributionManager(system, transport);
+      distributionManager =
+          new ClusterDistributionManager(system, transport, system.getAlertingService());
-      InternalDistributedSystem system) {
+      InternalDistributedSystem system, AlertingService alertingService) {
+    this.alertingService = alertingService;
-      RemoteTransportConfig transport) {
-    this(transport, system);
+      RemoteTransportConfig transport, AlertingService alertingService) {
+    this(transport, system, alertingService);
+  @Override
+  public AlertingService getAlertingService() {
+    return alertingService;
+  }
+
-    AlertAppender.getInstance().removeAlertListener(theId);
+    alertingService.removeAlertListener(theId);

MOV26 UPD40 INS23 INS31 INS83 INS83 INS43 INS59 INS44 INS44 INS78 INS83 INS43 INS42 INS8 INS42 INS42 INS43 INS42 INS21 INS43 INS42 INS42 INS42 INS41 INS42 INS7 INS42 INS42 INS42 INS22 INS42 UPD42 MOV42 INS52 INS42 INS32 INS42 INS42 DEL42 DEL32