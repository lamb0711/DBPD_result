GEODE-2804 Update InetSocketAddress, when there is IOException.

Geode keeps InetSocketAddress for locators. So, if locators ip
changes in cloud/VM enviroment then Geode process unable to
connect to locator. Thus we have fixed this problem in two way.

a. If Geode client sees IOException while connecting to locator then
we change cached InetAddress to use locator hostname. In this way,
client does DNS query again for locator host.
b. For other Geode process, now we connect to locator using hostname.

Added couple of junit tests for it.

+
-   * @return The reply, or null if no reply is expected
+   * @return the reply
-      ipAddr = new InetSocketAddress(addr, port); // fix for bug 30810
+      ipAddr = new InetSocketAddress(addr.getHostName(), port); // fix for bug 30810
+    return requestToServer(ipAddr, request, timeout, replyExpected);
+  }
+
+  /**
+   * Send a request to a Locator
+   * 
+   * @param ipAddr The locator's inet socket address
+   * @param request The request message
+   * @param timeout Timeout for sending the message and receiving a reply
+   * @param replyExpected Whether to wait for a reply
+   *
+   * @return The reply, or null if no reply is expected
+   *
+   * @throws IOException
+   * @throws ClassNotFoundException
+   */
+  public Object requestToServer(InetSocketAddress ipAddr, Object request, int timeout,
+      boolean replyExpected) throws IOException, ClassNotFoundException {
+    /*
+     * InetSocketAddress ipAddr; if (addr == null) { ipAddr = new InetSocketAddress(port); } else {
+     * ipAddr = new InetSocketAddress(addr, port); // fix for bug 30810 }
+     */

INS31 MOV29 INS83 INS43 INS42 MOV44 MOV44 INS44 INS44 INS44 INS43 INS43 INS8 INS29 INS44 INS65 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS42 MOV60 MOV25 INS41 INS65 INS65 INS65 INS65 INS65 MOV65 INS65 INS65 INS43 INS42 INS66 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL42