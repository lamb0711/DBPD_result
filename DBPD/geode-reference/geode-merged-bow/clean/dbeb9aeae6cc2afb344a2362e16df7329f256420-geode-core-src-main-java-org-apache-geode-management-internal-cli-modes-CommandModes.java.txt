Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-  private Map<String, Map<String, CommandMode>> modeMap = new HashMap<String, Map<String, CommandMode>>();
+  private Map<String, Map<String, CommandMode>> modeMap =
+      new HashMap<String, Map<String, CommandMode>>();
-    try {      
+    try {
-      String str = new String(bytes, 0, bytesRead);      
+      String str = new String(bytes, 0, bytesRead);
-      try{
+      try {
-      }catch(JSONException e){
+      } catch (JSONException e) {
-      } catch (IOException e) {        
+      } catch (IOException e) {
-  private void addCommandMode(String commandName) throws JSONException, IOException {    
+  private void addCommandMode(String commandName) throws JSONException, IOException {
-    String str = new String(bytes, 0, bytesRead); 
+    String str = new String(bytes, 0, bytesRead);
-  public Collection<CommandMode> getCommandModes(String name) {    
-    Map<String,CommandMode> commandModes =  modeMap.get(name);
-    if(commandModes!=null)
+  public Collection<CommandMode> getCommandModes(String name) {
+    Map<String, CommandMode> commandModes = modeMap.get(name);
+    if (commandModes != null)
-    else return null;
+    else
+      return null;
-  
-  public CommandMode getCommandMode(String commandName, String modeName) {    
-    Map<String,CommandMode> commandModes =  modeMap.get(commandName);
-    if(commandModes!=null)
+
+  public CommandMode getCommandMode(String commandName, String modeName) {
+    Map<String, CommandMode> commandModes = modeMap.get(commandName);
+    if (commandModes != null)
-    else return null;
+    else
+      return null;
-  } 
+  }

