Merge branch 'release/1.0.0-incubating.M3'

-import java.net.InetAddress;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.atomic.AtomicIntegerArray;
-
-import org.apache.logging.log4j.Logger;
-
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
-import com.gemstone.gemfire.internal.cache.CacheClientStatus;
-import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
-import com.gemstone.gemfire.internal.cache.IncomingGatewayStatus;
-import com.gemstone.gemfire.internal.cache.TXId;
-import com.gemstone.gemfire.internal.cache.TXManagerImpl;
+import com.gemstone.gemfire.internal.cache.*;
+import com.gemstone.gemfire.internal.concurrent.ConcurrentHashSet;
+import org.apache.logging.log4j.Logger;
+
+import java.net.InetAddress;
+import java.util.*;
+import java.util.concurrent.atomic.AtomicIntegerArray;
- * @since 4.2.3
+ * @since GemFire 4.2.3
+  private final Set<TXId> scheduledToBeRemovedTx = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "trackScheduledToBeRemovedTx") ?
+      new ConcurrentHashSet<TXId>() : null;
+
+  /**
+   * provide a test hook to track client transactions to be removed
+   */
+  public Set<TXId> getScheduledToBeRemovedTx() {
+    return scheduledToBeRemovedTx;
+  }
+
-   * transactionTimeToLive setting that is inherited from the CacheServer.
+   * transactionTimeToLive setting that is inherited from the TXManagerImpl.
-    CacheClientNotifier notifier = CacheClientNotifier.getInstance();
-    if (notifier == null || this._cache.isClosed()) {
-      return; // notifier is null when shutting down
+    if (this._cache.isClosed()) {
+      return; 
-    long timeout = notifier.getTransactionTimeToLive() * 1000;
-    if (txids.size() > 0) {
+    long timeout = txMgr.getTransactionTimeToLive() * 1000;
+    if (!txids.isEmpty()) {
+
+        if (scheduledToBeRemovedTx != null) scheduledToBeRemovedTx.addAll(txids);       
+            if (scheduledToBeRemovedTx != null) scheduledToBeRemovedTx.removeAll(txids);
-   * @since 5.1
+   * @since GemFire 5.1

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 INS23 INS31 INS83 INS83 INS74 INS59 INS29 INS83 INS74 INS42 INS8 UPD66 INS43 INS43 INS42 INS16 INS65 INS43 INS43 INS41 INS42 INS42 INS32 INS14 INS33 INS66 INS42 INS42 INS42 UPD66 MOV32 INS38 UPD66 INS42 INS42 INS27 INS74 INS32 INS40 INS45 INS43 INS43 MOV42 UPD42 MOV42 INS42 INS42 UPD42 INS25 INS27 INS21 MOV43 INS42 INS33 INS32 INS42 INS42 INS42 MOV43 INS25 INS27 INS21 INS42 INS33 INS32 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL27 DEL32 DEL34 DEL27