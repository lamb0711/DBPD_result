GEODE-6862: Add MALFORMED_LOG4J_MESSAGE to LogConsumer

* Rename MALFORMED_I18N_MESSAGE in Patterns
* Add MALFORMED_LOG4J_MESSAGE in Patterns
* Use MALFORMED_LOG4J_MESSAGE in isExceptionErrorOrSomeSpecialCase
* Move call to isExceptionErrorOrSomeSpecialCase because all matches
  in this method seem to be ignored by LogConsumer (this class is
  kind of a mess)

-import static org.apache.geode.test.greplogs.Patterns.MISFORMATTED_I18N_MESSAGE;
+import static org.apache.geode.test.greplogs.Patterns.MALFORMED_I18N_MESSAGE;
+import static org.apache.geode.test.greplogs.Patterns.MALFORMED_LOG4J_MESSAGE;
-    if (saveFlag || ERROR_OR_MORE_LOG_LEVEL.matcher(line).find()) {
+    if (saveFlag ||
+        ERROR_OR_MORE_LOG_LEVEL.matcher(line).find() ||
+        isExceptionErrorOrSomeSpecialCase(line)) {
-
-    } else if (isExceptionErrorOrSomeSpecialCase(line)) {
-      if (!matchesIgnoredPatterns(line)) {
-        return enforceErrorLimitOnShortName(line);
-      }
-  private StringBuilder enforceErrorLimitOnShortName(CharSequence line) {
-    // it's the Exception colon that we want to find
-    // along with the next six words and define to shortName
-
-    // shortName is only used for the unique string to count the
-    // number of times an exception match occurs. This is so
-    // we can suppress further printing if we hit the limit
-
-    String shortName = getShortName(line);
-    if (shortName != null) {
-      Integer i = individualErrorCount.get(shortName);
-      int occurrences = i == null ? 1 : i + 1;
-      individualErrorCount.put(shortName, occurrences);
-      return enforceErrorLimit(occurrences, line + lineSeparator(), lineNumber, logName);
-    }
-
-    return enforceErrorLimit(1, line + lineSeparator(), lineNumber, logName);
-  }
-
-    return EXCEPTION.matcher(line).find() ||
+    return (EXCEPTION.matcher(line).find() ||
-        MISFORMATTED_I18N_MESSAGE.matcher(line).find() &&
-            !(WARN_OR_LESS_LOG_LEVEL.matcher(line).find()
-                && RVV_BIT_SET_MESSAGE.matcher(line).find());
+        MALFORMED_I18N_MESSAGE.matcher(line).find() ||
+        MALFORMED_LOG4J_MESSAGE.matcher(line).find()) &&
+        !(WARN_OR_LESS_LOG_LEVEL.matcher(line).find() &&
+            RVV_BIT_SET_MESSAGE.matcher(line).find());

INS26 UPD40 INS40 MOV27 MOV32 INS36 INS27 MOV32 MOV32 MOV32 INS32 INS32 INS42 UPD42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL33 DEL27 DEL34 DEL42 DEL34 DEL27 DEL16 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL34 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL27