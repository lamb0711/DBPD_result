Merge branch 'release/1.3.0'

+import java.io.File;
+import java.io.IOException;
+import java.net.ConnectException;
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Properties;
+import java.util.concurrent.Callable;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Future;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+
+import org.apache.logging.log4j.Logger;
+
+import org.apache.geode.internal.cache.tier.sockets.ClientProtocolService;
+import org.apache.geode.internal.cache.tier.sockets.TcpServerFactory;
-import org.apache.geode.internal.logging.log4j.LogMarker;
-import org.apache.logging.log4j.Logger;
-
-import java.io.File;
-import java.io.IOException;
-import java.net.ConnectException;
-import java.net.InetAddress;
-import java.net.UnknownHostException;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Properties;
-import java.util.concurrent.Callable;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Future;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicBoolean;
-
-
-      } else {
-        // do not create a LogWriterAppender for security -- let it go through to logWriterAppender
+      // do not create a LogWriterAppender for security -- let it go through to logWriterAppender
-      logWriter = LogWriterFactory.createLogWriterLogger(false, false, this.config,
-          !startDistributedSystem);
+      logWriter = LogWriterFactory.createLogWriterLogger(false, false, this.config, false);
-    this.server = new TcpServer(port, this.bindAddress, null, this.config, this.handler,
-        new DelayedPoolStatHelper(), group, this.toString());
+    this.server = new TcpServerFactory().makeTcpServer(port, this.bindAddress, null, this.config,
+        this.handler, new DelayedPoolStatHelper(), group, this.toString(), this);
+  public InternalCache getCache() {
+    return myCache;
+  }
+
-
-
-      // LOG:CONFIG: changed from config to info
-      logger.info(LogMarker.CONFIG,
-          LocalizedMessage.create(
-              LocalizedStrings.InternalDistributedSystem_STARTUP_CONFIGURATIONN_0,
-              this.config.toLoggerString()));
+
+      ClientProtocolService clientProtocolService = this.server.getClientProtocolService();
+      if (clientProtocolService != null) {
+        clientProtocolService.initializeStatistics("LocatorStats", sys);
+      }

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 UPD40 INS31 INS83 INS43 INS42 INS8 INS42 INS41 INS42 INS32 INS60 INS25 INS14 INS42 INS42 MOV22 INS33 MOV22 MOV22 MOV14 INS42 MOV32 INS52 INS43 INS59 INS27 INS8 UPD43 MOV43 INS42 INS42 INS32 INS42 INS33 INS21 INS9 UPD42 INS22 INS42 INS32 INS52 INS42 INS42 INS42 INS45 INS42 DEL8 DEL42 DEL38 DEL42 DEL33 DEL42 DEL14 DEL42 DEL42 DEL40 DEL42 DEL42 DEL40 DEL52 DEL42 DEL22 DEL42 DEL32 DEL32 DEL32 DEL21