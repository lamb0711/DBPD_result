GEODE-7698: Extracting a superclass of InternalDistributedMember

GEODE-7698: Extracting a superclass of InternalDistributedMember

We need a concrete MemberIdentifier implementation in geode-membership
to test membership.

Extracting a superclass of InternalDistributedMember,
MemberIdentifierImpl, which contains pretty much all of the
InternalDistributedMember logic. InternalDistributedMember now just
extends that class and implements DistributedMember.

Removing unecessary use of SocketCreator during IDM deserialization. We were 
using flags and methods on SocketCreator to either change or cache the hostName
that we read off the wire from the remote member. We don't want to do either of
those things during deserialization. We should just keep the hostname we read
as is. This logic was used to change the toString value of ids that come from
clients to use the ip address instead of the hostname. Instead of changing the
deserialization logic, we change the addFixedToString logic.

Check for IP address rather than SocketCreator.resolve_dns in addFixedToString. 
InternalDistributedMember has a dependency on this mutable static flag in it's
to string, which is not ideal. It looks like the intention was to only shorten
the hostname if it is dns name, not an ip address.

+
+  /**
+   * Get the {@link Version} of the peer or disk store that created this
+   * {@link DataInput}. Returns
+   * null if the version is same as this member's.
+   */
+  public static Version getVersionForDataStreamOrNull(DataInput in) {
+    // check if this is a versioned data input
+    if (in instanceof VersionedDataStream) {
+      return ((VersionedDataStream) in).getVersion();
+    } else {
+      // assume latest version
+      return null;
+    }
+  }
+
+  /**
+   * Get the {@link Version} of the peer or disk store that created this
+   * {@link DataInput}.
+   */
+  public static Version getVersionForDataStream(DataInput in) {
+    // check if this is a versioned data input
+    if (in instanceof VersionedDataStream) {
+      final Version v = ((VersionedDataStream) in).getVersion();
+      return v != null ? v : Version.CURRENT;
+    } else {
+      // assume latest version
+      return Version.CURRENT;
+    }
+  }
+
+  /**
+   * Get the {@link Version} of the peer or disk store that created this
+   * {@link DataOutput}.
+   */
+  public static Version getVersionForDataStream(DataOutput out) {
+    // check if this is a versioned data output
+    if (out instanceof VersionedDataStream) {
+      final Version v = ((VersionedDataStream) out).getVersion();
+      return v != null ? v : Version.CURRENT;
+    } else {
+      // assume latest version
+      return Version.CURRENT;
+    }
+  }
+
+  /**
+   * Get the {@link Version} of the peer or disk store that created this
+   * {@link DataOutput}. Returns
+   * null if the version is same as this member's.
+   */
+  public static Version getVersionForDataStreamOrNull(DataOutput out) {
+    // check if this is a versioned data output
+    if (out instanceof VersionedDataStream) {
+      return ((VersionedDataStream) out).getVersion();
+    } else {
+      // assume latest version
+      return null;
+    }
+  }

INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS65 INS42 INS43 INS42 INS25 INS65 INS42 INS43 INS42 INS25 INS65 INS42 INS43 INS42 INS25 INS65 INS42 INS43 INS42 INS25 INS66 INS65 INS66 INS65 INS66 INS66 INS42 INS62 INS8 INS8 INS66 INS65 INS66 INS65 INS66 INS42 INS62 INS8 INS8 INS66 INS65 INS66 INS65 INS66 INS42 INS62 INS8 INS8 INS66 INS65 INS66 INS65 INS66 INS66 INS42 INS62 INS8 INS8 INS42 INS42 INS42 INS43 INS41 INS41 INS42 INS42 INS42 INS43 INS60 INS41 INS41 INS42 INS42 INS42 INS43 INS60 INS41 INS41 INS42 INS42 INS42 INS43 INS41 INS41 INS42 INS32 INS33 INS42 INS83 INS43 INS59 INS16 INS40 INS42 INS83 INS43 INS59 INS16 INS40 INS42 INS32 INS33 INS36 INS42 INS42 INS42 INS32 INS27 INS42 INS40 INS42 INS42 INS32 INS27 INS42 INS40 INS36 INS42 INS11 INS36 INS42 INS42 INS33 INS36 INS42 INS42 INS33 INS11 INS43 INS42 INS11 INS11 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42