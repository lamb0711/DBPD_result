GEODE-225 excessive CPU utilization and garbage collection strain for JSON processing

Use of a singleton ObjectMapper can be enabled using a system property.

-DPdxInstance.use-static-mapper=true

+import static org.apache.logging.log4j.message.MapMessage.MapFormat.JSON;
+
+  private static final boolean USE_STATIC_MAPPER = Boolean.getBoolean("PdxInstance.use-static-mapper");
+
+  static final ObjectMapper mapper = USE_STATIC_MAPPER? createObjectMapper() : null;
+
+  private static ObjectMapper createObjectMapper() {
+    ObjectMapper mapper = new ObjectMapper();
+    mapper.setDateFormat(new SimpleDateFormat("MM/dd/yyyy"));
+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
+    mapper.configure(com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);
+    return mapper;
+  }
+
-            ObjectMapper mapper = new ObjectMapper();
-            mapper.setDateFormat(new SimpleDateFormat("MM/dd/yyyy"));
-            mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
-            mapper.configure(com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);
-            Object classInstance = mapper.readValue(JSON, ClassPathLoader.getLatest().forName(className));
+            ObjectMapper objMapper = USE_STATIC_MAPPER? mapper : createObjectMapper();
+            Object classInstance = objMapper.readValue(JSON, ClassPathLoader.getLatest().forName(className));
-        //TODO - we might able to optimize these to not deserialize the object

INS26 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS42 MOV8 INS42 INS32 INS42 INS42 INS16 INS42 INS41 INS42 INS42 INS45 INS42 INS32 INS33 INS42 INS42 INS8 MOV60 INS60 MOV60 MOV41 INS43 INS59 INS42 INS42 INS16 INS42 INS42 INS32 UPD42 INS42