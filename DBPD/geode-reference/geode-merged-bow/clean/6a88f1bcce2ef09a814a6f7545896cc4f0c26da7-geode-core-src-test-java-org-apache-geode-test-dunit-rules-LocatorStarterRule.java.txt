GEODE-2730: refactor rules

* consolidate the two sets of server/locator starter rules
* do not allow member start up at test initialization time.
* validate properties in @Before
* use provider in the chained rules to get the appropriate ports in @Before

- * You can create this rule with and without a Property. If the rule is created with a property, the
- * locator will started automatically for you. If not, you can start the locator by using one of the
- * startLocator function. Either way, the rule will handle shutting down the locator properly for
- * you.
+ * This rules allows you to create/start a locator using any @ConfigurationProperties, you can chain
+ * the configuration of the rule like this: LocatorStarterRule locator = new LocatorStarterRule()
+ * .withProperty(key, value) .withName(name) .withProperties(properties) .withSecurityManager(class)
+ * .withJmxManager() etc, etc. If your rule calls withAutoStart(), the locator will be started
+ * before your test code.
+ *
+ * In your test code, you can use the rule to access the locator's attributes, like the port
+ * information, working dir, name, and the InternalLocator it creates.
-  public LocatorStarterRule startLocator() {
+  @Override
+  public void before() {
-    // start locator will start a jmx manager by default, if withJMXManager is not called explicitly
-    // the tests will use random ports by default.
+    // always use a random jmxPort/httpPort when using the rule to start the locator
-      withJMXManager();
+      withJMXManager(false);
+    if (autoStart) {
+      startLocator();
+    }
+  }
+  public void startLocator() {
-    return this;

INS31 INS78 INS83 INS39 INS42 INS8 INS39 UPD66 UPD66 INS66 UPD66 UPD66 INS66 INS66 INS42 MOV21 INS25 INS25 MOV27 INS8 INS42 INS8 INS21 INS21 INS32 INS32 INS42 INS9 INS42 DEL42 DEL43 DEL42 DEL32 DEL21 DEL8 DEL25 DEL52 DEL41