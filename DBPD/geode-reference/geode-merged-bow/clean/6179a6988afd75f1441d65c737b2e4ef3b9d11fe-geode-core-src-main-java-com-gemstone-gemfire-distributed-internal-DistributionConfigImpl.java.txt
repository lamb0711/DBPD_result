GEODE-420: Reverting checkAttributes change in AbstractDistributionConfig.java.

+import org.apache.commons.lang.StringUtils;
+import com.gemstone.gemfire.distributed.ConfigurationProperties;
+    validateSSLEnabledComponentsConfiguration();
+  private void validateSSLEnabledComponentsConfiguration() {
+    Object value = null;
+    try {
+      Method method = getters.get(ConfigurationProperties.SSL_ENABLED_COMPONENTS);
+      if (method != null) {
+        value = method.invoke(this, new Object[] {});
+      }
+    } catch (Exception e) {
+      if (e instanceof RuntimeException) {
+        throw (RuntimeException) e;
+      }
+      if (e.getCause() instanceof RuntimeException) {
+        throw (RuntimeException) e.getCause();
+      } else {
+        throw new InternalGemFireException("error invoking getter for property" + ConfigurationProperties.SSL_ENABLED_COMPONENTS);
+      }
+    }
+    SSLEnabledComponent[] sslEnabledComponents = (SSLEnabledComponent[]) value;
+    for (SSLEnabledComponent sslEnabledComponent : sslEnabledComponents) {
+      if (!isAliasCorrectlyConfiguredForComponents(sslEnabledComponent)) {
+        throw new IllegalArgumentException(LocalizedStrings.AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_INVALID_ALIAS_OPTIONS.toLocalizedString());
+      }
+    }
+
+  }
+
+  private boolean isAliasCorrectlyConfiguredForComponents(final SSLEnabledComponent component) {
+    switch (component) {
+      case ALL: {
+        //If the default alias is not set, then check that all the other component aliases are set
+        if (StringUtils.isEmpty(getSSLDefaultAlias())) {
+          boolean correctAlias = true;
+          correctAlias &= isAliasCorrectlyConfiguredForComponents(SSLEnabledComponent.CLUSTER);
+          correctAlias &= isAliasCorrectlyConfiguredForComponents(SSLEnabledComponent.GATEWAY);
+          correctAlias &= isAliasCorrectlyConfiguredForComponents(SSLEnabledComponent.HTTP_SERVICE);
+          correctAlias &= isAliasCorrectlyConfiguredForComponents(SSLEnabledComponent.JMX);
+          correctAlias &= isAliasCorrectlyConfiguredForComponents(SSLEnabledComponent.LOCATOR);
+          correctAlias &= isAliasCorrectlyConfiguredForComponents(SSLEnabledComponent.SERVER);
+          return correctAlias;
+        }
+      }
+      case CLUSTER: {
+        return StringUtils.isEmpty(getClusterSSLAlias()) ? true : (getSSLEnabledComponents().length > 1 ? !StringUtils.isEmpty(getSSLDefaultAlias()) : true);
+      }
+      case GATEWAY: {
+        return StringUtils.isEmpty(getGatewaySSLAlias()) ? true : (getSSLEnabledComponents().length > 1 ? !StringUtils.isEmpty(getSSLDefaultAlias()) : true);
+      }
+      case HTTP_SERVICE: {
+        return StringUtils.isEmpty(getHTTPServiceSSLAlias()) ? true : (getSSLEnabledComponents().length > 1 ? !StringUtils.isEmpty(getSSLDefaultAlias()) : true);
+      }
+      case JMX: {
+        return StringUtils.isEmpty(getJMXManagerSSLAlias()) ? true : (getSSLEnabledComponents().length > 1 ? !StringUtils.isEmpty(getSSLDefaultAlias()) : true);
+      }
+      case LOCATOR: {
+        return StringUtils.isEmpty(getLocatorSSLAlias()) ? true : (getSSLEnabledComponents().length > 1 ? !StringUtils.isEmpty(getSSLDefaultAlias()) : true);
+      }
+      case SERVER: {
+        return StringUtils.isEmpty(getServerSSLAlias()) ? true : (getSSLEnabledComponents().length > 1 ? !StringUtils.isEmpty(getSSLDefaultAlias()) : true);
+      }
+      default:
+        return false;
+    }
+  }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS21 INS60 INS54 INS60 INS70 INS83 INS43 INS42 INS50 INS32 INS43 INS59 INS8 INS12 INS5 INS59 INS44 INS42 INS8 INS42 INS42 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS41 INS42 INS42 INS42 INS33 INS60 INS25 INS44 INS8 INS43 INS85 INS42 INS11 INS43 INS42 INS25 INS42 INS25 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS9 INS43 INS59 INS27 INS8 INS43 INS42 INS25 INS25 INS42 INS5 INS42 INS42 INS38 INS8 INS32 INS8 INS16 INS16 INS16 INS16 INS16 INS16 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS62 INS8 INS62 INS8 INS8 INS43 INS85 INS32 INS53 INS42 INS42 INS32 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS32 INS9 INS36 INS32 INS9 INS36 INS32 INS9 INS36 INS32 INS9 INS36 INS32 INS9 INS36 INS32 INS9 INS36 INS42 INS42 INS40 INS7 INS42 INS43 INS53 INS32 INS43 INS53 INS53 INS42 INS42 INS42 INS14 INS42 INS39 INS59 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS42 INS32 INS16 INS42 INS42 INS32 INS16 INS42 INS42 INS32 INS16 INS42 INS42 INS32 INS16 INS42 INS42 INS32 INS16 INS42 INS42 INS32 INS16 INS42 INS32 INS42 INS11 INS42 INS42 INS42 INS11 INS14 INS43 INS32 INS42 INS9 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS27 INS38 INS9 INS42 INS27 INS38 INS9 INS42 INS27 INS38 INS9 INS42 INS27 INS38 INS9 INS42 INS27 INS38 INS9 INS42 INS27 INS38 INS9 INS42 INS42 INS52 INS3 INS43 INS42 INS43 INS32 INS43 INS27 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS22 INS34 INS32 INS22 INS34 INS32 INS22 INS34 INS32 INS22 INS34 INS32 INS22 INS34 INS32 INS22 INS34 INS32 INS5 INS4 INS42 INS42 INS42 INS42 INS42 INS45 INS40 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42