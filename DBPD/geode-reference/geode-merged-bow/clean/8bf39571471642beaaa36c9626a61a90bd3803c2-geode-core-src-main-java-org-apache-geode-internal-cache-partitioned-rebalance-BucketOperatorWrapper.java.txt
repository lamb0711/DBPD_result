Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-  public BucketOperatorWrapper(BucketOperator delegate, Set<PartitionRebalanceDetailsImpl> rebalanceDetails, 
-      ResourceManagerStats stats, PartitionedRegion leaderRegion) {
+  public BucketOperatorWrapper(BucketOperator delegate,
+      Set<PartitionRebalanceDetailsImpl> rebalanceDetails, ResourceManagerStats stats,
+      PartitionedRegion leaderRegion) {
-  public boolean moveBucket(InternalDistributedMember sourceMember, 
-      InternalDistributedMember targetMember, int id, 
-      Map<String, Long> colocatedRegionBytes) {
+  public boolean moveBucket(InternalDistributedMember sourceMember,
+      InternalDistributedMember targetMember, int id, Map<String, Long> colocatedRegionBytes) {
-          logger.debug("Rebalancing {} bucket {} moved from {} to {}", leaderRegion, id, sourceMember, targetMember);
+          logger.debug("Rebalancing {} bucket {} moved from {} to {}", leaderRegion, id,
+              sourceMember, targetMember);
-            details.incTransfers(regionBytes.longValue(), 
+            details.incTransfers(regionBytes.longValue(),
-          logger.debug("Rebalancing {} bucket {} moved failed from {} to {}", leaderRegion, id, sourceMember, targetMember);
+          logger.debug("Rebalancing {} bucket {} moved failed from {} to {}", leaderRegion, id,
+              sourceMember, targetMember);
-  public void createRedundantBucket(
-      final InternalDistributedMember targetMember, final int i, 
+  public void createRedundantBucket(final InternalDistributedMember targetMember, final int i,
-    delegate.createRedundantBucket(targetMember, i, 
-        colocatedRegionBytes, new Completion() {
+    delegate.createRedundantBucket(targetMember, i, colocatedRegionBytes, new Completion() {
-          logger.debug("Rebalancing {} redundant bucket {} created on {}", leaderRegion, i, targetMember);
+          logger.debug("Rebalancing {} redundant bucket {} created on {}", leaderRegion, i,
+              targetMember);
-        
-        //invoke onSuccess on the received completion callback
+
+        // invoke onSuccess on the received completion callback
-          logger.info("Rebalancing {} redundant bucket {} failed creation on {}", leaderRegion, i, targetMember);
+          logger.info("Rebalancing {} redundant bucket {} failed creation on {}", leaderRegion, i,
+              targetMember);
-        
-        //invoke onFailure on the received completion callback
+
+        // invoke onFailure on the received completion callback
-  public boolean removeBucket(
-      InternalDistributedMember targetMember, int i, 
+  public boolean removeBucket(InternalDistributedMember targetMember, int i,
-          logger.debug("Rebalancing {} redundant bucket {} removed from {}", leaderRegion, i, targetMember);
+          logger.debug("Rebalancing {} redundant bucket {} removed from {}", leaderRegion, i,
+              targetMember);
-            details.incRemoves(regionBytes, 
-                details.getRegion().equals(leaderRegion) ? elapsed : 0);
+            details.incRemoves(regionBytes, details.getRegion().equals(leaderRegion) ? elapsed : 0);
-          logger.debug("Rebalancing {} redundant bucket {} failed removal o{}", leaderRegion, i, targetMember);
+          logger.debug("Rebalancing {} redundant bucket {} failed removal o{}", leaderRegion, i,
+              targetMember);
-  public boolean movePrimary(InternalDistributedMember source, 
-      InternalDistributedMember target, int bucketId) {
+  public boolean movePrimary(InternalDistributedMember source, InternalDistributedMember target,
+      int bucketId) {
-          logger.debug("Rebalancing {} primary bucket {} moved from {} to {}", leaderRegion, bucketId, source, target);
+          logger.debug("Rebalancing {} primary bucket {} moved from {} to {}", leaderRegion,
+              bucketId, source, target);
-          logger.debug("Rebalancing {} primary bucket {} failed to move from {} to {}", leaderRegion, bucketId, source, target);
+          logger.debug("Rebalancing {} primary bucket {} failed to move from {} to {}",
+              leaderRegion, bucketId, source, target);

