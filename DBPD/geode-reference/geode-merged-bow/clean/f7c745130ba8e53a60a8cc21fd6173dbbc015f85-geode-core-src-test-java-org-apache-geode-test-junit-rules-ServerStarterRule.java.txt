GEODE-4693: fix JDBCLoader on non-object pdx fields (#1517)

If the region mapping has a pdxClassName then the JdbcLoader will look for a pdx type that is already defined and use its field types when creating the PdxInstance. If the pdx type does not have a field that corresponds to an existing column then an exception is thrown.

A pdx field of type "char" or an instance of "java.lang.Character" will be sent to SQL as a String of size 1.
A pdx field of type "Date" will be sent to SQL as a java.sql.Timestamp.

A new external API was added to GemFireCache. It is the method "registerPdxMetaData".
It only needs to be called on clients if they are going to do reads using a JdbcLoader of data that wa s not written using the JdbcWriter or JdbcAsyncWriter.
+import org.apache.geode.pdx.PdxSerializer;
+  private PdxSerializer pdxSerializer = null;
+  private boolean pdxReadSerialized = false;
+  public ServerStarterRule withPDXReadSerialized() {
+    pdxReadSerialized = true;
+    return this;
+  }
+
+  public ServerStarterRule withPdxSerializer(PdxSerializer pdxSerializer) {
+    this.pdxSerializer = pdxSerializer;
+    return this;
+  }
+
-    cf.setPdxReadSerialized(pdxPersistent);
+    cf.setPdxReadSerialized(pdxReadSerialized);
+    if (pdxSerializer != null) {
+      cf.setPdxSerializer(pdxSerializer);
+    }

INS26 INS40 INS23 INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS44 INS8 MOV21 INS42 INS42 INS33 INS42 INS9 INS42 INS21 INS41 INS42 INS43 INS42 INS21 INS41 INS25 INS7 INS52 INS42 INS7 INS52 INS27 INS8 INS42 INS9 INS22 INS42 UPD42 INS42 INS33 INS21 INS52 INS42 INS32 INS42 INS42 INS42