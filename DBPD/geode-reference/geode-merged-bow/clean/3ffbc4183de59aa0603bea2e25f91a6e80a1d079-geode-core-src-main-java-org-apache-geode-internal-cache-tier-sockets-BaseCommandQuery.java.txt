GEODE-6488: Migrating cancellation state to execution context (#3322)

This work solves two problems.  One is that the query cancellation task
reference in DefaultQuery could be overwritten and thus never removed
from monitoring upon successful completion of a query.  Second is that
once a query execution timed out once, the query object was in an
unusable state which is undesirable.

The solution is to attach the cancellation state to the execution
context rather than the query object, so that cancellation is associated
with each independent execution of a query rather than having
cancellation state that applies to the entire query object.
+import org.apache.geode.cache.query.QueryExecutionLowMemoryException;
+import org.apache.geode.cache.query.QueryExecutionTimeoutException;
+import org.apache.geode.cache.query.internal.QueryExecutionCanceledException;
-  protected boolean processQuery(Message msg, Query query, String queryString, Set regionNames,
-      long start, ServerCQ cqQuery, QueryOperationContext queryContext, ServerConnection servConn,
-      boolean sendResults, final SecurityService securityService)
+  protected boolean processQuery(final Message msg,
+      final Query query,
+      final String queryString,
+      final Set regionNames,
+      final long start,
+      final ServerCQ cqQuery,
+      final QueryOperationContext queryContext,
+      final ServerConnection servConn,
+      final boolean sendResults,
+      final SecurityService securityService)
-    return processQueryUsingParams(msg, query, queryString, regionNames, start, cqQuery,
-        queryContext, servConn, sendResults, null, securityService);
+    return processQueryUsingParams(msg, query, queryString, regionNames, start,
+        cqQuery, queryContext, servConn, sendResults, null, securityService);
-  protected boolean processQueryUsingParams(Message msg, Query query, String queryString,
-      Set regionNames, long start, ServerCQ cqQuery, QueryOperationContext queryContext,
-      ServerConnection servConn, boolean sendResults, Object[] params,
+  protected boolean processQueryUsingParams(final Message msg,
+      final Query query,
+      final String queryString,
+      final Set regionNames,
+      long start,
+      final ServerCQ cqQuery,
+      QueryOperationContext queryContext,
+      final ServerConnection servConn,
+      final boolean sendResults,
+      final Object[] params,
-      DefaultQuery defaultQuery = (DefaultQuery) query;
-      if ((defaultQuery).isCanceled()) {
-        e = new QueryException(defaultQuery.getQueryCanceledException().getMessage(),
+      if (e instanceof QueryExecutionLowMemoryException
+          || e instanceof QueryExecutionTimeoutException
+          || e instanceof QueryExecutionCanceledException) {
+        e = new QueryException(e.getMessage(),

INS26 INS26 INS26 INS40 INS40 INS40 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS27 INS62 INS62 INS62 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL36 DEL42 DEL32 DEL42 DEL32