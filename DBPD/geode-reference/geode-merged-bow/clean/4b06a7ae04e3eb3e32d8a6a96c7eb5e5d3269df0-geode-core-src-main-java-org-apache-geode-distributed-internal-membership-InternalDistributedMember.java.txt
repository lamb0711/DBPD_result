Revert "GEODE-7808: standardize on use of HostAndPort to form client-side connections (#4743)" (#4761)

This reverts commit 0af626462642c6352840cd6e81a5265c74045c7f.
That commit seems to have caused a severe performance drop in several
Benchmark tests:

org.apache.geode.benchmark.tests.PartitionedGetBenchmark
              average ops/second  Baseline:    981794.46  Test:     41239.82  Difference:  -95.8%
org.apache.geode.benchmark.tests.ReplicatedGetBenchmark
              average ops/second  Baseline:    972769.18  Test:     41299.96  Difference:  -95.8%
org.apache.geode.benchmark.tests.PartitionedNonIndexedQueryBenchmark
              average ops/second  Baseline:        90.05  Test:        70.52  Difference:  -21.7%
+import org.apache.geode.annotations.internal.MutableForTesting;
+import org.apache.geode.cache.client.ServerConnectivityException;
+  /** Retrieves an InetAddress given the provided hostname */
+  @MutableForTesting
+  protected static HostnameResolver hostnameResolver =
+      (location) -> InetAddress.getByName(location.getHostName());
+
-    return SocketCreator.resolve_dns ? i.getHostName() : i.getHostAddress();
+    return SocketCreator.resolve_dns ? SocketCreator.getHostName(i) : i.getHostAddress();
-   * caches. The version information in the ID is set to Version.CURRENT and the host name
-   * is left unresolved (DistributedMember doesn't expose the InetAddress).
+   * caches. The version information in the ID is set to Version.CURRENT.
-            MemberDataBuilder.newBuilderForLocalHost(location.getHostName())
+            MemberDataBuilder.newBuilder(getInetAddress(location), location.getHostName())
+  private static InetAddress getInetAddress(ServerLocation location) {
+    final InetAddress addr;
+    try {
+      addr = hostnameResolver.getInetAddress(location);
+    } catch (UnknownHostException e) {
+      throw new ServerConnectivityException("Unable to resolve server location " + location, e);
+    }
+    return addr;
+  }
+
+  public static void setHostnameResolver(final HostnameResolver hostnameResolver) {
+    InternalDistributedMember.hostnameResolver = hostnameResolver;
+  }
+
-        setHostName(LocalHostUtil.getLocalHost().getHostName());
+        setHostName(SocketCreator.getHostName(LocalHostUtil.getLocalHost()));

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS29 INS78 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS42 INS42 INS86 INS42 INS43 INS42 INS60 INS54 INS41 INS83 INS43 INS42 INS21 INS66 INS59 MOV32 UPD66 INS42 INS83 INS43 INS59 INS8 INS12 INS42 INS42 INS7 INS42 UPD42 UPD42 INS42 INS42 INS21 INS44 INS8 INS40 INS42 UPD42 INS42 INS7 INS43 INS42 INS53 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS45 INS42 MOV32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL66