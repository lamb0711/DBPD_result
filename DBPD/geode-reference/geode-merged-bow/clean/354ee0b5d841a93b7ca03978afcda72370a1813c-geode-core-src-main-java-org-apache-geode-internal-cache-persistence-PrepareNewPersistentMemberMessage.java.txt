GEODE-6975: Do not send reply back if hit CancelException. (#3806)

 * Do not send reply back if hit CancelException when processing
   PrepareNewPersistentMemberMessage. Depends on membership to
   determine which member has the last copy of the region, as the
   sender has to either wait for the replies back or membership
   listener detects the receiver of the message has been departed.
   In the later case, the sender should becomes the host of the
   last copy and should recover first to avoid the
   ConflictingPersistentDataException.
 * Use cache's CancelCriterion instead of DistributionManager's
   CancelCriterion in sender's reply processor. This to avoid an
   issue seen when shutdown occurs during bucket region creation.
   Shutdown will wait for all buckets are ready while sender of the
   PrepareNewPersistentMemberMessage still waiting for a reply but
   won't get it if the receiver is also being shut down. And the
   DistributionManager is yet to be shutdown at the time. Using
   cache's CancelCriterion will make the sender reply processor to
   throw CancelException instead of continue waiting for reply.

+import org.apache.geode.internal.cache.InternalCache;
-    ReplyProcessor21 processor = new ReplyProcessor21(dm, members);
+    InternalCache cache = dm.getExistingCache();
+    ReplyProcessor21 processor = new ReplyProcessor21(dm, members, cache.getCancelCriterion());
+    boolean sendReply = true;
-      Region region = cache.getRegion(this.regionPath);
+      Region region = cache.getRegion(getRegionPath());
-      logger.debug("<RegionDestroyed> {}", this);
+      if (logger.isDebugEnabled()) {
+        logger.debug("<RegionDestroyed> {}", this);
+      }
-      logger.debug("<CancelException> {}", this);
+      if (logger.isDebugEnabled()) {
+        logger.debug("<CancelException> {}", this);
+      }
+      sendReply = false;
-      ReplyMessage replyMsg = new ReplyMessage();
+      ReplyMessage replyMsg = createReplyMessage();
-      dm.putOutgoing(replyMsg);
+      if (sendReply) {
+        dm.putOutgoing(replyMsg);
+      }
+  ReplyMessage createReplyMessage() {
+    return new ReplyMessage();
+  }
+
+  String getRegionPath() {
+    return regionPath;
+  }
+

INS26 INS40 INS31 INS31 MOV43 INS42 INS8 INS43 INS42 INS8 INS60 INS60 INS41 INS42 INS41 INS43 INS59 MOV43 INS39 INS59 MOV14 INS42 INS42 INS42 INS32 INS42 INS9 INS8 INS8 INS25 INS42 INS42 MOV43 INS32 INS25 INS25 INS21 INS43 INS42 INS8 INS42 INS42 INS32 MOV8 INS32 MOV8 INS7 INS42 INS32 MOV21 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 DEL52 DEL42 DEL22