GEODE-2416: Collect together artifacts from individual servers into a single zip file

 - GEODE-2414: Determine a mechanism to stream a zip file from server to locator
 - GEODE-2415: Write a function to return a zip file for a single server

+import static java.util.stream.Collectors.toList;
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.List;
+import org.apache.commons.io.FileUtils;
+import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.internal.cli.GfshParser;
+import org.apache.geode.management.internal.cli.LogWrapper;
+import org.apache.geode.management.internal.cli.result.ResultBuilder;
-  /**
-   * @param args
-   */
+
+  public static void mergeLogsInNewProcess(Path logDirectory) {
+    // create a new process for merging
+    LogWrapper.getInstance().fine("Exporting logs merging logs" + logDirectory);
+    List<String> commandList = new ArrayList<String>();
+    commandList.add(System.getProperty("java.home") + File.separatorChar + "bin"
+        + File.separatorChar + "java");
+    commandList.add("-classpath");
+    commandList.add(System.getProperty("java.class.path", "."));
+    commandList.add(MergeLogs.class.getName());
+
+    commandList
+        .add(logDirectory.toAbsolutePath().toString());
+
+    ProcessBuilder procBuilder = new ProcessBuilder(commandList);
+    StringBuilder output = new StringBuilder();
+    String errorString = new String();
+    try {
+      LogWrapper.getInstance().fine("Exporting logs now merging logs");
+      Process mergeProcess = procBuilder.redirectErrorStream(true).start();
+
+      mergeProcess.waitFor();
+
+      InputStream inputStream = mergeProcess.getInputStream();
+      BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
+      String line = null;
+
+      while ((line = br.readLine()) != null) {
+        output.append(line).append(GfshParser.LINE_SEPARATOR);
+      }
+      mergeProcess.destroy();
+    } catch (Exception e) {
+      LogWrapper.getInstance().severe(e.getMessage());
+    }
+    if (output.toString().contains("Merged logs to: ")) {
+      LogWrapper.getInstance().fine("Exporting logs Sucessfully merged logs");
+    } else {
+      LogWrapper.getInstance().severe("Could not merge");
+    }
+  }
-      String result = mergeLogFile(args[0]);
-      System.out.println(result);
+      String result = mergeLogFile(args[0]).getCanonicalPath();
+      System.out.println("Merged logs to: " + result);
-  static String mergeLogFile(String dirName) throws Exception {
-    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
-    File dir = new File(dirName);
-    String[] logsToMerge = dir.list();
-    InputStream[] logFiles = new FileInputStream[logsToMerge.length];
+  protected static List<File> findLogFilesToMerge (File dir) {
+    return FileUtils.listFiles(dir, new String[]{"log"}, true).stream().collect(toList());
+  }
+
+  static File mergeLogFile(String dirName) throws Exception {
+    Path dir = Paths.get(dirName);
+    List<File> logsToMerge = findLogFilesToMerge(dir.toFile());
+    InputStream[] logFiles = new FileInputStream[logsToMerge.size()];
-    for (int i = 0; i < logsToMerge.length; i++) {
+    for (int i = 0; i < logsToMerge.size(); i++) {
-        logFiles[i] = new FileInputStream(dirName + File.separator + logsToMerge[i]);
-        logFileNames[i] = dirName + File.separator + logsToMerge[i];
+        logFiles[i] = new FileInputStream(logsToMerge.get(i));
+        logFileNames[i] = dir.relativize(logsToMerge.get(i).toPath()).toString();
-            logsToMerge[i] + " " + CliStrings.EXPORT_LOGS__MSG__FILE_DOES_NOT_EXIST);
+            logsToMerge.get(i) + " " + CliStrings.EXPORT_LOGS__MSG__FILE_DOES_NOT_EXIST);
+    File mergedLogFile = null;
-          dirName + File.separator + "merge_" + sdf.format(new java.util.Date()) + ".log";
-      mergedLog = new PrintWriter(mergeLog);
+          dirName + File.separator + "merge_" + new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss").format(new java.util.Date()) + ".log";
+      mergedLogFile = new File(mergeLog);
+      mergedLog = new PrintWriter(mergedLogFile);
-    return "Sucessfully merged logs";
+    return mergedLogFile;

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 INS43 INS43 INS42 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS60 INS60 INS60 INS54 INS25 INS43 INS43 MOV43 INS42 INS41 INS42 INS60 INS60 INS42 INS32 INS74 INS59 INS32 INS32 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS32 INS8 INS8 INS42 INS42 INS32 UPD43 MOV43 MOV59 INS74 MOV43 INS59 INS42 INS32 INS42 INS27 INS43 INS43 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS21 INS60 INS21 INS60 INS60 INS60 INS61 INS21 INS44 INS8 INS32 INS42 INS45 INS21 INS21 INS32 INS42 INS32 UPD42 INS32 INS43 INS43 INS32 INS32 INS42 INS33 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS74 INS32 INS40 INS45 INS40 INS45 INS42 INS42 INS45 INS45 INS57 INS42 INS32 INS42 INS43 INS42 INS43 INS43 INS32 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS32 MOV43 INS42 INS21 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS7 INS43 MOV43 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS33 INS36 INS33 INS21 INS42 INS42 INS32 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS27 INS42 INS42 INS42 INS3 INS9 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS14 INS7 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 MOV32 INS42 INS45 INS42 MOV5 INS4 INS43 INS42 UPD42 INS42 INS42 INS9 INS42 INS43 INS42 INS42 INS32 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS45 INS32 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL65 DEL29 DEL42 DEL42 DEL14 DEL42 DEL59 DEL60 DEL60 DEL32 DEL40 DEL40 DEL42 DEL40 DEL42 DEL42 DEL2 DEL27 DEL42 DEL40 DEL42 DEL42 DEL2 DEL27 DEL42 DEL42 DEL2 DEL42 DEL45