GEODE-7799: Distribute rebalance status to other locators (#4692)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>

-import org.springframework.http.HttpHeaders;
-import org.apache.geode.management.internal.ClusterManagementOperationStatusResult;
-import org.apache.geode.management.internal.operation.TaggedWithOperator;
-  public ResponseEntity<ClusterManagementOperationResult<RebalanceResult>> startRebalance(
+  public ResponseEntity<ClusterManagementOperationResult<RebalanceOperation, RebalanceResult>> startRebalance(
-    ClusterManagementOperationResult<RebalanceResult> result =
-        clusterManagementService.start(new RebalanceOperationWithOperator(operation));
+    operation.setOperator(
+        Optional.ofNullable(securityService).map(SecurityService::getSubject).map(Object::toString)
+            .orElse(null));
+    ClusterManagementOperationResult<RebalanceOperation, RebalanceResult> result =
+        clusterManagementService
+            .start(operation);
-  public ClusterManagementListOperationsResult<RebalanceResult> listRebalances() {
+  public ClusterManagementListOperationsResult<RebalanceOperation, RebalanceResult> listRebalances() {
-  @ApiOperation(value = "check rebalance")
+  @ApiOperation(value = "get rebalance")
-  public ResponseEntity<ClusterManagementOperationStatusResult<RebalanceResult>> checkRebalanceStatus(
+  public ClusterManagementOperationResult<RebalanceOperation, RebalanceResult> getRebalance(
-    ClusterManagementOperationStatusResult<RebalanceResult> result =
-        clusterManagementService.checkStatus(id);
-    HttpHeaders headers = new HttpHeaders();
-    headers.add("Retry-After", "30");
-    return new ResponseEntity<>(result, headers, HttpStatus.OK);
-  }
-
-  private class RebalanceOperationWithOperator extends RebalanceOperation
-      implements TaggedWithOperator {
-    private String operator;
-
-    public RebalanceOperationWithOperator(RebalanceOperation other) {
-      super(other);
-      this.operator = Optional.ofNullable(securityService).map(SecurityService::getSubject)
-          .map(Object::toString).orElse(null);
-    }
-
-    @Override
-    public String getOperator() {
-      return operator;
-    }
+    return clusterManagementService.get(new RebalanceOperation(), id);

UPD74 UPD74 INS74 UPD42 UPD74 INS21 INS43 UPD43 MOV43 MOV43 MOV43 INS41 INS43 INS32 UPD74 INS42 UPD45 UPD42 INS32 INS42 INS42 INS42 MOV32 INS43 MOV42 UPD42 MOV42 INS14 MOV42 INS42 INS42 MOV43 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL43 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL42 DEL40 DEL14 DEL41 DEL83 DEL42 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL44 DEL42 DEL46 DEL52 DEL42 DEL22 DEL7 DEL21 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL55