Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  private OfflineCompactionDiskRegion(DiskStoreImpl ds,
-                               DiskRegionView drv) {
+  private OfflineCompactionDiskRegion(DiskStoreImpl ds, DiskRegionView drv) {
-          new DiskRegionStats(ds.getCache().getDistributedSystem(), drv.getName()),
-          new DummyCancelCriterion(),
-          new DummyDiskExceptionHandler(),
-          null, drv.getFlags(), drv.getPartitionName(), drv.getStartingBucketId(),
-          drv.getCompressorClassName(), drv.getOffHeap());
+        new DiskRegionStats(ds.getCache().getDistributedSystem(), drv.getName()),
+        new DummyCancelCriterion(), new DummyDiskExceptionHandler(), null, drv.getFlags(),
+        drv.getPartitionName(), drv.getStartingBucketId(), drv.getCompressorClassName(),
+        drv.getOffHeap());
-              drv.getConcurrencyLevel(), drv.getInitialCapacity(),
-              drv.getLoadFactor(), drv.getStatisticsEnabled(),
-              drv.isBucket(), drv.getFlags(), drv.getPartitionName(), drv.getStartingBucketId(),
-              drv.getCompressorClassName(), drv.getOffHeap());
+        drv.getConcurrencyLevel(), drv.getInitialCapacity(), drv.getLoadFactor(),
+        drv.getStatisticsEnabled(), drv.isBucket(), drv.getFlags(), drv.getPartitionName(),
+        drv.getStartingBucketId(), drv.getCompressorClassName(), drv.getOffHeap());
-  
+
-  
+
-    throw new IllegalStateException("updateRecoveredEntry should not be called when offline compacting");
+    throw new IllegalStateException(
+        "updateRecoveredEntry should not be called when offline compacting");
-    throw new IllegalStateException("updateRecoveredEntry should not be called when offline compacting");
+    throw new IllegalStateException(
+        "updateRecoveredEntry should not be called when offline compacting");
-  public void destroyRecoveredEntry(Object key) {
-  }
+
+  public void destroyRecoveredEntry(Object key) {}
+
-    throw new IllegalStateException("foreachRegionEntry should not be called when offline compacting");
+    throw new IllegalStateException(
+        "foreachRegionEntry should not be called when offline compacting");
+
+
-    throw new IllegalStateException("copyRecoveredEntries should not be called on OfflineCompactionDiskRegion");
+    throw new IllegalStateException(
+        "copyRecoveredEntries should not be called on OfflineCompactionDiskRegion");
+
-    throw new IllegalStateException("updateSizeOnFaultIn should not be called on OfflineCompactionDiskRegion");
+    throw new IllegalStateException(
+        "updateSizeOnFaultIn should not be called on OfflineCompactionDiskRegion");
+
+
+
-    throw new IllegalStateException("getRegionMap should not be called on OfflineCompactionDiskRegion");
+    throw new IllegalStateException(
+        "getRegionMap should not be called on OfflineCompactionDiskRegion");
+
-    throw new IllegalStateException("handleDiskAccessException should not be called on OfflineCompactionDiskRegion");
+    throw new IllegalStateException(
+        "handleDiskAccessException should not be called on OfflineCompactionDiskRegion");
+
-    throw new IllegalStateException("initializeStats should not be called on OfflineCompactionDiskRegion");
+    throw new IllegalStateException(
+        "initializeStats should not be called on OfflineCompactionDiskRegion");
+

