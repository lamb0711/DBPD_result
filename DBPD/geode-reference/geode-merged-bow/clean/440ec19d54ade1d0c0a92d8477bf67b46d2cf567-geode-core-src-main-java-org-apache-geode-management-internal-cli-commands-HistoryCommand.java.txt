GEODE-5971: refactor misc commands to use ResultModel (#3363)


-import java.io.BufferedWriter;
-import java.io.FileWriter;
-import java.io.Writer;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.lang3.StringUtils;
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.ErrorResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.model.InfoResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-public class HistoryCommand extends InternalGfshCommand {
+public class HistoryCommand extends OfflineGfshCommand {
-  public Result history(
+  public ResultModel history(
-          help = CliStrings.HISTORY__CLEAR__HELP) Boolean clearHistory) {
+          help = CliStrings.HISTORY__CLEAR__HELP) Boolean clearHistory)
+      throws IOException {
-      Gfsh gfsh = Gfsh.getCurrentInstance();
-      ErrorResultData errorResultData;
-      StringBuilder contents = new StringBuilder();
-      Writer output = null;
+      Gfsh gfsh = getGfsh();
-      int historySize = gfsh.getHistorySize();
-      String historySizeString = String.valueOf(historySize);
-      int historySizeWordLength = historySizeString.length();
+      boolean hasFile = StringUtils.isNotBlank(saveHistoryTo);
+
+      File saveHistoryToFile = null;
+      if (hasFile) {
+        saveHistoryToFile = new File(saveHistoryTo);
+        if (saveHistoryToFile.exists()) {
+          return ResultModel.createError("File exists already");
+        }
+        if (saveHistoryToFile.isDirectory()) {
+          return ResultModel.createError(CliStrings.HISTORY__MSG__FILE_SHOULD_NOT_BE_DIRECTORY);
+        }
+      }
-      boolean flagForLineNumbers = !(saveHistoryTo != null && saveHistoryTo.length() > 0);
-      long lineNumber = 0;
+      ResultModel result = new ResultModel();
+      InfoResultModel histories = result.addInfo("history");
-          if (flagForLineNumbers) {
-            lineNumber++;
-            contents.append(String.format("%" + historySizeWordLength + "s  ", lineNumber));
+          if (hasFile) {
+            FileUtils.writeStringToFile(saveHistoryToFile, line + GfshParser.LINE_SEPARATOR,
+                "UTF-8", true);
+          } else {
+            histories.addLine(line);
-          contents.append(line);
-          contents.append(GfshParser.LINE_SEPARATOR);
-      try {
-        // write to a user file
-        if (saveHistoryTo != null && saveHistoryTo.length() > 0) {
-          File saveHistoryToFile = new File(saveHistoryTo);
-          output = new BufferedWriter(new FileWriter(saveHistoryToFile));
-
-          if (!saveHistoryToFile.exists()) {
-            errorResultData =
-                ResultBuilder.createErrorResultData().setErrorCode(ResultBuilder.ERRORCODE_DEFAULT)
-                    .addLine(CliStrings.HISTORY__MSG__FILE_DOES_NOT_EXISTS);
-            return ResultBuilder.buildResult(errorResultData);
-          }
-          if (!saveHistoryToFile.isFile()) {
-            errorResultData =
-                ResultBuilder.createErrorResultData().setErrorCode(ResultBuilder.ERRORCODE_DEFAULT)
-                    .addLine(CliStrings.HISTORY__MSG__FILE_SHOULD_NOT_BE_DIRECTORY);
-            return ResultBuilder.buildResult(errorResultData);
-          }
-          if (!saveHistoryToFile.canWrite()) {
-            errorResultData =
-                ResultBuilder.createErrorResultData().setErrorCode(ResultBuilder.ERRORCODE_DEFAULT)
-                    .addLine(CliStrings.HISTORY__MSG__FILE_CANNOT_BE_WRITTEN);
-            return ResultBuilder.buildResult(errorResultData);
-          }
-
-          output.write(contents.toString());
-        }
-
-      } catch (IOException ex) {
-        return ResultBuilder
-            .createInfoResult("File error " + ex.getMessage() + " for file " + saveHistoryTo);
-      } finally {
-        try {
-          if (output != null) {
-            output.close();
-          }
-        } catch (IOException e) {
-          errorResultData = ResultBuilder.createErrorResultData()
-              .setErrorCode(ResultBuilder.ERRORCODE_DEFAULT).addLine("exception in closing file");
-          return ResultBuilder.buildResult(errorResultData);
-        }
-      }
-      if (saveHistoryTo != null && saveHistoryTo.length() > 0) {
+      if (hasFile) {
-        return ResultBuilder.createInfoResult("Wrote successfully to file " + saveHistoryTo);
+        return ResultModel.createInfo("Wrote successfully to file " + saveHistoryTo);
-        return ResultBuilder.createInfoResult(contents.toString());
+        return result;
-  private Result executeClearHistory() {
-    Gfsh gfsh = Gfsh.getCurrentInstance();
-    gfsh.clearHistory();
-    return ResultBuilder.createInfoResult(CliStrings.HISTORY__MSG__CLEARED_HISTORY);
+  private ResultModel executeClearHistory() {
+    getGfsh().clearHistory();
+    return ResultModel.createInfo(CliStrings.HISTORY__MSG__CLEARED_HISTORY);

MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 MOV43 UPD43 UPD42 UPD42 MOV60 INS60 INS25 INS60 INS60 INS61 INS32 UPD42 UPD42 UPD39 MOV39 MOV59 MOV43 INS42 INS8 INS43 INS59 INS43 INS59 MOV32 INS8 INS42 UPD42 MOV42 UPD42 INS42 INS33 MOV21 MOV25 MOV25 INS42 INS42 INS14 INS42 INS42 INS32 MOV60 INS25 UPD42 UPD42 UPD42 UPD42 MOV32 INS32 INS43 UPD42 MOV42 UPD42 MOV42 INS45 MOV38 INS8 INS42 INS42 MOV14 MOV42 UPD42 MOV42 INS41 INS42 INS25 UPD42 UPD42 INS32 INS42 INS8 INS8 UPD42 UPD42 INS45 UPD42 MOV42 UPD42 MOV42 MOV40 MOV21 INS21 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS27 UPD45 MOV45 INS9 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS40 DEL40 DEL26 DEL40 DEL26 DEL42 DEL39 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL36 DEL38 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL38 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL7 DEL21 DEL42 DEL32 DEL38 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL41 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL40 DEL32 DEL42 DEL32 DEL7 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL37 DEL21 DEL42 DEL42 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL44 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL32 DEL41 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL32 DEL41 DEL8 DEL12 DEL54 DEL8 DEL54 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60