Merge branch 'develop' into feature/GEODE-7049

+import org.apache.geode.cache.internal.HttpService;
-import org.apache.geode.distributed.internal.CacheTime;
-import org.apache.geode.internal.DSCODE;
-import org.apache.geode.internal.Version;
+import org.apache.geode.internal.serialization.DSCODE;
+import org.apache.geode.internal.serialization.Version;
+import org.apache.geode.internal.statistics.StatisticsClock;
+import org.apache.geode.internal.statistics.StatisticsClockFactory;
+import org.apache.geode.internal.statistics.StatisticsClockSupplier;
-    DistributionAdvisee, CacheTime {
+    DistributionAdvisee, StatisticsClockSupplier {
+  private final StatisticsClock statisticsClock;
+
-      CachePerfStats.enableClockStats = system.getConfig().getEnableTimeStatistics();
-      cachePerfStats = new CachePerfStats(internalDistributedSystem.getStatisticsManager());
+      statisticsClock = StatisticsClockFactory.clock(system.getConfig().getEnableTimeStatistics());
+      cachePerfStats = new CachePerfStats(
+          internalDistributedSystem.getStatisticsManager(), statisticsClock);
-      transactionManager = new TXManagerImpl(cachePerfStats, this);
+      transactionManager = new TXManagerImpl(cachePerfStats, this, statisticsClock);
-            httpService = Optional.of(new HttpService(systemConfig.getHttpServiceBindAddress(),
-                systemConfig.getHttpServicePort(), SSLConfigurationFactory
-                    .getSSLConfigForComponent(systemConfig, SecurableCommunicationChannel.WEB)));
+            httpService =
+                Optional.of(new InternalHttpService(systemConfig.getHttpServiceBindAddress(),
+                    systemConfig.getHttpServicePort(), SSLConfigurationFactory
+                        .getSSLConfigForComponent(systemConfig,
+                            SecurableCommunicationChannel.WEB)));
-        heapEvictor = new HeapEvictor(this);
+        heapEvictor = new HeapEvictor(this, statisticsClock);
-        offHeapEvictor = new OffHeapEvictor(this);
+        offHeapEvictor = new OffHeapEvictor(this, statisticsClock);
-              region = new PartitionedRegion(name, attrs, null, this, internalRegionArgs);
+              region = new PartitionedRegion(name, attrs, null, this, internalRegionArgs,
+                  statisticsClock);
-                region = new LocalRegion(name, attrs, null, this, internalRegionArgs);
+                region =
+                    new LocalRegion(name, attrs, null, this, internalRegionArgs, statisticsClock);
-                region = new DistributedRegion(name, attrs, null, this, internalRegionArgs);
+                region = new DistributedRegion(name, attrs, null, this, internalRegionArgs,
+                    statisticsClock);
-    InternalCacheServer server = new ServerBuilder(this, securityService).createServer();
+    InternalCacheServer server = new ServerBuilder(this, securityService,
+        StatisticsClockFactory.disabledClock()).createServer();
-    InternalCacheServer receiverServer = new ServerBuilder(this, securityService)
-        .forGatewayReceiver(receiver).createServer();
+    InternalCacheServer receiverServer = new ServerBuilder(this, securityService,
+        StatisticsClockFactory.disabledClock())
+            .forGatewayReceiver(receiver).createServer();
+  /**
+   * Feature factories may use this supplier to acquire the {@code StatisticsClock} which is
+   * created by the Cache as configured by {@link DistributionConfig#getEnableTimeStatistics()}.
+   *
+   * <p>
+   * Please pass the {@code StatisticsClock} through constructors where possible instead of
+   * accessing it from this supplier.
+   */
+  public StatisticsClock getStatisticsClock() {
+    return statisticsClock;
+  }

MOV26 MOV26 MOV26 INS26 INS26 INS26 UPD40 UPD40 UPD40 INS40 INS40 INS40 UPD43 INS23 INS31 UPD42 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS42 INS42 INS65 INS42 INS41 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS66 INS68 INS66 INS42 INS42 INS42 INS32 INS32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD43 UPD42 INS42 INS42 INS42 DEL40