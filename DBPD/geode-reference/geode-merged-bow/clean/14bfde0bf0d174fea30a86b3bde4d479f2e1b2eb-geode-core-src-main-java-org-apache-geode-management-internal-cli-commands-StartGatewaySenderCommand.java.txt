Merge branch 'release/1.8.0'

-import java.util.concurrent.Executors;
-import java.util.concurrent.ThreadFactory;
-import java.util.concurrent.atomic.AtomicInteger;
+import org.apache.geode.internal.logging.LoggingExecutors;
-import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.cli.SingleGfshCommand;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-public class StartGatewaySenderCommand extends InternalGfshCommand {
+public class StartGatewaySenderCommand extends SingleGfshCommand {
-  public Result startGatewaySender(@CliOption(key = CliStrings.START_GATEWAYSENDER__ID,
+  public ResultModel startGatewaySender(@CliOption(key = CliStrings.START_GATEWAYSENDER__ID,
-    Result result;
-    final SystemManagementService service = (SystemManagementService) getManagementService();
-
-    TabularResultData resultData = ResultBuilder.createTabularResultData();
+    final SystemManagementService service = getManagementService();
-      return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-    ExecutorService execService = Executors.newCachedThreadPool(new ThreadFactory() {
-      AtomicInteger threadNum = new AtomicInteger();
-
-      public Thread newThread(final Runnable r) {
-        Thread result = new Thread(r, "Start Sender Command Thread " + threadNum.incrementAndGet());
-        result.setDaemon(true);
-        return result;
-      }
-    });
+    ExecutorService execService =
+        LoggingExecutors.newCachedThreadPool("Start Sender Command Thread ", true);
-    List<Future<List>> futures = null;
+    List<Future<List>> futures;
-      GatewayCommandsUtils.accumulateStartResult(resultData, null, CliStrings.GATEWAY_ERROR,
+      return ResultModel.createError(
+    } finally {
+      execService.shutdown();
+    ResultModel resultModel = new ResultModel();
+    TabularResultModel resultData = resultModel.addTable(CliStrings.START_GATEWAYSENDER);
-        GatewayCommandsUtils.accumulateStartResult(resultData, memberStatus.get(0),
+        resultData.addMemberStatusResultRow(memberStatus.get(0),
-        GatewayCommandsUtils.accumulateStartResult(resultData, member.getId(),
+        resultData.addMemberStatusResultRow(member.getId(),
-    result = ResultBuilder.buildResult(resultData);
-    return result;
+    return resultModel;

MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 INS60 INS60 MOV60 MOV41 MOV43 MOV43 INS59 INS8 INS43 INS59 UPD43 UPD42 MOV32 MOV42 INS32 INS21 UPD42 MOV42 UPD42 MOV42 MOV14 UPD42 UPD42 INS32 UPD42 MOV42 MOV42 INS45 INS9 INS41 INS32 UPD43 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 UPD42 MOV32 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL43 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL31 DEL1 DEL14 DEL32 DEL59 DEL60 DEL33 DEL42 DEL33 DEL40 DEL21 DEL42 DEL43 DEL42 DEL45 DEL32 DEL27 DEL14 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL41