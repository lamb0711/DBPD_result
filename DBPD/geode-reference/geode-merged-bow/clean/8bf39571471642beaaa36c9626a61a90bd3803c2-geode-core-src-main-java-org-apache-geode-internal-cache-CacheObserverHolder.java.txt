Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class is intended to hold a single 'observer' which will receive
- * callbacks from the Distributed/Local Region when events like clear take
- * place. There can be only one such observer at a time. If no observer is
- * needed, this member variable should point to an object with 'do-nothing'
- * methods, such as CacheObserverAdapter.
+ * This class is intended to hold a single 'observer' which will receive callbacks from the
+ * Distributed/Local Region when events like clear take place. There can be only one such observer
+ * at a time. If no observer is needed, this member variable should point to an object with
+ * 'do-nothing' methods, such as CacheObserverAdapter.
- * Code which wishes to observe events during Region clear should do so using
- * the following technique:
+ * Code which wishes to observe events during Region clear should do so using the following
+ * technique:
- * class MyCacheObserver extends CacheObserverAdapter { // ... override methods
- * of interest ... }
+ * class MyCacheObserver extends CacheObserverAdapter { // ... override methods of interest ... }
- * try { Call region methods here } finally { // reset to the original
- * CacheObserver. CacheObserverHolder.setInstance(old); }
+ * try { Call region methods here } finally { // reset to the original CacheObserver.
+ * CacheObserverHolder.setInstance(old); }
- * The Region code will call methods on this static member using the following
- * technique:
+ * The Region code will call methods on this static member using the following technique:
- * observer.startMethod(arguments); doSomething(); } finally {
- * observer.stopMethod(arguments); }
+ * observer.startMethod(arguments); doSomething(); } finally { observer.stopMethod(arguments); }
-public class CacheObserverHolder  {
+public class CacheObserverHolder {
-   * Set the given observer to be notified of query events. Returns the current
-   * observer.
+   * Set the given observer to be notified of query events. Returns the current observer.
-    if (observer == null) observer = NO_OBSERVER;
+    if (observer == null)
+      observer = NO_OBSERVER;

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66