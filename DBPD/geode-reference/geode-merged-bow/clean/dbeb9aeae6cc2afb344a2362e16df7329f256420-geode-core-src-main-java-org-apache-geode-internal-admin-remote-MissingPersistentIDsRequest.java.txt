Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A request to all members for any persistent members that
- * they are waiting for.
- * TODO prpersist - This extends AdminRequest, but it doesn't
- * work with most of the admin paradigm, which is a request response
- * to a single member. Maybe we need to a new base class.
+ * A request to all members for any persistent members that they are waiting for. TODO prpersist -
+ * This extends AdminRequest, but it doesn't work with most of the admin paradigm, which is a
+ * request response to a single member. Maybe we need to a new base class.
-  
+
-    
+
-    
+
-    
+
-      if(!(e.getCause() instanceof CancelException)) {
+      if (!(e.getCause() instanceof CancelException)) {
-    
-    
-    MissingPersistentIDsResponse localResponse= (MissingPersistentIDsResponse) request.createResponse((DistributionManager)dm);
+
+
+    MissingPersistentIDsResponse localResponse =
+        (MissingPersistentIDsResponse) request.createResponse((DistributionManager) dm);
-    
+
-    if(cache != null && !cache.isClosed()) {
+    if (cache != null && !cache.isClosed()) {
-      for(Map.Entry<String, Set<PersistentMemberID>> entry: waitingRegions.entrySet()) {
-        for(PersistentMemberID id : entry.getValue()) {
+      for (Map.Entry<String, Set<PersistentMemberID>> entry : waitingRegions.entrySet()) {
+        for (PersistentMemberID id : entry.getValue()) {
-      for(PersistentMemberID id : localIds) {
+      for (PersistentMemberID id : localIds) {
-    
+
-  
-  
+
+
-  
+
-      if(msg instanceof MissingPersistentIDsResponse) {
-        missing.addAll(((MissingPersistentIDsResponse)msg).getMissingIds());
-        existing.addAll(((MissingPersistentIDsResponse)msg).getLocalIds());
+      if (msg instanceof MissingPersistentIDsResponse) {
+        missing.addAll(((MissingPersistentIDsResponse) msg).getMissingIds());
+        existing.addAll(((MissingPersistentIDsResponse) msg).getLocalIds());

UPD66 UPD66 UPD66 DEL66 DEL66