Merge branch 'release/1.8.0'

-import static org.apache.geode.distributed.ConfigurationPersistenceService.CLUSTER_CONFIG;
-import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
-import org.apache.geode.distributed.ConfigurationPersistenceService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
-    Collection<ConnectorService.RegionMapping> mappings = null;
+    Collection<RegionMapping> mappings = null;
-    // check if CC is available and use it to describe the connection
-    ConfigurationPersistenceService ccService = getConfigurationPersistenceService();
-    if (ccService != null) {
-      CacheConfig cacheConfig = ccService.getCacheConfig(CLUSTER_CONFIG);
-      if (cacheConfig != null) {
-        ConnectorService service =
-            cacheConfig.findCustomCacheElement("connector-service", ConnectorService.class);
-        if (service != null) {
-          mappings = service.getRegionMapping();
-        }
+    Set<DistributedMember> members = findMembers(null, null);
+    if (members.size() > 0) {
+      DistributedMember targetMember = members.iterator().next();
+      CliFunctionResult result =
+          executeFunctionAndGetFunctionResult(new ListMappingFunction(), null, targetMember);
+      if (result != null) {
+        mappings = (Collection<RegionMapping>) result.getResultObject();
-      // otherwise get it from any member
-      Set<DistributedMember> members = findMembers(null, null);
-      if (members.size() > 0) {
-        DistributedMember targetMember = members.iterator().next();
-        CliFunctionResult result =
-            executeFunctionAndGetFunctionResult(new ListMappingFunction(), null, targetMember);
-        if (result != null) {
-          mappings = (Collection<ConnectorService.RegionMapping>) result.getResultObject();
-        }
-      }
-    }
-
-    if (mappings == null) {
-      return ResultModel.createInfo(EXPERIMENTAL + "\n" + "No mappings found");
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-  private boolean fillTabularResultData(Collection<ConnectorService.RegionMapping> mappings,
+  private boolean fillTabularResultData(Collection<RegionMapping> mappings,
-    for (ConnectorService.RegionMapping mapping : mappings) {
+    if (mappings == null) {
+      return false;
+    }
+    for (RegionMapping mapping : mappings) {

UPD40 MOV8 MOV60 MOV60 MOV60 MOV25 UPD74 MOV74 INS25 UPD74 INS8 UPD43 MOV27 INS8 UPD43 INS41 INS42 INS41 UPD43 INS42 INS32 INS9 INS42 INS42 INS42 INS40 INS74 MOV43 INS43 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL41 DEL8 DEL25 DEL8 DEL40 DEL40 DEL43 DEL74 DEL40