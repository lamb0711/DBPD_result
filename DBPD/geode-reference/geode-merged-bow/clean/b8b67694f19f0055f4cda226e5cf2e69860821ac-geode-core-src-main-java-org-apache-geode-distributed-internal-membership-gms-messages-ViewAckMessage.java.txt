Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.distributed.internal.membership.NetView;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.Version;
-public class ViewAckMessage extends HighPriorityDistributionMessage {
+public class ViewAckMessage extends AbstractGMSMessage {
-  NetView alternateView;
+  GMSMembershipView alternateView;
-  public ViewAckMessage(InternalDistributedMember recipient, int viewId, boolean preparing) {
+  public ViewAckMessage(GMSMember recipient, int viewId, boolean preparing) {
-  public ViewAckMessage(int viewId, InternalDistributedMember recipient, NetView alternateView) {
+  public ViewAckMessage(int viewId, GMSMember recipient, GMSMembershipView alternateView) {
-  public NetView getAlternateView() {
+  public GMSMembershipView getAlternateView() {
-  public int getProcessorType() {
-    return 0;
-  }
-
-  @Override
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
-  }
-
-  @Override
-  public void toData(DataOutput out) throws IOException {
-    super.toData(out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
-    DataSerializer.writeObject(this.alternateView, out);
+    context.getSerializer().writeObject(this.alternateView, out);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    super.fromData(in);
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
-    this.alternateView = DataSerializer.readObject(in);
+    this.alternateView = (GMSMembershipView) context.getDeserializer().readObject(in);
-    String s = getSender() == null ? getRecipientsDescription() : "" + getSender();
+    String s = getSender() == null ? getRecipients().toString() : "" + getSender();
+  @Override
+  public Version[] getSerializationVersions() {
+    return null;
+  }

MOV31 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD43 INS44 INS44 INS5 INS42 UPD42 UPD43 UPD43 UPD43 UPD42 INS43 INS42 INS43 INS42 INS43 INS85 INS41 UPD42 UPD42 UPD42 INS42 INS42 UPD42 MOV42 INS33 INS32 INS11 INS42 UPD42 MOV42 INS43 INS32 INS32 INS42 INS32 MOV42 MOV42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL78 DEL83 DEL39 DEL42 DEL34 DEL41 DEL8 DEL31 DEL42 DEL42 DEL48 DEL21 DEL42 DEL42 DEL48 DEL21 DEL32 DEL32 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53