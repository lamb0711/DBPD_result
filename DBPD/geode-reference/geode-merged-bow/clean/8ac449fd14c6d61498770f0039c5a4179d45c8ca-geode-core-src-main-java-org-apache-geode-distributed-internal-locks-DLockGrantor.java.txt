GEODE-6379: track departed members to avoid processing in-flight lock request (#3176)



+import static java.util.concurrent.TimeUnit.DAYS;
+
+import java.util.LinkedHashMap;
+import org.apache.geode.annotations.VisibleForTesting;
+import org.apache.geode.cache.TransactionDataNodeHasDepartedException;
+  private final Map<InternalDistributedMember, Long> membersDepartedTime = new LinkedHashMap();
+  private final long departedMemberKeptInMapMilliSeconds = DAYS.toMillis(1);
+
-        this.resMgr.makeReservation((IdentityArrayList) batch.getReqs());
+        checkIfHostDeparted(batch.getOwner());
+        resMgr.makeReservation((IdentityArrayList) batch.getReqs());
+  private void checkIfHostDeparted(InternalDistributedMember owner) {
+    // Already held batchLocks; hold membersDepartedTime lock just for clarity
+    synchronized (membersDepartedTime) {
+      // the transaction host/txLock requester has departed.
+      if (membersDepartedTime.containsKey(owner)) {
+        throw new TransactionDataNodeHasDepartedException(
+            "The transaction host " + owner + " is no longer a member of the cluster.");
+      }
+    }
+  }
+
+      // put owner into the map first so that no new threads will handle in-flight requests
+      // from the departed member to lock keys
+      recordMemberDepartedTime(owner);
+
+  void recordMemberDepartedTime(InternalDistributedMember owner) {
+    // Already held batchLocks; hold membersDepartedTime lock just for clarity
+    synchronized (membersDepartedTime) {
+      long currentTime = getCurrentTime();
+      for (Iterator iterator = membersDepartedTime.values().iterator(); iterator.hasNext();) {
+        if ((long) iterator.next() < currentTime - departedMemberKeptInMapMilliSeconds) {
+          iterator.remove();
+        } else {
+          break;
+        }
+      }
+      membersDepartedTime.put(owner, currentTime);
+    }
+  }
+
+  long getCurrentTime() {
+    return System.currentTimeMillis();
+  }
+
+  @VisibleForTesting
+  Map getMembersDepartedTimeRecords() {
+    return membersDepartedTime;
+  }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS74 INS59 INS83 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS8 INS39 INS42 INS44 INS8 INS39 INS42 INS8 INS78 INS43 INS42 INS8 INS43 INS43 INS43 INS42 INS14 INS42 INS32 INS43 INS42 INS51 INS43 INS42 INS51 INS41 INS42 INS42 INS41 INS42 INS42 INS42 INS43 INS42 INS42 INS34 INS42 INS42 INS8 INS42 INS42 INS8 INS32 INS42 INS42 INS25 INS21 INS60 INS24 INS21 INS42 INS42 INS32 INS8 INS32 INS39 INS59 INS58 INS32 INS8 INS32 INS21 INS42 INS42 INS42 INS53 INS42 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS32 INS27 INS8 INS8 INS42 INS32 INS42 INS43 INS27 INS32 INS42 INS11 INS27 INS21 INS10 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS39 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22