Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+  
+  private static final byte[] TRUE;
+  private static final byte[] FALSE;
+
+  static {
+    try {
+      HeapDataOutputStream hdos = new HeapDataOutputStream(10, null);
+      BlobHelper.serializeTo(Boolean.TRUE, hdos);
+      TRUE = hdos.toByteArray();
+    } catch (Exception e) {
+      throw new IllegalStateException(e);
+    }
+
+    try {
+      HeapDataOutputStream hdos = new HeapDataOutputStream(10, null);
+      BlobHelper.serializeTo(Boolean.FALSE, hdos);
+      FALSE = hdos.toByteArray();
+    } catch (Exception e) {
+      throw new IllegalStateException(e);
+    }
+  }
+    addStringPart(str, false);
+  }
+  
+  private static final Map<String,byte[]> CACHED_STRINGS = new ConcurrentHashMap<String,byte[]>();
+  
+  public void addStringPart(String str, boolean enableCaching) {
-      HeapDataOutputStream hdos = new HeapDataOutputStream(str);
-      this.messageModified = true;
-      part.setPartState(hdos, false);
+      if (enableCaching) {
+        byte[] bytes = CACHED_STRINGS.get(str);
+        if (bytes == null) {
+          HeapDataOutputStream hdos = new HeapDataOutputStream(str);
+          bytes = hdos.toByteArray();
+          CACHED_STRINGS.put(str, bytes);
+        }
+        part.setPartState(bytes, false);
+      } else {
+        HeapDataOutputStream hdos = new HeapDataOutputStream(str);
+        this.messageModified = true;
+        part.setPartState(hdos, false);
+      }
-
+  
+
-      addRawPart((byte[])o, false);
+      addRawPart((byte[]) o, false);
+    } else if (o instanceof Boolean) {
+      addRawPart((Boolean) o ? TRUE : FALSE, true);

INS26 INS26 INS40 INS40 INS23 INS23 INS28 INS31 INS23 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS83 INS74 INS59 INS44 INS39 INS85 INS42 INS39 INS85 INS42 INS54 INS54 INS43 INS42 INS21 INS43 INS43 INS5 INS42 INS14 INS39 INS42 INS8 INS12 INS8 INS12 INS42 INS32 INS42 INS42 INS39 INS85 INS74 INS8 INS25 INS60 INS21 INS21 INS44 INS8 INS60 INS21 INS21 INS44 INS8 INS42 INS42 INS9 INS43 INS43 INS5 MOV60 INS25 MOV21 INS62 INS8 MOV8 INS43 INS59 INS32 INS7 INS43 INS42 INS53 INS43 INS59 INS32 INS7 INS43 INS42 INS53 INS42 INS42 INS39 INS85 INS42 INS8 MOV8 INS42 INS43 INS21 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS14 INS60 INS25 INS21 INS42 INS32 INS43 INS34 INS33 INS42 INS42 INS43 INS42 INS43 INS34 INS33 INS42 INS42 INS43 INS42 INS5 INS59 INS27 INS8 INS32 INS42 INS16 INS9 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS32 INS42 INS33 INS60 INS21 INS21 INS42 INS42 INS42 INS9 INS11 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS32 INS43 INS42 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42