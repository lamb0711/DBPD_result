GEODE-77 improved handling of join requests having the same host:port as a previous member

This adds a check of the UUID bytes in an address's NetMember in
compareTo to keep a new address from matching an old one.  The
test TXDistributedDUnitTest was failing consistently when a member
crashed its distributed system and then tried to reconnect immediately.
This is due to how JGroups allocates its ports starting with the first
number in the port range and sequencing through until it finds one that's
available.  GemFire had used a random selection algorithm for this.

-public interface NetMember
+public interface NetMember extends Comparable<NetMember>
-  /**
-   * Establishes an order between 2 addresses. Assumes other contains non-null IpAddress.
-   * Excludes channel_name from comparison.
-   * @return 0 for equality, value less than 0 if smaller, greater than 0 if greater.
-   */
-  public int compare(NetMember other);
-
-  /**
-   * implements the java.lang.Comparable interface
-   * @see java.lang.Comparable
-   * @param o - the Object to be compared
-   * @return a negative integer, zero, or a positive integer as this object is less than,
-   *         equal to, or greater than the specified object.
-   * @exception java.lang.ClassCastException - if the specified object's type prevents it
-   *            from being compared to this Object.
-   */
-  public int compareTo(Object o);
-
-  public boolean equals(Object obj);
-
-  public int hashCode();
-
-  public String toString();
-  

INS74 INS43 MOV43 UPD42 MOV42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL44 DEL31 DEL66 DEL65 DEL40 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL40 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL31 DEL83 DEL39 DEL42 DEL31 DEL83 DEL42 DEL43 DEL42 DEL31