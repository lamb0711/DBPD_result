GEODE-6174: ClusterManagementResult should have a cleaner way to indicate the status code and message (#3251)

Co-authored-by: Peter Tran <ptran@pivotal.io>

* add status code to indicate different types of failure
* make sure we always have a statusCode in the ClusterManagementService
* removed unnecessary getter methods.
-import javax.management.InstanceNotFoundException;
-import javax.management.MalformedObjectNameException;
+import org.apache.geode.management.internal.exceptions.EntityNotFoundException;
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
+    return new ResponseEntity<>(
+        new ClusterManagementResult(ClusterManagementResult.StatusCode.ERROR,
+            e.getMessage()),
-    // for idempotency, we treat EntityExistsException as OK
-    return new ResponseEntity<>(new ClusterManagementResult(true, e.getMessage()),
-        HttpStatus.OK);
+    return new ResponseEntity<>(
+        new ClusterManagementResult(ClusterManagementResult.StatusCode.ENTITY_EXISTS,
+            e.getMessage()),
+        HttpStatus.CONFLICT);
+  }
+
+  @ExceptionHandler(EntityNotFoundException.class)
+  public ResponseEntity<ClusterManagementResult> entityNotFound(final Exception e) {
+    return new ResponseEntity<>(
+        new ClusterManagementResult(ClusterManagementResult.StatusCode.ENTITY_NOT_FOUND,
+            e.getMessage()),
+        HttpStatus.NOT_FOUND);
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
+    return new ResponseEntity<>(
+        new ClusterManagementResult(ClusterManagementResult.StatusCode.UNAUTHENTICATED,
+            e.getMessage()),
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
+    return new ResponseEntity<>(new ClusterManagementResult(
+        ClusterManagementResult.StatusCode.UNAUTHORIZED, e.getMessage()),
-  @ExceptionHandler(MalformedObjectNameException.class)
-  public ResponseEntity<ClusterManagementResult> badRequest(final MalformedObjectNameException e) {
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.BAD_REQUEST);
-  }
-
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
+    return new ResponseEntity<>(
+        new ClusterManagementResult(ClusterManagementResult.StatusCode.ILLEGAL_ARGUMENT,
+            e.getMessage()),
-  @ExceptionHandler(InstanceNotFoundException.class)
-  public ResponseEntity<ClusterManagementResult> notFound(final InstanceNotFoundException e) {
-    return new ResponseEntity<>(new ClusterManagementResult(false, e.getMessage()),
-        HttpStatus.NOT_FOUND);
-  }
-    return new ResponseEntity<>(new ClusterManagementResult(false, cause.getMessage()),
+    return new ResponseEntity<>(
+        new ClusterManagementResult(ClusterManagementResult.StatusCode.UNAUTHORIZED,
+            cause.getMessage()),

MOV26 MOV31 UPD40 MOV74 UPD42 MOV8 INS8 UPD43 INS41 UPD43 UPD42 INS14 UPD40 UPD42 UPD40 INS74 INS14 INS40 MOV74 INS40 INS40 INS40 INS43 INS43 INS40 INS32 INS40 MOV32 INS40 INS40 INS42 INS42 INS42 INS42 MOV42 MOV42 MOV42 DEL40 DEL26 DEL9 DEL9 DEL42 DEL43 DEL42 DEL43 DEL74 DEL9 DEL42 DEL43 DEL74 DEL42 DEL43 DEL9 DEL42 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL9 DEL42 DEL42 DEL43 DEL57 DEL79 DEL83 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL9 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL9 DEL9