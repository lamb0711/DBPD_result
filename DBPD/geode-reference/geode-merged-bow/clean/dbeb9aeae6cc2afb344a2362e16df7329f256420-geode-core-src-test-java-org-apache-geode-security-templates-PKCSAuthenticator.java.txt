Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public void init(final Properties securityProperties, final LogWriter systemLogWriter, final LogWriter securityLogWriter) throws AuthenticationFailedException {
+  public void init(final Properties securityProperties, final LogWriter systemLogWriter,
+      final LogWriter securityLogWriter) throws AuthenticationFailedException {
-      throw new AuthenticationFailedException("PKCSAuthenticator: property " + PUBLIC_KEY_FILE + " not specified as the public key file.");
+      throw new AuthenticationFailedException("PKCSAuthenticator: property " + PUBLIC_KEY_FILE
+          + " not specified as the public key file.");
-  public Principal authenticate(final Properties credentials, final DistributedMember member) throws AuthenticationFailedException {
-    final String alias = (String)credentials.get(PKCSAuthInit.KEYSTORE_ALIAS);
+  public Principal authenticate(final Properties credentials, final DistributedMember member)
+      throws AuthenticationFailedException {
+    final String alias = (String) credentials.get(PKCSAuthInit.KEYSTORE_ALIAS);
-      final byte[] signatureBytes = (byte[])credentials.get(PKCSAuthInit.SIGNATURE_DATA);
+      final byte[] signatureBytes = (byte[]) credentials.get(PKCSAuthInit.SIGNATURE_DATA);
-        throw newException("signature data property [" + PKCSAuthInit.SIGNATURE_DATA + "] not provided");
+        throw newException(
+            "signature data property [" + PKCSAuthInit.SIGNATURE_DATA + "] not provided");
-  public void close() {
-  }
+  public void close() {}
-        final Certificate cert = keyStore.getCertificate((String)alias);
+        final Certificate cert = keyStore.getCertificate((String) alias);
-      throw new AuthenticationFailedException("Exception while getting public keys: " + e.getMessage(), e);
+      throw new AuthenticationFailedException(
+          "Exception while getting public keys: " + e.getMessage(), e);
-    final String fullMessage = "PKCSAuthenticator: Authentication of client failed due to: " + message;
+    final String fullMessage =
+        "PKCSAuthenticator: Authentication of client failed due to: " + message;
-  private X509Certificate getCertificate(final String alias) throws NoSuchAlgorithmException, InvalidKeySpecException {
+  private X509Certificate getCertificate(final String alias)
+      throws NoSuchAlgorithmException, InvalidKeySpecException {

