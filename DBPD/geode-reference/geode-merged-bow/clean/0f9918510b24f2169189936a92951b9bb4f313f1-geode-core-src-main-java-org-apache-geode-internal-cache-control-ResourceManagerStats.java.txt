GEODE-7953: Restore Redundancy Internal API (#4909)

* GEODE-7953: Restore Redundancy Internal API

- Add RestoreRedundancyOperation interface and Impl class
- Add RestoreRedundancyResults interface and Impl class
- Add RegionRedundancyStatus interface and Impl class
- Add accessor methods for RestoreRedundancyOperation to ResourceManager interface
- Replace manually-synchronized sets in InternalResourceManager with
ConcurrentHashMap
- Add stats for restore redundancy operations
- Add unit and DUnit tests for all the above

Authored-by: Donal Evans <doevans@pivotal.io>
+  private static final int restoreRedundanciesInProgressId;
+  private static final int restoreRedundanciesCompletedId;
+  private static final int restoreRedundancyTimeId;
+            f.createLongCounter("restoreRedundanciesInProgress",
+                "Current number of cache restore redundancy operations being directed by this process.",
+                "operations"),
+            f.createLongCounter("restoreRedundanciesCompleted",
+                "Total number of cache restore redundancy operations directed by this process.",
+                "operations"),
+            f.createLongCounter("restoreRedundancyTime",
+                "Total time spent directing cache restore redundancy operations.", "nanoseconds",
+                false),
+
+    restoreRedundanciesInProgressId = type.nameToId("restoreRedundanciesInProgress");
+    restoreRedundanciesCompletedId = type.nameToId("restoreRedundanciesCompleted");
+    restoreRedundancyTimeId = type.nameToId("restoreRedundancyTime");
+  public long startRestoreRedundancy() {
+    this.stats.incLong(restoreRedundanciesInProgressId, 1);
+    return System.nanoTime();
+  }
+
+  public void endRestoreRedundancy(long start) {
+    long elapsed = System.nanoTime() - start;
+    this.stats.incLong(restoreRedundanciesInProgressId, -1);
+    this.stats.incLong(restoreRedundanciesCompletedId, 1);
+    this.stats.incLong(restoreRedundancyTimeId, elapsed);
+  }
+
+  public long getRestoreRedundanciesInProgress() {
+    return this.stats.getLong(restoreRedundanciesInProgressId);
+  }
+
+  public long getRestoreRedundanciesCompleted() {
+    return this.stats.getLong(restoreRedundanciesCompletedId);
+  }
+
+  public long getRestoreRedundancyTime() {
+    return this.stats.getLong(restoreRedundancyTimeId);
+  }
+

INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS42 INS21 INS21 INS21 INS21 INS41 INS39 INS42 INS60 INS21 INS21 INS21 INS41 INS41 INS41 INS7 INS7 INS7 INS32 INS32 INS39 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS22 INS42 INS42 INS34 INS42 INS42 INS42 INS27 INS22 INS42 INS42 INS38 INS22 INS42 INS42 INS34 INS22 INS42 INS42 INS42 INS22 INS42 INS42 INS22 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS52 INS42 INS32 INS42 INS52 INS42 INS34 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS45 INS45 INS45 INS42 INS42 INS45 INS45 INS45 INS42 INS42 INS45 INS45 INS45 INS9