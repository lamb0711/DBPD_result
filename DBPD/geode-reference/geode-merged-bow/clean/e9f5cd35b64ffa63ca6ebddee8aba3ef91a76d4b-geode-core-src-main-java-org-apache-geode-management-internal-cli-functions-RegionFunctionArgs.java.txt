GEODE-5971: Refactor CreateRegionCommand to extend SingleGfshCommand

- Store config via generating a RegionConfig object rather than an XML
entity

Signed-off-by: Peter Tran <ptran@pivotal.io>
Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>
Signed-off-by: Jens Deppe <jdeppe@pivotal.io>

+import org.apache.geode.cache.configuration.EnumActionDestroyOverflow;
+import org.apache.geode.cache.configuration.RegionAttributesType;
-  public RegionFunctionArgs() {
-    this.partitionArgs = new PartitionArgs();
-  }
+  public RegionFunctionArgs() {}
+    if (timeout == null && action == null) {
+      return;
+    }
+
+    if (timeout == null && action == null) {
+      return;
+    }
+
+    if (timeout == null && action == null) {
+      return;
+    }
+
+    if (timeout == null && action == null) {
+      return;
+    }
+
+    if (prColocatedWith == null &&
+        prLocalMaxMemory == null &&
+        prRecoveryDelay == null &&
+        prRedundantCopies == null &&
+        prStartupRecoveryDelay == null &&
+        prTotalMaxMemory == null &&
+        prTotalNumBuckets == null &&
+        partitionResolver == null) {
+      return;
+    }
+    if (partitionArgs == null) {
+      partitionArgs = new PartitionArgs();
+    }
-  public Boolean isStatisticsEnabled() {
+  public Boolean getStatisticsEnabled() {
-  public Boolean isDiskSynchronous() {
+  public Boolean getDiskSynchronous() {
-  public Boolean isOffHeap() {
+  public Boolean getOffHeap() {
-  public Boolean isEnableAsyncConflation() {
+  public Boolean getEnableAsyncConflation() {
-  public Boolean isEnableSubscriptionConflation() {
+  public Boolean getEnableSubscriptionConflation() {
-  public Boolean isConcurrencyChecksEnabled() {
+  public Boolean getConcurrencyChecksEnabled() {
-  public Boolean isCloningEnabled() {
+  public Boolean getCloningEnabled() {
-  public Boolean isMcastEnabled() {
+  public Boolean getMcastEnabled() {
-    return this.partitionArgs.hasPartitionAttributes();
+    return this.partitionArgs != null && this.partitionArgs.hasPartitionAttributes();
-  public EvictionAttributes getEvictionAttributes() {
-    return evictionAttributes != null ? evictionAttributes.convertToEvictionAttributes() : null;
+  public EvictionAttrs getEvictionAttributes() {
+    return this.evictionAttributes;
+
+    public RegionAttributesType.EvictionAttributes convertToConfigEvictionAttributes() {
+      RegionAttributesType.EvictionAttributes configAttributes =
+          new RegionAttributesType.EvictionAttributes();
+      EnumActionDestroyOverflow action = EnumActionDestroyOverflow.fromValue(evictionAction);
+
+      if (maxMemory == null && maxEntryCount == null) {
+        RegionAttributesType.EvictionAttributes.LruHeapPercentage heapPercentage =
+            new RegionAttributesType.EvictionAttributes.LruHeapPercentage();
+        heapPercentage.setAction(action);
+        heapPercentage.setClassName(objectSizer);
+        configAttributes.setLruHeapPercentage(heapPercentage);
+      } else if (maxMemory != null) {
+        RegionAttributesType.EvictionAttributes.LruMemorySize memorySize =
+            new RegionAttributesType.EvictionAttributes.LruMemorySize();
+        memorySize.setAction(action);
+        memorySize.setClassName(objectSizer);
+        memorySize.setMaximum(maxMemory.toString());
+        configAttributes.setLruMemorySize(memorySize);
+      } else {
+        RegionAttributesType.EvictionAttributes.LruEntryCount entryCount =
+            new RegionAttributesType.EvictionAttributes.LruEntryCount();
+        entryCount.setAction(action);
+        entryCount.setMaximum(maxEntryCount.toString());
+        configAttributes.setLruEntryCount(entryCount);
+      }
+
+      return configAttributes;
+    }

INS26 INS26 INS40 INS40 INS8 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 INS31 INS25 INS25 INS25 INS25 INS25 INS25 UPD42 INS83 INS43 INS42 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 MOV8 INS27 INS22 INS40 INS60 INS60 INS25 INS41 INS27 INS27 INS41 INS27 INS27 INS41 INS27 INS27 INS41 INS27 INS27 INS41 INS27 INS27 INS41 INS42 INS33 INS27 MOV32 INS52 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS42 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS27 INS27 INS42 INS33 MOV22 INS33 INS40 INS42 INS14 INS42 INS42 INS32 INS27 INS27 INS60 INS21 INS21 INS21 INS27 INS8 INS8 INS27 INS27 INS42 INS33 INS42 INS43 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS43 INS59 INS32 INS32 INS32 INS42 INS33 INS60 INS21 INS21 INS21 INS21 INS60 INS21 INS21 INS21 INS27 INS27 INS42 INS33 INS40 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS43 INS59 INS32 INS32 INS32 INS27 INS27 INS42 INS33 INS43 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS27 INS42 INS33 INS40 INS43 INS42 INS42 INS43 INS42 INS42 INS27 INS27 INS42 INS33 INS40 INS40 INS42 INS33 INS42 INS33 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL16