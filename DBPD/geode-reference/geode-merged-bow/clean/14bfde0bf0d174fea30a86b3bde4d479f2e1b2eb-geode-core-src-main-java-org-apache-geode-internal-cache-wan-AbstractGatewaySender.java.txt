Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingThread;
-          LocalizedStrings.GatewaySenderImpl_NULL_CANNNOT_BE_ADDED_TO_GATEWAY_EVENT_FILTER_LIST
-              .toLocalizedString());
+          "null value can not be added to gateway-event-filters list");
-              LocalizedStrings.GatewaySender_COULD_NOT_DESTROY_SENDER_AS_IT_IS_STILL_IN_USE
-                  .toLocalizedString(this));
+              String.format(
+                  "The GatewaySender %s could not be destroyed as it is still used by region(s).",
+                  this));
-              this.logger.info(LocalizedMessage.create(
-                  LocalizedStrings.AbstractGatewaySender_REGION_0_UNDERLYING_GATEWAYSENDER_1_IS_ALREADY_DESTROYED,
-                  new Object[] {e.getRegionFullPath(), this}));
+              this.logger.info(
+                  "Region {} that underlies the GatewaySender {} is already destroyed.",
+                  e.getRegionFullPath(), this);
-        LocalizedMessage.create(LocalizedStrings.GatewayImpl_GATEWAY_0_HAS_BEEN_REBALANCED, this));
+        "GatewaySender {} has been rebalanced", this);
-    ThreadGroup tg = LoggingThreadGroup.createThreadGroup("Proxy Stomper Group", logger);
-    Thread t = new Thread(tg, stomper, "GatewaySender Proxy Stomper");
-    t.setDaemon(true);
+    Thread t = new LoggingThread("GatewaySender Proxy Stomper", stomper);
-    logger.warn(LocalizedMessage.create(
-        LocalizedStrings.GatewayImpl_GATEWAY_0_IS_NOT_CLOSING_CLEANLY_FORCING_CANCELLATION, this));
+    logger.warn("Gateway <{}> is not closing cleanly; forcing cancellation.", this);
-            LocalizedStrings.Sender_COULD_NOT_START_GATEWAYSENDER_0_BECAUSE_OF_EXCEPTION_1
-                .toLocalizedString(new Object[] {this.getId(), ex.getMessage()}),
+            String.format("Could not start a gateway sender %s because of exception %s",
+                new Object[] {this.getId(), ex.getMessage()}),
-        logger.info(LocalizedMessage.create(LocalizedStrings.GatewaySender_PAUSED__0, this));
+        logger.info("Paused {}", this);
-        logger.info(LocalizedMessage.create(LocalizedStrings.GatewaySender_RESUMED__0, this));
+        logger.info("Resumed {}", this);
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-              new Object[] {this, getId(), operation, clonedEvent}), e);
+          logger.warn(String.format(
+              "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+              new Object[] {this, getId(), operation, clonedEvent}),
+              e);
-          logger.fatal(LocalizedMessage.create(
-              LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-              new Object[] {this, getId(), operation, clonedEvent}), e);
+          logger.fatal(String.format(
+              "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+              new Object[] {this, getId(), operation, clonedEvent}),
+              e);
-        logger.fatal(LocalizedMessage.create(
-            LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-            new Object[] {this, getId(), nextEvent.getOperation(), nextEvent}), e);
+        logger.fatal(String.format(
+            "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+            new Object[] {this, getId(), nextEvent.getOperation(), nextEvent}),
+            e);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-            new Object[] {this, getId(), operation, clonedEvent}), e);
+        logger.warn(String.format(
+            "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+            new Object[] {this, getId(), operation, clonedEvent}),
+            e);
-            LocalizedStrings.AbstractGatewaySender_FAILED_TO_LOCK_META_REGION_0
-                .toLocalizedString(this));
+            String.format("%s: Failed to lock gateway event id index metadata region",
+                this));
-                LocalizedStrings.AbstractGatewaySender_CANNOT_CREATE_SENDER_0_BECAUSE_MAXIMUM_1_HAS_BEEN_REACHED
-                    .toLocalizedString(getId(), ThreadIdentifier.Bits.GATEWAY_ID.mask() + 1));
+                String.format(
+                    "Cannot create GatewaySender %s because the maximum (%s) has been reached",
+                    getId(), ThreadIdentifier.Bits.GATEWAY_ID.mask() + 1));
-            LocalizedStrings.AbstractGatewaySender_META_REGION_CREATION_EXCEPTION_0
-                .toLocalizedString(sender),
+            String.format(
+                "%s: Caught the following exception attempting to create gateway event id index metadata region:",
+                sender),
-            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETRYING
-                .toLocalizedString(),
+            "Caught the following exception attempting waitUntilFlushed and will retry:",
-            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETURNING
-                .toLocalizedString(),
+            "Caught the following exception attempting waitUntilFlushed and will return:",
-          LocalizedStrings.AbstractGatewaySender_WAIT_UNTIL_FLUSHED_NOT_SUPPORTED_FOR_SERIAL_SENDERS
-              .toLocalizedString());
+          "waitUntilFlushed is not currently supported for serial gateway senders");
-          logger.info(LocalizedMessage.create(
-              LocalizedStrings.AbstractGatewaySender_PROVIDING_SYNCHRONIZATION_EVENT,
-              new Object[] {this, key, timestamp, event}));
+          logger.info("{}: Providing synchronization event for key={}; timestamp={}: {}",
+              this, key, timestamp, event);
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.AbstractGatewaySender_ENQUEUEING_SYNCHRONIZATION_EVENT,
-            new Object[] {this, event}));
+        logger.info("{}: Enqueueing synchronization event: {}",
+            this, event);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ENQUEUEING_SYNCHRONIZATION_EVENT,
-            new Object[] {this, event}), t);
+        logger.warn(String.format(
+            "%s: Caught the following exception attempting to enqueue synchronization event=%s:",
+            new Object[] {this, event}),
+            t);

UPD40 INS45 MOV52 INS45 MOV52 UPD43 INS45 INS8 INS12 INS45 UPD42 MOV12 INS45 MOV21 MOV21 MOV21 MOV44 MOV8 INS45 MOV52 INS45 MOV52 MOV44 MOV44 UPD42 INS45 INS52 INS42 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 INS45 UPD42 INS42 UPD42 UPD42 INS45 UPD42 UPD42 INS45 UPD42 INS42 INS45 INS45 INS52 INS42 INS42 INS42 UPD42 UPD42 INS45 UPD42 INS42 INS45 UPD42 UPD42 UPD42 UPD42 INS45 UPD42 UPD42 INS45 UPD42 INS42 INS45 INS45 MOV32 INS52 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL52 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL59 DEL60 DEL42 DEL45 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL52 DEL42 DEL42 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL52 DEL42 DEL4 DEL3 DEL32 DEL42 DEL40 DEL8 DEL12