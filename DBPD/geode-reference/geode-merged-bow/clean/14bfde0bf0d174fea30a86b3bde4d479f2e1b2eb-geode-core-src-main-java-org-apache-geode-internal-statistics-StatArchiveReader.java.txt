Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-        throw new InternalGemFireException(LocalizedStrings.StatArchiveReader_UNEXPECTED_TYPECODE_0
-            .toLocalizedString(Integer.valueOf(type)));
+        throw new InternalGemFireException(String.format("Unexpected typecode %s",
+            Integer.valueOf(type)));
-              LocalizedStrings.StatArchiveReader_FILTER_VALUE_0_MUST_BE_1_2_OR_3.toLocalizedString(
+              String.format("Filter value %s must be %s, %s, or %s.",
-              LocalizedStrings.StatArchiveReader_CANT_COMBINE_VALUES_WITH_DIFFERENT_FILTERS
-                  .toLocalizedString());
+              "Cannot combine values with different filters.");
-              LocalizedStrings.StatArchiveReader_CANT_COMBINE_VALUES_WITH_DIFFERENT_TYPES
-                  .toLocalizedString());
+              "Cannot combine values with different types.");
-              LocalizedStrings.StatArchiveReader_CANT_COMBINE_DIFFERENT_STATS.toLocalizedString());
+              "Cannot combine different stats.");
-          // its a counter which is not the default
+          // it is a counter which is not the default
-            // this guy has non-defaults for both use him
+            // this value has non-defaults for both, use it
-            // as long as we haven't already found a guy with defaults
-            // make this guy the best type
+            // as long as we haven't already found a value with defaults
+            // make this value the best type
-            // as long as we haven't already found a guy with defaults
+            // as long as we haven't already found a value with defaults
-              // make this guy the best type
+              // make this value the best type
-            LocalizedStrings.StatArchiveReader_GETVALUESEX_DIDNT_FILL_THE_LAST_0_ENTRIES_OF_ITS_RESULT
-                .toLocalizedString(Integer.valueOf(resultSize - idx)));
+            String.format("getValuesEx did not fill the last %s entries of its result.",
+                Integer.valueOf(resultSize - idx)));
-     * this guy is no longer needed.
+     * this resource is no longer needed.
-     * this guy is no longer needed.
+     * these stats are no longer needed.
-            LocalizedStrings.StatArchiveReader_UPDATE_OF_THIS_TYPE_OF_FILE_IS_NOT_SUPPORTED
-                .toLocalizedString());
+            "update of this type of file is not supported.");
-            LocalizedStrings.StatArchiveReader_ARCHIVE_VERSION_0_IS_NO_LONGER_SUPPORTED
-                .toLocalizedString(Byte.valueOf(archiveVersion)),
+            String.format("Archive version: %s is no longer supported.",
+                Byte.valueOf(archiveVersion)),
-            LocalizedStrings.StatArchiveReader_UNSUPPORTED_ARCHIVE_VERSION_0_THE_SUPPORTED_VERSION_IS_1
-                .toLocalizedString(
-                    new Object[] {Byte.valueOf(archiveVersion), Byte.valueOf(ARCHIVE_VERSION)}),
+            String.format("Unsupported archive version: %s .  The supported version is: %s .",
+
+                new Object[] {Byte.valueOf(archiveVersion), Byte.valueOf(ARCHIVE_VERSION)}),
-              throw new IOException(LocalizedStrings.StatArchiveReader_UNEXPECTED_TYPECODE_VALUE_0
-                  .toLocalizedString(Byte.valueOf(stats[i].getTypeCode())));
+              throw new IOException(String.format("unexpected typeCode value %s",
+                  Byte.valueOf(stats[i].getTypeCode())));
-              throw new IOException(LocalizedStrings.StatArchiveReader_UNEXPECTED_TYPECODE_VALUE_0
-                  .toLocalizedString(Byte.valueOf(stats[statOffset].getTypeCode())));
+              throw new IOException(String.format("unexpected typeCode value %s",
+                  Byte.valueOf(stats[statOffset].getTypeCode())));
-            throw new IOException(LocalizedStrings.StatArchiveReader_UNEXPECTED_TOKEN_BYTE_VALUE_0
-                .toLocalizedString(Byte.valueOf(token)));
+            throw new IOException(String.format("Unexpected token byte value: %s",
+                Byte.valueOf(token)));

UPD66 UPD66 UPD42 INS42 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 DEL40 DEL26 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40