GEODE-1373: resolve the shiro subject in JMX AccessControlContext first

+import java.security.AccessController;
+import java.util.Set;
+import com.gemstone.gemfire.internal.security.shiro.ShiroPrincipal;
-  public static void login(String username, String password){
-    if(!isShiroConfigured())
-      return;
+  /**
+   *
+   * @param username
+   * @param password
+   * @return null if security is not enabled, otherwise return a shiro subject
+   */
+  public static Subject login(String username, String password){
+    if(!isSecured())
+      return null;
+
+    return currentUser;
+  }
+
+  /**
+   * It first looks the shiro subject in AccessControlContext since JMX will use multiple threads to process operations from the same client.
+   * then it looks into Shiro's thead context.
+   *
+   * @return the shiro subject, null if security is not enabled
+   */
+  public static Subject getSubject(){
+    if(!isSecured())
+      return null;
+
+    Subject currentUser = null;
+
+    // First try get the principal out of AccessControlContext instead of Shiro's Thread context
+    // since threads can be shared between JMX clients.
+    javax.security.auth.Subject jmxSubject =
+      javax.security.auth.Subject.getSubject(AccessController.getContext());
+
+    if(jmxSubject!=null){
+      Set<ShiroPrincipal> principals = jmxSubject.getPrincipals(ShiroPrincipal.class);
+      if(principals.size()>0){
+        ShiroPrincipal principal = principals.iterator().next();
+        currentUser = principal.getSubject();
+        ThreadContext.bind(currentUser);
+        return currentUser;
+      }
+    }
+
+    // in other cases like admin rest call or pulse authorization
+    currentUser = SecurityUtils.getSubject();
+
+    if(currentUser==null || currentUser.getPrincipal()==null){
+      throw new GemFireSecurityException("Error: Anonymous User");
+    }
+
+    return currentUser;
-    if(!isShiroConfigured())
+    Subject currentUser = getSubject();
+    if(currentUser==null)
-    Subject currentUser = SecurityUtils.getSubject();
-    if(!isShiroConfigured())
+    Subject currentUser = getSubject();
+    if(currentUser==null)
-    Subject currentUser = SecurityUtils.getSubject();
-    if(!isShiroConfigured())
+    Subject currentUser = getSubject();
+    if(currentUser==null)
-
-    Subject currentUser = SecurityUtils.getSubject();
-  private static boolean isShiroConfigured(){
+  private static boolean isSecured(){

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS31 INS29 INS43 INS29 INS43 INS42 INS83 INS83 MOV43 INS42 MOV44 INS8 UPD42 INS65 INS65 INS65 INS42 INS41 INS65 INS65 INS42 INS60 INS60 INS25 INS21 INS25 INS41 INS25 INS60 INS25 MOV41 INS25 INS42 INS42 INS66 INS42 INS66 INS66 INS66 INS41 MOV43 INS59 INS43 INS59 INS27 INS8 INS7 INS27 INS8 INS42 INS27 INS41 INS43 INS59 INS27 MOV41 INS27 INS41 INS33 INS33 MOV42 INS33 INS40 INS42 INS32 INS42 INS33 INS60 INS25 INS42 INS32 INS27 INS27 INS53 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS42 INS33 UPD42 UPD42 INS40 INS42 INS32 INS74 INS59 INS27 INS8 MOV42 MOV42 INS42 INS33 INS32 INS33 INS14 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS32 INS34 INS60 INS21 INS21 INS41 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS43 INS59 INS7 INS32 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL39 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL38 DEL41 DEL25 DEL42 DEL42 DEL32 DEL38 DEL41 DEL25 DEL42