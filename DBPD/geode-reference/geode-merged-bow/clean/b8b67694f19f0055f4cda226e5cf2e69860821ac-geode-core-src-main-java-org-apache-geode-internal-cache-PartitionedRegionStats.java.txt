Merge branch 'develop' into feature/GEODE-7049

-
+import org.apache.geode.internal.statistics.StatisticsClock;
+  private final StatisticsClock clock;
+
-  public static long startTime() {
-    return CachePerfStats.getStatTime();
-  }
+  public PartitionedRegionStats(StatisticsFactory factory, String name, StatisticsClock clock) {
+    stats = factory.createAtomicStatistics(type, name);
-  public static long getStatTime() {
-    return CachePerfStats.getStatTime();
-  }
-
-  public PartitionedRegionStats(StatisticsFactory factory, String name) {
-    this.stats = factory.createAtomicStatistics(type, name /* fixes bug 42343 */);
-
-    if (CachePerfStats.enableClockStats) {
-      this.startTimeMap = new ConcurrentHashMap();
+    if (clock.isEnabled()) {
+      startTimeMap = new ConcurrentHashMap();
-      this.startTimeMap = Collections.EMPTY_MAP;
+      startTimeMap = Collections.emptyMap();
+
+    this.clock = clock;
+  public long getTime() {
+    return clock.getTime();
+  }
+
-    if (CachePerfStats.enableClockStats) {
-      long delta = CachePerfStats.getStatTime() - start;
+    if (clock.isEnabled()) {
+      long delta = clock.getTime() - start;
-    if (CachePerfStats.enableClockStats) {
-      long delta = CachePerfStats.getStatTime() - start;
+    if (clock.isEnabled()) {
+      long delta = clock.getTime() - start;
-    if (CachePerfStats.enableClockStats) {
-      long delta = CachePerfStats.getStatTime() - start;
+    if (clock.isEnabled()) {
+      long delta = clock.getTime() - start;
-    if (CachePerfStats.enableClockStats) {
-      this.stats.incLong(createTimeId, CachePerfStats.getStatTime() - start);
+    if (clock.isEnabled()) {
+      this.stats.incLong(createTimeId, clock.getTime() - start);
-    if (CachePerfStats.enableClockStats) {
-      final long delta = CachePerfStats.getStatTime() - start;
+    if (clock.isEnabled()) {
+      final long delta = clock.getTime() - start;
-    if (CachePerfStats.enableClockStats) {
-      this.stats.incLong(destroyTimeId, CachePerfStats.getStatTime() - start);
+    if (clock.isEnabled()) {
+      this.stats.incLong(destroyTimeId, clock.getTime() - start);
-    if (CachePerfStats.enableClockStats) {
-      this.stats.incLong(invalidateTimeId, CachePerfStats.getStatTime() - start);
+    if (clock.isEnabled()) {
+      this.stats.incLong(invalidateTimeId, clock.getTime() - start);
-    if (CachePerfStats.enableClockStats) {
-      this.stats.incLong(containsKeyTimeId, CachePerfStats.getStatTime() - start);
+    if (clock.isEnabled()) {
+      this.stats.incLong(containsKeyTimeId, clock.getTime() - start);
-    if (CachePerfStats.enableClockStats) {
-      this.stats.incLong(containsValueForKeyTimeId, CachePerfStats.getStatTime() - start);
+    if (clock.isEnabled()) {
+      this.stats.incLong(containsValueForKeyTimeId, clock.getTime() - start);
-    return startTime();
+    return getTime();
-    if (CachePerfStats.enableClockStats) {
-      long delta = CachePerfStats.getStatTime() - start;
+    if (clock.isEnabled()) {
+      long delta = clock.getTime() - start;
-    return CachePerfStats.getStatTime();
+    return clock.getTime();
-    long ts = CachePerfStats.getStatTime();
+    long ts = clock.getTime();
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    long ts = CachePerfStats.getStatTime();
+    long ts = clock.getTime();
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    long ts = CachePerfStats.getStatTime();
+    long ts = clock.getTime();
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    if (CachePerfStats.enableClockStats) {
-      this.stats.incLong(getEntryTimeId, CachePerfStats.getStatTime() - start);
+    if (clock.isEnabled()) {
+      this.stats.incLong(getEntryTimeId, clock.getTime() - start);
-    return PartitionedRegionStats.getStatTime();
+    return clock.getTime();
-    long ts = PartitionedRegionStats.getStatTime();
+    long ts = clock.getTime();
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    return PartitionedRegionStats.getStatTime();
+    return clock.getTime();
-    long ts = PartitionedRegionStats.getStatTime();
+    long ts = clock.getTime();
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    return PartitionedRegionStats.getStatTime();
+    return clock.getTime();
-    long ts = PartitionedRegionStats.getStatTime();
+    long ts = clock.getTime();
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    if (CachePerfStats.enableClockStats) {
+    if (clock.isEnabled()) {
-    return CachePerfStats.getStatTime();
+    return clock.getTime();
-    long delta = CachePerfStats.getStatTime() - start;
+    long delta = clock.getTime() - start;
-    return CachePerfStats.getStatTime();
+    return clock.getTime();
-    long delta = CachePerfStats.getStatTime() - start;
+    long delta = clock.getTime() - start;
-    return CachePerfStats.getStatTime();
+    return clock.getTime();
-    long delta = CachePerfStats.getStatTime() - start;
+    long delta = clock.getTime() - start;
-    return CachePerfStats.getStatTime();
+    return clock.getTime();
-    long delta = CachePerfStats.getStatTime() - start;
+    long delta = clock.getTime() - start;

INS26 MOV31 INS40 INS23 INS83 INS83 INS43 INS59 INS44 UPD42 INS42 INS42 INS43 INS42 INS21 INS42 INS32 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS22 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS52 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 MOV22 MOV22 MOV22 MOV22 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL52 DEL42 DEL22 DEL40 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL40 DEL83 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40