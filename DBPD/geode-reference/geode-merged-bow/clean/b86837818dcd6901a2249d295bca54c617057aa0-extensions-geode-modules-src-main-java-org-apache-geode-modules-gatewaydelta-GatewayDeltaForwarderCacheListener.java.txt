GEODE-6875: Remove unused & deprecated API usage (#3813)

- Fixed warnings.
- Replaced deprecated API in Http Session.
- Replaced usage of internal API in Http Session.
- Removed unused classes and methods in Http Session.
-import java.util.Properties;
-
-import org.apache.geode.cache.RegionFactory;
-import org.apache.geode.internal.cache.LocalRegion;
+  private Region<String, GatewayDeltaEvent> gatewayDeltaRegion;
-  private LocalRegion gatewayDeltaRegion;
-
+  @SuppressWarnings("unused")
-  @SuppressWarnings("unchecked")
-        StringBuilder builder = new StringBuilder();
-        builder.append("GatewayDeltaForwarderCacheListener: Received create event for ")
-            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(" that originated in the local site. Sending it to the remote site.");
-        this.cache.getLogger().fine(builder.toString());
+        String builder = "GatewayDeltaForwarderCacheListener: Received create event for "
+            + event.getKey() + "->" + event.getNewValue()
+            + " that originated in the local site. Sending it to the remote site.";
+        this.cache.getLogger().fine(
+            builder);
-        StringBuilder builder = new StringBuilder();
-        builder.append("GatewayDeltaForwarderCacheListener: Received create event for ")
-            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(" that originated in the remote site.");
-        this.cache.getLogger().fine(builder.toString());
+        String builder = "GatewayDeltaForwarderCacheListener: Received create event for "
+            + event.getKey() + "->" + event.getNewValue()
+            + " that originated in the remote site.";
+        this.cache.getLogger().fine(builder);
-        StringBuilder builder = new StringBuilder();
-        builder.append("GatewayDeltaForwarderCacheListener: Received update event for ")
-            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(" that originated in the local site. Sending it to the remote site.");
-        this.cache.getLogger().fine(builder.toString());
+        String builder = "GatewayDeltaForwarderCacheListener: Received update event for "
+            + event.getKey() + "->" + event.getNewValue()
+            + " that originated in the local site. Sending it to the remote site.";
+        this.cache.getLogger().fine(
+            builder);
-        StringBuilder builder = new StringBuilder();
-        builder.append("GatewayDeltaForwarderCacheListener: Received update event for ")
-            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(" that originated in the remote site.");
-        this.cache.getLogger().fine(builder.toString());
+        String builder = "GatewayDeltaForwarderCacheListener: Received update event for "
+            + event.getKey() + "->" + event.getNewValue()
+            + " that originated in the remote site.";
+        this.cache.getLogger().fine(builder);
-        StringBuilder builder = new StringBuilder();
-        builder.append("GatewayDeltaForwarderCacheListener: Received destroy event for ")
-            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(" that originated in the local site. Sending it to the remote site.");
-        this.cache.getLogger().fine(builder.toString());
+        String builder = "GatewayDeltaForwarderCacheListener: Received destroy event for "
+            + event.getKey() + "->" + event.getNewValue()
+            + " that originated in the local site. Sending it to the remote site.";
+        this.cache.getLogger().fine(
+            builder);
-        StringBuilder builder = new StringBuilder();
-        builder.append("GatewayDeltaForwarderCacheListener: Received destroy event for session ")
-            .append(event.getKey())
-            .append(" that either expired or originated in the remote site.");
-        this.cache.getLogger().fine(builder.toString());
+        String builder = "GatewayDeltaForwarderCacheListener: Received destroy event for session "
+            + event.getKey()
+            + " that either expired or originated in the remote site.";
+        this.cache.getLogger().fine(builder);
-  @Override
-  public void init(Properties p) {}
-
-  private LocalRegion getGatewayDeltaRegion() {
+  private Region<String, GatewayDeltaEvent> getGatewayDeltaRegion() {
-  @SuppressWarnings("unchecked")
-  private LocalRegion createOrRetrieveGatewayDeltaRegion() {
-    Region region = this.cache.getRegion(GatewayDelta.GATEWAY_DELTA_REGION_NAME);
+  private Region<String, GatewayDeltaEvent> createOrRetrieveGatewayDeltaRegion() {
+    Region<String, GatewayDeltaEvent> region =
+        this.cache.getRegion(GatewayDelta.GATEWAY_DELTA_REGION_NAME);
+
-      region = new RegionFactory().setScope(Scope.LOCAL).setDataPolicy(DataPolicy.EMPTY)
+      region = this.cache.<String, GatewayDeltaEvent>createRegionFactory().setScope(Scope.LOCAL)
+          .setDataPolicy(DataPolicy.EMPTY)
+
-      StringBuilder builder = new StringBuilder();
-      builder.append("GatewayDeltaForwarderCacheListener: Created gateway delta region: ")
-          .append(region);
-      this.cache.getLogger().fine(builder.toString());
+      String builder = "GatewayDeltaForwarderCacheListener: Created gateway delta region: "
+          + region;
+      this.cache.getLogger().fine(builder);
-    return (LocalRegion) region;
+
+    return region;
-    if (obj == null || !(obj instanceof GatewayDeltaForwarderCacheListener)) {
-      return false;
-    }
-
-    return true;
+    return obj instanceof GatewayDeltaForwarderCacheListener;

INS23 MOV83 INS74 MOV59 INS79 MOV8 MOV8 INS74 INS74 INS43 INS43 INS43 INS42 INS45 INS25 INS25 INS43 INS43 INS43 INS43 INS43 INS43 MOV25 MOV41 UPD42 MOV42 INS42 UPD42 MOV42 MOV27 INS8 INS8 MOV27 MOV8 INS8 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS74 INS42 MOV62 INS25 MOV60 MOV21 MOV21 MOV25 MOV60 MOV21 MOV25 MOV43 INS43 INS43 MOV32 INS8 INS42 INS42 UPD43 INS60 INS60 MOV21 INS60 INS60 INS60 UPD42 INS27 MOV42 UPD43 MOV43 INS59 UPD43 INS32 INS43 INS59 UPD43 MOV43 INS59 UPD43 MOV43 INS59 UPD43 MOV43 INS59 INS45 INS42 UPD42 MOV42 INS27 MOV42 UPD42 INS27 MOV32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS27 MOV42 UPD42 MOV42 INS27 MOV42 UPD42 MOV42 INS27 MOV42 UPD42 MOV42 INS27 MOV42 INS45 MOV32 INS45 MOV32 INS45 INS45 MOV32 INS45 MOV32 INS45 MOV22 MOV42 INS45 MOV32 INS45 MOV32 INS45 INS45 MOV32 INS45 MOV32 INS45 INS45 MOV32 INS45 MOV32 INS45 INS45 MOV32 INS45 INS42 INS42 MOV42 INS32 INS22 INS43 INS43 INS42 INS52 INS42 UPD42 MOV42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL23 DEL42 DEL45 DEL79 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL42 DEL43 DEL14 DEL42 DEL45 DEL32 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL25 DEL8 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL8 DEL25 DEL8 DEL42 DEL78 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL43 DEL42 DEL45 DEL79 DEL43 DEL43 DEL14 DEL42 DEL43 DEL14 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL11 DEL9 DEL42 DEL33 DEL27 DEL36 DEL38 DEL27 DEL8 DEL25 DEL9 DEL41