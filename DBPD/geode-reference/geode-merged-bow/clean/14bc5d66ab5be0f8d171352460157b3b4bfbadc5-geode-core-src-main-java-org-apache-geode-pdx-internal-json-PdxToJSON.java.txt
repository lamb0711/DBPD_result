GEODE-6196 Replace use of org.json with Jackson JSON library

removed TypedJson, replacing with QueryResultFormatter

most of TypedJson's internals were replaced so I just renamed it to
QueryResultFormatter to better show its intended purpose.

QueryResultFormatter uses a Jackson ObjectMapper so it will pay
attention to Jackson annotations placed on classes to be serialized.

Object traversal depth is limited to the element-count being passed
by the QueryDataFunction function.  Element-count in collections
are also limited.  There is a new constructor that lets you specify
separate elementCount and serializationDepth parameters.

-    // OutputStream os = new ByteArrayOutputStream();
-    Iterator iter = (Iterator) map.entrySet().iterator();
+    Iterator iter = map.entrySet().iterator();
-          "PdxInstance returns unknwon pdxfield " + pf + " for type " + value);
+          "PdxInstance returns unknown pdxfield " + pf + " for type " + value);
-  private <T> void getJSONStringFromArray1(JsonGenerator jg, T[] array, String pf)
-      throws JsonGenerationException, IOException {
-    jg.writeStartArray();
-
-    for (T obj : array) {
-      writeValue(jg, obj, pf);
-    }
-    jg.writeEndArray();
-  }
-
-

MOV43 MOV32 UPD45 DEL42 DEL43 DEL11 DEL83 DEL42 DEL73 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31