GEODE-6730: optimize check for sender id differences (#3707)

GEODE-6866: log warning instead of throwing exception

This revision fixes both GEODE-6730 and GEODE-6866

Throwing an exception led to inconsistency because the operation made it into the region but not into the gateway sender or async event queue.
Once the warning is logged for a region it will not be logged again until a check is done that finds that the ids are consistent.
I had both the initial message (that the ids differ) and the subsequent message (that they are now consistent) both be logged as warnings so that if you see the first message you will also see the second.
If we logged the "everything is ok" at info level, then it is possible that they would only see the warning.

I thought it was best to at least have this log message instead of completely removing the check. It may help diagnose a case in the future when someone dynamically adds a gateway sender inconsistently.

+import org.apache.geode.annotations.VisibleForTesting;
+  private final SenderIdMonitor senderIdMonitor;
+    senderIdMonitor = createSenderIdMonitor();
+    updateSenderIdMonitor();
+    updateSenderIdMonitor();
+    updateSenderIdMonitor();
+    updateSenderIdMonitor();
+  }
+
+  private SenderIdMonitor createSenderIdMonitor() {
+    return SenderIdMonitor.createSenderIdMonitor(this, this.distAdvisor);
+  }
+
+  private void updateSenderIdMonitor() {
+    this.senderIdMonitor.update();
-    List senderIds =
-        this.getCacheDistributionAdvisor().adviseSameGatewaySenderIds(getGatewaySenderIds());
-    if (!senderIds.isEmpty()) {
-      throw new GatewaySenderConfigurationException(
-          String.format(
-              "Region %s has %s gateway sender IDs. Another cache has same region with %s gateway sender IDs. For region across all members, gateway sender ids should be same.",
-
-              new Object[] {this.getName(), senderIds.get(0), senderIds.get(1)}));
-    }
-
-    List asycnQueueIds = this.getCacheDistributionAdvisor()
-        .adviseSameAsyncEventQueueIds(getVisibleAsyncEventQueueIds());
-    if (!asycnQueueIds.isEmpty()) {
-      throw new GatewaySenderConfigurationException(
-          String.format(
-              "Region %s has %s AsyncEvent queue IDs. Another cache has same region with %s AsyncEvent queue IDs. For region across all members, AsyncEvent queue IDs should be same.",
-
-              new Object[] {this.getName(), asycnQueueIds.get(0), asycnQueueIds.get(1)}));
-    }
+    this.senderIdMonitor.checkSenderIds();
+
+  @VisibleForTesting
+  public SenderIdMonitor getSenderIdMonitor() {
+    return senderIdMonitor;
+  }

INS26 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 MOV78 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 UPD42 MOV42 UPD42 MOV42 INS21 INS21 INS21 INS21 INS21 UPD42 MOV42 INS41 INS21 INS21 INS42 UPD42 MOV42 INS41 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 MOV52 INS22 INS22 UPD42 MOV42 INS22 UPD42 MOV42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 DEL39 DEL42 DEL43 DEL52 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL43 DEL42 DEL45 DEL42 DEL43 DEL85 DEL5 DEL42 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL34 DEL32 DEL4 DEL3 DEL32 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL52 DEL42 DEL32 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL43 DEL42 DEL42 DEL45 DEL42 DEL43 DEL85 DEL5 DEL52 DEL42 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL4 DEL3 DEL32 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31