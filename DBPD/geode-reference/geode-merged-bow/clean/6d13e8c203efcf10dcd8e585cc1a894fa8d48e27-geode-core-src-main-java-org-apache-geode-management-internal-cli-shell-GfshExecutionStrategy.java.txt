GEODE-5010: Introduce *ResultModel objects to replace *ResultData (#1870)


- The changes here are intended to allow for support of both the old and new
  model for producing results. As such the interface structures are a mess but
  will be cleaned up once all commands have been converted.
- Not all types of return values are supported but will be added as commands
  are converted. In particular commands that return actual result data in the
  form of files or file content.
- Sub-sections are not supported anymore.
- All commands should now return a ResultModel object

+import org.apache.geode.management.internal.cli.result.ModelCommandResult;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-      Result preExecResult = interceptor.preExecution(parseResult);
-      if (Status.ERROR.equals(preExecResult.getStatus())) {
-        return preExecResult;
+      Object preExecResult = interceptor.preExecution(parseResult);
+      if (preExecResult instanceof ResultModel) {
+        if (((ResultModel) preExecResult).getStatus() != Status.OK) {
+          return new ModelCommandResult((ResultModel) preExecResult);
+        }
+      }
+
+      if (preExecResult instanceof Result) {
+        if (Status.ERROR.equals(((Result) preExecResult).getStatus())) {
+          return (Result) preExecResult;
+        }
-      CommandResponse commandResponse =
-          CommandResponseBuilder.prepareCommandResponseFromJson((String) response);
+      try {
+        // TODO: stuff when failedToPersist...
+        // TODO: stuff for debug info...
+        commandResult = ResultBuilder.createModelBasedCommandResult((String) response);
+      } catch (Exception ex) {
+        CommandResponse commandResponse =
+            CommandResponseBuilder.prepareCommandResponseFromJson((String) response);
-      if (commandResponse.isFailedToPersist()) {
-        shell.printAsSevere(CliStrings.SHARED_CONFIGURATION_FAILED_TO_PERSIST_COMMAND_CHANGES);
-        logWrapper.severe(CliStrings.SHARED_CONFIGURATION_FAILED_TO_PERSIST_COMMAND_CHANGES);
-      }
+        if (commandResponse.isFailedToPersist()) {
+          shell.printAsSevere(CliStrings.SHARED_CONFIGURATION_FAILED_TO_PERSIST_COMMAND_CHANGES);
+          logWrapper.severe(CliStrings.SHARED_CONFIGURATION_FAILED_TO_PERSIST_COMMAND_CHANGES);
+        }
-      String debugInfo = commandResponse.getDebugInfo();
-      if (StringUtils.isNotBlank(debugInfo)) {
-        debugInfo = debugInfo.replaceAll("\n\n\n", "\n");
-        debugInfo = debugInfo.replaceAll("\n\n", "\n");
-        debugInfo =
-            debugInfo.replaceAll("\n", "\n[From Manager : " + commandResponse.getSender() + "]");
-        debugInfo = "[From Manager : " + commandResponse.getSender() + "]" + debugInfo;
-        this.logWrapper.info(debugInfo);
+        String debugInfo = commandResponse.getDebugInfo();
+        if (StringUtils.isNotBlank(debugInfo)) {
+          debugInfo = debugInfo.replaceAll("\n\n\n", "\n");
+          debugInfo = debugInfo.replaceAll("\n\n", "\n");
+          debugInfo =
+              debugInfo.replaceAll("\n", "\n[From Manager : " + commandResponse.getSender() + "]");
+          debugInfo = "[From Manager : " + commandResponse.getSender() + "]" + debugInfo;
+          this.logWrapper.info(debugInfo);
+        }
+        commandResult = ResultBuilder.fromJson((String) response);
-      commandResult = ResultBuilder.fromJson((String) response);

INS26 INS26 INS40 INS40 INS8 INS25 INS25 INS54 INS43 INS62 INS8 INS62 INS8 INS8 INS12 INS42 INS42 INS43 INS25 INS42 INS43 MOV25 INS21 INS44 MOV8 INS42 INS27 INS8 INS42 INS7 INS43 INS42 INS32 INS40 INS41 INS42 INS32 INS42 INS36 INS42 INS14 INS36 INS11 INS42 INS42 INS11 INS11 INS43 INS11 INS11 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42