GEODE-832: Modifying the dunit framework to allow lambda expressions

Lambdas can now be used for VM.invoke and VM.invokeAsync. For example

vm.invoke(() -> {System.out.println("Hello from remote VM")})
String value = vm.invoke(() -> {return "Hello from remote VM")

This theoretically could be more efficient than using anonymous
classes, because they do not capture (and Serialize) a reference to
the enclosing test class unless they reference state of that class.

-public class AsyncInvocation extends Thread {
+public class AsyncInvocation<T> extends Thread {
-  public volatile Object returnedObj = null;
+  public volatile T returnedObj = null;
-  public Object getResult() throws Throwable {
+  public T getResult() throws Throwable {
-  public Object getResult(long waitTime) throws Throwable {
+  public T getResult(long waitTime) throws Throwable {
-  public Object getReturnValue() {
+  public T getReturnValue() {
-    this.returnedObj = returnValue.get();
+    this.returnedObj = (T) returnValue.get();

INS73 INS42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 INS11 INS43 MOV32 INS42