GEODE-4830: use CacheConfig to access the jndi list in ListJNDIBindingCommand

* updated the CacheConfig to hold only one JNDIBindingsType instead of a list
* make sure xml created by those POJOs can be used to start a server
* the service will keep a list of bind classes for clearer xml generation.
* the service will keep a reference to the marshaer/unmarsher for faster operation

-import java.net.URL;
+import java.util.Collection;
-import javax.xml.XMLConstants;
-import javax.xml.validation.Schema;
-import javax.xml.validation.SchemaFactory;
+import org.apache.geode.lang.Identifiable;
+    bindClasses.add(CacheConfig.class);
+    initJaxbContext();
+    bindClasses.add(CacheConfig.class);
+    initJaxbContext();
+  private Collection<Class> bindClasses = new ArrayList<>();
+  private Marshaller marshaller;
+  private Unmarshaller unmarshaller;
+
+  private void initJaxbContext() {
+    try {
+      JAXBContext jaxbContext =
+          JAXBContext.newInstance(bindClasses.toArray(new Class[bindClasses.size()]));
+      marshaller = jaxbContext.createMarshaller();
+      // currently we are generating the xml from jabx object so we don't need schema validation.
+      // but in the future, we will need to add the various xsd for schema validation. and these
+      // xsd needs to be local (no network access)
+      marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION,
+          "http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd");
+      marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
+      unmarshaller = jaxbContext.createUnmarshaller();
+    } catch (Exception e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
+  }
+
+  private Marshaller getMarshaller(Class... additionBindClass) {
+    if (bindClasses.containsAll(Arrays.asList(additionBindClass))) {
+      return marshaller;
+    }
+
+    bindClasses.addAll(Arrays.asList(additionBindClass));
+    initJaxbContext();
+    return marshaller;
+  }
+
+  private Unmarshaller getUnmarshaller(Class... additionBindClass) {
+    if (bindClasses.containsAll(Arrays.asList(additionBindClass))) {
+      return unmarshaller;
+    }
+
+    bindClasses.addAll(Arrays.asList(additionBindClass));
+    initJaxbContext();
+    return unmarshaller;
+  }
+
+  public <T extends Identifiable<String>> T findElement(List<T> list, String id) {
+    return list.stream().filter(o -> o.getId().equals(id)).findFirst().orElse(null);
+  }
+
-    List<Class> classes = new ArrayList<>(Arrays.asList(additionalClass));
-    classes.add(0, CacheConfig.class);
-      JAXBContext jaxbContext = JAXBContext.newInstance(classes.toArray(new Class[classes.size()]));
-      Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
-      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
-      Schema schema =
-          factory.newSchema(new URL("http://geode.apache.org/schema/cache/cache-1.0.xsd"));
-      jaxbMarshaller.setSchema(schema);
-
-      jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
-      jaxbMarshaller.marshal(config, sw);
+      getMarshaller(additionalClass).marshal(config, sw);
-    List<Class> classes = new ArrayList<>(Arrays.asList(additionalClass));
-    classes.add(0, CacheConfig.class);
-      JAXBContext jaxbContext = JAXBContext.newInstance(classes.toArray(new Class[classes.size()]));
-      Unmarshaller jaxUnmarshaller = jaxbContext.createUnmarshaller();
-      return (CacheConfig) jaxUnmarshaller.unmarshal(new StringReader(xml));
+      return (CacheConfig) getUnmarshaller(additionalClass).unmarshal(new StringReader(xml));

MOV26 MOV26 MOV31 UPD40 UPD40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS83 UPD74 MOV74 MOV59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 UPD42 INS83 MOV43 INS42 INS44 INS8 INS83 MOV43 INS42 INS44 INS8 INS83 INS73 INS43 INS42 INS44 INS44 INS8 MOV43 INS42 MOV44 MOV44 INS8 INS21 INS21 INS21 INS21 UPD43 UPD42 INS42 INS42 INS42 INS42 INS43 INS42 INS25 INS21 INS21 INS41 MOV43 INS42 INS25 INS21 INS21 INS41 INS42 INS74 INS42 UPD74 MOV74 INS42 INS43 INS42 INS41 MOV60 INS54 MOV41 INS32 INS32 INS32 INS32 UPD42 INS42 INS32 INS8 INS32 INS32 INS42 INS32 INS8 INS32 INS32 INS42 INS43 INS43 INS43 INS42 INS32 INS8 INS12 INS42 INS42 MOV57 INS42 INS42 INS42 MOV57 INS42 INS21 INS21 INS42 INS42 INS32 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS44 INS8 INS7 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS42 INS53 INS42 MOV32 INS42 INS42 UPD40 MOV40 INS45 UPD42 INS42 MOV32 INS32 INS42 INS86 INS32 INS42 INS42 INS42 INS42 INS14 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS59 INS32 INS42 INS42 INS43 INS32 INS42 INS32 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL42 DEL32 DEL60 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL45 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL32 DEL59 DEL60 DEL42 DEL59 DEL60