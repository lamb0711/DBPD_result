GEODE-4439 Refactor HandShake.java

Created ServerSideHandshake and ServerSideHandshakeImpl for servers.

Created ClientSideHandshake and ClientSideHandshakeImpl for clients.

Message encryption/decryption is now in an Encryptor interface.

HandShake is renamed Handshake.

-      byte epType, int qSize) throws IOException {
+      byte endpointType, int queueSize) throws IOException {
-    // dummy epType
-    dos.writeByte(epType);
-    // dummy qSize
-    dos.writeInt(qSize);
+    dos.writeByte(endpointType);
+    dos.writeInt(queueSize);
-    byte clientConflation = HandShake.CONFLATION_DEFAULT;
+    byte clientConflation = Handshake.CONFLATION_DEFAULT;
-        writeException(dos, HandShake.REPLY_INVALID,
+        writeException(dos, Handshake.REPLY_INVALID,
-        byte[] overrides = HandShake.extractOverrides(new byte[] {(byte) dis.read()});
+        byte[] overrides = Handshake.extractOverrides(new byte[] {(byte) dis.read()});
-        case HandShake.CONFLATION_DEFAULT:
-        case HandShake.CONFLATION_OFF:
-        case HandShake.CONFLATION_ON:
+        case Handshake.CONFLATION_DEFAULT:
+        case Handshake.CONFLATION_OFF:
+        case Handshake.CONFLATION_ON:
-          writeException(dos, HandShake.REPLY_INVALID,
+          writeException(dos, Handshake.REPLY_INVALID,
-          HandShake.readCredentials(dis, dos, system, this.cache.getSecurityService());
+          Handshake.readCredentials(dis, dos, system, this.cache.getSecurityService());
-            HandShake.verifyCredentials(authenticator, credentials, system.getSecurityProperties(),
+            Handshake.verifyCredentials(authenticator, credentials, system.getSecurityProperties(),
-      writeException(dos, HandShake.REPLY_EXCEPTION_AUTHENTICATION_REQUIRED, ex, clientVersion);
+      writeException(dos, Handshake.REPLY_EXCEPTION_AUTHENTICATION_REQUIRED, ex, clientVersion);
-      writeException(dos, HandShake.REPLY_EXCEPTION_AUTHENTICATION_FAILED, ex, clientVersion);
+      writeException(dos, Handshake.REPLY_EXCEPTION_AUTHENTICATION_FAILED, ex, clientVersion);
-    byte epType = 0x00;
-    int qSize = 0;
+    byte endpointType = 0x00;
+    int queueSize = 0;
-          qSize = PoolImpl.PRIMARY_QUEUE_TIMED_OUT;
+          queueSize = PoolImpl.PRIMARY_QUEUE_TIMED_OUT;
-          qSize = PoolImpl.PRIMARY_QUEUE_NOT_AVAILABLE;
+          queueSize = PoolImpl.PRIMARY_QUEUE_NOT_AVAILABLE;
-          epType = (byte) 2;
+          endpointType = (byte) 2;
-          epType = (byte) 1;
+          endpointType = (byte) 1;
-        qSize = proxy.getQueueSize();
+        queueSize = proxy.getQueueSize();
-            responseByte = HandShake.REPLY_REFUSED;
+            responseByte = Handshake.REPLY_REFUSED;
-          responseByte = HandShake.REPLY_EXCEPTION_DUPLICATE_DURABLE_CLIENT;
+          responseByte = Handshake.REPLY_EXCEPTION_DUPLICATE_DURABLE_CLIENT;
-      responseByte = HandShake.REPLY_REFUSED;
+      responseByte = Handshake.REPLY_REFUSED;
-      writeMessage(dos, responseByte, unsuccessfulMsg, clientVersion, epType, qSize);
+      writeMessage(dos, responseByte, unsuccessfulMsg, clientVersion, endpointType, queueSize);
-    if (!(proxy.clientConflation == HandShake.CONFLATION_ON)) {
+    if (!(proxy.clientConflation == Handshake.CONFLATION_ON)) {
-    if (!(proxy.clientConflation == HandShake.CONFLATION_ON)) {
+    if (!(proxy.clientConflation == Handshake.CONFLATION_ON)) {

UPD42 UPD42 UPD42 UPD42 UPD40 UPD42 UPD42 UPD40 UPD40 UPD40 UPD40 UPD42 UPD42 UPD40 UPD40 UPD40 UPD42 UPD40 UPD40 UPD40 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD40 UPD40