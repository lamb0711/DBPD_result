GEODE-1644: ClassCastException is thrown with in queries against a map index

-          this.queryIndex(itr.next(),indexInfo, results,iterOperands, indpndntItr, context, projAttrib,conditioningNeeded);          
+          this.queryIndex(itr.next(),indexInfo, results,iterOperands, indpndntItr, context, projAttrib,conditioningNeeded);
-        //Removing duplicates from the collection
-        HashSet set = new HashSet((Collection)evalColln);
-        Iterator itr = set.iterator();
-        while (itr.hasNext()) {
-          this.queryIndex(itr.next(),indexInfo, results,iterOperands, indpndntItr, context, projAttrib,conditioningNeeded);
+        Object key = indexInfo.evaluateIndexKey(context);
+        //If the index is a map index, the key is actually an object[] tuple that contains the map key in the [1]
+        //and the evalColln in the [0] position
+        if (key instanceof Object[]) {
+          Iterator iterator = ((ResultsSet)((Object[]) key)[0]).iterator();
+          while (iterator.hasNext()) {
+            this.queryIndex(new Object[]{iterator.next(), ((Object[])key)[1]}, indexInfo, results, iterOperands, indpndntItr, context, projAttrib, conditioningNeeded);
+          }
-
+        else {
+          //Removing duplicates from the collection
+          HashSet set = new HashSet((Collection) evalColln);
+          Iterator itr = set.iterator();
+          while (itr.hasNext()) {
+            this.queryIndex(itr.next(), indexInfo, results, iterOperands, indpndntItr, context, projAttrib, conditioningNeeded);
+          }
+        }
+
-      Iterator itr = ((Collection)evalColln).iterator();
-      while (itr.hasNext()) {
-        size+=idxInfo[0]._index.getSizeEstimate(itr.next(), TOK_EQ, idxInfo[0]._matchLevel);
+      if (key instanceof Object[]) {
+        Iterator iterator = ((ResultsSet)((Object[]) key)[0]).iterator();
+        while (iterator.hasNext()) {
+          size+=idxInfo[0]._index.getSizeEstimate(new Object[]{iterator.next(), ((Object[])key)[1]}, TOK_EQ, idxInfo[0]._matchLevel);
+        }
+      else {
+        Iterator itr = ((Collection) evalColln).iterator();
+        while (itr.hasNext()) {
+          size += idxInfo[0]._index.getSizeEstimate(itr.next(), TOK_EQ, idxInfo[0]._matchLevel);
+        }
+      }

INS8 INS25 INS8 INS62 INS8 MOV8 INS60 INS25 INS42 INS5 INS60 INS61 INS43 INS59 INS62 INS8 MOV8 INS43 INS85 INS43 INS59 INS32 INS8 INS42 INS42 INS32 INS42 INS5 INS60 INS61 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS42 INS43 INS85 INS43 INS59 INS32 INS8 INS36 INS42 INS7 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS11 INS42 INS32 INS36 INS42 INS32 INS43 INS2 INS22 INS42 INS3 INS42 INS22 INS11 INS52 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS34 INS2 INS42 INS5 INS4 INS2 INS42 INS43 INS2 INS5 INS4 INS11 INS42 INS34 INS43 INS85 INS32 INS2 INS42 INS34 INS42 INS36 INS34 INS43 INS85 INS32 INS2 INS5 INS42 INS42 INS42 INS42 INS36 INS34 INS11 INS42 INS42 INS42 INS36 INS34 INS43 INS85 INS11 INS5 INS42 INS11 INS42 INS5 INS42 INS43 INS85 INS5 INS42 INS43 INS85 INS42 INS43 INS85 INS42 INS42