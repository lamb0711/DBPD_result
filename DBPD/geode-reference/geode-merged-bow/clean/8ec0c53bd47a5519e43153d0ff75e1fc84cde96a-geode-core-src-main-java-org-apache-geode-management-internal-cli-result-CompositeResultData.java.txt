GEODE-5110: Remove use of subSections in CompositeResultData structures (#1826)


-  public CompositeResultData addSeparator(char buildSeparatorFrom) {
-    try {
-      contentObject.put(SEPARATOR, buildSeparatorFrom);
-    } catch (GfJsonException e) {
-      throw new ResultDataException(e.getMessage());
-    }
-
-    return this;
-  }
-
-    private int subsectionCount = 0;
-    public SectionResultData addSection() {
-      return addSection(String.valueOf(subsectionCount));
-    }
-
-    public SectionResultData addSection(String keyToAccess) {
-      GfJsonObject sectionData = new GfJsonObject();
-      try {
-        sectionGfJsonObject.putAsJSONObject(generateSectionKey(keyToAccess), sectionData);
-      } catch (GfJsonException e) {
-        throw new ResultDataException(e.getMessage());
-      }
-      subsectionCount++;
-      return new SectionResultData(sectionData);
-    }
-
-    public SectionResultData retrieveSectionByIndex(int index) {
-      SectionResultData sectionToRetrieve = null;
-      int i = 0;
-      for (Iterator<String> iterator = sectionGfJsonObject.keys(); iterator.hasNext();) {
-        String key = iterator.next();
-        if (key.startsWith(CompositeResultData.SECTION_DATA_ACCESSOR)) {
-          if (i == index) {
-            sectionToRetrieve = new SectionResultData(sectionGfJsonObject.getJSONObject(key));
-            break;
-          }
-          i++;
-        }
-      }
-
-      return sectionToRetrieve;
-    }
-
-    public SectionResultData retrieveSection(String keyToRetrieve) {
-      SectionResultData sectionToRetrieve = null;
-      if (sectionGfJsonObject.has(generateSectionKey(keyToRetrieve))) {
-        GfJsonObject sectionData =
-            sectionGfJsonObject.getJSONObject(generateSectionKey(keyToRetrieve));
-        sectionToRetrieve = new SectionResultData(sectionData);
-      }
-      return sectionToRetrieve;
-    }
-
-    public String[] retrieveStringArray(String name) {
-      String[] stringArray;
-      Object retrievedObject = sectionGfJsonObject.get(name);
-
-      if (retrievedObject instanceof GfJsonArray) {
-        stringArray = GfJsonArray.toStringArray(((GfJsonArray) retrievedObject));
-      } else {
-        try {
-          stringArray = GfJsonArray.toStringArray(new GfJsonArray(retrievedObject));
-        } catch (GfJsonException e) {
-          throw new ResultDataException(e.getMessage());
-        }
-      }
-      return stringArray;
-    }
-
-  public static void main(String[] args) {
-    CompositeResultData crd = new CompositeResultData();
-
-    SectionResultData r1Section = crd.addSection("R1");
-    r1Section.addData("Region", "R1").addData("IsPartitioned", false).addData("IsPersistent", true)
-        .addData("Disk Store", "DiskStore1").addData("Group", "Group1");
-    TabularResultData r1Table = r1Section.addTable("R1Members");
-    r1Table.accumulate("Member Id", "host1(3467):12435:12423")
-        .accumulate("PrimaryEntryCount", 20000).accumulate("BackupEntryCount", 20000)
-        .accumulate("Memory(MB)", "100").accumulate("NumOfCopies", 1);
-    r1Table.accumulate("Member Id", "host3(5756):57665:90923")
-        .accumulate("PrimaryEntryCount", 25000).accumulate("BackupEntryCount", 10000)
-        .accumulate("Memory(MB)", "200").accumulate("NumOfCopies", 1);
-
-    SectionResultData r3Section = crd.addSection("R3");
-    r3Section.addData("Region", "R3").addData("IsPartitioned", true).addData("IsPersistent", true)
-        .addData("Disk Store", "DiskStore2").addData("Group", "Group2")
-        .addData("ColocatedWith", "-");
-    SectionResultData r3SubSection = r3Section.addSection("R3Config");
-    r3SubSection.addData("Configuration", "");
-    r3SubSection.addData("Config1", "abcd");
-    r3SubSection.addData("Config2", "abcde");
-    r3SubSection.addData("Config3", "abcdfg");
-    TabularResultData r3Table = r3Section.addTable("R3Members");
-    r3Table.accumulate("Member Id", "host1(3467):12435:12423")
-        .accumulate("PrimaryEntryCount", 20000).accumulate("BackupEntryCount", 20000)
-        .accumulate("Memory(MB)", "100").accumulate("NumOfCopies", 1)
-        .accumulate("NumOfBuckets", 100);
-    r3Table.accumulate("Member Id", "host2(3353):23545:14723")
-        .accumulate("PrimaryEntryCount", 20000).accumulate("BackupEntryCount", 20000)
-        .accumulate("Memory(MB)", "100").accumulate("NumOfCopies", 1)
-        .accumulate("NumOfBuckets", 100);
-    r3Table.accumulate("Member Id", "host3(5756):57665:90923")
-        .accumulate("PrimaryEntryCount", 25000).accumulate("BackupEntryCount", 10000)
-        .accumulate("Memory(MB)", "200").accumulate("NumOfCopies", 1)
-        .accumulate("NumOfBuckets", 100);
-
-    try {
-      System.out.println(crd.getGfJsonObject().toIndentedString(0));
-
-    } catch (Exception e) {
-      e.printStackTrace();
-    }
-  }

DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL52 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL37 DEL21 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL27 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL10 DEL8 DEL25 DEL42 DEL37 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL9 DEL32 DEL42 DEL45 DEL9 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL9 DEL32 DEL42 DEL45 DEL9 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL34 DEL32 DEL42 DEL45 DEL34 DEL32 DEL21 DEL40 DEL42 DEL42 DEL42 DEL32 DEL42 DEL34 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL31