Merge geode develop branch

-  /**
-   * Created specially for bug 39348. Should not be invoked in any other case.
-   */
-  public CachePerfStats() {
-    this(null);
-  }
-
-  /**
-   * Creates a new <code>CachePerfStats</code> and registers itself with the given statistics
-   * factory.
-   */
-    this(factory, "cachePerfStats", enableClockStats ? NanoTimer::getTime : () -> 0);
-  }
-
-  /**
-   * Creates a new <code>CachePerfStats</code> and registers itself with the given statistics
-   * factory.
-   */
-  public CachePerfStats(StatisticsFactory factory, String regionName) {
-    this(factory, "RegionStats-" + regionName, enableClockStats ? NanoTimer::getTime : () -> 0);
+    this(factory, "cachePerfStats");
-  public CachePerfStats(StatisticsFactory factory, String textId, LongSupplier clock) {
-    stats = factory == null ? null : factory.createAtomicStatistics(type, textId);
+  public CachePerfStats(StatisticsFactory factory, LongSupplier clock) {
+    this(factory, "cachePerfStats", clock);
+  }
+
+  public CachePerfStats(StatisticsFactory factory, String textId) {
+    this(factory, textId, createClock());
+  }
+
+  CachePerfStats(StatisticsFactory factory, String textId, LongSupplier clock) {
+    this(createStatistics(factory, textId), clock);
+  }
+
+  private CachePerfStats(Statistics stats, LongSupplier clock) {
+    this.stats = stats;
+  private static Statistics createStatistics(StatisticsFactory factory, String textId) {
+    if (factory == null) {
+      return null;
+    }
+    return factory.createAtomicStatistics(type, textId);
+  }
+
+  private static LongSupplier createClock() {
+    return enableClockStats ? NanoTimer::getTime : () -> 0;
+  }
+
+  /**
+   * Returns the Statistics instance that stores the cache perf stats.
+   *
+   * @since GemFire 3.5
+   */
+  public Statistics getStats() {
+    return stats;
+  }
+
-  void close() {
+  protected void close() {
-  public long getEntries() {
-    return stats.getLong(entryCountId);
-  }
-
-   * Returns the Statistics instance that stores the cache perf stats.
-   *
-   * @since GemFire 3.5
-   */
-  public Statistics getStats() {
-    return stats;
-  }
-
-  /**

MOV31 MOV31 INS31 INS31 INS44 MOV78 INS44 INS8 INS42 INS44 INS44 INS44 INS83 INS42 INS44 MOV44 INS8 INS83 UPD83 INS43 INS42 INS83 INS83 INS43 INS42 MOV8 INS83 INS43 INS42 INS43 INS42 UPD42 INS17 INS43 INS42 INS43 INS42 INS43 INS42 INS17 INS43 INS42 INS21 MOV21 INS42 INS25 INS41 INS42 INS41 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS7 MOV27 INS8 MOV32 MOV16 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS22 INS42 INS41 INS52 INS42 INS33 DEL66 DEL65 DEL29 DEL33 DEL66 DEL66 DEL65 DEL29 DEL42 DEL42 DEL42 DEL90 DEL34 DEL86 DEL16 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL32 DEL41 DEL42 DEL42 DEL33 DEL16 DEL7 DEL21 DEL42 DEL45 DEL42 DEL27 DEL17