Merge branch 'release/1.3.0'

-
-   * To reduce the number of times we need to call System.currentTimeMillis you can call this method
-   * to set a thread local. Make sure and call {@link #clearNow()} in a finally block after calling
-   * this method.
+   * To reduce the number of times we need to call calculateNow, you can call this method to set now
+   * in a thread local. When the run returns the thread local is cleared.
-  public static void setNow() {
-    now.set(calculateNow());
-  }
-
-  private static long calculateNow() {
-    InternalCache cache = GemFireCacheImpl.getInstance();
-    if (cache != null) {
-      // Use cache.cacheTimeMillis here. See bug 52267.
-      InternalDistributedSystem ids = cache.getInternalDistributedSystem();
-      if (ids != null) {
-        return ids.getClock().cacheTimeMillis();
-      }
+  static void doWithNowSet(LocalRegion lr, Runnable runnable) {
+    now.set(calculateNow(lr.getCache()));
+    try {
+      runnable.run();
+    } finally {
+      now.remove();
-    return 0L;
-   * Call this method after a thread has called {@link #setNow()} once you are done calling code
-   * that may call {@link #getNow()}.
-   */
-  public static void clearNow() {
-    now.remove();
-  }
-
-  /**
-   * Returns the current time in milliseconds. If the current thread has called {@link #setNow()}
-   * then that time is return.
+   * Returns the current time in milliseconds. If the current thread has set the now thread local
+   * then that time is return. Otherwise now is calculated and returned.
-  public static long getNow() {
+  protected long getNow() {
+  public long calculateNow() {
+    return calculateNow(getLocalRegion().getCache());
+  }
+
+  public static long calculateNow(InternalCache cache) {
+    if (cache != null) {
+      // Use cache.cacheTimeMillis here. See bug 52267.
+      InternalDistributedSystem ids = cache.getInternalDistributedSystem();
+      if (ids != null) {
+        return ids.getClock().cacheTimeMillis();
+      }
+    }
+    return 0L;
+  }
+

MOV31 MOV31 UPD42 INS44 INS44 UPD83 UPD39 UPD42 INS8 UPD83 INS44 INS43 INS42 INS43 INS42 INS54 INS41 MOV43 INS42 UPD66 UPD66 INS42 INS42 INS8 MOV8 UPD66 UPD66 INS32 INS21 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL68 DEL65 DEL66 DEL66 DEL83 DEL42 DEL68 DEL65 DEL83 DEL66 DEL42 DEL68 DEL65 DEL66 DEL66 DEL42 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60