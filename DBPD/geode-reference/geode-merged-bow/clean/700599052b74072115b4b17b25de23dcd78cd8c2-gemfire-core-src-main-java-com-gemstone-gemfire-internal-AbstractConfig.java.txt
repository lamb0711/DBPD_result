GEODE-913: refactor AbstractDistributionConfig

* use annotations to annotate the config attributes and its setters/getters/checkers
* delete multiple huge if/else statements to use annoations
* delete unnecessary checks use annotated checkers.
* delete all isXXModifiers to use attribute lists to denote if the attribute is modifiable or not.

-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.lang.reflect.Array;
-import java.net.InetAddress;
-import java.net.UnknownHostException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Enumeration;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
-import java.util.TreeSet;
-
-import com.gemstone.gemfire.distributed.internal.AbstractDistributionConfig;
+import java.io.*;
+import java.lang.reflect.Array;
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+import java.util.*;
+
-
-  /**
-   * Checks to see if the named attribute can be modified.
-   * @throws UnmodifiableException if it is unmodifiable.
-   */
-  protected void _checkIfModifiable(String attName) {
-    if (!isAttributeModifiable(attName)) {
-      throw new UnmodifiableException(_getUnmodifiableMsg(attName));
-    }
-  }
-    boolean sourceFound = false;
-      } 
-      if (!sourceFound) {
-        sourceFound = true;
-        if (source == null) {
-          //configProps.put(sourceHeader, "### GemFire Properties using default values ###");
-        } else {
-          //configProps.put(sourceHeader, "### GemFire Properties defined with " + source.getDescription() + " ###");
-        }
-    } if (attName.equalsIgnoreCase(DistributionConfig.MEMBERSHIP_PORT_RANGE_NAME)) {
+    }
+
+    if (attName.equalsIgnoreCase(DistributionConfig.MEMBERSHIP_PORT_RANGE_NAME)) {
-    } else if (result.getClass().isArray()) {
+    }
+
+    if (result.getClass().isArray()) {
-    } else if (result instanceof InetAddress) {
+    }
+
+    if (result instanceof InetAddress) {
-    } else {
-      return result.toString();
+
+    return result.toString();

MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 INS25 INS25 MOV25 MOV41 MOV32 MOV8 MOV32 MOV8 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL38 DEL42 DEL9 DEL7 DEL21 DEL42 DEL33 DEL27 DEL8 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL25