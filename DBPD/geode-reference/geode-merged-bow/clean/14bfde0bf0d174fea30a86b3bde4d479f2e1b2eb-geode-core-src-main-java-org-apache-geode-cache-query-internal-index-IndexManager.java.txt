Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
+import org.apache.geode.internal.logging.LoggingThread;
-      final LoggingThreadGroup group =
-          LoggingThreadGroup.createThreadGroup("QueryMonitor Thread Group", logger);
-      updater = new IndexUpdaterThread(group, this.INDEX_MAINTENANCE_BUFFER,
+      updater = new IndexUpdaterThread(this.INDEX_MAINTENANCE_BUFFER,
-          LocalizedStrings.IndexCreationMsg_CANCELED_DUE_TO_LOW_MEMORY.toLocalizedString());
+          "Index creation canceled due to low memory");
-            LocalizedStrings.IndexManager_INDEX_NAMED_0_ALREADY_EXISTS
-                .toLocalizedString(indexName));
+            String.format("Index named ' %s ' already exists.",
+                indexName));
-                LocalizedStrings.DefaultQueryService_HASH_INDEX_CREATION_IS_NOT_SUPPORTED_FOR_ASYNC_MAINTENANCE
-                    .toLocalizedString());
+                "Hash index is currently not supported for regions with Asynchronous index maintenance.");
-              LocalizedStrings.DefaultQueryService_HASH_INDEX_CREATION_IS_NOT_SUPPORTED_FOR_MULTIPLE_ITERATORS
-                  .toLocalizedString());
+              "Hash Index is not supported with from clause having multiple iterators(collections).");
-              LocalizedStrings.DefaultQueryService_INDEX_CREATION_IS_NOT_SUPPORTED_FOR_REGIONS_WHICH_OVERFLOW_TO_DISK_THE_REGION_INVOLVED_IS_0
-                  .toLocalizedString(region.getFullPath()));
+              String.format(
+                  "The specified index conditions are not supported for regions which overflow to disk. The region involved is %s",
+                  region.getFullPath()));
-                LocalizedStrings.DefaultQueryService_OFF_HEAP_INDEX_CREATION_IS_NOT_SUPPORTED_FOR_ASYNC_MAINTENANCE_THE_REGION_IS_0
-                    .toLocalizedString(region.getFullPath()));
+                String.format(
+                    "Asynchronous index maintenance is currently not supported for off-heap regions. The off-heap region is %s",
+                    region.getFullPath()));
-              LocalizedStrings.DefaultQueryService_OFF_HEAP_INDEX_CREATION_IS_NOT_SUPPORTED_FOR_MULTIPLE_ITERATORS_THE_REGION_IS_0
-                  .toLocalizedString(region.getFullPath()));
+              String.format(
+                  "From clauses having multiple iterators(collections) are not supported for off-heap regions. The off-heap region is %s",
+                  region.getFullPath()));
-                LocalizedStrings.IndexManager_INDEX_NAMED_0_ALREADY_EXISTS
-                    .toLocalizedString(indexName));
+                String.format("Index named ' %s ' already exists.",
+                    indexName));
-                LocalizedStrings.IndexManager_SIMILAR_INDEX_EXISTS.toLocalizedString());
+                "Similar Index Exists");
-          LocalizedStrings.IndexManager_INDEX_DOES_NOT_BELONG_TO_THIS_INDEXMANAGER
-              .toLocalizedString());
+          "Index does not belong to this IndexManager");
-              LocalizedStrings.IndexManager_INVALID_ACTION.toLocalizedString());
+              "Invalid action");
-  public class IndexUpdaterThread extends Thread {
+  public class IndexUpdaterThread extends LoggingThread {
-    IndexUpdaterThread(ThreadGroup group, int updateThreshold, String threadName) {
-      super(group, threadName);
+    IndexUpdaterThread(int updateThreshold, String threadName) {
+      super(threadName);
-      this.setDaemon(true);

UPD40 UPD43 UPD42 MOV25 MOV27 INS45 MOV25 INS25 INS45 MOV32 INS8 MOV32 MOV53 MOV25 INS45 UPD42 INS42 INS45 MOV38 INS45 MOV43 UPD42 INS42 INS45 UPD42 INS42 INS45 MOV43 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL59 DEL60 DEL42 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL8 DEL25 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL52 DEL42 DEL9 DEL32 DEL21