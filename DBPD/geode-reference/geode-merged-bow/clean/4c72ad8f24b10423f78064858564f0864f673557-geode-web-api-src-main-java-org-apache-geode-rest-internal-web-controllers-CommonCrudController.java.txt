GEODE-7938: added keys query param to GET, PUT, and DELETE /{region} endpoints

-import javax.servlet.http.HttpServletRequest;
-
+import org.springframework.web.bind.annotation.RequestParam;
-   * Delete data for single key or specific keys in region
+   * Delete data for one or more keys from a region
-  @RequestMapping(method = RequestMethod.DELETE, value = "/{region}/**",
+  @RequestMapping(method = RequestMethod.DELETE, value = "/{region}/{keys}",
-      notes = "Delete data for one or more keys in a region. The keys, ** in the endpoint, are a comma separated list.")
+      notes = "Delete data for one or more keys in a region. Deprecated in favor of /{region}?keys=.")
-      HttpServletRequest request) {
-    String[] keys = parseKeys(request, region);
-    securityService.authorize("WRITE", region, keys);
-    logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[]) keys),
-        region);
-
+      @PathVariable("keys") String[] keys) {
+    return deleteRegionKeys(region, keys);
+  }
+  private ResponseEntity<?> deleteRegionKeys(String region, String[] keys) {
+    securityService.authorize("WRITE", region, keys);
+    logger.debug("Delete data for keys {} on region {}", ArrayUtils.toString((Object[]) keys),
+        region);
-   * Delete all data in region
+   * Delete all data in region or just the given keys
+   * @param encodedKeys optional comma separated list of keys
-  @ApiOperation(value = "delete all data", notes = "Delete all data in the region")
+  @ApiOperation(value = "delete all data or the specified keys",
+      notes = "Delete all in the region or just the specified keys")
-  @PreAuthorize("@securityService.authorize('DATA', 'WRITE', #region)")
-  public ResponseEntity<?> delete(@PathVariable("region") String region) {
+  public ResponseEntity<?> deleteAllOrGivenKeys(@PathVariable("region") String region,
+      @RequestParam(value = "keys", required = false) final String[] encodedKeys) {
+    if (encodedKeys == null || encodedKeys.length == 0) {
+      return deleteAllRegionData(region);
+    } else {
+      String[] decodedKeys = decode(encodedKeys);
+      return deleteRegionKeys(region, decodedKeys);
+    }
+  }
+  private ResponseEntity<?> deleteAllRegionData(String region) {
+    securityService.authorize("DATA", "WRITE", region);
+    logger.debug("Deleting all data in Region ({})...", region);

MOV26 UPD40 INS31 INS31 INS8 INS83 INS74 INS42 INS44 INS44 MOV8 INS83 INS42 INS44 INS8 INS83 INS74 INS42 INS44 MOV8 INS79 INS5 UPD42 MOV21 INS41 INS43 INS76 INS43 INS42 MOV5 INS42 INS65 INS77 INS83 INS5 INS42 INS21 MOV21 INS25 INS43 INS76 INS43 INS42 INS21 UPD66 UPD45 UPD45 INS42 INS45 INS43 INS85 INS32 INS42 INS42 UPD66 INS42 INS66 UPD45 UPD45 INS42 INS80 INS80 INS43 INS85 INS32 INS27 INS8 INS8 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 UPD45 INS42 INS45 INS42 INS9 INS42 INS42 INS42 INS45 INS42 INS27 INS27 INS41 INS60 INS41 INS42 INS42 INS45 INS45 INS42 INS42 INS33 INS40 INS34 INS32 INS5 INS59 INS32 INS42 INS42 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL45 DEL79 DEL83 DEL42