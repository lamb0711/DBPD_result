Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class represents a request object to set an alert manager for the newly
- * joined member.
+ * This class represents a request object to set an alert manager for the newly joined member.
-   * @param alertDefs
-   *                Array of stat alert definitions to set
-   * @param refreshInterval
-   *                Refresh interval to set
+   * @param alertDefs Array of stat alert definitions to set
+   * @param refreshInterval Refresh interval to set
-  public StatAlertsManagerAssignMessage(StatAlertDefinition[] alertDefs,
-      long refreshInterval) {
+  public StatAlertsManagerAssignMessage(StatAlertDefinition[] alertDefs, long refreshInterval) {
-   * This method can be used to create a request used to assign a Stat Alerts
-   * Manager for a newly joined member. Stat Alert Definitions & refresh
-   * interval at that moment are set on the Stat Alerts Manager
+   * This method can be used to create a request used to assign a Stat Alerts Manager for a newly
+   * joined member. Stat Alert Definitions & refresh interval at that moment are set on the Stat
+   * Alerts Manager
-   * @param alertDefs
-   *                Array of stat alert definitions to be set
-   * @param refreshInterval
-   *                Refresh interval to be set
+   * @param alertDefs Array of stat alert definitions to be set
+   * @param refreshInterval Refresh interval to be set
-  public static StatAlertsManagerAssignMessage create(
-      StatAlertDefinition[] alertDefs, long refreshInterval) {
+  public static StatAlertsManagerAssignMessage create(StatAlertDefinition[] alertDefs,
+      long refreshInterval) {
-   * Executed at the receiver's end. Sets the AlertsManager to the receiver
-   * member VM.
+   * Executed at the receiver's end. Sets the AlertsManager to the receiver member VM.
-   * @param dm
-   *                DistributionManager instance
+   * @param dm DistributionManager instance
-   * Sets the Alerts Manager on the receiver member VM. For the Alerts Manager,
-   * alert defs & the refresh interval are set.
+   * Sets the Alerts Manager on the receiver member VM. For the Alerts Manager, alert defs & the
+   * refresh interval are set.
-   * @param dm
-   *                DistributionManager instance
+   * @param dm DistributionManager instance
-    manager.updateAlertDefinition(alertDefs,
-        UpdateAlertDefinitionMessage.ADD_ALERT_DEFINITION);
+    manager.updateAlertDefinition(alertDefs, UpdateAlertDefinitionMessage.ADD_ALERT_DEFINITION);
-   * A callback used by GemFire Data Serialization mechanism to write to a
-   * stream.
+   * A callback used by GemFire Data Serialization mechanism to write to a stream.
-   * @param out
-   *                DataOutput stream to write to
+   * @param out DataOutput stream to write to
-   * A callback used by GemFire Data Serialization mechanism to read from a
-   * stream.
+   * A callback used by GemFire Data Serialization mechanism to read from a stream.
-   * @param in
-   *                DataInput stream to read from
+   * @param in DataInput stream to read from
-    alertDefs = (StatAlertDefinition[])DataSerializer.readObjectArray(in);
+    alertDefs = (StatAlertDefinition[]) DataSerializer.readObjectArray(in);
-  public int getDSFID() {    
+  public int getDSFID() {

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66