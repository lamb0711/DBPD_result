Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class PartitionRegionInfoImpl 
-implements InternalPRInfo, Serializable {
+public class PartitionRegionInfoImpl implements InternalPRInfo, Serializable {
-  
-  public PartitionRegionInfoImpl(String regionPath,
-                                      int configuredBucketCount,
-                                      int createdBucketCount,
-                                      int lowRedundancyBucketCount,
-                                      int configuredRedundantCopies,
-                                      int actualRedundantCopies,
-                                      Set<InternalPartitionDetails> memberDetails,
-                                      String colocatedPath,
-                                      OfflineMemberDetails offlineMembers) {
+
+  public PartitionRegionInfoImpl(String regionPath, int configuredBucketCount,
+      int createdBucketCount, int lowRedundancyBucketCount, int configuredRedundantCopies,
+      int actualRedundantCopies, Set<InternalPartitionDetails> memberDetails, String colocatedPath,
+      OfflineMemberDetails offlineMembers) {
-  
+
-    return Collections.unmodifiableSet((Set<? extends PartitionMemberInfo>)this.memberDetails);
+    return Collections.unmodifiableSet((Set<? extends PartitionMemberInfo>) this.memberDetails);
-  
+
-    return Collections.unmodifiableSet((Set<? extends InternalPartitionDetails>)this.memberDetails);
+    return Collections
+        .unmodifiableSet((Set<? extends InternalPartitionDetails>) this.memberDetails);
-  
+
-   * hashCode is defined for this class to make
-   * sure that the before details and after details for
-   * RebalanceResults are in the same order. This makes
-   * debugging printouts easier, and it also removes
-   * discrepancies due to rounding errors when calculating
-   * the stddev in tests.
+   * hashCode is defined for this class to make sure that the before details and after details for
+   * RebalanceResults are in the same order. This makes debugging printouts easier, and it also
+   * removes discrepancies due to rounding errors when calculating the stddev in tests.
+
-    PartitionRegionInfoImpl o = (PartitionRegionInfoImpl)other;
+    PartitionRegionInfoImpl o = (PartitionRegionInfoImpl) other;
+

UPD66 UPD66 UPD66 DEL66 DEL66 DEL66