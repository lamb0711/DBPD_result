Merge branch 'release/1.0.0-incubating.M3'

-import joptsimple.MultipleArgumentsForOptionException;
+import com.gemstone.gemfire.management.internal.cli.util.HyphenFormatter;
+ *
+ * Newly constructed JoptOptionParser must be loaded with arguments and
+ * options before parsing command strings.
- * @since 7.0
- * 
+ * @since GemFire 7.0
+    parser.allowsUnrecognizedOptions();
-    if (option.isRequired()) {
-      argumentSpecs.required();
-    }
+    // TODO: temporarily commented out as workaround for GEODE-1598
+    // if (option.isRequired()) {
+    //   argumentSpecs.required();
+    // }
-      String[] preProcessedInput = preProcess(input.getString());
+      String[] preProcessedInput = preProcess(new HyphenFormatter().formatCommand(input.getString()));
-      } catch (Exception e) {
-        if (e instanceof OptionException) {
-          ce = processException(e);
-          joptOptionSet = ((OptionException) e).getDetected();
-        }
+      } catch (OptionException e) {
+        ce = processException(e);
+        // TODO: joptOptionSet = e.getDetected(); // removed when geode-joptsimple was removed
-          String unknownString = joptOptionSet.nonOptionArguments().get(arguments.size());
+          String unknownString = (String)joptOptionSet.nonOptionArguments().get(arguments.size()); // added cast when geode-joptsimple was removed
-          ce = processException(OptionException.createUnrecognizedOptionException(unknownString, joptOptionSet));
+          // TODO: ce = processException(OptionException.createUnrecognizedOptionException(unknownString, joptOptionSet)); // removed when geode-joptsimple was removed
-                    ce = processException(new MultipleArgumentsForOptionException(optionList, joptOptionSet));
+                    // TODO: ce = processException(new MultipleArgumentsForOptionException(optionList, joptOptionSet)); // removed when geode-joptsimple was removed
-  private CliCommandOptionException processException(Exception e) {
-    CliCommandOptionException ce = null;
-    if (e instanceof OptionException) {
-      ce = (CliCommandOptionException) ExceptionGenerator
-          .generate((OptionException) e);
-      if (ce != null) {
-        if (ce instanceof CliCommandOptionException) {
-          ((CliCommandOptionException) ce)
-              .setOption(getOption((OptionException) e));
-        }
-      }
-    }
-    return ce;
+  private CliCommandOptionException processException(final OptionException exception) {
+    return ExceptionGenerator.generate(getOption(exception), exception);

MOV26 UPD40 INS66 INS66 UPD66 INS21 INS83 MOV43 INS42 INS41 INS32 INS32 INS42 INS42 MOV42 MOV42 MOV32 INS42 INS42 INS32 MOV8 INS42 MOV32 MOV43 INS14 INS42 INS43 INS43 INS42 INS42 INS11 MOV43 MOV32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL42 DEL11 DEL36 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL43 DEL62 DEL25 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL62 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL11 DEL32 DEL11 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL42 DEL41