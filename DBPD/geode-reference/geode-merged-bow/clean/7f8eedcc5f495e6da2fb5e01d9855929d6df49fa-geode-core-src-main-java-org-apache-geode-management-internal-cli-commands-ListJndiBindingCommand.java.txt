GEODE-4830: use CacheConfig to access the jndi list in ListJNDIBindingCommand

* updated the CacheConfig to hold only one JNDIBindingsType instead of a list
* make sure xml created by those POJOs can be used to start a server
* the service will keep a list of bind classes for clearer xml generation.
* the service will keep a reference to the marshaer/unmarsher for faster operation

+import org.apache.geode.distributed.internal.ClusterConfigurationService;
+import org.apache.geode.internal.cache.configuration.CacheConfig;
+import org.apache.geode.internal.cache.configuration.JndiBindingsType;
+import org.apache.geode.management.internal.cli.result.CompositeResultData;
-      "List all active jndi bindings. An active binding is one that is bound to the server's jndi context.";
+      "List all jndi bindings, active and configured. An active binding is one that is bound to the server's jndi context (and also listed in the cluster config). A configured binding is one that is listed in the cluster config, but may not be active on the servers.";
-    Result result = null;
-    TabularResultData tabularData = ResultBuilder.createTabularResultData();
+    CompositeResultData resultData = ResultBuilder.createCompositeResultData();
+    CompositeResultData.SectionResultData resultSection = resultData.addSection();
+    TabularResultData configTable = null;
+    TabularResultData memberTable = null;
-    Set<DistributedMember> members = findMembers(null, null);
-    if (members.size() == 0) {
-      return ResultBuilder.createUserErrorResult("No members found");
+    ClusterConfigurationService ccService = getSharedConfiguration();
+    if (ccService != null) {
+      configTable = resultSection.addTable();
+      configTable.setHeader("Configured JNDI bindings: ");
+      // we don't support creating jndi binding with random group name yet
+      CacheConfig cacheConfig = ccService.getCacheConfig("cluster");
+      List<JndiBindingsType.JndiBinding> jndiBindings = cacheConfig.getJndiBindings();
+      for (JndiBindingsType.JndiBinding jndiBinding : jndiBindings) {
+        configTable.accumulate("Group Name", "cluster");
+        configTable.accumulate("JNDI Name", jndiBinding.getJndiName());
+        configTable.accumulate("JDBC Driver Class", jndiBinding.getJdbcDriverClass());
+      }
+    Set<DistributedMember> members = findMembers(null, null);
+
+    if (members.size() == 0) {
+      if (configTable == null) {
+        return ResultBuilder.createUserErrorResult("No members found");
+      }
+      return ResultBuilder.buildResult(resultData);
+    }
+
+    memberTable = resultSection.addTable();
+    memberTable.setHeader("Active JNDI bindings found on each member: ");
-        tabularData.accumulate("Member", oneResult.getMemberIdOrName());
-        tabularData.accumulate("Name", serializables[i]);
-        tabularData.accumulate("Class", serializables[i + 1]);
+        memberTable.accumulate("Member", oneResult.getMemberIdOrName());
+        memberTable.accumulate("JNDI Name", serializables[i]);
+        memberTable.accumulate("JDBC Driver Class", serializables[i + 1]);
-    result = ResultBuilder.buildResult(tabularData);
-
-    return result;
+    return ResultBuilder.buildResult(resultData);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 MOV21 UPD45 INS60 INS60 INS60 INS60 INS25 INS21 INS43 INS59 INS43 INS59 MOV43 INS59 UPD43 INS43 INS59 INS27 INS8 INS8 INS32 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS33 UPD42 UPD42 INS42 INS42 INS32 INS42 INS33 INS21 INS21 MOV60 INS60 INS70 INS25 INS41 UPD42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS43 INS74 INS59 INS44 INS42 INS8 INS27 MOV8 INS32 UPD42 UPD42 INS42 INS32 INS42 INS42 INS45 INS42 UPD42 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS21 INS21 INS42 INS33 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS45 INS42 INS40 INS42 INS42 INS40 INS32 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS32 UPD42 UPD42 UPD45 UPD42 UPD45 INS42 INS42 INS42 INS42 DEL42 DEL42