GEODE-11: Add a basic score based aggregator

* Aggregator merges results returned from shards and orders the result based on
  lucene hit score
* A configurable count of results is merged

Review link: https://reviews.apache.org/r/37720/

-import java.util.Collection;
-import java.util.Iterator;
+import java.util.ArrayList;
-public class LuceneQueryResultsImpl<E> implements LuceneQueryResults<E>, ResultCollector {
+public class LuceneQueryResultsImpl implements LuceneQueryResults,
+    ResultCollector<LuceneQueryResults, List<LuceneQueryResults>> {
+
+  // list of docs matching search query
+  private List<LuceneResultStruct> hits = new ArrayList<>();
+  private float maxScore = Float.MIN_VALUE;
-  public Object getResult() throws FunctionException {
+  public List<LuceneQueryResults> getResult() throws FunctionException {
-  public Object getResult(long timeout, TimeUnit unit)
-      throws FunctionException, InterruptedException {
+  public List<LuceneQueryResults> getResult(long timeout, TimeUnit unit) throws FunctionException, InterruptedException {
-  public void addResult(DistributedMember memberID,
-      Object resultOfSingleExecution) {
-    // TODO Auto-generated method stub
-    
+  public void addResult(DistributedMember memberID, LuceneQueryResults resultOfSingleExecution) {
+    // results.add(resultOfSingleExecution);
-    
+
-    
+
-  public List getNextPage() {
-    // TODO Auto-generated method stub
+  public List<LuceneResultStruct> getNextPage() {
-    // TODO Auto-generated method stub
-  public int size() {
+  public Object getID() {
-    return 0;
+    return null;
+  @Override
+  public int size() {
+    return hits.size();
+  }
+
+  @Override
+  public List<LuceneResultStruct> getHits() {
+    return hits;
+  }
+
+  @Override
+  public float getMaxScore() {
+    return maxScore;
+  }
+
+  /**
+   * Adds a result hit to the result set
+   * 
+   * @param hit
+   */
+  public void addHit(LuceneResultStruct hit) {
+    hits.add(hit);
+    if (hit.getScore() > maxScore) {
+      maxScore = hit.getScore();
+    }
+  }

UPD40 INS43 INS74 INS23 INS23 INS31 INS31 INS31 INS31 INS42 MOV43 INS43 INS74 INS83 INS74 INS59 INS83 INS39 INS59 INS74 INS74 INS78 INS74 MOV78 INS83 MOV43 INS42 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS42 UPD43 MOV43 INS43 INS43 INS43 INS42 INS14 INS42 INS40 INS43 INS43 INS43 INS43 MOV43 INS42 MOV43 INS43 INS41 INS42 INS43 INS43 INS41 INS42 INS41 INS65 INS65 INS43 INS42 INS21 INS25 UPD42 INS42 INS42 INS42 INS74 UPD42 MOV42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS66 INS42 INS42 INS32 INS27 INS8 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS21 INS42 INS42 INS42 INS7 INS42 INS32 INS42 INS42 DEL40 DEL26 DEL42 DEL73 DEL74 DEL43 DEL42 DEL43 DEL34