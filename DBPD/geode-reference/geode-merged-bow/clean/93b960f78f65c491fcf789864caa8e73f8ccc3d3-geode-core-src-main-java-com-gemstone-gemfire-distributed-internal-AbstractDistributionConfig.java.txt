GEODE-420: Added SSLEnabledComponents.java

+import org.apache.commons.lang.StringUtils;
+
+import com.gemstone.gemfire.distributed.SSLEnabledComponents;
-      throw new IllegalArgumentException(LocalizedStrings.AbstractDistributionConfig_COULD_NOT_SET_0_TO_1_BECAUSE_ITS_VALUE_CAN_NOT_BE_LESS_THAN_2.
-                                                                                                                                                    toLocalizedString(new Object[] {
-                                                                                                                                                      MEMBERSHIP_PORT_RANGE,
-                                                                                                                                                      value[0] + "-" + value[1],
-                                                                                                                                                      Integer.valueOf(3)
-                                                                                                                                                    }));
+      throw new IllegalArgumentException(LocalizedStrings.AbstractDistributionConfig_COULD_NOT_SET_0_TO_1_BECAUSE_ITS_VALUE_CAN_NOT_BE_LESS_THAN_2.toLocalizedString(new Object[] {
+        MEMBERSHIP_PORT_RANGE, value[0] + "-" + value[1], Integer.valueOf(3)
+      }));
+  /**
+   * First check if sslComponents are in the list of valid components. If so, check that no other *-ssl-* properties other than cluster-ssl-* are set.
+   * This would mean one is mixing the "old" with the "new"
+   */
+  @ConfigAttributeChecker(name = SSL_ENABLED_COMPONENTS)
+  protected String checkLegacySSLWhenSSLEnabledComponentsSet(String value) {
+    if (value != null && value.length() > 0) {
+      String[] components = value.split(",");
+      for (String component : components) {
+        switch (component) {
+          case SSLEnabledComponents.ALL:
+          case SSLEnabledComponents.CLUSTER:
+          case SSLEnabledComponents.SERVER:
+          case SSLEnabledComponents.GATEWAY:
+          case SSLEnabledComponents.JMX:
+          case SSLEnabledComponents.HTTP_SERVICE:
+            continue;
+          default:
+            throw new IllegalArgumentException(LocalizedStrings.AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_0_INVALID_TRY_1.toLocalizedString(new Object[] {
+              value, StringUtils.join(new String[] {
+              SSLEnabledComponents.ALL,
+              SSLEnabledComponents.CLUSTER,
+              SSLEnabledComponents.SERVER,
+              SSLEnabledComponents.GATEWAY,
+              SSLEnabledComponents.JMX,
+              SSLEnabledComponents.HTTP_SERVICE
+            }, ",")
+            }));
+        }
+      }
+      if(getJmxManagerSSLEnabled() || getHttpServiceSSLEnabled() || getServerSSLEnabled() || getGatewaySSLEnabled())
+      {
+        throw new IllegalArgumentException(LocalizedStrings.AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_SET_INVALID_DEPRECATED_SSL_SET
+          .toLocalizedString());
+      }
+    }
+    return value;
+  }
+
+    m.put(SSL_ENABLED_COMPONENTS,"A comma delimited list of components that require SSL communications");
+

INS26 INS26 INS40 INS40 INS31 INS29 INS77 INS83 INS43 INS42 INS44 INS8 INS65 INS42 INS80 INS42 INS43 INS42 INS25 INS41 INS21 INS66 INS66 INS42 INS42 INS42 INS27 INS8 INS42 INS32 INS27 INS27 INS60 INS70 INS25 INS42 INS42 INS42 INS45 INS42 INS33 INS32 INS34 INS5 INS59 INS44 INS42 INS8 INS27 INS8 INS42 INS42 INS43 INS85 INS42 INS32 INS43 INS42 INS50 INS32 INS32 INS32 INS32 INS53 INS42 INS42 INS42 INS45 INS42 INS42 INS49 INS49 INS49 INS49 INS49 INS49 INS18 INS49 INS53 INS42 INS42 INS42 INS42 INS14 INS40 INS40 INS40 INS40 INS40 INS40 INS14 INS43 INS32 INS43 INS32 INS42 INS40 INS42 INS42 INS40 INS42 INS3 INS5 INS4 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS3 INS45 INS5 INS4 INS43 INS85 INS40 INS40 INS40 INS40 INS40 INS40 INS42