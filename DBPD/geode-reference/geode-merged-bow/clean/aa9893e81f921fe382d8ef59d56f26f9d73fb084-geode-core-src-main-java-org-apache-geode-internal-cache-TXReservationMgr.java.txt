GEODE-5557: Fix for false read conflict exception (#3492)

* Use HashMap instead of HashSet in TXRegionLockRequestImpl so that read and write lock held can be distinguished.
* Use boolean value to indicate a key is read locked by a read operation when detectReadConflicts is enabled.

-import java.util.Set;
+
-    Set keys = rr.getKeys();
+    Map keys = rr.getKeys();
+
-        Object[] keysArray = keys.toArray();
-        if (oldValue instanceof Set) {
-          checkSetForConflict(rr, (Set) oldValue, keysArray, localLocks);
+        if (oldValue instanceof Map) {
+
+          checkSetForConflict(rr, (Map) oldValue, keys, localLocks);
-            checkSetForConflict(rr, (Set) alArray[i], keysArray, localLocks);
+            checkSetForConflict(rr, (Map) alArray[i], keys, localLocks);
-  private void checkSetForConflict(TXRegionLockRequestImpl rr, Set s, Object[] keys,
-      IdentityArrayList localLocks) throws CommitConflictException {
-    for (int i = 0; i < keys.length; i++) {
-      if (s.contains(keys[i])) {
-        release(localLocks, true);
-        throw new CommitConflictException(
-            String.format(
-                "The key %s in region %s was being modified by another transaction locally.",
-                new Object[] {keys[i], rr.getRegionFullPath()}));
+  private void checkSetForConflict(TXRegionLockRequestImpl rr, Map<Object, Boolean> oldValue,
+      Map<Object, Boolean> keys, IdentityArrayList localLocks) throws CommitConflictException {
+    for (Map.Entry<Object, Boolean> e : keys.entrySet()) {
+      if (oldValue.containsKey(e.getKey())) {
+        if (oldValue.get(e.getKey()) || e.getValue()) {
+          release(localLocks, true);
+          throw new CommitConflictException(
+              String.format(
+                  "The key %s in region %s was being modified by another transaction locally.",
+                  new Object[] {e.getKey(), rr.getRegionFullPath()}));
+        }
+
-      Set keys = rr.getKeys();
+      Map<Object, Boolean> keys = rr.getKeys();
+
+
+
+            } else {
+              this.regionLocks.put(r, al);

INS8 INS74 INS42 INS74 INS70 UPD43 INS43 INS43 INS43 INS43 INS43 INS43 INS44 INS32 MOV8 UPD42 INS42 UPD42 MOV42 INS42 INS42 MOV42 INS42 INS74 INS42 INS42 INS42 INS25 INS43 INS43 INS43 INS32 MOV8 INS74 INS40 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS42 INS27 INS42 UPD42 MOV42 INS42 UPD43 INS32 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 UPD42 INS42 INS42 UPD43 UPD42 UPD42 INS8 UPD43 INS32 INS21 UPD42 INS42 INS42 INS32 INS22 INS42 INS42 INS42 INS52 INS42 DEL40 DEL26 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL2 DEL32 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL43