GEODE-4384/3875: refactor create/destroy jndi binding commands to use CacheConfig objects (#1627)

* GEODE-3875:  refactor create jndi binding
* GEODE-4384: refactor destroy jndi binding

* refactored xml manipulation using jaxb
* Eliminate the need for RegionElement

-import java.io.IOException;
+import java.util.Objects;
-import javax.xml.parsers.ParserConfigurationException;
-import javax.xml.transform.TransformerException;
-
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
-import org.xml.sax.SAXException;
-import org.apache.geode.internal.datasource.ConfigProperty;
+import org.apache.geode.internal.cache.configuration.CacheConfig;
+import org.apache.geode.internal.cache.configuration.JndiBindingsType;
-import org.apache.geode.management.internal.cli.functions.JndiBindingConfiguration;
-import org.apache.geode.management.internal.configuration.domain.Configuration;
-import org.apache.geode.management.internal.configuration.utils.XmlUtils;
-      @CliOption(key = TYPE, mandatory = true,
-          help = TYPE__HELP) JndiBindingConfiguration.DATASOURCE_TYPE type,
+      @CliOption(key = TYPE, mandatory = true, help = TYPE__HELP) DATASOURCE_TYPE type,
-          help = DATASOURCE_CONFIG_PROPERTIES_HELP) ConfigProperty[] dsConfigProperties)
-      throws IOException, SAXException, ParserConfigurationException, TransformerException {
+          help = DATASOURCE_CONFIG_PROPERTIES_HELP) JndiBindingsType.JndiBinding.ConfigProperty[] dsConfigProperties) {
-    JndiBindingConfiguration configuration = new JndiBindingConfiguration();
-    configuration.setBlockingTimeout(blockingTimeout);
-    configuration.setConnectionPoolDatasource(connectionPooledDatasource);
+    JndiBindingsType.JndiBinding configuration = new JndiBindingsType.JndiBinding();
+    configuration.setBlockingTimeoutSeconds(Objects.toString(blockingTimeout, null));
+    configuration.setConnPooledDatasourceClass(connectionPooledDatasource);
-    configuration.setIdleTimeout(idleTimeout);
-    configuration.setInitPoolSize(initPoolSize);
-    configuration.setJdbcDriver(jdbcDriver);
+    configuration.setIdleTimeoutSeconds(Objects.toString(idleTimeout, null));
+    configuration.setInitPoolSize(Objects.toString(initPoolSize, null));
+    configuration.setJdbcDriverClass(jdbcDriver);
-    configuration.setLoginTimeout(loginTimeout);
-    configuration.setManagedConnFactory(managedConnFactory);
-    configuration.setMaxPoolSize(maxPoolSize);
+    configuration.setLoginTimeoutSeconds(Objects.toString(loginTimeout, null));
+    configuration.setManagedConnFactoryClass(managedConnFactory);
+    configuration.setMaxPoolSize(Objects.toString(maxPoolSize, null));
-    configuration.setType(type);
-    configuration.setUsername(username);
-    configuration.setXaDatasource(xaDataSource);
+    configuration.setType(type.getType());
+    configuration.setUserName(username);
+    configuration.setXaDatasourceClass(xaDataSource);
-      configuration.setDatasourceConfigurations(Arrays.asList(dsConfigProperties));
+      configuration.getConfigProperty().addAll(Arrays.asList(dsConfigProperties));
-      Element existingBinding =
-          service.getXmlElement("cluster", "jndi-binding", "jndi-name", jndiName);
-      if (existingBinding != null) {
+      CacheConfig cacheConfig = service.getCacheConfig("cluster");
+      JndiBindingsType.JndiBinding existing =
+          service.findElement(cacheConfig.getJndiBindings(), jndiName);
+      if (existing != null) {
-      updateXml(configuration);
+
+      service.updateCacheConfig("cluster", config -> {
+        config.getJndiBindings().add(configuration);
+        return config;
+      });
-  void updateXml(JndiBindingConfiguration configuration)
-      throws TransformerException, IOException, SAXException, ParserConfigurationException {
-    // cluster group config should always be present
-    Configuration config = getSharedConfiguration().getConfiguration("cluster");
+  public enum DATASOURCE_TYPE {
+    MANAGED("ManagedDataSource"),
+    SIMPLE("SimpleDataSource"),
+    POOLED("PooledDataSource"),
+    XAPOOLED("XAPooledDataSource");
-    Document document = XmlUtils.createDocumentFromXml(config.getCacheXmlContent());
-    Node cacheNode = document.getElementsByTagName("cache").item(0);
+    private final String type;
-    NodeList jndiBindingsNode = document.getElementsByTagName("jndi-bindings");
-
-    if (jndiBindingsNode == null || jndiBindingsNode.getLength() == 0) {
-      Element jndiBindings = document.createElement("jndi-bindings");
-      cacheNode.appendChild(jndiBindings);
+    DATASOURCE_TYPE(String type) {
+      this.type = type;
-    Element jndiBinding = document.createElement("jndi-binding");
-    jndiBindingsNode.item(0).appendChild(jndiBinding);
-
-    for (Object key : configuration.getParamsAsMap().keySet()) {
-      if (configuration.getParamsAsMap().get(key) != null)
-        jndiBinding.setAttribute(key.toString(),
-            configuration.getParamsAsMap().get(key).toString());
+    public String getType() {
+      return this.type;
-    for (ConfigProperty configProperty : configuration.getDatasourceConfigurations()) {
-      Element configPropertyElement = document.createElement("config-property");
-      jndiBinding.appendChild(configPropertyElement);
-
-      Node configPropertyName = document.createElement("config-property-name");
-      configPropertyName.setTextContent(configProperty.getName());
-
-      Node configPropertyType = document.createElement("config-property-type");
-      configPropertyType.setTextContent(configProperty.getType());
-
-      Node configPropertyValue = document.createElement("config-property-value");
-      configPropertyValue.setTextContent(configProperty.getValue());
-
-      configPropertyElement.appendChild(configPropertyName);
-      configPropertyElement.appendChild(configPropertyType);
-      configPropertyElement.appendChild(configPropertyValue);
+    public String getName() {
+      return name();
-
-    String newXml = XmlUtils.prettyXml(document.getFirstChild());
-    config.setCacheXmlContent(newXml);
-
-    getSharedConfiguration().getConfigurationRegion().put("cluster", config);

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 INS71 INS83 INS42 INS72 INS72 INS72 INS72 INS23 INS31 INS31 INS31 UPD43 UPD5 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS83 INS83 INS43 INS59 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS42 UPD43 UPD43 UPD42 MOV42 UPD42 MOV42 MOV43 INS42 INS21 UPD42 MOV42 INS41 UPD42 MOV42 INS41 INS40 INS40 UPD42 INS32 UPD42 UPD42 INS32 INS32 UPD42 UPD42 INS32 UPD42 INS32 INS32 UPD42 UPD42 INS60 INS7 INS22 INS32 UPD43 INS42 INS42 MOV42 INS33 INS42 INS42 MOV42 INS33 INS42 INS42 MOV42 INS33 INS42 INS42 MOV42 INS33 INS42 INS42 MOV42 INS33 MOV42 INS42 INS32 INS42 UPD43 INS43 INS59 INS22 INS42 INS52 INS42 UPD42 MOV42 INS40 MOV42 UPD42 MOV42 UPD42 UPD42 INS40 INS42 INS32 UPD42 INS42 UPD42 INS45 INS86 INS52 INS42 UPD42 INS42 INS42 INS32 INS42 INS59 INS8 INS42 INS42 INS42 INS21 INS41 INS32 INS42 INS32 INS42 MOV42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL45 DEL45 DEL42 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL34 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL43 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL25 DEL8 DEL70 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL31