Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The RegionCommands class implements GemFire Management REST API web service endpoints for the Gfsh Region Commands.
+ * The RegionCommands class implements GemFire Management REST API web service endpoints for the
+ * Gfsh Region Commands.
+ * 
-  public String listRegions(@RequestParam(value = CliStrings.LIST_REGION__GROUP, required = false) final String groupName,
-                            @RequestParam(value = CliStrings.LIST_REGION__MEMBER, required = false) final String memberNameId)
-  {
+  public String listRegions(
+      @RequestParam(value = CliStrings.LIST_REGION__GROUP, required = false) final String groupName,
+      @RequestParam(value = CliStrings.LIST_REGION__MEMBER,
+          required = false) final String memberNameId) {
-                            @PathVariable("name") final String regionNamePath,
-                            @RequestParam(value = CliStrings.ALTER_REGION__GROUP, required = false) final String[] groups,
-                            @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIME, required = false) final Integer entryIdleTimeExpiration,
-                            @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIMEACTION, required = false) final String entryIdleTimeExpirationAction,
-                            @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONTIMETOLIVE, required = false) final Integer entryTimeToLiveExpiration,
-                            @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONTTLACTION, required = false) final String entryTimeToLiveExpirationAction,
-                            @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIME, required = false) final Integer regionIdleTimeExpiration,
-                            @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIMEACTION, required = false) final String regionIdleTimeExpirationAction,
-                            @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONTTL, required = false) final Integer regionTimeToLiveExpiration,
-                            @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONTTLACTION, required = false) final String regionTimeToLiveExpirationAction,
-                            @RequestParam(value = CliStrings.ALTER_REGION__CACHELISTENER, required = false) final String[] cacheListeners,
-                            @RequestParam(value = CliStrings.ALTER_REGION__CACHELOADER, required = false) final String cacheLoader,
-                            @RequestParam(value = CliStrings.ALTER_REGION__CACHEWRITER, required = false) final String cacheWriter,
-                            @RequestParam(value = CliStrings.ALTER_REGION__ASYNCEVENTQUEUEID, required = false) final String[] asyncEventQueueIds,
-                            @RequestParam(value = CliStrings.ALTER_REGION__GATEWAYSENDERID, required = false) final String[] gatewaySenderIds,
-                            @RequestParam(value = CliStrings.ALTER_REGION__CLONINGENABLED, required = false) final Boolean enableCloning,
-                            @RequestParam(value = CliStrings.ALTER_REGION__EVICTIONMAX, required = false) final Integer evictionMax)
-  {
-    //logRequest(request);
+      @PathVariable("name") final String regionNamePath,
+      @RequestParam(value = CliStrings.ALTER_REGION__GROUP, required = false) final String[] groups,
+      @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIME,
+          required = false) final Integer entryIdleTimeExpiration,
+      @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIMEACTION,
+          required = false) final String entryIdleTimeExpirationAction,
+      @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONTIMETOLIVE,
+          required = false) final Integer entryTimeToLiveExpiration,
+      @RequestParam(value = CliStrings.ALTER_REGION__ENTRYEXPIRATIONTTLACTION,
+          required = false) final String entryTimeToLiveExpirationAction,
+      @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIME,
+          required = false) final Integer regionIdleTimeExpiration,
+      @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIMEACTION,
+          required = false) final String regionIdleTimeExpirationAction,
+      @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONTTL,
+          required = false) final Integer regionTimeToLiveExpiration,
+      @RequestParam(value = CliStrings.ALTER_REGION__REGIONEXPIRATIONTTLACTION,
+          required = false) final String regionTimeToLiveExpirationAction,
+      @RequestParam(value = CliStrings.ALTER_REGION__CACHELISTENER,
+          required = false) final String[] cacheListeners,
+      @RequestParam(value = CliStrings.ALTER_REGION__CACHELOADER,
+          required = false) final String cacheLoader,
+      @RequestParam(value = CliStrings.ALTER_REGION__CACHEWRITER,
+          required = false) final String cacheWriter,
+      @RequestParam(value = CliStrings.ALTER_REGION__ASYNCEVENTQUEUEID,
+          required = false) final String[] asyncEventQueueIds,
+      @RequestParam(value = CliStrings.ALTER_REGION__GATEWAYSENDERID,
+          required = false) final String[] gatewaySenderIds,
+      @RequestParam(value = CliStrings.ALTER_REGION__CLONINGENABLED,
+          required = false) final Boolean enableCloning,
+      @RequestParam(value = CliStrings.ALTER_REGION__EVICTIONMAX,
+          required = false) final Integer evictionMax) {
+    // logRequest(request);
-      command.addOption(CliStrings.ALTER_REGION__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.ALTER_REGION__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIME, entryIdleTimeExpiration);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIMEACTION, entryIdleTimeExpirationAction);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONTIMETOLIVE, entryTimeToLiveExpiration);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONTTLACTION, entryTimeToLiveExpirationAction);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIME, regionIdleTimeExpiration);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIMEACTION, regionIdleTimeExpirationAction);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONTTL, regionTimeToLiveExpiration);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONTTLACTION, regionTimeToLiveExpirationAction);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIME,
+        entryIdleTimeExpiration);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONIDLETIMEACTION,
+        entryIdleTimeExpirationAction);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONTIMETOLIVE,
+        entryTimeToLiveExpiration);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__ENTRYEXPIRATIONTTLACTION,
+        entryTimeToLiveExpirationAction);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIME,
+        regionIdleTimeExpiration);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONIDLETIMEACTION,
+        regionIdleTimeExpirationAction);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONTTL,
+        regionTimeToLiveExpiration);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__REGIONEXPIRATIONTTLACTION,
+        regionTimeToLiveExpirationAction);
-    addCommandOption(request, command, CliStrings.ALTER_REGION__ASYNCEVENTQUEUEID, asyncEventQueueIds);
+    addCommandOption(request, command, CliStrings.ALTER_REGION__ASYNCEVENTQUEUEID,
+        asyncEventQueueIds);
-                             @RequestParam(value = CliStrings.CREATE_REGION__REGIONSHORTCUT, required = false) final String regionType,
-                             @RequestParam(value = CliStrings.CREATE_REGION__USEATTRIBUTESFROM, required = false) final String regionTemplate,
-                             @RequestParam(value = CliStrings.CREATE_REGION__GROUP, required = false) final String[] groups,
-                             @RequestParam(value = CliStrings.CREATE_REGION__SKIPIFEXISTS, defaultValue = "true") final Boolean skipIfExists,
-                             @RequestParam(value = CliStrings.CREATE_REGION__KEYCONSTRAINT, required = false) final String keyConstraint,
-                             @RequestParam(value = CliStrings.CREATE_REGION__VALUECONSTRAINT, required = false) final String valueConstraint,
-                             @RequestParam(value = CliStrings.CREATE_REGION__STATISTICSENABLED, required = false) final Boolean enableStatistics,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIME, required = false) final Integer entryIdleTimeExpiration,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION, required = false) final String entryIdleTimeExpirationAction,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONTIMETOLIVE, required = false) final Integer entryTimeToLiveExpiration,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION, required = false) final String entryTimeToLiveExpirationAction,
-                             @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIME, required = false) final Integer regionIdleTimeExpiration,
-                             @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION, required = false) final String regionIdleTimeExpirationAction,
-                             @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONTTL, required = false) final Integer regionTimeToLiveExpiration,
-                             @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION, required = false) final String regionTimeToLiveExpirationAction,
-                             @RequestParam(value = CliStrings.CREATE_REGION__DISKSTORE, required = false) final String diskStore,
-                             @RequestParam(value = CliStrings.CREATE_REGION__DISKSYNCHRONOUS, required = false) final Boolean enableSynchronousDisk,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ENABLEASYNCCONFLATION, required = false) final Boolean enableAsynchronousConflation,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ENABLESUBSCRIPTIONCONFLATION, required = false) final Boolean enableSubscriptionConflation,
-                             @RequestParam(value = CliStrings.CREATE_REGION__CACHELISTENER, required = false) final String[] cacheListeners,
-                             @RequestParam(value = CliStrings.CREATE_REGION__CACHELOADER, required = false) final String cacheLoader,
-                             @RequestParam(value = CliStrings.CREATE_REGION__CACHEWRITER, required = false) final String cacheWriter,
-                             @RequestParam(value = CliStrings.CREATE_REGION__ASYNCEVENTQUEUEID, required = false) final String[] asyncEventQueueIds,
-                             @RequestParam(value = CliStrings.CREATE_REGION__GATEWAYSENDERID, required = false) final String[] gatewaySenderIds,
-                             @RequestParam(value = CliStrings.CREATE_REGION__CONCURRENCYCHECKSENABLED, required = false) final Boolean enableConcurrencyChecks,
-                             @RequestParam(value = CliStrings.CREATE_REGION__CLONINGENABLED, required = false) final Boolean enableCloning,
-                             @RequestParam(value = CliStrings.CREATE_REGION__CONCURRENCYLEVEL, required = false) final Integer concurrencyLevel,
-                             @RequestParam(value = CliStrings.CREATE_REGION__COLOCATEDWITH, required = false) final String colocatedWith,
-                             @RequestParam(value = CliStrings.CREATE_REGION__LOCALMAXMEMORY, required = false) final Integer localMaxMemory,
-                             @RequestParam(value = CliStrings.CREATE_REGION__RECOVERYDELAY, required = false) final Long recoveryDelay,
-                             @RequestParam(value = CliStrings.CREATE_REGION__REDUNDANTCOPIES, required = false) final Integer redundantCopies,
-                             @RequestParam(value = CliStrings.CREATE_REGION__STARTUPRECOVERYDDELAY, required = false) final Long startupRecoveryDelay,
-                             @RequestParam(value = CliStrings.CREATE_REGION__TOTALMAXMEMORY, required = false) final Long totalMaxMemory,
-                             @RequestParam(value = CliStrings.CREATE_REGION__TOTALNUMBUCKETS, required = false) final Integer totalNumBuckets,
-                             @RequestParam(value = CliStrings.CREATE_REGION__COMPRESSOR, required = false) final String compressor)
-  {
+      @RequestParam(value = CliStrings.CREATE_REGION__REGIONSHORTCUT,
+          required = false) final String regionType,
+      @RequestParam(value = CliStrings.CREATE_REGION__USEATTRIBUTESFROM,
+          required = false) final String regionTemplate,
+      @RequestParam(value = CliStrings.CREATE_REGION__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.CREATE_REGION__SKIPIFEXISTS,
+          defaultValue = "true") final Boolean skipIfExists,
+      @RequestParam(value = CliStrings.CREATE_REGION__KEYCONSTRAINT,
+          required = false) final String keyConstraint,
+      @RequestParam(value = CliStrings.CREATE_REGION__VALUECONSTRAINT,
+          required = false) final String valueConstraint,
+      @RequestParam(value = CliStrings.CREATE_REGION__STATISTICSENABLED,
+          required = false) final Boolean enableStatistics,
+      @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIME,
+          required = false) final Integer entryIdleTimeExpiration,
+      @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION,
+          required = false) final String entryIdleTimeExpirationAction,
+      @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONTIMETOLIVE,
+          required = false) final Integer entryTimeToLiveExpiration,
+      @RequestParam(value = CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION,
+          required = false) final String entryTimeToLiveExpirationAction,
+      @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIME,
+          required = false) final Integer regionIdleTimeExpiration,
+      @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION,
+          required = false) final String regionIdleTimeExpirationAction,
+      @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONTTL,
+          required = false) final Integer regionTimeToLiveExpiration,
+      @RequestParam(value = CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION,
+          required = false) final String regionTimeToLiveExpirationAction,
+      @RequestParam(value = CliStrings.CREATE_REGION__DISKSTORE,
+          required = false) final String diskStore,
+      @RequestParam(value = CliStrings.CREATE_REGION__DISKSYNCHRONOUS,
+          required = false) final Boolean enableSynchronousDisk,
+      @RequestParam(value = CliStrings.CREATE_REGION__ENABLEASYNCCONFLATION,
+          required = false) final Boolean enableAsynchronousConflation,
+      @RequestParam(value = CliStrings.CREATE_REGION__ENABLESUBSCRIPTIONCONFLATION,
+          required = false) final Boolean enableSubscriptionConflation,
+      @RequestParam(value = CliStrings.CREATE_REGION__CACHELISTENER,
+          required = false) final String[] cacheListeners,
+      @RequestParam(value = CliStrings.CREATE_REGION__CACHELOADER,
+          required = false) final String cacheLoader,
+      @RequestParam(value = CliStrings.CREATE_REGION__CACHEWRITER,
+          required = false) final String cacheWriter,
+      @RequestParam(value = CliStrings.CREATE_REGION__ASYNCEVENTQUEUEID,
+          required = false) final String[] asyncEventQueueIds,
+      @RequestParam(value = CliStrings.CREATE_REGION__GATEWAYSENDERID,
+          required = false) final String[] gatewaySenderIds,
+      @RequestParam(value = CliStrings.CREATE_REGION__CONCURRENCYCHECKSENABLED,
+          required = false) final Boolean enableConcurrencyChecks,
+      @RequestParam(value = CliStrings.CREATE_REGION__CLONINGENABLED,
+          required = false) final Boolean enableCloning,
+      @RequestParam(value = CliStrings.CREATE_REGION__CONCURRENCYLEVEL,
+          required = false) final Integer concurrencyLevel,
+      @RequestParam(value = CliStrings.CREATE_REGION__COLOCATEDWITH,
+          required = false) final String colocatedWith,
+      @RequestParam(value = CliStrings.CREATE_REGION__LOCALMAXMEMORY,
+          required = false) final Integer localMaxMemory,
+      @RequestParam(value = CliStrings.CREATE_REGION__RECOVERYDELAY,
+          required = false) final Long recoveryDelay,
+      @RequestParam(value = CliStrings.CREATE_REGION__REDUNDANTCOPIES,
+          required = false) final Integer redundantCopies,
+      @RequestParam(value = CliStrings.CREATE_REGION__STARTUPRECOVERYDDELAY,
+          required = false) final Long startupRecoveryDelay,
+      @RequestParam(value = CliStrings.CREATE_REGION__TOTALMAXMEMORY,
+          required = false) final Long totalMaxMemory,
+      @RequestParam(value = CliStrings.CREATE_REGION__TOTALNUMBUCKETS,
+          required = false) final Integer totalNumBuckets,
+      @RequestParam(value = CliStrings.CREATE_REGION__COMPRESSOR,
+          required = false) final String compressor) {
-      "Either Region type or template-region must be specified!");
+        "Either Region type or template-region must be specified!");
-    }
-    else {
+    } else {
-      command.addOption(CliStrings.CREATE_REGION__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_REGION__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-    command.addOption(CliStrings.CREATE_REGION__SKIPIFEXISTS, String.valueOf(Boolean.TRUE.equals(skipIfExists)));
+    command.addOption(CliStrings.CREATE_REGION__SKIPIFEXISTS,
+        String.valueOf(Boolean.TRUE.equals(skipIfExists)));
-      command.addOption(CliStrings.CREATE_REGION__STATISTICSENABLED, String.valueOf(enableStatistics));
+      command.addOption(CliStrings.CREATE_REGION__STATISTICSENABLED,
+          String.valueOf(enableStatistics));
-      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIME, String.valueOf(entryIdleTimeExpiration));
+      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIME,
+          String.valueOf(entryIdleTimeExpiration));
-      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION, entryIdleTimeExpirationAction);
+      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION,
+          entryIdleTimeExpirationAction);
-      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTIMETOLIVE, String.valueOf(entryTimeToLiveExpiration));
+      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTIMETOLIVE,
+          String.valueOf(entryTimeToLiveExpiration));
-      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION, entryTimeToLiveExpirationAction);
+      command.addOption(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION,
+          entryTimeToLiveExpirationAction);
-      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIME, String.valueOf(regionIdleTimeExpiration));
+      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIME,
+          String.valueOf(regionIdleTimeExpiration));
-      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION, regionIdleTimeExpirationAction);
+      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION,
+          regionIdleTimeExpirationAction);
-      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTL, String.valueOf(regionTimeToLiveExpiration));
+      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTL,
+          String.valueOf(regionTimeToLiveExpiration));
-      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION, regionTimeToLiveExpirationAction);
+      command.addOption(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION,
+          regionTimeToLiveExpirationAction);
-      command.addOption(CliStrings.CREATE_REGION__DISKSYNCHRONOUS, String.valueOf(enableSynchronousDisk));
+      command.addOption(CliStrings.CREATE_REGION__DISKSYNCHRONOUS,
+          String.valueOf(enableSynchronousDisk));
-      command.addOption(CliStrings.CREATE_REGION__ENABLEASYNCCONFLATION, String.valueOf(enableAsynchronousConflation));
+      command.addOption(CliStrings.CREATE_REGION__ENABLEASYNCCONFLATION,
+          String.valueOf(enableAsynchronousConflation));
-        String.valueOf(enableSubscriptionConflation));
+          String.valueOf(enableSubscriptionConflation));
-      command.addOption(CliStrings.CREATE_REGION__CACHELISTENER, StringUtils.concat(cacheListeners,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_REGION__CACHELISTENER,
+          StringUtils.concat(cacheListeners, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_REGION__ASYNCEVENTQUEUEID, StringUtils.concat(asyncEventQueueIds,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_REGION__ASYNCEVENTQUEUEID,
+          StringUtils.concat(asyncEventQueueIds, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_REGION__GATEWAYSENDERID, StringUtils.concat(gatewaySenderIds,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_REGION__GATEWAYSENDERID,
+          StringUtils.concat(gatewaySenderIds, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_REGION__CONCURRENCYCHECKSENABLED, String.valueOf(enableConcurrencyChecks));
+      command.addOption(CliStrings.CREATE_REGION__CONCURRENCYCHECKSENABLED,
+          String.valueOf(enableConcurrencyChecks));
-      command.addOption(CliStrings.CREATE_REGION__CONCURRENCYLEVEL, String.valueOf(concurrencyLevel));
+      command.addOption(CliStrings.CREATE_REGION__CONCURRENCYLEVEL,
+          String.valueOf(concurrencyLevel));
-      command.addOption(CliStrings.CREATE_REGION__STARTUPRECOVERYDDELAY, String.valueOf(startupRecoveryDelay));
+      command.addOption(CliStrings.CREATE_REGION__STARTUPRECOVERYDDELAY,
+          String.valueOf(startupRecoveryDelay));

UPD66 INS66