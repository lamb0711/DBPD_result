GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-          LocalizedStrings.Message_INVALID_MESSAGETYPE.toLocalizedString());
+          "Invalid MessageType");
-      throw new IOException(LocalizedStrings.Message_DEAD_CONNECTION.toLocalizedString());
+      throw new IOException("Dead Connection");
-      throw new IOException(LocalizedStrings.Message_INVALID_MESSAGE_TYPE_0_WHILE_READING_HEADER
-          .toLocalizedString(type));
+      throw new IOException(String.format("Invalid message type  %s  while reading header",
+          type));
-                  LocalizedStrings.Message_OPERATION_TIMED_OUT_ON_SERVER_WAITING_ON_CONCURRENT_MESSAGE_LIMITER_AFTER_WAITING_0_MILLISECONDS
-                      .toLocalizedString(timeToWait));
+                  String.format(
+                      "Operation timed out on server waiting on concurrent message limiter after waiting  %s  milliseconds",
+                      timeToWait));
-        throw new IOException(LocalizedStrings.Message_MESSAGE_SIZE_0_EXCEEDED_MAX_LIMIT_OF_1
-            .toLocalizedString(new Object[] {len, this.maxIncomingMessageLength}));
+        throw new IOException(String.format("Message size  %s  exceeded max limit of  %s",
+            new Object[] {len, this.maxIncomingMessageLength}));
-                    LocalizedStrings.Message_OPERATION_TIMED_OUT_ON_SERVER_WAITING_ON_CONCURRENT_DATA_LIMITER_AFTER_WAITING_0_MILLISECONDS
-                        .toLocalizedString(timeToWait));
+                    String.format(
+                        "Operation timed out on server waiting on concurrent data limiter after waiting  %s  milliseconds",
+                        timeToWait));
-              LocalizedStrings.Message_THE_CONNECTION_HAS_BEEN_RESET_WHILE_READING_THE_HEADER
-                  .toLocalizedString());
+              "The connection has been reset while reading the header");
-              LocalizedStrings.Message_THE_CONNECTION_HAS_BEEN_RESET_WHILE_READING_THE_HEADER
-                  .toLocalizedString());
+              "The connection has been reset while reading the header");
-          LocalizedStrings.Message_PART_LENGTH_0_AND_NUMBER_OF_PARTS_1_INCONSISTENT
-              .toLocalizedString(new Object[] {len, numParts}));
+          String.format("Part length ( %s ) and number of parts ( %s ) inconsistent",
+              new Object[] {len, numParts}));
-      logger.info(LocalizedMessage.create(LocalizedStrings.Message_RPL_NEG_LEN__0, len));
-      throw new IOException(LocalizedStrings.Message_DEAD_CONNECTION.toLocalizedString());
+      logger.info("rpl: neg len: {}", len);
+      throw new IOException("Dead Connection");
-                  LocalizedStrings.Message_THE_CONNECTION_HAS_BEEN_RESET_WHILE_READING_A_PART
-                      .toLocalizedString());
+                  "The connection has been reset while reading a part");
-                  LocalizedStrings.Message_THE_CONNECTION_HAS_BEEN_RESET_WHILE_READING_A_PART
-                      .toLocalizedString());
+                  "The connection has been reset while reading a part");
-              LocalizedStrings.Message_THE_CONNECTION_HAS_BEEN_RESET_WHILE_READING_THE_PAYLOAD
-                  .toLocalizedString());
+              "The connection has been reset while reading the payload");
-              LocalizedStrings.Message_THE_CONNECTION_HAS_BEEN_RESET_WHILE_READING_THE_PAYLOAD
-                  .toLocalizedString());
+              "The connection has been reset while reading the payload");
-      throw new IOException(LocalizedStrings.Message_DEAD_CONNECTION.toLocalizedString());
+      throw new IOException("Dead Connection");

INS45 INS45 INS45 MOV42 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32