GEODE-1761 Clients don't fail back when servers are bounced

Servers will send a refresh hint to clients if they detect that a request
had to be send to a different server who owned the primary bucket
affected by the operation.  Clients should always refresh when this
happens unless they have connection-pool size constraints that force
them to use non-optimal servers.

Client-side operation classes have been modified to initiate the refresh.
I've added code in the meta-data service class to avoid performing
multiple concurrent refreshes on the same region.

On the server-side I've cleaned up some of the network-hop detection
code to stop using hard-coded integers and to consolidate some of
the code that resets the ThreadLocals being used to record network-
hops detected.

+  private boolean allowDuplicateMetadataRefresh;
+
+
+  public boolean isAllowDuplicateMetadataRefresh() {
+    return allowDuplicateMetadataRefresh;
+  }
+
+  public void setAllowDuplicateMetadataRefresh(final boolean allowDuplicateMetadataRefresh) {
+    this.allowDuplicateMetadataRefresh = allowDuplicateMetadataRefresh;
+  }
+

INS23 INS31 INS31 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS41 INS83 INS39 INS42 INS21 INS42 INS7 INS22 INS42 INS52 INS42