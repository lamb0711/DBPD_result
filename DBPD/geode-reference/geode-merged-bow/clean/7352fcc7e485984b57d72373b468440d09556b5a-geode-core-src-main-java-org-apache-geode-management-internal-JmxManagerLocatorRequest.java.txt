GEODE-3328: refactor ConnectCommand

* connect command will prompt for missing ssl configs if ssl is indicated by any options
* command ssl options will override the properties loaded in the file
* reworked connect with ssl so that the configuration won't get cached accidentally.
* have auto connect also prompt for missing ssl configs, not in the socket creator
* change the properties file type in the start server and start locator command to be File instead of String

-import java.util.Map;
-import org.apache.geode.distributed.internal.DistributionConfigImpl;
+import org.apache.geode.distributed.internal.tcpserver.LocatorCancelException;
-import org.apache.geode.internal.net.*;
+import org.apache.geode.internal.admin.SSLConfig;
+import org.apache.geode.internal.net.SSLConfigurationFactory;
+import org.apache.geode.internal.net.SocketCreator;
+import org.apache.geode.internal.security.SecurableCommunicationChannel;
-  public JmxManagerLocatorRequest() {
-    super();
-  }
-
-      Map<String, String> sslConfigProps) throws IOException {
-    Properties distributionConfigProps = new Properties();
+      Properties sslConfigProps) throws IOException, ClassNotFoundException {
-    try {
-      if (sslConfigProps != null) {
-        distributionConfigProps.putAll(sslConfigProps);
-      }
+    // simply need to turn sslConfigProps into sslConfig for locator
+    SSLConfig sslConfig = SSLConfigurationFactory.getSSLConfigForComponent(sslConfigProps,
+        SecurableCommunicationChannel.LOCATOR);
+    SocketCreator socketCreator = new SocketCreator(sslConfig);
+    TcpClient client = new TcpClient(socketCreator);
+    Object responseFromServer = client.requestToServer(inetSockAddr, SINGLETON, msTimeout, true);
-      TcpClient client = new TcpClient(new DistributionConfigImpl(distributionConfigProps));
-      Object responseFromServer = client.requestToServer(inetSockAddr, SINGLETON, msTimeout, true);
-
+    if (responseFromServer instanceof JmxManagerLocatorResponse)
-    } catch (ClassNotFoundException unexpected) {
-      throw new IllegalStateException(unexpected);
-    } catch (ClassCastException unexpected) {
-      // FIXME - Abhishek: object read is type "int" instead of
-      // JmxManagerLocatorResponse when the Locator is using SSL & the request
-      // didn't use SSL -> this causes ClassCastException. Not sure how to make
-      // locator meaningful message
-      throw new IllegalStateException(unexpected);
-    } finally {
-      distributionConfigProps.clear();
+    else {
+      throw new LocatorCancelException(
+          "Unrecognisable response received: This could be the result of trying to connect a non-SSL-enabled client to an SSL-enabled locator.");
-  public static JmxManagerLocatorResponse send(String locatorHost, int locatorPort, int msTimeout)
-      throws IOException {
-    return send(locatorHost, locatorPort, msTimeout, null);
-  }
-

MOV26 MOV26 INS26 INS26 UPD40 UPD40 INS40 UPD40 INS40 MOV43 MOV43 INS60 MOV60 INS60 MOV60 INS25 INS43 INS59 INS43 MOV43 INS59 INS62 MOV41 INS8 UPD42 MOV42 INS42 INS32 INS42 UPD42 INS14 INS42 INS14 INS42 MOV43 MOV53 UPD42 MOV42 UPD42 MOV42 MOV42 INS40 UPD43 MOV43 UPD42 MOV42 MOV43 INS42 UPD42 MOV42 UPD42 UPD43 INS45 UPD42 DEL83 DEL42 DEL46 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL14 DEL59 DEL60 DEL14 DEL14 DEL42 DEL42 DEL33 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL33 DEL32 DEL41 DEL8 DEL31