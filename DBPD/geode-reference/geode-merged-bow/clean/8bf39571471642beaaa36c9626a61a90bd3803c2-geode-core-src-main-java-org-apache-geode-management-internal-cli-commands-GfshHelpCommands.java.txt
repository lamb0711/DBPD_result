Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class GfshHelpCommands implements CommandMarker{
+public class GfshHelpCommands implements CommandMarker {
-  
+
-  @CliMetaData(shellOnly=true, relatedTopic = {CliStrings.TOPIC_GEODE_HELP })
+  @CliMetaData(shellOnly = true, relatedTopic = {CliStrings.TOPIC_GEODE_HELP})
-      @CliArgument(name = CliStrings.HELP__COMMAND, 
-                 argumentContext = CliStrings.PARAM_CONTEXT_HELP, 
-                 help = CliStrings.HELP__COMMAND__HELP) 
-                 String commandString) {
+      @CliArgument(name = CliStrings.HELP__COMMAND, argumentContext = CliStrings.PARAM_CONTEXT_HELP,
+          help = CliStrings.HELP__COMMAND__HELP) String commandString) {
-  
-  
-  
+
+
+
-  @CliMetaData(shellOnly=true, relatedTopic = {CliStrings.TOPIC_GEODE_HELP })
+  @CliMetaData(shellOnly = true, relatedTopic = {CliStrings.TOPIC_GEODE_HELP})
-      @CliArgument(name = CliStrings.HINT__TOPICNAME, 
-                argumentContext = ConverterHint.HINTTOPIC, 
-                help = CliStrings.HINT__TOPICNAME) 
-                String topicName) {
+      @CliArgument(name = CliStrings.HINT__TOPICNAME, argumentContext = ConverterHint.HINTTOPIC,
+          help = CliStrings.HINT__TOPICNAME) String topicName) {
-      result= ResultBuilder.createShellClientErrorResult(CliStrings.HINT__MSG__SHELL_NOT_INITIALIZED);
-    } else { 
+      result =
+          ResultBuilder.createShellClientErrorResult(CliStrings.HINT__MSG__SHELL_NOT_INITIALIZED);
+    } else {
-          result = ResultBuilder.createInfoResult(CliStrings.format(CliStrings.HINT__MSG__UNKNOWN_TOPIC, topicName));
+          result = ResultBuilder
+              .createInfoResult(CliStrings.format(CliStrings.HINT__MSG__UNKNOWN_TOPIC, topicName));
-          SectionResultData commandHelpSection = compositeResultData.addSection("Commands And Help");
+          SectionResultData commandHelpSection =
+              compositeResultData.addSection("Commands And Help");
-          
+
-    
+

