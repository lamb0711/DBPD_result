GEODE-7652: MembershipBuilder lets you set the local locator (#4614)


+import org.apache.geode.distributed.internal.membership.api.MembershipLocator;
+  // captured in initialize() when starting so that we can hand it to new instance when restarting
+  private MembershipLocator<InternalDistributedMember> membershipLocator;
+
-  public static InternalDistributedSystem connectInternal(Properties config,
-      SecurityConfig securityConfig, MetricsService.Builder metricsSessionBuilder) {
+  public static InternalDistributedSystem connectInternal(
+      Properties config,
+      SecurityConfig securityConfig,
+      MetricsService.Builder metricsSessionBuilder) {
+    return connectInternal(config, securityConfig, metricsSessionBuilder, null);
+  }
+
+  /**
+   * If the experimental multiple-system feature is enabled, always create a new system.
+   *
+   * <p>
+   * Otherwise, create a new InternalDistributedSystem with the given properties, or connect to an
+   * existing one with the same properties.
+   */
+  public static InternalDistributedSystem connectInternal(
+      Properties config,
+      SecurityConfig securityConfig,
+      MetricsService.Builder metricsSessionBuilder,
+      final MembershipLocator<InternalDistributedMember> locator) {
+          .setLocator(locator)
+          .setLocator(locator)
-      MetricsService.Builder metricsServiceBuilder) {
+      MetricsService.Builder metricsServiceBuilder,
+      final MembershipLocator<InternalDistributedMember> membershipLocatorArg) {
+
-        startInitLocator();
+        startInitLocator(membershipLocatorArg);
-          dm = ClusterDistributionManager.create(this);
+          dm = ClusterDistributionManager.create(this, membershipLocator);
-            InternalLocator locator = InternalLocator.getLocator();
+            InternalLocator internalLocator = InternalLocator.getLocator();
-                InternalLocator.getLocatorStrings(), locator.isSharedConfigurationEnabled());
+                InternalLocator.getLocatorStrings(),
+                internalLocator.isSharedConfigurationEnabled());
-          startInitLocator();
+          startInitLocator(membershipLocatorArg);
+   * Starts a locator in this JVM iff the distribution config wants one started.
+   *
+   * @return the membershipLocatorArg if the distribution config has no locator specified;
+   *         otherwise starts a new InternalLocator and returns its associated MembershipLocator
+   *
+   * @param membershipLocatorArg on initial startup, a MembershipLocator provided explicitly by
+   *        a caller, or null; on restart, the old MembershipLocator (from the previous instance of
+   *        InternalDistributedSystem.)
-  private void startInitLocator() throws InterruptedException {
-    String locatorString = originalConfig.getStartLocator();
-    if (locatorString.length() == 0) {
+  private void startInitLocator(
+      final MembershipLocator<InternalDistributedMember> membershipLocatorArg)
+      throws InterruptedException {
+
+    final String locatorString = originalConfig.getStartLocator();
+    final boolean shouldStartLocator = locatorString.length() > 0;
+
+    if (!shouldStartLocator) {
+      membershipLocator = membershipLocatorArg;
+        membershipLocator = startedLocator.getMembershipLocator();
+          startedLocator = null;
+          membershipLocator = null;
-            newDS = connectInternal(configProps, null, metricsService.getRebuilder());
+            newDS = connectInternal(configProps, null, metricsService.getRebuilder(),
+                membershipLocator);
+    private MembershipLocator<InternalDistributedMember> locator;
+
+    public Builder setLocator(
+        final MembershipLocator<InternalDistributedMember> locator) {
+      this.locator = locator;
+      return this;
+    }
+
-                metricsServiceBuilder);
+                metricsServiceBuilder, locator);

INS26 INS40 INS23 INS31 INS83 INS74 INS59 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS44 INS44 INS44 INS23 INS31 INS43 INS43 INS42 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS83 INS74 INS42 INS83 INS74 INS42 INS65 INS65 INS65 INS83 INS74 INS42 INS60 INS83 INS74 INS59 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS66 INS66 INS66 INS66 INS42 INS42 INS40 INS32 INS43 INS43 INS43 INS43 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS43 INS43 INS83 INS83 INS39 INS59 INS38 INS43 INS43 INS42 INS42 INS83 INS74 INS42 INS21 INS41 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD27 MOV27 INS42 INS21 INS42 INS42 INS43 INS43 INS7 INS52 INS32 INS7 INS42 INS42 INS22 INS42 MOV32 INS42 INS32 INS42 INS42 INS21 INS52 INS42 UPD42 INS42 MOV32 INS42 INS7 INS42 UPD42 INS42 INS42 INS42 INS32 INS21 INS21 INS42 INS42 INS7 INS7 INS42 INS42 INS33 INS42 INS33 INS42 UPD42 UPD42 INS42