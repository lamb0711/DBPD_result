GEODE-3798: Refactor backup script code (#932)

* GEODE-3798: Refactor backup script code

  * Add tests for classes with low code coverage
  * Remove use of PrintWriter
  * General cleanup and attempts a seprarating concerns

+import java.io.BufferedWriter;
+import java.io.IOException;
-  public void writePreamble(PrintWriter writer) {
-    writer.println(ECHO_OFF);
-    writer.println(CD_TO_SCRIPT_DIR);
+  public void writePreamble(BufferedWriter writer) throws IOException {
+    writer.write(ECHO_OFF);
+    writer.newLine();
+    writer.write(CD_TO_SCRIPT_DIR);
+    writer.newLine();
-  public void writeComment(PrintWriter writer, String string) {
-    writer.println("rem " + string);
+  public void writeComment(BufferedWriter writer, String string) throws IOException {
+    writer.write("rem " + string);
+    writer.newLine();
-  public void writeCopyDirectoryContents(PrintWriter writer, File backup, File original,
-      boolean backupHasFiles) {
-    writer.println(MKDIR + " \"" + original + "\"");
-    writer.println(ROBOCOPY_COMMAND + " \"" + backup + "\" \"" + original + "\" "
+  public void writeCopyDirectoryContents(BufferedWriter writer, File backup, File original,
+      boolean backupHasFiles) throws IOException {
+    writer.write(MKDIR + " \"" + original + "\"");
+    writer.newLine();
+    writer.write(ROBOCOPY_COMMAND + " \"" + backup + "\" \"" + original + "\" "
-    writer.println(ERROR_CHECK);
+    writer.newLine();
+    writer.write(ERROR_CHECK);
+    writer.newLine();
-  public void writeCopyFile(PrintWriter writer, File source, File destination) {
+  public void writeCopyFile(BufferedWriter writer, File source, File destination)
+      throws IOException {
-    writer.println(ROBOCOPY_COMMAND + " \"" + sourcePath + "\" \"" + destinationPath + "\" "
+    writer.write(ROBOCOPY_COMMAND + " \"" + sourcePath + "\" \"" + destinationPath + "\" "
-    writer.println(ERROR_CHECK);
+    writer.newLine();
+    writer.write(ERROR_CHECK);
+    writer.newLine();
-  public void writeExistenceTest(PrintWriter writer, File file) {
-    writer.println("IF EXIST \"" + file + "\" echo \"" + RestoreScript.REFUSE_TO_OVERWRITE_MESSAGE
+  public void writeExistenceTest(BufferedWriter writer, File file) throws IOException {
+    writer.write("IF EXIST \"" + file + "\" echo \"" + RestoreScript.REFUSE_TO_OVERWRITE_MESSAGE
+    writer.newLine();
-  public void writeExit(PrintWriter writer) {
+  public void writeExit(BufferedWriter writer) throws IOException {
-    writer.println(EXIT_BLOCK);
+    writer.write(EXIT_BLOCK);
+    writer.newLine();

INS26 INS26 INS40 INS40 INS43 INS43 INS43 INS43 INS43 INS43 UPD43 INS42 INS21 INS21 UPD43 INS42 INS21 UPD43 INS42 INS21 INS21 INS21 UPD43 INS42 INS21 INS21 UPD43 INS42 INS21 UPD43 INS42 INS21 UPD42 INS32 INS32 UPD42 INS32 UPD42 INS32 INS32 INS32 UPD42 INS32 INS32 UPD42 INS32 UPD42 INS32 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42