Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   * Returns an {@link Execution} object that can be used to execute a function
-   * on the set of {@link Region}s. The function would be executed on the set of
-   * members that host data for any of the regions in the set of regions. <br>
+   * Returns an {@link Execution} object that can be used to execute a function on the set of
+   * {@link Region}s. The function would be executed on the set of members that host data for any of
+   * the regions in the set of regions. <br>
-   * DataPolicy.NORMAL, execute the function on any random member which has
-   * DataPolicy.REPLICATE . <br>
-   * DataPolicy.EMPTY, execute the function on any random member which has
+   * DataPolicy.NORMAL, execute the function on any random member which has DataPolicy.REPLICATE .
+   * <br>
+   * DataPolicy.EMPTY, execute the function on any random member which has DataPolicy.REPLICATE
+   * .<br>
+   * DataPolicy.REPLICATE, execute the function locally or any random member which has
-   * DataPolicy.REPLICATE, execute the function locally or any random member
-   * which has DataPolicy.REPLICATE .<br>
-   * DataPolicy.PARTITION, it executes on members where the primary copy of data
-   * is hosted. <br>
+   * DataPolicy.PARTITION, it executes on members where the primary copy of data is hosted. <br>
-   * For an Execution object obtained from this method, calling the withFilter
-   * method throws {@link UnsupportedOperationException}
+   * For an Execution object obtained from this method, calling the withFilter method throws
+   * {@link UnsupportedOperationException}
-    LocalRegion localRegion = (LocalRegion)region;
+    LocalRegion localRegion = (LocalRegion) region;
-   * Returns an {@link Execution} object that can be used to execute a data
-   * independent function on all the servers that the given cache is connected
-   * to. If the optional groups parameter is provided, function is executed on
-   * all servers that belong to the provided groups.
+   * Returns an {@link Execution} object that can be used to execute a data independent function on
+   * all the servers that the given cache is connected to. If the optional groups parameter is
+   * provided, function is executed on all servers that belong to the provided groups.
-   * If one of the servers goes down while dispatching or executing the function
-   * on the server, an Exception will be thrown.
+   * If one of the servers goes down while dispatching or executing the function on the server, an
+   * Exception will be thrown.
-   * @param regionService
-   *          obtained from {@link ClientCacheFactory#create} or
-   *          {@link ClientCache#createAuthenticatedView(java.util.Properties)}.
-   * @param groups
-   *          optional list of GemFire configuration property "groups" (see
-   *          <a href="../../distributed/DistributedSystem.html#groups">
-   *          <code>groups</code></a>) on which to execute the function.
-   *          Function will be executed on all servers of each group
+   * @param regionService obtained from {@link ClientCacheFactory#create} or
+   *        {@link ClientCache#createAuthenticatedView(java.util.Properties)}.
+   * @param groups optional list of GemFire configuration property "groups" (see
+   *        <a href="../../distributed/DistributedSystem.html#groups"> <code>groups</code></a>) on
+   *        which to execute the function. Function will be executed on all servers of each group
-   * Returns an {@link Execution} object that can be used to execute a data
-   * independent function on a server that the given cache is connected to. If
-   * the optional groups parameter is provided, the function is executed on one
-   * server of each group.
+   * Returns an {@link Execution} object that can be used to execute a data independent function on
+   * a server that the given cache is connected to. If the optional groups parameter is provided,
+   * the function is executed on one server of each group.
-   * If the server goes down while dispatching or executing the function, an
-   * Exception will be thrown.
+   * If the server goes down while dispatching or executing the function, an Exception will be
+   * thrown.
-   * @param regionService
-   *          obtained from {@link ClientCacheFactory#create()} or
-   *          {@link ClientCache#createAuthenticatedView(java.util.Properties)}.
-   * @param groups
-   *          optional list of GemFire configuration property "groups" (see
-   *          <a href="../../distributed/DistributedSystem.html#groups">
-   *          <code>groups</code></a>) on which to execute the function.
-   *          Function will be executed on one server of each group
+   * @param regionService obtained from {@link ClientCacheFactory#create()} or
+   *        {@link ClientCache#createAuthenticatedView(java.util.Properties)}.
+   * @param groups optional list of GemFire configuration property "groups" (see
+   *        <a href="../../distributed/DistributedSystem.html#groups"> <code>groups</code></a>) on
+   *        which to execute the function. Function will be executed on one server of each group
-   * Returns an {@link Execution} object that can be used to execute a data
-   * independent function on all the servers in the provided {@link Pool}. If
-   * the optional groups parameter is provided, function is executed on all
-   * servers that belong to the provided groups.
+   * Returns an {@link Execution} object that can be used to execute a data independent function on
+   * all the servers in the provided {@link Pool}. If the optional groups parameter is provided,
+   * function is executed on all servers that belong to the provided groups.
-   * If one of the servers goes down while dispatching or executing the function
-   * on the server, an Exception will be thrown.
+   * If one of the servers goes down while dispatching or executing the function on the server, an
+   * Exception will be thrown.
-   * @param pool
-   *          the set of servers to execute the function
-   * @param groups
-   *          optional list of GemFire configuration property "groups" (see <a
-   *          href="../../distributed/DistributedSystem.html#groups">
-   *          <code>groups</code></a>) on which to execute the function.
-   *          Function will be executed on all servers of each group
+   * @param pool the set of servers to execute the function
+   * @param groups optional list of GemFire configuration property "groups" (see
+   *        <a href="../../distributed/DistributedSystem.html#groups"> <code>groups</code></a>) on
+   *        which to execute the function. Function will be executed on all servers of each group
-   * Returns an {@link Execution} object that can be used to execute a data
-   * independent function on a server in the provided {@link Pool}. If the
-   * optional groups parameter is provided, the function is executed on one
-   * server of each group.
+   * Returns an {@link Execution} object that can be used to execute a data independent function on
+   * a server in the provided {@link Pool}. If the optional groups parameter is provided, the
+   * function is executed on one server of each group.
-   * If the server goes down while dispatching or executing the function, an
-   * Exception will be thrown.
+   * If the server goes down while dispatching or executing the function, an Exception will be
+   * thrown.
-   * @param pool
-   *          from which to chose a server for execution
-   * @param groups
-   *          optional list of GemFire configuration property "groups" (see <a
-   *          href="../../distributed/DistributedSystem.html#groups">
-   *          <code>groups</code></a>) on which to execute the function.
-   *          Function will be executed on one server of each group
+   * @param pool from which to chose a server for execution
+   * @param groups optional list of GemFire configuration property "groups" (see
+   *        <a href="../../distributed/DistributedSystem.html#groups"> <code>groups</code></a>) on
+   *        which to execute the function. Function will be executed on one server of each group

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66