GEODE-3714: Removed repetitive looping code when evaluating

-  private SelectResults singleBaseCollectionFilterEvaluate(ExecutionContext context,
+  SelectResults singleBaseCollectionFilterEvaluate(ExecutionContext context,
+
-        if (evalColln instanceof Object[]) {
-          Object[] arr = (Object[]) evalColln;
-          for (int i = 0; i < arr.length; ++i) {
-            this.queryIndex(arr[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-        } else if (evalColln instanceof long[]) {
-          long[] a = (long[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-
-        } else if (evalColln instanceof double[]) {
-          double[] a = (double[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-
-        } else if (evalColln instanceof float[]) {
-          float[] a = (float[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-
-        } else if (evalColln instanceof int[]) {
-          int[] a = (int[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-        } else if (evalColln instanceof short[]) {
-          short[] a = (short[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-
-        } else if (evalColln instanceof char[]) {
-          char[] a = (char[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-
-        } else if (evalColln instanceof byte[]) {
-          byte[] a = (byte[]) evalColln;
-          for (int i = 0; i < a.length; i++) {
-            this.queryIndex(a[i], indexInfo, results, iterOperands, indpndntItr, context,
-                projAttrib, conditioningNeeded);
-          }
-
-        } else {
-          throw new TypeMismatchException(
-              "Operand of IN cannot be interpreted as a Comparable Object. Operand is of type ="
-                  + evalColln.getClass());
+        int evalCollnLength = Array.getLength(evalColln);
+        for (int i = 0; i < evalCollnLength; ++i) {
+          this.queryIndex(Array.get(evalColln, i), indexInfo, results, iterOperands, indpndntItr,
+              context, projAttrib, conditioningNeeded);

INS60 MOV24 INS39 INS59 MOV58 MOV38 INS42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL83 DEL39 DEL42 DEL34 DEL59 DEL58 DEL40 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL43 DEL85 DEL5 DEL62 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL42 DEL40 DEL27 DEL52 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL52 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL52 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL52 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL52 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL52 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL52 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25