GEODE-1979: refactor SecurityClusterConfig to remove the flakiness.

* add more test cases to cover more scenarios

-import static org.apache.geode.internal.AvailablePortHelper.*;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase;
-  private JUnit4CacheTestCase testCase;
+  private JUnit4DistributedTestCase testCase;
-  public LocatorServerConfigurationRule(JUnit4CacheTestCase testCase) {
+  public LocatorServerConfigurationRule(JUnit4DistributedTestCase testCase) {
-
-    initLocator(locatorProperties);
+    if (!locatorProperties.containsKey(MCAST_PORT)) {
+      locatorProperties.setProperty(MCAST_PORT, "0");
+    }
+
+    locatorPort = locator.invoke(() -> {
+      InternalLocator locator = (InternalLocator) Locator.startLocatorAndDS(0, null, locatorProperties);
+      locator.resetInternalLocatorFileNamesWithCorrectPortNumber(locatorPort);
+
+      if (locator.getConfig().getEnableClusterConfiguration()) {
+        Awaitility.await().atMost(65, TimeUnit.SECONDS).until(() -> assertTrue(locator.isSharedConfigurationRunning()));
+      }
+      return locator.getPort();
+    });
+
-   * @param nodeProperties
+   * @param properties
-  public VM getNodeVM(int index, Properties nodeProperties) {
+  public VM getServerVM(int index, Properties properties) {
-    VM nodeVM = host.getVM(index);
-    initNode(nodeVM, nodeProperties);
+    VM nodeVM = getNodeVM(index);
+    nodeVM.invoke(() -> {
+      getSystem(properties);
+    });
-  private void initLocator(Properties locatorProperties) throws IOException {
-    final int[] ports = getRandomAvailableTCPPorts(1);
-    locatorPort = ports[0];
-
-    if (!locatorProperties.containsKey(MCAST_PORT)) {
-      locatorProperties.setProperty(MCAST_PORT, "0");
-    }
-
-    locatorPort = locator.invoke(() -> {
-      InternalLocator locator = (InternalLocator) Locator.startLocatorAndDS(0, null, locatorProperties);
-      locatorPort = locator.getPort();
-      locator.resetInternalLocatorFileNamesWithCorrectPortNumber(locatorPort);
-
-      if (locatorProperties.containsKey(ENABLE_CLUSTER_CONFIGURATION)) {
-        Awaitility.await().atMost(65, TimeUnit.SECONDS).until(() -> assertTrue(locator.isSharedConfigurationRunning()));
-      }
-      return locatorPort;
-    });
+  /**
+   * this will simply returns the node
+   * @param index
+   * @return
+   */
+  public VM getNodeVM(int index){
+    return host.getVM(index);
-  private void initNode(VM nodeVM, Properties props) {
-    if (!props.containsKey(MCAST_PORT)) {
-      props.setProperty(MCAST_PORT, "0");
+  public InternalDistributedSystem getSystem(Properties properties){
+    if (!properties.containsKey(MCAST_PORT)) {
+      properties.setProperty(MCAST_PORT, "0");
+    properties.setProperty(LOCATORS, getHostName() + "[" + locatorPort + "]");
+    InternalDistributedSystem ds = testCase.getSystem(properties);
+    if(testCase instanceof JUnit4CacheTestCase){
+      ((JUnit4CacheTestCase)testCase).getCache();
+    }
+    return ds;
+  }
-    props.setProperty(LOCATORS, getHostName() + "[" + locatorPort + "]");
-
-    nodeVM.invoke(() -> {
-      testCase.getSystem(props);
-      assertNotNull(testCase.getCache());
-    });
+  public int getLocatorPort(){
+    return locatorPort;

MOV26 INS26 MOV31 MOV31 INS40 UPD40 INS31 INS43 MOV29 UPD83 MOV43 UPD42 UPD42 INS29 MOV43 UPD42 UPD83 INS43 INS42 INS83 INS39 INS42 INS8 INS42 INS43 MOV21 MOV41 UPD42 INS65 INS65 INS65 INS39 INS42 INS41 UPD42 MOV42 UPD42 INS60 INS25 INS41 MOV41 INS42 UPD42 MOV43 INS66 INS42 MOV32 INS43 INS59 INS62 INS8 INS42 INS42 INS32 INS42 UPD42 INS86 UPD42 INS42 INS42 INS32 INS42 MOV43 INS21 INS42 INS42 INS8 UPD42 MOV42 MOV42 UPD42 MOV42 INS32 INS21 UPD42 INS36 MOV42 INS41 INS32 INS11 MOV32 UPD42 MOV42 UPD42 MOV42 MOV43 INS42 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 DEL39 DEL83 DEL39 DEL85 DEL5 DEL42 DEL42 DEL34 DEL32 DEL59 DEL60 DEL42 DEL42 DEL34 DEL2 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL86 DEL32 DEL21