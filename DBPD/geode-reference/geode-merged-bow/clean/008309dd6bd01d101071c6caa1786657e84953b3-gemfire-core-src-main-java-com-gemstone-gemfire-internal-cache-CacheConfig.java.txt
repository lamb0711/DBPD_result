Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import java.util.List;
+
+import com.gemstone.gemfire.internal.cache.xmlcache.CacheServerCreation;
+   * list of cache servers to create after auto-reconnect if cluster configuration is being used
+   */
+  private List<CacheServerCreation> cacheServerCreation;
+  
+  /**
-
+  
+  public List<CacheServerCreation> getCacheServerCreation() {
+    return this.cacheServerCreation;
+  }
+  
+  
+  public void setCacheServerCreation(List<CacheServerCreation> servers) {
+    this.cacheServerCreation = servers;
+  }
-      o1 = AutoSerializableManager.getInstance((ReflectionBasedAutoSerializer) s1);
-      o2 = AutoSerializableManager.getInstance((ReflectionBasedAutoSerializer) s2);
+      o1 = ((ReflectionBasedAutoSerializer) s1).getManager();
+      o2 = ((ReflectionBasedAutoSerializer) s2).getManager();

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS29 INS83 INS74 INS59 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS65 INS43 INS43 INS42 INS43 INS43 INS41 INS74 INS42 INS21 INS66 INS42 INS42 INS42 INS42 INS22 INS43 INS43 INS7 INS52 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS36 UPD42 INS36 UPD42 MOV11 MOV11 DEL42 DEL42