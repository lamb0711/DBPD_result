Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-        final String msg = "Cannot convert SortedMap with non-null comparator: "
-            + comparator;
+        final String msg = "Cannot convert SortedMap with non-null comparator: " + comparator;
-      row = new CompositeDataSupport(rowType, keyValueArray, new Object[] {
-          openKey, openValue });
+      row = new CompositeDataSupport(rowType, keyValueArray, new Object[] {openKey, openValue});
-  public final Object fromNonNullOpenValue(Object openValue)
-      throws InvalidObjectException {
+  public final Object fromNonNullOpenValue(Object openValue) throws InvalidObjectException {
-    final Collection<CompositeData> rows = (Collection<CompositeData>) table
-        .values();
-    final Map<Object, Object> valueMap = sortedMap ? OpenTypeUtil
-        .newSortedMap() : OpenTypeUtil.newMap();
+    final Collection<CompositeData> rows = (Collection<CompositeData>) table.values();
+    final Map<Object, Object> valueMap =
+        sortedMap ? OpenTypeUtil.newSortedMap() : OpenTypeUtil.newMap();

