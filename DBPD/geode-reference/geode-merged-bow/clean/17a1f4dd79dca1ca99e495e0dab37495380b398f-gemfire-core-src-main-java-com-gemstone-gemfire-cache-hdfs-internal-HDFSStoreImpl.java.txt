Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

-import com.gemstone.gemfire.cache.hdfs.HDFSEventQueueAttributes;
-    long cleanUpIntervalMillis = getHDFSCompactionConfig().getOldFilesCleanupIntervalMins() * 60 * 1000;
+    long cleanUpIntervalMillis = getPurgeInterval() * 60 * 1000;
-    newHolder.getHDFSCompactionConfig().validate();
+    newHolder.validate();
-  public int getMaxFileSize() {
-    return configHolder.getMaxFileSize();
+  public int getWriteOnlyFileRolloverSize() {
+    return configHolder.getWriteOnlyFileRolloverSize();
-  public int getFileRolloverInterval() {
-    return configHolder.getFileRolloverInterval();
+  public int getWriteOnlyFileRolloverInterval() {
+    return configHolder.getWriteOnlyFileRolloverInterval();
-  public HDFSEventQueueAttributes getHDFSEventQueueAttributes() {
-    return configHolder.getHDFSEventQueueAttributes();
+  public int getMinorCompactionThreads() {
+    return configHolder.getMinorCompactionThreads();
-  public HDFSCompactionConfig getHDFSCompactionConfig() {
-    return (HDFSCompactionConfig) configHolder.getHDFSCompactionConfig();
+  public boolean getMajorCompaction() {
+    return configHolder.getMajorCompaction();
+  public int getMajorCompactionInterval() {
+    return configHolder.getMajorCompactionInterval();
+  }
+
+  @Override
+  public int getMajorCompactionThreads() {
+    return configHolder.getMajorCompactionThreads();
+  }
+
+
+  @Override
+  public int getInputFileSizeMax() {
+    return configHolder.getInputFileSizeMax();
+  }
+
+  @Override
+  public int getInputFileCountMin() {
+    return configHolder.getInputFileCountMin();
+  }
+
+  @Override
+  public int getInputFileCountMax() {
+    return configHolder.getInputFileCountMax();
+  }
+
+  @Override
+  public int getPurgeInterval() {
+    return configHolder.getPurgeInterval();
+  }
+
+  @Override
+  public String getDiskStoreName() {
+    return configHolder.getDiskStoreName();
+  }
+
+  @Override
+  public int getMaxMemory() {
+    return configHolder.getMaxMemory();
+  }
+
+  @Override
+  public int getBatchSize() {
+    return configHolder.getBatchSize();
+  }
+
+  @Override
+  public int getBatchInterval() {
+    return configHolder.getBatchInterval();
+  }
+
+  @Override
+  public boolean getBufferPersistent() {
+    return configHolder.getBufferPersistent();
+  }
+
+  @Override
+  public boolean getSynchronousDiskWrite() {
+    return configHolder.getSynchronousDiskWrite();
+  }
+
+  @Override
+  public int getDispatcherThreads() {
+    return configHolder.getDispatcherThreads();
+  }
+  
+  @Override

INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS78 UPD42 MOV78 UPD42 MOV78 INS83 INS39 INS42 INS8 MOV78 INS83 INS39 INS42 INS8 MOV78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 UPD43 UPD42 INS78 MOV83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 MOV8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS41 INS41 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 UPD42 INS42 INS41 INS42 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 MOV42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL40 DEL26 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL32 DEL11 DEL42 DEL43 DEL42 DEL31