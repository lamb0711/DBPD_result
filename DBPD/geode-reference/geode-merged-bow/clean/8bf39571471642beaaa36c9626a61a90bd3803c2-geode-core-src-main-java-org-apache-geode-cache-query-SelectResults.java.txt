Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * <code>SELECT</code> expression within a query. A <code>SELECT</code>
- * expression results in <code>SelectResults</code> that contain instances of
- * {@link Struct} if: (a) there is more than one projection in the projection
- * attributes, or (b) if the projection is <code>*</code> and there is more than
- * one collection specified in the <code>FROM</code> clause.<p>
+ * <code>SELECT</code> expression within a query. A <code>SELECT</code> expression results in
+ * <code>SelectResults</code> that contain instances of {@link Struct} if: (a) there is more than
+ * one projection in the projection attributes, or (b) if the projection is <code>*</code> and there
+ * is more than one collection specified in the <code>FROM</code> clause.
+ * <p>
- * Otherwise, a <code>SELECT</code> expression over a collection of domain
- * objects results in <code>SelectResults</code> that contain domain objects,
- * i.e. instances of domain classes such as {@link String} or
- * <code>Address</code>.<p>
+ * Otherwise, a <code>SELECT</code> expression over a collection of domain objects results in
+ * <code>SelectResults</code> that contain domain objects, i.e. instances of domain classes such as
+ * {@link String} or <code>Address</code>.
+ * <p>
- * String select = "SELECT DISTINCT * FROM /root/employees " +
- *   "WHERE salary > 50000";
+ * String select = "SELECT DISTINCT * FROM /root/employees " + "WHERE salary > 50000";
- * for (Iterator iter = results.iterator(); iter.hasNext(); ) {
+ * for (Iterator iter = results.iterator(); iter.hasNext();) {
- * select = "SELECT DISTINCT age, address.zipCode FROM /root/employees " +
- *    "WHERE salary > 50000";
+ * select = "SELECT DISTINCT age, address.zipCode FROM /root/employees " + "WHERE salary > 50000";
- * for (Iterator iter = results.iterator(); iter.hasNext(); ) {
+ * for (Iterator iter = results.iterator(); iter.hasNext();) {
-public interface SelectResults<E> extends Collection<E> {  
-  
+public interface SelectResults<E> extends Collection<E> {
+
-   * Return whether this collection is modifiable. The result of this
-   * method has no bearing on whether the elements in the collection themselves
-   * are modifiable.
+   * Return whether this collection is modifiable. The result of this method has no bearing on
+   * whether the elements in the collection themselves are modifiable.
+   * 
-  
+
-   * Return the number of times element occurs in this collection, that is
-   * the number of duplicates <code>element</code> has in this collection as defined by
-   * the <code>equals></code> method. If <code>element</code> is not present in this
-   * collection, then 0 is returned.
+   * Return the number of times element occurs in this collection, that is the number of duplicates
+   * <code>element</code> has in this collection as defined by the <code>equals></code> method. If
+   * <code>element</code> is not present in this collection, then 0 is returned.
+   * 
-  
+
-   * Returns this <code>SelectResults</code> as a
-   * <code>java.util.Set</code>. If this collection is 
-   * distinct and unordered, then no copying is necessary. Otherwise, the
-   * contents of this collection will be copied into a new instance of
-   * java.util.HashSet.
+   * Returns this <code>SelectResults</code> as a <code>java.util.Set</code>. If this collection is
+   * distinct and unordered, then no copying is necessary. Otherwise, the contents of this
+   * collection will be copied into a new instance of java.util.HashSet.
+   * 
-  
+
-   * Returns this <code>SelectedResults</code> as a
-   * <code>java.util.List</code>. If this collection is
-   * ordered, then no copying is necessary. Otherwise, the
-   * contents of this collection will be copied into a new instance of
-   * java.util.ArrayList.
+   * Returns this <code>SelectedResults</code> as a <code>java.util.List</code>. If this collection
+   * is ordered, then no copying is necessary. Otherwise, the contents of this collection will be
+   * copied into a new instance of java.util.ArrayList.
+   * 
-  
-  /** Return the ObjectType for the type of collection this represents.
-   *  @return the CollectionType for the type of collection this represents
-   */
-  public CollectionType getCollectionType();  
-  
+
-   * Specify a new elementType, overriding any existing known elementType.
-   * This modifies the CollectionType for this object to be the same collection type
-   * but with the newly specified element type.
+   * Return the ObjectType for the type of collection this represents.
+   * 
+   * @return the CollectionType for the type of collection this represents
+   */
+  public CollectionType getCollectionType();
+
+  /**
+   * Specify a new elementType, overriding any existing known elementType. This modifies the
+   * CollectionType for this object to be the same collection type but with the newly specified
+   * element type.
+   * 
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66