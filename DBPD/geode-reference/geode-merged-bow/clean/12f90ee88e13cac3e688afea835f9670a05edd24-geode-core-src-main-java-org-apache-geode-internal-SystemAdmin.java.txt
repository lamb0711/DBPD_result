Merge branch 'develop' into feature/GEODE-3109

-import static org.apache.geode.distributed.ConfigurationProperties.*;
+import static org.apache.geode.distributed.ConfigurationProperties.LOG_LEVEL;
+import static org.apache.geode.distributed.ConfigurationProperties.START_LOCATOR;
-import org.apache.geode.*;
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.ByteArrayInputStream;
+import java.io.EOFException;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.PrintStream;
+import java.io.PrintWriter;
+import java.io.RandomAccessFile;
+import java.io.StringWriter;
+import java.net.InetAddress;
+import java.net.NetworkInterface;
+import java.net.SocketException;
+import java.net.URL;
+import java.net.URLDecoder;
+import java.net.UnknownHostException;
+import java.text.DateFormat;
+import java.text.ParseException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Date;
+import java.util.Enumeration;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.Set;
+import java.util.UUID;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+import java.util.zip.GZIPInputStream;
+
+import org.apache.geode.GemFireException;
+import org.apache.geode.GemFireIOException;
+import org.apache.geode.InternalGemFireException;
+import org.apache.geode.NoSystemException;
+import org.apache.geode.SystemFailure;
+import org.apache.geode.UncreatedSystemException;
+import org.apache.geode.UnstartedSystemException;
-import org.apache.geode.distributed.internal.*;
+import org.apache.geode.distributed.internal.DistributionConfig;
+import org.apache.geode.distributed.internal.DistributionConfigImpl;
+import org.apache.geode.distributed.internal.HighPriorityAckedMessage;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.distributed.internal.tcpserver.*;
-import org.apache.geode.internal.statistics.StatArchiveReader;
-import org.apache.geode.internal.statistics.StatArchiveReader.ResourceInst;
-import org.apache.geode.internal.statistics.StatArchiveReader.StatValue;
+import org.apache.geode.distributed.internal.tcpserver.TcpClient;
+import org.apache.geode.internal.statistics.StatArchiveReader;
+import org.apache.geode.internal.statistics.StatArchiveReader.ResourceInst;
+import org.apache.geode.internal.statistics.StatArchiveReader.StatValue;
-import org.apache.geode.internal.util.PasswordUtil;
-import java.io.*;
-import java.net.*;
-import java.text.DateFormat;
-import java.text.ParseException;
-import java.util.*;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-import java.util.zip.GZIPInputStream;
-
-import static org.apache.geode.distributed.ConfigurationProperties.START_LOCATOR;
-
-                    .toLocalizedString(new Object[] {logFile, msg}),
+                    .toLocalizedString(logFile, msg),
-            .toLocalizedString(
-                new Object[] {directory, ManagerInfo.statusToString(mi.getManagerStatus()),
-                    Integer.valueOf(mi.getManagerProcessId())});
+            .toLocalizedString(directory, ManagerInfo.statusToString(mi.getManagerStatus()),
+                Integer.valueOf(mi.getManagerProcessId()));
-            .toLocalizedString(
-                new Object[] {directory, statusString, Integer.valueOf(mi.getManagerProcessId())});
+            .toLocalizedString(directory, statusString, Integer.valueOf(mi.getManagerProcessId()));
-        outputFile = new File((String) cmdLine.get(0));
+        outputFile = new File(cmdLine.get(0));
-    String dsName = (String) args.get(0);
+    String dsName = args.get(0);
-    String dsName = (String) args.get(0);
+    String dsName = args.get(0);
-                .toLocalizedString(new Object[] {outOption, getExceptionMessage(ex)}));
+                .toLocalizedString(outOption, getExceptionMessage(ex)));
-                .toLocalizedString(new Object[] {fileName, getExceptionMessage(ex)}));
+                .toLocalizedString(fileName, getExceptionMessage(ex)));
-      pw.println((String) usageMap.get("gemfire") + " <command> ...");
+      pw.println(usageMap.get("gemfire") + " <command> ...");
-      "encrypt-password", "revoke-missing-disk-store", "list-missing-disk-stores",
-      "validate-disk-store", "upgrade-disk-store", "compact-disk-store", "compact-all-disk-stores",
-      "modify-disk-store", "show-disk-store-metadata", "export-disk-store", "shut-down-all",
-      "backup", "print-stacks", "help"};
+      "revoke-missing-disk-store", "list-missing-disk-stores", "validate-disk-store",
+      "upgrade-disk-store", "compact-disk-store", "compact-all-disk-stores", "modify-disk-store",
+      "show-disk-store-metadata", "export-disk-store", "shut-down-all", "backup", "print-stacks",
+      "help"};
-    helpMap.put("gemfire", LocalizedStrings.SystemAdmin_GEMFIRE_HELP.toLocalizedString(
-        new Object[] {join(validCommands), "-h", "-debug", "-help", "-q", "-J<vmOpt>"}));
+    helpMap.put("gemfire", LocalizedStrings.SystemAdmin_GEMFIRE_HELP
+        .toLocalizedString(join(validCommands), "-h", "-debug", "-help", "-q", "-J<vmOpt>"));
-        LocalizedStrings.SystemAdmin_STATS_HELP_PART_A.toLocalizedString(new Object[] {"+",
-            "++", ":", ".", "-details", "-nofilter", "-archive=", "-persec", "-persample",
-            "-prunezeros"}) + "\n"
-            + LocalizedStrings.SystemAdmin_STATS_HELP_PART_B.toLocalizedString(new Object[] {
-                "-starttime", "-archive=", DateFormatter.FORMAT_STRING, "-endtime",}));
-    helpMap.put("encrypt-password",
-        LocalizedStrings.SystemAdmin_ENCRYPTS_A_PASSWORD_FOR_USE_IN_CACHE_XML_DATA_SOURCE_CONFIGURATION
-            .toLocalizedString());
+        LocalizedStrings.SystemAdmin_STATS_HELP_PART_A.toLocalizedString("+", "++", ":", ".",
+            "-details", "-nofilter", "-archive=", "-persec", "-persample", "-prunezeros") + "\n"
+            + LocalizedStrings.SystemAdmin_STATS_HELP_PART_B.toLocalizedString("-starttime",
+                "-archive=", DateFormatter.FORMAT_STRING, "-endtime"));
-        LocalizedStrings.SystemAdmin_START_LOCATOR_HELP.toLocalizedString(new Object[] {"-port=",
+        LocalizedStrings.SystemAdmin_START_LOCATOR_HELP.toLocalizedString("-port=",
-            "-properties=", "-peer=", "-server=", "-hostname-for-clients=", "-D", "-X"}));
-    helpMap.put("stop-locator",
-        LocalizedStrings.SystemAdmin_STOP_LOCATOR_HELP.toLocalizedString(new Object[] {"-port=",
-            Integer.valueOf(DistributionLocator.DEFAULT_LOCATOR_PORT), "-address=", "-dir="}));
+            "-properties=", "-peer=", "-server=", "-hostname-for-clients=", "-D", "-X"));
+    helpMap.put("stop-locator", LocalizedStrings.SystemAdmin_STOP_LOCATOR_HELP.toLocalizedString(
+        "-port=", Integer.valueOf(DistributionLocator.DEFAULT_LOCATOR_PORT), "-address=", "-dir="));
-        .toLocalizedString(new Object[] {join(ManagerInfo.statusNames), "-dir="}));
+        .toLocalizedString(join(ManagerInfo.statusNames), "-dir="));
-            .toLocalizedString(new Object[] {"stats", DateFormatter.FORMAT_STRING}));
+            .toLocalizedString("stats", DateFormatter.FORMAT_STRING));
-            .toLocalizedString(new Object[] {"stats", DateFormatter.FORMAT_STRING}));
+            .toLocalizedString("stats", DateFormatter.FORMAT_STRING));
-        LocalizedStrings.SystemAdmin_DIR_ARGUMENT_HELP
-            .toLocalizedString(new Object[] {DistributionConfig.GEMFIRE_PREFIX + "properties",
-                DistributionConfig.GEMFIRE_PREFIX + "systemDirectory", "GEMFIRE", "defaultSystem",
-                "version"}));
+        LocalizedStrings.SystemAdmin_DIR_ARGUMENT_HELP.toLocalizedString(
+            DistributionConfig.GEMFIRE_PREFIX + "properties",
+            DistributionConfig.GEMFIRE_PREFIX + "systemDirectory", "GEMFIRE", "defaultSystem",
+            "version"));
-    usageMap.put("encrypt-password", "encrypt-password <passwordString>");
-    cmdOptionsMap.put("encrypt-password", new String[] {});
-    if (cmd.equalsIgnoreCase("stats")) {
-      return false;
-    }
-    if (cmd.equalsIgnoreCase("merge-logs")) {
-      return false;
-    }
-    if (cmd.equalsIgnoreCase("version")) {
-      return false;
-    }
-    if (cmd.equalsIgnoreCase("help")) {
-      return false;
-    }
-    return true;
+    return !(cmd.equalsIgnoreCase("stats") || cmd.equalsIgnoreCase("merge-logs")
+        || cmd.equalsIgnoreCase("version") || cmd.equalsIgnoreCase("help"));
-      } else if (cmd.equalsIgnoreCase("encrypt-password")) {
-        if (cmdLine.size() != 1) {
-          usage(cmd);
-        }
-        PasswordUtil.encrypt((String) cmdLine.get(0));

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 UPD40 INS40 INS40 INS40 INS40 UPD40 UPD40 UPD40 UPD40 UPD40 INS60 MOV60 MOV41 MOV43 INS59 MOV43 INS38 INS42 MOV32 MOV32 INS36 MOV25 MOV32 INS45 INS45 INS45 INS45 INS45 INS45 MOV32 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 MOV32 INS45 INS45 MOV32 INS45 INS45 INS40 INS45 INS40 MOV27 MOV27 INS45 INS45 INS45 INS27 MOV32 MOV8 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS40 INS45 MOV32 MOV32 MOV32 MOV32 MOV32 MOV8 MOV32 MOV8 INS42 MOV32 MOV32 INS42 INS42 MOV32 MOV32 MOV8 MOV32 MOV32 MOV32 MOV8 INS42 MOV32 INS42 MOV32 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS42 INS42 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL11 DEL45 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL40 DEL45 DEL4 DEL3 DEL42 DEL42 DEL45 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL40 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL40 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL4 DEL3 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL43 DEL85 DEL5 DEL4 DEL3 DEL32 DEL21 DEL9 DEL8 DEL25 DEL9 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL25 DEL9 DEL41 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL34 DEL32 DEL11 DEL32 DEL21 DEL8 DEL25