GEODE-420: ssl-default-alias property addition and validation rules

- *
+ * <p>
- *
+ * <p>
- *   public logStuff() {
- *     getLogger().info(SomeClass_SOME_STRINGID);
- *  }
+ * public logStuff() {
+ * getLogger().info(SomeClass_SOME_STRINGID);
+ * }
- *
- *
-  /** reserved space for commonly used strings, messageId 0-1024 **/
+
+  /**
+   * reserved space for commonly used strings, messageId 0-1024
+   **/
-  /**Gemfire strings, messageId 1025-15000 **/
+  /**
+   * Gemfire strings, messageId 1025-15000
+   **/
-  public static final StringId SerialGatewaySenderImpl_0__STARTING_AS_SECONDARY_BECAUSE_PRIMARY_GATEWAY_SENDER_IS_AVAIALABLE_ON_MEMBER_2  = new StringId(1588, "{0} starting as secondary because primary gateway sender is available on member :{1}");
+  public static final StringId SerialGatewaySenderImpl_0__STARTING_AS_SECONDARY_BECAUSE_PRIMARY_GATEWAY_SENDER_IS_AVAIALABLE_ON_MEMBER_2 = new StringId(1588, "{0} starting as secondary because primary gateway sender is available on member :{1}");
-  public static final StringId CqQueryImpl_FAILED_TO_REMOVE_CONTINUOUS_QUERY_FROM_THE_REPOSITORY_CQNAME_0_ERROR_1 = new StringId( 1621, "Failed to remove Continuous Query From the repository. CqName: {0} Error : {1}");
+  public static final StringId CqQueryImpl_FAILED_TO_REMOVE_CONTINUOUS_QUERY_FROM_THE_REPOSITORY_CQNAME_0_ERROR_1 = new StringId(1621, "Failed to remove Continuous Query From the repository. CqName: {0} Error : {1}");
-  public static final StringId ReplyProcessor21_UNKNOWN_DSFID_ERROR = new StringId(1705,
-                                                                                          "Exception received due to missing DSFID {0} on remote node \"{1}\" "
-                                                                                                  + "running version \"{2}\".");
+  public static final StringId ReplyProcessor21_UNKNOWN_DSFID_ERROR = new StringId(1705, "Exception received due to missing DSFID {0} on remote node \"{1}\" " + "running version \"{2}\".");
-  public static final StringId JCAConnectionManagerImpl_EXCEPTION_CAUGHT_WHILE_INITIALIZING = new StringId(1713, "JCAConnectionManagerImpl::Constructor: An exception was caught while initialising due to {0}" );
+  public static final StringId JCAConnectionManagerImpl_EXCEPTION_CAUGHT_WHILE_INITIALIZING = new StringId(1713, "JCAConnectionManagerImpl::Constructor: An exception was caught while initialising due to {0}");
-  public static final StringId CacheFactory_0_EXISTING_CACHE_WITH_DIFFERENT_CACHE_CONFIG =  new StringId(2006, "Existing cache has different cache configuration, it has:\n{0}");
+  public static final StringId CacheFactory_0_EXISTING_CACHE_WITH_DIFFERENT_CACHE_CONFIG = new StringId(2006, "Existing cache has different cache configuration, it has:\n{0}");
-  public static final StringId CreateRegionProcessor_CANNOT_CREATE_REGION_0_WITH_PERSISTANCE_TRUE_PERSISTENT_MEMBERS_B4_NON_PERSISTENT = new StringId(2017, "Cannot create region {0} DataPolicy withPersistence=true because another cache ({1}) has the same region DataPolicy withPersistence=false." +
-                                                                                                                                                                    " Persistent members must be started before non-persistent members");
+  public static final StringId CreateRegionProcessor_CANNOT_CREATE_REGION_0_WITH_PERSISTANCE_TRUE_PERSISTENT_MEMBERS_B4_NON_PERSISTENT = new StringId(2017, "Cannot create region {0} DataPolicy withPersistence=true because another cache ({1}) has the same region DataPolicy withPersistence=false." + " Persistent members must be started before non-persistent members");
-  public static final StringId  DirectChannel_DIRECT_CHANNEL_HAS_BEEN_STOPPED = new StringId(2575, "Direct channel has been stopped");
+  public static final StringId DirectChannel_DIRECT_CHANNEL_HAS_BEEN_STOPPED = new StringId(2575, "Direct channel has been stopped");
-  public static final StringId Oplog_UNEXPECTED_PRODUCT_VERSION_0 = new StringId(
-                                                                                        3057, "Unknown version ordinal {0} found when recovering Oplogs");
+  public static final StringId Oplog_UNEXPECTED_PRODUCT_VERSION_0 = new StringId(3057, "Unknown version ordinal {0} found when recovering Oplogs");
-  public static final StringId SizeMessage_0_COULD_NOT_FIND_PARTITIONED_REGION_WITH_ID_1 =  new StringId(3257, "{0} : could not find partitioned region with Id  {1}");
+  public static final StringId SizeMessage_0_COULD_NOT_FIND_PARTITIONED_REGION_WITH_ID_1 = new StringId(3257, "{0} : could not find partitioned region with Id  {1}");
-  public static final StringId InternalDistributedSystem_A_CONNECTION_TO_A_DISTRIBUTED_SYSTEM_ALREADY_EXISTS_IN_THIS_VM_IT_HAS_THE_FOLLOWING_CONFIGURATION_0 = new StringId( 3390, "A connection to a distributed system already exists in this VM.  It has the following configuration:\n{0}");
-  public static final StringId AbstractConfig_THE_0_CONFIGURATION_ATTRIBUTE_CAN_NOT_BE_MODIFIED = new StringId( 3391, "The \"{0}\" configuration attribute can not be modified.");
+  public static final StringId InternalDistributedSystem_A_CONNECTION_TO_A_DISTRIBUTED_SYSTEM_ALREADY_EXISTS_IN_THIS_VM_IT_HAS_THE_FOLLOWING_CONFIGURATION_0 = new StringId(3390, "A connection to a distributed system already exists in this VM.  It has the following configuration:\n{0}");
+  public static final StringId AbstractConfig_THE_0_CONFIGURATION_ATTRIBUTE_CAN_NOT_BE_MODIFIED = new StringId(3391, "The \"{0}\" configuration attribute can not be modified.");
-  public static final StringId LoaderHelperImpl_CANNOT_NETSEARCH_FOR_A_SCOPELOCAL_OBJECT = new StringId( 3394, "Cannot netSearch for a Scope.LOCAL object");
-  public static final StringId DistributedRegion_OPERATION_IS_DISALLOWED_BY_LOSSACTION_0_BECAUSE_THESE_REQUIRED_ROLES_ARE_MISSING_1 = new StringId( 3395, "Operation is disallowed by LossAction {0} because these required roles are missing: {1}.");
-  public static final StringId DistributedRegion_OPERATION_DISTRIBUTION_MAY_HAVE_FAILED_TO_NOTIFY_THESE_REQUIRED_ROLES_0 = new StringId( 3396, "Operation distribution may have failed to notify these required roles: {0}");
-  public static final StringId DistributedRegion_OPERATION_DISTRIBUTION_WAS_NOT_DONE_TO_THESE_REQUIRED_ROLES_0 = new StringId( 3397, "Operation distribution was not done to these required roles: {0}");
+  public static final StringId LoaderHelperImpl_CANNOT_NETSEARCH_FOR_A_SCOPELOCAL_OBJECT = new StringId(3394, "Cannot netSearch for a Scope.LOCAL object");
+  public static final StringId DistributedRegion_OPERATION_IS_DISALLOWED_BY_LOSSACTION_0_BECAUSE_THESE_REQUIRED_ROLES_ARE_MISSING_1 = new StringId(3395, "Operation is disallowed by LossAction {0} because these required roles are missing: {1}.");
+  public static final StringId DistributedRegion_OPERATION_DISTRIBUTION_MAY_HAVE_FAILED_TO_NOTIFY_THESE_REQUIRED_ROLES_0 = new StringId(3396, "Operation distribution may have failed to notify these required roles: {0}");
+  public static final StringId DistributedRegion_OPERATION_DISTRIBUTION_WAS_NOT_DONE_TO_THESE_REQUIRED_ROLES_0 = new StringId(3397, "Operation distribution was not done to these required roles: {0}");
-   public static final StringId SystemAdmin_STOP_LOCATOR_HELP = new StringId(3754, "Stops a locator.\nThe \"{0}\" option specifies the port the locator is listening on. It defaults to \"{1}\"\nThe \"{2}\" option specifies the address the locator is listening on. It defaults to the local host''s address.\nThe \"{3}\" option can be used to specify the directory the locator is running in.");
+  public static final StringId SystemAdmin_STOP_LOCATOR_HELP = new StringId(3754, "Stops a locator.\nThe \"{0}\" option specifies the port the locator is listening on. It defaults to \"{1}\"\nThe \"{2}\" option specifies the address the locator is listening on. It defaults to the local host''s address.\nThe \"{3}\" option can be used to specify the directory the locator is running in.");
-  public static final StringId AuthorizeRequestPP_0_NOT_AUTHORIZED_TO_PERFORM_EXECUTE_REGION_FUNCTION_1= new StringId(4664, "{0}: In post-process: Not authorized to perform EXECUTE_REGION_FUNCTION operation on region [{1}]");
-  public static final StringId PartitionedRegionLoadModel_INCOMPLETE_COLOCATION= new StringId(4665, "PartitionedRegionLoadModel - member {0} has incomplete colocation, but it has buckets for some regions. Should have colocated regions {1}  but had {2}  and contains buckets {3}");
+  public static final StringId AuthorizeRequestPP_0_NOT_AUTHORIZED_TO_PERFORM_EXECUTE_REGION_FUNCTION_1 = new StringId(4664, "{0}: In post-process: Not authorized to perform EXECUTE_REGION_FUNCTION operation on region [{1}]");
+  public static final StringId PartitionedRegionLoadModel_INCOMPLETE_COLOCATION = new StringId(4665, "PartitionedRegionLoadModel - member {0} has incomplete colocation, but it has buckets for some regions. Should have colocated regions {1}  but had {2}  and contains buckets {3}");
-  public static final StringId MemoryMonitor_EVICTION_PERCENTAGE_LTE_CRITICAL_PERCENTAGE = new StringId(4694,"Eviction percentage must be less than the critical percentage.");
+  public static final StringId MemoryMonitor_EVICTION_PERCENTAGE_LTE_CRITICAL_PERCENTAGE = new StringId(4694, "Eviction percentage must be less than the critical percentage.");
-  public static final StringId AbstractDistributionConfig_REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME_0 = new StringId(4775,"Whether to remove unresponsive client or not. Defaults to {0}.");
-  public static final StringId CacheClientNotifier_CLIENT_0_IS_A_SLOW_RECEIVER = new StringId(4776,"Client {0} is a slow receiver.");
-  public static final StringId HARegionQueue_CLIENT_QUEUE_FOR_0_IS_FULL = new StringId(4777,"Client queue for {0} client is full.");
+  public static final StringId AbstractDistributionConfig_REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME_0 = new StringId(4775, "Whether to remove unresponsive client or not. Defaults to {0}.");
+  public static final StringId CacheClientNotifier_CLIENT_0_IS_A_SLOW_RECEIVER = new StringId(4776, "Client {0} is a slow receiver.");
+  public static final StringId HARegionQueue_CLIENT_QUEUE_FOR_0_IS_FULL = new StringId(4777, "Client queue for {0} client is full.");
-  public static final StringId Oplog_DELETE_0_1_2 = new StringId(4778,"Deleted {0} {1} for disk store {2}.");
-  public static final StringId Oplog_CREATE_0_1_2 = new StringId(4779,"Created {0} {1} for disk store {2}.");
-  public static final StringId DiskRegion_RECOVERING_OPLOG_0_1_2 = new StringId(4780,"Recovering {0} {1} for disk store {2}.");
+  public static final StringId Oplog_DELETE_0_1_2 = new StringId(4778, "Deleted {0} {1} for disk store {2}.");
+  public static final StringId Oplog_CREATE_0_1_2 = new StringId(4779, "Created {0} {1} for disk store {2}.");
+  public static final StringId DiskRegion_RECOVERING_OPLOG_0_1_2 = new StringId(4780, "Recovering {0} {1} for disk store {2}.");
-  public static final StringId MemoryMonitor_MEMBER_BELOW_CRITICAL_THRESHOLD = new StringId(4782,"Member: {0} below {1} critical threshold");
-  public static final StringId MemoryMonitor_MEMBER_BELOW_HIGH_THRESHOLD = new StringId(4783,"Member: {0} below {1} eviction threshold");
-  public static final StringId AttributesFactory_INVALIDATE_REGION_NOT_SUPPORTED_FOR_PR = new StringId(4784,"ExpirationAction INVALIDATE or LOCAL_INVALIDATE for region is not supported for Partitioned Region.");
-  public static final StringId AttributesFactory_LOCAL_DESTROY_IS_NOT_SUPPORTED_FOR_PR = new StringId(4785,"ExpirationAction LOCAL_DESTROY is not supported for Partitioned Region.");
-  public static final StringId AttributesFactory_LOCAL_INVALIDATE_IS_NOT_SUPPORTED_FOR_PR = new StringId(4786,"ExpirationAction LOCAL_INVALIDATE is not supported for Partitioned Region.");
-  public static final StringId AttributesFactory_DESTROY_REGION_NOT_SUPPORTED_FOR_PR = new StringId(4794,"ExpirationAction DESTROY or LOCAL_DESTROY for region is not supported for Partitioned Region.");
+  public static final StringId MemoryMonitor_MEMBER_BELOW_CRITICAL_THRESHOLD = new StringId(4782, "Member: {0} below {1} critical threshold");
+  public static final StringId MemoryMonitor_MEMBER_BELOW_HIGH_THRESHOLD = new StringId(4783, "Member: {0} below {1} eviction threshold");
+  public static final StringId AttributesFactory_INVALIDATE_REGION_NOT_SUPPORTED_FOR_PR = new StringId(4784, "ExpirationAction INVALIDATE or LOCAL_INVALIDATE for region is not supported for Partitioned Region.");
+  public static final StringId AttributesFactory_LOCAL_DESTROY_IS_NOT_SUPPORTED_FOR_PR = new StringId(4785, "ExpirationAction LOCAL_DESTROY is not supported for Partitioned Region.");
+  public static final StringId AttributesFactory_LOCAL_INVALIDATE_IS_NOT_SUPPORTED_FOR_PR = new StringId(4786, "ExpirationAction LOCAL_INVALIDATE is not supported for Partitioned Region.");
+  public static final StringId AttributesFactory_DESTROY_REGION_NOT_SUPPORTED_FOR_PR = new StringId(4794, "ExpirationAction DESTROY or LOCAL_DESTROY for region is not supported for Partitioned Region.");
-  public static final StringId CacheClientUpdater_CLASS_NOT_FOUND=new StringId(4796, "Unable to load the class: {0}");
+  public static final StringId CacheClientUpdater_CLASS_NOT_FOUND = new StringId(4796, "Unable to load the class: {0}");
-  public static final StringId GetClientPartitionAttributes_REGION_NOT_FOUND= new StringId(4804, "Region was not found during GetClientPartitionAttributes request for region path : ");
+  public static final StringId GetClientPartitionAttributes_REGION_NOT_FOUND = new StringId(4804, "Region was not found during GetClientPartitionAttributes request for region path : ");
-  public static final StringId FunctionService_FUNCTION_GET_ID_RETURNED_NULL  = new StringId(4807, "function.getId() returned null, implement the Function.getId() method properly");
+  public static final StringId FunctionService_FUNCTION_GET_ID_RETURNED_NULL = new StringId(4807, "function.getId() returned null, implement the Function.getId() method properly");
-  public static final StringId GatewayImpl_EVENT_QUEUE_DISPATCH_FAILED = new StringId(4811,"During normal processing, unsuccessfully dispatched {0} events (batch #{1})");
+  public static final StringId GatewayImpl_EVENT_QUEUE_DISPATCH_FAILED = new StringId(4811, "During normal processing, unsuccessfully dispatched {0} events (batch #{1})");
-  public static final StringId TXState_REGION_DESTROY_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4825,"destroyRegion() is not supported while in a transaction");
-  public static final StringId TXState_REGION_INVALIDATE_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4826,"invalidateRegion() is not supported while in a transaction");
+  public static final StringId TXState_REGION_DESTROY_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4825, "destroyRegion() is not supported while in a transaction");
+  public static final StringId TXState_REGION_INVALIDATE_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4826, "invalidateRegion() is not supported while in a transaction");
-  public static final StringId TXState_REGION_CLEAR_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4839,"clear() is not supported while in a transaction");
+  public static final StringId TXState_REGION_CLEAR_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4839, "clear() is not supported while in a transaction");
-  public static final StringId Dist_TX_PRECOMMIT_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4845,"precommit() operation {0} meant for Dist Tx is not supported");
-  public static final StringId Dist_TX_ROLLBACK_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4846,"rollback() operation {0} meant for Dist Tx is not supported");
+  public static final StringId Dist_TX_PRECOMMIT_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4845, "precommit() operation {0} meant for Dist Tx is not supported");
+  public static final StringId Dist_TX_ROLLBACK_NOT_SUPPORTED_IN_A_TRANSACTION = new StringId(4846, "rollback() operation {0} meant for Dist Tx is not supported");
-  public static final StringId DISTTX_TX_EXPECTED = new StringId(4852,"Expected {0} during a distributed transaction but got {1}");
+  public static final StringId DISTTX_TX_EXPECTED = new StringId(4852, "Expected {0} during a distributed transaction but got {1}");
-  public static final StringId ServerConnection_SERVER_FAILED_TO_ENCRYPT_DATA_0 = new StringId(4869, "Server failed to encrpt data {0}" );
+  public static final StringId ServerConnection_SERVER_FAILED_TO_ENCRYPT_DATA_0 = new StringId(4869, "Server failed to encrpt data {0}");
-  public static final StringId AbstractDistributionConfig_LOAD_SHARED_CONFIGURATION_FROM_DIR = new StringId(4899,  "Loads cluster configuration from the \"{0}\" directory of a locator. This is property is only applicable to the locator(s)");
+  public static final StringId AbstractDistributionConfig_LOAD_SHARED_CONFIGURATION_FROM_DIR = new StringId(4899, "Loads cluster configuration from the \"{0}\" directory of a locator. This is property is only applicable to the locator(s)");
-  public static final StringId AbstractDistributionConfig_CLUSTER_CONFIGURATION_DIR = new StringId(4908,  "The directory to store the cluster configuration artifacts and disk-store. This property is only applicable to the locator(s)");
+  public static final StringId AbstractDistributionConfig_CLUSTER_CONFIGURATION_DIR = new StringId(4908, "The directory to store the cluster configuration artifacts and disk-store. This property is only applicable to the locator(s)");
-  public static final StringId CacheServerLauncher_CRITICAL_OFF_HEAP_PERCENTAGE =
-      new StringId(4916, "<critical-Off-heap-percentage>  Sets the critical off-heap "
-          + "threshold limit of the Resource Manager. This overrides the "
-          + "critical-off-heap-percentage set in the <resource-manager> element "
-          + "of the \"cache-xml-file\"");
-  public static final StringId CacheServerLauncher_EVICTION_OFF_HEAP_PERCENTAGE =
-      new StringId(4917, "<eviction-off-heap-percentage>  Sets the eviction heap "
-          + "threshold limit of the Resource Manager above which the eviction "
-          + "should begin on Regions configured for eviction by off-heap LRU. "
-          + "This overrides the eviction-off-heap-percentage set in the "
-          + "<resource-manager> element of the \"cache-xml-file\"");
-  public static final StringId CacheServerLauncher_CRITICAL_HEAP_PERCENTAGE =
-      new StringId(4918, "<critical-heap-percentage>  Sets the critical heap "
-          + "threshold limit of the Resource Manager. This best works with "
-          + "parallel young generation collector (UseParNewGC) and concurrent "
-          + "low pause collector (UseConcMarkSweepGC) with appropriate "
-          + "CMSInitiatingOccupancyFraction like 50%. This overrides the "
-          + "critical-heap-percentage set in the <resource-manager> element "
-          + "of the \"cache-xml-file\"");
-  public static final StringId CacheServerLauncher_EVICTION_HEAP_PERCENTAGE =
-      new StringId(4919, "<eviction-heap-percentage>  Sets the eviction heap "
-          + "threshold limit of the Resource Manager above which the eviction "
-          + "should begin on Regions configured for eviction by heap LRU. "
-          + "This overrides the eviction-heap-percentage set in the "
-          + "<resource-manager> element of the \"cache-xml-file\"");
+  public static final StringId CacheServerLauncher_CRITICAL_OFF_HEAP_PERCENTAGE = new StringId(4916, "<critical-Off-heap-percentage>  Sets the critical off-heap " + "threshold limit of the Resource Manager. This overrides the " + "critical-off-heap-percentage set in the <resource-manager> element " + "of the \"cache-xml-file\"");
+  public static final StringId CacheServerLauncher_EVICTION_OFF_HEAP_PERCENTAGE = new StringId(4917, "<eviction-off-heap-percentage>  Sets the eviction heap " + "threshold limit of the Resource Manager above which the eviction " + "should begin on Regions configured for eviction by off-heap LRU. " + "This overrides the eviction-off-heap-percentage set in the " + "<resource-manager> element of the \"cache-xml-file\"");
+  public static final StringId CacheServerLauncher_CRITICAL_HEAP_PERCENTAGE = new StringId(4918, "<critical-heap-percentage>  Sets the critical heap " + "threshold limit of the Resource Manager. This best works with " + "parallel young generation collector (UseParNewGC) and concurrent " + "low pause collector (UseConcMarkSweepGC) with appropriate " + "CMSInitiatingOccupancyFraction like 50%. This overrides the " + "critical-heap-percentage set in the <resource-manager> element " + "of the \"cache-xml-file\"");
+  public static final StringId CacheServerLauncher_EVICTION_HEAP_PERCENTAGE = new StringId(4919, "<eviction-heap-percentage>  Sets the eviction heap " + "threshold limit of the Resource Manager above which the eviction " + "should begin on Regions configured for eviction by heap LRU. " + "This overrides the eviction-heap-percentage set in the " + "<resource-manager> element of the \"cache-xml-file\"");
-  public static final StringId FunctionService_FUNCTION_ATTRIBUTE_MISMATCH  = new StringId(5036, "For Functions with isHA true, hasResult must also be true.");
-  public static final StringId FunctionService_FUNCTION_ATTRIBUTE_MISMATCH_CLIENT_SERVER  = new StringId(5037, "Function attributes at client and server don''t match");
+  public static final StringId FunctionService_FUNCTION_ATTRIBUTE_MISMATCH = new StringId(5036, "For Functions with isHA true, hasResult must also be true.");
+  public static final StringId FunctionService_FUNCTION_ATTRIBUTE_MISMATCH_CLIENT_SERVER = new StringId(5037, "Function attributes at client and server don''t match");
-  public static final StringId CacheServerLauncher_SERVER_PORT_MORE_THAN_ONE_CACHE_SERVER = new StringId(5052,"When using \"-server-port\" or \"-server-bind-address\" arguments, the \"cache-xml-file\" can not have more than one cache-server defined.");
+  public static final StringId CacheServerLauncher_SERVER_PORT_MORE_THAN_ONE_CACHE_SERVER = new StringId(5052, "When using \"-server-port\" or \"-server-bind-address\" arguments, the \"cache-xml-file\" can not have more than one cache-server defined.");
-  public static final StringId PartitionRegionHelper_ARGUMENT_REGION_IS_NULL= new StringId(5088, "Argument ''Region'' is null");
+  public static final StringId PartitionRegionHelper_ARGUMENT_REGION_IS_NULL = new StringId(5088, "Argument ''Region'' is null");
-  public static final StringId MultiUserSecurityEnabled_USE_POOL_API = new StringId(5096,"Use Pool APIs for doing operations when multiuser-secure-mode-enabled is set to true.");
+  public static final StringId MultiUserSecurityEnabled_USE_POOL_API = new StringId(5096, "Use Pool APIs for doing operations when multiuser-secure-mode-enabled is set to true.");
-  public static final StringId AgentLauncher_UNABLE_TO_DELETE_FILE_0 = new StringId(5103,"Unable to delete file {0}.");
-  public static final StringId AgentLauncher_0_IS_NOT_RUNNING_IN_SPECIFIED_WORKING_DIRECTORY_1 = new StringId(5104,"{0} is not running in the specified working directory: ({1}).");
+  public static final StringId AgentLauncher_UNABLE_TO_DELETE_FILE_0 = new StringId(5103, "Unable to delete file {0}.");
+  public static final StringId AgentLauncher_0_IS_NOT_RUNNING_IN_SPECIFIED_WORKING_DIRECTORY_1 = new StringId(5104, "{0} is not running in the specified working directory: ({1}).");
-  public static final StringId PartitionRegion_NON_COLOCATED_REGIONS_1_2_CANNOT_HAVE_SAME_PARALLEL_GATEWAY_SENDER_ID_2 = new StringId(5178, "Non colocated regions \"{0}\", \"{1}\" cannot have the same parallel {2} id \"{3}\" configured." );
+  public static final StringId PartitionRegion_NON_COLOCATED_REGIONS_1_2_CANNOT_HAVE_SAME_PARALLEL_GATEWAY_SENDER_ID_2 = new StringId(5178, "Non colocated regions \"{0}\", \"{1}\" cannot have the same parallel {2} id \"{3}\" configured.");
-  public static final StringId GatewayReceiver_STARTED_ON_PORT = new StringId(5182, "The GatewayReceiver started on port : {0}" );
-  public static final StringId GatewayReceiver_Address_Already_In_Use = new StringId(5183, "The GatewayReceiver port \"{0}\" is already in use" );
+  public static final StringId GatewayReceiver_STARTED_ON_PORT = new StringId(5182, "The GatewayReceiver started on port : {0}");
+  public static final StringId GatewayReceiver_Address_Already_In_Use = new StringId(5183, "The GatewayReceiver port \"{0}\" is already in use");
-  public static final StringId Region_REGION_0_HAS_1_GATEWAY_SENDER_IDS_ANOTHER_CACHE_HAS_THE_SAME_REGION_WITH_2_GATEWAY_SENDER_IDS_FOR_REGION_ACROSS_ALL_MEMBERS_IN_DS_GATEWAY_SENDER_IDS_SHOULD_BE_SAME = new StringId(
-      5303,
-      "Region {0} has {1} gateway sender IDs. Another cache has same region with {2} gateway sender IDs. For region across all members, gateway sender ids should be same.");
+  public static final StringId Region_REGION_0_HAS_1_GATEWAY_SENDER_IDS_ANOTHER_CACHE_HAS_THE_SAME_REGION_WITH_2_GATEWAY_SENDER_IDS_FOR_REGION_ACROSS_ALL_MEMBERS_IN_DS_GATEWAY_SENDER_IDS_SHOULD_BE_SAME = new StringId(5303, "Region {0} has {1} gateway sender IDs. Another cache has same region with {2} gateway sender IDs. For region across all members, gateway sender ids should be same.");
-  public static final StringId Region_REGION_0_HAS_1_ASYNC_EVENT_QUEUE_IDS_ANOTHER_CACHE_HAS_THE_SAME_REGION_WITH_2_ASYNC_EVENT_QUEUE_IDS_FOR_REGION_ACROSS_ALL_MEMBERS_IN_DS_ASYNC_EVENT_QUEUE_IDS_SHOULD_BE_SAME = new StringId(
-      5304,
-      "Region {0} has {1} AsyncEvent queue IDs. Another cache has same region with {2} AsyncEvent queue IDs. For region across all members, AsyncEvent queue IDs should be same.");
+  public static final StringId Region_REGION_0_HAS_1_ASYNC_EVENT_QUEUE_IDS_ANOTHER_CACHE_HAS_THE_SAME_REGION_WITH_2_ASYNC_EVENT_QUEUE_IDS_FOR_REGION_ACROSS_ALL_MEMBERS_IN_DS_ASYNC_EVENT_QUEUE_IDS_SHOULD_BE_SAME = new StringId(5304, "Region {0} has {1} AsyncEvent queue IDs. Another cache has same region with {2} AsyncEvent queue IDs. For region across all members, AsyncEvent queue IDs should be same.");
-  public static final StringId AbstractGatewaySender_SENDER_0_GOT_REMOTE_LOCATOR_INFORMATION_FOR_SITE_1 = new StringId(
-      5402,
-      "GatewaySender \"{0}\" got remote locator information for remote site \"{1}\" after {2} failures in connecting to remote site.");
+  public static final StringId AbstractGatewaySender_SENDER_0_GOT_REMOTE_LOCATOR_INFORMATION_FOR_SITE_1 = new StringId(5402, "GatewaySender \"{0}\" got remote locator information for remote site \"{1}\" after {2} failures in connecting to remote site.");
-  public static final StringId Oplog_DELETE_FAIL_0_1_2 = new StringId(5449,"Could not delete the file {0} {1} for disk store {2}.");
+  public static final StringId Oplog_DELETE_FAIL_0_1_2 = new StringId(5449, "Could not delete the file {0} {1} for disk store {2}.");
-  public static final StringId BucketAdvisor_WAITING_FOR_PRIMARY = new StringId(5457,"{0} secs have elapsed waiting for a primary for bucket {1}. Current bucket owners {2}");
-  public static final StringId BucketAdvisor_WAITING_FOR_PRIMARY_DONE = new StringId(5458,"Wait for primary completed");
+  public static final StringId BucketAdvisor_WAITING_FOR_PRIMARY = new StringId(5457, "{0} secs have elapsed waiting for a primary for bucket {1}. Current bucket owners {2}");
+  public static final StringId BucketAdvisor_WAITING_FOR_PRIMARY_DONE = new StringId(5458, "Wait for primary completed");
-  public static final StringId DistributedPutAllOperation_MISSING_VERSION = new StringId(5459,"memberID cannot be null for persistent regions: {0}");
+  public static final StringId DistributedPutAllOperation_MISSING_VERSION = new StringId(5459, "memberID cannot be null for persistent regions: {0}");
-  public static final StringId DistributionManager_DISTRIBUTIONMANAGER_MEMBER_0_IS_1_EQUIVALENT = new StringId(5604,"Member {0} is {1}equivalent or in the same redundancy zone.");
+  public static final StringId DistributionManager_DISTRIBUTIONMANAGER_MEMBER_0_IS_1_EQUIVALENT = new StringId(5604, "Member {0} is {1}equivalent or in the same redundancy zone.");
-  public static final StringId MEMSCALE_JVM_INCOMPATIBLE_WITH_OFF_HEAP = new StringId(5662,"Your Java virtual machine is incompatible with off-heap memory.  Please refer to {0} documentation for suggested JVMs.");
-  public static final StringId MEMSCALE_EVICTION_INIT_FAIL = new StringId(5663,"Cannot initialize the off-heap evictor.  There is no off-heap memory available for eviction.");
+  public static final StringId MEMSCALE_JVM_INCOMPATIBLE_WITH_OFF_HEAP = new StringId(5662, "Your Java virtual machine is incompatible with off-heap memory.  Please refer to {0} documentation for suggested JVMs.");
+  public static final StringId MEMSCALE_EVICTION_INIT_FAIL = new StringId(5663, "Cannot initialize the off-heap evictor.  There is no off-heap memory available for eviction.");
-  public static final StringId DiskStoreImpl_FATAL_ERROR_ON_FLUSH = new StringId(5706,"Fatal error from asynchronous flusher thread");
+  public static final StringId DiskStoreImpl_FATAL_ERROR_ON_FLUSH = new StringId(5706, "Fatal error from asynchronous flusher thread");
-  public static final StringId GatewayReceiver_EXCEPTION_WHILE_STARTING_GATEWAY_RECEIVER = new StringId(5712,"Exception occured while starting gateway receiver");
-  public static final StringId GatewayReceiver_IS_NOT_RUNNING = new StringId(5713,"Gateway Receiver is not running");
-  public static final StringId GatewayReceiver_IS_ALREADY_RUNNING = new StringId(5714,"Gateway Receiver is already running");
-  public static final StringId ParallelGatewaySenderQueue_NON_PERSISTENT_GATEWAY_SENDER_0_CAN_NOT_BE_ATTACHED_TO_PERSISTENT_REGION_1 = new StringId(5715,"Non persistent gateway sender {0} can not be attached to persistent region {1}");
-  public static final StringId ParallelAsyncEventQueue_0_CAN_NOT_BE_USED_WITH_REPLICATED_REGION_1 = new StringId(5716,"Parallel Async Event Queue {0} can not be used with replicated region {1}");
-  public static final StringId ParallelGatewaySender_0_CAN_NOT_BE_USED_WITH_REPLICATED_REGION_1 = new StringId(5717,"Parallel gateway sender {0} can not be used with replicated region {1}");
+  public static final StringId GatewayReceiver_EXCEPTION_WHILE_STARTING_GATEWAY_RECEIVER = new StringId(5712, "Exception occured while starting gateway receiver");
+  public static final StringId GatewayReceiver_IS_NOT_RUNNING = new StringId(5713, "Gateway Receiver is not running");
+  public static final StringId GatewayReceiver_IS_ALREADY_RUNNING = new StringId(5714, "Gateway Receiver is already running");
+  public static final StringId ParallelGatewaySenderQueue_NON_PERSISTENT_GATEWAY_SENDER_0_CAN_NOT_BE_ATTACHED_TO_PERSISTENT_REGION_1 = new StringId(5715, "Non persistent gateway sender {0} can not be attached to persistent region {1}");
+  public static final StringId ParallelAsyncEventQueue_0_CAN_NOT_BE_USED_WITH_REPLICATED_REGION_1 = new StringId(5716, "Parallel Async Event Queue {0} can not be used with replicated region {1}");
+  public static final StringId ParallelGatewaySender_0_CAN_NOT_BE_USED_WITH_REPLICATED_REGION_1 = new StringId(5717, "Parallel gateway sender {0} can not be used with replicated region {1}");
-  public static final StringId AbstractDistributionConfig_CLUSTER_SSL_ALIAS_0 = new StringId(6633,"SSL communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
-  public static final StringId AbstractDistributionConfig_GATEWAY_SSL_ALIAS_0 = new StringId(6634,"SSL gateway communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
-  public static final StringId AbstractDistributionConfig_SERVER_SSL_ALIAS_0 = new StringId(6635,"SSL inter-server communication (peer-to-peer) uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
-  public static final StringId AbstractDistributionConfig_HTTP_SERVICE_SSL_ALIAS_0 = new StringId(6636,"SSL http service communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
-  public static final StringId AbstractDistributionConfig_JMX_MANAGER_SSL_ALIAS_0 = new StringId(6637,"SSL jmx communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static final StringId AbstractDistributionConfig_CLUSTER_SSL_ALIAS_0 = new StringId(6633, "SSL communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static final StringId AbstractDistributionConfig_GATEWAY_SSL_ALIAS_0 = new StringId(6634, "SSL gateway communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static final StringId AbstractDistributionConfig_SERVER_SSL_ALIAS_0 = new StringId(6635, "SSL inter-server communication (peer-to-peer) uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static final StringId AbstractDistributionConfig_HTTP_SERVICE_SSL_ALIAS_0 = new StringId(6636, "SSL http service communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static final StringId AbstractDistributionConfig_JMX_MANAGER_SSL_ALIAS_0 = new StringId(6637, "SSL jmx communication uses the this alias when determining the key to use from the keystore for SSL. Defaults to \"{0}\".");
-  public static final StringId AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_0_INVALID_TRY_1 = new StringId(6638,"\"{0}\" is not in the valid set of options \"{1}\"");
+  public static final StringId AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_0_INVALID_TRY_1 = new StringId(6638, "\"{0}\" is not in the valid set of options \"{1}\"");
-  public static final StringId AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_SET_INVALID_DEPRECATED_SSL_SET = new StringId(6639,"When using ssl-enabled-components one cannot use any other SSL properties other than cluster-ssl-* or the corresponding aliases");
+  public static final StringId AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_SET_INVALID_DEPRECATED_SSL_SET = new StringId(6639, "When using ssl-enabled-components one cannot use any other SSL properties other than cluster-ssl-* or the corresponding aliases");
-  /** These are simple messages for testing, translated with Babelfish. **/
+  /**
+   * These are simple messages for testing, translated with Babelfish.
+   **/
-  public static StringId AbstractDistributionConfig_LOCATOR_SSL_ALIAS_0 = new StringId(6640,"SSL locator communications uses this alias when determining the " +
-                                                                                            "key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static StringId AbstractDistributionConfig_LOCATOR_SSL_ALIAS_0 = new StringId(6640, "SSL locator communications uses this alias when determining the " + "key to use from the keystore for SSL. Defaults to \"{0}\".");
+  public static StringId AbstractDistributionConfig_SSL_ENABLED_COMPONENTS_INVALID_ALIAS_OPTIONS = new StringId(6641, "The alias options for the SSL options provided seem to be invalid. Please check that all required aliases are set");

INS23 INS83 INS83 INS43 INS59 INS66 INS66 INS42 INS42 INS14 UPD66 UPD66 UPD66 INS43 INS34 INS45 INS42