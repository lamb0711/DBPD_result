Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
+
- * This is the abstract superclass of exceptions that are thrown and
- * declared.
+ * This is the abstract superclass of exceptions that are thrown and declared.
- * This class ought to be called <em>GemFireException</em>, but that name
- * is reserved for an older class that extends {@link java.lang.RuntimeException}.
+ * This class ought to be called <em>GemFireException</em>, but that name is reserved for an older
+ * class that extends {@link java.lang.RuntimeException}.
-  //////////////////////  Constructors  //////////////////////
+  ////////////////////// Constructors //////////////////////
-   * Creates a new <code>GemFireCheckedException</code> with the given detail
-   * message.
+   * Creates a new <code>GemFireCheckedException</code> with the given detail message.
-   * Creates a new <code>GemFireException</code> with the given detail
-   * message and cause.
+   * Creates a new <code>GemFireException</code> with the given detail message and cause.
-  
+
-   * Creates a new <code>GemFireCheckedException</code> with the given cause and
-   * no detail message
+   * Creates a new <code>GemFireCheckedException</code> with the given cause and no detail message
-  ////////////////////  Instance Methods  ////////////////////
+  //////////////////// Instance Methods ////////////////////
-   * Returns the root cause of this <code>GemFireCheckedException</code> or
-   * <code>null</code> if the cause is nonexistent or unknown.
+   * Returns the root cause of this <code>GemFireCheckedException</code> or <code>null</code> if the
+   * cause is nonexistent or unknown.
-      if ( this.getCause() == null ) return null;
-      Throwable root = this.getCause();
-      while ( root != null ) {
-//          if ( ! ( root instanceof GemFireCheckedException )) {
-//              break;
-//          }
-//          GemFireCheckedException tmp = (GemFireCheckedException) root;
-          if ( root.getCause() == null ) {
-              break;
-          } else {
-              root = root.getCause();
-          }
+    if (this.getCause() == null)
+      return null;
+    Throwable root = this.getCause();
+    while (root != null) {
+      // if ( ! ( root instanceof GemFireCheckedException )) {
+      // break;
+      // }
+      // GemFireCheckedException tmp = (GemFireCheckedException) root;
+      if (root.getCause() == null) {
+        break;
+      } else {
+        root = root.getCause();
-      return root;
+    }
+    return root;
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66