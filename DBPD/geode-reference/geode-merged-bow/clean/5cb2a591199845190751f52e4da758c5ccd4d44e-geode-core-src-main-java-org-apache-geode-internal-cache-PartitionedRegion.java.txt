Revert "GEODE-3647: Fix race condition"

This reverts commit 96149530d82e0b62e9df1a043bfd7d0e01d3411a.

-import org.apache.geode.cache.partition.PartitionRegionHelper;
-
-    /*
-     * All buckets must be created to make this change, otherwise it is possible for
-     * updatePRConfig(...) to make changes that cause bucket creation to live lock
-     */
-    PartitionRegionHelper.assignBucketsToPartitions(this);
-    dataStore.lockBucketCreationAndVisit(
-        (bucketId, r) -> r.getAttributesMutator().setEntryTimeToLive(timeToLive));
+    // Set to Bucket regions as well
+    if (this.getDataStore() != null) { // not for accessors
+      for (Object o : this.getDataStore().getAllLocalBuckets()) {
+        Map.Entry entry = (Map.Entry) o;
+        Region bucketRegion = (Region) entry.getValue();
+        bucketRegion.getAttributesMutator().setEntryTimeToLive(timeToLive);
+      }
+    }
-    dataStore.lockBucketCreationAndVisit(
-        (bucketId, r) -> r.getAttributesMutator().setCustomEntryTimeToLive(custom));
+    if (this.getDataStore() != null) { // not for accessors
+      for (Object o : this.getDataStore().getAllLocalBuckets()) {
+        Map.Entry entry = (Map.Entry) o;
+        Region bucketRegion = (Region) entry.getValue();
+        bucketRegion.getAttributesMutator().setCustomEntryTimeToLive(custom);
+      }
+    }
-    /*
-     * All buckets must be created to make this change, otherwise it is possible for
-     * updatePRConfig(...) to make changes that cause bucket creation to live lock
-     */
-    PartitionRegionHelper.assignBucketsToPartitions(this);
-    dataStore.lockBucketCreationAndVisit(
-        (bucketId, r) -> r.getAttributesMutator().setEntryIdleTimeout(idleTimeout));
+    if (this.getDataStore() != null) { // not for accessors
+      for (Object o : this.getDataStore().getAllLocalBuckets()) {
+        Map.Entry entry = (Map.Entry) o;
+        Region bucketRegion = (Region) entry.getValue();
+        bucketRegion.getAttributesMutator().setEntryIdleTimeout(idleTimeout);
+      }
+    }
-    dataStore.lockBucketCreationAndVisit(
-        (bucketId, r) -> r.getAttributesMutator().setCustomEntryIdleTimeout(custom));
+    if (this.getDataStore() != null) { // not for accessors
+      for (Object o : this.getDataStore().getAllLocalBuckets()) {
+        Map.Entry entry = (Map.Entry) o;
+        Region bucketRegion = (Region) entry.getValue();
+        bucketRegion.getAttributesMutator().setCustomEntryIdleTimeout(custom);
+      }
+    }

INS8 INS8 INS8 INS8 MOV60 INS25 MOV21 MOV41 MOV60 INS25 MOV41 MOV60 INS25 MOV21 MOV41 MOV60 INS25 MOV41 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS32 INS33 INS70 INS32 INS33 INS70 INS32 INS33 INS70 INS32 INS33 INS70 INS52 INS42 INS44 INS32 INS8 INS52 INS42 INS44 INS32 INS8 INS52 INS42 INS44 INS32 INS8 INS52 INS42 INS44 INS32 INS8 INS43 INS42 INS32 UPD42 MOV42 INS60 INS60 INS21 INS43 INS42 INS32 UPD42 MOV42 INS60 INS60 INS21 INS43 INS42 INS32 UPD42 MOV42 INS60 INS60 INS21 INS43 INS42 INS32 UPD42 MOV42 INS60 INS60 INS21 INS42 MOV52 UPD42 MOV42 INS43 INS59 INS43 INS59 INS32 INS42 INS52 UPD42 MOV42 INS43 INS59 INS43 INS59 INS32 INS42 MOV52 UPD42 MOV42 INS43 INS59 INS43 INS59 INS32 INS42 INS52 UPD42 MOV42 INS43 INS59 INS43 INS59 INS32 INS40 UPD42 MOV42 INS11 INS42 UPD42 MOV42 INS11 MOV32 MOV42 MOV42 INS40 UPD42 MOV42 INS11 INS42 UPD42 MOV42 INS11 MOV32 MOV42 MOV42 INS40 UPD42 MOV42 INS11 INS42 UPD42 MOV42 INS11 MOV32 MOV42 MOV42 INS40 UPD42 MOV42 INS11 INS42 UPD42 MOV42 INS11 MOV32 MOV42 MOV42 INS43 INS42 INS43 INS32 UPD42 INS43 INS42 INS43 INS32 UPD42 INS43 INS42 INS43 INS32 UPD42 INS43 INS42 INS43 INS32 UPD42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL21 DEL59 DEL59 DEL32 DEL86 DEL32 DEL21 DEL8 DEL59 DEL59 DEL32 DEL86 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL21 DEL59 DEL59 DEL32 DEL86 DEL32 DEL21 DEL8 DEL59 DEL59 DEL32 DEL86 DEL32 DEL21 DEL8