GEODE-3539: add more tests for get, put, locate entry commands (#1025)

* GEODE-3539: add more tests for get, put, locate entry commands

* clean up more methods in CliUtil
* refactor tests out of GemfireDataCommandsDUnitTest
* get rid of unnecessary try/catch block in commands

-import org.apache.geode.management.internal.cli.LogWrapper;
-    try {
-      InternalCache cache = getCache();
-      SystemManagementService service =
-          (SystemManagementService) ManagementService.getExistingManagementService(cache);
-      TabularResultData resultData = ResultBuilder.createTabularResultData();
-      Set<DistributedMember> dsMembers = CliUtil.getAllNormalMembers(cache);
+    InternalCache cache = getCache();
+    SystemManagementService service =
+        (SystemManagementService) ManagementService.getExistingManagementService(cache);
+    TabularResultData resultData = ResultBuilder.createTabularResultData();
+    Set<DistributedMember> dsMembers = CliUtil.getAllNormalMembers(cache);
-      if (dsMembers.isEmpty()) {
-        result = ResultBuilder.createInfoResult(CliStrings.GATEWAY_MSG_MEMBERS_NOT_FOUND);
-      } else {
-        boolean gatewaySenderExists = false;
-        for (DistributedMember member : dsMembers) {
-          GatewaySenderMXBean bean;
-          if (cache.getDistributedSystem().getDistributedMember().getId().equals(member.getId())) {
-            bean = service.getLocalGatewaySenderMXBean(senderId);
-          } else {
-            ObjectName objectName = service.getGatewaySenderMBeanName(member, senderId);
-            bean = service.getMBeanProxy(objectName, GatewaySenderMXBean.class);
-          }
-          if (bean != null) {
-            gatewaySenderExists = true;
-            bean.rebalance();
-            GatewayCommandsUtils.accumulateStartResult(resultData, member.getId(),
-                CliStrings.GATEWAY_OK,
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_REBALANCED_ON_MEMBER_1, senderId,
-                    member.getId()));
-          } else {
-            GatewayCommandsUtils.accumulateStartResult(resultData, member.getId(),
-                CliStrings.GATEWAY_ERROR,
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1,
-                    senderId, member.getId()));
-          }
-        }
-        if (gatewaySenderExists) {
-          result = ResultBuilder.buildResult(resultData);
+    if (dsMembers.isEmpty()) {
+      result = ResultBuilder.createInfoResult(CliStrings.GATEWAY_MSG_MEMBERS_NOT_FOUND);
+    } else {
+      boolean gatewaySenderExists = false;
+      for (DistributedMember member : dsMembers) {
+        GatewaySenderMXBean bean;
+        if (cache.getDistributedSystem().getDistributedMember().getId().equals(member.getId())) {
+          bean = service.getLocalGatewaySenderMXBean(senderId);
-          result = ResultBuilder.createInfoResult(CliStrings.format(
-              CliStrings.GATEWAY_SENDER_0_IS_NOT_FOUND_ON_ANY_MEMBER, new Object[] {senderId}));
+          ObjectName objectName = service.getGatewaySenderMBeanName(member, senderId);
+          bean = service.getMBeanProxy(objectName, GatewaySenderMXBean.class);
+        }
+        if (bean != null) {
+          gatewaySenderExists = true;
+          bean.rebalance();
+          GatewayCommandsUtils.accumulateStartResult(resultData, member.getId(),
+              CliStrings.GATEWAY_OK, CliStrings.format(
+                  CliStrings.GATEWAY_SENDER_0_IS_REBALANCED_ON_MEMBER_1, senderId, member.getId()));
+        } else {
+          GatewayCommandsUtils.accumulateStartResult(resultData, member.getId(),
+              CliStrings.GATEWAY_ERROR,
+              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, senderId,
+                  member.getId()));
-    } catch (Exception e) {
-      LogWrapper.getInstance().warning(CliStrings.GATEWAY_ERROR + CliUtil.stackTraceAsString(e));
-      result = ResultBuilder.createGemFireErrorResult(CliStrings.GATEWAY_ERROR + e.getMessage());
+      if (gatewaySenderExists) {
+        result = ResultBuilder.buildResult(resultData);
+      } else {
+        result = ResultBuilder.createInfoResult(CliStrings.format(
+            CliStrings.GATEWAY_SENDER_0_IS_NOT_FOUND_ON_ANY_MEMBER, new Object[] {senderId}));
+      }

MOV8 MOV60 MOV25 MOV41 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL27 DEL32 DEL7 DEL21 DEL8 DEL12 DEL54 DEL8