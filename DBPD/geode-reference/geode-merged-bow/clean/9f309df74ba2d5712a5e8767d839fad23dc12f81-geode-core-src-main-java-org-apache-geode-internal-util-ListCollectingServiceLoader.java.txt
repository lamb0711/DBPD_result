GEODE-6609: Protect from MetricsPublishingService exceptions (#3429)

Catch and log Errors and RuntimeExceptions thrown from instantiation
of or calls to MetricsPublishingService implementations.

Co-authored-by: Michael Oleske <moleske@pivotal.io>

+import java.util.Iterator;
+import java.util.ServiceConfigurationError;
+import org.apache.logging.log4j.Logger;
+
+import org.apache.geode.annotations.VisibleForTesting;
+import org.apache.geode.internal.logging.LogService;
+
-public class ListCollectingServiceLoader implements CollectingServiceLoader {
+public class ListCollectingServiceLoader<S> implements CollectingServiceLoader<S> {
+  private static final Logger logger = LogService.getLogger();
+
+  private final ServiceLoaderWrapper<S> serviceLoaderWrapper;
+
+  public ListCollectingServiceLoader() {
+    this(new DefaultServiceLoader<>());
+  }
+
+  @VisibleForTesting
+  ListCollectingServiceLoader(ServiceLoaderWrapper<S> serviceLoaderWrapper) {
+    this.serviceLoaderWrapper = serviceLoaderWrapper;
+  }
-  public <S> Collection<S> loadServices(Class<S> service) {
-    List<S> services = new ArrayList<>();
-    ServiceLoader.load(service).iterator().forEachRemaining(services::add);
+  public Collection<S> loadServices(Class<S> service) {
+    serviceLoaderWrapper.load(service);
+
+    Collection<S> services = new ArrayList<>();
+    for (Iterator<S> iterator = serviceLoaderWrapper.iterator(); iterator.hasNext();) {
+      try {
+        S instance = iterator.next();
+        services.add(instance);
+      } catch (ServiceConfigurationError serviceConfigurationError) {
+        logger.error("Error while loading implementations of {}", service.getName(),
+            serviceConfigurationError);
+      }
+    }
+
+
+  interface ServiceLoaderWrapper<S> {
+    void load(Class<S> service);
+
+    Iterator<S> iterator() throws ServiceConfigurationError;
+  }
+
+  private static class DefaultServiceLoader<S> implements ServiceLoaderWrapper<S> {
+
+    private ServiceLoader<S> actualServiceLoader;
+
+    @Override
+    public void load(Class<S> service) {
+      actualServiceLoader = ServiceLoader.load(service);
+    }
+
+    @Override
+    public Iterator<S> iterator() throws ServiceConfigurationError {
+      return actualServiceLoader.iterator();
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 MOV73 UPD74 MOV74 INS23 INS23 INS31 INS31 INS55 INS55 MOV43 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS83 INS42 INS8 INS78 INS42 INS44 INS8 INS74 INS8 INS42 INS73 INS31 INS31 INS83 INS83 INS42 INS73 INS74 INS23 INS31 INS31 INS42 INS42 INS32 INS43 INS43 INS42 INS17 INS42 INS74 INS42 INS21 INS43 INS43 INS21 MOV60 INS24 MOV41 INS42 INS39 INS42 INS44 INS74 INS42 INS43 INS42 INS43 INS43 INS83 INS74 INS59 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS43 INS8 INS42 INS42 INS42 INS42 INS14 INS43 INS43 INS7 INS42 INS42 INS32 MOV74 INS58 INS32 INS8 INS74 INS42 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS74 INS42 MOV21 INS42 INS43 INS43 INS42 INS41 INS74 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS74 INS59 INS42 INS42 INS54 INS43 INS43 INS42 INS42 INS42 INS42 INS43 INS43 INS7 INS42 INS42 INS32 INS43 INS52 INS42 INS43 INS43 INS42 INS32 INS8 INS12 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS44 INS8 INS43 INS59 INS32 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 DEL42 DEL43 DEL8 DEL42 DEL32 DEL42 DEL42 DEL42 DEL90 DEL32