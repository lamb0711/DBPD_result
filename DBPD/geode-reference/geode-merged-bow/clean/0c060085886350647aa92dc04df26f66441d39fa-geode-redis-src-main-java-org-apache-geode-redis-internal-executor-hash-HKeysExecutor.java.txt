GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4781)

* Revert "Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)"

This reverts commit f0982cdedf1b122f734919d0647434cca33ec254.

* Fix sporadic test failures for concurrent HSetNX
+import java.util.Map;
-import org.apache.geode.cache.Region;
+import org.apache.geode.cache.TimeoutException;
+import org.apache.geode.redis.internal.AutoCloseableLock;
-import org.apache.geode.redis.internal.RedisDataType;
+/**
+ * <pre>
+ * Implementation for the
+ * HKEYS command to return list of fields in the hash.
+ * It will return an empty list if the key does not exist.
+ *
+ * Examples:
+ *
+ * redis> HSET myhash field1 "Hello"
+ * (integer) 1
+ * redis> HSET myhash field2 "World"
+ * (integer) 1
+ * redis> HKEYS myhash
+ * 1) "field1"
+ * 2) "field2"
+ *
+ * </pre>
+ */
+    Set<ByteArrayWrapper> keys;
+    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
+      Map<ByteArrayWrapper, ByteArrayWrapper> keyMap = getMap(context, key);
-    checkDataType(key, RedisDataType.REDIS_HASH, context);
-    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
+      if (keyMap == null || keyMap.isEmpty()) {
+        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
+        return;
+      }
-    if (keyRegion == null) {
-      command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
+      keys = new HashSet<>(keyMap.keySet());
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+      command.setResponse(
+          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
+      return;
+    } catch (TimeoutException e) {
+      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
+          "Timeout acquiring lock. Please try again."));
-    Set<ByteArrayWrapper> keys = new HashSet(keyRegion.keySet());
-

MOV26 INS26 INS40 UPD40 UPD40 INS29 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS54 INS58 INS8 INS12 INS12 INS43 INS59 MOV60 MOV25 INS21 INS44 INS8 INS44 INS8 INS42 INS42 INS32 UPD74 INS27 INS7 INS43 INS42 INS21 MOV21 INS41 INS43 INS42 INS21 INS41 INS42 INS42 INS42 UPD43 UPD42 INS27 INS32 INS42 INS14 INS42 INS32 INS42 INS32 UPD42 UPD42 UPD42 MOV42 MOV33 INS42 INS42 INS74 INS32 INS32 INS42 UPD42 UPD42 INS32 INS42 INS42 INS32 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS42 INS32 INS45 MOV42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL14 DEL27 DEL40