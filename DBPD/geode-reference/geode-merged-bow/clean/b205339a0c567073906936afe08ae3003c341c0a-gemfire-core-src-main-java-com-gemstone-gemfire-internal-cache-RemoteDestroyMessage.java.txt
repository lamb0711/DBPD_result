Merge branch 'feature/GEODE-8' into develop

+import com.gemstone.gemfire.internal.cache.EntryEventImpl.OldValueImporter;
+import com.gemstone.gemfire.internal.offheap.StoredObject;
+import com.gemstone.gemfire.internal.offheap.annotations.Unretained;
+import static com.gemstone.gemfire.internal.offheap.annotations.OffHeapIdentifier.ENTRY_EVENT_OLD_VALUE;
+import static com.gemstone.gemfire.internal.cache.DistributedCacheOperation.VALUE_IS_BYTES;
+import static com.gemstone.gemfire.internal.cache.DistributedCacheOperation.VALUE_IS_SERIALIZED_OBJECT;
+import static com.gemstone.gemfire.internal.cache.DistributedCacheOperation.VALUE_IS_OBJECT;
-public class RemoteDestroyMessage extends RemoteOperationMessageWithDirectReply {
+public class RemoteDestroyMessage extends RemoteOperationMessageWithDirectReply implements OldValueImporter {
+  @Unretained(ENTRY_EVENT_OLD_VALUE)
-      CachedDeserializable cd = (CachedDeserializable) event.getSerializedOldValue();
-      if (cd != null) {
-        {
-          this.oldValueIsSerialized = true;
-          Object o = cd.getValue();
-          if (o instanceof byte[]) {
-            setOldValBytes((byte[])o);
-          } else {
-            // Defer serialization until toData is called.
-            setOldValObj(o);
-          }
-        }
-      } else {
-        Object old = event.getRawOldValue();
-        if (old instanceof byte[]) {
-          this.oldValueIsSerialized = false;
-          setOldValBytes((byte[]) old);
-        } else {
-          this.oldValueIsSerialized = true;
-          setOldValObj(old);
-        }
-      }
+      event.exportOldValue(this);
-  
-  private void setOldValObj(Object o){
+
+  private final void setOldValObj(@Unretained(ENTRY_EVENT_OLD_VALUE) Object o) {
-        {
+        if (cd instanceof StoredObject && !((StoredObject) cd).isSerialized()) {
+          // it is a byte[]
+          this.oldValueIsSerialized = false;
+          setOldValBytes((byte[]) ((StoredObject) cd).getDeserializedForReading());
+        } else {
+    m.setTransactionDistributed(r.getCache().getTxManager().isDistributed());
+    try {
-      event = new EntryEventImpl(r, getOperation(), getKey(), null/*newValue*/,
+      event = EntryEventImpl.create(r, getOperation(), getKey(), null/*newValue*/,
-      event = new EntryEventImpl(
+      event = EntryEventImpl.create(
+    } finally {
+      if (event != null) {
+        event.release();
+      }
+    }
-      //out.writeBoolean(this.hasOldValue);
-      // below boolean is not strictly required, but this is for compatibility
-      // with SQLFire code which writes as byte here to indicate whether
-      // oldValue is an object, serialized object or byte[]
-      if (getOldValueBytes() != null) {
-        DataSerializer.writeByteArray(getOldValueBytes(), out);
-      } else {
-        DataSerializer.writeObjectAsByteArray(getOldValObj(), out);
-      }
+      byte policy = DistributedCacheOperation.valueIsToDeserializationPolicy(oldValueIsSerialized);
+      DistributedCacheOperation.writeValue(policy, getOldValObj(), getOldValueBytes(), out);
+  @Override
+  public boolean prefersOldSerialized() {
+    return true;
+  }
+
+  @Override
+  public boolean isUnretainedOldReferenceOk() {
+    return true;
+  }
+
+  @Override
+  public boolean isCachedDeserializableValueOk() {
+    return false;
+  }
+  
+  private void setOldValueIsSerialized(boolean isSerialized) {
+    if (isSerialized) {
+      if (CachedDeserializableFactory.preferObject()) {
+        this.oldValueIsSerialized = true; //VALUE_IS_OBJECT;
+      } else {
+        // Defer serialization until toData is called.
+        this.oldValueIsSerialized = true; //VALUE_IS_SERIALIZED_OBJECT;
+      }
+    } else {
+      this.oldValueIsSerialized = false; //VALUE_IS_BYTES;
+    }
+  }
+  
+  @Override
+  public void importOldObject(@Unretained(ENTRY_EVENT_OLD_VALUE) Object ov, boolean isSerialized) {
+    setOldValueIsSerialized(isSerialized);
+    // Defer serialization until toData is called.
+    setOldValObj(ov);
+  }
+
+  @Override
+  public void importOldBytes(byte[] ov, boolean isSerialized) {
+    setOldValueIsSerialized(isSerialized);
+    setOldValBytes(ov);
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS79 INS83 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 MOV25 INS79 INS21 INS54 INS42 INS41 INS42 INS41 INS42 INS41 INS39 INS42 INS25 INS42 INS79 INS43 INS42 INS39 INS42 INS21 INS21 INS42 INS5 INS42 INS39 INS42 INS21 INS21 MOV32 INS42 INS42 INS32 INS8 INS8 INS9 INS9 INS9 INS42 INS8 INS8 INS42 INS42 INS42 INS32 INS32 INS39 INS85 INS32 INS32 MOV21 INS21 INS42 INS42 INS32 MOV25 MOV21 MOV25 MOV25 MOV21 MOV21 MOV21 MOV54 MOV41 INS25 INS60 MOV21 INS25 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS8 INS39 INS59 INS32 INS8 INS8 INS7 MOV42 UPD42 MOV42 INS52 INS25 INS32 INS42 INS42 INS33 INS21 INS42 INS32 UPD42 UPD42 INS42 MOV32 INS42 INS42 INS21 INS21 INS22 INS9 INS27 INS8 MOV8 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS7 INS7 INS52 INS42 INS62 INS38 INS21 INS21 INS32 INS32 INS42 INS42 INS22 INS9 INS22 INS9 INS42 INS43 INS32 INS7 INS32 INS42 INS42 INS42 MOV32 MOV32 INS33 MOV32 INS9 INS42 INS9 INS42 INS42 INS42 MOV32 MOV32 INS33 MOV32 MOV22 INS42 INS9 INS9 INS52 INS42 INS52 INS42 INS42 INS36 INS42 INS22 INS9 INS42 INS11 INS11 INS52 INS42 INS5 INS32 INS43 INS42 INS39 INS85 INS36 INS42 INS42 INS11 INS43 INS42 INS42 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL39 DEL85 DEL5 DEL62 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL8 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL39 DEL85 DEL5 DEL62 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL32 DEL21 DEL8 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL9 DEL42 DEL9 DEL14 DEL42 DEL43 DEL42 DEL33 DEL42 DEL9 DEL9 DEL14 DEL42 DEL32 DEL33 DEL27 DEL32 DEL21 DEL8 DEL8 DEL25