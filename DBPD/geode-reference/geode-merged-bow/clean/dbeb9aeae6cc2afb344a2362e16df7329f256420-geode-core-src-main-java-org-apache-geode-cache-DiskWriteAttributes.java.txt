Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Immutable parameter object for describing how {@linkplain
- * Region.Entry region entries} should be written to disk.
+ * Immutable parameter object for describing how {@linkplain Region.Entry region entries} should be
+ * written to disk.
-public interface DiskWriteAttributes
-  extends java.io.Serializable {
+public interface DiskWriteAttributes extends java.io.Serializable {
-  //////////////////////  Instance Methods  //////////////////////
+  ////////////////////// Instance Methods //////////////////////
- 
+
-   * Returns true if this <code>DiskWriteAttributes</code> object
-   * configures synchronous writes.
+   * Returns true if this <code>DiskWriteAttributes</code> object configures synchronous writes.
-  
-  
-  /** 
+
+
+  /**
-  /** 
-   * Get the maximum size in megabytes a single oplog (operation log) file should be 
+  /**
+   * Get the maximum size in megabytes a single oplog (operation log) file should be
-   * @deprecated as of 6.5 use {@link DiskStore#getMaxOplogSize()} 
-   * instead.
+   * @deprecated as of 6.5 use {@link DiskStore#getMaxOplogSize()} instead.
-   * Returns the number of milliseconds that can elapse before
-   * unwritten data is written to disk.  If this
-   * <code>DiskWriteAttributes</code> configures synchronous writing,
-   * then <code>timeInterval</code> has no meaning.
+   * Returns the number of milliseconds that can elapse before unwritten data is written to disk. If
+   * this <code>DiskWriteAttributes</code> configures synchronous writing, then
+   * <code>timeInterval</code> has no meaning.
-   * @deprecated as of 6.5 use {@link DiskStore#getTimeInterval()} 
-   * instead.
+   * @deprecated as of 6.5 use {@link DiskStore#getTimeInterval()} instead.
-   * Returns the number of unwritten bytes of data that can be
-   * enqueued before being written to disk.  If this
-   * <code>DiskWriteAttributes</code> configures synchronous writing,
-   * then <code>bytesThreshold</code> has no meaning.
+   * Returns the number of unwritten bytes of data that can be enqueued before being written to
+   * disk. If this <code>DiskWriteAttributes</code> configures synchronous writing, then
+   * <code>bytesThreshold</code> has no meaning.
-   * @deprecated as of 6.5 use {@link DiskStore#getQueueSize()} 
-   * instead.
+   * @deprecated as of 6.5 use {@link DiskStore#getQueueSize()} instead.
-   * Two <code>DiskWriteAttributes</code> are equal if the both
-   * specify the synchronous writes, or they both specify asynchronous
-   * writes with the same time interval, bytes threshold, maxOplogSize and
-   * compaction values
+   * Two <code>DiskWriteAttributes</code> are equal if the both specify the synchronous writes, or
+   * they both specify asynchronous writes with the same time interval, bytes threshold,
+   * maxOplogSize and compaction values

INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66