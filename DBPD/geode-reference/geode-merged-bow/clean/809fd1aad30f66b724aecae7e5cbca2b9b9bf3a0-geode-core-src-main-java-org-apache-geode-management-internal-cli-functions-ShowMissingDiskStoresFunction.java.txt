GEODE-2681: prevent synchronization hang on getAnyInstance

Take advantage of recent refactoring to use the InternalCache interface API
instead of GemFireCahceImpl.

-  protected Cache getCache() {
-    return CacheFactory.getAnyInstance();
+  protected InternalCache getCache() {
+    return GemFireCacheImpl.getInstance();
-      final Cache cache = getCache();
+      final InternalCache cache = getCache();
-      if (cache instanceof InternalCache) {
-        final InternalCache gemfireCache = (InternalCache) cache;
+      if (cache != null && !cache.isClosed()) {
+        final DistributedMember member = cache.getMyId();
-        final DistributedMember member = gemfireCache.getMyId();
-
-        GemFireCacheImpl gfci = GemFireCacheImpl.getInstance();
-        if (gfci != null && !gfci.isClosed()) {
-          // Missing DiskStores
-          PersistentMemberManager mm = gfci.getPersistentMemberManager();
-          Map<String, Set<PersistentMemberID>> waitingRegions = mm.getWaitingRegions();
-          for (Map.Entry<String, Set<PersistentMemberID>> entry : waitingRegions.entrySet()) {
-            for (PersistentMemberID id : entry.getValue()) {
-              memberMissingIDs.add(new PersistentMemberPattern(id));
-            }
-          }
-          // Missing colocated regions
-          Set<PartitionedRegion> prs = gfci.getPartitionedRegions();
-          for (PartitionedRegion pr : prs) {
-            List<String> missingChildRegions = pr.getMissingColocatedChildren();
-            for (String child : missingChildRegions) {
-              missingColocatedRegions.add(new ColocatedRegionDetails(member.getHost(),
-                  member.getName(), pr.getFullPath(), child));
-            }
+        // Missing DiskStores
+        PersistentMemberManager mm = cache.getPersistentMemberManager();
+        Map<String, Set<PersistentMemberID>> waitingRegions = mm.getWaitingRegions();
+        for (Set<PersistentMemberID> entry : waitingRegions.values()) {
+          for (PersistentMemberID id : entry) {
+            memberMissingIDs.add(new PersistentMemberPattern(id));
-
+        // Missing colocated regions
+        Set<PartitionedRegion> prs = ((GemFireCacheImpl) cache).getPartitionedRegions();
+        for (PartitionedRegion pr : prs) {
+          List<String> missingChildRegions = pr.getMissingColocatedChildren();
+          for (String child : missingChildRegions) {
+            missingColocatedRegions.add(new ColocatedRegionDetails(member.getHost(),
+                member.getName(), pr.getFullPath(), child));
+          }
+        }

MOV43 MOV8 MOV60 MOV60 MOV25 INS54 MOV32 MOV8 MOV12 MOV60 MOV25 UPD43 UPD42 INS60 UPD42 MOV42 MOV32 UPD42 INS83 MOV43 INS59 UPD42 MOV42 UPD42 INS42 INS32 MOV74 UPD42 MOV42 INS42 INS42 UPD42 INS42 INS36 INS11 INS21 MOV43 INS42 INS32 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL83 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL83 DEL42 DEL32 DEL59 DEL60 DEL42 DEL59 DEL60 DEL40 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL42 DEL62 DEL25 DEL54 DEL8