Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

-import org.apache.geode.internal.security.SecurityService;
-  public void cmdExecute(final Message clientMessage, final ServerConnection serverConnection,
-      final SecurityService securityService, long start) throws IOException {
+  public void cmdExecute(Message clientMessage, ServerConnection servConn, long start)
+      throws IOException {
-    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
+    CachedRegionHelper crHelper = servConn.getCachedRegionHelper();
-        serverConnection.setAsTrue(REQUIRES_RESPONSE);
-        serverConnection.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
+        servConn.setAsTrue(REQUIRES_RESPONSE);
+        servConn.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
-        writeChunkedException(clientMessage, exception, serverConnection);
-        serverConnection.setAsTrue(RESPONDED);
+        writeChunkedException(clientMessage, exception, servConn);
+        servConn.setAsTrue(RESPONDED);
-      logger.warn("{}: {}", serverConnection.getName(), message);
-      sendError(hasResult, clientMessage, message, serverConnection);
+      logger.warn("{}: {}", servConn.getName(), message);
+      sendError(hasResult, clientMessage, message, servConn);
-      logger.warn("{}: {}", serverConnection.getName(), message);
-      sendError(hasResult, clientMessage, message, serverConnection);
+      logger.warn("{}: {}", servConn.getName(), message);
+      sendError(hasResult, clientMessage, message, servConn);
-    HandShake handShake = (HandShake) serverConnection.getHandshake();
+    HandShake handShake = (HandShake) servConn.getHandshake();
-          logger.warn("{}: {}", serverConnection.getName(), message);
-          sendError(hasResult, clientMessage, message, serverConnection);
+          logger.warn("{}: {}", servConn.getName(), message);
+          sendError(hasResult, clientMessage, message, servConn);
-      securityService.authorizeDataWrite();
+      this.securityService.authorizeDataWrite();
-      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
+      AuthorizeRequest authzRequest = servConn.getAuthzRequest();
-      ChunkedMessage m = serverConnection.getFunctionResponseMessage();
+      ChunkedMessage m = servConn.getFunctionResponseMessage();
-      resultSender =
-          new ServerToClientFunctionResultSender(m, MessageType.EXECUTE_REGION_FUNCTION_RESULT,
-              serverConnection, functionObject, executeContext);
+      resultSender = new ServerToClientFunctionResultSender(m,
+          MessageType.EXECUTE_REGION_FUNCTION_RESULT, servConn, functionObject, executeContext);
-            functionObject.getId(), serverConnection, execution);
+            functionObject.getId(), servConn, execution);
-      sendException(hasResult, clientMessage, message, serverConnection, ioe);
+      sendException(hasResult, clientMessage, message, servConn, ioe);
-      sendException(hasResult, clientMessage, message, serverConnection, internalfunctionException);
+      sendException(hasResult, clientMessage, message, servConn, internalfunctionException);
-      sendException(hasResult, clientMessage, message, serverConnection, fe);
+      sendException(hasResult, clientMessage, message, servConn, fe);
-      sendException(hasResult, clientMessage, message, serverConnection, e);
+      sendException(hasResult, clientMessage, message, servConn, e);
-  private void sendException(byte hasResult, Message msg, String message,
-      ServerConnection serverConnection, Throwable e) throws IOException {
+  private void sendException(byte hasResult, Message msg, String message, ServerConnection servConn,
+      Throwable e) throws IOException {
-        writeFunctionResponseException(msg, MessageType.EXCEPTION, serverConnection, e);
-        serverConnection.setAsTrue(RESPONDED);
+        writeFunctionResponseException(msg, MessageType.EXCEPTION, servConn, e);
+        servConn.setAsTrue(RESPONDED);
-  private void sendError(byte hasResult, Message msg, String message,
-      ServerConnection serverConnection) throws IOException {
+  private void sendError(byte hasResult, Message msg, String message, ServerConnection servConn)
+      throws IOException {
-            serverConnection);
-        serverConnection.setAsTrue(RESPONDED);
+            servConn);
+        servConn.setAsTrue(RESPONDED);

UPD42 UPD42 UPD42 MOV43 UPD42 MOV43 UPD42 UPD42 UPD42 INS22 UPD42 UPD42 INS52 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42