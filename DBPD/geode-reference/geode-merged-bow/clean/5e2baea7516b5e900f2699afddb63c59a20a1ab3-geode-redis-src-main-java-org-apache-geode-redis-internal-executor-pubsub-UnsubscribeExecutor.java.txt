Feature/expand pubsub support (#5284)

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Sarah <sabbey@pivotal.io>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
+import java.util.Collection;
+import java.util.stream.Collectors;
-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.logging.internal.log4j.api.LogService;
+import org.apache.geode.redis.internal.data.ByteArrayWrapper;
-  private static final Logger logger = LogService.getLogger();
-    List<byte[]> commandElems = command.getProcessedCommand();
-    byte[] channelName = commandElems.get(1);
-    long subscriptionCount =
-        context.getPubSub().unsubscribe(new String(channelName), context.getClient());
+    List<String> channelNames = extractChannelNames(command);
+    if (channelNames.isEmpty()) {
+      channelNames = context.getPubSub().findSubscribedChannels(context.getClient());
+    }
-    ArrayList<Object> items = new ArrayList<>();
-    items.add("unsubscribe");
-    items.add(channelName);
-    items.add(subscriptionCount);
+    Collection<Collection<?>> response = unsubscribe(context, channelNames);
-    return RedisResponse.array(items);
+    return RedisResponse.flattenedArray(response);
+  }
+
+  private List<String> extractChannelNames(Command command) {
+    return command.getProcessedCommandWrappers().stream()
+        .skip(1)
+        .map(ByteArrayWrapper::toString)
+        .collect(Collectors.toList());
+  }
+
+  private Collection<Collection<?>> unsubscribe(ExecutionHandlerContext context,
+      List<String> channelNames) {
+    Collection<Collection<?>> response = new ArrayList<>();
+
+    if (channelNames.isEmpty()) {
+      response.add(createItem(null, 0));
+    } else {
+      for (String channel : channelNames) {
+        long subscriptionCount =
+            context.getPubSub().unsubscribe(channel, context.getClient());
+
+        response.add(createItem(channel, subscriptionCount));
+      }
+    }
+
+    return response;
+  }
+
+  private ArrayList<Object> createItem(String channelName, long subscriptionCount) {
+    ArrayList<Object> oneItem = new ArrayList<>();
+    oneItem.add("unsubscribe");
+    oneItem.add(channelName);
+    oneItem.add(subscriptionCount);
+    return oneItem;

MOV26 INS26 UPD40 INS40 UPD40 INS31 INS31 INS31 INS31 MOV78 INS83 MOV43 INS42 MOV44 MOV44 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS8 INS60 INS25 MOV60 INS41 INS43 INS43 INS43 INS42 INS41 INS43 INS74 INS43 INS42 INS74 INS42 MOV60 INS25 INS41 INS43 INS43 INS43 INS42 INS39 INS42 INS60 MOV21 MOV21 MOV21 MOV41 INS74 INS59 INS32 INS8 INS74 INS32 INS42 INS42 INS42 INS32 INS42 INS43 INS76 INS42 INS43 INS43 INS74 INS32 INS8 INS8 INS42 INS42 INS42 INS42 MOV74 INS59 INS42 MOV43 INS43 UPD42 MOV42 MOV32 INS42 INS42 INS21 INS43 INS74 UPD42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS43 INS74 UPD42 INS42 INS42 INS21 INS70 INS42 INS14 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 INS7 INS42 INS43 INS76 INS42 UPD42 UPD42 INS32 INS42 INS90 INS42 INS42 INS42 INS43 INS76 INS32 INS44 INS42 INS8 INS74 INS42 INS32 INS42 INS32 INS42 MOV34 INS42 INS42 INS42 INS42 INS42 INS32 MOV43 INS42 MOV60 INS21 INS43 MOV32 INS42 INS32 INS32 INS42 INS42 INS33 INS34 INS32 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL39 DEL85 DEL5 DEL74 DEL42 DEL14 DEL42 DEL42 DEL42 DEL32 DEL83 DEL83 DEL83 DEL43 DEL59 DEL23 DEL83 DEL42 DEL39 DEL85 DEL5 DEL42 DEL32 DEL59 DEL60 DEL8 DEL31