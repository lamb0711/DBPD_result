GEODE-907: Switch all fields from floats to doubles

- This is because when Jackson serializes a float (to JSON) it does so
  through an implicit cast to a double which alters the precision.
  Practically, a number like 23.99F ends up being 23.98999999234D which
  messes with unit tests and displaying in the UI.

-  public float getDiskWritesRate() {
-    return Float.parseFloat(JMXProperties.getInstance().getProperty(
+  public double getDiskWritesRate() {
+    return Double.parseDouble(JMXProperties.getInstance().getProperty(
-  public float getAverageWrites() {
-    return Float.parseFloat(JMXProperties.getInstance().getProperty(
-        getKey("averageWrites"), ""));
+  public double getAverageWrites() {
+    String val = JMXProperties.getInstance().getProperty(getKey("averageWrites"), "");
+    double ret = Double.parseDouble(val);
+    return ret;
+//    return Double.parseDouble(JMXProperties.getInstance().getProperty(
+//        getKey("averageWrites"), ""));
-  public float getAverageReads() {
-    return Float.parseFloat(JMXProperties.getInstance().getProperty(
+  public double getAverageReads() {
+    return Double.parseDouble(JMXProperties.getInstance().getProperty(
-  public float getQueryRequestRate() {
-    return Float.parseFloat(JMXProperties.getInstance().getProperty(
+  public double getQueryRequestRate() {
+    return Double.parseDouble(JMXProperties.getInstance().getProperty(
-  public float getDiskReadsRate() {
-    return Float.parseFloat(JMXProperties.getInstance().getProperty(
+  public double getDiskReadsRate() {
+    return Double.parseDouble(JMXProperties.getInstance().getProperty(

UPD39 UPD39 UPD39 UPD39 UPD39 INS60 INS60 INS41 INS43 INS59 INS39 INS59 INS42 UPD42 UPD42 INS42 INS42 MOV32 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 DEL32 DEL41