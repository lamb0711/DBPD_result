Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-      final String msg = "Method " + m.getDeclaringClass().getName() + "."
-          + m.getName() + " has parameter or return type that "
-          + "cannot be translated into an open type";
+      final String msg = "Method " + m.getDeclaringClass().getName() + "." + m.getName()
+          + " has parameter or return type that " + "cannot be translated into an open type";
-  final Object[] fromOpenParameters(Object[] params)
-      throws InvalidObjectException {
+  final Object[] fromOpenParameters(Object[] params) throws InvalidObjectException {
-  final Object toOpenParameter(Object param, int paramNo)
-      throws OpenDataException {
+  final Object toOpenParameter(Object param, int paramNo) throws OpenDataException {
-  final Object fromOpenParameter(Object param, int paramNo)
-      throws InvalidObjectException {
+  final Object fromOpenParameter(Object param, int paramNo) throws InvalidObjectException {
-      final String msg = methodName() + ": cannot convert parameters "
-          + "from open values: " + e;
+      final String msg = methodName() + ": cannot convert parameters " + "from open values: " + e;
-      final String msg = methodName() + ": cannot convert return "
-          + "value to open value: " + e;
+      final String msg = methodName() + ": cannot convert return " + "value to open value: " + e;
-    returnTypeConverter = OpenTypeConverter.toConverter(m
-        .getGenericReturnType());
+    returnTypeConverter = OpenTypeConverter.toConverter(m.getGenericReturnType());

