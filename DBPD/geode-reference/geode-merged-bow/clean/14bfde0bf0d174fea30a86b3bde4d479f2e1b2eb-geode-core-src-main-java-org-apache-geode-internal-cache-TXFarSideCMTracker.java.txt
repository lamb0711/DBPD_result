Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-  public boolean commitProcessReceived(Object key, DistributionManager dm) {
-    // Assume that after the member has departed that we have all its pending
-    // transaction messages
-    if (key instanceof TXLockId) {
-      TXLockId lk = (TXLockId) key;
-      waitForMemberToDepart(lk.getMemberId(), dm);
-    } else if (key instanceof TXId) {
-      TXId id = (TXId) key;
-      waitForMemberToDepart(id.getMemberId(), dm);
-    } else {
-      Assert.assertTrue(false, "TXTracker received an unknown key class: " + key.getClass());
-    }
-
-    final TXCommitMessage mess;
-    synchronized (this.txInProgress) {
-      mess = (TXCommitMessage) this.txInProgress.get(key);
-      if (null != mess && mess.isProcessing()) {
+  public boolean commitProcessReceived(Object key) {
+    final TXCommitMessage message;
+    synchronized (txInProgress) {
+      message = (TXCommitMessage) getTxInProgress().get(key);
+      if (foundTxInProgress(message)) {
-      for (int i = this.txHistory.length - 1; i >= 0; --i) {
-        if (key.equals(this.txHistory[i])) {
-          return true;
-        }
+
+      if (foundFromHistory(key)) {
+        return true;
-    if (mess != null) {
-      synchronized (mess) {
-        if (!mess.isProcessing()) {
+    if (message != null) {
+      synchronized (message) {
+        if (!message.isProcessing()) {
-          mess.setDontProcess();
+          message.setDontProcess();
+  Map getTxInProgress() {
+    return txInProgress;
+  }
+
+  boolean foundTxInProgress(TXCommitMessage message) {
+    return null != message && message.isProcessing();
+  }
+
+  boolean foundFromHistory(Object key) {
+    for (int i = this.txHistory.length - 1; i >= 0; --i) {
+      if (key.equals(this.txHistory[i])) {
+        return true;
+      }
+    }
+    return false;
+  }
+
-            logger.error(LocalizedMessage.create(
-                LocalizedStrings.TxFarSideTracker_WAITING_TO_COMPLETE_ON_MESSAGE_0_CAUGHT_AN_INTERRUPTED_EXCEPTION,
-                commitMessage), ie);
+            logger.error(
+                String.format("Waiting to complete on message %s caught an interrupted exception",
+                    commitMessage),
+                ie);

INS31 INS31 INS31 INS43 INS42 INS8 INS39 INS42 INS44 INS8 INS39 INS42 MOV44 MOV8 UPD43 UPD42 MOV60 INS51 INS42 INS41 MOV43 INS42 INS41 INS41 UPD42 INS83 MOV43 INS42 INS8 INS42 INS27 INS9 UPD42 INS21 INS25 INS25 UPD42 INS27 INS32 INS7 INS32 INS8 INS32 MOV8 UPD42 INS33 INS42 INS42 INS42 INS42 INS11 UPD42 MOV42 UPD42 MOV42 INS41 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS9 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS45 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL9 DEL45 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL25 DEL83 DEL42 DEL59 DEL60 DEL52 DEL42 DEL22 DEL51 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL33 DEL42 DEL27 DEL42 DEL42 DEL32 DEL27 DEL25 DEL40