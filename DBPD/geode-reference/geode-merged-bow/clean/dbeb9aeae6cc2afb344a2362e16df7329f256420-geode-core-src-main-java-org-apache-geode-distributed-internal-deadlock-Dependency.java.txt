Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Holds a dependency between one object and another. This class is used as an
- * edge in the @link {@link DependencyGraph}.
+ * Holds a dependency between one object and another. This class is used as an edge in the @link
+ * {@link DependencyGraph}.
- * An example of a dependency is a Thread that is blocking on a lock, or a lock
- * that is held by a thread.
+ * An example of a dependency is a Thread that is blocking on a lock, or a lock that is held by a
+ * thread.
-public class Dependency<A,B> implements Serializable {
-  
+public class Dependency<A, B> implements Serializable {
+
-  
+
-  
+
-  
+
-  
+
-    Dependency<?,?> other = (Dependency<?,?>) obj;
+    Dependency<?, ?> other = (Dependency<?, ?>) obj;
-    return depender  + " -> " + dependsOn;
+    return depender + " -> " + dependsOn;
-  
+

UPD66 UPD66 UPD66 DEL66