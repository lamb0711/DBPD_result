GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

-package org.apache.geode.internal.cache.lru;
+package org.apache.geode.internal.cache.eviction;
-import org.apache.geode.internal.cache.RegionEntry;
-import org.apache.geode.internal.cache.persistence.DiskRecoveryStore;
+import org.apache.geode.Statistics;
-/**
- * Represents an entry in an LRU map
- */
-public interface LRUEntry extends LRUClockNode, RegionEntry {
-  /**
-   * If the key is stored as an Object then returns that object; but if the key is stored as
-   * primitives then returns null.
-   */
-  Object getKeyForSizing();
+public interface EvictionStatistics {
-  void setDelayedDiskId(DiskRecoveryStore diskRecoveryStore);
+  void incEvictions();
+
+  long getCounter();
+
+  long getLimit();
+
+  void updateCounter(long delta);
+
+  long getEvictions();
+
+  Statistics getStats();
+
+  void incDestroys();

UPD40 UPD40 UPD42 INS31 INS31 INS31 INS31 INS31 INS39 INS42 INS39 INS42 INS39 UPD42 UPD42 INS39 INS42 INS43 INS42 INS39 INS42 INS39 UPD42 INS42 DEL40 DEL26 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL43 DEL66 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL43