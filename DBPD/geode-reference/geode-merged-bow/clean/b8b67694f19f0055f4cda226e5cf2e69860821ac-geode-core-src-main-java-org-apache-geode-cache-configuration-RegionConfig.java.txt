Merge branch 'develop' into feature/GEODE-7049

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements. See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-import java.util.Objects;
-import javax.xml.bind.annotation.XmlTransient;
-import io.swagger.annotations.ApiModelProperty;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.geode.management.api.CorrespondWith;
-import org.apache.geode.management.api.RestfulEndpoint;
-import org.apache.geode.management.runtime.RuntimeInfo;
-import org.apache.geode.management.runtime.RuntimeRegionInfo;
+import org.apache.geode.lang.Identifiable;
+import org.apache.geode.management.configuration.RegionType;
-public class RegionConfig extends CacheElement implements RestfulEndpoint,
-    CorrespondWith<RuntimeRegionInfo> {
-
-  public static final String REGION_CONFIG_ENDPOINT = "/regions";
+public class RegionConfig implements Identifiable<String>, Serializable {
-  @ApiModelProperty(hidden = true)
-  @ApiModelProperty(hidden = true)
-  public RegionConfig(RegionConfig config) {
-    this.regionAttributes = config.getRegionAttributes();
-    this.type = config.getType();
-    this.entries = config.getEntries();
-    this.indexes = config.getIndexes();
-    this.name = config.getName();
-    this.regionElements = config.getCustomRegionElements();
-    this.regions = config.getRegions();
-    this.setGroup(config.getGroup());
-  }
-
-  @Override
-  public boolean isGlobalRuntime() {
-    return true;
-  }
-
-  @Override
-  @JsonIgnore
-  public String getEndpoint() {
-    return REGION_CONFIG_ENDPOINT;
-  }
-
-  @ApiModelProperty(hidden = true)
-    boolean regionPrefixedWithSlash = value.startsWith("/");
-    String[] regionSplit = value.split("/");
-
-    boolean hasSubRegions =
-        regionPrefixedWithSlash ? regionSplit.length > 2 : regionSplit.length > 1;
-    if (hasSubRegions) {
-      throw new IllegalArgumentException("Sub-regions are unsupported");
-    }
-
-    this.name = regionPrefixedWithSlash ? regionSplit[1] : value;
+    this.name = value.startsWith("/") ? value.substring(1) : value;
-  @Override
-  public boolean equals(Object that) {
-    if (this == that) {
-      return true;
-    }
-    if (that == null || getClass() != that.getClass()) {
-      return false;
-    }
-    RegionConfig config = (RegionConfig) that;
-    return Objects.equals(getName(), config.getName()) &&
-        Objects.equals(getType(), config.getType());
-  }
-
-  public static class Index extends CacheElement
-      implements RestfulEndpoint, CorrespondWith<RuntimeInfo> {
+  public static class Index implements Identifiable<String> {
-    @XmlTransient
-    protected String regionName;
-    public String getRegionName() {
-      return regionName;
-    }
-
-    public void setRegionName(String regionName) {
-      this.regionName = regionName;
-      if (StringUtils.isBlank(regionName)) {
-        return;
-      }
-
-      if (fromClause == null) {
-        fromClause = "/" + regionName;
-      } else if (!fromClause.contains(regionName)) {
-        throw new IllegalArgumentException(
-            "Invalid regionName for this index with fromClause = " + fromClause);
-      }
-    }
-
-
-    @Override
-    public String getEndpoint() {
-      if (StringUtils.isBlank(regionName)) {
-        return null;
-      }
-      return RegionConfig.REGION_CONFIG_ENDPOINT + "/" + regionName + "/indexes";
-    }

UPD40 UPD40 UPD74 INS43 UPD43 MOV43 UPD42 MOV42 UPD74 UPD42 UPD43 MOV43 UPD42 MOV22 MOV32 INS32 INS42 INS42 INS34 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL83 DEL83 DEL43 DEL42 DEL45 DEL59 DEL23 DEL42 DEL42 DEL9 DEL80 DEL77 DEL42 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31 DEL42 DEL78 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL9 DEL80 DEL77 DEL39 DEL42 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL40 DEL34 DEL27 DEL40 DEL34 DEL27 DEL16 DEL59 DEL60 DEL42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL42 DEL34 DEL2 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL27 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL27 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL25 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL33 DEL41 DEL8 DEL25 DEL40 DEL45 DEL42 DEL45 DEL27 DEL41 DEL8 DEL31