GEODE-4902: Refactor LogMarker class and usage (#1678)

* GEODE-4902: Refactor LogMarker and usage
* Distinguish those markers at the TRACE and DEBUG levels (now Markers named *_VERBOSE) from those that log at a coarser grainularity (now Markers named *_MARKER)
* Suppress only *_VERBOSE markers by default, from previous behavior of suppressing all markers.
* Refactor some pathological log checks, e.g., change a log from debug to trace when it is gated behind ifTraceEnabled block.
* Remove unused Markers.
* Remove any log marker logic from AdminWaiters exception message generation.  Exceptions now always include a full message.
* Remove marker-gated print to System.out in PersistentOplogSet -- direct calls to System.out should not exist in that class.
* Add marker EVENT_ID_TO_STRING_VERBOSE to explicitly distinguish instance of marker used in logic not immediately consumed by a logger.  The consumption of EventId::toString should only exist at logging in any event.
**
* Remove nearby dead code and dead code detected during marker removal.
* Expand wildcard imports in touched files.
* Remove TODO comments, at least one of which was a decade old.
* Collapse nearby, redundant catch blocks
* Remove empty finally blocks
* Update documentation page to refer to GEODE_VERBOSE, from deprecated GEMFIRE_VERBOSE
* The change in log marker names causes one class to compile larger.  Updated sanctionedDataSerializables.

-        if (logger.isTraceEnabled(LogMarker.PERSIST_WRITES)) {
-          logger.trace(LogMarker.PERSIST_WRITES, "writeOpLogBytes startPos={} oplog#{}", startPos,
-              getOplogId());
+        if (logger.isTraceEnabled(LogMarker.PERSIST_WRITES_VERBOSE)) {
+          logger.trace(LogMarker.PERSIST_WRITES_VERBOSE, "writeOpLogBytes startPos={} oplog#{}",
+              startPos, getOplogId());
-        if (logger.isTraceEnabled(LogMarker.PERSIST_WRITES)) {
-          logger.trace(LogMarker.PERSIST_WRITES,
+        if (logger.isTraceEnabled(LogMarker.PERSIST_WRITES_VERBOSE)) {
+          logger.trace(LogMarker.PERSIST_WRITES_VERBOSE,
-        // this.lastWritePos = startPos;
-          if (/*
-               * !getParent().isSync() since compactor groups writes &&
-               */ (offsetInOplog + valueLength) > this.crf.bytesFlushed && !this.closed) {
+          if ((offsetInOplog + valueLength) > this.crf.bytesFlushed && !this.closed) {
-          // if (EntryBits.isSerialized(userBits)) {
-          // try {
-          // org.apache.geode.internal.util.BlobHelper.deserializeBlob(valueBytes);
-          // } catch (IOException ex) {
-          // throw new RuntimeException("DEBUG readPos=" + readPosition + " len=" + valueLength +
-          // "doneApp=" + doneAppending + " userBits=" + userBits, ex);
-          // } catch (ClassNotFoundException ex2) {
-          // throw new RuntimeException(ex2);
-          // }
-          // }

UPD40 UPD40 UPD40 UPD40