GEODE-6588: Cleanup generics and other static analyzer issues. (#3391)


-  private List serverList;
+  private List<ServerLocation> serverList;
-  public ExplicitConnectionSourceImpl(List/* <InetSocketAddress> */ contacts) {
-    ArrayList serverList = new ArrayList(contacts.size());
-    for (int i = 0; i < contacts.size(); i++) {
-      InetSocketAddress addr = (InetSocketAddress) contacts.get(i);
+  ExplicitConnectionSourceImpl(List<InetSocketAddress> contacts) {
+    ArrayList<ServerLocation> serverList = new ArrayList<>(contacts.size());
+    for (InetSocketAddress addr : contacts) {
-      Set/* <ServerLocation> */ excludedServers) {
+      Set<ServerLocation> excludedServers) {
-    HashSet excludedPlusCurrent = new HashSet(excludedServers);
+    HashSet<ServerLocation> excludedPlusCurrent = new HashSet<>(excludedServers);
-      nextServer = (ServerLocation) serverList.get(nextServerIndex);
+      nextServer = serverList.get(nextServerIndex);
-  public synchronized List findServersForQueue(Set excludedServers, int numServers,
+  public synchronized List<ServerLocation> findServersForQueue(Set<ServerLocation> excludedServers,
+      int numServers,
-      return new ArrayList();
+      return new ArrayList<>();
-  private List pickQueueServers(Set excludedServers, int numServers) {
+  private List<ServerLocation> pickQueueServers(Set<ServerLocation> excludedServers,
+      int numServers) {
-    ArrayList result = new ArrayList();
+    ArrayList<ServerLocation> result = new ArrayList<>();
-      nextQueue = (ServerLocation) serverList.get(nextQueueIndex);
+      nextQueue = serverList.get(nextQueueIndex);
-    public static final HasQueueOp SINGLETON = new HasQueueOp();
+    static final HasQueueOp SINGLETON = new HasQueueOp();
-  private List findDurableQueues(Set excludedServers, int numServers) {
-    ArrayList durableServers = new ArrayList();
-    ArrayList otherServers = new ArrayList();
+  private List<ServerLocation> findDurableQueues(Set<ServerLocation> excludedServers,
+      int numServers) {
+    ArrayList<ServerLocation> durableServers = new ArrayList<>();
+    ArrayList<ServerLocation> otherServers = new ArrayList<>();
-    for (Iterator itr = serverList.iterator(); itr.hasNext();) {
-      ServerLocation server = (ServerLocation) itr.next();
+    for (ServerLocation server : serverList) {
-        if (hasQueue.booleanValue()) {
+        if (hasQueue) {
-    StringBuffer sb = new StringBuffer();
+    StringBuilder sb = new StringBuilder();
-        sb.append(loc.getHostName() + ":" + loc.getPort());
+        sb.append(loc.getHostName()).append(":").append(loc.getPort());
-    ArrayList<ServerLocation> list = new ArrayList<ServerLocation>();
-    list.addAll(this.serverList);
-    return list;
+    return new ArrayList<>(this.serverList);

INS74 INS74 INS74 INS74 MOV60 MOV43 INS43 INS74 INS70 INS74 MOV43 MOV43 INS74 MOV43 INS43 INS74 MOV43 INS43 INS74 INS70 INS42 MOV43 MOV43 INS74 INS44 INS42 MOV8 INS43 INS43 INS74 INS43 INS43 INS42 INS43 MOV43 INS74 INS42 INS43 MOV43 MOV74 MOV74 INS44 INS42 MOV8 UPD43 MOV14 INS43 INS43 MOV43 INS42 MOV42 INS42 MOV43 INS43 MOV42 INS42 MOV42 INS43 INS43 MOV42 UPD42 UPD42 INS14 MOV43 INS42 UPD42 INS74 MOV22 MOV42 INS42 INS74 MOV32 INS42 INS74 MOV42 INS42 INS74 INS74 INS74 UPD43 MOV43 MOV43 MOV43 MOV32 INS74 MOV43 MOV32 MOV43 MOV43 UPD42 MOV43 INS42 INS32 INS42 MOV32 INS32 INS42 INS45 MOV42 MOV42 MOV32 DEL83 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL27 DEL42 DEL37 DEL24 DEL43 DEL11 DEL43 DEL43 DEL43 DEL11 DEL83 DEL43 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL45 DEL27 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42