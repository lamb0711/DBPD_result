GEODE-8182: change String commands to use one region (#5165)

* changed all String commands to use the function and to use a single region
* renabled tests ignored for GEODE-8182
* removed the RedisLockService since it is not used in the new data model
* removed the unused del methods on RedisSetCommands and RedisHashCommands
* removed the KeyRegistar since it was no longer needed with a single data region

Co-authored-by: Ray Ingles <ringles@pivotal.io>
-import static org.apache.geode.redis.internal.RedisLockServiceMBean.OBJECTNAME__REDISLOCKSERVICE_MBEAN;
-import java.lang.management.ManagementFactory;
-import java.util.Set;
-import javax.management.InstanceAlreadyExistsException;
-import javax.management.MBeanRegistrationException;
-import javax.management.MBeanServer;
-import javax.management.MalformedObjectNameException;
-import javax.management.NotCompliantMBeanException;
-import javax.management.ObjectName;
-import org.apache.geode.GemFireConfigException;
-import org.apache.geode.cache.RegionFactory;
-import org.apache.geode.management.ManagementService;
-import org.apache.geode.management.internal.SystemManagementService;
-
-  /**
-   * The field that defines the name of the {@link Region} which holds all of the strings. The
-   * current value of this field is {@code STRING_REGION}.
-   */
-  public static final String STRING_REGION = "ReDiS_StRiNgS";
-
-   * Currently this is the meta data but at some point the value for a particular
-   * type will be changed to an instance of {@link RedisData}
-  public static final String REDIS_DATA_REGION = "ReDiS_DaTa";
+  public static final String REDIS_DATA_REGION = "REDIS_DATA";
-  private KeyRegistrar keyRegistrar;
-  private RedisLockService hashLockService;
-
-  @VisibleForTesting
-  public KeyRegistrar getKeyRegistrar() {
-    return keyRegistrar;
-  }
-      Region<ByteArrayWrapper, RedisData> stringsRegion;
-      if ((stringsRegion = cache.getRegion(STRING_REGION)) == null) {
-        RegionFactory<ByteArrayWrapper, RedisData> regionFactory =
-            gemFireCache.createRegionFactory(DEFAULT_REGION_TYPE);
-        stringsRegion = regionFactory.create(STRING_REGION);
-      }
-
-      keyRegistrar = new KeyRegistrar(redisData);
-      hashLockService = new RedisLockService();
-      regionProvider = new RegionProvider(stringsRegion, keyRegistrar,
-          expirationFutures, expirationExecutor, redisData);
+      regionProvider = new RegionProvider(expirationFutures, expirationExecutor, redisData);
-
-    registerLockServiceMBean();
-  }
-
-  @VisibleForTesting
-  public RedisLockService getLockService() {
-    return hashLockService;
-  }
-
-  private void registerLockServiceMBean() {
-    ManagementService sms = SystemManagementService.getManagementService(cache);
-
-    try {
-      ObjectName mbeanON = new ObjectName(OBJECTNAME__REDISLOCKSERVICE_MBEAN);
-      sms.registerMBean(hashLockService, mbeanON);
-      MBeanServer platformMBeanServer = ManagementFactory.getPlatformMBeanServer();
-
-      Set<ObjectName> names = platformMBeanServer.queryNames(mbeanON, null);
-      if (names.isEmpty()) {
-        platformMBeanServer.registerMBean(hashLockService, mbeanON);
-        logger.info("Registered RedisLockServiceMBean on " + mbeanON);
-      }
-    } catch (InstanceAlreadyExistsException | MBeanRegistrationException
-        | NotCompliantMBeanException | MalformedObjectNameException e) {
-      throw new GemFireConfigException("Error while configuring RedisLockServiceMBean", e);
-    }
-                redisPasswordBytes,
-                keyRegistrar, pubSub, hashLockService, subscriberGroup));
+                redisPasswordBytes, pubSub, subscriberGroup));

MOV43 UPD45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL45 DEL59 DEL23 DEL66 DEL66 DEL42 DEL65 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL33 DEL27 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL33 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL84 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL42