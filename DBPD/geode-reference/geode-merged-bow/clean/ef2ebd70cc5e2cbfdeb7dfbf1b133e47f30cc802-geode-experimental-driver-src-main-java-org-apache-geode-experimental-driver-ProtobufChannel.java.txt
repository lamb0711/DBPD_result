GEODE-4816: Add support for authentication to the experimental driver. (#1615)


+import java.util.Objects;
+import org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI;
-  public ProtobufChannel(final Set<InetSocketAddress> locators) throws IOException {
+  public ProtobufChannel(final Set<InetSocketAddress> locators, String username, String password)
+      throws IOException {
-    this.socket = connectToAServer();
+    this.socket = connectToAServer(username, password);
-  private Socket connectToAServer() throws IOException {
-    InetSocketAddress server = findAServer();
+  private Socket connectToAServer(String username, String password) throws IOException {
+    InetSocketAddress server = findAServer(username, password);
+
+    if (!Objects.isNull(username)) {
+      authenticate(username, password, outputStream, inputStream);
+    }
+
-  private InetSocketAddress findAServer() throws IOException {
+  private InetSocketAddress findAServer(String username, String password) throws IOException {
+        if (!Objects.isNull(username)) {
+          authenticate(username, password, outputStream, inputStream);
+        }
+
+  private void authenticate(String username, String password, OutputStream outputStream,
+      InputStream inputStream) throws IOException {
+    final ConnectionAPI.AuthenticationRequest.Builder builder =
+        ConnectionAPI.AuthenticationRequest.newBuilder();
+    builder.putCredentials("security-username", username);
+    builder.putCredentials("security-password", password);
+    final Message authenticationRequest =
+        Message.newBuilder().setAuthenticationRequest(builder).build();
+    authenticationRequest.writeDelimitedTo(outputStream);
+
+    final Message authenticationResponseMessage = Message.parseDelimitedFrom(inputStream);
+    final ErrorResponse errorResponse = authenticationResponseMessage.getErrorResponse();
+    if (!Objects.isNull(errorResponse) && errorResponse.hasError()) {
+      throw new IOException("Failed authentication for " + username + ": error code="
+          + errorResponse.getError().getErrorCode() + "; error message="
+          + errorResponse.getError().getMessage());
+    }
+    final ConnectionAPI.AuthenticationResponse authenticationResponse =
+        authenticationResponseMessage.getAuthenticationResponse();
+    if (!Objects.isNull(authenticationResponse) && !authenticationResponse.getAuthenticated()) {
+      throw new IOException("Failed authentication for " + username);
+    }
+  }
+

INS26 INS26 INS40 INS40 INS31 INS44 INS44 INS44 INS44 INS44 INS44 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS21 INS60 INS21 INS60 INS60 INS25 INS60 INS25 INS42 INS42 INS42 INS42 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS83 INS43 INS59 INS32 INS32 INS83 INS43 INS59 INS32 INS83 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS83 INS43 INS59 INS27 INS8 INS32 INS21 INS40 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS38 INS32 INS53 INS40 INS42 INS32 INS38 INS38 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS38 INS8 INS42 INS42 INS42 INS45 INS42 INS45 INS32 INS45 INS32 INS42 INS45 INS42 INS32 INS21 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42