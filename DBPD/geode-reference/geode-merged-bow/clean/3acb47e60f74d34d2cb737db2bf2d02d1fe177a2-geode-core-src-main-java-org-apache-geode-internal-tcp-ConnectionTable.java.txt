GEODE-3286: Failing to cleanup connections from ConnectionTable

Merge branch 'feature/GEODE-3286' into develop

This closes #657

+
-  private ConnectionTable(TCPConduit c) throws IOException {
-    this.owner = c;
+  private ConnectionTable(TCPConduit conduit) throws IOException {
+    this.owner = conduit;
-        ? new SystemTimer(c.getDM().getSystem(), true) : null;
+        ? new SystemTimer(conduit.getDM().getSystem(), true) : null;
-    this.p2pReaderThreadPool = createThreadPoolForIO(c.getDM().getSystem().isShareSockets());
+    this.p2pReaderThreadPool = createThreadPoolForIO(conduit.getDM().getSystem().isShareSockets());
-  protected void acceptConnection(Socket sock) throws IOException, ConnectionException {
-    Connection connection = null;
+  protected void acceptConnection(Socket sock, PeerConnectionFactory peerConnectionFactory)
+      throws IOException, ConnectionException, InterruptedException {
-    Connection conn = null;
+    Connection connection = null;
-      conn = Connection.createReceiver(this, sock);
+      connection = peerConnectionFactory.createReceiver(this, sock);
-      if (conn != null && !finishedConnecting) {
+      if (connection != null && !finishedConnecting) {
-        closeCon(LocalizedStrings.ConnectionTable_CANCEL_AFTER_ACCEPT.toLocalizedString(), conn);
-        conn = null;
+        closeCon(LocalizedStrings.ConnectionTable_CANCEL_AFTER_ACCEPT.toLocalizedString(),
+            connection);
+        connection = null;
-    if (conn != null) {
+    if (connection != null) {
-        this.owner.stats.incReceivers();
+        this.owner.getStats().incReceivers();
-              .toLocalizedString(), conn);
+              .toLocalizedString(), connection);
-        this.receivers.add(conn);
+        // If connection.stopped is false, any connection cleanup thread will not yet have acquired
+        // the receiver synchronization to remove the receiver. Therefore we can safely add it here.
+        if (!connection.isSocketClosed() || connection.stopped) {
+          this.receivers.add(connection);
+        }
-        logger.debug("Accepted {} myAddr={} theirAddr={}", conn, getConduit().getMemberId(),
-            conn.remoteAddr);
+        logger.debug("Accepted {} myAddr={} theirAddr={}", connection, getConduit().getMemberId(),
+            connection.remoteAddr);
-      this.owner.stats.incSenders(sharedResource, preserveOrder);
+      this.owner.getStats().incSenders(sharedResource, preserveOrder);
-        this.owner.stats.incFailedConnect();
+        this.owner.getStats().incFailedConnect();
-    this.owner.stats.incSenders(false/* shared */, true /* preserveOrder */);
+    this.owner.getStats().incSenders(false/* shared */, true /* preserveOrder */);
+      Connection con = this.c;
+      if (con != null) {
+        con.cleanUpOnIdleTaskCancel();
+      }
-
+  public int getNumberOfReceivers() {
+    return receivers.size();
+  }

INS31 INS44 INS43 MOV60 INS83 INS39 INS42 INS8 UPD42 INS43 INS42 INS42 INS41 INS42 INS32 INS60 INS25 INS32 UPD42 UPD42 INS21 MOV32 INS42 INS9 INS9 MOV43 INS59 INS27 INS8 INS42 INS42 INS32 MOV22 INS42 INS42 INS22 INS42 INS33 INS21 UPD42 INS25 INS32 INS42 INS42 INS42 MOV21 INS52 INS42 INS32 UPD42 UPD42 INS32 INS27 INS8 MOV22 INS42 INS32 INS42 INS42 UPD42 UPD42 UPD42 UPD42 MOV32 INS42 INS38 INS40 MOV21 UPD42 UPD40 MOV32 INS42 MOV22 INS42 INS32 MOV22 INS42 UPD42 INS42 INS42 UPD42 DEL42 DEL33 DEL59 DEL60 DEL42 DEL22 DEL42 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL22 DEL42 DEL32 DEL21 DEL42 DEL22 DEL42 DEL9 DEL9