Set ControllableProcess factory in Builder instead of setting the ControllableProcess directly

+import java.util.function.Supplier;
+  private final Supplier<ControllableProcess> controllableProcessFactory;
-    process = builder.getControllableProcess();
+    controllableProcessFactory = builder.getControllableProcessFactory();
-        // TODO Aaron redo with factory
-        if (process == null) {
-          process = new FileControllableProcess(controlHandler, new File(getWorkingDirectory()),
-              ProcessType.SERVER, isForcing());
-        }
+        process = getControllableProcess();
-      } catch (IOException e) {
-        failOnStart(e);
-        throw new RuntimeException(
-            String.format("An IO error occurred while starting a %s in %s on %s: %s",
-                getServiceName(), getWorkingDirectory(), getId(), e.getMessage()),
-            e);
-      } catch (FileAlreadyExistsException e) {
-        failOnStart(e);
-        throw new RuntimeException(
-            String.format("A PID file already exists and a %s may be running in %s on %s.",
-                getServiceName(), getWorkingDirectory(), getId()),
-            e);
-      } catch (PidUnavailableException e) {
-        failOnStart(e);
-        throw new RuntimeException(
-            String.format("The process ID could not be determined while starting %s %s in %s: %s",
-                getServiceName(), getId(), getWorkingDirectory(), e.getMessage()),
-            e);
+  private ControllableProcess getControllableProcess() {
+    if (controllableProcessFactory != null) {
+      return controllableProcessFactory.get();
+    }
+
+    try {
+      return new FileControllableProcess(controlHandler, new File(getWorkingDirectory()),
+          ProcessType.SERVER, isForcing());
+    } catch (IOException e) {
+      failOnStart(e);
+      throw new RuntimeException(
+          String.format("An IO error occurred while starting a %s in %s on %s: %s",
+              getServiceName(), getWorkingDirectory(), getId(), e.getMessage()),
+          e);
+    } catch (FileAlreadyExistsException e) {
+      failOnStart(e);
+      throw new RuntimeException(
+          String.format("A PID file already exists and a %s may be running in %s on %s.",
+              getServiceName(), getWorkingDirectory(), getId()),
+          e);
+    } catch (PidUnavailableException e) {
+      failOnStart(e);
+      throw new RuntimeException(
+          String.format("The process ID could not be determined while starting %s %s in %s: %s",
+              getServiceName(), getId(), getWorkingDirectory(), e.getMessage()),
+          e);
+    }
+  }
+
-    private ControllableProcess controllableProcess;
+    private Supplier<ControllableProcess> controllableProcessFactory;
-     * Sets the {@code ControllableProcess} to use when starting the server.
+     * Sets the factory to use to get a {@code ControllableProcess} when starting the server.
-     * @param controllableProcess the controllable process to use
+     * @param controllableProcessFactory the controllable process factory to use
-    Builder setControllableProcess(ControllableProcess controllableProcess) {
-      this.controllableProcess = controllableProcess;
+    Builder setControllableProcessFactory(Supplier<ControllableProcess> controllableProcessFactory) {
+      this.controllableProcessFactory = controllableProcessFactory;
-     * Gets the {@code ControllableProcess} used when starting the server.
+     * Gets the factory used to get a {@code ControllableProcess} when starting the server.
-     * @return the controllable process
+     * @return the controllable process factory
-    ControllableProcess getControllableProcess() {
-      return controllableProcess;
+    Supplier<ControllableProcess> getControllableProcessFactory() {
+      return controllableProcessFactory;

INS26 INS40 INS23 INS31 INS83 INS83 INS74 INS59 INS83 MOV43 INS42 INS8 INS43 INS43 INS42 INS25 INS54 INS74 MOV29 UPD42 MOV29 INS74 INS42 INS42 INS42 INS27 INS8 MOV8 MOV12 MOV12 MOV12 INS43 MOV43 UPD42 UPD65 MOV65 INS74 UPD42 UPD65 INS43 INS43 UPD42 INS42 INS33 INS41 INS41 INS42 UPD66 UPD66 INS42 UPD66 INS43 MOV43 UPD66 UPD66 UPD66 INS42 INS42 UPD42 UPD42 INS32 MOV14 INS42 UPD42 INS21 INS42 INS42 UPD42 INS7 INS42 INS32 INS42 DEL42 DEL33 DEL27 DEL25 DEL42 DEL7 DEL21 DEL42 DEL42