GEODE-3715: improve javadocs of DistributedTest rules

+/**
+ * JUnit Rule that provides SharedCounters in DistributedTest VMs.
+ *
+ * <p>
+ * {@code SharedCountersRule} follows the standard convention of using a {@code Builder} for
+ * configuration as introduced in the JUnit {@code Timeout} rule.
+ *
+ * <p>
+ * {@code SharedCountersRule} can be used in DistributedTests as a {@code Rule}:
+ *
+ * <pre>
+ * {@literal @}ClassRule
+ * public static DistributedTestRule distributedTestRule = new DistributedTestRule();
+ *
+ * {@literal @}Rule
+ * public CacheRule cacheRule = CacheRule.builder().createCacheInAll().build();
+ *
+ * {@literal @}Rule
+ * public SharedCountersRule sharedCountersRule = SharedCountersRule.builder().withId(ID1).build();
+ *
+ * {@literal @}Test
+ * public void everyVMShouldHaveACache() {
+ *   sharedCountersRule.increment(ID1);
+ *   for (VM vm : Host.getHost(0).getAllVMs()) {
+ *     vm.invoke(() -> sharedCountersRule.increment(ID1));
+ *   }
+ *   assertThat(sharedCountersRule.getTotal(ID1)).isEqualTo(5);
+ * }
+ * </pre>
+ */
+  /**
+   * Initialize an {@code AtomicInteger} with value of zero identified by {@code id} in every
+   * {@code VM}.
+   */
+  /**
+   * Returns the {@code AtomicInteger} identified by the specified {@code id}.
+   */
+  /**
+   * Increments the {@code AtomicInteger} identified by the specified {@code id}.
+   */
+  /**
+   * Increments the {@code AtomicInteger} by the specified {@code delta} which may be a positive or
+   * negative integer.
+   */
+  /**
+   * Increments the {@code AtomicInteger} identified by the specified {@code id}.
+   */
+  /**
+   * Decrements the {@code AtomicInteger} by the specified {@code delta}.
+   */
+  /**
+   * Returns the total value of the {@code AtomicInteger} combined across every VM.
+   */
+  /**
+   * Returns the local value of the {@code AtomicInteger} identified by the specified {@code id}.
+   */
+    /**
+     * Initialize specified id when {@code SharedCountersRule} is built.
+     */

