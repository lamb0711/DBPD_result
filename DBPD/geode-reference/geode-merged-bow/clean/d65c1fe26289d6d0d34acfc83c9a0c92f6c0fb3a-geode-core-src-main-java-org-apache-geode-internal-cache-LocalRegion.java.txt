GEODE-2183: Region.query now allows full syntax as a predicate on server

+import org.apache.geode.cache.query.QueryInvalidException;
-      predicate = predicate.trim();
+      queryString = constructRegionQueryString(predicate.trim());
-      // Compare the query patterns to the 'predicate'. If one matches,
-      // send it as is to the server
-      boolean matches = false;
-      for (int i = 0; i < QUERY_PATTERNS.length; i++) {
-        if (QUERY_PATTERNS[i].matcher(predicate).matches()) {
-          matches = true;
-          break;
-        }
-      }
-      if (matches) {
-        queryString = predicate;
-      } else {
-        queryString = "select * from " + getFullPath() + " this where " + predicate;
-      }
+      Object[] params = new Object[0];
-      String queryStr = "select * from " + getFullPath() + " this where " + predicate;
+      String queryStr = constructRegionQueryString(predicate.trim());
-      results = (SelectResults) query.execute(new Object[0]);
+      if (query.getRegionsInQuery(params).size() != 1) {
+        throw new QueryInvalidException(
+            "Prevent multiple region query from being executed through region.query()");
+      }
+      results = (SelectResults) query.execute(params);
+  private String constructRegionQueryString(final String predicate) throws QueryInvalidException {
+    final String queryString;// Compare the query patterns to the 'predicate'. If one matches,
+    // send it as is to the server
+    boolean matches = false;
+    for (int i = 0; i < QUERY_PATTERNS.length; i++) {
+      if (QUERY_PATTERNS[i].matcher(predicate).matches()) {
+        if (!predicate.contains(getName())) {
+          throw new QueryInvalidException(
+              "Should not execute region.query with a different region in the from clause: "
+                  + getName() + " was not present in:" + predicate);
+        }
+        matches = true;
+        break;
+      }
+    }
+    if (matches) {
+      queryString = predicate;
+    } else {
+      queryString = "select * from " + getFullPath() + " this where " + predicate;
+    }
+    return queryString;
+  }
+

INS26 INS40 INS31 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS83 INS43 INS42 INS42 INS60 MOV60 MOV24 MOV25 INS41 INS42 INS83 INS43 INS59 INS42 INS60 INS25 INS42 INS42 INS5 INS59 INS27 INS8 UPD42 INS32 INS43 INS85 INS42 MOV3 INS32 INS32 INS34 INS53 INS25 INS42 INS32 INS42 UPD42 MOV42 INS32 INS32 INS42 INS14 INS38 INS8 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS32 INS53 INS42 INS42 INS42 INS32 INS14 INS42 INS43 INS27 INS42 INS45 INS32 INS45 INS42 INS42 DEL32 DEL45 DEL32 DEL45 DEL42 DEL27