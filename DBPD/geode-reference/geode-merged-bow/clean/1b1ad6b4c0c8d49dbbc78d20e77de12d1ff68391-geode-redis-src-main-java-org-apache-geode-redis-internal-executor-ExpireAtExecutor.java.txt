GEODE-7947 Implement tests for EXPIRE-related functionality (#4904)

* GEODE-7947 Implement tests for EXPIRE-related functionality

Co-authored-by: John Hutchison <jhutchison@pivotal.io>
Co-authored-by: Sarah <sabbey@pivotal.io>
+import static org.apache.geode.redis.internal.RedisConstants.ERROR_NOT_INTEGER;
+
+import org.apache.geode.redis.internal.RedisDataType;
-  private final String ERROR_TIMESTAMP_NOT_USABLE = "The timestamp specified must be numeric";
-
-  private final int TIMESTAMP_INDEX = 2;
-
-  private final int SET = 1;
-
-  private final int NOT_SET = 0;
-
+    int SET = 1;
+    int NOT_SET = 0;
+    int TIMESTAMP_INDEX = 2;
-    if (commandElems.size() < 3) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), getArgsError()));
+    if (commandElems.size() != 3) {
+      command.setResponse(
+          Coder.getErrorResponse(
+              context.getByteBufAllocator(),
+              getArgsError()));
-    RegionProvider rC = context.getRegionProvider();
+    RegionProvider regionProvider = context.getRegionProvider();
-          Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_TIMESTAMP_NOT_USABLE));
+          Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INTEGER));
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_SET));
+      int result = NOT_SET;
+      RedisDataType redisDataType = context.getKeyRegistrar().getType(wKey);
+
+      if (redisDataType != null) {
+        regionProvider.getRegionForType(redisDataType).remove(wKey);
+        result = SET;
+      }
+
+      command.setResponse(
+          Coder.getIntegerResponse(
+              context.getByteBufAllocator(),
+              result));
-    boolean expirationSet = false;
+    boolean expirationSet;
-    if (rC.hasExpiration(wKey)) {
-      expirationSet = rC.modifyExpiration(wKey, delayMillis);
+    if (regionProvider.hasExpiration(wKey)) {
+      expirationSet = regionProvider.modifyExpiration(wKey, delayMillis);
-      expirationSet = rC.setExpiration(wKey, delayMillis);
+      expirationSet = regionProvider.setExpiration(wKey, delayMillis);

INS26 INS26 INS40 INS40 INS60 INS60 INS60 INS39 MOV59 INS39 MOV59 INS39 MOV59 UPD27 UPD42 INS60 INS60 INS25 UPD42 INS39 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS32 INS42 INS42 INS32 INS7 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL39 DEL23 DEL83 DEL83 DEL39 DEL23 DEL83 DEL83 DEL39 DEL23 DEL9