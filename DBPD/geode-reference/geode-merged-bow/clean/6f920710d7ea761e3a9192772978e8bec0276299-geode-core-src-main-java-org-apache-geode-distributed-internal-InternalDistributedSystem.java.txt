GEODE-5925 locks are not released in shutdown hook

If the cache is closed because the JVM is exiting we aren't releasing
locks until the DistributedSystem disconnects.  This alters the behavior
of shutdown and, in particular, causes long delays in designating new
primary bucket owners and reestablishing redundancy.

This commit enables unlocking during shutdown.

This closes #2725

+   * A value of Boolean.TRUE will identify a thread being used to execute
+   * disconnectListeners. {@link #addDisconnectListener} will not throw ShutdownException if the
+   * value is Boolean.TRUE.
+   */
+  final ThreadLocal<Boolean> isDisconnectThread = new ThreadLocal() {
+    @Override
+    public Boolean initialValue() {
+      return Boolean.FALSE;
+    }
+  };
+
+  /**
-          disconnectListenerThread.set(Boolean.TRUE);
+          isDisconnectThread.set(Boolean.TRUE);
-  public boolean isDisconnectListenerThread() {
-    Boolean disconnectListenerThreadBoolean = (Boolean) this.disconnectListenerThread.get();
+  public boolean isDisconnectThread() {
+    return this.isDisconnectThread.get();
+  }
-    return disconnectListenerThreadBoolean != null
-        && disconnectListenerThreadBoolean.booleanValue();
+  public void setIsDisconnectThread() {
+    this.isDisconnectThread.set(Boolean.TRUE);
-            disconnectListenerThread.set(Boolean.TRUE); // bug #42663 - this must be set while
-                                                        // closing the cache
+            isDisconnectThread.set(Boolean.TRUE); // bug #42663 - this must be set while
+                                                  // closing the cache
-              disconnectListenerThread.set(Boolean.FALSE);
+              isDisconnectThread.set(Boolean.FALSE);
-      Boolean disconnectListenerThreadBoolean = (Boolean) disconnectListenerThread.get();
+      boolean disconnectThreadBoolean = isDisconnectThread.get();
-      if (disconnectListenerThreadBoolean == null
-          || !disconnectListenerThreadBoolean.booleanValue()) {
+      if (!disconnectThreadBoolean) {
-   * A non-null value of Boolean.TRUE will identify a thread being used to execute
-   * disconnectListeners. {@link #addDisconnectListener} will not throw ShutdownException if the
-   * value is Boolean.TRUE.
-   */
-  final ThreadLocal disconnectListenerThread = new ThreadLocal();
-
-  /**

INS23 INS31 INS31 INS29 INS83 INS74 INS59 INS83 MOV39 UPD42 MOV42 INS8 INS83 INS39 INS42 INS8 INS65 MOV43 MOV43 INS42 INS14 INS41 INS21 INS66 INS66 MOV65 INS66 INS66 MOV43 INS1 INS32 INS32 INS31 MOV22 MOV42 INS22 UPD42 MOV42 INS40 INS78 MOV83 MOV43 INS42 INS8 UPD42 INS52 INS42 INS39 INS38 INS42 INS41 UPD42 INS32 INS42 INS40 UPD42 MOV42 MOV42 UPD42 UPD42 UPD42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL32 DEL11 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL14 DEL59 DEL23