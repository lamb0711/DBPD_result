Merge pull request #823 from jdeppe-pivotal/feature/GEODE-3640

GEODE-3640: Accept all certs when --skip-ssl-verification is used
+import java.security.cert.X509Certificate;
+import javax.net.ssl.KeyManager;
+import javax.net.ssl.TrustManager;
+import javax.net.ssl.X509TrustManager;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
-      if (skipSslValidation) {
-        HttpsURLConnection.setDefaultHostnameVerifier((String s, SSLSession sslSession) -> true);
-      }
-      result = httpConnect(gfProperties, url);
+      result = httpConnect(gfProperties, url, skipSslValidation);
-  Result httpConnect(Properties gfProperties, String url) {
+  Result httpConnect(Properties gfProperties, String url, boolean skipSslVerification) {
-        configureHttpsURLConnection(sslConfig);
+        configureHttpsURLConnection(sslConfig, skipSslVerification);
-      return httpConnect(gfProperties, url);
+      return httpConnect(gfProperties, url, skipSslVerification);
-  private void configureHttpsURLConnection(SSLConfig sslConfig) throws Exception {
+  private KeyManager[] getKeyManagers(SSLConfig sslConfig) throws Exception {
-    FileInputStream trustStoreStream = null;
+    KeyManagerFactory keyManagerFactory = null;
+
-      KeyManagerFactory keyManagerFactory = null;
+    } finally {
+      if (keyStoreStream != null) {
+        keyStoreStream.close();
+      }
+    }
+    return keyManagerFactory != null ? keyManagerFactory.getKeyManagers() : null;
+  }
+
+  private TrustManager[] getTrustManagers(SSLConfig sslConfig, boolean skipSslVerification)
+      throws Exception {
+    FileInputStream trustStoreStream = null;
+    TrustManagerFactory trustManagerFactory = null;
+
+    if (skipSslVerification) {
+      TrustManager[] trustAllCerts = new TrustManager[] {new X509TrustManager() {
+        public java.security.cert.X509Certificate[] getAcceptedIssuers() {
+          return null;
+        }
+
+        public void checkClientTrusted(X509Certificate[] certs, String authType) {}
+
+        public void checkServerTrusted(X509Certificate[] certs, String authType) {}
+
+      }};
+      return trustAllCerts;
+    }
+
+    try {
-      TrustManagerFactory trustManagerFactory = null;
-
-      SSLContext ssl =
-          SSLContext.getInstance(SSLUtil.getSSLAlgo(SSLUtil.readArray(sslConfig.getProtocols())));
-
-      ssl.init(keyManagerFactory != null ? keyManagerFactory.getKeyManagers() : null,
-          trustManagerFactory != null ? trustManagerFactory.getTrustManagers() : null,
-          new SecureRandom());
-
-      HttpsURLConnection.setDefaultSSLSocketFactory(ssl.getSocketFactory());
-      if (keyStoreStream != null) {
-        keyStoreStream.close();
-      }
+    return trustManagerFactory != null ? trustManagerFactory.getTrustManagers() : null;
+  }
+
+  private void configureHttpsURLConnection(SSLConfig sslConfig, boolean skipSslVerification)
+      throws Exception {
+    KeyManager[] keyManagers = getKeyManagers(sslConfig);
+    TrustManager[] trustManagers = getTrustManagers(sslConfig, skipSslVerification);
+
+    if (skipSslVerification) {
+      HttpsURLConnection.setDefaultHostnameVerifier((String s, SSLSession sslSession) -> true);
+    }
+
+    SSLContext ssl =
+        SSLContext.getInstance(SSLUtil.getSSLAlgo(SSLUtil.readArray(sslConfig.getProtocols())));
+
+    ssl.init(keyManagers, trustManagers, new SecureRandom());
+
+    HttpsURLConnection.setDefaultSSLSocketFactory(ssl.getSocketFactory());

MOV26 MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS44 INS5 INS42 MOV8 INS83 INS5 INS42 INS44 INS44 INS43 MOV8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS39 INS42 INS43 INS85 MOV60 INS54 INS41 INS43 INS85 INS43 INS42 INS39 INS42 INS42 MOV60 INS25 INS41 INS43 INS42 INS39 INS42 INS42 INS60 INS60 MOV25 MOV60 INS21 MOV21 INS42 INS8 INS8 MOV16 INS42 INS42 INS42 INS8 INS8 MOV16 INS42 INS5 INS59 INS5 INS59 UPD42 INS32 MOV25 MOV25 INS60 INS41 MOV25 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS42 MOV14 INS5 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV21 INS43 INS85 INS42 INS3 INS42 INS42 INS42 INS5 INS4 INS42 UPD42 MOV42 INS43 INS85 INS14 INS42 INS43 INS1 INS42 INS31 INS31 INS31 INS83 INS5 INS42 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS85 INS41 INS5 INS42 INS43 INS42 INS5 INS42 INS43 INS42 INS40 INS33 INS43 INS85 INS42 INS43 INS85 INS42 INS42 INS42 DEL39 DEL42