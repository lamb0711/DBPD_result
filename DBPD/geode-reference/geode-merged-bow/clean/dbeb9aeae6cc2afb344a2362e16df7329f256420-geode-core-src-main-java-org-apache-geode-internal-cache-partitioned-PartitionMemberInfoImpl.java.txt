Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Implements PartitionMemberInfo. Serializable form is used to allow JMX 
- * MBeans to use this as a remotable return type.
+ * Implements PartitionMemberInfo. Serializable form is used to allow JMX MBeans to use this as a
+ * remotable return type.
-public class PartitionMemberInfoImpl 
-implements InternalPartitionDetails, Serializable {
+public class PartitionMemberInfoImpl implements InternalPartitionDetails, Serializable {
-  public PartitionMemberInfoImpl(DistributedMember distributedMember,
-                             long configuredMaxMemory,
-                             long size,
-                             int bucketCount,
-                             int primaryCount) {
+  public PartitionMemberInfoImpl(DistributedMember distributedMember, long configuredMaxMemory,
+      long size, int bucketCount, int primaryCount) {
-  
-  public PartitionMemberInfoImpl(DistributedMember distributedMember,
-                             long configuredMaxMemory,
-                             long size,
-                             int bucketCount,
-                             int primaryCount,
-                             PRLoad prLoad,
-                             long[] bucketSizes) {
-    //TODO rebalance disabling this unit bug 39868 is fixed. 
-//    Assert.assertTrue(size >= 0);
+
+  public PartitionMemberInfoImpl(DistributedMember distributedMember, long configuredMaxMemory,
+      long size, int bucketCount, int primaryCount, PRLoad prLoad, long[] bucketSizes) {
+    // TODO rebalance disabling this unit bug 39868 is fixed.
+    // Assert.assertTrue(size >= 0);
-  
+
-  
+
-  
+
-   * Returns the backed array of bucket bytes. Index is the BID and the value
-   * is either 0 or positive. Please do not change the values! Internal use
-   * only.
+   * Returns the backed array of bucket bytes. Index is the BID and the value is either 0 or
+   * positive. Please do not change the values! Internal use only.
-  
+
-        for (int i = 0; i < this.bucketSizes.length; i ++) {
+        for (int i = 0; i < this.bucketSizes.length; i++) {
-   * hashCode is defined for this class to make
-   * sure that the before details and after details for
-   * RebalanceResults are in the same order. This makes
-   * debugging printouts easier, and it also removes
-   * discrepancies due to rounding errors when calculating
-   * the stddev in tests.
+   * hashCode is defined for this class to make sure that the before details and after details for
+   * RebalanceResults are in the same order. This makes debugging printouts easier, and it also
+   * removes discrepancies due to rounding errors when calculating the stddev in tests.
+
-    PartitionMemberInfoImpl o = (PartitionMemberInfoImpl)other;
+    PartitionMemberInfoImpl o = (PartitionMemberInfoImpl) other;
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66