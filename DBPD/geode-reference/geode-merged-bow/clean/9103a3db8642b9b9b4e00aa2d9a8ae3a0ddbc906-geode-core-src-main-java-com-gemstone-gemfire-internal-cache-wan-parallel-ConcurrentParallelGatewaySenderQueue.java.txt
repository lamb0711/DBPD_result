GEODE-1677: Events are now added to tmpQueuedEvents while shadow pr is created

+import com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySender;
+  private final AbstractGatewaySender sender;
+
-  public ConcurrentParallelGatewaySenderQueue(
+  public ConcurrentParallelGatewaySenderQueue(AbstractGatewaySender sender,
+    this.sender = sender;
-	for(int i =0; i< processors.length; i++){
-	  processors[i].addShadowPartitionedRegionForUserPR(pr);
-	 }
+    // Reset enqueuedAllTempQueueEvents if the sender is running
+    // This is done so that any events received while the shadow PR is added are queued in the tmpQueuedEvents
+    // instead of blocking the distribute call which could cause a deadlock. See GEM-801.
+    if (this.sender.isRunning()) {
+      this.sender.setEnqueuedAllTempQueueEvents(false);
+    }
+    this.sender.getLifeCycleLock().writeLock().lock();
+    try {
+      for (int i = 0; i < processors.length; i++) {
+        processors[i].addShadowPartitionedRegionForUserPR(pr);
+      }
+    } finally {
+      this.sender.getLifeCycleLock().writeLock().unlock();
+    }

INS26 INS40 INS23 INS83 INS83 INS43 INS59 INS44 INS8 INS42 INS42 INS43 INS42 INS21 INS25 INS21 INS54 INS42 INS7 INS32 INS8 INS32 MOV8 INS8 INS22 INS42 INS22 INS42 INS21 INS32 INS42 INS21 INS52 INS42 INS52 INS42 INS32 INS32 INS42 INS32 INS22 INS42 INS9 INS22 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS22 INS42 INS52 INS42