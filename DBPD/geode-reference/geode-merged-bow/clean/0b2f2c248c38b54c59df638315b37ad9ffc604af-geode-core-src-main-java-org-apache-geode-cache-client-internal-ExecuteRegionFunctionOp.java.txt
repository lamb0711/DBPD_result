GEODE-6798: Refactor client function execution (#3745)

GEODE-6798: Refactoring of client function execution logic

-  private static void execute(ExecutablePool pool, String region, String function,
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, int maxRetryAttempts, boolean isHA, boolean optimizeForWrite,
-      ExecuteRegionFunctionOpImpl op, boolean isReexecute, Set<String> failedNodes) {
+  /**
+   * Does a execute Function on a server using connections from the given pool to communicate with
+   * the server.
+   *
+   * @param pool the pool to use to communicate with the server.
+   * @param resultCollector is used to collect the results from the Server
+   * @param maxRetryAttempts Maximum number of retry attempts
+   */
+  static void execute(ExecutablePool pool,
+      ResultCollector resultCollector,
+      int maxRetryAttempts, boolean isHA,
+      ExecuteRegionFunctionOpImpl op, boolean isReexecute,
+      Set<String> failedNodes) {
-  /**
-   * Does a execute Function on a server using connections from the given pool to communicate with
-   * the server.
-   *
-   * @param pool the pool to use to communicate with the server.
-   * @param region the name of the region to do the put on
-   * @param function to be executed
-   * @param serverRegionExecutor which will return argument and filter
-   * @param resultCollector is used to collect the results from the Server
-   * @param hasResult is used to collect the results from the Server
-   * @param maxRetryAttempts Maximum number of retry attempts
-   * @param timeoutMs timeout in milliseconds
-   */
-  static void execute(ExecutablePool pool, String region, Function function,
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, int maxRetryAttempts, final int timeoutMs) {
-
-    ExecuteRegionFunctionOpImpl op = new ExecuteRegionFunctionOpImpl(region, function,
-        serverRegionExecutor, resultCollector, timeoutMs);
-
-    execute(pool, region, function.getId(), serverRegionExecutor, resultCollector, hasResult,
-        maxRetryAttempts, function.isHA(), function.optimizeForWrite(), op, false,
-        Collections.emptySet());
-  }
-
-  static void execute(ExecutablePool pool, String region, String function,
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, int maxRetryAttempts, boolean isHA, boolean optimizeForWrite,
-      final int timeoutMs) {
-
-    ExecuteRegionFunctionOpImpl op = new ExecuteRegionFunctionOpImpl(region, function,
-        serverRegionExecutor, resultCollector, hasResult, isHA, optimizeForWrite,
-        true, timeoutMs);
-
-    execute(pool, region, function, serverRegionExecutor, resultCollector, hasResult,
-        maxRetryAttempts, isHA, optimizeForWrite, op, false, Collections.emptySet());
-  }
-
-  static void reexecute(ExecutablePool pool, String region, Function function,
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, Set<String> failedNodes, int retryAttempts, final int timeoutMs) {
-
-    ExecuteRegionFunctionOpImpl op = new ExecuteRegionFunctionOpImpl(region, function,
-        serverRegionExecutor, resultCollector, timeoutMs);
-
-    execute(pool, region, function.getId(), serverRegionExecutor, resultCollector, hasResult,
-        retryAttempts, function.isHA(), function.optimizeForWrite(), op, true, failedNodes);
-  }
-
-  static void reexecute(ExecutablePool pool, String region, String function,
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, Set<String> failedNodes, int retryAttempts, boolean isHA,
-      boolean optimizeForWrite, final int timeoutMs) {
-
-    ExecuteRegionFunctionOpImpl op = new ExecuteRegionFunctionOpImpl(region, function,
-        serverRegionExecutor, resultCollector, hasResult, isHA,
-        optimizeForWrite, true, timeoutMs);
-
-    execute(pool, region, function, serverRegionExecutor, resultCollector, hasResult,
-        retryAttempts, isHA, optimizeForWrite, op, true, failedNodes);
-  }

INS29 MOV65 MOV65 MOV65 MOV65 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL9 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL9 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL32 DEL21 DEL8 DEL31