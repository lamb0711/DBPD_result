Merge branch 'release/1.0.0-incubating.M1'

- *  =========================================================================
- *  Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *  ========================================================================
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-import com.gemstone.gemfire.management.DiskBackupResult;
+  public String[] getHDFSStores() {
+    return bridge.getHDFSStores();
+  }
+  
+  @Override
-  public long getMaxMemory() {
-    return bridge.getMaxMemory();
-  }
-  
-  @Override
-  public long getFreeMemory() {
-    return bridge.getFreeMemory();
-  }
-  
-  @Override
-  public long getUsedMemory() {
-    return bridge.getUsedMemory();
-  }
-
-  @Override
+  @Override
+  public int getOffHeapObjects() {
+    return bridge.getOffHeapObjects();
+  }
+
+  @Override
+  public long getOffHeapMaxMemory() {
+    return bridge.getOffHeapMaxMemory();
+  }
+
+  @Override
+  public long getOffHeapFreeMemory() {
+    return bridge.getOffHeapFreeMemory();
+  }
+
+  @Override
+  public long getOffHeapUsedMemory() {
+    return bridge.getOffHeapUsedMemory();
+  }
+
+  @Override
+  public int getOffHeapFragmentation() {
+    return bridge.getOffHeapFragmentation();
+  }
+
+  @Override
+  public long getOffHeapCompactionTime() {
+    return bridge.getOffHeapCompactionTime();
+  }    
+
+  @Override
+  public long getMaxMemory() {
+    return bridge.getMaxMemory();
+ }
-}
+  @Override
+  public long getFreeMemory() {
+    return bridge.getFreeMemory();
+  }
+  
+  @Override
+  public long getUsedMemory() {
+    return bridge.getUsedMemory();
+  }
+}

MOV31 MOV31 MOV31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS5 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS43 INS85 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26