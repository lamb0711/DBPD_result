GEODE-1675: Session Management modules need to be updated to work with Tomcat 8.5.4

* Extracted DeltaSessionInterface to allow shared code between classes for Tomcat 6,7,8
* Added new test classes

-import org.apache.catalina.LifecycleListener;
+import org.apache.catalina.Pipeline;
-import org.apache.catalina.util.LifecycleSupport;
-   * The <code>LifecycleSupport</code> for this component.
-   */
-  protected LifecycleSupport lifecycle = new LifecycleSupport(this);
-
-  /**
+  public void setMaxInactiveInterval(final int interval) {
+    super.setMaxInactiveInterval(interval);
+  }
+
+  @Override
-    return getContainer().getName().replace("/", "");
+    return getContextName().replace("/", "");
-    DeltaSession session = (DeltaSession) getSessionCache().getSession(id);
+    DeltaSessionInterface session = (DeltaSessionInterface) getSessionCache().getSession(id);
-        !getContainer().getName().equals(session.getContextName())) {
+        !getContextName().equals(session.getContextName())) {
-          getContainer().getName() + " != " + session.getContextName());
+          getContextName() + " != " + session.getContextName());
-        DeltaSession ds = (DeltaSession) session;
+        DeltaSessionInterface ds = (DeltaSessionInterface) session;
-    DeltaSession ds = (DeltaSession) session;
+    DeltaSessionInterface ds = (DeltaSessionInterface) session;
-    ContextMapper.addContext(getContainer().getName(), this);
+    ContextMapper.addContext(getContextName(), this);
-    ContextMapper.removeContext(getContainer().getName());
+    ContextMapper.removeContext(getContextName());
-    getContainer().getPipeline().addValve(jvmRouteBinderValve);
+    getPipeline().addValve(jvmRouteBinderValve);
+  }
+
+  protected Pipeline getPipeline() {
+    return getContainer().getPipeline();
-      getContainer().getPipeline().removeValve(jvmRouteBinderValve);
+      getPipeline().removeValve(jvmRouteBinderValve);
-    getContainer().getPipeline().addValve(commitSessionValve);
+    getPipeline().addValve(commitSessionValve);
-      getContainer().getPipeline().removeValve(commitSessionValve);
+      getPipeline().removeValve(commitSessionValve);
-   * Add a lifecycle event listener to this component.
-   *
-   * @param listener The listener to add
-   */
-  @Override
-  public void addLifecycleListener(LifecycleListener listener) {
-    this.lifecycle.addLifecycleListener(listener);
-  }
-
-  /**
-   * Get the lifecycle listeners associated with this lifecycle. If this Lifecycle has no listeners registered, a
-   * zero-length array is returned.
-   */
-  @Override
-  public LifecycleListener[] findLifecycleListeners() {
-    return this.lifecycle.findLifecycleListeners();
-  }
-
-  /**
-   * Remove a lifecycle event listener from this component.
-   *
-   * @param listener The listener to remove
-   */
-  @Override
-  public void removeLifecycleListener(LifecycleListener listener) {
-    this.lifecycle.removeLifecycleListener(listener);
-  }
-
-  /**
-    Context context;
-    if (getContainer() instanceof Context) {
-      context = (Context) getContainer();
-    } else {
-      getLogger().error("Unable to unload sessions - container is of type " +
-          getContainer().getClass().getName() + " instead of StandardContext");
+    Context context = getTheContext();
+    if (context == null) {
-    ArrayList<StandardSession> list = new ArrayList<StandardSession>();
+    ArrayList<DeltaSessionInterface> list = new ArrayList<DeltaSessionInterface>();
-      DeltaSession session = (DeltaSession) findSession(id);
+      DeltaSessionInterface session = (DeltaSessionInterface) findSession(id);
-      for (StandardSession session : list) {
-        session.passivate();
-        session.writeObjectData(oos);
+      for (DeltaSessionInterface session : list) {
+        if (session instanceof StandardSession) {
+          StandardSession standardSession = (StandardSession) session;
+          standardSession.passivate();
+          standardSession.writeObjectData(oos);
+        }
+        else {
+          //All DeltaSessionInterfaces as of Geode 1.0 should be based on StandardSession
+          throw new IOException("Session should be of type StandardSession");
+        }
-      for (StandardSession session : list) {
+      for (DeltaSessionInterface session : list) {
-    Context context;
-    if (getContainer() instanceof Context) {
-      context = (Context) getContainer();
-    } else {
-      getLogger().error("Unable to unload sessions - container is of type " +
-          getContainer().getClass().getName() + " instead of StandardContext");
+    Context context = getTheContext();
+    if (context == null) {
-      if (container != null) {
-        loader = container.getLoader();
+      if (getTheContext() != null) {
+        loader = getTheContext().getLoader();
-        DeltaSession existingSession = (DeltaSession) region.get(session.getId());
+        DeltaSessionInterface existingSession = (DeltaSessionInterface) region.get(session.getId());
-        .append(getContainer())
+        .append(getTheContext())
+
+  protected String getContextName() {
+    return getTheContext().getName();
+  }
+
+  public Context getTheContext() {
+    if (getContainer() instanceof Context) {
+      return  (Context) getContainer();
+    } else {
+      getLogger().error("Unable to unload sessions - container is of type " +
+                        getContainer().getClass().getName() + " instead of StandardContext");
+      return null;
+    }
+  }

MOV26 MOV31 MOV31 MOV31 UPD40 INS31 MOV78 INS83 INS39 INS42 INS44 INS8 UPD83 INS43 INS42 UPD83 INS43 UPD42 INS43 INS42 INS83 INS39 INS42 INS21 UPD42 MOV42 INS41 INS25 UPD42 MOV42 UPD42 MOV42 MOV25 INS48 UPD43 UPD43 MOV32 INS27 UPD74 MOV74 INS27 INS8 INS42 INS42 UPD42 UPD42 INS32 INS32 INS42 INS33 UPD43 INS32 INS42 INS33 INS41 INS32 UPD42 INS41 UPD42 UPD43 UPD43 UPD42 UPD42 INS42 INS42 UPD42 UPD74 MOV74 UPD43 INS8 INS42 INS42 MOV11 INS33 UPD42 UPD42 INS43 UPD42 INS43 INS25 UPD43 INS32 UPD42 UPD43 INS42 UPD43 INS42 INS62 INS8 INS8 UPD42 INS42 UPD43 UPD42 UPD42 UPD42 INS42 MOV43 INS60 MOV21 MOV21 INS53 UPD42 UPD43 INS43 INS59 INS14 INS32 UPD43 UPD42 INS42 INS42 INS11 UPD42 UPD42 INS43 INS45 UPD42 MOV42 UPD42 MOV43 INS42 INS42 UPD42 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL14 DEL59 DEL23 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL39 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL8 DEL42 DEL66 DEL66 DEL65 DEL29 DEL42 DEL78 DEL43 DEL85 DEL5 DEL52 DEL42 DEL22 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL78 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21