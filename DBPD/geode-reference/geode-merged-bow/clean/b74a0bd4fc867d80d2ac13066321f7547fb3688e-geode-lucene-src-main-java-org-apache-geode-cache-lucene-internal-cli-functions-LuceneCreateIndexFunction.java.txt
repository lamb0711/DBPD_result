GEODE-2595: Change LuceneService.createIndex to use a factory

Changing LuceneService.createIndex to createIndexFactory and
using a factory pattern to create the index.

This allows us to introduce new options to the index create without
breaking backwards compatibility in the future.

-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-
+import org.apache.geode.cache.lucene.LuceneIndexFactory;
+      final LuceneIndexFactory indexFactory = service.createIndexFactory();
-        service.createIndex(indexInfo.getIndexName(), indexInfo.getRegionPath(), fields);
+        for (String field : fields) {
+          indexFactory.addField(field);
+        }
-        Map<String, Analyzer> fieldAnalyzer = new HashMap<>();
-          fieldAnalyzer.put(fields[i], analyzer);
+          indexFactory.addField(fields[i], analyzer);
-        service.createIndex(indexInfo.getIndexName(), indexInfo.getRegionPath(), fieldAnalyzer);
+      indexFactory.create(indexInfo.getIndexName(), indexInfo.getRegionPath());

MOV26 UPD40 INS60 MOV21 INS83 INS43 INS59 INS8 INS42 INS42 INS32 INS70 UPD42 UPD42 INS42 INS42 INS44 INS42 INS8 MOV43 INS42 MOV21 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL8 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42