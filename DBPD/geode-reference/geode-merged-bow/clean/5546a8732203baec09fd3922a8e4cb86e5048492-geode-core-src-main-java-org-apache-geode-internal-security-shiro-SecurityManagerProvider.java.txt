GEODE-2632: consolidate different types of SecurityService

* combine EnabledSecurityService and CustomSecurityService into IntegratedSecurityService
* combine DisabledSecurityService and LegacySecurityService
* combine ConfigInitializer and RealmInitializer
* provide default impelementations of SecurityService
* consolidate SecurityService creation.

-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.security.SecurityManager;
+import org.apache.shiro.config.Ini;
+import org.apache.shiro.config.IniSecurityManagerFactory;
-public class RealmInitializer {
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.security.SecurityManager;
+
+public class SecurityManagerProvider {
-  public RealmInitializer() {
-    // nothing
+  private org.apache.shiro.mgt.SecurityManager shiroManager;
+  private SecurityManager securityManager;
+
+  public SecurityManagerProvider() {
+    shiroManager = SecurityUtils.getSecurityManager();
-  public void initialize(final SecurityManager securityManager) {
+  public SecurityManagerProvider(String shiroConfig) {
+    this.securityManager = null;
+
+    IniSecurityManagerFactory factory = new IniSecurityManagerFactory("classpath:" + shiroConfig);
+    // we will need to make sure that shiro uses a case sensitive permission resolver
+    Ini.Section main = factory.getIni().addSection("main");
+    main.put("geodePermissionResolver", GeodePermissionResolver.class.getName());
+    if (!main.containsKey("iniRealm.permissionResolver")) {
+      main.put("iniRealm.permissionResolver", "$geodePermissionResolver");
+    }
+    shiroManager = factory.getInstance();
+  }
+
+
+  public SecurityManagerProvider(SecurityManager securityManager) {
+    this.securityManager = securityManager;
+
-    DefaultSecurityManager shiroManager = new DefaultSecurityManager(realm);
-    SecurityUtils.setSecurityManager(shiroManager);
-    increaseShiroGlobalSessionTimeout(shiroManager);
+    shiroManager = new DefaultSecurityManager(realm);
+    increaseShiroGlobalSessionTimeout((DefaultSecurityManager) shiroManager);
+
+  public org.apache.shiro.mgt.SecurityManager getShiroSecurityManager() {
+    return shiroManager;
+  }
+
+  public SecurityManager getSecurityManager() {
+    return securityManager;
+  }

MOV26 MOV26 INS26 INS26 INS40 INS40 INS42 INS23 INS23 INS31 INS31 INS31 INS83 INS43 INS59 INS83 MOV43 INS59 INS83 INS42 INS8 INS42 INS44 INS8 UPD42 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS40 INS42 INS42 INS21 INS43 INS42 INS21 INS60 INS60 INS21 INS25 INS21 INS43 INS21 INS21 INS40 INS41 INS42 INS41 INS7 INS42 INS7 INS43 INS59 INS43 INS59 INS32 INS38 INS8 INS7 INS42 INS7 INS7 INS42 INS42 INS42 INS32 INS22 INS33 INS42 INS42 INS14 INS40 INS42 INS32 INS42 INS42 INS45 INS32 INS32 INS21 INS42 INS32 INS22 INS42 INS42 MOV14 INS11 INS42 INS42 INS52 INS42 INS43 INS27 INS32 INS42 INS45 INS57 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS52 INS42 MOV43 INS42 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS42 INS45 INS45 INS42 DEL42 DEL42 DEL8 DEL39 DEL83 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42