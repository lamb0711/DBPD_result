Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class WanLocatorDiscovererImpl implements WanLocatorDiscoverer{
+public class WanLocatorDiscovererImpl implements WanLocatorDiscoverer {
-  
+
-  
+
-    
+
-  
+
-  public void discover(int port,
-                       DistributionConfigImpl config,
-                       LocatorMembershipListener locatorListener,
-                       final String hostnameForClients) {
-    final LoggingThreadGroup loggingThreadGroup = LoggingThreadGroup
-        .createThreadGroup("WAN Locator Discovery Logger Group", logger);
+  public void discover(int port, DistributionConfigImpl config,
+      LocatorMembershipListener locatorListener, final String hostnameForClients) {
+    final LoggingThreadGroup loggingThreadGroup =
+        LoggingThreadGroup.createThreadGroup("WAN Locator Discovery Logger Group", logger);
-        final Thread thread = new Thread(loggingThreadGroup, task,
-            "WAN Locator Discovery Thread");
+        final Thread thread = new Thread(loggingThreadGroup, task, "WAN Locator Discovery Thread");
-  private void exchangeLocalLocators(int port,
-                                     DistributionConfigImpl config,
-                                     LocatorMembershipListener locatorListener,
-                                     final String hostnameForClients) {
+  private void exchangeLocalLocators(int port, DistributionConfigImpl config,
+      LocatorMembershipListener locatorListener, final String hostnameForClients) {
-    }
-    else {
+    } else {
-    StringTokenizer locatorsOnThisVM = new StringTokenizer(
-        config.getLocators(), ",");
+    StringTokenizer locatorsOnThisVM = new StringTokenizer(config.getLocators(), ",");
-      DistributionLocatorId localLocatorId = new DistributionLocatorId(
-          locatorsOnThisVM.nextToken());
+      DistributionLocatorId localLocatorId =
+          new DistributionLocatorId(locatorsOnThisVM.nextToken());
-        LocatorDiscovery localDiscovery = new LocatorDiscovery(this, localLocatorId, request, locatorListener);
-        LocatorDiscovery.LocalLocatorDiscovery localLocatorDiscovery = localDiscovery.new LocalLocatorDiscovery();
+        LocatorDiscovery localDiscovery =
+            new LocatorDiscovery(this, localLocatorId, request, locatorListener);
+        LocatorDiscovery.LocalLocatorDiscovery localLocatorDiscovery =
+            localDiscovery.new LocalLocatorDiscovery();
-  
+
-   * For WAN 70 Exchange the locator information across the distributed systems
-   * (sites)
+   * For WAN 70 Exchange the locator information across the distributed systems (sites)
-  private void exchangeRemoteLocators(int port,
-                                      DistributionConfigImpl config,
-                                      LocatorMembershipListener locatorListener,
-                                      final String hostnameForClients) {
+  private void exchangeRemoteLocators(int port, DistributionConfigImpl config,
+      LocatorMembershipListener locatorListener, final String hostnameForClients) {
-      StringTokenizer remoteLocators = new StringTokenizer(
-          remoteDistributedSystems, ",");
+      StringTokenizer remoteLocators = new StringTokenizer(remoteDistributedSystems, ",");
-        DistributionLocatorId remoteLocatorId = new DistributionLocatorId(
-            remoteLocators.nextToken());
-        LocatorDiscovery localDiscovery = new LocatorDiscovery(this, remoteLocatorId,
-            request, locatorListener);
-        LocatorDiscovery.RemoteLocatorDiscovery remoteLocatorDiscovery = localDiscovery.new RemoteLocatorDiscovery();
+        DistributionLocatorId remoteLocatorId =
+            new DistributionLocatorId(remoteLocators.nextToken());
+        LocatorDiscovery localDiscovery =
+            new LocatorDiscovery(this, remoteLocatorId, request, locatorListener);
+        LocatorDiscovery.RemoteLocatorDiscovery remoteLocatorDiscovery =
+            localDiscovery.new RemoteLocatorDiscovery();
-  
-  private RemoteLocatorJoinRequest buildRemoteDSJoinRequest(int port,
-                                                            DistributionConfigImpl config,
-                                                            final String hostnameForClients) {
+
+  private RemoteLocatorJoinRequest buildRemoteDSJoinRequest(int port, DistributionConfigImpl config,
+      final String hostnameForClients) {
-    }
-    else {
+    } else {
-    RemoteLocatorJoinRequest request = new RemoteLocatorJoinRequest(
-        config.getDistributedSystemId(), locatorId, "");
+    RemoteLocatorJoinRequest request =
+        new RemoteLocatorJoinRequest(config.getDistributedSystemId(), locatorId, "");
-  
+

UPD66 DEL66