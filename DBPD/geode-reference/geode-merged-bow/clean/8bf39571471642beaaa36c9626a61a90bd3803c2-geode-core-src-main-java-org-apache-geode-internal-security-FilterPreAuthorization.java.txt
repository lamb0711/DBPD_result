Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An authorization implementation for testing that changes a string value in
- * pre-operation phase to add an integer denoting which <code>Principal</code>s
- * would be allowed to get that object.
+ * An authorization implementation for testing that changes a string value in pre-operation phase to
+ * add an integer denoting which <code>Principal</code>s would be allowed to get that object.
-    Instantiator.register(new Instantiator(ObjectWithAuthz.class,
-        ObjectWithAuthz.CLASSID) {
+    Instantiator.register(new Instantiator(ObjectWithAuthz.class, ObjectWithAuthz.CLASSID) {
-  public void init(Principal principal, DistributedMember remoteMember,
-      Cache cache) throws NotAuthorizedException {
+  public void init(Principal principal, DistributedMember remoteMember, Cache cache)
+      throws NotAuthorizedException {
-      PutOperationContext createContext = (PutOperationContext)context;
-//      byte[] serializedValue = createContext.getSerializedValue();
+      PutOperationContext createContext = (PutOperationContext) context;
+      // byte[] serializedValue = createContext.getSerializedValue();
-      }
-      else {
+      } else {
-          serializedValue = (byte[])value;
+          serializedValue = (byte[]) value;
-        }
-        else {
-          ObjectWithAuthz authzObj = new ObjectWithAuthz(value, Integer.valueOf(
-              value.hashCode()));
+        } else {
+          ObjectWithAuthz authzObj = new ObjectWithAuthz(value, Integer.valueOf(value.hashCode()));
-        InternalDataSerializer.writeUserDataSerializableHeader(
-            ObjectWithAuthz.CLASSID, hos);
+        InternalDataSerializer.writeUserDataSerializableHeader(ObjectWithAuthz.CLASSID, hos);
-      if (this.logger.fineEnabled()) 
-      this.logger.fine("FilterPreAuthorization: added authorization "
-          + "info for key: " + createContext.getKey());
-    }
-    else if (opCode.isPutAll()) {
-      PutAllOperationContext createContext = (PutAllOperationContext)context;
+      if (this.logger.fineEnabled())
+        this.logger.fine("FilterPreAuthorization: added authorization " + "info for key: "
+            + createContext.getKey());
+    } else if (opCode.isPutAll()) {
+      PutAllOperationContext createContext = (PutAllOperationContext) context;
-        mapEntry = (Map.Entry)iterator.next();
-        String currkey = (String)mapEntry.getKey();
+        mapEntry = (Map.Entry) iterator.next();
+        String currkey = (String) mapEntry.getKey();
-          authCode = (int) valStr.charAt(valStr.length()-1);
+          authCode = (int) valStr.charAt(valStr.length() - 1);
-        if (this.logger.fineEnabled()) 
-        this.logger.fine("FilterPreAuthorization: putAll: added authorization "
-            + "info for key: " + currkey);
+        if (this.logger.fineEnabled())
+          this.logger.fine(
+              "FilterPreAuthorization: putAll: added authorization " + "info for key: " + currkey);
-  public void close() {
-  }
+  public void close() {}

UPD66 UPD66 DEL66