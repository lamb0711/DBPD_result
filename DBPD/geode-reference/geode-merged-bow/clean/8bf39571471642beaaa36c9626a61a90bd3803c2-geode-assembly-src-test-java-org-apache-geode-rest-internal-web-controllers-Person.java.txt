Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-* The Person class is an abstraction modeling a person.
-* <p/>
-* @since GemFire 8.0
-*/
+ * The Person class is an abstraction modeling a person.
+ * <p/>
+ * 
+ * @since GemFire 8.0
+ */
-  
+
-  
-  private  Long id;
-  
+
+  private Long id;
+
-  
+
-  
+
-  
-  public Person() {
-  }
-  
+
+  public Person() {}
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-      || (ObjectUtils.equals(this.getBirthDate(), that.getBirthDate())
-      && ObjectUtils.equals(this.getLastName(), that.getLastName())
-      && ObjectUtils.equals(this.getFirstName(), that.getFirstName())));
+        || (ObjectUtils.equals(this.getBirthDate(), that.getBirthDate())
+            && ObjectUtils.equals(this.getLastName(), that.getLastName())
+            && ObjectUtils.equals(this.getFirstName(), that.getFirstName())));
-  
+
-  
+
-    buffer.append(", birthDate = ").append(DateTimeUtils.format(getBirthDate(), DOB_FORMAT_PATTERN));
+    buffer.append(", birthDate = ")
+        .append(DateTimeUtils.format(getBirthDate(), DOB_FORMAT_PATTERN));
-  
+
-    
+
-  
+
-    gender = (Gender)reader.readObject("gender");
+    gender = (Gender) reader.readObject("gender");
-    
+

