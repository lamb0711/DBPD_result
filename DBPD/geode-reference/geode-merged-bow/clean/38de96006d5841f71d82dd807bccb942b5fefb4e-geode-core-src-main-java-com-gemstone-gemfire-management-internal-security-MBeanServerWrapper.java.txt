GEODE-17: refactor ManagementIntercepter and MBeanServerWrapper

+import com.gemstone.gemfire.cache.operations.OperationContext.OperationCode;
+import com.gemstone.gemfire.security.GemFireSecurityException;
+
+import javax.management.Descriptor;
+import javax.management.MBeanAttributeInfo;
+import javax.management.MBeanOperationInfo;
-  private ResourceOperationContext doAuthorization(ObjectName name, String methodName, Object[] methodParams){
-    return interceptor.authorize(name,methodName, methodParams);
+  private void doAuthorization(ResourceOperationContext context){
+    interceptor.authorize(context);
-  private void doAuthorizationPost(ObjectName name, String methodName, ResourceOperationContext context, Object result){
-    interceptor.postAuthorize(name,methodName,context,result);
+  private void doAuthorizationPost(ResourceOperationContext context){
+    interceptor.postAuthorize(context);
-    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name});
-    ObjectInstance result = mbs.createMBean(className, name);
-    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
-    return result;
+    throw new SecurityException(ACCESS_DENIED_MESSAGE);
-    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name});
-    ObjectInstance result = mbs.createMBean(className, name, loaderName);
-    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
-    return result;
+    throw new SecurityException(ACCESS_DENIED_MESSAGE);
-    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name, params});
-    ObjectInstance result = mbs.createMBean(className,name,params,signature);
-    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
-    return result;
+    throw new SecurityException(ACCESS_DENIED_MESSAGE);
-    ResourceOperationContext ctx = doAuthorization(name, CREATE_MBEAN, new Object[]{name});
-    ObjectInstance result = mbs.createMBean(className, name, loaderName, params, signature);
-    doAuthorizationPost(name, CREATE_MBEAN, ctx, result);
-    return result;
+    throw new SecurityException(ACCESS_DENIED_MESSAGE);
-    ResourceOperationContext ctx = doAuthorization(name, REGISTER_MBEAN, new Object[]{name});
-    ObjectInstance result = mbs.registerMBean(object, name);
-    doAuthorizationPost(name, REGISTER_MBEAN, ctx, result);
-    return result;
+    throw new SecurityException(ACCESS_DENIED_MESSAGE);
-    ResourceOperationContext ctx = doAuthorization(name, UNREGISTER_MBEAN, new Object[]{});
-    mbs.unregisterMBean(name);
-    doAuthorizationPost(name, UNREGISTER_MBEAN, ctx, null);
+    throw new SecurityException(ACCESS_DENIED_MESSAGE);
+    ResourceOperationContext ctx = new ResourceOperationContext(Resource.MBEAN, OperationCode.QUERY);
-    ResourceOperationContext ctx = doAuthorization(name, GET_ATTRIBUTE,  new Object[]{attribute});
+    ResourceOperationContext ctx = getAttributeContext(name, attribute);
+    doAuthorization(ctx);
-    doAuthorizationPost(name, GET_ATTRIBUTE, ctx, result);
+    ctx.setPostOperationResult(result);
+    doAuthorizationPost(ctx);
-    ResourceOperationContext ctx = doAuthorization(name, GET_ATTRIBUTES, new Object[]{attributes});
-    AttributeList result = mbs.getAttributes(name, attributes);
-    doAuthorizationPost(name, GET_ATTRIBUTES, ctx, result);
-    return result;
+    AttributeList results = new AttributeList();
+    for(String attribute:attributes){
+      try {
+        Object value = getAttribute(name, attribute);
+        Attribute att = new Attribute(attribute, value);
+        results.add(att);
+      } catch (Exception e) {
+        throw new GemFireSecurityException("error getting value of "+attribute+" from "+name, e);
+      }
+    }
+    return results;
-    ResourceOperationContext ctx = doAuthorization(name, SET_ATTRIBUTE, new Object[]{attribute});
+    ResourceOperationContext ctx = getAttributeContext(name, attribute.getName());
+    doAuthorization(ctx);
-    doAuthorizationPost(name, SET_ATTRIBUTE, ctx, null);
+  }
+
+  // TODO: cache this
+  private ResourceOperationContext getAttributeContext(ObjectName name, String attribute)
+      throws InstanceNotFoundException, ReflectionException {
+    MBeanInfo beanInfo = null;
+    try {
+      beanInfo = mbs.getMBeanInfo(name);
+    } catch (IntrospectionException e) {
+      throw new GemFireSecurityException("error getting beanInfo of "+name);
+    }
+    MBeanAttributeInfo[] attributeInfos = beanInfo.getAttributes();
+    for(MBeanAttributeInfo attributeInfo:attributeInfos){
+      if(attributeInfo.getName().equals(attribute)){
+        // found the operationInfo of this method on the bean
+        Descriptor descriptor = attributeInfo.getDescriptor();
+        Resource resource = (Resource)descriptor.getFieldValue("resource");
+        OperationCode operationCode = (OperationCode)descriptor.getFieldValue("operation");
+        if(resource!=null && operationCode!=null){
+          return new ResourceOperationContext(resource, operationCode);
+        }
+      }
+    }
+    return new ResourceOperationContext(Resource.DEFAULT, OperationCode.LIST_DS);
+  }
+
+  // TODO: cache this
+  private ResourceOperationContext getOperationContext(ObjectName name, String operationName)
+      throws InstanceNotFoundException, ReflectionException {
+    MBeanInfo beanInfo = null;
+    try {
+      beanInfo = mbs.getMBeanInfo(name);
+    } catch (IntrospectionException e) {
+      throw new GemFireSecurityException("error getting beanInfo of "+name);
+    }
+    MBeanOperationInfo[] opInfos = beanInfo.getOperations();
+    for(MBeanOperationInfo opInfo:opInfos){
+      if(opInfo.getName().equals(operationName)){
+        // found the operationInfo of this method on the bean
+        Descriptor descriptor = opInfo.getDescriptor();
+        String resource = (String)descriptor.getFieldValue("resource");
+        String operationCode = (String)descriptor.getFieldValue("operation");
+        if(resource!=null && operationCode!=null){
+          return new ResourceOperationContext(resource, operationCode);
+        }
+      }
+    }
+    return new ResourceOperationContext(Resource.DEFAULT, OperationCode.LIST_DS);
-    ResourceOperationContext ctx = doAuthorization(name, SET_ATTRIBUTES, new Object[]{attributes});
-    AttributeList result = mbs.setAttributes(name, attributes);
-    doAuthorizationPost(name, SET_ATTRIBUTES, ctx, result);
-    return result;
+    // call setAttribute instead to use the authorization logic
+    for(Attribute attribute:attributes.asList()){
+      try {
+        setAttribute(name, attribute);
+      } catch (Exception e) {
+        throw new GemFireSecurityException("error setting attribute "+attribute+" of "+name);
+      }
+    }
+    return attributes;
-    ResourceOperationContext ctx = doAuthorization(name, operationName, new Object[]{params, signature});
+    ResourceOperationContext ctx = getOperationContext(name, operationName);
+    doAuthorization(ctx);
-    doAuthorizationPost(name, operationName, ctx, result);
+    ctx.setPostOperationResult(result);
+    doAuthorizationPost(ctx);

INS26 INS26 INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS39 MOV78 MOV83 MOV43 MOV42 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 INS8 MOV78 INS83 MOV43 INS42 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 INS8 MOV78 INS83 MOV43 INS42 MOV44 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 INS8 MOV78 INS83 MOV43 INS42 MOV44 MOV44 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 INS8 MOV78 INS83 MOV43 INS42 MOV44 MOV44 MOV43 MOV43 MOV43 INS8 MOV78 INS83 INS39 INS42 MOV44 MOV43 MOV43 INS8 MOV78 MOV43 UPD42 MOV44 MOV44 MOV43 MOV43 MOV21 UPD83 MOV83 MOV43 UPD42 MOV42 MOV44 INS44 INS43 INS43 INS8 UPD83 MOV83 MOV43 UPD42 MOV42 MOV44 INS44 INS43 INS43 INS8 INS43 UPD42 INS21 INS53 INS53 INS53 INS53 INS53 INS53 INS60 INS21 INS21 INS21 INS60 INS70 INS43 INS42 INS42 UPD42 MOV42 INS60 INS54 INS60 INS70 INS41 INS43 INS42 INS42 UPD42 MOV42 MOV60 INS54 INS60 INS70 INS41 INS70 INS21 INS21 INS21 UPD42 MOV42 INS32 INS14 INS14 INS14 INS14 INS14 INS14 MOV43 INS59 MOV43 INS32 INS32 INS32 MOV43 INS59 INS44 INS42 INS8 UPD42 MOV43 INS42 INS43 INS59 INS8 INS12 INS5 INS59 INS44 INS42 INS8 INS14 INS42 UPD43 INS8 INS12 INS5 INS59 INS44 INS42 INS8 INS14 INS44 INS32 INS8 UPD42 MOV43 INS32 INS32 INS32 MOV42 MOV42 UPD42 MOV42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS14 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 MOV42 INS42 INS42 INS42 INS14 INS43 INS42 INS54 UPD42 INS42 INS42 INS33 INS21 INS44 INS8 INS43 INS85 INS42 INS32 INS43 INS42 INS25 MOV43 INS40 INS40 UPD42 INS42 INS33 MOV21 INS44 INS8 UPD43 MOV43 MOV85 INS42 INS32 INS43 INS42 INS25 MOV43 INS40 INS40 INS43 INS42 INS42 INS42 INS54 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 MOV42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 MOV43 INS40 INS40 UPD42 INS42 MOV43 INS42 INS8 INS12 UPD42 INS32 INS7 INS43 INS42 INS53 INS42 UPD42 MOV42 INS42 INS42 INS32 INS8 INS7 INS43 INS42 INS53 UPD42 INS42 INS42 INS42 INS32 INS8 INS42 INS8 INS12 UPD42 MOV60 MOV60 INS21 INS44 INS8 UPD42 MOV42 INS42 INS42 INS32 INS42 INS14 INS32 UPD42 MOV42 INS42 INS60 INS60 INS60 INS25 INS42 INS32 INS42 INS14 INS32 UPD42 MOV42 UPD42 MOV42 MOV60 MOV60 INS60 INS25 INS21 INS44 INS8 MOV43 UPD43 INS32 INS43 INS42 INS53 MOV42 UPD42 MOV42 MOV42 INS43 INS27 UPD42 MOV42 UPD42 MOV42 UPD43 MOV43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS27 UPD42 MOV42 UPD42 MOV42 INS43 MOV43 INS43 INS59 INS27 INS8 INS32 INS43 INS42 INS53 UPD42 UPD42 UPD42 INS14 INS42 INS42 INS42 INS42 INS14 INS42 INS45 INS42 UPD42 UPD42 MOV42 INS32 INS42 INS42 INS11 INS42 INS42 INS11 INS27 INS27 MOV41 INS42 INS45 INS42 INS42 UPD42 UPD42 INS11 INS42 INS42 INS11 INS27 INS27 MOV41 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 INS14 UPD42 INS42 INS43 INS42 INS42 INS43 INS27 INS42 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS43 INS32 INS42 INS33 INS42 INS33 INS14 UPD42 UPD42 MOV43 INS32 INS43 INS32 INS42 INS33 INS42 INS33 INS14 INS43 INS27 INS42 INS42 INS45 INS42 INS45 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS45 INS42 UPD42 MOV42 INS42 INS45 MOV43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS45 INS42 UPD42 MOV42 UPD42 MOV42 INS45 MOV43 INS42 INS42 INS42 INS45 INS42 INS45 INS42 DEL42 DEL44 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL41 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL42 DEL42 DEL5 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL33 DEL32 DEL21 DEL8 DEL31 DEL42 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL32 DEL21 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL42 DEL33 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL42 DEL32 DEL21