GEODE-3314 - Refactoring of DLockService to improve developer QoL. This now closes #683

* Write characterization tests for DLockService.
* Remove debugging code.
* Remove dead code.
* Remove comments.
* Extract the local lock granting into a separate function.

Between the characterization tests we've written and the existing DUnit
tests, the coverage should be fairly adequate.

Signed-off-by: Hitesh Khamesra <hkameshra@pivotal.io>
Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>

-   * Number of threads currently using this lock token.
+   * Number of usages of this lock token. usageCount = recursion + (# of threads waiting for this
+   * lock). It's weird, I know.
-   * Destroys this lock token. Caller must synchronize on this lock token.
+   * Destroys this lock token.
-    // checkDestroyed();
-  synchronized boolean grantLock(long newLeaseExpireTime, int newLeaseId, int newRecursion,
+  synchronized void grantLock(long newLeaseExpireTime, int newLeaseId, int newRecursion,
-    checkForExpiration();
+    checkForExpiration(); // TODO: this should throw.
-
-    return true;

UPD39 UPD66 INS66 UPD66 DEL9 DEL41