GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4781)

* Revert "Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)"

This reverts commit f0982cdedf1b122f734919d0647434cca33ec254.

* Fix sporadic test failures for concurrent HSetNX
+import java.util.Map;
-import org.apache.geode.cache.Region;
+import org.apache.geode.cache.TimeoutException;
+import org.apache.geode.redis.internal.AutoCloseableLock;
-import org.apache.geode.redis.internal.RedisDataType;
+/**
+ * <pre>
+ * Implements the HLEN command to return the count of fields in the hash stored with a given key.
+ *
+ * Examples:
+ *
+ * redis> HSET myhash field1 "Hello"
+ * (integer) 1
+ * redis> HSET myhash field2 "World"
+ * (integer) 1
+ * redis> HLEN myhash
+ * </pre>
+ */
-    checkDataType(key, RedisDataType.REDIS_HASH, context);
+    final int size;
-    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
+    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
+      Map<ByteArrayWrapper, ByteArrayWrapper> map = getMap(context, key);
-    if (keyRegion == null) {
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
+      if (map == null) {
+        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
+        return;
+      }
+
+      size = map.size();
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+      command.setResponse(
+          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
+      return;
+    } catch (TimeoutException e) {
+      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
+          "Timeout acquiring lock. Please try again."));
-    final int regionSize = keyRegion.size();
-
-    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), regionSize));
+    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), size));

MOV26 INS26 INS40 UPD40 UPD40 INS29 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS60 INS54 INS21 INS83 INS39 INS59 INS58 INS8 INS12 INS12 INS32 INS42 INS43 INS59 MOV60 MOV25 INS21 INS44 INS8 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS32 UPD74 INS7 INS43 INS42 INS21 MOV21 INS41 INS43 INS42 MOV21 INS41 UPD42 MOV42 INS42 INS32 MOV42 INS42 INS42 INS42 UPD43 UPD42 UPD42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS32 INS42 UPD42 UPD42 INS32 INS42 INS42 UPD42 INS45 INS42 INS42 INS32 INS45 MOV42 INS42 DEL42 DEL40 DEL83 DEL39 DEL42 DEL32 DEL59 DEL60