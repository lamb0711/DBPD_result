GEODE-7752: Removed the current optionality on the ClusterManagementServiceBuilder. (#4650)

The Transport is not responsible to set the ConnectionConfig.
-import org.apache.geode.management.api.ClusterManagementService;
-import org.apache.geode.management.internal.ClientClusterManagementService;
+import org.apache.geode.management.internal.api.BaseManagementServiceBuilder;
- * ConnectionConfig} or a {@link ClusterManagementServiceTransport}. For
- * typical usage it should be sufficient to only use a
- * {@code ClusterManagementServiceConnectionConfig}.
- * For example:
+ * ConnectionConfig} or a {@link ClusterManagementServiceTransport}. For typical usage it should be
+ * sufficient to only use a {@code ClusterManagementServiceConnectionConfig}. For example:
- *     .setConnectionConfig(new BasicClusterManagementServiceConnectionConfig("localhost", 7070))
+ *     .setPort(7070)
+ *     .setHost("localhost")
- *
- * If no transport is set a default transport of
+ * <p>
+ * If no transport is set a public transport of
-public class ClusterManagementServiceBuilder {
+public class ClusterManagementServiceBuilder
+    extends BaseManagementServiceBuilder<ClusterManagementServiceBuilder> {
-  private ClusterManagementServiceTransport transport;
+  private String host = System.getProperty("geode.config.cms.connection.hostname", "localhost");
+  private int port = Integer.getInteger("geode.config.cms.connection.port", 7070);
-  private ConnectionConfig connectionConfig;
-
-  /**
-   * Build a new {@link ClusterManagementService} instance
-   *
-   * @return a ClusterManagementService
-   * @throws IllegalStateException if neither transport or config have been set
-   */
-  public ClusterManagementService build() {
-    if (transport == null && connectionConfig == null) {
-      throw new IllegalStateException(
-          "Both transportBuilder and connectionConfig are null. Please configure with at least one of setTransportBuilder() or setConnectionConfig()");
-    }
-
-    if (transport == null) {
-      transport = new RestTemplateClusterManagementServiceTransport(connectionConfig);
-    } else if (connectionConfig != null) {
-      transport.configureConnection(connectionConfig);
-    }
-
-    return new ClientClusterManagementService(transport);
-  }
-
-  public ClusterManagementServiceBuilder setTransport(
-      ClusterManagementServiceTransport transport) {
-    this.transport = transport;
+  public ClusterManagementServiceBuilder setHost(String hostname) {
+    this.host = hostname;
-  public ClusterManagementServiceBuilder setConnectionConfig(
-      ConnectionConfig connectionConfig) {
-    this.connectionConfig = connectionConfig;
+  public ClusterManagementServiceBuilder setPort(int port) {
+    this.port = port;
+
+  protected ConnectionConfig createConnectionConfig() {
+    ConnectionConfig newConnectionConfig = new ConnectionConfig(host, port);
+    return newConnectionConfig;
+  }

UPD40 INS74 INS43 INS43 UPD43 INS39 MOV43 INS42 INS44 INS8 UPD42 UPD83 MOV43 UPD42 INS8 UPD66 UPD66 UPD66 INS66 UPD66 INS66 UPD66 INS42 INS42 UPD42 UPD42 INS32 UPD42 INS32 INS43 INS42 MOV21 MOV41 INS39 UPD42 INS60 INS41 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS34 UPD42 MOV42 INS43 INS59 INS42 INS22 INS42 UPD42 INS42 INS42 INS14 INS52 INS42 UPD42 MOV43 INS42 INS42 DEL40 DEL26 DEL66 DEL66 DEL42 DEL65 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8