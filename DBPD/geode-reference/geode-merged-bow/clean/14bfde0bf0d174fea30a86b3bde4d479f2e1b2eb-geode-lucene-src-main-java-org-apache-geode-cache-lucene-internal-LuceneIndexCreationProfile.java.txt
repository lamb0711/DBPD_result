Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-      return LocalizedStrings.LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_WITH_FIELDS_2_BECAUSE_ANOTHER_MEMBER_DEFINES_THE_SAME_INDEX_WITH_FIELDS_3
-          .toString(getIndexName(), regionPath, Arrays.toString(getFieldNames()),
-              Arrays.toString(remoteProfile.getFieldNames()));
+      return String.format(
+          "Cannot create Lucene index %s on region %s with fields %s because another member defines the same index with fields %s.",
+          getIndexName(), regionPath, Arrays.toString(getFieldNames()),
+          Arrays.toString(remoteProfile.getFieldNames()));
-     * LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_WITH_ANALYZER_2_BECAUSE_ANOTHER_MEMBER_DEFINES_THE_SAME_INDEX_WITH_ANALYZER_3
+     * String.
+     * format("Cannot create Lucene index %s on region %s with analyzer %s because another member defines the same index with analyzer %s."
+     * ,
-        return LocalizedStrings.LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_WITH_FIELD_ANALYZERS_2_BECAUSE_ANOTHER_MEMBER_DEFINES_THE_SAME_INDEX_WITH_FIELD_ANALYZERS_3
-            .toString(getIndexName(), regionPath,
-                Arrays.toString(getFieldAnalyzers().values().toArray()),
-                Arrays.toString(remoteProfile.getFieldAnalyzers().values().toArray()));
+        return String.format(
+            "Cannot create Lucene index %s on region %s with field analyzers %s because another member defines the same index with field analyzers %s.",
+            getIndexName(), regionPath,
+            Arrays.toString(getFieldAnalyzers().values().toArray()),
+            Arrays.toString(remoteProfile.getFieldAnalyzers().values().toArray()));
-          return LocalizedStrings.LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_WITH_ANALYZER_2_ON_FIELD_3_BECAUSE_ANOTHER_MEMBER_DEFINES_THE_SAME_INDEX_WITH_ANALYZER_4_ON_THAT_FIELD
-              .toString(getIndexName(), regionPath, getFieldAnalyzers().get(field), field,
-                  remoteProfile.getFieldAnalyzers().get(field));
+          return String.format(
+              "Cannot create Lucene index %s on region %s with analyzer %s on field %s because another member defines the same index with analyzer %s on that field.",
+              getIndexName(), regionPath, getFieldAnalyzers().get(field), field,
+              remoteProfile.getFieldAnalyzers().get(field));
-      return LocalizedStrings.LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_WITH_SERIALIZER_2_BECAUSE_ANOTHER_MEMBER_DEFINES_THE_SAME_INDEX_WITH_DIFFERENT_SERIALIZER_3
-          .toString(getIndexName(), regionPath, getSerializerClass(),
-              remoteProfile.getSerializerClass());
+      return String.format(
+          "Cannot create Lucene index %s on region %s with serializer %s because another member defines the same index with different serializer %s.",
+          getIndexName(), regionPath, getSerializerClass(),
+          remoteProfile.getSerializerClass());
-        ? LocalizedStrings.LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_BECAUSE_IT_IS_NOT_DEFINED_IN_ANOTHER_MEMBER
-            .toString(getIndexName(), regionPath)
-        : LocalizedStrings.LuceneService_MUST_DEFINE_INDEX_0_ON_REGION_1_BECAUSE_IT_IS_DEFINED_IN_ANOTHER_MEMBER
-            .toString(getIndexName(), regionPath);
+        ? String.format(
+            "Cannot create Lucene index %s on region %s because it is not defined in another member.",
+            getIndexName(), regionPath)
+        : String.format(
+            "Must create Lucene index %s on region %s because it is defined in another member.",
+            getIndexName(), regionPath);

UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 DEL40 DEL26 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40