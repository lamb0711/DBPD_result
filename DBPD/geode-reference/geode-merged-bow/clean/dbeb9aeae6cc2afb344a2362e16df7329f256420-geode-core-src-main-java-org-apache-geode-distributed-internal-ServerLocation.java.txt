Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Represents the location of a bridge server. This class is 
- * preferable to InetSocketAddress because it doesn't do
- * any name resolution.
+ * Represents the location of a bridge server. This class is preferable to InetSocketAddress because
+ * it doesn't do any name resolution.
-  
+
-   * Used exclusively in case of single user authentication mode. Client sends
-   * this userId to the server with each operation to identify itself at the
-   * server.
+   * Used exclusively in case of single user authentication mode. Client sends this userId to the
+   * server with each operation to identify itself at the server.
-   * If its value is two, it lets the client know that it need not send the
-   * security part (connection-id, user-id) with each operation to the server.
-   * Also, that the client should not expect the security part in the server's
-   * response.
+   * If its value is two, it lets the client know that it need not send the security part
+   * (connection-id, user-id) with each operation to the server. Also, that the client should not
+   * expect the security part in the server's response.
-    
+
-  
+
-    //result = prime * result + ((hostName == null) ? 0 : hostName.hashCode());
+    // result = prime * result + ((hostName == null) ? 0 : hostName.hashCode());
-    }
-    else if (!hostName.equals(other.hostName)) {
+    } else if (!hostName.equals(other.hostName)) {
-      }
-      catch (UnknownHostException e) {
+      } catch (UnknownHostException e) {
-  
+
-    if(difference != 0) {
+    if (difference != 0) {
-  
+
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66