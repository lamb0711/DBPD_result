GEODE-2860: Refactor use of EventTracker

  * change EventTracker to an interface with two implementations
  * move as much logic out of LocalRegion down into subclasses that
    make use EventTracker
  * move and refactor static inner classes in EventTracker into own
    class files
  * migrate some of event-focused classes into a new sub package
  * add tests for existing logic from EventTracker

This closes #638

+import org.apache.geode.internal.cache.event.DistributedEventTracker;
+import org.apache.geode.internal.cache.event.EventTracker;
-import org.apache.geode.internal.cache.partitioned.Bucket;
-  public void createEventTracker() {
-    this.eventTracker = new EventTracker(this);
-    this.eventTracker.start();
+  protected EventTracker createEventTracker() {
+    EventTracker tracker = new DistributedEventTracker(cache, stopper, getName());
+    tracker.start();
+    return tracker;
+  @Override
+  public boolean hasSeenEvent(EntryEventImpl event) {
+    boolean isDuplicate = false;
+
+    isDuplicate = getEventTracker().hasSeenEvent(event);
+    if (isDuplicate) {
+      markEventAsDuplicate(event);
+    } else {
+      // bug #48205 - a retried PR operation may already have a version assigned to it
+      // in another VM
+      if (event.isPossibleDuplicate() && event.getRegion().concurrencyChecksEnabled
+          && event.getVersionTag() == null && event.getEventId() != null) {
+        boolean isBulkOp = event.getOperation().isPutAll() || event.getOperation().isRemoveAll();
+        VersionTag tag =
+            FindVersionTagOperation.findVersionTag(event.getRegion(), event.getEventId(), isBulkOp);
+        event.setVersionTag(tag);
+      }
+    }
+    return isDuplicate;
+  }
+
+  private void markEventAsDuplicate(EntryEventImpl event) {
+    event.setPossibleDuplicate(true);
+    if (concurrencyChecksEnabled && event.getVersionTag() == null) {
+      if (event.isBulkOpInProgress()) {
+        event.setVersionTag(getEventTracker().findVersionTagForBulkOp(event.getEventId()));
+      } else {
+        event.setVersionTag(getEventTracker().findVersionTagForSequence(event.getEventId()));
+      }
+    }
+  }
+
-      if (this.eventTracker != null) {
-        this.eventTracker.setInitialized();
-      }
+      getEventTracker().setInitialized();

MOV26 INS26 MOV31 INS40 UPD40 INS31 INS31 MOV78 INS83 INS43 INS42 INS8 INS78 UPD39 UPD42 INS44 INS83 INS39 INS42 INS44 INS8 INS42 INS60 INS21 INS41 INS42 INS43 INS42 INS60 INS25 INS41 INS43 INS42 INS21 INS25 MOV43 INS59 INS32 INS42 INS42 INS39 INS59 INS42 INS8 INS8 INS42 INS42 INS32 INS27 INS8 INS8 INS42 INS14 INS42 INS42 INS42 INS9 INS42 INS32 INS21 INS25 INS42 INS42 INS9 INS42 INS27 INS25 MOV21 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS27 INS8 INS32 INS33 INS32 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS60 INS60 MOV21 INS42 INS42 INS42 INS42 INS21 INS21 INS32 INS32 INS22 INS27 INS32 INS33 INS39 INS59 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS33 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL52 DEL14 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL33 DEL27 DEL8 DEL25 DEL8