GEODE-3894: Create HandshakeRequest

added connection state processors to inject protocol state specific
functionality refactored existing authentication and authorization flows to use
connection state processors added new handshake message, handler, and state
processor

Signed-off-by: Bruce Schuchardt <bschuchardt@pivotal.io>

-package org.apache.geode.internal.protocol.security;
+package org.apache.geode.internal.protocol.state;
-import org.apache.geode.security.ResourcePermission;
+import org.apache.geode.internal.protocol.state.exception.ConnectionStateException;
-/**
- * An implementation of {@link Authorizer} that doesn't use its parameters and always returns true.
- */
-public class NoOpAuthorizer implements Authorizer {
+public interface ConnectionHandshakingStateProcessor extends ConnectionStateProcessor {
-  public boolean authorize(Object authenticatedToken, ResourcePermission permissionRequested) {
-    return true;
+  default ConnectionHandshakingStateProcessor allowHandshake() throws ConnectionStateException {
+    return this;
+
+  // This is called when a handshake operation succeeds to get the processor for the next connection
+  // state.
+  ConnectionStateProcessor handshakeSucceeded();

UPD40 UPD40 UPD42 UPD43 INS31 UPD42 UPD83 INS43 INS42 INS43 INS43 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS52 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL9