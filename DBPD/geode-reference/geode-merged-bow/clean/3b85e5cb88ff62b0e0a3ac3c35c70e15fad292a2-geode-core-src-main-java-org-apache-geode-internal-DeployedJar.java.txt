GEODE-7436: Deploy jar using semantic versioning scheme  (#4382)

Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Joris Melchior <jmelchior@pivotal.io>

* Deploy jar using semantic versioning scheme
* always add sequence number at the end of the filename no matter what version scheme the deployed file uses.

* fix window's tests

-  private final String jarName;
+  private final String artifactId;
-  public DeployedJar(File versionedJarFile, final String jarName) {
-    Assert.assertTrue(jarName != null, "jarName cannot be null");
-    Assert.assertTrue(versionedJarFile != null, "versionedJarFile cannot be null");
+  public DeployedJar(File versionedJarFile) {
+    String artifactId = JarDeployer.toArtifactId(versionedJarFile.getName());
-    this.jarName = jarName;
+    this.artifactId = artifactId;
-   * @return the unversioned name of this jar file, e.g. myJar.jar
+   * Get this jar's artifact ID, which is the part of the jar file name that precedes the version
+   * information.
+   *
+   * @return the artifact ID for this jar
-  public String getJarName() {
-    return this.jarName;
+  public String getArtifactId() {
+    return this.artifactId;
-  public String getFileName() {
-    return this.file.getName();
+  /**
+   * @return the filename as user deployed, i.e remove the sequence number
+   */
+  public String getDeployedFileName() {
+    String fileBaseName = JarDeployer.getDeployedFileBaseName(this.file.getName());
+    if (fileBaseName == null) {
+      throw new IllegalStateException("file name needs to have a sequence number");
+    }
+    return fileBaseName + ".jar";
-    result = prime * result + (this.jarName == null ? 0 : this.jarName.hashCode());
+    result = prime * result + (this.artifactId == null ? 0 : this.artifactId.hashCode());
-    if (this.jarName == null) {
-      if (other.jarName != null) {
+    if (this.artifactId == null) {
+      if (other.artifactId != null) {
-    } else if (!this.jarName.equals(other.jarName)) {
+    } else if (!this.artifactId.equals(other.artifactId)) {
-    sb.append("jarName=").append(this.jarName);
+    sb.append("artifactId=").append(this.artifactId);

MOV43 UPD42 INS29 MOV43 UPD42 UPD42 INS60 INS65 INS65 INS60 INS25 INS43 INS59 INS66 INS66 UPD66 INS66 MOV43 INS59 INS27 INS8 INS27 INS42 INS42 INS32 UPD42 UPD42 INS42 INS32 INS42 INS33 INS53 INS42 INS45 MOV8 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 INS42 INS42 MOV32 INS14 UPD42 MOV8 UPD45 UPD42 INS42 INS42 INS43 INS45 UPD40 UPD40 INS42 UPD42 UPD42 UPD42 DEL83 DEL42 DEL44 DEL42 DEL42 DEL42 DEL33 DEL27 DEL45 DEL32 DEL21 DEL42 DEL33 DEL27 DEL45 DEL32 DEL21