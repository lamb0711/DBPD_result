Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

-import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.internal.cache.tier.Acceptor;
-import org.apache.geode.internal.cache.tier.CachedRegionHelper;
-import org.apache.geode.internal.security.SecurityService;
-import org.apache.geode.security.server.Authenticator;
-
+import org.apache.geode.StatisticsFactory;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.cache.tier.Acceptor;
+import org.apache.geode.internal.cache.tier.CachedRegionHelper;
+import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.security.internal.server.Authenticator;
+
-  private ClientProtocolMessageHandler protocolHandler;
+  private volatile ClientProtocolService clientProtocolService;
-    authenticators = new HashMap<>();
+    HashMap<String, Class<? extends Authenticator>> tmp = new HashMap<>();
+
-      authenticators.put(streamAuthenticator.implementationID(), streamAuthenticator.getClass());
+      tmp.put(streamAuthenticator.implementationID(), streamAuthenticator.getClass());
+
+    authenticators = tmp;
-  private synchronized ClientProtocolMessageHandler initializeMessageHandler() {
-    if (protocolHandler != null) {
-      return protocolHandler;
+  private synchronized ClientProtocolService initializeClientProtocolService(
+      StatisticsFactory statisticsFactory, String statisticsName) {
+    if (clientProtocolService != null) {
+      return clientProtocolService;
-    protocolHandler = new MessageHandlerFactory().makeMessageHandler();
+    // use temp to make sure we publish properly.
+    ClientProtocolService tmp = new ClientProtocolServiceLoader().loadService();
+    tmp.initializeStatistics(statisticsName, statisticsFactory);
-    return protocolHandler;
+    clientProtocolService = tmp;
+    return clientProtocolService;
-  private ClientProtocolMessageHandler getClientProtocolMessageHandler() {
-    if (protocolHandler == null) {
-      initializeMessageHandler();
+  private ClientProtocolService getOrCreateClientProtocolService(
+      StatisticsFactory statisticsFactory, String serverName) {
+    if (clientProtocolService == null) {
+      return initializeClientProtocolService(statisticsFactory, serverName);
-    return protocolHandler;
+    return clientProtocolService;
-  public ServerConnection makeServerConnection(Socket s, InternalCache c, CachedRegionHelper helper,
-      CacheServerStats stats, int hsTimeout, int socketBufferSize, String communicationModeStr,
-      byte communicationMode, Acceptor acceptor, SecurityService securityService)
-      throws IOException {
+  public ServerConnection makeServerConnection(Socket socket, InternalCache cache,
+      CachedRegionHelper helper, CacheServerStats stats, int hsTimeout, int socketBufferSize,
+      String communicationModeStr, byte communicationMode, Acceptor acceptor,
+      SecurityService securityService) throws IOException {
-        String authenticationMode =
-            System.getProperty("geode.protocol-authentication-mode", "NOOP");
+        try {
+          String authenticationMode =
+              System.getProperty("geode.protocol-authentication-mode", "NOOP");
-        return new GenericProtocolServerConnection(s, c, helper, stats, hsTimeout, socketBufferSize,
-            communicationModeStr, communicationMode, acceptor, getClientProtocolMessageHandler(),
-            securityService, findStreamAuthenticator(authenticationMode));
+          return createGenericProtocolServerConnection(socket, cache, helper, stats, hsTimeout,
+              socketBufferSize, communicationModeStr, communicationMode, acceptor, securityService,
+              authenticationMode);
+        } catch (ServiceLoadingFailureException ex) {
+          throw new IOException("Could not load protobuf client protocol", ex);
+        }
-      return new LegacyServerConnection(s, c, helper, stats, hsTimeout, socketBufferSize,
+      return new LegacyServerConnection(socket, cache, helper, stats, hsTimeout, socketBufferSize,
+
+  private ServerConnection createGenericProtocolServerConnection(Socket socket, InternalCache cache,
+      CachedRegionHelper helper, CacheServerStats stats, int hsTimeout, int socketBufferSize,
+      String communicationModeStr, byte communicationMode, Acceptor acceptor,
+      SecurityService securityService, String authenticationMode) {
+    ClientProtocolService service =
+        getOrCreateClientProtocolService(cache.getDistributedSystem(), acceptor.getServerName());
+
+    ClientProtocolProcessor processor = service.createProcessorForCache(cache,
+        findStreamAuthenticator(authenticationMode), securityService);
+
+    return new GenericProtocolServerConnection(socket, cache, helper, stats, hsTimeout,
+        socketBufferSize, communicationModeStr, communicationMode, acceptor, processor,
+        securityService);
+  }

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 UPD40 INS31 INS83 UPD43 MOV21 UPD43 UPD42 INS44 INS44 UPD43 UPD42 INS44 INS44 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 UPD42 UPD42 INS60 UPD42 INS43 INS42 INS43 INS42 INS60 INS21 INS21 UPD42 INS43 INS42 INS43 INS42 UPD42 UPD42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS41 INS74 INS59 INS42 INS42 INS43 INS59 INS32 INS7 UPD42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS14 INS43 INS43 INS74 INS42 MOV14 INS42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS41 INS42 INS42 INS32 INS42 INS42 INS32 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS76 UPD42 MOV14 UPD42 MOV42 INS32 INS8 INS42 INS32 INS32 INS42 INS42 INS42 MOV32 INS42 INS42 INS43 UPD42 UPD43 UPD42 MOV42 INS42 INS42 INS54 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 UPD42 INS8 INS12 MOV60 MOV41 INS44 INS8 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS14 INS43 INS45 INS42 INS42 DEL42 DEL32 DEL7 DEL21 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL14 DEL8