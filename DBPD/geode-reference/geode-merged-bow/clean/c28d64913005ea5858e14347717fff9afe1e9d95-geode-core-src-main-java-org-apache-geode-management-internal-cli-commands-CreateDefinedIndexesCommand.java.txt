Merge branch 'release/1.4.0'

+import java.util.ArrayList;
-import java.util.concurrent.atomic.AtomicReference;
-import org.apache.geode.management.internal.cli.CliUtil;
-    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
+    List<XmlEntity> xmlEntities = new ArrayList<>();
-      final Set<DistributedMember> targetMembers = CliUtil.findMembers(group, memberNameOrID);
+      final Set<DistributedMember> targetMembers = findMembers(group, memberNameOrID);
-      final ResultCollector<?, ?> rc = CliUtil.executeFunction(createDefinedIndexesFunction,
+      final ResultCollector<?, ?> rc = executeFunction(createDefinedIndexesFunction,
-            if (xmlEntity.get() == null) {
-              xmlEntity.set(cliFunctionResult.getXmlEntity());
+            // Only add the XmlEntity if it wasn't previously added from the result of another
+            // successful member.
+            XmlEntity resultEntity = cliFunctionResult.getXmlEntity();
+            if ((null != resultEntity) && (!xmlEntities.contains(resultEntity))) {
+              xmlEntities.add(cliFunctionResult.getXmlEntity());
+
+      // TODO: GEODE-3916.
+      // The index creation might succeed in some members and fail in others, the current logic only
+      // reports to the user the members on which the operation was successful, giving no details
+      // about the failures. We should report the exact details of what failed/succeeded, and
+      // where/why.
-    if (xmlEntity.get() != null) {
+    for (XmlEntity xmlEntity : xmlEntities) {
-          () -> getSharedConfiguration().addXmlEntity(xmlEntity.get(), group));
+          () -> getSharedConfiguration().addXmlEntity(xmlEntity, group));
+

MOV26 UPD40 INS70 UPD74 INS44 INS42 INS8 UPD43 UPD42 INS43 INS42 MOV21 UPD42 UPD74 INS42 UPD43 UPD42 MOV42 INS60 INS43 INS59 UPD27 INS42 INS42 INS32 INS36 INS36 INS42 INS42 INS27 INS38 INS33 INS42 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL33 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL27 DEL8 DEL25