GEODE:6784 Added unit tests to classes in the tomcat module (#4061)

Co-authored-by: Benjamin Ross <bross@pivotal.io>
Co-authored-by: Donal Evans <doevans@pivotal.io>
-      Execution execution = FunctionService.onRegion(getSessionRegion()).withFilter(sessionIds);
+      Execution execution = getExecutionForFunctionOnRegionWithFilter(sessionIds);
-      Execution execution = FunctionService.onServers(getCache())
-          .setArguments(new Object[] {this.sessionRegion.getFullPath(), sessionIds});
+      Object[] arguments = new Object[] {this.sessionRegion.getFullPath(), sessionIds};
+      Execution execution = getExecutionForFunctionOnServersWithArguments(arguments);
-      PoolImpl pool = (PoolImpl) PoolManager.find(getOperatingRegionName());
+      PoolImpl pool = findPoolInPoolManager();
-    Execution execution = FunctionService.onServers(this.cache);
+    Execution execution = getExecutionForFunctionOnServers();
-  private void createSessionRegionOnServers() {
+  void createSessionRegionOnServers() {
-    Execution execution = FunctionService.onServer(this.cache).setArguments(configuration);
+    Execution execution = getExecutionForFunctionOnServerWithRegionConfiguration(configuration);
-  private Region<String, HttpSession> createLocalSessionRegion() {
+  Region<String, HttpSession> createLocalSessionRegion() {
+
+  // Helper methods added to improve unit testing of class
+  Execution getExecutionForFunctionOnServers() {
+    return getExecutionForFunctionOnServersWithArguments(null);
+  }
+
+  Execution getExecutionForFunctionOnServersWithArguments(Object[] arguments) {
+    if (arguments != null && arguments.length > 0) {
+      return FunctionService.onServers(getCache()).setArguments(arguments);
+    } else {
+      return FunctionService.onServers(getCache());
+    }
+  }
+
+  Execution getExecutionForFunctionOnServerWithRegionConfiguration(RegionConfiguration arguments) {
+    if (arguments != null) {
+      return FunctionService.onServer(getCache()).setArguments(arguments);
+    } else {
+      return FunctionService.onServer(getCache());
+    }
+  }
+
+  Execution getExecutionForFunctionOnRegionWithFilter(Set<?> filter) {
+    if (filter != null && filter.size() > 0) {
+      return FunctionService.onRegion(getSessionRegion()).withFilter(filter);
+    } else {
+      return FunctionService.onRegion(getSessionRegion());
+    }
+  }
+
+  PoolImpl findPoolInPoolManager() {
+    return (PoolImpl) PoolManager.find(getOperatingRegionName());
+  }

MOV31 INS31 INS31 INS31 INS31 INS31 MOV78 INS83 INS39 INS42 INS8 INS43 INS42 INS8 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS8 MOV43 UPD42 MOV8 INS25 MOV41 INS42 INS41 INS42 INS5 INS42 INS25 INS42 INS43 INS42 INS25 INS42 INS74 INS42 INS25 INS41 MOV32 INS8 INS32 INS43 INS85 INS27 INS8 INS8 INS42 INS27 INS8 INS8 INS43 INS76 INS27 INS8 INS8 MOV11 INS60 INS60 MOV41 INS42 INS33 INS42 INS27 INS27 INS41 INS41 INS42 INS33 INS41 INS41 INS42 INS27 INS27 INS41 INS41 INS5 MOV43 INS59 INS43 INS59 UPD42 UPD42 MOV42 INS42 INS33 INS40 INS34 INS32 INS32 INS32 INS32 INS42 INS33 INS32 INS34 MOV32 INS32 INS32 INS43 INS85 INS42 MOV3 INS42 INS32 INS42 INS42 INS32 MOV32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL52 DEL42 DEL22 DEL83 DEL42 DEL52 DEL42 DEL22 DEL32 DEL42 DEL83 DEL83 DEL39 DEL42 DEL59 DEL60 DEL25 DEL8