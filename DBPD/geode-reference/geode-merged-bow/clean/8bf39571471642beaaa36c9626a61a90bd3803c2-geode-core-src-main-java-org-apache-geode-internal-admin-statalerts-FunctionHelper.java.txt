Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class acts as a helper for the AlertManager & AlertAggregator for the
- * execution of the user specified functions
+ * This class acts as a helper for the AlertManager & AlertAggregator for the execution of the user
+ * specified functions
- * This class also keeps a registry of all the functions which are supported,
- * which should be used during creation of alert definition.
+ * This class also keeps a registry of all the functions which are supported, which should be used
+ * during creation of alert definition.
-    return new String[] { STR_ADD, STR_AVG, STR_MIN, STR_MAX };
+    return new String[] {STR_ADD, STR_AVG, STR_MIN, STR_MAX};
-   * This method returns the function's name for the requested function
-   * identifier.
+   * This method returns the function's name for the requested function identifier.
-   * @param functionId
-   *                Identifier of the function
+   * @param functionId Identifier of the function
-   * This function returns the function identifier for the requested function
-   * name.
+   * This function returns the function identifier for the requested function name.
-   * @param qFunctionName
-   *                Name of the function
+   * @param qFunctionName Name of the function
-   * @param functorId
-   *                Id of function to be applied
-   * @param vals
-   *                List of number on which function will be applied
+   * @param functorId Id of function to be applied
+   * @param vals List of number on which function will be applied
-   * @param vals
-   *                Array of number
+   * @param vals Array of number
-    }
-    catch (VirtualMachineError err) {
+    } catch (VirtualMachineError err) {
-      // If this ever returns, rethrow the error.  We're poisoned
+      // If this ever returns, rethrow the error. We're poisoned
-    }
-    catch (Throwable t) {
+    } catch (Throwable t) {
-      // catch VirtualMachineError (see above).  However, there is
+      // catch VirtualMachineError (see above). However, there is
-   * @param vals
-   *                Array of number
+   * @param vals Array of number
-    }
-    catch (VirtualMachineError err) {
+    } catch (VirtualMachineError err) {
-      // If this ever returns, rethrow the error.  We're poisoned
+      // If this ever returns, rethrow the error. We're poisoned
-    }
-    catch (Throwable ex) {
+    } catch (Throwable ex) {
-      // catch VirtualMachineError (see above).  However, there is
+      // catch VirtualMachineError (see above). However, there is
-   * @param vals
-   *                Array of number
+   * @param vals Array of number
-      Number min = (Number)Collections.max(col);
+      Number min = (Number) Collections.max(col);
-    }
-    catch (VirtualMachineError err) {
+    } catch (VirtualMachineError err) {
-      // If this ever returns, rethrow the error.  We're poisoned
+      // If this ever returns, rethrow the error. We're poisoned
-    }
-    catch (Throwable t) {
+    } catch (Throwable t) {
-      // catch VirtualMachineError (see above).  However, there is
+      // catch VirtualMachineError (see above). However, there is
-   * @param vals
-   *                Array of number
+   * @param vals Array of number
-      Number max = (Number)Collections.max(col);
+      Number max = (Number) Collections.max(col);
-    }
-    catch (VirtualMachineError err) {
+    } catch (VirtualMachineError err) {
-      // If this ever returns, rethrow the error.  We're poisoned
+      // If this ever returns, rethrow the error. We're poisoned
-    }
-    catch (Throwable t) {
+    } catch (Throwable t) {
-      // catch VirtualMachineError (see above).  However, there is
+      // catch VirtualMachineError (see above). However, there is

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66