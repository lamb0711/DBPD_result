GEODE-5861: change jdbc connector to use jndi binding (#2650)

The jdbc connector now uses the existing "jndi-binding" xml/gfsh instead of adding "jdbc-connection" xml/gfsh. All the old "jdbc-connection" commands have been removed.

The create jndi-binding command has been changed in the following ways:
* the driver-class-name gfsh parameter is now optional.
* --url can be used as a replacement for --connnection-url
* the --type now defaults to SIMPLE (it used to not have a default).
* the --type=POOLED now defaults to creating a Hikari pool and an SPI exists to customize the class 
that implements the pool.

New External APIS:
  DataSourceFactoryTest: this is the SPI users can implement for the POOLED type.

Co-authored-by: @BenjaminPerryRoss 
+import java.sql.DriverManager;
-      Class driverClass = ClassPathLoader.getLatest().forName(jdbcDriver);
-      driverObject = (Driver) driverClass.newInstance();
+      if (jdbcDriver != null && jdbcDriver.length() > 0) {
+        loadDriverUsingClassName();
+      } else {
+        loadDriverUsingURL();
+      }
+
+  private void loadDriverUsingURL() throws SQLException {
+    driverObject = DriverManager.getDriver(this.url);
+  }
+
+  private void loadDriverUsingClassName()
+      throws ClassNotFoundException, InstantiationException, IllegalAccessException {
+    Class<?> driverClass = ClassPathLoader.getLatest().forName(jdbcDriver);
+    driverObject = (Driver) driverClass.newInstance();
+  }

INS26 INS40 INS31 INS31 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS43 INS43 INS43 MOV8 INS42 INS21 INS42 INS42 INS42 INS8 INS7 INS74 INS25 INS42 INS32 MOV43 INS76 INS27 INS8 INS8 INS42 INS42 INS22 INS27 INS27 INS21 INS21 INS52 INS42 INS42 INS33 INS32 INS34 INS32 INS32 INS42 INS42 INS42 INS42