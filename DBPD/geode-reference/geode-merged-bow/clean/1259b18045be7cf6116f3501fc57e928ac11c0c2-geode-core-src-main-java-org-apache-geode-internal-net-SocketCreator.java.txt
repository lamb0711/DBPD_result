GEODE-7808: standardize on use of HostAndPort for connection formation  (#4778)

* GEODE-7808: standardize on use of HostAndPort for connection formation

Adding two tests that limit the use of InetAddress and of
InetSocketAddress.getAddress().  Ideally we could whittle down the
list of exceptions currently being "sanctioned" by the InetAddress test.

I tried using the PMD tool that's already built into our gradle builds
to perform these restrictions but it fails with parsing errors.  Instead
I turned to the "decode" package that's used by
AnalyzeSerializablesTestBase and refactored that into a Rule that can be
used by any test to load its module's class files in partially
decompiled form.  I added a couple of query methods to CompiledClass to
search for uses of InetAddress and InetSocketAddress.getAddress().

The InetAddress test turned up 74 violations.  I removed some of these
by getting rid of unnecessary code or moving it to LocalHostUtil and
categorized the other violations and moved them into a "sanctioned" list
that we should work on making as small as possible.

* adding missing test and rule

* finished analyzing classes having InetAddress in method signatures

* modified the test to only restrict InetAddress lookup by name

* added another test to restrict use of Admin API's InetAddress utilities
+   * This method has migrated to LocalHostUtil but is kept in place here for
+   * backward-compatibility testing.
+   *
+  /** returns the hostname or address for this client */
+  public static String getClientHostName() throws UnknownHostException {
+    InetAddress hostAddr = LocalHostUtil.getLocalHost();
+    return SocketCreator.use_client_host_name ? hostAddr.getCanonicalHostName()
+        : hostAddr.getHostAddress();
+  }

INS31 INS29 INS83 INS83 INS43 INS42 INS43 INS8 INS65 INS65 INS42 INS42 INS60 INS41 INS66 INS66 INS66 INS43 INS59 INS16 INS42 INS42 INS32 INS40 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42