GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import java.lang.management.ManagementFactory;
+import java.lang.management.MemoryMXBean;
+import java.lang.management.MemoryPoolMXBean;
+import java.lang.management.MemoryType;
+import java.util.List;
+import java.util.Set;
+import java.util.concurrent.Executors;
+import java.util.concurrent.RejectedExecutionException;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.ThreadFactory;
+import java.util.concurrent.TimeUnit;
+
+import javax.management.ListenerNotFoundException;
+import javax.management.Notification;
+import javax.management.NotificationEmitter;
+import javax.management.NotificationListener;
+
+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.internal.statistics.GemFireStatSampler;
-import org.apache.geode.internal.statistics.LocalStatListener;
-import org.apache.geode.internal.statistics.StatisticsImpl;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
-import org.apache.logging.log4j.Logger;
-
-import javax.management.ListenerNotFoundException;
-import javax.management.Notification;
-import javax.management.NotificationEmitter;
-import javax.management.NotificationListener;
-import java.lang.management.ManagementFactory;
-import java.lang.management.MemoryMXBean;
-import java.lang.management.MemoryPoolMXBean;
-import java.lang.management.MemoryType;
-import java.util.List;
-import java.util.Set;
-import java.util.concurrent.*;
+import org.apache.geode.internal.statistics.GemFireStatSampler;
+import org.apache.geode.internal.statistics.LocalStatListener;
+import org.apache.geode.internal.statistics.StatisticsImpl;
-  private static final int POLLER_INTERVAL =
-      Integer.getInteger(POLLER_INTERVAL_PROP, 500).intValue();
+  private static final int POLLER_INTERVAL = Integer.getInteger(POLLER_INTERVAL_PROP, 500);
-  private final GemFireCacheImpl cache;
+  private final InternalCache cache;
-
-
-  HeapMemoryMonitor(final InternalResourceManager resourceManager, final GemFireCacheImpl cache,
+  HeapMemoryMonitor(final InternalResourceManager resourceManager, final InternalCache cache,
-      } catch (ListenerNotFoundException e) {
-        this.cache.getLoggerI18n().fine(
-            "This instance '" + toString() + "' was not registered as a Memory MXBean listener");
+      } catch (ListenerNotFoundException ignore) {
+        logger.debug("This instance '{}' was not registered as a Memory MXBean listener", this);
-        new Object[] {Long.valueOf(usageThreshold), memoryPoolMXBean.getName()});
+        new Object[] {usageThreshold, memoryPoolMXBean.getName()});
-      } catch (RejectedExecutionException e) {
+      } catch (RejectedExecutionException ignore) {
-          HeapMemoryMonitor.this.cache.getLoggerI18n()
-              .warning(LocalizedStrings.ResourceManager_REJECTED_EXECUTION_CAUSE_NOHEAP_EVENTS);
+          logger.warn(LocalizedMessage
+              .create(LocalizedStrings.ResourceManager_REJECTED_EXECUTION_CAUSE_NOHEAP_EVENTS));
-      } catch (CacheClosedException e) {
+      } catch (CacheClosedException ignore) {
-   * 
-      builder.append(" maxMemoryBytes:" + newThresholds.getMaxMemoryBytes());
-      builder.append(" criticalThresholdBytes:" + newThresholds.getCriticalThresholdBytes());
-      builder.append(" evictionThresholdBytes:" + newThresholds.getEvictionThresholdBytes());
+      builder.append(" maxMemoryBytes:").append(newThresholds.getMaxMemoryBytes());
+      builder.append(" criticalThresholdBytes:").append(newThresholds.getCriticalThresholdBytes());
+      builder.append(" evictionThresholdBytes:").append(newThresholds.getEvictionThresholdBytes());

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 UPD40 INS40 UPD43 MOV32 UPD42 UPD43 UPD42 INS32 INS32 INS32 INS42 UPD42 UPD42 INS32 INS42 MOV32 INS32 INS42 MOV32 INS32 INS42 MOV32 UPD42 MOV42 MOV42 INS45 MOV42 MOV42 INS45 MOV42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 INS45 INS52 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV40 DEL42 DEL32 DEL52 DEL42 DEL22 DEL32 DEL42 DEL45 DEL32 DEL45 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL45 DEL27 DEL32 DEL45 DEL27 DEL32 DEL45 DEL27 DEL32