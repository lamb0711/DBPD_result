Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class serializes execution of concurrent tasks. This is
- * useful when we want only one thread to perform an expensive
- * operation such that if the operation fails, all other threads
- * fail with the same exception without having to perform the
- * expensive operation.
+ * This class serializes execution of concurrent tasks. This is useful when we want only one thread
+ * to perform an expensive operation such that if the operation fails, all other threads fail with
+ * the same exception without having to perform the expensive operation.
-   * Override this method for handling exception encountered while
-   * running the Callable c.
+   * Override this method for handling exception encountered while running the Callable c.
+   * 
-   * true if we want the waiting threads to invoke the callable
+   *         true if we want the waiting threads to invoke the callable

UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66