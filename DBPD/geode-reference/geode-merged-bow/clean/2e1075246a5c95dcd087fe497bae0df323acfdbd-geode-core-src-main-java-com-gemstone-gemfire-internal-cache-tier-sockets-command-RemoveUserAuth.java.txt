Merge branch 'release/1.0.0-incubating.M3'

-   // if (!isSecureMode)
-     //client has not send secuirty header, need to send exception and log this in security (file)
+    if (!isSecureMode){
+     // need to throw exception
+     return;
+    }
-    if (isSecureMode) {
-
-      try {
-        servConn.setAsTrue(REQUIRES_RESPONSE);
-        Part keepalivePart = msg.getPart(0);
-        byte[] keepaliveByte = keepalivePart.getSerializedForm();
-        boolean keepalive = (keepaliveByte == null || keepaliveByte[0] == 0) ? false
-            : true;
-        servConn.getSecurityLogWriter().fine(
-            "remove user auth keep alive " + keepalive);
-        servConn.removeUserAuth(msg, keepalive);
-        writeReply(msg, servConn);
-      } catch (GemFireSecurityException gfse) {
-        if (servConn.getSecurityLogWriter().warningEnabled()) {
-          servConn.getSecurityLogWriter()
-              .warning(
-                  LocalizedStrings.ONE_ARG,
-                  servConn.getName() + ": Security exception: "
-                      + gfse.getMessage());
-        }
-        writeException(msg, gfse, false, servConn);
-      } catch (Exception ex) {
-        // TODO Auto-generated catch block
-        if (servConn.getLogWriter().warningEnabled()) {
-          servConn
-              .getLogWriter()
-              .warning(
-                  LocalizedStrings.CacheClientNotifier_AN_EXCEPTION_WAS_THROWN_FOR_CLIENT_0_1,
-                  new Object[] {servConn.getProxyID(), ""}, ex);
-        }
-        writeException(msg, ex, false, servConn);
-      } finally {
-        servConn.setAsTrue(RESPONDED);
+    try {
+      servConn.setAsTrue(REQUIRES_RESPONSE);
+      Part keepalivePart = msg.getPart(0);
+      byte[] keepaliveByte = keepalivePart.getSerializedForm();
+      boolean keepalive = (keepaliveByte == null || keepaliveByte[0] == 0) ? false
+          : true;
+      servConn.getSecurityLogWriter().fine(
+          "remove user auth keep alive " + keepalive);
+      servConn.removeUserAuth(msg, keepalive);
+      writeReply(msg, servConn);
+    } catch (GemFireSecurityException gfse) {
+      if (servConn.getSecurityLogWriter().warningEnabled()) {
+        servConn.getSecurityLogWriter()
+            .warning(
+                LocalizedStrings.ONE_ARG,
+                servConn.getName() + ": Security exception: "
+                    + gfse.getMessage());
-    } else {
-      // need to throw exception
+      writeException(msg, gfse, false, servConn);
+    } catch (Exception ex) {
+      // TODO Auto-generated catch block
+      if (servConn.getLogWriter().warningEnabled()) {
+        servConn
+            .getLogWriter()
+            .warning(
+                LocalizedStrings.CacheClientNotifier_AN_EXCEPTION_WAS_THROWN_FOR_CLIENT_0_1,
+                new Object[] {servConn.getProxyID(), ""}, ex);
+      }
+      writeException(msg, ex, false, servConn);
+    } finally {
+      servConn.setAsTrue(RESPONDED);

MOV8 MOV60 INS25 INS38 INS8 INS42 INS41 DEL42 DEL8 DEL25 DEL8