Adding option partition-resolver in gfsh while creating a region.

+import joptsimple.internal.Strings;
+import org.apache.geode.cache.*;
-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.cache.DataPolicy;
-import org.apache.geode.cache.ExpirationAttributes;
-import org.apache.geode.cache.Region;
-import org.apache.geode.cache.RegionAttributes;
-import org.apache.geode.cache.RegionShortcut;
-import org.apache.geode.cache.Scope;
+      @CliOption(key = CliStrings.CREATE_REGION__PARTITION_RESOLVER,
+          unspecifiedDefaultValue = CliMetaData.ANNOTATION_NULL_VALUE,
+          help = CliStrings.CREATE_REGION__PARTITION_RESOLVER__HELP) String partitionResolver,
-            regionAttributes);
+            regionAttributes, partitionResolver);
-            mcastEnabled);
+            mcastEnabled, partitionResolver);
-
-          null, null, null, null, null, null, null, null, evictionMax, null, null, null);
+          null, null, null, null, null, null, null, null, evictionMax, null, null, null, null);
+
+    if (regionFunctionArgs.hasPartitionAttributes()) {
+      boolean partitionResolverFailure = false;
+      if (regionFunctionArgs.isPartitionResolverSet()) {
+        String partitionResolverClassName = regionFunctionArgs.getPartitionResolver();
+        Object partitionResolver = null;
+
+        try {
+          Class<?> compressorClass =
+              (Class<?>) ClassPathLoader.getLatest().forName(partitionResolverClassName);
+          partitionResolver = compressorClass.newInstance();
+        } catch (InstantiationException e) {
+          partitionResolverFailure = true;
+        } catch (IllegalAccessException e) {
+          partitionResolverFailure = true;
+        } catch (ClassNotFoundException e) {
+          partitionResolverFailure = true;
+        }
+        if (partitionResolverFailure || !(partitionResolver instanceof PartitionResolver)) {
+          throw new IllegalArgumentException(
+              CliStrings.format(CliStrings.CREATE_REGION__MSG__INVALID_PARTITION_RESOLVER,
+                  new Object[] {regionFunctionArgs.getCompressor()}));
+        }
+      }
+    }

MOV26 MOV26 UPD40 UPD40 INS44 INS77 INS43 INS42 INS25 INS42 INS80 INS80 INS80 INS42 INS32 INS8 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS60 INS25 INS39 INS59 INS32 INS8 INS42 INS9 INS42 INS42 INS60 INS60 INS54 INS25 INS33 INS43 INS59 INS43 INS59 INS8 INS12 INS12 INS12 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS33 INS60 INS21 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS38 INS53 INS42 INS42 INS42 INS42 INS74 INS59 INS7 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS36 INS14 INS43 INS76 INS42 INS11 INS42 INS32 INS42 INS7 INS42 INS7 INS42 INS7 INS62 INS43 INS32 INS42 INS74 INS32 INS42 INS42 INS42 INS9 INS42 INS9 INS42 INS9 INS42 INS43 INS42 INS42 INS42 INS40 INS3 INS43 INS76 INS32 INS42 INS42 INS42 INS5 INS4 INS42 INS42 INS42 INS43 INS85 INS32 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26