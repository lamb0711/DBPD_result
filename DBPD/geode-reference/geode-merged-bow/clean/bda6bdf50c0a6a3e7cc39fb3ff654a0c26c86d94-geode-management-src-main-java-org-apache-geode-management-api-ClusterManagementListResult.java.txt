GEODE-7717: ClusterManagementListResult should show a list of EntityInfo (#4673)

* only show links in the EntityInfo level
* rework list member responses

-import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonProperty;
-  /**
-   * for internal use only
-   */
+
-  /**
-   * for internal use only
-   */
-  // Override the mapper setting so that we always show result
-  @JsonInclude
-  @JsonProperty
-  private List<EntityGroupInfo<T, R>> result = new ArrayList<>();
+  private final Map<String, EntityInfo<T, R>> entities = new HashMap<>();
-  public List<EntityGroupInfo<T, R>> getResult() {
-    return result;
+  @JsonIgnore
+  public List<EntityGroupInfo<T, R>> getEntityGroupInfo() {
+    return entities.values().stream()
+        .flatMap(x -> x.getGroups().stream())
+        .collect(Collectors.toList());
+  }
+
+  // this annotation makes sure we always show the result even though it's an empty list
+  @JsonInclude
+  public List<EntityInfo<T, R>> getResult() {
+    return entities.values().stream().collect(Collectors.toList());
+  }
+
+  public void setResult(List<EntityInfo<T, R>> entities) {
+    this.entities.clear();
+    for (EntityInfo entity : entities) {
+      this.entities.put(entity.getId(), entity);
+    }
+  }
+
+  public void addEntityInfo(EntityInfo<T, R> entityInfo) {
+    this.entities.put(entityInfo.getId(), entityInfo);
+  }
+
+  @JsonIgnore
+  public void setEntityGroupInfo(List<EntityGroupInfo<T, R>> entityGroupInfos) {
+    this.entities.clear();
+    for (EntityGroupInfo entityGroupInfo : entityGroupInfos) {
+      String id = entityGroupInfo.getConfiguration().getId();
+      EntityInfo<T, R> entity = this.entities.get(id);
+      if (entity == null) {
+        entity = new EntityInfo<>();
+        entity.setId(id);
+        this.entities.put(id, entity);
+      }
+      entity.getGroups().add(entityGroupInfo);
+    }
-    return result.stream().map(EntityGroupInfo::getConfiguration).collect(Collectors.toList());
+    return getEntityGroupInfo().stream().map(EntityGroupInfo::getConfiguration)
+        .collect(Collectors.toList());
-    return result.stream().flatMap(r -> r.getRuntimeInfo().stream()).collect(Collectors.toList());
-  }
-
-  /**
-   * for internal use only
-   */
-  public void setResult(List<EntityGroupInfo<T, R>> result) {
-    this.result = result;
+    return getEntityGroupInfo().stream().flatMap(r -> r.getRuntimeInfo().stream())
+        .collect(Collectors.toList());

MOV26 MOV31 UPD40 UPD40 INS31 INS31 INS31 INS83 UPD74 MOV29 INS78 INS83 MOV74 INS42 INS8 MOV78 INS74 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 MOV44 INS8 UPD43 INS43 UPD74 UPD42 INS42 INS41 INS43 INS74 INS74 INS42 INS21 INS70 INS74 INS42 INS21 INS42 UPD42 INS21 INS70 UPD42 INS42 UPD43 UPD74 INS32 INS42 INS43 INS43 INS43 INS32 INS43 INS74 INS32 INS44 INS42 INS8 INS43 INS43 INS43 INS32 INS32 INS44 INS42 INS8 UPD42 UPD43 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS43 INS43 INS43 INS22 INS42 INS43 INS42 MOV21 INS42 INS42 INS42 INS22 INS42 INS32 INS42 INS22 INS42 INS43 INS42 INS60 INS60 INS25 INS21 UPD42 INS32 INS42 INS86 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS43 INS59 INS74 INS59 INS27 INS8 INS32 INS32 INS42 INS59 INS32 INS42 INS42 INS22 INS42 INS32 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 MOV52 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS7 INS32 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS14 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS74 INS52 INS42 INS43 INS42 DEL66 DEL65 DEL29 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL66 DEL65 DEL29 DEL22 DEL42 DEL7 DEL8