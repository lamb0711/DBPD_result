GEODE-1672: Disabled recovering values for LRU region during startup.

When recovering persistent files, system stores the values in temp
maps (for regions) using a background thread, as these maps are not
actual regions, the temp-regions are  not considered/included for
LRU eviction, which causes the system to run OOM.

The problem is fixed by skipping recovering  values for LRU regions.

A new system property ""disk.recoverLruValues" is added to support
reading values for lru regions.

+
+
+   * Returns true if the values for the given disk recovery store should be recovered.
+   */
+  private boolean recoverLruValue(DiskRecoveryStore drs) {
+    if (isLruValueRecoveryDisabled(drs)) {
+      return false;
+    } else if (drs.lruLimitExceeded()) {
+      this.stats.incRecoveredValuesSkippedDueToLRU();
+      return false;
+    }
+    return true;
+  }
+
+  private boolean isLruValueRecoveryDisabled(DiskRecoveryStore store) {
+    return !store.getDiskStore().isOffline() && !getParent().RECOVER_LRU_VALUES
+        && !store.getEvictionAttributes().getAlgorithm().isNone();
+  }
+
+  /**
-    } else if (recoverValue && drs.lruLimitExceeded() && !getParent().isOfflineCompacting()) {
-      this.stats.incRecoveredValuesSkippedDueToLRU();
-      recoverValue = false;
+    } else if (recoverValue && !getParent().isOfflineCompacting()) {
+      recoverValue = recoverLruValue(drs);
+
-    } else if (recoverValue && drs.lruLimitExceeded() && !getParent().isOfflineCompacting()) {
-      this.stats.incRecoveredValuesSkippedDueToLRU();
-      recoverValue = false;
+    } else if (recoverValue && !getParent().isOfflineCompacting()) {
+      recoverValue = recoverLruValue(drs);
-    } else if (recoverValue && drs.lruLimitExceeded() && !getParent().isOfflineCompacting()) {
-      this.stats.incRecoveredValuesSkippedDueToLRU();
-      recoverValue = false;
+    } else if (recoverValue && !getParent().isOfflineCompacting()) {
+      recoverValue = recoverLruValue(drs);
-      // Don't bother to include any stores that have reached the lru limit
-        if (store.lruLimitExceeded()) {
+        if (isLruValueRecoveryDisabled(store) || store.lruLimitExceeded()) {
-

INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS65 INS43 INS42 INS25 INS41 INS43 INS42 INS41 INS66 INS42 INS32 INS8 MOV25 INS9 INS42 INS27 INS25 INS42 INS42 INS41 MOV32 INS38 INS38 INS38 MOV27 INS8 INS9 INS41 INS32 INS22 INS32 INS21 INS9 INS32 INS42 INS32 INS42 INS32 INS42 INS7 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV32 INS42 INS42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL9 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL9