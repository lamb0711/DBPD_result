GEODE-5420: Protect events in HAContainer from premature modification

- Updated putInProgress boolean in HAWrapper to a counter to prevent prematurely setting ClientUpdateMessage to null when events are temporarily queued during a GII or message dispatcher initialization
- decAndRemoveFromHAContainer only removes when putInProgress counter and ref count are 0
- Refactored putEventInHARegion/putConditionallyInHAContainer to prevent overwriting an existing entry in the HAContainer.  Also reduces simplifies the code and reduces duplicated logic.
- Wrote missing basic HARegionQueue unit/integration tests, and an integration test to capture setting the ClientUpdateMessage property on HAEventWrapper to null prematurely
- Added new event tracing messages at debug logging level to help track similar issues in the future

Co-authored-by: Ryan McMahon <rmcmahon@pivotal.io>
Co-authored-by: Lynn Hughes-Godfrey <lhughesgodfrey@pivotal.io>

+
+
+            if (conflatable instanceof HAEventWrapper) {
+              HAEventWrapper haEventWrapper = (HAEventWrapper) conflatable;
+              haEventWrapper.incrementPutInProgressCounter();
+              if (logger.isDebugEnabled()) {
+                logger.debug(
+                    "Incremented PutInProgressCounter on HAEventWrapper with Event ID hash code: "
+                        + haEventWrapper.hashCode()
+                        + "; System ID hash code: "
+                        + System.identityHashCode(haEventWrapper) + "; Wrapper details: "
+                        + haEventWrapper);
+              }
+            }
+
+
+
-              "Message is not added to the queue. Message dispatcher for proxy: {} doesn't exist.",
-              this);
+              "Message was not added to the queue. Message dispatcher was null for proxy: " + this
+                  + ". Event ID hash code: " + conflatable.hashCode() + "; System ID hash code: "
+                  + System.identityHashCode(conflatable) + "; Conflatable details: " + conflatable
+                      .toString());
+      if (logger.isDebugEnabled()) {
+        logger.debug(
+            "Message was not added to the queue. Event ID hash code: " + conflatable.hashCode()
+                + "; System ID hash code: "
+                + System.identityHashCode(conflatable) + "; Conflatable details: " + conflatable
+                    .toString());
+      }
+
-      Conflatable nextEvent;
-      while ((nextEvent = queuedEvents.poll()) != null) {
-        this._messageDispatcher.enqueueMessage(nextEvent);
-      }
+
+      drainQueuedEvents(false);
-        while ((nextEvent = queuedEvents.poll()) != null) {
-          this._messageDispatcher.enqueueMessage(nextEvent);
-        }
+        drainQueuedEvents(true);
+  private void drainQueuedEvents(boolean withSynchronization) {
+    Conflatable nextEvent;
+    while ((nextEvent = queuedEvents.poll()) != null) {
+      if (logger.isDebugEnabled()) {
+        if (nextEvent instanceof HAEventWrapper) {
+          logger.debug(
+              "Draining events queued during message dispatcher initialization "
+                  + (withSynchronization ? "with" : "without")
+                  + " synchronization. Event ID hash code: "
+                  + nextEvent.hashCode()
+                  + "; System ID hash code: " + System.identityHashCode(nextEvent)
+                  + "; Wrapper details: " + nextEvent);
+        }
+      }
+
+      this._messageDispatcher.enqueueMessage(nextEvent);
+
+      if (nextEvent instanceof HAEventWrapper) {
+        ((HAEventWrapper) nextEvent).decrementPutInProgressCounter();
+      }
+    }
+  }
+

INS31 INS83 INS39 INS42 INS44 INS8 INS39 INS42 MOV60 INS61 INS8 MOV27 INS8 INS25 MOV21 INS21 INS51 INS25 MOV21 INS25 INS32 MOV8 INS32 MOV22 INS8 INS32 INS8 INS62 INS8 INS21 INS42 INS42 UPD42 MOV42 INS9 MOV21 MOV21 INS42 INS42 INS25 INS42 INS43 INS21 MOV32 INS32 INS62 INS8 INS42 INS32 INS42 INS42 INS42 INS27 UPD42 INS9 INS42 INS43 INS21 INS36 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS32 INS11 INS25 INS27 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS27 INS43 INS42 INS62 INS8 INS45 INS52 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS36 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS43 INS60 INS21 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS8 INS42 INS45 INS45 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS21 INS43 INS42 INS32 INS42 INS42 INS42 INS27 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 DEL45 DEL52 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL33 DEL27 DEL8 DEL61 DEL8 DEL61 DEL8 DEL51