GEODE-6857: Moves function timeout to function operations.

* Extracts out an abstract function operation that manages setting
  and restoring timeout.

* Move timeout property read to AbstractExecution constructor.

+import static org.apache.geode.internal.cache.execute.AbstractExecution.DEFAULT_CLIENT_FUNCTION_TIMEOUT;
+
+   * @param timeoutMs timeout in milliseconds
-      UserAttributes attributes, String[] groups) {
+      UserAttributes attributes, String[] groups, final int timeoutMs) {
-        isFnSerializationReqd, (byte) 0, groups, allServers, executor.isIgnoreDepartedMembers());
+        isFnSerializationReqd, (byte) 0, groups, allServers, executor.isIgnoreDepartedMembers(),
+        timeoutMs);
-          hasResult, rc, isFnSerializationReqd, attributes);
+          hasResult, rc, isFnSerializationReqd, attributes, timeoutMs);
-                executor.isIgnoreDepartedMembers());
+                executor.isIgnoreDepartedMembers(), timeoutMs);
-            maxRetryAttempts = ((PoolImpl) pool).getConnectionSource().getAllServers().size() - 1;
+            maxRetryAttempts = pool.getConnectionSource().getAllServers().size() - 1;
-            maxRetryAttempts, groups, allServers);
+            maxRetryAttempts, groups, allServers, timeoutMs);
-      boolean isHA, boolean optimizeForWrite, UserAttributes properties, String[] groups) {
+      boolean isHA, boolean optimizeForWrite, UserAttributes properties, String[] groups,
+      final int timeoutMs) {
-        executor.isIgnoreDepartedMembers());
+        executor.isIgnoreDepartedMembers(), timeoutMs);
-          hasResult, rc, isFnSerializationReqd, isHA, optimizeForWrite, properties);
+          hasResult, rc, isFnSerializationReqd, isHA, optimizeForWrite, properties, timeoutMs);
-                executor.isIgnoreDepartedMembers());
+                executor.isIgnoreDepartedMembers(), timeoutMs);
-            maxRetryAttempts = ((PoolImpl) pool).getConnectionSource().getAllServers().size() - 1;
+            maxRetryAttempts = pool.getConnectionSource().getAllServers().size() - 1;
-            allServers);
+            allServers, timeoutMs);
-  private static void reexecute(ExecutablePool pool, Function function,
-      ServerFunctionExecutor serverExecutor, ResultCollector resultCollector, byte hasResult,
-      boolean isFnSerializationReqd, int retryAttempts, String[] groups, boolean allMembers) {
+  static void reexecute(ExecutablePool pool, Function function,
+      ServerFunctionExecutor serverExecutor, ResultCollector resultCollector,
+      byte hasResult,
+      boolean isFnSerializationReqd, int retryAttempts, String[] groups,
+      boolean allMembers,
+      final int timeoutMs) {
-          serverExecutor.isIgnoreDepartedMembers());
+          serverExecutor.isIgnoreDepartedMembers(), timeoutMs);
-  private static void reexecute(ExecutablePool pool, String functionId,
-      ServerFunctionExecutor serverExecutor, ResultCollector resultCollector, byte hasResult,
+  static void reexecute(ExecutablePool pool, String functionId,
+      ServerFunctionExecutor serverExecutor, ResultCollector resultCollector,
+      byte hasResult,
-      boolean optimizeForWrite, String[] groups, boolean allMembers) {
+      boolean optimizeForWrite, String[] groups, boolean allMembers,
+      final int timeoutMs) {
-              groups, allMembers, serverExecutor.isIgnoreDepartedMembers());
+              groups, allMembers, serverExecutor.isIgnoreDepartedMembers(), timeoutMs);
-      boolean isFnSerializationReqd, UserAttributes attributes) {
+      boolean isFnSerializationReqd, UserAttributes attributes, final int timeoutMs) {
-          false, false);
+          false, false, timeoutMs);
-      UserAttributes properties) {
+      UserAttributes properties, final int timeoutMs) {
-          null/* onGroups does not use single-hop for now */, false, false);
+          null/* onGroups does not use single-hop for now */, false, false, timeoutMs);
-  static class ExecuteFunctionOpImpl extends AbstractOp {
+  static class ExecuteFunctionOpImpl extends AbstractOpWithTimeout {
-        String[] groups, boolean allMembers, boolean ignoreFailedMembers) {
-      super(MessageType.EXECUTE_FUNCTION, MSG_PARTS);
+        String[] groups, boolean allMembers, boolean ignoreFailedMembers, final int timeoutMs) {
+      super(MessageType.EXECUTE_FUNCTION, MSG_PARTS, timeoutMs);
-        boolean isFnSerializationReqd, boolean isHA, boolean optimizeForWrite,
-        byte isReexecute,
-        String[] groups, boolean allMembers, boolean ignoreFailedMembers) {
-      super(MessageType.EXECUTE_FUNCTION, MSG_PARTS);
+        boolean isFnSerializationReqd, boolean isHA, boolean optimizeForWrite, byte isReexecute,
+        String[] groups, boolean allMembers, boolean ignoreFailedMembers, final int timeoutMs) {
+      super(MessageType.EXECUTE_FUNCTION, MSG_PARTS, timeoutMs);
-      super(MessageType.EXECUTE_FUNCTION, MSG_PARTS);
+      super(MessageType.EXECUTE_FUNCTION, MSG_PARTS, op.getTimeoutMs());
+
-      if (ConnectionImpl
-          .getClientFunctionTimeout() == ConnectionImpl.DEFAULT_CLIENT_FUNCTION_TIMEOUT) {
+      if (getTimeoutMs() == DEFAULT_CLIENT_FUNCTION_TIMEOUT) {
-        Part.encodeInt(ConnectionImpl.getClientFunctionTimeout(), bytes, 1);
+        Part.encodeInt(getTimeoutMs(), bytes, 1);

INS26 INS40 INS44 INS44 INS44 INS44 INS44 INS44 UPD43 INS65 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 UPD42 INS44 INS44 INS42 INS66 INS83 INS39 INS42 INS83 INS39 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL43 DEL42 DEL11 DEL36 DEL83 DEL83 DEL42 DEL40 DEL42