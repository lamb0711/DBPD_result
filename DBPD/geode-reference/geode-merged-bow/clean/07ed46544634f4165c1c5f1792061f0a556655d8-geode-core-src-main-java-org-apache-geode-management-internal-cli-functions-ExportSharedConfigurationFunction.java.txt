GEODE-2197: refactor cluster config

 * not to save the xml, properties in the file system.
 * the cc region's change listener is to download the jar from other locators

-import java.io.File;
-import java.util.UUID;
-
-
+import org.apache.geode.management.internal.configuration.domain.Configuration;
+import java.io.File;
+import java.util.UUID;
+
-    if (locator.isSharedConfigurationRunning()) {
-      SharedConfiguration sc = locator.getSharedConfiguration();
-
-      String zipFileName =
-          CliStrings.format(CliStrings.EXPORT_SHARED_CONFIG__FILE__NAME, UUID.randomUUID());
-
-      String targetFilePath = FilenameUtils.concat(sc.getSharedConfigurationDirPath(), zipFileName);
-      try {
-        ZipUtils.zip(sc.getSharedConfigurationDirPath(), targetFilePath);
-        File zippedSharedConfig = new File(targetFilePath);
-        byte[] zippedConfigData = FileUtils.readFileToByteArray(zippedSharedConfig);
-        FileUtils.forceDelete(zippedSharedConfig);
-        CliFunctionResult result = new CliFunctionResult(locator.getDistributedSystem().getName(),
-            zippedConfigData, new String[] {zipFileName});
-        context.getResultSender().lastResult(result);
-      } catch (Exception e) {
-        context.getResultSender().lastResult(new CliFunctionResult(memberName, e, e.getMessage()));
-      }
-    } else {
+    if (!locator.isSharedConfigurationRunning()) {
+      return;
+    }
+
+    SharedConfiguration sc = locator.getSharedConfiguration();
+    String zipFileName =
+        CliStrings.format(CliStrings.EXPORT_SHARED_CONFIG__FILE__NAME, UUID.randomUUID());
+    File zipFile = new File(sc.getSharedConfigurationDirPath(), zipFileName);
+
+    try {
+      for (Configuration config : sc.getEntireConfiguration().values()) {
+        sc.writeConfig(config);
+      }
+
+      ZipUtils.zip(sc.getSharedConfigurationDirPath(), zipFile.getCanonicalPath());
+
+      byte[] zippedConfigData = FileUtils.readFileToByteArray(zipFile);
+      FileUtils.forceDelete(zipFile);
+      CliFunctionResult result = new CliFunctionResult(locator.getDistributedSystem().getName(),
+          zippedConfigData, new String[]{zipFileName});
+      context.getResultSender().lastResult(result);
+    } catch (Exception e) {
+      context.getResultSender().lastResult(new CliFunctionResult(memberName, e, e.getMessage()));

MOV26 MOV26 INS26 INS40 MOV8 MOV60 MOV60 INS25 INS60 INS38 INS8 MOV43 INS59 MOV32 MOV60 MOV21 INS41 INS42 INS14 INS70 INS21 MOV43 MOV32 INS42 INS44 INS32 INS8 INS32 UPD42 MOV42 UPD42 MOV42 INS43 INS42 INS32 INS42 MOV21 INS42 INS42 MOV32 INS32 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL14 DEL59 DEL60 DEL8 DEL25 DEL8