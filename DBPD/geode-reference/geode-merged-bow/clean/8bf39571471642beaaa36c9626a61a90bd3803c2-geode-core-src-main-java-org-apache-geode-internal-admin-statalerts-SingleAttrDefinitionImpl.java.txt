Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Implementation of {@link StatAlertDefinition} This provides the definition
- * for single statistic
+ * Implementation of {@link StatAlertDefinition} This provides the definition for single statistic
-  public SingleAttrDefinitionImpl() {
-  }
+  public SingleAttrDefinitionImpl() {}
-      Statistics[] temp = factory.findStatisticsByTextId(statisticInfo
-          .getStatisticsTextId());
+      Statistics[] temp = factory.findStatisticsByTextId(statisticInfo.getStatisticsTextId());
-   * @param name
-   *                name to be set for this StatAlertDefinition.
+   * @param name name to be set for this StatAlertDefinition.
-    return new StatisticInfo[] { statisticInfo };
+    return new StatisticInfo[] {statisticInfo};
-   * @see org.apache.geode.internal.admin.StatAlertDefinition#setStatisticInfo(org.apache.geode.internal.admin.StatisticInfo[])
+   * @see
+   * org.apache.geode.internal.admin.StatAlertDefinition#setStatisticInfo(org.apache.geode.internal.
+   * admin.StatisticInfo[])
-    vals[0] = statisticInfo.getStatistics().get(
-        statisticInfo.getStatisticDescriptor());
+    vals[0] = statisticInfo.getStatistics().get(statisticInfo.getStatisticDescriptor());
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    this.statisticInfo = (StatisticInfo)DataSerializer.readObject(in);
+    this.statisticInfo = (StatisticInfo) DataSerializer.readObject(in);

UPD66 UPD66 DEL66