GEODE-4762: Remove dead code.


-  public static final String GLOBAL_MAX_BUCKETS_PROPERTY = "GLOBAL_MAX_BUCKETS"; // "GLOBAL_MAX_BUCKETS";
+  public static final String GLOBAL_MAX_BUCKETS_PROPERTY = "GLOBAL_MAX_BUCKETS";
-  // EXPIRATION ATTRIBUTES
-
-  /**
-   * Sets the idleTimeout expiration attributes for region entries for the next
-   * <code>PartitionAttributes</code> created.
-   *
-   * @param idleTimeout the idleTimeout ExpirationAttributes for entries in this region
-   * @throws IllegalArgumentException if idleTimeout is null
-   * @return PartitionAttributeFactory
-   */
-  /*
-   * public PartitionAttributesFactory<K,V> setEntryIdleTimeout( ExpirationAttributes idleTimeout) {
-   * if (idleTimeout == null) { throw new IllegalArgumentException(LocalizedStrings.
-   * PartitionAttributesFactory_IDLETIMEOUT_MUST_NOT_BE_NULL.toLocalizedString()); }
-   * this.partitionAttributes.entryIdleTimeoutExpiration = idleTimeout; return this; }
-   */
-
-  /**
-   * Sets the timeToLive expiration attributes for region entries for the next
-   * <code>PartitionAttributes</code> created.
-   *
-   * @param timeToLive the timeToLive ExpirationAttributes for entries in this region
-   * @throws IllegalArgumentException if timeToLive is null
-   */
-  /*
-   * public PartitionAttributesFactory<K,V> setEntryTimeToLive( ExpirationAttributes timeToLive) {
-   * if (timeToLive == null) { throw new IllegalArgumentException(LocalizedStrings.
-   * PartitionAttributesFactory_TIMETOLIVE_MUST_NOT_BE_NULL.toLocalizedString()); }
-   * this.partitionAttributes.entryTimeToLiveExpiration = timeToLive; return this; }
-   */
-
-  /**
-   * Enables/Disables local Caching for this node for region entries for the next
-   * <code>PartitionAttributes</code> created. Default is true.
-   *
-   * @param isLocalCache
-   * @return PartitionAttributesFactory
-   */
-  // TODO: Enable when we have local caching propertly implemented - mthomas
-  // 2/32/2006
-  // public PartitionAttributesFactory<K,V> enableLocalCaching(boolean isLocalCache)
-  // {
-  // this.partitionAttributes.localCaching = isLocalCache;
-  // return this;
-  // }
-  // DISTRIBUTION ATTRIBUTES
-  // FACTORY METHOD
-    // setDefaults(); [bruce] defaults are set in the PartitionedRegion when the
-    // attributes are applied
+    // defaults are set in the PartitionedRegion when the attributes are applied
-
-  // /**
-  // * This method sets the properties to their default values in preparation
-  // * for returning a PartitionAttributes to the user. For example, if it
-  // * doesn't have localMaxMemory, it would set it to
-  // * LOCAL_MAX_MEMORY_DEFAULT.
-  // *
-  // */
-  // private void setDefaults()
-  // {
-  // if (this.partitionAttributes.localProperties
-  // .get(PartitionAttributesFactory.LOCAL_MAX_MEMORY_PROPERTY) == null) {
-  // this.partitionAttributes.setLocalMaxMemory(PartitionAttributesFactory.LOCAL_MAX_MEMORY_DEFAULT);
-  // }
-  //
-  // }

