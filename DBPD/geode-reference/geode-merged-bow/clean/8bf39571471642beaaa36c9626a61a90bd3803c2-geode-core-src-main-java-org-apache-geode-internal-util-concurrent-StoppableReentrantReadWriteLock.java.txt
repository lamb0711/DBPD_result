Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Written by Doug Lea with assistance from members of JCP JSR-166
- * Expert Group and released to the public domain, as explained at
- * http://creativecommons.org/licenses/publicdomain
+ * Written by Doug Lea with assistance from members of JCP JSR-166 Expert Group and released to the
+ * public domain, as explained at http://creativecommons.org/licenses/publicdomain
- * Instances of {@link java.util.concurrent.locks.ReentrantReadWriteLock}
- * that respond to cancellation
+ * Instances of {@link java.util.concurrent.locks.ReentrantReadWriteLock} that respond to
+ * cancellation
-public class StoppableReentrantReadWriteLock implements /* ReadWriteLock, */ java.io.Serializable  {
+public class StoppableReentrantReadWriteLock implements /* ReadWriteLock, */ java.io.Serializable {
-  
+
-  
+
-  
+
+   * 
-  
+
-  
+
-    
+
+     * 
-      }
+    }
-          }
-          catch (InterruptedException e) {
+          } catch (InterruptedException e) {
-        if (interrupted) Thread.currentThread().interrupt();
+        if (interrupted)
+          Thread.currentThread().interrupt();
-//     /**
-//      * @return the new condition
-//      */
-//     public StoppableCondition newCondition() {
-//       return new StoppableCondition(lock.newCondition(), stopper);
-//     }
+    // /**
+    // * @return the new condition
+    // */
+    // public StoppableCondition newCondition() {
+    // return new StoppableCondition(lock.newCondition(), stopper);
+    // }
-  
+
-    
+
-    
+
-    
+
+     * 
-      }
+    }
-          }
-          catch (InterruptedException e) {
+          } catch (InterruptedException e) {
-        if (interrupted) Thread.currentThread().interrupt();
+        if (interrupted)
+          Thread.currentThread().interrupt();
-//     /**
-//      * @return the new condition
-//      */
-//     public StoppableCondition newCondition() {
-//       return new StoppableCondition(lock.newCondition(), stopper);
-//     }
-    
+    // /**
+    // * @return the new condition
+    // */
+    // public StoppableCondition newCondition() {
+    // return new StoppableCondition(lock.newCondition(), stopper);
+    // }
+

INS66 UPD66