Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public DummyCachePerfStats() {
-  }
+  public DummyCachePerfStats() {}
-  public void incReliableQueuedOps(int inc) {
-  }
+  public void incReliableQueuedOps(int inc) {}
-  public void incReliableQueueSize(int inc) {
-  }
+  public void incReliableQueueSize(int inc) {}
-  public void incReliableQueueMax(int inc) {
-  }
+  public void incReliableQueueMax(int inc) {}
-  public void incReliableRegions(int inc) {
-  }
+  public void incReliableRegions(int inc) {}
-  public void incReliableRegionsMissing(int inc) {
-  }
+  public void incReliableRegionsMissing(int inc) {}
-  public void incReliableRegionsQueuing(int inc) {
-  }
+  public void incReliableRegionsQueuing(int inc) {}
-  public void incReliableRegionsMissingFullAccess(int inc) {
-  }
+  public void incReliableRegionsMissingFullAccess(int inc) {}
-  public void incReliableRegionsMissingLimitedAccess(int inc) {
-  }
+  public void incReliableRegionsMissingLimitedAccess(int inc) {}
-  public void incReliableRegionsMissingNoAccess(int inc) {
-  }
+  public void incReliableRegionsMissingNoAccess(int inc) {}
-  public void incQueuedEvents(int inc) {
-  }
+  public void incQueuedEvents(int inc) {}
-  public void endLoad(long start) {
-  }
+  public void endLoad(long start) {}
-  public void endNetload(long start) {
-  }
+  public void endNetload(long start) {}
-  public void endNetsearch(long start) {
-  }
+  public void endNetsearch(long start) {}
-  public void endCacheWriterCall(long start) {
-  }
+  public void endCacheWriterCall(long start) {}
-  public void endGetInitialImage(long start) {
-  }
+  public void endGetInitialImage(long start) {}
-  public void endNoGIIDone(long start) {
-  }
+  public void endNoGIIDone(long start) {}
-  public void incGetInitialImageKeysReceived() {
-  }
+  public void incGetInitialImageKeysReceived() {}
-  public void incRegions(int inc) {
-  }
+  public void incRegions(int inc) {}
-  public void incPartitionedRegions(int inc) {
-  }
+  public void incPartitionedRegions(int inc) {}
-  public void incDestroys() {
-  }
+  public void incDestroys() {}
-  public void incCreates() {
-  }
+  public void incCreates() {}
-  public void incInvalidates() {
-  }
+  public void incInvalidates() {}
-  public void endGet(long start, boolean miss) {
-  }
+  public void endGet(long start, boolean miss) {}
-  public void endPutAll(long start) {
-  }
+  public void endPutAll(long start) {}
-  public void endQueryExecution(long executionTime) {
-  }
+  public void endQueryExecution(long executionTime) {}
- public long getTxFailedLifeTime() {
+  public long getTxFailedLifeTime() {
-  public void incTxConflictCheckTime(long delta) {
-  }
+  public void incTxConflictCheckTime(long delta) {}
-  public void txSuccess(long opTime, long txLifeTime, int txChanges) {
-  }
+  public void txSuccess(long opTime, long txLifeTime, int txChanges) {}
-  public void txFailure(long opTime, long txLifeTime, int txChanges) {
-  }
+  public void txFailure(long opTime, long txLifeTime, int txChanges) {}
-  public void txRollback(long opTime, long txLifeTime, int txChanges) {
-  }
+  public void txRollback(long opTime, long txLifeTime, int txChanges) {}
-  void close() {
-  }
+  void close() {}
-  public void incEventQueueSize(int items) {
-  }
+  public void incEventQueueSize(int items) {}
-  public void incEventQueueThrottleCount(int items) {
-  }
+  public void incEventQueueThrottleCount(int items) {}
-  protected void incEventQueueThrottleTime(long nanos) {
-  }
+  protected void incEventQueueThrottleTime(long nanos) {}
-  protected void incEventThreads(int items) {
-  }
+  protected void incEventThreads(int items) {}
-  public void incEntryCount(int delta) {
-  }
+  public void incEntryCount(int delta) {}
-  public void incRetries() {
-  }
+  public void incRetries() {}
-      public void startJob() {
-      }
+      public void startJob() {}
-      public void endJob() {
-      }
+      public void endJob() {}

