Merge remote-tracking branch 'origin/develop' into wan_cq_donation

-  /** time to wait for a leave request to be transmitted by jgroups */
-  private static final long LEAVE_MESSAGE_SLEEP_TIME = Long.getLong("gemfire.leave-message-sleep-time", 1000);
+  /** time to wait for a broadcast message to be transmitted by jgroups */
+  private static final long BROADCAST_MESSAGE_SLEEP_TIME = Long.getLong("gemfire.broadcast-message-sleep-time", 1000);
-    synchronized (joinResponse) {
-      if (joinResponse[0] == null) {
-        try {
-          // Note that if we give up waiting but a response is on
-          // the way we will get the new view and join that way.
-          // See installView()
-          long timeout = Math.max(services.getConfig().getMemberTimeout(), services.getConfig().getJoinTimeout() / 5);
-          joinResponse.wait(timeout);
-        } catch (InterruptedException e) {
-          logger.debug("join attempt was interrupted");
-          Thread.currentThread().interrupt();
-          return false;
-        }
-      }
-      response = joinResponse[0];
+    try {
+      response = waitForJoinResponse();
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+      return false;
-    if (response != null) {
-      logger.debug("received join response {}", response);
-      joinResponse[0] = null;
-      String failReason = response.getRejectionMessage();
-      if (failReason != null) {
-        if (failReason.contains("Rejecting the attempt of a member using an older version") 
-            || failReason.contains("15806")) {
-          throw new SystemConnectException(failReason);
-        }
-        throw new AuthenticationFailedException(failReason);
-      }
-      if (response.getCurrentView() != null) {
-        if (response.getBecomeCoordinator()) {
-          logger.info("I am being told to become the membership coordinator by {}", coord);
-          synchronized(viewInstallationLock) {
-            this.currentView = response.getCurrentView();
-            becomeCoordinator(null);
-          }
-        } else {
-          this.birthViewId = response.getMemberID().getVmViewId();
-          this.localAddress.setVmViewId(this.birthViewId);
-          GMSMember me = (GMSMember) this.localAddress.getNetMember();
-          me.setBirthViewId(birthViewId);
-          installView(response.getCurrentView());
-        }
-
-        return true;
-
-      } else {
-        logger.info("received join response with no membership view: {}", response);
-      }
-    } else {
+    
+    if (response == null) {
+      return isJoined;
-    return isJoined;
+
+    logger.debug("received join response {}", response);
+    joinResponse[0] = null;
+    String failReason = response.getRejectionMessage();
+    if (failReason != null) {
+      if (failReason.contains("Rejecting the attempt of a member using an older version") 
+          || failReason.contains("15806")) {
+        throw new SystemConnectException(failReason);
+      }
+      throw new AuthenticationFailedException(failReason);
+    }
+    
+    if (response.getCurrentView() == null) {
+      logger.info("received join response with no membership view: {}", response);
+      return isJoined;
+    }
+
+    if (response.getBecomeCoordinator()) {
+      logger.info("I am being told to become the membership coordinator by {}", coord);
+      synchronized(viewInstallationLock) {
+        this.currentView = response.getCurrentView();
+        becomeCoordinator(null);
+      }
+      return true;
+    }
+    
+    this.birthViewId = response.getMemberID().getVmViewId();
+    this.localAddress.setVmViewId(this.birthViewId);
+    GMSMember me = (GMSMember) this.localAddress.getNetMember();
+    me.setBirthViewId(birthViewId);
+    installView(response.getCurrentView());
+
+    return true;
+  }
+
+  private JoinResponseMessage waitForJoinResponse() throws InterruptedException {
+    JoinResponseMessage response;
+    synchronized (joinResponse) {
+      if (joinResponse[0] == null && !isJoined) {
+        // Note that if we give up waiting but a response is on
+        // the way we will get the new view and join that way.
+        // See installView()
+        long timeout = Math.max(services.getConfig().getMemberTimeout(), services.getConfig().getJoinTimeout() / 5);
+        joinResponse.wait(timeout);
+      }
+      response = joinResponse[0];
+    }
+    return response;
-          installView(view);
+          installView(view); // this will notifyAll the joinResponse
-      isJoined = true;
-      synchronized(joinResponse) {
-        joinResponse.notifyAll();
+      if (!isJoined) {
+        logger.debug("notifying join thread");
+        isJoined = true;
+        synchronized(joinResponse) {
+          joinResponse.notifyAll();
+        }
-    boolean waitForProcessing = false;
-
-          waitForProcessing = true;
-    if (waitForProcessing) {
-      try {
-        Thread.sleep(LEAVE_MESSAGE_SLEEP_TIME);
-      } catch (InterruptedException e) {
-        Thread.currentThread().interrupt();
-      }
-    }
-            Thread.sleep(LEAVE_MESSAGE_SLEEP_TIME);
+            Thread.sleep(BROADCAST_MESSAGE_SLEEP_TIME);

INS31 MOV8 INS83 INS43 INS42 INS43 MOV8 UPD42 MOV60 MOV60 MOV25 MOV60 INS54 INS25 INS25 MOV25 MOV21 MOV21 MOV60 MOV21 MOV21 MOV41 INS42 INS42 INS60 INS51 INS41 UPD66 UPD45 INS8 MOV12 INS27 INS8 UPD27 MOV27 MOV8 INS43 INS59 INS42 MOV8 INS42 INS21 INS42 INS33 MOV25 MOV41 INS41 INS41 INS42 INS42 INS25 MOV21 INS25 INS7 INS42 INS9 INS27 MOV8 INS38 INS8 INS42 INS32 MOV27 INS38 INS42 INS21 MOV21 MOV51 INS42 INS42 INS32 INS42 INS42 INS45 UPD42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL8 DEL25 DEL42 DEL51 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL54 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25