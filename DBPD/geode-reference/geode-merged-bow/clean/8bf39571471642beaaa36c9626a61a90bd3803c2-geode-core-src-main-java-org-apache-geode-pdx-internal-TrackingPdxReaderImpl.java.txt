Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Used to track what fields are actually read by the user's code.
- * We want to know what fields are not read so that we can preserve them.
+ * Used to track what fields are actually read by the user's code. We want to know what fields are
+ * not read so that we can preserve them.
-   * The PdxReaderImpl that we wrap. Every method needs to be
-   * forwarded to this method.
+   * The PdxReaderImpl that we wrap. Every method needs to be forwarded to this method.
-  
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-  
+
+
+   * 
-      for (int fieldIndex: unreadFields) {
+      for (int fieldIndex : unreadFields) {
+
-    return this.pdxReader.readUnreadFields(); 
+    return this.pdxReader.readUnreadFields();
-  
+
-      UnreadPdxType unreadLocalPdxType = new UnreadPdxType(this.pdxReader.getPdxType(), unreadIndexes);
+      UnreadPdxType unreadLocalPdxType =
+          new UnreadPdxType(this.pdxReader.getPdxType(), unreadIndexes);
-  
+
-  
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-    for (PdxFieldWrapper f: ci.getFields()) {
+    for (PdxFieldWrapper f : ci.getFields()) {

UPD66 UPD66 UPD66 DEL66