GEODE-2644: Make AlertAppender optional and support log4j2.xml

AlertAppender is now configured in log4j2.xml and it supports sessions
that correspond with Cache lifecycle. This allows Geode to pause and
resume AlertAppender without resorting to dynamically adding and
removing appenders.

List of changes:
* Change AlertAppender to be pausable and session-oriented
* Make AlertAppender support configuration from log4j2.xml
* Log4j2 Core dependency is now optional
* Internal Alerting interfaces allow Alerting service to be pluggable
* Reduce coupling between Alerting and the rest of Geode
* Greatly increase test coverage for Alerting

-import org.apache.geode.admin.AlertLevel;
-import org.apache.geode.internal.admin.Alert;
+import org.apache.geode.internal.alerting.AlertLevel;
-import org.apache.geode.internal.logging.log4j.AlertAppender;
-    AlertAppender.getInstance().removeAlertListener(getSender());
+    dm.getAlertingService().removeAlertListener(getSender());
-    if (newLevel != Alert.OFF) {
-      AlertAppender.getInstance().addAlertListener(getSender(), newLevel);
+    if (newLevel != AlertLevel.NONE.intLevel()) {
+      dm.getAlertingService().addAlertListener(getSender(), AlertLevel.find(newLevel));
-    return String.format("Changing alert level to %s", AlertLevel.forSeverity(newLevel));
+    return String.format("Changing alert level to %s", AlertLevel.find(newLevel));

UPD40 INS32 UPD42 UPD42 INS40 INS42 UPD42 INS32 UPD42 UPD42 INS42 INS42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40