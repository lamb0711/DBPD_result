GEODE-4858 refactor jdbc describe & list commands to use result model (#1939)


-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.CompositeResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.DataResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-  public Result describeMapping(@CliOption(key = DESCRIBE_MAPPING__REGION_NAME, mandatory = true,
-      help = DESCRIBE_MAPPING__REGION_NAME__HELP) String regionName) {
+  public ResultModel describeMapping(@CliOption(key = DESCRIBE_MAPPING__REGION_NAME,
+      mandatory = true, help = DESCRIBE_MAPPING__REGION_NAME__HELP) String regionName) {
-    CompositeResultData resultData = ResultBuilder.createCompositeResultData();
-    fillResultData(mapping, resultData);
-    resultData.setHeader(EXPERIMENTAL);
-    return ResultBuilder.buildResult(resultData);
+    ResultModel resultModel = new ResultModel();
+    fillResultData(mapping, resultModel);
+    resultModel.setHeader(EXPERIMENTAL);
+    return resultModel;
-  private void fillResultData(ConnectorService.RegionMapping mapping,
-      CompositeResultData resultData) {
-    CompositeResultData.SectionResultData sectionResult =
-        resultData.addSection(RESULT_SECTION_NAME);
-    sectionResult.addSeparator('-');
-    sectionResult.addData(CREATE_MAPPING__REGION_NAME, mapping.getRegionName());
-    sectionResult.addData(CREATE_MAPPING__CONNECTION_NAME, mapping.getConnectionConfigName());
-    sectionResult.addData(CREATE_MAPPING__TABLE_NAME, mapping.getTableName());
-    sectionResult.addData(CREATE_MAPPING__PDX_CLASS_NAME, mapping.getPdxClassName());
-    sectionResult.addData(CREATE_MAPPING__VALUE_CONTAINS_PRIMARY_KEY,
-        mapping.isPrimaryKeyInValue());
+  private void fillResultData(ConnectorService.RegionMapping mapping, ResultModel resultModel) {
+    DataResultModel sectionModel = resultModel.addData(RESULT_SECTION_NAME);
+    sectionModel.addData(CREATE_MAPPING__REGION_NAME, mapping.getRegionName());
+    sectionModel.addData(CREATE_MAPPING__CONNECTION_NAME, mapping.getConnectionConfigName());
+    sectionModel.addData(CREATE_MAPPING__TABLE_NAME, mapping.getTableName());
+    sectionModel.addData(CREATE_MAPPING__PDX_CLASS_NAME, mapping.getPdxClassName());
+    sectionModel.addData(CREATE_MAPPING__VALUE_CONTAINS_PRIMARY_KEY, mapping.isPrimaryKeyInValue());
-    TabularResultData tabularResultData = sectionResult.addTable(FIELD_TO_COLUMN_TABLE);
+    TabularResultModel tabularResultData = resultModel.addTable(FIELD_TO_COLUMN_TABLE);

UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 UPD43 INS42 UPD42 UPD43 UPD43 UPD42 UPD42 INS14 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 UPD42 UPD42 UPD42 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL13 DEL32 DEL21