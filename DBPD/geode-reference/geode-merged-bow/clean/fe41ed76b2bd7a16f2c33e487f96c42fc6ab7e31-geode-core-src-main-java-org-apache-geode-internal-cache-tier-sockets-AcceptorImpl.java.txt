GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.distributed.internal.*;
-import org.apache.geode.internal.net.SocketCreator;
+import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.DistributionConfig;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.distributed.internal.LonerDistributionManager;
+import org.apache.geode.distributed.internal.PooledExecutorWithDMStats;
+import org.apache.geode.distributed.internal.ReplyProcessor21;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.net.SocketCreator;
+import org.apache.geode.internal.net.SocketCreatorFactory;
-import org.apache.geode.internal.net.SocketCreatorFactory;
-      final GemFireCacheImpl gc;
+      final InternalCache gc;
-        gc = (GemFireCacheImpl) getCachedRegionHelper().getCache();
+        gc = getCachedRegionHelper().getCache();
-    GemFireCacheImpl myCache = (GemFireCacheImpl) cache;
-    Set<PartitionedRegion> prs = myCache.getPartitionedRegions();
+    Set<PartitionedRegion> prs = this.cache.getPartitionedRegions();
-          if (((GemFireCacheImpl) this.cache).isClosed()) { // bug 38834
+          if (this.cache.isClosed()) { // bug 38834
-    GemFireCacheImpl myCache = (GemFireCacheImpl) cache;
-    if (!myCache.forcedDisconnect()) {
-      for (PartitionedRegion pr : myCache.getPartitionedRegions()) {
+    if (!this.cache.forcedDisconnect()) {
+      for (PartitionedRegion pr : this.cache.getPartitionedRegions()) {

MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 UPD40 UPD43 UPD42 INS22 INS22 INS52 INS42 INS52 INS42 INS22 MOV32 INS52 INS42 MOV22 DEL42 DEL43 DEL11 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL43 DEL11 DEL36 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42