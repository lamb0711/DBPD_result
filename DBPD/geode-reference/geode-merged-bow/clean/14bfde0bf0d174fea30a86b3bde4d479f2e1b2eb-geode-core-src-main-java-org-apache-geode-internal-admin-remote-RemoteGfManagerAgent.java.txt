Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingThread;
-  /** A thread group for threads created by this manager agent */
-  protected ThreadGroup threadGroup;
-
-          LocalizedStrings.RemoteGfManagerAgent_EXPECTED_0_TO_BE_A_REMOTETRANSPORTCONFIG
-              .toLocalizedString(cfg.getTransport()));
+          String.format("Expected %s to be a RemoteTransportConfig",
+              cfg.getTransport()));
-    this.threadGroup = LoggingThreadGroup.createThreadGroup("ConsoleDMDaemon", logger);
-        LocalizedStrings.RemoteGfManagerAgent_AN_EXCEPUTIONEXCEPTION_WAS_THROWN_WHILE_WAITING_FOR_FUTURE
-            .toLocalizedString(),
+        "An ExceputionException was thrown while waiting for Future.",
-            LocalizedStrings.RemoteGfManagerAgent_RECURSION_DETECTED_WHILE_SENDING_0
-                .toLocalizedString(msg));
+            String.format("Recursion detected while sending %s",
+                msg));
-            LocalizedStrings.RemoteGfManagerAgent_0_IS_NOT_CURRENTLY_CONNECTED
-                .toLocalizedString(this));
+            String.format("%s is not currently connected.",
+                this));
-        return LocalizedStrings.RemoteGfManagerAgent_DISCONNECT_LISTENER_FOR_0
-            .toLocalizedString(RemoteGfManagerAgent.this);
+        return String.format("Disconnect listener for %s",
+            RemoteGfManagerAgent.this);
-  /**
-   * Returns the thread group in which admin threads should run. This thread group handles uncaught
-   * exceptions nicely.
-   *
-   * @since GemFire 4.0
-   */
-  public ThreadGroup getThreadGroup() {
-    return this.threadGroup;
-  }
-
-  private class DSConnectionDaemon extends Thread {
+  private class DSConnectionDaemon extends LoggingThread {
-      super(RemoteGfManagerAgent.this.threadGroup, "DSConnectionDaemon");
-      setDaemon(true);
+      super("DSConnectionDaemon");
-                  LocalizedStrings.RemoteGFManagerAgent_AN_AUTHENTICATIONFAILEDEXCEPTION_WAS_CAUGHT_WHILE_CONNECTING_TO_DS,
+                  "[RemoteGfManagerAgent]: An AuthenticationFailedException was caught while connecting to DS",
-  private class SnapshotResultDispatcher extends Thread {
+  private class SnapshotResultDispatcher extends LoggingThread {
-      super(RemoteGfManagerAgent.this.threadGroup, "SnapshotResultDispatcher");
-      setDaemon(true);
+      super("SnapshotResultDispatcher");
-          logger.warn(LocalizedMessage
-              .create(LocalizedStrings.RemoteGfManagerAgent_IGNORING_STRANGE_INTERRUPT), ignore);
+          logger.warn("Ignoring strange interrupt", ignore);
-          throw new IllegalArgumentException(LocalizedStrings.RemoteGfManagerAgent_UNKNOWN_VM_KIND_0
-              .toLocalizedString(Integer.valueOf(id.getVmKind())));
+          throw new IllegalArgumentException(String.format("Unknown VM Kind: %s",
+              Integer.valueOf(id.getVmKind())));
-            logger.warn(LocalizedMessage
-                .create(LocalizedStrings.RemoteGfManagerAgent_LISTENER_THREW_AN_EXCEPTION), e);
+            logger.warn("Listener threw an exception.", e);
-        logger.info(LocalizedMessage.create(LocalizedStrings.RemoteGfManagerAgent_ABORTED__0, id));
+        logger.info("aborted  {}", id);
-  private class JoinProcessor extends Thread {
+  private class JoinProcessor extends LoggingThread {
-      super(RemoteGfManagerAgent.this.threadGroup, "JoinProcessor");
-      setDaemon(true);
+      super("JoinProcessor");
-          logger.error(LocalizedMessage
-              .create(LocalizedStrings.RemoteGfManagerAgent_JOINPROCESSOR_CAUGHT_EXCEPTION), e);
+          logger.error("JoinProcessor caught exception...", e);
-              LocalizedStrings.RemoteGfManagerAgent_UNKNOWN_VM_KIND.toLocalizedString());
+              "Unknown VM Kind");

UPD40 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 MOV42 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 INS45 INS45 INS45 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL40 DEL52 DEL42 DEL22 DEL42 DEL42 DEL45 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL42 DEL52 DEL42 DEL22 DEL42 DEL9 DEL32 DEL21 DEL40 DEL42 DEL52 DEL42 DEL22 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL52 DEL42 DEL22 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32