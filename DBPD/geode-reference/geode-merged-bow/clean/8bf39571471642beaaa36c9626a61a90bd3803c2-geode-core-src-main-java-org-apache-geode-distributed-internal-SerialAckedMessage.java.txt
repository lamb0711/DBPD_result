Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A message that is sent to a given collection of managers and then
- * awaits replies.  It is used by some tests to flush the serial communication
- * channels after no-ack tests.
+ * A message that is sent to a given collection of managers and then awaits replies. It is used by
+ * some tests to flush the serial communication channels after no-ack tests.
-public final class SerialAckedMessage extends SerialDistributionMessage implements MessageWithReply {
+public final class SerialAckedMessage extends SerialDistributionMessage
+    implements MessageWithReply {
-  
+
-  
+
-    if (ds != null) {  // this constructor is used in serialization as well as when sending to others
-      this.originDm = (DistributionManager)ds.getDistributionManager();
+    if (ds != null) { // this constructor is used in serialization as well as when sending to others
+      this.originDm = (DistributionManager) ds.getDistributionManager();
-  
+
+   * 
-  public void send(Set recipients, boolean multicast)
-    throws InterruptedException, ReplyException
-  {
+  public void send(Set recipients, boolean multicast) throws InterruptedException, ReplyException {
-    
-    if (Thread.interrupted()) throw new InterruptedException();
+
+    if (Thread.interrupted())
+      throw new InterruptedException();
-       logger.debug("Recipients for SerialAckedMessage are {}", recipients);
+      logger.debug("Recipients for SerialAckedMessage are {}", recipients);
-      for (Iterator i=failures.iterator(); i.hasNext(); ) {
-        InternalDistributedMember mbr = (InternalDistributedMember)i.next();
+      for (Iterator i = failures.iterator(); i.hasNext();) {
+        InternalDistributedMember mbr = (InternalDistributedMember) i.next();
-//        rp.removeMember(mbr, true);
+        // rp.removeMember(mbr, true);
-    
+
-    
+
-  
+
-  
+
-   * Adds the distribution manager that is started up to the current
-   * DM's list of members.
+   * Adds the distribution manager that is started up to the current DM's list of members.
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {

UPD66 UPD66 UPD66 DEL66 DEL66