Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-    String functionId = (String) args[1];    
-    Cache cache = CacheFactory.getAnyInstance();    
-    
-    try {      
+    String functionId = (String) args[1];
+    Cache cache = CacheFactory.getAnyInstance();
+
+    try {
-      if (function == null){
-        context.getResultSender().lastResult("For region on a member did not get function "+functionId);
+      if (function == null) {
+        context.getResultSender()
+            .lastResult("For region on a member did not get function " + functionId);
-      if (execution == null){
+      if (execution == null) {
-      }else{
+      } else {
-        context.getResultSender().lastResult("succeeded in executing on region "+region);
+        context.getResultSender().lastResult("succeeded in executing on region " + region);
-    }catch(FunctionException e){
-      context.getResultSender().lastResult(
-          "FunctionException in MemberRegionFunction =" + e.getMessage());
-    }catch (Exception e) {
-      context.getResultSender().lastResult(
-          "Exception in MemberRegionFunction =" + e.getMessage());
+    } catch (FunctionException e) {
+      context.getResultSender()
+          .lastResult("FunctionException in MemberRegionFunction =" + e.getMessage());
+    } catch (Exception e) {
+      context.getResultSender().lastResult("Exception in MemberRegionFunction =" + e.getMessage());
-    
+

