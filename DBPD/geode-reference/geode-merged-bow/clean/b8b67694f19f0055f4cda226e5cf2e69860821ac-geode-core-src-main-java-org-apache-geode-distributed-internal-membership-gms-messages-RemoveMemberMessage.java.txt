Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.Version;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.StaticSerialization;
+import org.apache.geode.internal.serialization.Version;
-public class RemoveMemberMessage extends HighPriorityDistributionMessage implements HasMemberID {
-  private InternalDistributedMember memberID;
+public class RemoveMemberMessage extends AbstractGMSMessage implements HasMemberID {
+  private GMSMember memberID;
-  public RemoveMemberMessage(InternalDistributedMember recipient, InternalDistributedMember id,
+  public RemoveMemberMessage(GMSMember recipient, GMSMember id,
-  public RemoveMemberMessage(List<InternalDistributedMember> recipients,
-      InternalDistributedMember id, String reason) {
+  public RemoveMemberMessage(List<GMSMember> recipients,
+      GMSMember id, String reason) {
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
-  }
-
-  @Override
-  public InternalDistributedMember getMemberID() {
+  public GMSMember getMemberID() {
-  public void toData(DataOutput out) throws IOException {
-    DataSerializer.writeObject(memberID, out);
-    DataSerializer.writeString(reason, out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
+    GMSUtil.writeMemberID(memberID, out, context);
+    StaticSerialization.writeString(reason, out);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    memberID = DataSerializer.readObject(in);
-    reason = DataSerializer.readString(in);
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
+    memberID = GMSUtil.readMemberID(in, context);
+    reason = StaticSerialization.readString(in);

INS26 UPD40 UPD40 UPD40 UPD40 INS40 UPD40 UPD43 INS31 UPD42 UPD43 UPD43 MOV78 MOV83 MOV39 UPD42 MOV42 MOV44 MOV44 MOV43 MOV8 INS44 UPD42 UPD43 UPD43 UPD74 UPD43 UPD42 UPD43 UPD42 INS43 INS42 UPD42 UPD42 UPD43 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 INS42 UPD42 DEL42 DEL78 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31 DEL83 DEL39 DEL42 DEL31