GEODE-6677: Eliminate Infinite Function Retry (#3690)

* Fix for retry with onRegion
* Fix retry with onRegion singlehop
* Fix for onServer
* DUnitTest for onRegion (singleHop, multihop), onServer
* Unit test for onRegion (singleHop, multihop), onServer

-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, Map<ServerLocation, ? extends HashSet> serverToFilterMap, int mRetryAttempts,
+      ServerRegionFunctionExecutor serverRegionExecutor,
+      ResultCollector resultCollector,
+      byte hasResult,
+      Map<ServerLocation, ? extends HashSet> serverToFilterMap,
+      int mRetryAttempts,
-    boolean reexecute = false;
-    int maxRetryAttempts = 0;
-    if (function.isHA()) {
-      maxRetryAttempts = mRetryAttempts;
-    }
+
-    reexecute = SingleHopClientExecutor.submitAllHA(callableTasks, (LocalRegion) region,
-        function.isHA(), resultCollector, failedNodes);
+    final int retryAttempts =
+        SingleHopClientExecutor.submitAllHA(callableTasks, (LocalRegion) region,
+            function.isHA(), resultCollector, failedNodes, mRetryAttempts, ((PoolImpl) pool));
-    if (reexecute) {
-      resultCollector.clearResults();
-      if (function.isHA()) {
-        ExecuteRegionFunctionOp.reexecute(pool, region.getFullPath(), function,
-            serverRegionExecutor, resultCollector, hasResult, failedNodes, maxRetryAttempts - 1);
-      }
+    if (retryAttempts > 0) {
+      ExecuteRegionFunctionOp.reexecute(pool, region.getFullPath(), function,
+          serverRegionExecutor, resultCollector, hasResult, failedNodes, retryAttempts - 1);
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, Map<ServerLocation, ? extends HashSet> serverToFilterMap, int mRetryAttempts,
+      ServerRegionFunctionExecutor serverRegionExecutor,
+      ResultCollector resultCollector,
+      byte hasResult,
+      Map<ServerLocation, ? extends HashSet> serverToFilterMap,
+      int mRetryAttempts,
-    boolean reexecute = false;
-    int maxRetryAttempts = 0;
-    if (isHA) {
-      maxRetryAttempts = mRetryAttempts;
-    }
+
-    reexecute = SingleHopClientExecutor.submitAllHA(callableTasks, (LocalRegion) region, isHA,
-        resultCollector, failedNodes);
+    final int retryAttempts =
+        SingleHopClientExecutor.submitAllHA(callableTasks, (LocalRegion) region, isHA,
+            resultCollector, failedNodes, mRetryAttempts, ((PoolImpl) pool));
-          callableTasks.size(), reexecute);
+          callableTasks.size(), retryAttempts);
-    if (reexecute) {
+    if (retryAttempts > 0) {
-      if (isHA) {
-        ExecuteRegionFunctionOp.reexecute(pool, region.getFullPath(), functionId,
-            serverRegionExecutor, resultCollector, hasResult, failedNodes, maxRetryAttempts - 1,
-            isHA, optimizeForWrite);
-      }
+      ExecuteRegionFunctionOp.reexecute(pool, region.getFullPath(), functionId,
+          serverRegionExecutor, resultCollector, hasResult, failedNodes, retryAttempts - 1,
+          isHA, optimizeForWrite);

MOV60 INS25 INS60 INS83 UPD39 INS27 MOV8 INS83 MOV39 INS59 INS27 MOV8 UPD42 MOV32 INS42 INS34 INS42 INS32 INS42 INS34 MOV21 INS42 INS36 MOV42 MOV42 MOV42 MOV11 MOV42 MOV42 MOV42 INS42 INS36 INS11 INS11 UPD42 INS43 INS42 UPD42 INS43 INS42 UPD42 INS42 INS42 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL9 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL25 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL25 DEL8