Merge branch 'release/1.3.0'

+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.io.InputStream;
+import java.lang.reflect.Field;
+import java.security.AccessController;
+import java.security.Principal;
+import java.security.PrivilegedAction;
+import java.util.ArrayList;
+import java.util.Enumeration;
+import java.util.Hashtable;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+import javax.servlet.http.HttpSession;
+
+import org.apache.catalina.Manager;
+import org.apache.catalina.ha.session.SerializablePrincipal;
+import org.apache.catalina.realm.GenericPrincipal;
+import org.apache.catalina.security.SecurityUtil;
+import org.apache.catalina.session.StandardSession;
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+
-import org.apache.catalina.Manager;
-import org.apache.catalina.ha.session.SerializablePrincipal;
-import org.apache.catalina.realm.GenericPrincipal;
-import org.apache.catalina.security.SecurityUtil;
-import org.apache.catalina.session.StandardSession;
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-
-import javax.servlet.http.HttpSession;
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.io.InputStream;
-import java.security.AccessController;
-import java.security.Principal;
-import java.security.PrivilegedAction;
-import java.util.ArrayList;
-import java.util.Enumeration;
-import java.util.Hashtable;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.ConcurrentHashMap;
+  private static Field cachedField = null;
+
+  static {
+    try {
+      cachedField = StandardSession.class.getDeclaredField("attributes");
+      cachedField.setAccessible(true);
+    } catch (NoSuchFieldException e) {
+      throw new IllegalStateException(e);
+    }
+  }
-    this.attributes = readInAttributes(in);
+    readInAttributes(in);
-  protected Map readInAttributes(final DataInput in) throws IOException, ClassNotFoundException {
-    return DataSerializer.readObject(in);
+  private void readInAttributes(DataInput in) throws IOException, ClassNotFoundException {
+    ConcurrentHashMap map = (ConcurrentHashMap) DataSerializer.readObject(in);
+    try {
+      Field field = getAttributesFieldObject();
+      field.set(this, map);
+    } catch (IllegalAccessException e) {
+      logError(e);
+      throw new IllegalStateException(e);
+    }
+  }
+
+  protected Field getAttributesFieldObject() {
+    return cachedField;
+  }
+
+  protected void logError(Exception e) {
+    if (getManager() != null) {
+      DeltaSessionManager mgr = (DeltaSessionManager) getManager();
+      mgr.getLogger().error(e);
+    }
-    Map<String, byte[]> serializedAttributes = new ConcurrentHashMap<String, byte[]>();
-    for (Iterator i = this.attributes.entrySet().iterator(); i.hasNext();) {
+    Map<String, byte[]> serializedAttributes = new ConcurrentHashMap<>();
+    for (Iterator i = getAttributes().entrySet().iterator(); i.hasNext();) {
+  protected Map getAttributes() {
+    try {
+      Field field = getAttributesFieldObject();
+      Map map = (Map) field.get(this);
+      return map;
+    } catch (IllegalAccessException e) {
+      logError(e);
+    }
+    throw new IllegalStateException("Unable to access attributes field");
+  }
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 INS23 INS28 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS8 INS83 INS39 MOV42 MOV44 MOV43 MOV43 INS8 INS83 INS43 INS42 MOV8 INS83 INS39 INS42 INS44 INS8 INS83 MOV43 INS42 INS8 INS42 INS42 INS33 INS54 INS60 INS54 INS42 INS43 INS42 INS25 INS54 INS53 INS8 INS12 MOV32 INS43 INS59 INS8 INS12 INS42 INS42 INS27 INS8 INS8 INS12 INS14 INS21 INS21 INS44 INS8 INS42 INS42 INS11 INS60 INS21 INS44 INS8 INS32 INS33 INS60 INS21 INS60 INS60 INS41 INS44 INS8 INS43 INS45 INS7 INS32 INS43 INS42 INS53 MOV43 MOV32 INS43 INS59 INS32 INS43 INS42 INS21 INS53 INS42 INS43 INS59 INS32 UPD74 INS43 INS59 INS43 INS59 INS42 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS32 INS14 INS42 INS42 INS11 INS32 INS42 INS42 UPD43 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS32 INS57 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS32 INS42 INS42 UPD42 INS32 INS42 INS43 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 DEL52 DEL42 DEL22 DEL7 DEL83 DEL83 DEL31 DEL39 DEL85 DEL5 DEL52 DEL42 DEL22