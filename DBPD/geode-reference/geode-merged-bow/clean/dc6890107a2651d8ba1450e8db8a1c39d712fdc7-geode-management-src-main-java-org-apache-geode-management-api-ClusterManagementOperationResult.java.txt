GEODE-6897: implement CMS rebalance operation (#3820)


+import java.util.Date;
+import java.util.concurrent.ExecutionException;
+import com.fasterxml.jackson.annotation.JsonFormat;
+import com.fasterxml.jackson.annotation.JsonProperty;
+import org.apache.geode.management.runtime.OperationResult;
- * {@link ClusterManagementService#startOperation(ClusterManagementOperation)} to convey status of
+ * {@link ClusterManagementService#start(ClusterManagementOperation)} to convey status of
- * status
- * and result of the async operation.
+ * status, result, and start/end times of the async operation.
-public class ClusterManagementOperationResult<V extends JsonSerializable>
+public class ClusterManagementOperationResult<V extends OperationResult>
+  @JsonIgnore
+  private final CompletableFuture<Date> futureOperationEnded;
+
+  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
+  private Date operationStart;
+
+  private String operator;
-   * normally called by {@link ClusterManagementService#startOperation(ClusterManagementOperation)}
+   * for internal use only
-  public ClusterManagementOperationResult(ClusterManagementResult result,
-      CompletableFuture<V> operationResult) {
-    super(result);
-    this.operationResult = operationResult;
+  public ClusterManagementOperationResult() {
+    this.operationResult = null;
+    this.futureOperationEnded = null;
+    this.operator = null;
-   * @return the future result of the async operation
+   * normally called by {@link ClusterManagementService#start(ClusterManagementOperation)}
+   */
+  public ClusterManagementOperationResult(ClusterManagementResult result,
+      CompletableFuture<V> operationResult, Date operationStart,
+      CompletableFuture<Date> futureOperationEnded, String operator) {
+    super(result);
+    this.operationResult = operationResult;
+    this.operationStart = operationStart;
+    this.futureOperationEnded = futureOperationEnded;
+    this.operator = operator;
+  }
+
+  /**
+   * Returns the future result of the async operation
-  public CompletableFuture<V> getResult() {
+  public CompletableFuture<V> getFutureResult() {
+
+  /**
+   * Returns the completed result of the async operation (blocks until complete, if necessary)
+   */
+  @JsonIgnore
+  public V getResult() throws ExecutionException, InterruptedException {
+    return getFutureResult().get();
+  }
+
+  /**
+   * Returns the time at which the async operation was requested
+   */
+  public Date getOperationStart() {
+    return operationStart;
+  }
+
+  /**
+   * Returns the future time the async operation completed. This is guaranteed to complete before
+   * {@link #getFutureResult()}. Note: subsequent stages must be chained to
+   * {@link #getFutureResult()}, not here.
+   */
+  @JsonIgnore
+  public CompletableFuture<Date> getFutureOperationEnded() {
+    return futureOperationEnded;
+  }
+
+  /**
+   * Returns the actual time the async operation completed, or null if not yet completed
+   */
+  @JsonProperty
+  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
+  public Date getOperationEnded() {
+    return futureOperationEnded.getNow(null);
+  }
+
+  /**
+   * Returns the user who initiated the async operation, if initiated externally and security is
+   * enabled
+   */
+  public String getOperator() {
+    return operator;
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 UPD43 INS78 INS83 INS83 INS74 INS59 INS77 INS83 INS43 INS59 INS83 INS43 INS59 INS29 INS83 INS42 INS8 INS44 INS44 INS44 UPD42 INS29 INS78 INS83 INS43 INS42 INS43 INS43 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS78 INS83 INS74 INS42 INS8 INS29 INS78 INS77 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 UPD66 UPD42 INS42 INS43 INS43 INS42 INS42 INS80 INS80 INS42 INS42 INS42 INS42 INS65 INS21 INS21 INS21 INS43 INS42 INS74 INS42 INS43 INS42 INS21 INS21 INS21 UPD65 INS65 INS42 INS42 INS42 INS42 INS41 INS65 INS42 INS41 INS65 INS42 INS43 INS43 INS41 INS65 INS42 INS42 INS80 INS80 INS42 INS41 INS65 INS42 INS41 INS42 INS42 INS42 INS40 INS42 INS45 INS66 INS7 INS7 INS7 INS42 INS43 INS43 INS42 INS7 INS7 INS7 UPD66 INS66 INS32 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS42 INS66 INS42 INS40 INS42 INS45 INS32 INS66 INS66 INS42 UPD42 INS22 INS33 INS22 INS33 INS22 INS33 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS32 INS42 INS68 INS68 INS42 INS42 INS33 INS52 INS42 INS52 INS42 INS52 INS42 UPD42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 DEL66