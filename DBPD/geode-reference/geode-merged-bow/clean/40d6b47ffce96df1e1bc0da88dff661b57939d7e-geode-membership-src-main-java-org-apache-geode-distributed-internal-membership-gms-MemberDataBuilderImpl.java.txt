GEODE-7704: Replacing inheritance of MemberIdentifierImpl with delagation (#4636)

* Deduplicate fields betweeen MemberIdentifierImpl and GMSMemberData

Moving all state down into GMSMemberData and removing duplicate fields
isPartial and versionObject. GMSMemberData now has all of the state of a
member.

* Delegate rather than inherit InternalDistributedMember

Delegating to MemberIdentifierImpl, rather than inheriting from it.

* Delegate to MemberIdentifier, rather than MemberIdentifierImpl

Having InternalDistributedMember delegate to MemberIdentifier, rather than
MemberIdentifierImpl, so that we are not relying on the concrete class and all
required methods are part of the interface. As a result, adding a number of
additional methods to the MemberIdentifier interface.

* Removing uses of getMemberData

Removing uses of getMemberData and adding methods to MemberIdentifier that
delegate to memberData.

* Hiding MemberIdentiferImpl

Using MemberIdentifier everywhere insteand of MemberIdentiferImpl. Still need to
move MemberIdentiferImpl to an internal package.

* Making PMD happy

Marking the MemberIdentifierFactory as immutable.

* Fixing NPE in getGroups

The MemberIdentifierImpl.getGroups needs to check for a null array. Places that
used to call getMemberData.getGroups were throwing an NPE.

* Fixing a test that used MemberIdentifierFactoryImpl

This factory is not going to play well with other parts of the test that are
generating InternalDistributedMembers.

* Fixing AnalyzeSerializablesJUnitTest

InternalDistributedMember now has new serialization methods that delegate to
the methods that it previously was just inheriting.

* Fixing a unit test failure due to mocking MemberData

InternalDistributedMemberTest was mocking the underlying MemberData and
changing state on the InternalDistributedMember. Now that all state is
delegated to the MemberData, this test was failing because the mock was not
reflecting the state changes.

Co-authored-by: Ernie Burghardt <eburghardt@pivotal.io>

+  private boolean isPartial;
+  private String uniqueTag;
+  public MemberDataBuilderImpl setIsPartial(boolean partial) {
+    this.isPartial = partial;
+    return this;
+  }
+
+  @Override
+  public MemberDataBuilder setUniqueTag(String uniqueTag) {
+    this.uniqueTag = uniqueTag;
+    return this;
+  }
+
-        uuidMostSignificantBits, uuidLeastSignificantBits, memberWeight);
+        uuidMostSignificantBits, uuidLeastSignificantBits, memberWeight, isPartial, uniqueTag);

INS23 INS23 INS31 INS31 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS39 INS42 INS21 INS41 INS42 INS42 INS43 INS42 INS21 INS41 INS7 INS52 INS42 INS7 INS52 INS22 INS42 INS22 INS42 INS42 INS42 INS52 INS42 INS52 INS42