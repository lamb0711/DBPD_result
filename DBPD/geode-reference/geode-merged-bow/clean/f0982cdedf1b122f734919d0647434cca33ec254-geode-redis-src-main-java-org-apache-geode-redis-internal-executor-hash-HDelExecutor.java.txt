Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.Map;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.cache.Region;
+import org.apache.geode.redis.internal.RedisDataType;
-/**
- * <pre>
- * Implements the Redis HDEL command.
- *
- * Removes the specified fields from the hash for a given key.
- *
- * Examples:
- *
- * redis> HSET myhash field1 "foo"
- * (integer) 1
- * redis> HDEL myhash field1
- * (integer) 1
- * redis> HDEL myhash field2
- * (integer) 0
- *
- * </pre>
- */
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Map<ByteArrayWrapper, ByteArrayWrapper> map = getMap(context, key);
+    checkDataType(key, RedisDataType.REDIS_HASH, context);
+    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
-      if (map == null || map.isEmpty()) {
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), numDeleted));
-        return;
-      }
-
-      for (int i = START_FIELDS_INDEX; i < commandElems.size(); i++) {
-        ByteArrayWrapper field = new ByteArrayWrapper(commandElems.get(i));
-        Object oldValue = map.remove(field);
-        if (oldValue != null) {
-          numDeleted++;
-        }
-      }
-      // save map
-      saveMap(map, context, key);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
+    if (keyRegion == null) {
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), numDeleted));
+
+    for (int i = START_FIELDS_INDEX; i < commandElems.size(); i++) {
+      ByteArrayWrapper field = new ByteArrayWrapper(commandElems.get(i));
+      Object oldValue = keyRegion.remove(field);
+      if (oldValue != null)
+        numDeleted++;
+    }
+    if (keyRegion.isEmpty()) {
+      context.getRegionProvider().removeKey(key, RedisDataType.REDIS_HASH);
+    }

MOV26 UPD40 UPD40 MOV8 MOV60 MOV25 MOV60 MOV60 INS21 INS25 MOV21 INS32 UPD74 INS27 INS32 INS8 INS42 INS42 INS40 INS42 UPD43 UPD42 UPD42 MOV42 MOV33 INS42 INS42 INS21 UPD42 MOV42 UPD42 UPD42 MOV21 INS32 INS32 INS42 INS42 INS40 UPD42 MOV42 UPD42 INS42 INS42 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL27 DEL42 DEL42 DEL32 DEL27 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54 DEL8