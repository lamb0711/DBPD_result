GEODE-7808: standardize on use of HostAndPort to form client-side connections (#4743)

* Squashed merge of feature/GEODE-7808

removed HostAddress
renamed LocatorAddress to HostAndPort
modified TcpClient methods to take a HostAndPort argument instead of
InetAddress
modified SocketCreator to take a HostAndPort argument instead of
InetAddress

* GEODE-7808 - standardize on use of HostAndPort for connection formation

This continues a previous PR that passed and was approved for merge.
This commit raises up several methods from SocketCreator into the
TcpSocketCreator interface.  This is an intermediate commit.  A
subsequent commit will refactor TcpSocketCreator to separate the client
and server methods for creating server-sockets and client connections to
server-sockets.

* refactored socket-creators to separate concerns

ServerSocketCreator holds methods for non-client comms
ClientSocketCreator holds methods that clients should use for comms
AdvancedSocketCreator holds methods for people who need to get around
the limitations of the other two interfaces

* adding missing interface

* move code out of inner-classes into first-class classes

* renaming interfaces and methods to be less confusing

-import org.apache.geode.annotations.internal.MutableForTesting;
-import org.apache.geode.cache.client.ServerConnectivityException;
-  /** Retrieves an InetAddress given the provided hostname */
-  @MutableForTesting
-  protected static HostnameResolver hostnameResolver =
-      (location) -> InetAddress.getByName(location.getHostName());
-
-    return SocketCreator.resolve_dns ? SocketCreator.getHostName(i) : i.getHostAddress();
+    return SocketCreator.resolve_dns ? i.getHostName() : i.getHostAddress();
-   * caches. The version information in the ID is set to Version.CURRENT.
+   * caches. The version information in the ID is set to Version.CURRENT and the host name
+   * is left unresolved (DistributedMember doesn't expose the InetAddress).
-            MemberDataBuilder.newBuilder(getInetAddress(location), location.getHostName())
+            MemberDataBuilder.newBuilderForLocalHost(location.getHostName())
-  private static InetAddress getInetAddress(ServerLocation location) {
-    final InetAddress addr;
-    try {
-      addr = hostnameResolver.getInetAddress(location);
-    } catch (UnknownHostException e) {
-      throw new ServerConnectivityException("Unable to resolve server location " + location, e);
-    }
-    return addr;
-  }
-
-  public static void setHostnameResolver(final HostnameResolver hostnameResolver) {
-    InternalDistributedMember.hostnameResolver = hostnameResolver;
-  }
-
-        setHostName(SocketCreator.getHostName(LocalHostUtil.getLocalHost()));
+        setHostName(LocalHostUtil.getLocalHost().getHostName());

UPD66 INS66 UPD42 MOV42 MOV32 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL59 DEL86 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42