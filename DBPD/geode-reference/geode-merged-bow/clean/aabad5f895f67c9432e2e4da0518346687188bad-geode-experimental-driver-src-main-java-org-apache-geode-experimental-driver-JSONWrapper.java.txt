GEODE-4315 Convert JSONWrapper to an interface

JSONWrapper is now an interface.  JSONWrapperImpl is what will be returned
by the experimental driver but it will accept anything implementing
JSONWrapper as input.

-public class JSONWrapper implements Comparable<JSONWrapper> {
-
-  protected final String jsonDocument;
+public interface JSONWrapper extends Comparable<JSONWrapper> {
-    return new JSONWrapper(jsonDocument);
+    return new JSONWrapperImpl(jsonDocument);
-  private JSONWrapper(String jsonDocument) {
-    this.jsonDocument = jsonDocument;
-  }
+  public String getJSON();
-  public String getJSON() {
-    return jsonDocument;
-  }
-  @Override
-  public boolean equals(Object o) {
-    if (this == o) {
-      return true;
+  static class JSONWrapperImpl implements JSONWrapper {
+
+
+    protected final String jsonDocument;
+
+    private JSONWrapperImpl(String jsonDocument) {
+      this.jsonDocument = jsonDocument;
-    if (!(o instanceof JSONWrapper)) {
-      return false;
+
+    public String getJSON() {
+      return jsonDocument;
-    JSONWrapper that = (JSONWrapper) o;
-    return jsonDocument.equals(that.jsonDocument);
-  }
-  @Override
-  public int hashCode() {
-    return Objects.hash(jsonDocument);
-  }
+    @Override
+    public boolean equals(Object o) {
+      if (this == o) {
+        return true;
+      }
+      if (!(o instanceof JSONWrapper)) {
+        return false;
+      }
+      JSONWrapper that = (JSONWrapper) o;
+      return jsonDocument.equals(that.getJSON());
+    }
-  @Override
-  public int compareTo(JSONWrapper o) {
-    return jsonDocument.compareTo(o.jsonDocument);
+    @Override
+    public int hashCode() {
+      return Objects.hash(jsonDocument);
+    }
+
+    @Override
+    public int compareTo(JSONWrapper o) {
+      return jsonDocument.compareTo(o.getJSON());
+    }

INS31 INS55 INS83 INS43 INS42 INS83 INS42 MOV43 MOV23 MOV31 MOV31 MOV31 MOV31 MOV31 INS42 UPD42 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL40 DEL40