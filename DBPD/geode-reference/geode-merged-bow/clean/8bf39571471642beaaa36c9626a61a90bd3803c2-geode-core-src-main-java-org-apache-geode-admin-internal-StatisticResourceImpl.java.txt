Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//import org.apache.geode.internal.admin.SystemMember;
+// import org.apache.geode.internal.admin.SystemMember;
-//import java.util.Date;
+// import java.util.Date;
- * @since GemFire     3.5
+ * @since GemFire 3.5
-public class StatisticResourceImpl 
-implements org.apache.geode.admin.StatisticResource {
+public class StatisticResourceImpl implements org.apache.geode.admin.StatisticResource {
-  
+
-  //   Constructor(s)
+  // Constructor(s)
-  
+
-   * @param statResource  the admin StatResource to manage/monitor
-   * @param member        the SystemMember owning this resource
-   * @exception org.apache.geode.admin.AdminException 
-   *            if unable to create this StatisticResource for administration
+   * @param statResource the admin StatResource to manage/monitor
+   * @param member the SystemMember owning this resource
+   * @exception org.apache.geode.admin.AdminException if unable to create this StatisticResource for
+   *            administration
-  public StatisticResourceImpl(StatResource statResource,
-                               SystemMember member)
-                        throws org.apache.geode.admin.AdminException {
+  public StatisticResourceImpl(StatResource statResource, SystemMember member)
+      throws org.apache.geode.admin.AdminException {
-  //   Attributes accessors and mutators
+  // Attributes accessors and mutators
-	public String getName() {
-		return this.name;
-	}
-  
-	public String getDescription() {
-		return this.description;
-	}
-  
+  public String getName() {
+    return this.name;
+  }
+
+  public String getDescription() {
+    return this.description;
+  }
+
-  
-	public String getOwner() {
-		return this.member.toString();
-	}
-  
+
+  public String getOwner() {
+    return this.member.toString();
+  }
+
-      }
-      catch (AdminException e) {
+      } catch (AdminException e) {
-  
+
-  //   Operations
+  // Operations
-      throw new AdminException(LocalizedStrings.StatisticResourceImpl_FAILED_TO_REFRESH_STATISTICS_0_FOR_1.toLocalizedString(getType()+"-"+getName(), getOwner()));
+      throw new AdminException(
+          LocalizedStrings.StatisticResourceImpl_FAILED_TO_REFRESH_STATISTICS_0_FOR_1
+              .toLocalizedString(getType() + "-" + getName(), getOwner()));
-    
+
-    }
-    else {
+    } else {
-  //   Non-public implementation methods
+  // Non-public implementation methods
-  
+
-   * Updates the value of the {@link Statistic} corresponding to the internal 
+   * Updates the value of the {@link Statistic} corresponding to the internal
-   * @param stat  the internal stat to use in updating the matching statistic
+   * @param stat the internal stat to use in updating the matching statistic
-        ((StatisticImpl)this.statistics[i]).setStat(stat);
+        ((StatisticImpl) this.statistics[i]).setStat(stat);
-  
+
-   * Creates a new {@link StatisticImpl} to represent the internal {@link 
-   * org.apache.geode.internal.admin.Stat}
+   * Creates a new {@link StatisticImpl} to represent the internal
+   * {@link org.apache.geode.internal.admin.Stat}
-   * @param stat  the internal stat to wrap in a new statistic
+   * @param stat the internal stat to wrap in a new statistic
-  
-	/**
-	 * Returns a string representation of the object.
-	 * 
-	 * @return a string representation of the object
-	 */
+
+  /**
+   * Returns a string representation of the object.
+   * 
+   * @return a string representation of the object
+   */
-	public String toString() {
-		return getName();
-	}
-  
+  public String toString() {
+    return getName();
+  }
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66