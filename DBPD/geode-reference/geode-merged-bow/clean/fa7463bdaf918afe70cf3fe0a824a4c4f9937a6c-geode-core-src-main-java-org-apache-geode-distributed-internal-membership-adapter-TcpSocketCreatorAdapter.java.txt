GEODE-7541: Removing dependency on SocketCreator/Factory (#4479)

- Pushed static call to SocketCreatorFactory up to DistributionImpl
- SocketCreator is now a parameter to MembershipBuilder
- extracted MembershipSocketCreator interface from SocketCreator
- created adapter layer to handle passthru of SocketCreator calls
- renamed with "Tcp" prefix previously refactored socket creator efforts
- Consolidate socket creator interfaces to just TcpSocketCreator.
- Added checked exception handling to Services and re-arranged the finally block to correctly handle start/started state.

+import java.net.UnknownHostException;
+import java.util.Objects;
-public class SocketCreatorAdapter implements TcpSocketCreator {
-  final SocketCreator socketCreator;
+public class TcpSocketCreatorAdapter implements TcpSocketCreator {
+  private final SocketCreator socketCreator;
-  private SocketCreatorAdapter(final SocketCreator socketCreator) {
+  private TcpSocketCreatorAdapter(final SocketCreator socketCreator) {
+    Objects.requireNonNull(socketCreator);
-    return new SocketCreatorAdapter(socketCreator);
+    return new TcpSocketCreatorAdapter(socketCreator);
+  public InetAddress getLocalHost() throws UnknownHostException {
+    return SocketCreator.getLocalHost();
+  }
+
+  @Override
+  public String getHostName(final InetAddress addr) {
+    return SocketCreator.getHostName(addr);
+  }
+
+  @Override
+  public ServerSocket createServerSocketUsingPortRange(final InetAddress ba, final int backlog,
+      final boolean isBindAddress, final boolean useNIO, final int tcpBufferSize,
+      final int[] tcpPortRange, final boolean sslConnection) throws IOException {
+    return socketCreator.createServerSocketUsingPortRange(ba, backlog, isBindAddress, useNIO,
+        tcpBufferSize, tcpPortRange, sslConnection);
+  }
+
+  @Override
+  public Socket connect(InetAddress inetadd, int port, int timeout,
+      ConnectionWatcher optionalWatcher, boolean clientSide, int socketBufferSize,
+      boolean sslConnection) throws IOException {
+    return socketCreator.connect(inetadd, port, timeout, optionalWatcher, clientSide,
+        socketBufferSize, sslConnection);
+  }
+
+  @Override
+
+  @Override
+  public boolean resolveDns() {
+    return socketCreator.resolve_dns;
+  }

INS26 INS26 INS40 INS40 UPD42 INS31 INS31 INS31 INS31 INS31 INS83 UPD42 INS78 INS83 INS43 INS42 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS8 INS21 INS42 INS42 INS42 INS41 INS42 INS42 INS83 INS43 INS42 INS41 INS42 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS5 INS42 INS83 INS39 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS42 INS41 INS42 INS41 INS32 INS32 INS42 INS32 INS42 INS39 INS85 INS32 INS42 INS42 INS32 INS40 INS42 INS42 INS42 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42