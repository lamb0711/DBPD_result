GEODE-8182: change String commands to use one region (#5165)

* changed all String commands to use the function and to use a single region
* renabled tests ignored for GEODE-8182
* removed the RedisLockService since it is not used in the new data model
* removed the unused del methods on RedisSetCommands and RedisHashCommands
* removed the KeyRegistar since it was no longer needed with a single data region

Co-authored-by: Ray Ingles <ringles@pivotal.io>
-  // TODO: deltas
-  public int append(ByteArrayWrapper appendValue, Region<ByteArrayWrapper, RedisString> region,
+  public int append(ByteArrayWrapper appendValue,
+      Region<ByteArrayWrapper, RedisData> region,
-
-    RedisString redisStringInRegion = region.get(key);
-
-    if (redisStringInRegion == null) {
-      value = appendValue;
-    } else {
-      byte[] newValue = concatArrays(value.toBytes(), appendValue.toBytes());
-      value.setBytes(newValue);
-    }
-
-    delta = value;
-    try {
-      region.put(key, this);
-    } finally {
-      delta = null;
-    }
+    value.append(appendValue.toBytes());
+    delta = appendValue;
+    region.put(key, this);
-  public ByteArrayWrapper get(Region<ByteArrayWrapper, RedisString> region, ByteArrayWrapper key) {
-    return region.get(key).getValue();
+  public ByteArrayWrapper get() {
+    return new ByteArrayWrapper(value.toBytes());
-  public RedisString set(ByteArrayWrapper value, Region<ByteArrayWrapper, RedisString> region,
-      ByteArrayWrapper key) {
+  public void set(ByteArrayWrapper value) {
-    return region.put(key, this);
-  }
-
-  public Boolean setnx(ByteArrayWrapper key, Region<ByteArrayWrapper, RedisString> region,
-      ByteArrayWrapper value) {
-    this.value = value;
-    RedisString redisString = region.putIfAbsent(key, this);
-    return redisString == null;
-  }
-
-  public ByteArrayWrapper getValue() {
-    return value;
-  }
-
-  private byte[] concatArrays(byte[] o, byte[] n) {
-    int oLen = o.length;
-    int nLen = n.length;
-    byte[] combined = new byte[oLen + nLen];
-    System.arraycopy(o, 0, combined, 0, oLen);
-    System.arraycopy(n, 0, combined, oLen, nLen);
-    return combined;
-    DataSerializer.writeByteArray(delta.toBytes(), out);
+    try {
+      DataSerializer.writeByteArray(delta.toBytes(), out);
+    } finally {
+      delta = null;
+    }
-      ByteArrayWrapper delta = new ByteArrayWrapper(DataSerializer.readByteArray(in));
-      if (delta != null) {
-        if (value == null) {
-          value = delta;
-        } else {
-          byte[] newValue = concatArrays(value.toBytes(), delta.toBytes());
-          value.setBytes(newValue);
-        }
+      byte[] deltaBytes = DataSerializer.readByteArray(in);
+      if (value == null) {
+        value = new ByteArrayWrapper(deltaBytes);
+      } else {
+        value.append(deltaBytes);

INS39 INS8 UPD74 MOV21 MOV21 INS54 UPD43 MOV32 INS14 MOV8 MOV8 INS8 UPD42 UPD42 INS42 UPD42 MOV43 MOV32 MOV60 MOV25 MOV5 UPD42 MOV32 INS14 UPD42 UPD42 MOV43 INS42 DEL42 DEL42 DEL7 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL39 DEL85 DEL5 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL54 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL52 DEL32 DEL41 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL52 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL85 DEL5 DEL42 DEL42 DEL44 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL40 DEL59 DEL60 DEL39 DEL42 DEL40 DEL59 DEL60 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL42 DEL27 DEL3 DEL59 DEL60 DEL42 DEL42 DEL42 DEL34 DEL42 DEL34 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL34 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL14 DEL42 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8