Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.Map.Entry;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.cache.Region;
+import org.apache.geode.redis.internal.RedisDataType;
-/**
- * <pre>
- * Implements the Redis HGETALL command to return
- *
- * Returns all fields and values of the hash stored at key.
- *
- * Examples:
- *
- * redis> HSET myhash field1 "Hello"
- * (integer) 1
- * redis> HSET myhash field2 "World"
- * (integer) 1
- * redis> HGETALL myhash
- * 1) "field1"
- * 2) "Hello"
- * 3) "field2"
- * 4) "World"
- * </pre>
- */
-    Collection<Entry<ByteArrayWrapper, ByteArrayWrapper>> entries;
+
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Map<ByteArrayWrapper, ByteArrayWrapper> results = getMap(context, key);
-      if (results == null || results.isEmpty()) {
-        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-        return;
-      }
+    checkDataType(key, RedisDataType.REDIS_HASH, context);
+    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
-      entries = results.entrySet();
-
-      if (entries == null || entries.isEmpty()) {
-        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-        return;
-      }
-
-      // create a copy
-      entries = new ArrayList<>(entries);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
+    if (keyRegion == null) {
+      command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
+    }
+
+    Collection<Map.Entry<ByteArrayWrapper, ByteArrayWrapper>> entries =
+        new ArrayList(keyRegion.entrySet()); // This creates a CopyOnRead behavior
+
+    if (entries.isEmpty()) {
+      command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));

MOV26 UPD40 UPD40 MOV60 INS21 MOV25 INS60 MOV25 INS32 UPD74 MOV74 INS27 INS74 INS59 MOV32 UPD42 MOV42 MOV42 INS40 MOV42 UPD43 UPD42 INS32 UPD42 MOV42 MOV33 MOV43 UPD74 MOV74 INS42 INS14 UPD42 INS42 INS42 INS42 UPD43 MOV43 INS32 INS40 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL74 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL74 DEL42 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54