GEODE-2267:  add validation to the arguments and include export stats in the command

  * use the config to determine where the logs and stats are

-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.springframework.core.io.InputStreamResource;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import java.io.File;
-import java.io.FileInputStream;
-
-
-  @RequestMapping(method = RequestMethod.GET, value = "/logs")
-  public ResponseEntity<InputStreamResource> exportLogs(
-      @RequestParam(value = CliStrings.EXPORT_LOGS__DIR, required = false) final String directory,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__GROUP, required = false) final String[] groups,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__MEMBER,
-          required = false) final String memberNameId,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__LOGLEVEL,
-          required = false) final String logLevel,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__UPTO_LOGLEVEL,
-          defaultValue = "false") final Boolean onlyLogLevel,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__MERGELOG,
-          defaultValue = "false") final Boolean mergeLog,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__STARTTIME,
-          required = false) final String startTime,
-      @RequestParam(value = CliStrings.EXPORT_LOGS__ENDTIME,
-          required = false) final String endTime) {
-    final CommandStringBuilder command = new CommandStringBuilder(CliStrings.EXPORT_LOGS);
-
-    command.addOption(CliStrings.EXPORT_LOGS__DIR, decode(directory));
-
-    if (hasValue(groups)) {
-      command.addOption(CliStrings.EXPORT_LOGS__GROUP,
-          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-    }
-
-    if (hasValue(memberNameId)) {
-      command.addOption(CliStrings.EXPORT_LOGS__MEMBER, memberNameId);
-    }
-
-    if (hasValue(logLevel)) {
-      command.addOption(CliStrings.EXPORT_LOGS__LOGLEVEL, logLevel);
-    }
-
-    command.addOption(CliStrings.EXPORT_LOGS__UPTO_LOGLEVEL,
-        String.valueOf(Boolean.TRUE.equals(onlyLogLevel)));
-    command.addOption(CliStrings.EXPORT_LOGS__MERGELOG,
-        String.valueOf(Boolean.TRUE.equals(mergeLog)));
-
-    if (hasValue(startTime)) {
-      command.addOption(CliStrings.EXPORT_LOGS__STARTTIME, startTime);
-    }
-
-    if (hasValue(endTime)) {
-      command.addOption(CliStrings.EXPORT_LOGS__ENDTIME, endTime);
-    }
-
-    // the result is json string from CommandResult
-    String result = processCommand(command.toString());
-
-    // parse the result to get the file path
-    String filePath = ResultBuilder.fromJson(result).nextLine().trim();
-
-    HttpHeaders respHeaders = new HttpHeaders();
-    try {
-      InputStreamResource isr = new InputStreamResource(new FileInputStream(new File(filePath)));
-      return new ResponseEntity<InputStreamResource>(isr, respHeaders, HttpStatus.OK);
-    } catch (Exception ex) {
-      throw new RuntimeException("IOError writing file to output stream", ex);
-    }
-  }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL40 DEL80 DEL42 DEL45 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL40 DEL80 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL45 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL45 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL80 DEL42 DEL9 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL40 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL40 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31