Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An instruction to all members with cache that they should 
- * compact their disk stores.
+ * An instruction to all members with cache that they should compact their disk stores.
-  public CompactRequest() {
-  }
-  
+  public CompactRequest() {}
+
-    
+
-    
+
-    request.process((DistributionManager)dm);
-    
+    request.process((DistributionManager) dm);
+
-      if(!(e.getCause() instanceof CancelException)) {
+      if (!(e.getCause() instanceof CancelException)) {
-    
+
-  
+
-    if(cache != null && !cache.isClosed()) {
-      for(DiskStoreImpl store : cache.listDiskStoresIncludingRegionOwned()) {
-        if(store.forceCompaction()) {
+    if (cache != null && !cache.isClosed()) {
+      for (DiskStoreImpl store : cache.listDiskStoresIncludingRegionOwned()) {
+        if (store.forceCompaction()) {
-  
+
-  public void fromData(DataInput in) throws IOException,ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-  @Override  
+  @Override
-    return "Compact request sent to " + ArrayUtils.toString((Object[])this.getRecipients()) +
-      " from " + this.getSender();
+    return "Compact request sent to " + ArrayUtils.toString((Object[]) this.getRecipients())
+        + " from " + this.getSender();
-    Map<DistributedMember, Set<PersistentID>> results = Collections.synchronizedMap(new HashMap<DistributedMember, Set<PersistentID>>());
-    
+    Map<DistributedMember, Set<PersistentID>> results =
+        Collections.synchronizedMap(new HashMap<DistributedMember, Set<PersistentID>>());
+
-    
+
-      if(msg instanceof CompactResponse) {
+      if (msg instanceof CompactResponse) {
-        if(persistentIds != null && !persistentIds.isEmpty()) {
+        if (persistentIds != null && !persistentIds.isEmpty()) {
-    
-    
+
+

UPD66 DEL66