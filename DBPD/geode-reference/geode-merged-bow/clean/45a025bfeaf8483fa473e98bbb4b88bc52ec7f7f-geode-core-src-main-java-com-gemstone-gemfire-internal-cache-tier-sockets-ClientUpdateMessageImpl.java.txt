Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import java.util.Map;
+
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-          message.addStringPart(this._regionName);
+          message.addStringPart(this._regionName, true);
-          message.addStringPart(this._regionName);
+          message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-          message.addStringPart(this._regionName);
+          message.addStringPart(this._regionName, true);
-          message.addStringPart(this._regionName);
+          message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
-
-          message = new Message(7 + cqMsgParts, clientVersion);
+          message = getMessage(7 + cqMsgParts, clientVersion);
-          message.addStringPart(this._regionName);
+          message.addStringPart(this._regionName, true);
-          message = new Message(9 + cqMsgParts, clientVersion);
+          message = getMessage(9 + cqMsgParts, clientVersion);
-            message.addStringPart(this._regionName);
+            message.addStringPart(this._regionName, true);
-            message.addStringPart(this._regionName);
+            message.addStringPart(this._regionName, true);
-          message = new Message(7 + cqMsgParts, clientVersion);
+          message = getMessage(7 + cqMsgParts, clientVersion);
-          message = new Message(7 + cqMsgParts, clientVersion);
+          message = getMessage(7 + cqMsgParts, clientVersion);
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-        message = new Message(4 + cqMsgParts, clientVersion);
+        message = getMessage(4 + cqMsgParts, clientVersion);
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-        message = new Message(4 + cqMsgParts, clientVersion);
+        message = getMessage(4 + cqMsgParts, clientVersion);
-        message.addStringPart(this._regionName);
+        message.addStringPart(this._regionName, true);
-      message = new Message(4 + cqMsgParts, clientVersion);
+      message = getMessage(4 + cqMsgParts, clientVersion);
-      message.addStringPart(this._regionName);
+      message.addStringPart(this._regionName, true);
+  private static final ThreadLocal<Map<Integer,Message>> CACHED_MESSAGES = new ThreadLocal<Map<Integer,Message>>() {
+    protected Map<Integer,Message> initialValue() {
+      return new HashMap<Integer,Message>();
+    };
+  };
+
+  private Message getMessage(int numParts, Version clientVersion) {
+    Message m = CACHED_MESSAGES.get().get(numParts);
+    if (m == null) {
+      m =  new Message(numParts, Version.CURRENT);
+      CACHED_MESSAGES.get().put(numParts, m);
+    }
+    m.clearParts();
+    m.setVersion(clientVersion);
+    return m;
+  }
+      
+  
+    private static final String[] EMPTY_NAMES_ARRAY = new String[0];
+    
+    private static Map<String,String[]> NAMES_ARRAY = new ConcurrentHashMap<String,String[]>();
-      this.name = name;
+      initializeName(name);
-
+    
+    private void initializeName(String name) {
+      this.name = name;
+      if (!NAMES_ARRAY.containsKey(name)) {
+        NAMES_ARRAY.put(name, new String[]{name});
+      }
+    }
+    
-        message.addStringPart(this.name);
+        message.addStringPart(this.name, true);
-      if (isEmpty()) {
-        return new String[0];
-      } else {
-        return new String[]{this.name};
-      }
+      return (isEmpty()) ? EMPTY_NAMES_ARRAY : NAMES_ARRAY.get(this.name);
-        message.addStringPart(cq);
+        message.addStringPart(cq, true);

INS26 INS40 INS23 INS31 INS83 INS83 INS83 INS74 INS59 INS83 INS43 INS42 INS44 INS44 INS8 INS23 INS23 INS31 INS43 INS74 INS42 INS14 INS42 INS39 INS42 INS43 INS42 INS60 INS25 INS21 INS21 INS41 INS83 INS83 INS83 MOV5 INS59 INS83 INS83 INS74 INS59 INS83 INS39 INS42 INS44 INS8 INS5 INS8 INS42 INS43 INS43 INS43 INS74 INS1 INS42 MOV43 INS59 INS27 INS8 INS32 INS32 INS42 INS42 MOV3 INS43 INS43 INS5 INS42 INS14 INS21 INS43 INS42 MOV21 INS25 INS43 INS85 MOV41 INS42 INS42 INS42 INS43 INS74 INS31 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS74 INS32 INS42 INS38 MOV8 INS42 INS16 INS42 INS43 INS43 INS43 INS83 INS74 INS42 INS8 INS32 INS42 INS42 INS7 INS32 INS42 INS43 INS43 INS5 INS42 INS42 INS32 INS21 INS36 INS42 INS32 INS21 INS42 INS42 INS42 INS43 INS43 INS43 INS41 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS32 MOV32 INS42 INS42 MOV22 INS9 INS9 INS9 INS32 INS9 INS42 INS42 INS42 INS14 INS43 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 MOV3 INS9 INS9 INS9 INS9 INS9 INS9 INS9 INS9 INS9 INS32 INS42 INS42 INS22 INS9 INS32 MOV21 MOV21 MOV21 INS32 INS9 INS74 INS42 INS9 INS9 INS9 INS42 INS27 INS42 INS52 INS42 INS42 MOV27 INS42 INS32 INS32 INS42 INS27 INS42 INS32 INS9 INS43 INS43 INS43 INS42 INS9 INS9 INS9 INS9 INS9 INS9 INS9 MOV34 MOV42 INS9 INS9 INS42 INS27 INS42 INS42 INS27 INS42 MOV34 MOV42 INS42 INS27 INS42 INS32 INS9 INS42 INS42 INS42 MOV42 MOV34 MOV42 MOV34 MOV42 MOV34 MOV42 INS42 INS27 INS42 MOV34 MOV42 DEL42 DEL43 DEL27 DEL42 DEL14 DEL42 DEL14 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL27 DEL42 DEL14 DEL42 DEL43 DEL27 DEL42 DEL14 DEL42 DEL43 DEL27 DEL42 DEL14 DEL42 DEL43 DEL27 DEL42 DEL14 DEL42 DEL43 DEL27 DEL42 DEL14 DEL41 DEL8 DEL25 DEL8