Merge branch 'release/1.5.0'

-  protected boolean tempWorkingDir;
-    this(member, vm, false);
-  }
-
-  public MemberVM(Member member, VM vm, boolean tempWorkingDir) {
-    this.tempWorkingDir = tempWorkingDir;
-    if (tempWorkingDir)
-      return member.getWorkingDir();
+  @Override
-    if (tempWorkingDir) {
-      /*
-       * this temporary workingDir will dynamically change the "user.dir". system property to point
-       * to a temporary folder. The Path API caches the first value of "user.dir" that it sees, and
-       * this can result in a stale cached value of "user.dir" which points to a directory that no
-       * longer exists.
-       */
-      vm.bounce();
-    } else
-      // if using the dunit/vm dir as the preset working dir, need to cleanup dir except
-      // the locator0view* file, so that regions/indexes won't get persisted across tests
-      Arrays.stream(getWorkingDir().listFiles((dir, name) -> !name.startsWith("locator0view")))
-          .forEach(FileUtils::deleteQuietly);
+    // if using the dunit/vm dir as the preset working dir, need to cleanup dir
+    // so that regions/indexes won't get persisted across tests
+    Arrays.stream(getWorkingDir().listFiles()).forEach(FileUtils::deleteQuietly);

INS31 INS78 MOV83 MOV39 MOV42 MOV44 MOV8 INS42 INS21 MOV32 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL9 DEL17 DEL8 DEL31 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL41 DEL25 DEL42 DEL59 DEL42 DEL59 DEL42 DEL42 DEL45 DEL32 DEL38 DEL86 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL21 DEL25 DEL83 DEL31