Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.distributed.internal.membership.NetView;
-import org.apache.geode.internal.Version;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.StaticSerialization;
+import org.apache.geode.internal.serialization.Version;
-public class JoinResponseMessage extends HighPriorityDistributionMessage {
+public class JoinResponseMessage extends AbstractGMSMessage {
-  private NetView currentView;
+  private GMSMembershipView currentView;
-  private InternalDistributedMember memberID;
+  private GMSMember memberID;
-  public JoinResponseMessage(InternalDistributedMember memberID, NetView view, int requestId) {
+  public JoinResponseMessage(GMSMember memberID, GMSMembershipView view, int requestId) {
-  public JoinResponseMessage(InternalDistributedMember memberID, byte[] sPk, int requestId) {
+  public JoinResponseMessage(GMSMember memberID, byte[] sPk, int requestId) {
-  public NetView getCurrentView() {
+  public GMSMembershipView getCurrentView() {
-  public InternalDistributedMember getMemberID() {
+  public GMSMember getMemberID() {
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("JoinResponse is not intended to be executed");
-  }
-
-  @Override
-  public void toData(DataOutput out) throws IOException {
-    DataSerializer.writeObject(currentView, out);
-    DataSerializer.writeObject(memberID, out);
-    DataSerializer.writeString(rejectionMessage, out);
-    DataSerializer.writeByteArray(messengerData, out);
-    DataSerializer.writeByteArray(secretPk, out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
+    context.getSerializer().writeObject(currentView, out);
+    GMSUtil.writeMemberID(memberID, out, context);
+    StaticSerialization.writeString(rejectionMessage, out);
+    StaticSerialization.writeByteArray(messengerData, out);
+    StaticSerialization.writeByteArray(secretPk, out);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    currentView = DataSerializer.readObject(in);
-    memberID = DataSerializer.readObject(in);
-    rejectionMessage = DataSerializer.readString(in);
-    messengerData = DataSerializer.readByteArray(in);
-    secretPk = DataSerializer.readByteArray(in);
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
+    currentView = (GMSMembershipView) context.getDeserializer().readObject(in);
+    memberID = GMSUtil.readMemberID(in, context);
+    rejectionMessage = StaticSerialization.readString(in);
+    messengerData = StaticSerialization.readByteArray(in);
+    secretPk = StaticSerialization.readByteArray(in);

INS26 UPD40 UPD40 UPD40 INS40 UPD40 UPD40 UPD40 UPD43 INS31 UPD42 UPD43 UPD43 UPD43 UPD43 MOV78 MOV83 MOV39 UPD42 MOV42 MOV44 MOV44 MOV43 MOV8 INS44 UPD42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 INS43 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS32 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 INS11 INS42 UPD42 MOV42 INS43 INS32 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 INS42 INS32 MOV42 MOV42 INS42 UPD42 MOV42 DEL42 DEL78 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL31 DEL83 DEL39 DEL42 DEL31 DEL32