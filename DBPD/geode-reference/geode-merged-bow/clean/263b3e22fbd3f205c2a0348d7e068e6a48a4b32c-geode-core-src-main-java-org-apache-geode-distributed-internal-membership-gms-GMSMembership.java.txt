GEODE-7634: create an ArchUnitTest that asserts that geode-core only â€¦ (#4549)

* GEODE-7634: create an ArchUnitTest that asserts that geode-core only uses the membership API

creating a new test to enforce use of membership APIs.  There are a few
exceptions in test code, plus others that aren't in the "integration
test" source set.

* removing test dependencies and fixing crashDistributedSystem method

* moved membership API classes to membership.api package and fixed OOME

* move address verification class to tcp-server module and subclass in membership

* rebasing on Ernie's GeodeGlossary stuff

-import java.util.Queue;
-import java.util.concurrent.LinkedBlockingQueue;
-import java.util.concurrent.RejectedExecutionException;
-import java.util.concurrent.RejectedExecutionHandler;
-import java.util.concurrent.ThreadFactory;
-import java.util.concurrent.ThreadPoolExecutor;
+import org.apache.geode.annotations.VisibleForTesting;
-import org.apache.geode.distributed.internal.membership.gms.api.LifecycleListener;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberDisconnectedException;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberIdentifier;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberShunnedException;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberStartupException;
-import org.apache.geode.distributed.internal.membership.gms.api.Membership;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipClosedException;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipConfig;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipConfigurationException;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipListener;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipView;
-import org.apache.geode.distributed.internal.membership.gms.api.Message;
-import org.apache.geode.distributed.internal.membership.gms.api.MessageListener;
-import org.apache.geode.distributed.internal.membership.gms.api.QuorumChecker;
+import org.apache.geode.distributed.internal.membership.api.LifecycleListener;
+import org.apache.geode.distributed.internal.membership.api.MemberDisconnectedException;
+import org.apache.geode.distributed.internal.membership.api.MemberIdentifier;
+import org.apache.geode.distributed.internal.membership.api.MemberShunnedException;
+import org.apache.geode.distributed.internal.membership.api.MemberStartupException;
+import org.apache.geode.distributed.internal.membership.api.Membership;
+import org.apache.geode.distributed.internal.membership.api.MembershipClosedException;
+import org.apache.geode.distributed.internal.membership.api.MembershipConfig;
+import org.apache.geode.distributed.internal.membership.api.MembershipConfigurationException;
+import org.apache.geode.distributed.internal.membership.api.MembershipListener;
+import org.apache.geode.distributed.internal.membership.api.MembershipView;
+import org.apache.geode.distributed.internal.membership.api.Message;
+import org.apache.geode.distributed.internal.membership.api.MessageListener;
+import org.apache.geode.distributed.internal.membership.api.QuorumChecker;
-import org.apache.geode.logging.internal.executors.LoggingThreadFactory;
-    LinkedBlockingQueue<Runnable> feed = new LinkedBlockingQueue<>();
-    ThreadFactory threadFactory = new LoggingThreadFactory("Geode View Processor");
-    this.viewExecutor = new ThreadPoolExecutor(1, 1, 30,
-        TimeUnit.SECONDS, feed, threadFactory, new ViewExecutorBlockHandler(feed));
+    this.viewExecutor = LoggingExecutors.newSingleThreadExecutor("Geode View Processor", true);
+  @VisibleForTesting
+  public void forceDisconnect(String reason) {
+    this.gmsManager.forceDisconnect(reason);
+  }
+
-
-
-  private static class ViewExecutorBlockHandler implements RejectedExecutionHandler {
-
-    private final Queue queue;
-
-    private ViewExecutorBlockHandler(Queue feed) {
-      queue = feed;
-    }
-
-    @Override
-    public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {
-      if (executor.isShutdown()) {
-        throw new RejectedExecutionException(
-            "executor has been shutdown");
-      } else {
-        try {
-          executor.getQueue().put(r);
-        } catch (InterruptedException ie) {
-          Thread.currentThread().interrupt();
-          RejectedExecutionException e = new RejectedExecutionException(
-              "interrupted");
-          e.initCause(ie);
-        }
-      }
-    }
-  }
-

MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 MOV31 UPD42 INS8 UPD42 UPD43 UPD42 MOV21 UPD42 INS32 INS22 UPD42 UPD42 INS42 INS42 INS45 INS9 INS52 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL43 DEL34 DEL34 DEL34 DEL40 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL14 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL83 DEL83 DEL42 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL55