GEODE-5935: move jdbc xml mapping to be in a region  (#2739)

The jdbc region-mapping xml element is now jdbc:mapping.
It no longer has a "region" attribute since it is nested in a region.
Creating a jdbc-mapping requires that the region already exists.
The jdbc:mapping element is now nested in a region element instead of the cache element.
The old connector-service element has been completely removed.
Some of the jdbc-mapping gfsh commands now require at least one server to be running.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen21@apache.org>
Co-authored-by: Ben Ross @BenjaminPerryRoss 

-import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.cache.configuration.CacheElement;
-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
-import org.apache.geode.distributed.ConfigurationPersistenceService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
-    ConnectorService.RegionMapping mapping = null;
+    RegionMapping mapping = null;
-    // check if CC is available and use it to describe the connection
-    ConfigurationPersistenceService ccService = getConfigurationPersistenceService();
-    if (ccService != null) {
-      CacheConfig cacheConfig = ccService.getCacheConfig("cluster");
-      if (cacheConfig != null) {
-        ConnectorService service =
-            cacheConfig.findCustomCacheElement("connector-service", ConnectorService.class);
-        if (service != null) {
-          mapping = CacheElement.findElement(service.getRegionMapping(), regionName);
-        }
+    Set<DistributedMember> members = findMembers(null, null);
+    if (members.size() > 0) {
+      DistributedMember targetMember = members.iterator().next();
+      CliFunctionResult result = executeFunctionAndGetFunctionResult(
+          new DescribeMappingFunction(), regionName, targetMember);
+      if (result != null) {
+        mapping = (RegionMapping) result.getResultObject();
-      // otherwise get it from any member
-      Set<DistributedMember> members = findMembers(null, null);
-      if (members.size() > 0) {
-        DistributedMember targetMember = members.iterator().next();
-        CliFunctionResult result = executeFunctionAndGetFunctionResult(
-            new DescribeMappingFunction(), regionName, targetMember);
-        if (result != null) {
-          mapping = (ConnectorService.RegionMapping) result.getResultObject();
-        }
-      }
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-  private void fillResultData(ConnectorService.RegionMapping mapping, ResultModel resultModel) {
+  private void fillResultData(RegionMapping mapping, ResultModel resultModel) {

UPD40 MOV8 MOV60 MOV25 MOV60 MOV21 MOV21 MOV41 UPD43 UPD43 INS8 INS42 INS42 INS41 INS32 INS42 INS42 INS40 UPD43 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL40 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL40