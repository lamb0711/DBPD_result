Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

-  private static final Map<String, Class> PRIMITIVE_TYPES = primitiveTypes();
+  static Map primTypes;
+  static Map wrapperTypes;
-  private static Map primitiveTypes() {
-    Map<String, Class> ptMap = new HashMap<>();
-    ptMap.put(boolean.class.getName(), boolean.class);
-    ptMap.put(char.class.getName(), char.class);
-    ptMap.put(byte.class.getName(), byte.class);
-    ptMap.put(short.class.getName(), short.class);
-    ptMap.put(int.class.getName(), int.class);
-    ptMap.put(long.class.getName(), long.class);
-    ptMap.put(float.class.getName(), float.class);
-    ptMap.put(double.class.getName(), double.class);
-    ptMap.put(void.class.getName(), void.class);
-    return ptMap;
+  static {
+
+    if (primTypes == null) {
+      Map ptMap = new HashMap();
+      ptMap.put(boolean.class.getName(), boolean.class);
+      ptMap.put(char.class.getName(), char.class);
+      ptMap.put(byte.class.getName(), byte.class);
+      ptMap.put(short.class.getName(), short.class);
+      ptMap.put(int.class.getName(), int.class);
+      ptMap.put(long.class.getName(), long.class);
+      ptMap.put(float.class.getName(), float.class);
+      ptMap.put(double.class.getName(), double.class);
+      ptMap.put(void.class.getName(), void.class);
+      // Do this at the end to support multiple threads without synchronizing
+      primTypes = ptMap;
+    }
+
+    if (wrapperTypes == null) {
+      Map wtMap = new HashMap();
+      wtMap.put(boolean.class.getName(), Boolean.class);
+      wtMap.put(char.class.getName(), Character.class);
+      wtMap.put(byte.class.getName(), Byte.class);
+      wtMap.put(short.class.getName(), Short.class);
+      wtMap.put(int.class.getName(), Integer.class);
+      wtMap.put(long.class.getName(), Long.class);
+      wtMap.put(float.class.getName(), Float.class);
+      wtMap.put(double.class.getName(), Double.class);
+      // Do this at the end to support multiple threads without synchronizing
+      wrapperTypes = wtMap;
+    }
-   * Resolve the method from the given qualified name. Only zero argument methods are supported.
+   * Resolve the method from the given qualified name.
-  public static Method methodFromName(String fullyQualifiedMethodName)
+  public static Method methodFromName(String fullyQualifiedMethodName, Class[] parameterTypes)
-    Class<?> result = ClassPathLoader.getLatest().forName(className);
-    return result.getMethod(methodName);
+    Class result = ClassPathLoader.getLatest().forName(className);
+    return result.getMethod(methodName, parameterTypes);
+  }
+
+  /**
+   * Resolve the method from the given qualified name. Only zero argument methods are supported.
+   */
+  public static Method methodFromName(String fullyQualifiedMethodName)
+      throws ClassNotFoundException, NoSuchMethodException, SecurityException {
+    return methodFromName(fullyQualifiedMethodName, (Class[]) null);
-  private static Class checkForPrimType(String className) {
-    return PRIMITIVE_TYPES.get(className);
+  public static Class checkForPrimType(String className) {
+
+    return (Class) primTypes.get(className);
+  }
+
+  /**
+   * If the argument className is the name of a primitive type (not including "void"), return the
+   * wrapper class for that type (ex, Boolean.class). Otherwise, return null.
+   */
+  public static Class checkForWrapperType(String className) {
+
+    return (Class) wrapperTypes.get(className);

MOV31 INS23 INS23 INS28 INS31 UPD83 MOV83 INS43 INS59 MOV83 MOV43 INS59 INS83 INS8 INS29 INS44 MOV29 INS83 INS83 INS43 INS42 INS44 INS43 INS43 INS43 INS8 UPD83 INS29 UPD83 MOV43 INS42 INS44 INS8 INS42 INS42 INS42 INS25 INS25 INS65 INS5 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS41 INS65 INS43 INS42 INS41 INS27 MOV8 INS27 INS8 INS66 MOV43 INS85 MOV43 MOV42 INS32 INS11 INS66 INS66 INS42 INS11 INS42 INS33 INS21 INS42 INS33 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS11 INS43 INS32 INS43 INS32 MOV43 INS7 MOV43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS7 INS5 INS33 INS42 UPD42 MOV42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS32 INS57 INS42 INS42 INS43 INS85 MOV43 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS57 INS42 INS43 INS42 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 DEL42 DEL43 DEL74 DEL74 DEL42 DEL41 DEL83 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL23 DEL76 DEL74 DEL32 DEL42