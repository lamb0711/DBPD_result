Merge branch 'release/1.5.0'

-import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.DistributionManager;
-  private final DM dm;
+  private final DistributionManager dm;
-  protected static boolean callReleaseProcessor(DM dm, String serviceName,
+  protected static boolean callReleaseProcessor(DistributionManager dm, String serviceName,
-  public DM getDistributionManager() {
+  public DistributionManager getDistributionManager() {
-      } catch (RuntimeException e) {
-        throw e;
-      // catch (VirtualMachineError err) {
-      // SystemFailure.initiateFailure(err);
-      // // If this ever returns, rethrow the error. We're poisoned
-      // // now, so don't let this thread continue.
-      // throw err;
-      // }
-      // catch (Throwable t) {
-      // // Whenever you catch Error or Throwable, you must also
-      // // catch VirtualMachineError (see above). However, there is
-      // // _still_ a possibility that you are dealing with a cascading
-      // // error condition, so you also need to check to see if the JVM
-      // // is still usable:
-      // SystemFailure.checkFailure();
-      // try {
-      // logger.warn(new
-      // LocalizedMessage(LocalizedStrings.DLockService_DESTROYANDREMOVE_OF_0_MAY_HAVE_FAILED,
-      // svc), t);
-      // }
-      // catch (VirtualMachineError err) {
-      // SystemFailure.initiateFailure(err);
-      // // If this ever returns, rethrow the error. We're poisoned
-      // // now, so don't let this thread continue.
-      // throw err;
-      // }
-      // catch (Throwable t2) {
-      // // Whenever you catch Error or Throwable, you must also
-      // // catch VirtualMachineError (see above). However, there is
-      // // _still_ a possibility that you are dealing with a cascading
-      // // error condition, so you also need to check to see if the JVM
-      // // is still usable:
-      // SystemFailure.checkFailure();
-      // t.printStackTrace();
-      // t2.printStackTrace();
-      // }
-      // }
-  public static void recoverLocalElder(DM dm, Map grantors, Set needsRecovery) {
+  public static void recoverLocalElder(DistributionManager dm, Map grantors, Set needsRecovery) {
-  static long getLockTimeStamp(DM dm) {
+  static long getLockTimeStamp(DistributionManager dm) {
-    DLockStopper(DM dm, DLockService dls) {
+    DLockStopper(DistributionManager dm, DLockService dls) {

MOV26 UPD40 UPD43 UPD43 UPD42 UPD43 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12