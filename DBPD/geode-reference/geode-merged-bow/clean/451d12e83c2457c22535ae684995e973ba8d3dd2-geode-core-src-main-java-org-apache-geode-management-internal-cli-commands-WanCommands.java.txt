GEODE-2919: Provide finer grained security

 - For full details, see https://cwiki.apache.org/confluence/display/GEODE/Finer+grained+security

+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeMap;
+import java.util.concurrent.Callable;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.Future;
+import java.util.concurrent.ThreadFactory;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.atomic.AtomicReference;
+
+import javax.management.ObjectName;
+
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeMap;
-import java.util.concurrent.Callable;
-import java.util.concurrent.ExecutionException;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.Future;
-import java.util.concurrent.ThreadFactory;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.concurrent.atomic.AtomicReference;
-import javax.management.ObjectName;
+import org.apache.geode.security.ResourcePermission.Target;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-          unspecifiedDefaultValue = CliMetaData.ANNOTATION_NULL_VALUE,
-    Result result = null;
+    Result result;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-      List<Callable<List>> callables = new ArrayList<Callable<List>>();
+      List<Callable<List>> callables = new ArrayList<>();
-        callables.add(new Callable<List>() {
+        callables.add(() -> {
-          public List call() throws Exception {
-
-            GatewaySenderMXBean bean = null;
-            ArrayList<String> statusList = new ArrayList<String>();
-            if (cache.getDistributedSystem().getDistributedMember().getId()
-                .equals(member.getId())) {
-              bean = service.getLocalGatewaySenderMXBean(id);
-            } else {
-              ObjectName objectName = service.getGatewaySenderMBeanName(member, id);
-              bean = service.getMBeanProxy(objectName, GatewaySenderMXBean.class);
-            }
-            if (bean != null) {
-              if (bean.isRunning()) {
-                statusList.add(member.getId());
-                statusList.add(CliStrings.GATEWAY_ERROR);
-                statusList.add(
-                    CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_ALREADY_STARTED_ON_MEMBER_1,
-                        id, member.getId()));
-              } else {
-                bean.start();
-                statusList.add(member.getId());
-                statusList.add(CliStrings.GATEWAY_OK);
-                statusList.add(CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_STARTED_ON_MEMBER_1,
-                    id, member.getId()));
-              }
-            } else {
+          GatewaySenderMXBean bean;
+          ArrayList<String> statusList = new ArrayList<>();
+          if (cache.getDistributedSystem().getDistributedMember().getId().equals(member.getId())) {
+            bean = service.getLocalGatewaySenderMXBean(id);
+          } else {
+            ObjectName objectName = service.getGatewaySenderMBeanName(member, id);
+            bean = service.getMBeanProxy(objectName, GatewaySenderMXBean.class);
+          }
+          if (bean != null) {
+            if (bean.isRunning()) {
-                  CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, id, member.getId()));
+                  CliStrings.GATEWAY_SENDER_0_IS_ALREADY_STARTED_ON_MEMBER_1, id, member.getId()));
+            } else {
+              bean.start();
+              statusList.add(member.getId());
+              statusList.add(CliStrings.GATEWAY_OK);
+              statusList.add(CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_STARTED_ON_MEMBER_1,
+                  id, member.getId()));
-            return statusList;
+          } else {
+            statusList.add(member.getId());
+            statusList.add(CliStrings.GATEWAY_ERROR);
+            statusList.add(CliStrings.format(
+                CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, id, member.getId()));
+          return statusList;
+
-        List<String> memberStatus = null;
+        List<String> memberStatus;
-        } catch (InterruptedException ite) {
+        } catch (InterruptedException | ExecutionException ite) {
-          continue;
-        } catch (ExecutionException ee) {
-          accumulateStartResult(resultData, member.getId(), CliStrings.GATEWAY_ERROR,
-              CliStrings.format(CliStrings.GATEWAY_SENDER_0_COULD_NOT_BE_STARTED_ON_MEMBER_DUE_TO_1,
-                  id, ee.getMessage()));
-          continue;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-      GatewaySenderMXBean bean = null;
+      GatewaySenderMXBean bean;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-      GatewaySenderMXBean bean = null;
+      GatewaySenderMXBean bean;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-      GatewaySenderMXBean bean = null;
+      GatewaySenderMXBean bean;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-          unspecifiedDefaultValue = CliMetaData.ANNOTATION_NULL_VALUE,
-    Result result = null;
+    Result result;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-          GatewaySenderMXBean bean = null;
+          GatewaySenderMXBean bean;
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-      GatewayReceiverMXBean receieverBean = null;
+      GatewayReceiverMXBean receiverBean;
-          receieverBean =
+          receiverBean =
-          if (receieverBean != null) {
-            if (receieverBean.isRunning()) {
+          if (receiverBean != null) {
+            if (receiverBean.isRunning()) {
-              receieverBean.start();
+              receiverBean.start();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-    Result result = null;
+    Result result;
-      GatewayReceiverMXBean receieverBean = null;
+      GatewayReceiverMXBean receiverBean;
-          receieverBean =
+          receiverBean =
-          if (receieverBean != null) {
-            if (receieverBean.isRunning()) {
-              receieverBean.stop();
+          if (receiverBean != null) {
+            if (receiverBean.isRunning()) {
+              receiverBean.stop();
-    Result result = null;
+    Result result;
-      Map<String, Map<String, GatewaySenderMXBean>> gatewaySenderBeans =
-          new TreeMap<String, Map<String, GatewaySenderMXBean>>();
-      Map<String, GatewayReceiverMXBean> gatewayReceiverBeans =
-          new TreeMap<String, GatewayReceiverMXBean>();
+      Map<String, Map<String, GatewaySenderMXBean>> gatewaySenderBeans = new TreeMap<>();
+      Map<String, GatewayReceiverMXBean> gatewayReceiverBeans = new TreeMap<>();
-                Map<String, GatewaySenderMXBean> memberToBeanMap =
-                    new TreeMap<String, GatewaySenderMXBean>();
+                Map<String, GatewaySenderMXBean> memberToBeanMap = new TreeMap<>();
-          GatewayReceiverMXBean receieverBean = null;
-          receieverBean =
+          GatewayReceiverMXBean receiverBean;
+          receiverBean =
-          if (receieverBean != null) {
-            gatewayReceiverBeans.put(member.getId(), receieverBean);
+          if (receiverBean != null) {
+            gatewayReceiverBeans.put(member.getId(), receiverBean);
-    Result result = null;
+    Result result;
-      GatewaySenderMXBean bean = null;
+      GatewaySenderMXBean bean;
-    Result result = null;
+    Result result;
-          GatewayReceiverMXBean receieverBean =
+          GatewayReceiverMXBean receiverBean =
-          if (receieverBean != null) {
-            buildReceiverStatus(member.getId(), receieverBean, availableReceiverData);
+          if (receiverBean != null) {
+            buildReceiverStatus(member.getId(), receiverBean, availableReceiverData);
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
-          unspecifiedDefaultValue = CliMetaData.ANNOTATION_NULL_VALUE,
-    Result result = null;
+    Result result;
-    Result result = null;
+    Result result;

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 INS80 INS80 INS80 INS80 INS80 INS80 INS80 INS80 INS80 INS80 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD40 INS42 INS40 UPD42 UPD42 UPD74 UPD74 UPD74 INS86 UPD43 MOV43 MOV43 MOV8 INS84 MOV42 MOV43 MOV43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD74 UPD42 UPD42 UPD74 DEL42 DEL40 DEL80 DEL33 DEL33 DEL42 DEL43 DEL42 DEL43 DEL74 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL31 DEL1 DEL14 DEL33 DEL18 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL18 DEL8 DEL12 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL42 DEL40 DEL80 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL33 DEL33 DEL33 DEL33 DEL42 DEL40 DEL80 DEL33 DEL33