Revert "GEODE-2142: Removal of non-compliant org.json implementation."

This reverts commit b3ec80bc72fee3a40da297945a85d8df6c2a6460.

-/*
- * Copyright (C) 2010 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-// Note: this class was written without inspecting the non-free org.json sourcecode.
-
- * Thrown to indicate a problem with the JSON API. Such problems include:
- * <ul>
- *   <li>Attempts to parse or construct malformed documents
- *   <li>Use of null as a name
- *   <li>Use of numeric types not available to JSON, such as {@link
- *       Double#isNaN() NaNs} or {@link Double#isInfinite() infinities}.
- *   <li>Lookups using an out of range index or nonexistent name
- *   <li>Type mismatches on lookups
- * </ul>
- *
- * <p>Although this is a checked exception, it is rarely recoverable. Most
- * callers should simply wrap this exception in an unchecked exception and
- * rethrow:
- * <pre>  public JSONArray toJSONObject() {
- *     try {
- *         JSONObject result = new JSONObject();
- *         ...
- *     } catch (JSONException e) {
- *         throw new RuntimeException(e);
- *     }
- * }</pre>
+ * The JSONException is thrown by the JSON.org classes when things are amiss.
+ * 
+ * @author JSON.org
+ * @version 2010-12-24
-public class JSONException extends RuntimeException {
+public class JSONException extends Exception {
+  private static final long serialVersionUID = 0;
+  private Throwable cause;
-    public JSONException(String s) {
-        super(s);
-    }
+  /**
+   * Constructs a JSONException with an explanatory message.
+   * 
+   * @param message Detail about the reason for the exception.
+   */
+  public JSONException(String message) {
+    super(message);
+  }
-    public JSONException(Throwable cause) {
-        super(cause);
-    }
+  public JSONException(Throwable cause) {
+    super(cause.getMessage());
+    this.cause = cause;
+  }
-    public JSONException(String message, Throwable cause) {
-        super(message, cause);
-    }
+  public Throwable getCause() {
+    return this.cause;
+  }

UPD43 INS23 INS23 INS31 INS65 INS65 INS65 UPD42 INS83 INS83 INS83 INS39 INS59 INS83 INS43 INS59 INS29 INS83 INS42 MOV44 MOV8 INS43 INS42 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS42 INS34 UPD42 MOV42 INS42 INS65 INS65 INS21 MOV42 INS41 INS66 INS42 INS66 UPD42 INS32 INS7 INS22 INS42 INS42 INS22 INS42 INS52 INS42 INS52 INS42 DEL66 DEL66 DEL66 DEL66 DEL42 DEL42 DEL68 DEL65 DEL66 DEL42 DEL42 DEL68 DEL65 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL83 DEL42 DEL43 DEL42 DEL44 DEL31 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL46