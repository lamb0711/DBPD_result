GEODE-2643: Combine chunk and file region into a single region

* removed file and chunk count from stat
* removed tests that were doing checks against chunk bucketRegions

- * 
+ *
- * 
+ *
-import org.apache.geode.cache.Region;
-import java.util.concurrent.ConcurrentMap;
+import java.util.stream.Collectors;
- * 
+ *
- * 
+ *
-  private final Map<String, File> fileRegion;
-  private final Map<ChunkKey, byte[]> chunkRegion;
+  private final Map fileAndChunkRegion;
-   * Create filesystem that will store data in the two provided regions. The fileRegion contains
-   * metadata about the files, and the chunkRegion contains the actual data. If data from either
-   * region is missing or inconsistent, no guarantees are made about what this class will do, so
-   * it's best if these regions are colocated and in the same disk store to ensure the data remains
-   * together.
-   * 
-   * @param fileRegion the region to store metadata about the files
-   * @param chunkRegion the region to store actual file data.
+   * Create filesystem that will store data in the two provided regions. The fileAndChunkRegion
+   * contains metadata about the files, and the chunkRegion contains the actual data. If data from
+   * either region is missing or inconsistent, no guarantees are made about what this class will do,
+   * so it's best if these regions are colocated and in the same disk store to ensure the data
+   * remains together.
+   *
+   * @param fileAndChunkRegion the region to store metadata about the files
-  public FileSystem(Map<String, File> fileRegion, Map<ChunkKey, byte[]> chunkRegion,
-      FileSystemStats stats) {
-    this.fileRegion = fileRegion;
-    this.chunkRegion = chunkRegion;
+  public FileSystem(Map fileAndChunkRegion, FileSystemStats stats) {
+    this.fileAndChunkRegion = fileAndChunkRegion;
-    return fileRegion.keySet();
+    return (Collection<String>) fileAndChunkRegion.keySet().stream()
+        .filter(entry -> (entry instanceof String)).collect(Collectors.toList());
-    if (null != fileRegion.putIfAbsent(name, file)) {
+    if (null != fileAndChunkRegion.putIfAbsent(name, file)) {
-    if (null != fileRegion.putIfAbsent(name, file)) {
+    if (null != fileAndChunkRegion.putIfAbsent(name, file)) {
-    final File file = fileRegion.get(name);
+    final File file = (File) fileAndChunkRegion.get(name);
-    File file = fileRegion.remove(name);
+    File file = (File) fileAndChunkRegion.remove(name);
-        if (null == chunkRegion.remove(key)) {
+        if (null == fileAndChunkRegion.remove(key)) {
-    final File sourceFile = fileRegion.get(source);
+    final File sourceFile = (File) fileAndChunkRegion.get(source);
-    fileRegion.remove(source);
+    fileAndChunkRegion.remove(source);
-      while (chunkRegion.containsKey(key)) {
-        chunkRegion.remove(key);
+      while (fileAndChunkRegion.containsKey(key)) {
+        fileAndChunkRegion.remove(key);
-    final byte[] chunk = chunkRegion.get(key);
+    final byte[] chunk = (byte[]) fileAndChunkRegion.get(key);
-    chunkRegion.put(key, chunk);
+    fileAndChunkRegion.put(key, chunk);
-    fileRegion.put(file.getName(), file);
+    fileAndChunkRegion.put(file.getName(), file);
-  public Map<String, File> getFileRegion() {
-    return fileRegion;
+  public Map getFileAndChunkRegion() {
+    return fileAndChunkRegion;
-  public Map<ChunkKey, byte[]> getChunkRegion() {
-    return chunkRegion;
-  }
-

UPD40 INS31 MOV43 MOV83 MOV74 MOV42 INS8 INS8 MOV43 UPD42 UPD42 MOV43 UPD42 INS41 INS25 MOV25 MOV21 MOV41 UPD66 UPD66 UPD66 UPD66 UPD66 UPD42 INS11 INS27 MOV8 MOV43 UPD42 UPD42 INS74 INS32 INS33 INS32 INS11 INS11 INS11 UPD42 INS11 UPD42 UPD42 UPD42 INS43 MOV43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 MOV43 INS32 MOV43 INS32 MOV43 INS32 MOV5 INS32 INS42 INS32 INS42 INS86 INS42 INS42 UPD42 MOV42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 UPD42 UPD42 MOV42 MOV42 MOV42 INS32 INS42 INS59 INS36 INS42 INS42 INS42 INS62 UPD42 INS42 MOV43 UPD42 DEL40 DEL26 DEL42 DEL43 DEL74 DEL83 DEL83 DEL42 DEL43 DEL39 DEL85 DEL5 DEL74 DEL42 DEL59 DEL23 DEL42 DEL66 DEL65 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL39 DEL85 DEL5 DEL74 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL33 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL25 DEL8 DEL32 DEL32 DEL32 DEL32 DEL83 DEL74 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL74