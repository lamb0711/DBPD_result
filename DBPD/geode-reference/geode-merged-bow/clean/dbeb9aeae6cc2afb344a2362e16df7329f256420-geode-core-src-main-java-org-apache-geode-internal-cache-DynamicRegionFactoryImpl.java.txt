Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-/** This class provides non-published methods that allow the cache
-    to initialize and close the factory.
-
-    @since GemFire 4.3
+/**
+ * This class provides non-published methods that allow the cache to initialize and close the
+ * factory.
+ * 
+ * @since GemFire 4.3
-  /** create an instance of the factory.  This is normally only done
-      by DynamicRegionFactory's static initialization
+  /**
+   * create an instance of the factory. This is normally only done by DynamicRegionFactory's static
+   * initialization
-  public DynamicRegionFactoryImpl() {
-  }
-  
-  /** close the factory.  Only do this if you're closing the cache, too */
+  public DynamicRegionFactoryImpl() {}
+
+  /** close the factory. Only do this if you're closing the cache, too */
-  
+
-  public void internalInit( GemFireCacheImpl c ) throws CacheException {
+  public void internalInit(GemFireCacheImpl c) throws CacheException {

UPD66 UPD66 UPD66 UPD66 UPD66