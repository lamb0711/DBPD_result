Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Bridge for the Distributed lock service. It provides an aggregated view of a
- * lock service which might be present in multiple members.
+ * Bridge for the Distributed lock service. It provides an aggregated view of a lock service which
+ * might be present in multiple members.
- * Each method which access all the proxies to gather data from them creates an
- * Iterator. Iterates over them and gather data. Creating multiple iterator on
- * each method call is a concern and a better way needs to be introduced.
+ * Each method which access all the proxies to gather data from them creates an Iterator. Iterates
+ * over them and gather data. Creating multiple iterator on each method call is a concern and a
+ * better way needs to be introduced.
-   * List of locks. keeping it member level to avoid object creation cost during
-   * each call.
+   * List of locks. keeping it member level to avoid object creation cost during each call.
-   * @param objectName
-   *          name of the MBean
-   * @param proxy
-   *          reference to the proxy
+   * @param objectName name of the MBean
+   * @param proxy reference to the proxy
-  public DistributedLockServiceBridge(ObjectName objectName,
-      LockServiceMXBean proxy, FederationComponent newState) {
+  public DistributedLockServiceBridge(ObjectName objectName, LockServiceMXBean proxy,
+      FederationComponent newState) {
-   * @param objectName
-   *          name of the MBean
-   * @param proxy
-   *          reference to the proxy
+   * @param objectName name of the MBean
+   * @param proxy reference to the proxy
-   * @param objectName
-   *          name of the MBean
-   * @param proxy
-   *          reference to the proxy
+   * @param objectName name of the MBean
+   * @param proxy reference to the proxy
-  public boolean removeProxyFromMap(ObjectName objectName,
-      LockServiceMXBean proxy) {
+  public boolean removeProxyFromMap(ObjectName objectName, LockServiceMXBean proxy) {
-  
+
-   * @return a map of object name and thread name if this member holds lock or
-   *         null/none
+   * @return a map of object name and thread name if this member holds lock or null/none
-        Map<String, String> threadLockMap = it.next()
-            .listThreadsHoldingLock();
+        Map<String, String> threadLockMap = it.next().listThreadsHoldingLock();

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66