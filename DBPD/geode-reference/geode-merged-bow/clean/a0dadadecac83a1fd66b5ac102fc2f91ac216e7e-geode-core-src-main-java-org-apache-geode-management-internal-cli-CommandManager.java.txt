GEODE-2989: Improve mechanism for scanning the classpath to find gfsh commands

(cherry picked from commit 2f50aef)

+import io.github.lukehutch.fastclasspathscanner.FastClasspathScanner;
+import org.apache.commons.lang.exception.ExceptionUtils;
+import org.apache.geode.management.internal.cli.commands.AbstractCommandsSupport;
-import java.io.IOException;
-        Set<Class<?>> foundClasses =
-            ClasspathScanLoadHelper.loadAndGet(userCommandPackage, CommandMarker.class, true);
+        Set<Class<?>> foundClasses = ClasspathScanLoadHelper
+            .scanPackageForClassesImplementing(userCommandPackage, CommandMarker.class);
-      } catch (ClassNotFoundException | IOException e) {
-        logWrapper.warning("Could not load User Commands due to " + e.getLocalizedMessage());
+
+    loadGeodeCommands();
+    loadConverters();
+  }
-    // CommandMarkers
-    Set<Class<?>> foundClasses = null;
-    try {
-      // geode's commands
-      foundClasses = ClasspathScanLoadHelper.loadAndGet(
-          "org.apache.geode.management.internal.cli.commands", CommandMarker.class, true);
-      for (Class<?> klass : foundClasses) {
-        try {
-          add((CommandMarker) klass.newInstance());
-        } catch (Exception e) {
-          logWrapper.warning(
-              "Could not load Command from: " + klass + " due to " + e.getLocalizedMessage()); // continue
-        }
-      }
-      raiseExceptionIfEmpty(foundClasses, "Commands");
-
-      // do not add Spring shell's commands for now. When we add it, we need to tell the parser that
-      // these are offline commands.
-    } catch (ClassNotFoundException e) {
-      logWrapper.warning("Could not load Commands due to " + e.getLocalizedMessage());
-    } catch (IOException e) {
-      logWrapper.warning("Could not load Commands due to " + e.getLocalizedMessage());
-    } catch (IllegalStateException e) {
-      logWrapper.warning(e.getMessage(), e);
-      throw e;
-    }
-
+  private void loadConverters() {
+    Set<Class<?>> foundClasses;
-      foundClasses = ClasspathScanLoadHelper
-          .loadAndGet("org.apache.geode.management.internal.cli.converters", Converter.class, true);
+      foundClasses = ClasspathScanLoadHelper.scanPackageForClassesImplementing(
+          "org.apache.geode.management.internal.cli.converters", Converter.class);
-      foundClasses = ClasspathScanLoadHelper.loadAndGet("org.springframework.shell.converters",
-          Converter.class, true);
+      foundClasses = ClasspathScanLoadHelper.scanPackageForClassesImplementing(
+          "org.springframework.shell.converters", Converter.class);
-    } catch (ClassNotFoundException e) {
-      logWrapper.warning("Could not load Converters due to " + e.getLocalizedMessage());
-    } catch (IOException e) {
-      logWrapper.warning("Could not load Converters due to " + e.getLocalizedMessage());
+    } catch (IllegalStateException e) {
+      logWrapper.warning(e.getMessage(), e);
+      throw e;
+    }
+  }
+
+  private void loadGeodeCommands() {
+    // CommandMarkers
+    Set<Class<?>> foundClasses;
+    try {
+      // geode's commands
+      foundClasses = ClasspathScanLoadHelper.scanPackageForClassesImplementing(
+          AbstractCommandsSupport.class.getPackage().getName(), CommandMarker.class);
+
+      for (Class<?> klass : foundClasses) {
+        try {
+          add((CommandMarker) klass.newInstance());
+        } catch (Exception e) {
+          logWrapper.warning(
+              "Could not load Command from: " + klass + " due to " + e.getLocalizedMessage()); // continue
+        }
+      }
+      raiseExceptionIfEmpty(foundClasses, "Commands");
+
+      // do not add Spring shell's commands for now. When we add it, we need to tell the parser that
+      // these are offline commands.

MOV26 INS26 INS26 INS40 UPD40 INS40 INS31 INS31 INS83 INS39 INS42 INS8 UPD42 INS83 INS39 INS42 INS8 MOV21 MOV21 INS21 INS21 INS60 MOV54 INS32 INS32 MOV21 MOV21 INS74 INS59 INS42 INS42 INS43 INS74 INS42 INS42 INS43 INS76 INS42 UPD42 UPD45 UPD42 UPD45 INS42 INS32 INS32 INS42 UPD42 INS57 INS42 INS43 INS42 DEL9 DEL42 DEL43 DEL42 DEL43 DEL84 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL12 DEL33 DEL9 DEL9 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL12 DEL42 DEL45 DEL9 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL12