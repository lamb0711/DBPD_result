GEODE-1244: Revert rename of package, directory, project and file rename for geode-spark-connector

This reverts commit 760c6e225a0269bcc80161bb0545db22a130e9b7.
The renaming didn't move the files and instead blew away the geode-functions directory

-package io.pivotal.geode.spark.connector.javaapi;
+package io.pivotal.gemfire.spark.connector.javaapi;
-import io.pivotal.geode.spark.connector.package$;
+import io.pivotal.gemfire.spark.connector.package$;
- * The main entry point to Spark Geode Connector Java API.
+ * The main entry point to Spark GemFire Connector Java API.
-public final class GeodeJavaUtil {
+public final class GemFireJavaUtil {
-  public static String GeodeLocatorPropKey = package$.MODULE$.GeodeLocatorPropKey();
+  public static String GemFireLocatorPropKey = package$.MODULE$.GemFireLocatorPropKey();
-  private GeodeJavaUtil() { }
+  private GemFireJavaUtil() { }
-   * A static factory method to create a {@link GeodeJavaSparkContextFunctions} based
+   * A static factory method to create a {@link GemFireJavaSparkContextFunctions} based
-  public static GeodeJavaSparkContextFunctions javaFunctions(SparkContext sc) {
-    return new GeodeJavaSparkContextFunctions(sc);
+  public static GemFireJavaSparkContextFunctions javaFunctions(SparkContext sc) {
+    return new GemFireJavaSparkContextFunctions(sc);
-   * A static factory method to create a {@link GeodeJavaSparkContextFunctions} based
+   * A static factory method to create a {@link GemFireJavaSparkContextFunctions} based
-  public static GeodeJavaSparkContextFunctions javaFunctions(JavaSparkContext jsc) {
-    return new GeodeJavaSparkContextFunctions(JavaSparkContext.toSparkContext(jsc));
+  public static GemFireJavaSparkContextFunctions javaFunctions(JavaSparkContext jsc) {
+    return new GemFireJavaSparkContextFunctions(JavaSparkContext.toSparkContext(jsc));
-   * A static factory method to create a {@link GeodeJavaPairRDDFunctions} based on an
+   * A static factory method to create a {@link GemFireJavaPairRDDFunctions} based on an
-  public static <K, V> GeodeJavaPairRDDFunctions<K, V> javaFunctions(JavaPairRDD<K, V> rdd) {
-    return new GeodeJavaPairRDDFunctions<K, V>(rdd);
+  public static <K, V> GemFireJavaPairRDDFunctions<K, V> javaFunctions(JavaPairRDD<K, V> rdd) {
+    return new GemFireJavaPairRDDFunctions<K, V>(rdd);
-   * A static factory method to create a {@link GeodeJavaRDDFunctions} based on an
+   * A static factory method to create a {@link GemFireJavaRDDFunctions} based on an
-  public static <T> GeodeJavaRDDFunctions<T> javaFunctions(JavaRDD<T> rdd) {
-    return new GeodeJavaRDDFunctions<T>(rdd);
+  public static <T> GemFireJavaRDDFunctions<T> javaFunctions(JavaRDD<T> rdd) {
+    return new GemFireJavaRDDFunctions<T>(rdd);
-   * A static factory method to create a {@link GeodeJavaPairDStreamFunctions} based on an
+   * A static factory method to create a {@link GemFireJavaPairDStreamFunctions} based on an
-  public static <K, V> GeodeJavaPairDStreamFunctions<K, V> javaFunctions(JavaPairDStream<K, V> ds) {
-    return new GeodeJavaPairDStreamFunctions<>(ds);
+  public static <K, V> GemFireJavaPairDStreamFunctions<K, V> javaFunctions(JavaPairDStream<K, V> ds) {
+    return new GemFireJavaPairDStreamFunctions<>(ds);
-   * A static factory method to create a {@link GeodeJavaDStreamFunctions} based on an
+   * A static factory method to create a {@link GemFireJavaDStreamFunctions} based on an
-  public static <T> GeodeJavaDStreamFunctions<T> javaFunctions(JavaDStream<T> ds) {
-    return new GeodeJavaDStreamFunctions<>(ds);
+  public static <T> GemFireJavaDStreamFunctions<T> javaFunctions(JavaDStream<T> ds) {
+    return new GemFireJavaDStreamFunctions<>(ds);
-   * A static factory method to create a {@link GeodeJavaSQLContextFunctions} based
+   * A static factory method to create a {@link GemFireJavaSQLContextFunctions} based
-  public static GeodeJavaSQLContextFunctions javaFunctions(SQLContext sqlContext) {
-    return new GeodeJavaSQLContextFunctions(sqlContext);
+  public static GemFireJavaSQLContextFunctions javaFunctions(SQLContext sqlContext) {
+    return new GemFireJavaSQLContextFunctions(sqlContext);

UPD40 UPD40 UPD42 UPD42 UPD43 UPD43 UPD74 UPD74 UPD74 UPD74 UPD43 UPD66 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD74 UPD42 UPD74 UPD42 UPD74 UPD42 UPD74 UPD42 UPD43 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42