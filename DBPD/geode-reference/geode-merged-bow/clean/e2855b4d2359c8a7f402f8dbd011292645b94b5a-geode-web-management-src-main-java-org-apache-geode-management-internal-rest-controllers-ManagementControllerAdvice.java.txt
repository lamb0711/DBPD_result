GEODE-7024: raise a Java exception on non-success response from REST API (#3861)

* GEODE-7024: raise a Java exception on non-success response from REST call
-
+import org.apache.geode.management.api.ClusterManagementException;
+import org.apache.geode.management.api.ClusterManagementRealizationException;
+import org.apache.geode.management.api.ClusterManagementRealizationResult;
-import org.apache.geode.management.internal.exceptions.EntityExistsException;
-import org.apache.geode.management.internal.exceptions.EntityNotFoundException;
+import org.apache.geode.management.api.ClusterManagementResult.StatusCode;
-        new ClusterManagementResult(ClusterManagementResult.StatusCode.ERROR,
+        new ClusterManagementResult(StatusCode.ERROR,
-  @ExceptionHandler(EntityExistsException.class)
-  public ResponseEntity<ClusterManagementResult> entityExists(final Exception e) {
-    return new ResponseEntity<>(
-        new ClusterManagementResult(ClusterManagementResult.StatusCode.ENTITY_EXISTS,
-            e.getMessage()),
-        HttpStatus.CONFLICT);
+  @ExceptionHandler(ClusterManagementException.class)
+  public ResponseEntity<ClusterManagementResult> clusterManagementException(final Exception e) {
+    ClusterManagementResult result = ((ClusterManagementException) e).getResult();
+    return new ResponseEntity<>(result, mapToHttpStatus(result.getStatusCode()));
-  @ExceptionHandler(EntityNotFoundException.class)
-  public ResponseEntity<ClusterManagementResult> entityNotFound(final Exception e) {
-    return new ResponseEntity<>(
-        new ClusterManagementResult(ClusterManagementResult.StatusCode.ENTITY_NOT_FOUND,
-            e.getMessage()),
-        HttpStatus.NOT_FOUND);
+  @ExceptionHandler(ClusterManagementRealizationException.class)
+  public ResponseEntity<ClusterManagementRealizationResult> clusterManagementRealizationException(
+      final Exception e) {
+    ClusterManagementRealizationResult result =
+        (ClusterManagementRealizationResult) ((ClusterManagementException) e).getResult();
+    return new ResponseEntity<>(result, mapToHttpStatus(result.getStatusCode()));
+  }
+
+  private HttpStatus mapToHttpStatus(StatusCode statusCode) {
+    switch (statusCode) {
+      case ENTITY_EXISTS:
+        return HttpStatus.CONFLICT;
+      case ENTITY_NOT_FOUND:
+        return HttpStatus.NOT_FOUND;
+      case ILLEGAL_ARGUMENT:
+        return HttpStatus.BAD_REQUEST;
+      default:
+        return HttpStatus.INTERNAL_SERVER_ERROR;
+    }
-        new ClusterManagementResult(ClusterManagementResult.StatusCode.UNAUTHENTICATED,
+        new ClusterManagementResult(StatusCode.UNAUTHENTICATED,
-        ClusterManagementResult.StatusCode.UNAUTHORIZED, e.getMessage()),
+        StatusCode.UNAUTHORIZED, e.getMessage()),
-        new ClusterManagementResult(ClusterManagementResult.StatusCode.ILLEGAL_ARGUMENT,
+        new ClusterManagementResult(StatusCode.ILLEGAL_ARGUMENT,
-
-        new ClusterManagementResult(ClusterManagementResult.StatusCode.UNAUTHORIZED,
+        new ClusterManagementResult(StatusCode.UNAUTHORIZED,
-

MOV26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS31 INS31 UPD42 MOV79 MOV83 UPD74 MOV74 INS42 MOV44 INS8 INS83 INS43 INS42 INS44 INS8 INS8 MOV8 INS60 UPD43 INS60 INS41 INS42 INS43 INS42 INS50 INS41 UPD43 MOV43 INS59 INS14 UPD43 UPD42 INS43 INS59 INS14 INS42 INS42 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS14 UPD42 INS42 INS32 MOV74 INS42 INS32 UPD42 INS42 INS42 INS11 MOV74 INS42 INS32 INS42 INS40 INS42 INS40 INS42 INS40 INS40 MOV74 INS14 INS40 MOV74 UPD40 UPD40 INS36 INS42 INS42 INS32 INS43 INS32 INS42 INS32 MOV43 INS40 MOV32 UPD40 UPD40 UPD40 INS11 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS36 UPD42 MOV42 INS42 INS42 INS43 INS42 INS11 INS42 INS43 INS42 INS42 DEL40 DEL32 DEL14 DEL40 DEL14 DEL42 DEL43 DEL40 DEL42 DEL32 DEL14 DEL40 DEL14 DEL41 DEL8 DEL31 DEL40 DEL14 DEL40 DEL14 DEL41 DEL8