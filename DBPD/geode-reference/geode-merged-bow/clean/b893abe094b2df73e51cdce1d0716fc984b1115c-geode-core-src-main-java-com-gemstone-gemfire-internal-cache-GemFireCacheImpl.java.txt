GEODE-1329 auto-reconnect attempts cease if kicked out during boot-up of the cache

InternalDistributedSystem.reconnect() now includes cache-creation in its retry
loop and, should the cache fail to start due to a CancelException it will shut
down and try again.

While creating a new test in ReconnectDUnitTest I found problems with the
other tests in that class that I fixed.  Notably the method
getDistributedSystemProperties() wasn't returning the correct properties
for a lot of test cases because the dsProperties variable wasn't being set
by them and they were using the getCache() method.  This was causing the
current distributed system to be destroyed and a new one created with
different properties than the test wanted.  That was causing periodic
test failures.

+  protected volatile boolean isInitialized = false;
+    isInitialized = true;
-    return this.system.waitUntilReconnected(time,  units);
+    boolean systemReconnected = this.system.waitUntilReconnected(time,  units);
+    if (!systemReconnected) {
+      return false;
+    }
+    GemFireCacheImpl cache = getInstance();
+    if (cache == null || !cache.isInitialized()) {
+      return false;
+    }
+    return true;
-    Cache c = GemFireCacheImpl.getInstance();
-    if (c == this) {
+    GemFireCacheImpl c = GemFireCacheImpl.getInstance();
+    if (c == this || !c.isInitialized()) {
+  public boolean isInitialized() {
+    return this.isInitialized;
+  }
+

INS23 INS31 INS83 INS83 INS39 INS59 INS8 INS83 INS39 INS42 INS8 INS42 INS9 INS21 INS60 INS25 INS60 INS25 INS41 INS41 INS7 INS39 INS59 INS38 INS8 INS43 INS59 INS27 INS8 INS9 UPD43 INS27 INS22 INS42 INS9 INS42 MOV32 INS42 MOV41 INS42 INS42 INS32 INS27 INS38 INS41 UPD42 MOV27 INS38 INS52 INS42 INS9 INS42 INS42 INS33 INS32 INS9 INS32 INS42 INS42 INS42 INS42 DEL8