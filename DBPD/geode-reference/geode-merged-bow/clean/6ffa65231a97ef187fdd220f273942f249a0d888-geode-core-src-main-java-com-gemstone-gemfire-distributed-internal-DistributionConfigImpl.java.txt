GEODE-1792: Revert:  Changed protocols and ciphers to be comma separated
Make ssl-ciphers and ssl-protocols comma separated properties.
The legacy *-ssl-ciphers and *-ssl-protocols still use space separated.

-import com.gemstone.gemfire.management.internal.SSLUtil;
-  private String[] clusterSSLProtocols = new String[] { DEFAULT_SSL_PROTOCOLS };
+  private String clusterSSLProtocols = DEFAULT_SSL_PROTOCOLS;
-  private String[] clusterSSLCiphers = new String[] { DEFAULT_SSL_CIPHERS };
+  private String clusterSSLCiphers = DEFAULT_SSL_CIPHERS;
-  private String[] jmxManagerSslProtocols = new String[] { DEFAULT_JMX_MANAGER_SSL_PROTOCOLS };
+  private String jmxManagerSslProtocols = DEFAULT_JMX_MANAGER_SSL_PROTOCOLS;
-  private String[] jmxManagerSslCiphers = new String[] { DEFAULT_JMX_MANAGER_SSL_CIPHERS };
+  private String jmxManagerSslCiphers = DEFAULT_JMX_MANAGER_SSL_CIPHERS;
-  private String[] serverSslProtocols = new String[] { DEFAULT_SERVER_SSL_PROTOCOLS };
+  private String serverSslProtocols = DEFAULT_SERVER_SSL_PROTOCOLS;
-  private String[] serverSslCiphers = new String[] { DEFAULT_SERVER_SSL_CIPHERS };
+  private String serverSslCiphers = DEFAULT_SERVER_SSL_CIPHERS;
-  private String[] gatewaySslProtocols = new String[] { DEFAULT_GATEWAY_SSL_PROTOCOLS };
+  private String gatewaySslProtocols = DEFAULT_GATEWAY_SSL_PROTOCOLS;
-  private String[] gatewaySslCiphers = new String[] { DEFAULT_GATEWAY_SSL_CIPHERS };
+  private String gatewaySslCiphers = DEFAULT_GATEWAY_SSL_CIPHERS;
-  private String[] httpServiceSSLProtocols = new String[] { DEFAULT_HTTP_SERVICE_SSL_PROTOCOLS };
+  private String httpServiceSSLProtocols = DEFAULT_HTTP_SERVICE_SSL_PROTOCOLS;
-  private String[] httpServiceSSLCiphers = new String[] { DEFAULT_HTTP_SERVICE_SSL_CIPHERS };
+  private String httpServiceSSLCiphers = DEFAULT_HTTP_SERVICE_SSL_CIPHERS;
-  private String[] sslProtocols = new String[] { DEFAULT_SSL_PROTOCOLS };
-  private String[] sslCiphers = new String[] { DEFAULT_SSL_CIPHERS };
+  private String sslProtocols = DEFAULT_SSL_PROTOCOLS;
+  private String sslCiphers = DEFAULT_SSL_CIPHERS;
-      if (isLegacySSLCipherOrProtocol(propName)) {
-        propVal = SSLUtil.stringToArray((String) propVal);
-        setAttributeObject(propName, propVal, this.sourceMap.get(propName));
-      } else {
-        if (propVal != null && (propVal instanceof String)) { // weed out extraneous non-string properties
-          this.setAttribute(propName, ((String) propVal).trim(), this.sourceMap.get(propName));
-        }
+      if (propVal != null && (propVal instanceof String)) { // weed out extraneous non-string properties
+        this.setAttribute(propName, ((String) propVal).trim(), this.sourceMap.get(propName));
-  private boolean isLegacySSLCipherOrProtocol(final String propName) {
-    if (propName.contains("-ciphers") || propName.contains("-protocols")) {
-      if (!ConfigurationProperties.SSL_CIPHERS.equals(propName) && !ConfigurationProperties.SSL_PROTOCOLS.equals(propName)) {
-        return true;
-      }
-    }
-    return false;
-  }
-
-  public String[] getClusterSSLProtocols() {
+  public String getClusterSSLProtocols() {
-  public String[] getClusterSSLCiphers() {
+  public String getClusterSSLCiphers() {
-  public void setClusterSSLProtocols(String[] value) {
-    this.clusterSSLProtocols = value;
+  public void setClusterSSLProtocols(String value) {
+    this.clusterSSLProtocols = (String) value;
-  public void setClusterSSLCiphers(String[] value) {
-    this.clusterSSLCiphers = value;
+  public void setClusterSSLCiphers(String value) {
+    this.clusterSSLCiphers = (String) value;
-  public String[] getJmxManagerSSLProtocols() {
+  public String getJmxManagerSSLProtocols() {
-  public void setJmxManagerSSLProtocols(String[] protocols) {
+  public void setJmxManagerSSLProtocols(String protocols) {
-  public String[] getJmxManagerSSLCiphers() {
+  public String getJmxManagerSSLCiphers() {
-  public void setJmxManagerSSLCiphers(String[] ciphers) {
+  public void setJmxManagerSSLCiphers(String ciphers) {
-  public String[] getSSLProtocols() {
+  public String getSSLProtocols() {
-  public void setSSLProtocols(final String[] sslProtocols) {
+  public void setSSLProtocols(final String sslProtocols) {
-  public String[] getSSLCiphers() {
+  public String getSSLCiphers() {
-  public void setSSLCiphers(final String[] sslCiphers) {
+  public void setSSLCiphers(final String sslCiphers) {
-  public String[] getServerSSLProtocols() {
+  public String getServerSSLProtocols() {
-  public void setServerSSLProtocols(String[] protocols) {
-    this.serverSslProtocols = protocols;
+  public void setServerSSLProtocols(String protocols) {
+    this.serverSslProtocols = (String) protocols;
-  public String[] getServerSSLCiphers() {
+  public String getServerSSLCiphers() {
-  public void setServerSSLCiphers(String[] ciphers) {
-    this.serverSslCiphers = ciphers;
+  public void setServerSSLCiphers(String ciphers) {
+    this.serverSslCiphers = (String) ciphers;
-  public String[] getGatewaySSLProtocols() {
+  public String getGatewaySSLProtocols() {
-  public void setGatewaySSLProtocols(String[] protocols) {
-    this.gatewaySslProtocols = protocols;
+  public void setGatewaySSLProtocols(String protocols) {
+    this.gatewaySslProtocols = (String) protocols;
-  public String[] getGatewaySSLCiphers() {
+  public String getGatewaySSLCiphers() {
-  public void setGatewaySSLCiphers(String[] ciphers) {
-    this.gatewaySslCiphers = ciphers;
+  public void setGatewaySSLCiphers(String ciphers) {
+    this.gatewaySslCiphers = (String) ciphers;
-  public String[] getHttpServiceSSLProtocols() {
+  public String getHttpServiceSSLProtocols() {
-  public void setHttpServiceSSLProtocols(String[] httpServiceSSLProtocols) {
+  public void setHttpServiceSSLProtocols(String httpServiceSSLProtocols) {
-  public String[] getHttpServiceSSLCiphers() {
+  public String getHttpServiceSSLCiphers() {
-  public void setHttpServiceSSLCiphers(String[] httpServiceSSLCiphers) {
+  public void setHttpServiceSSLCiphers(String httpServiceSSLCiphers) {

MOV43 MOV43 MOV78 MOV43 MOV78 MOV43 MOV78 MOV43 MOV78 MOV43 MOV78 MOV43 MOV78 MOV43 MOV78 MOV43 MOV78 MOV43 MOV43 MOV43 MOV8 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 MOV44 MOV43 MOV44 MOV43 MOV44 MOV43 MOV44 MOV43 MOV44 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV21 MOV21 MOV60 INS61 MOV25 MOV25 MOV25 MOV21 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 UPD42 MOV43 UPD42 MOV43 UPD42 MOV43 UPD42 MOV43 UPD42 MOV43 MOV32 MOV8 MOV60 MOV60 MOV25 MOV60 MOV21 INS11 INS11 INS11 INS11 INS11 INS11 MOV43 INS42 MOV43 INS42 MOV43 INS42 MOV43 INS42 MOV43 INS42 MOV43 INS42 UPD42 MOV42 MOV11 MOV52 MOV42 MOV42 MOV11 MOV32 INS42 MOV43 MOV32 UPD42 MOV42 MOV52 MOV42 DEL40 DEL26 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL61 DEL8 DEL83 DEL39 DEL42 DEL83 DEL42 DEL44 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL45 DEL32 DEL27 DEL40 DEL42 DEL42 DEL32 DEL38 DEL40 DEL42 DEL42 DEL32 DEL38 DEL27 DEL9 DEL41 DEL8 DEL25 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL42 DEL85 DEL5 DEL42 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL42 DEL85 DEL5 DEL85 DEL5 DEL42 DEL85 DEL5 DEL85 DEL5 DEL42 DEL85 DEL5 DEL85 DEL5 DEL42 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5