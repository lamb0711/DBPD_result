Merge branch 'develop' into feature/GEODE-3109

-      String host;
-
-      InetAddress add = getInetAddress();
-      if (add.isMulticastAddress())
-        host = add.getHostAddress();
-      else {
-        // host = shortName(add.getHostName());
-        host = SocketCreator.resolve_dns ? shortName(this.hostName) : this.hostName;
-      }
-
-      sb.append(host);
-
-      String myName = getName();
-      int vmPid = netMbr.getProcessId();
-      int vmKind = netMbr.getVmKind();
-      if (vmPid > 0 || vmKind != DistributionManager.NORMAL_DM_TYPE || !"".equals(myName)) {
-        sb.append("(");
-
-        if (!"".equals(myName)) {
-          sb.append(myName);
-          if (vmPid > 0) {
-            sb.append(':');
-          }
-        }
-
-        if (vmPid > 0)
-          sb.append(Integer.toString(vmPid));
-
-        String vmStr = "";
-        switch (vmKind) {
-          case DistributionManager.NORMAL_DM_TYPE:
-            // vmStr = ":local"; // let this be silent
-            break;
-          case DistributionManager.LOCATOR_DM_TYPE:
-            vmStr = ":locator";
-            break;
-          case DistributionManager.ADMIN_ONLY_DM_TYPE:
-            vmStr = ":admin";
-            break;
-          case DistributionManager.LONER_DM_TYPE:
-            vmStr = ":loner";
-            break;
-          default:
-            vmStr = ":<unknown:" + vmKind + ">";
-            break;
-        }
-        sb.append(vmStr);
-        sb.append(")");
-      }
-      if (vmKind != DistributionManager.LONER_DM_TYPE && netMbr.preferredForCoordinator()) {
-        sb.append("<ec>");
-      }
-      int vmViewId = getVmViewId();
-      if (vmViewId >= 0) {
-        sb.append("<v" + vmViewId + ">");
-      }
-      sb.append(":");
-      sb.append(getPort());
-
-      // if (dcPort > 0 && vmKind != DistributionManager.LONER_DM_TYPE) {
-      // sb.append("/");
-      // sb.append(Integer.toString(dcPort));
-      // }
-
-      if (vmKind == DistributionManager.LONER_DM_TYPE) {
-        // add some more info that was added in 4.2.1 for loner bridge clients
-        // impact on non-bridge loners is ok
-        if (this.uniqueTag != null && this.uniqueTag.length() != 0) {
-          sb.append(":").append(this.uniqueTag);
-        }
-        String name = getName();
-        if (name.length() != 0) {
-          sb.append(":").append(name);
-        }
-      }
+      addFixedToString(sb);
+  public void addFixedToString(StringBuilder sb) {
+    // Note: This method is used to generate the HARegion name. If it is changed, memory and GII
+    // issues will occur in the case of clients with subscriptions during rolling upgrade.
+    String host;
+
+    InetAddress add = getInetAddress();
+    if (add.isMulticastAddress())
+      host = add.getHostAddress();
+    else {
+      // host = shortName(add.getHostName());
+      host = SocketCreator.resolve_dns ? shortName(this.hostName) : this.hostName;
+    }
+
+    sb.append(host);
+
+    String myName = getName();
+    int vmPid = netMbr.getProcessId();
+    int vmKind = netMbr.getVmKind();
+    if (vmPid > 0 || vmKind != DistributionManager.NORMAL_DM_TYPE || !"".equals(myName)) {
+      sb.append("(");
+
+      if (!"".equals(myName)) {
+        sb.append(myName);
+        if (vmPid > 0) {
+          sb.append(':');
+        }
+      }
+
+      if (vmPid > 0)
+        sb.append(Integer.toString(vmPid));
+
+      String vmStr = "";
+      switch (vmKind) {
+        case DistributionManager.NORMAL_DM_TYPE:
+          // vmStr = ":local"; // let this be silent
+          break;
+        case DistributionManager.LOCATOR_DM_TYPE:
+          vmStr = ":locator";
+          break;
+        case DistributionManager.ADMIN_ONLY_DM_TYPE:
+          vmStr = ":admin";
+          break;
+        case DistributionManager.LONER_DM_TYPE:
+          vmStr = ":loner";
+          break;
+        default:
+          vmStr = ":<unknown:" + vmKind + ">";
+          break;
+      }
+      sb.append(vmStr);
+      sb.append(")");
+    }
+    if (vmKind != DistributionManager.LONER_DM_TYPE && netMbr.preferredForCoordinator()) {
+      sb.append("<ec>");
+    }
+    int vmViewId = getVmViewId();
+    if (vmViewId >= 0) {
+      sb.append("<v" + vmViewId + ">");
+    }
+    sb.append(":");
+    sb.append(getPort());
+
+    // if (dcPort > 0 && vmKind != DistributionManager.LONER_DM_TYPE) {
+    // sb.append("/");
+    // sb.append(Integer.toString(dcPort));
+    // }
+
+    if (vmKind == DistributionManager.LONER_DM_TYPE) {
+      // add some more info that was added in 4.2.1 for loner bridge clients
+      // impact on non-bridge loners is ok
+      if (this.uniqueTag != null && this.uniqueTag.length() != 0) {
+        sb.append(":").append(this.uniqueTag);
+      }
+      String name = getName();
+      if (name.length() != 0) {
+        sb.append(":").append(name);
+      }
+    }
+  }
+
-    if (InternalDataSerializer.getVersionForDataStream(out).compareTo(Version.GFE_90) == 0) {
+    Version outputVersion = InternalDataSerializer.getVersionForDataStream(out);
+    if (0 <= outputVersion.compareTo(Version.GFE_90)
+        && outputVersion.compareTo(Version.GEODE_110) < 0) {

INS31 MOV78 INS83 MOV43 INS42 INS8 INS39 UPD42 INS44 MOV8 MOV60 INS25 MOV41 INS43 INS42 INS60 MOV27 INS8 INS42 INS43 INS59 UPD27 MOV60 INS21 MOV60 MOV25 MOV25 MOV21 MOV21 INS42 INS42 MOV32 INS27 INS27 INS32 INS34 MOV32 INS32 MOV34 INS42 INS42 INS42 INS42 INS42 INS40 DEL25 DEL8