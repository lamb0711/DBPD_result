Merge branch 'release/1.3.0'

+import org.apache.commons.lang.StringUtils;
+import org.apache.geode.cache.Region;
+  public static String ALL = "*";
+
+  /**
+   * @deprecated use ALL
+   */
+  /**
+   * @deprecated use All
+   */
+  // when ALL is specified, we need it to convert to string "*" instead of "ALL".
+  public enum Target {
+    ALL(ResourcePermission.ALL), DISK, GATEWAY, QUERY, DEPLOY;
+
+    private String name;
+
+    Target() {}
+
+    Target(String name) {
+      this.name = name;
+    }
+
+    public String getName() {
+      if (name != null) {
+        return name;
+      }
+      return name();
+    }
+  }
+
-  private String regionName = ALL_REGIONS;
-  private String key = ALL_KEYS;
+  private String target = ALL;
+  private String key = ALL;
-    this(Resource.NULL, Operation.NULL);
+    this(Resource.NULL, Operation.NULL, ALL, ALL);
-    this(resource, operation, ALL_REGIONS);
+    this(resource, operation, ALL, ALL);
-  public ResourcePermission(String resource, String operation, String regionName) {
-    this(resource, operation, regionName, ALL_KEYS);
+  public ResourcePermission(String resource, String operation, String target) {
+    this(resource, operation, target, ALL);
-  public ResourcePermission(String resource, String operation, String regionName, String key) {
+  public ResourcePermission(String resource, String operation, String target, String key) {
-        (operation == null) ? Operation.NULL : Operation.valueOf(operation.toUpperCase()),
-        regionName, key);
+        (operation == null) ? Operation.NULL : Operation.valueOf(operation.toUpperCase()), target,
+        key);
-    this(resource, operation, ALL_REGIONS);
+    this(resource, operation, ALL, ALL);
-  public ResourcePermission(Resource resource, Operation operation, String regionName) {
-    this(resource, operation, regionName, ALL_KEYS);
+  public ResourcePermission(Resource resource, Operation operation, String target) {
+    this(resource, operation, target, ALL);
-  public ResourcePermission(Resource resource, Operation operation, String regionName, String key) {
-    if (resource != null)
+  public ResourcePermission(Resource resource, Operation operation, Target target) {
+    this(resource, operation, target, ALL);
+  }
+
+  public ResourcePermission(Resource resource, Operation operation, Target target,
+      String targetKey) {
+    this(resource, operation, target.getName(), targetKey);
+  }
+
+  public ResourcePermission(Resource resource, Operation operation, String target, String key) {
+    if (resource != null) {
-    if (operation != null)
+    }
+    if (operation != null) {
-    if (regionName != null)
-      this.regionName = regionName;
-    if (key != null)
+    }
+    if (target != null) {
+      this.target = StringUtils.stripStart(target, Region.SEPARATOR);
+    }
+    if (key != null) {
+    }
-    setParts(this.resource + ":" + this.operation + ":" + this.regionName + ":" + this.key, true);
+    setParts(this.resource + ":" + this.operation + ":" + this.target + ":" + this.key, true);
-   * returns the regionName, could be "*", meaning all regions
+   * returns the regionName, or cluster target, could be "*", meaning all regions or all targets
+   */
+  public String getTarget() {
+    return target;
+  }
+
+  /**
+   * @deprecated use getTarget()
-    return regionName;
+    return getTarget();
-    if (ALL_REGIONS.equals(regionName)) {
+    if (ALL.equals(target)) {
-    } else if (ALL_KEYS.equals(key)) {
-      return resource + ":" + operation + ":" + regionName;
+    } else if (ALL.equals(key)) {
+      return resource + ":" + operation + ":" + target;
-      return resource + ":" + operation + ":" + regionName + ":" + key;
+      return resource + ":" + operation + ":" + target + ":" + key;

INS26 INS26 INS40 INS40 INS23 INS71 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS29 INS29 INS83 INS42 INS72 INS72 INS72 INS72 INS72 INS23 INS31 INS31 INS31 INS43 INS43 MOV44 MOV44 MOV44 MOV44 MOV44 INS44 MOV44 MOV44 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS83 INS42 INS44 INS44 INS44 INS8 INS44 INS44 INS44 INS44 INS29 INS83 MOV43 INS42 INS8 INS43 INS42 INS42 INS45 INS65 INS65 INS42 INS40 INS42 INS42 INS42 INS42 INS83 MOV43 INS59 INS42 INS8 INS42 MOV44 INS8 INS83 MOV43 INS42 INS8 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS43 INS42 UPD42 INS17 INS43 INS42 INS43 INS42 INS43 INS42 INS17 INS43 INS42 INS43 INS42 INS43 INS42 UPD42 INS43 INS42 INS65 INS41 UPD65 INS42 INS66 INS66 INS42 UPD42 INS21 INS25 INS41 INS42 INS42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS8 INS8 INS8 INS8 INS66 INS42 UPD66 INS32 INS7 INS27 INS8 INS32 INS42 INS42 MOV21 MOV21 UPD42 INS21 MOV21 INS42 UPD42 UPD42 INS22 INS42 INS42 INS33 INS41 INS42 MOV7 UPD42 INS52 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 INS42 INS40 UPD42 UPD42 DEL42 DEL42 DEL21 DEL42