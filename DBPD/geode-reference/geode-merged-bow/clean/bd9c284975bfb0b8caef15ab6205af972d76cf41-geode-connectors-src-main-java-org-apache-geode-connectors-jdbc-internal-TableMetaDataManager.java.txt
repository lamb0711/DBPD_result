GEODE-6194: add composite keys to jdbc (#3015)

Multiple --id column names can now be specified on "create jdbc-mapping"
using a comma separated list. 
The key object itself must then be a JSON string whose names are
the corresponding pdx field name for each id column name. 
The extension team is looking into changing composite keys for both GGC and JDBC
to something other than JSON.

+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
-        String key = getPrimaryKeyColumnNameFromMetaData(realTableName, metaData, ids);
+        List<String> keys = getPrimaryKeyColumnNamesFromMetaData(realTableName, metaData, ids);
-        result = new TableMetaData(realTableName, key, quoteString);
+        result = new TableMetaData(realTableName, keys, quoteString);
-  private String getPrimaryKeyColumnNameFromMetaData(String tableName, DatabaseMetaData metaData,
+  private List<String> getPrimaryKeyColumnNamesFromMetaData(String tableName,
+      DatabaseMetaData metaData,
+    List<String> keys = new ArrayList<>();
+
-      if (!doesColumnExistInTable(tableName, metaData, ids)) {
-        throw new JdbcConnectorException(
-            "The table " + tableName + " does not have a column named " + ids);
+      keys.addAll(Arrays.asList(ids.split(",")));
+      for (String key : keys) {
+        checkColumnExistsInTable(tableName, metaData, key);
-      return ids;
+    } else {
+      try (ResultSet primaryKeys = metaData.getPrimaryKeys(null, null, tableName)) {
+        while (primaryKeys.next()) {
+          String key = primaryKeys.getString("COLUMN_NAME");
+          keys.add(key);
+        }
+        if (keys.isEmpty()) {
+          throw new JdbcConnectorException(
+              "The table " + tableName + " does not have a primary key column.");
+        }
+      }
-    try (ResultSet primaryKeys = metaData.getPrimaryKeys(null, null, tableName)) {
-      if (!primaryKeys.next()) {
-        throw new JdbcConnectorException(
-            "The table " + tableName + " does not have a primary key column.");
-      }
-      String key = primaryKeys.getString("COLUMN_NAME");
-      if (primaryKeys.next()) {
-        throw new JdbcConnectorException(
-            "The table " + tableName + " has more than one primary key column.");
-      }
-      return key;
-    }
+    return keys;
-  private boolean doesColumnExistInTable(String tableName, DatabaseMetaData metaData,
+  private void checkColumnExistsInTable(String tableName, DatabaseMetaData metaData,
-          return true;
+          return;
+    } else if (caseInsensitiveMatches == 0) {
+      throw new JdbcConnectorException(
+          "The table " + tableName + " does not have a column named " + columnName);
-    return caseInsensitiveMatches != 0;

INS26 INS26 INS26 INS40 INS40 INS40 INS74 UPD42 INS8 UPD39 UPD42 INS43 MOV43 INS60 INS25 INS41 INS42 INS74 INS59 MOV27 INS8 MOV8 INS42 INS25 INS43 INS43 INS42 INS14 INS21 INS70 INS27 INS8 INS42 INS42 INS74 INS32 INS44 INS42 INS8 INS42 INS34 INS53 INS43 INS42 INS42 INS32 MOV43 INS42 INS21 INS61 INS14 INS74 INS42 INS42 INS42 INS32 INS32 MOV32 INS8 INS32 MOV43 INS27 INS43 INS43 UPD42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 MOV60 INS21 UPD42 MOV42 UPD42 MOV42 INS45 INS42 INS45 INS42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL41 DEL8 DEL25 DEL32 DEL38 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL41 DEL9 DEL42 DEL34 DEL27 DEL41