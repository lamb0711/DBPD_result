Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

-    beginLocalWrite(event);
+    LocalRegion lr = event.getLocalRegion();
+    AbstractRegionMap arm = ((AbstractRegionMap) lr.getRegionMap());
-      
-      if (!hasSeenEvent(event)) {
-        this.entries.updateEntryVersion(event);
-      } else {
-        if (logger.isTraceEnabled(LogMarker.DM)) {
-          logger.trace(LogMarker.DM, "BR.basicUpdateEntryVersion: this cache has already seen this event {}", event);
+      arm.lockForCacheModification(lr, event);
+      beginLocalWrite(event);
+      try {      
+        if (!hasSeenEvent(event)) {
+          this.entries.updateEntryVersion(event);
+        } else {
+          if (logger.isTraceEnabled(LogMarker.DM)) {
+            logger.trace(LogMarker.DM, "BR.basicUpdateEntryVersion: this cache has already seen this event {}", event);
+          }
+        if (!event.isOriginRemote() && getBucketAdvisor().isPrimary()) {
+          // This cache has processed the event, forward operation
+          // and event messages to backup buckets
+          if (!getConcurrencyChecksEnabled() || event.hasValidVersionTag()) {
+            distributeUpdateEntryVersionOperation(event);
+          }
+        }
+        return;
+      } finally {
+        endLocalWrite(event);
-      if (!event.isOriginRemote() && getBucketAdvisor().isPrimary()) {
-        // This cache has processed the event, forward operation
-        // and event messages to backup buckets
-    	if (!getConcurrencyChecksEnabled() || event.hasValidVersionTag()) {
-          distributeUpdateEntryVersionOperation(event);
-    	}
-      }
-      return;
-      endLocalWrite(event);
+      arm.releaseCacheModificationLock(event.getLocalRegion(), event);

INS8 MOV21 MOV21 INS60 INS60 INS54 INS43 INS59 INS43 INS59 MOV8 INS8 INS42 INS42 INS32 INS42 INS42 INS36 INS21 INS21 INS42 INS42 INS11 INS32 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42