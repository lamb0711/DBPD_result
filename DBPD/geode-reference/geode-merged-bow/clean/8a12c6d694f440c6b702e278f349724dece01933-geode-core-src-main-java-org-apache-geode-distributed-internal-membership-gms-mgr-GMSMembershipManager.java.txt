GEODE-4818: Remove beSick() from DirectChannel,TcpConduit. (#1591)

Also remove some dead code and clean up a little bit while I'm here.
-  private final ThreadLocal<Boolean> forceUseUDPMessaging = new ThreadLocal<Boolean>() {
-    @Override
-    protected Boolean initialValue() {
-      return Boolean.FALSE;
-    }
-  };
+  private final ThreadLocal<Boolean> forceUseUDPMessaging =
+      ThreadLocal.withInitial(() -> Boolean.FALSE);
-    boolean crashed;
-    String reason;
-      List<InternalDistributedMember> members = (List<InternalDistributedMember>) ex.getMembers(); // We
-      // need
-      // to
-      // return
-      // this
-      // list
-      // of
-      // failures
+      // We need to return this list of failures
+      List<InternalDistributedMember> members = (List<InternalDistributedMember>) ex.getMembers();
-      NetView view = services.getJoinLeave().getView(); // grab a recent view, excluding shunned
-      // members
+
+      // grab a recent view, excluding shunned members
+      NetView view = services.getJoinLeave().getView();
-  // @Override
-  // public void membershipFailure(String reason, Exception e) {
-  // try {
-  // if (this.membershipTestHooks != null) {
-  // List l = this.membershipTestHooks;
-  // for (Iterator it=l.iterator(); it.hasNext(); ) {
-  // MembershipTestHook dml = (MembershipTestHook)it.next();
-  // dml.beforeMembershipFailure(reason, e);
-  // }
-  // }
-  // listener.membershipFailure(reason, e);
-  // if (this.membershipTestHooks != null) {
-  // List l = this.membershipTestHooks;
-  // for (Iterator it=l.iterator(); it.hasNext(); ) {
-  // MembershipTestHook dml = (MembershipTestHook)it.next();
-  // dml.afterMembershipFailure(reason, e);
-  // }
-  // }
-  // }
-  // catch (RuntimeException re) {
-  // logger.warn(LocalizedMessage.create(LocalizedStrings.GroupMembershipService_EXCEPTION_CAUGHT_WHILE_SHUTTING_DOWN),
-  // re);
-  // }
-  // }
-
+  @Override
-      if (directChannel != null) {
-        directChannel.beSick();
-      }
+  @Override
+  @Override
-      if (directChannel != null) {
-        directChannel.beHealthy();
-      }
+    @Override
+    @Override
+    @Override
-  static class BoundedLinkedHashMap<K, V> extends LinkedHashMap {
+  static class BoundedLinkedHashMap<K, V> extends LinkedHashMap<K, V> {
-
-

INS78 INS78 INS78 INS74 INS32 INS42 INS42 INS42 MOV78 INS78 INS78 MOV43 INS43 INS43 INS42 INS42 INS86 INS42 INS42 INS42 INS42 INS40 DEL42 DEL43 DEL42 DEL43 DEL74 DEL83 DEL42 DEL43 DEL42 DEL40 DEL41 DEL8 DEL31 DEL1 DEL14 DEL39 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25