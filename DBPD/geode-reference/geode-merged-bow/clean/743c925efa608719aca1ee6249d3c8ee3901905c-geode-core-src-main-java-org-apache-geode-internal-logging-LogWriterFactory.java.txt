Revert GEODE-2644 because offline diskstore commands generate info level logs

GFSH forks the offline diskstore commands in a JVM using log4j2-cli.xml
which sets the log level to WARN. However, the forked JVM creates a
Cache which then starts generating info level statements to STDOUT.

Revert "GEODE-2644: Remove log level from MonitorQueryUnderContentionBenchmark"
This reverts commit 6691d310e1263966991e584f712156d919dabecf.

Revert "GEODE-2644: Update session state caching dependencies for logging"
This reverts commit 688f58a4a75cc1297faa1dda201b971346c3a9fe.

Revert "GEODE-5637: Fix flaky SingleHopClientExecutorWithLoggingIntegrationTest"
This reverts commit 0a8f3dffa1ebaa618fafecc15bbc92ba8ba83696.

Revert "GEODE-2644: Make LogWriterAppender optional and support log4j2.xml"
This reverts commit 591f3f7840ce38c6100bff2040f396ad2469175e.

Revert "GEODE-2644: Expand DistributedSystemMXBean tests"
This reverts commit cd2bba13e2fb7e79f7634053a6c612050b328e11.

Revert "GEODE-2644: Make AlertAppender optional and support log4j2.xml"
This reverts commit 02c3cae1d38098259ff6aa4635c6e74f795bdc50.

Revert "GEODE-2644: Add LogConfig and StatisticsConfig for logging"
This reverts commit a77c94b349b3ed7fc873fc29f6852f9936843790.

Revert "GEODE-2644: Add AlertingTest JUnit Category"
This reverts commit 731cd2a7d35b086d34f8bbcb94a83c40739ae8ee.

Revert "GEODE-2644: Add LogFileAssert and LogLevelAssert assertions"
This reverts commit 5e61da5301469cdbd71ac186573f56c38e9a6cf0.

Revert "GEODE-2644: Cleanup logging related files"
This reverts commit 763e4177f201eff9b140654e6858152a1a184b8c.

Revert "GEODE-2644: Define interfaces for new Log4j2 Appenders"
This reverts commit efd8a14027195b6dae1dd3e4d53a33696ed318bb.

-import static org.apache.geode.internal.logging.Configuration.MAIN_LOGGER_NAME;
-import static org.apache.geode.internal.logging.Configuration.SECURITY_LOGGER_NAME;
+import static org.apache.geode.distributed.ConfigurationProperties.LOG_LEVEL;
+import org.apache.geode.distributed.internal.DistributionConfig;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.distributed.internal.InternalLocator;
+import org.apache.geode.internal.Banner;
+import org.apache.geode.internal.ConfigSource;
+import org.apache.geode.internal.logging.log4j.LogMarker;
- * Factory for creating {@link LogWriterLogger}s.
+ * Creates LogWriterLogger instances.
+ *
+  // LOG: RemoteGfManagerAgent and CacheCreation use this when there's no InternalDistributedSystem
+  public static InternalLogWriter toSecurityLogWriter(final InternalLogWriter logWriter) {
+    return new SecurityLogWriter(logWriter.getLogWriterLevel(), logWriter);
+  }
+
-   * @param logConfig geode configuration for the logger
-   * @param secure indicates if the logger is for security related messages
+   * @param isLoner Whether the distributed system is a loner or not
+   * @param isSecure Whether a logger for security related messages has to be created
+   * @param config The DistributionConfig for the target distributed system
+   * @param logConfig if true log the configuration
-  public static InternalLogWriter createLogWriterLogger(final LogConfig logConfig,
-      final boolean secure) {
-    String name = secure ? SECURITY_LOGGER_NAME : MAIN_LOGGER_NAME;
-    return LogService.createLogWriterLogger(name, logConfig.getName(), secure);
-  }
+  public static InternalLogWriter createLogWriterLogger(final boolean isLoner,
+      final boolean isSecure, final LogConfig config, final boolean logConfig) {
-  /**
-   * Wraps the {@code logWriter} within a {@link SecurityLogWriter}.
-   */
-  public static InternalLogWriter toSecurityLogWriter(final InternalLogWriter logWriter) {
-    return new SecurityLogWriter(logWriter.getLogWriterLevel(), logWriter);
+    // if isSecurity then use "org.apache.geode.security" else use "org.apache.geode"
+    String name = null;
+    if (isSecure) {
+      name = LogService.SECURITY_LOGGER_NAME;
+    } else {
+      name = LogService.MAIN_LOGGER_NAME;
+    }
+
+    // create the LogWriterLogger
+    final LogWriterLogger logger =
+        LogService.createLogWriterLogger(name, config.getName(), isSecure);
+
+    if (isSecure) {
+      logger.setLogWriterLevel(((DistributionConfig) config).getSecurityLogLevel());
+    } else {
+      boolean defaultSource = false;
+      if (config instanceof DistributionConfig) {
+        ConfigSource source = ((DistributionConfig) config).getConfigSource(LOG_LEVEL);
+        if (source == null) {
+          defaultSource = true;
+        }
+      }
+      if (!defaultSource) {
+        // LOG: fix bug #51709 by not setting if log-level was not specified
+        // LOG: let log4j2.xml specify log level which defaults to INFO
+        logger.setLogWriterLevel(config.getLogLevel());
+      }
+    }
+
+    // log the banner
+    if (!Boolean.getBoolean(InternalLocator.INHIBIT_DM_BANNER)
+        && InternalDistributedSystem.getReconnectAttemptCounter() == 0 // avoid filling up logs
+                                                                       // during auto-reconnect
+        && !isSecure // && !isLoner /* do this on a loner to fix bug 35602 */
+        && logConfig) {
+      logger.info(LogMarker.CONFIG_MARKER, Banner.getString(null));
+    } else {
+      logger.debug("skipping banner - " + InternalLocator.INHIBIT_DM_BANNER + " is set to true");
+    }
+
+    // log the config
+    if (logConfig && !isLoner) {
+      logger.info(LogMarker.CONFIG_MARKER, "Startup Configuration: {}",
+          config.toLoggerString());
+    }
+    return logger;

INS26 INS26 INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS40 INS40 UPD40 UPD40 MOV44 INS44 INS44 UPD66 INS65 INS65 INS83 INS39 INS42 UPD42 UPD42 INS83 INS39 INS42 INS60 INS25 INS60 INS25 INS25 INS25 INS41 UPD42 UPD66 UPD42 UPD66 INS42 INS66 INS42 INS66 MOV43 INS59 INS42 INS8 INS8 INS83 INS43 INS59 INS42 INS8 INS8 INS27 INS8 INS8 INS27 INS8 INS42 MOV42 INS33 INS21 INS21 INS42 INS42 INS32 INS21 INS60 INS25 INS25 INS27 INS42 INS21 INS21 INS42 INS38 INS21 INS7 INS7 MOV42 MOV42 MOV42 MOV32 UPD42 MOV42 INS32 INS39 INS59 INS62 INS8 INS38 INS8 INS27 INS38 INS32 INS32 INS42 INS32 INS42 INS40 INS42 INS40 UPD42 INS42 INS42 INS32 INS42 INS9 INS42 INS43 INS60 INS25 INS42 INS21 INS38 INS27 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS27 INS42 INS42 INS40 INS45 INS32 INS36 INS42 INS42 INS43 INS59 INS27 INS8 INS32 INS32 INS32 INS34 INS42 INS42 INS33 INS45 INS40 INS45 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS43 INS42 INS36 INS42 INS42 INS7 INS42 INS42 INS42 INS11 INS42 INS9 INS43 INS42 INS42 DEL66 DEL42 DEL65 DEL66 DEL66 DEL65 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL42 DEL42 DEL42 DEL16 DEL59 DEL60 DEL32 DEL41