Revert "GEODE-7436: Deploy jar using semantic versioning scheme (#4343)" (#4380)

This reverts commit 0d4c1912


+import static java.util.stream.Collectors.toList;
-        response.getJarNames().values().stream()
-            .flatMap(Set::stream)
-            .collect(Collectors.toList());
+        response.getJarNames().values().stream().flatMap(Set::stream).collect(Collectors.toList());
-        Set<File> stagedJarFiles =
-            getJarsFromLocator(response.getMember(), response.getJarNames());
+        List<String> extraJarsOnServer =
+            jarDeployer.findDeployedJars().stream().map(DeployedJar::getJarName)
+                .filter(jarName -> !jarFileNames.contains(jarName)).collect(toList());
-        for (File stagedJarFile : stagedJarFiles) {
-          logger.info("Removing old versions of {} in cluster configuration.",
-              stagedJarFile.getName());
-          jarDeployer.deleteAllVersionsOfJar(stagedJarFile.getName());
+        for (String extraJar : extraJarsOnServer) {
+          logger.info("Removing jar not present in cluster configuration: {}", extraJar);
+          jarDeployer.deleteAllVersionsOfJar(extraJar);
+        Map<String, File> stagedJarFiles =
+            getJarsFromLocator(response.getMember(), response.getJarNames());
+
-  // download the jars from the locator for the specific groups this server is on (the server
-  // might be on multiple groups.
-  private Set<File> getJarsFromLocator(DistributedMember locator,
+  private Map<String, File> getJarsFromLocator(DistributedMember locator,
-    return new HashSet<>(results.values());
+    return results;
-  // the returned File will use use jarName as the fileName
-  public File downloadJar(DistributedMember locator, String groupName, String jarName)
-      throws IOException {
-    Path tempDir = FileUploader.createSecuredTempDirectory("deploy-");
-    Path tempJar = Paths.get(tempDir.toString(), jarName);
-
-    downloadTo(locator, groupName, jarName, tempJar);
-
-    return tempJar.toFile();
-  }
-
-  void downloadTo(DistributedMember locator, String groupName, String jarName, Path jarPath)
+  public static File downloadJar(DistributedMember locator, String groupName, String jarName)
-    FileOutputStream fos = new FileOutputStream(jarPath.toString());
+    Path tempDir = FileUploader.createSecuredTempDirectory("deploy-");
+    Path tempJar = Paths.get(tempDir.toString(), jarName);
+    FileOutputStream fos = new FileOutputStream(tempJar.toString());
+
+    return tempJar.toFile();

INS26 INS40 UPD74 INS83 INS83 MOV43 UPD42 UPD43 UPD43 MOV43 MOV60 MOV60 MOV41 UPD42 UPD42 INS42 MOV43 MOV60 MOV43 INS60 UPD42 INS74 INS59 UPD42 UPD74 INS43 INS43 INS42 INS32 UPD43 UPD42 INS43 UPD43 INS43 INS42 INS42 INS32 INS42 INS32 UPD42 INS42 UPD42 INS42 INS32 INS42 INS86 INS42 UPD45 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS90 INS59 INS38 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL14 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL43 DEL42 DEL44