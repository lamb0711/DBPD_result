Introduce RedisResponse to SET executors (#5114)


-import org.apache.geode.redis.internal.Coder;
+import org.apache.geode.redis.internal.RedisResponse;
-  public void executeCommand(Command command, ExecutionHandlerContext context) {
+  public RedisResponse executeCommandWithResponse(Command command,
+      ExecutionHandlerContext context) {
+    RedisResponse response;
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_MOVED));
-        return;
+        return RedisResponse.integer(NOT_MOVED);
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_MOVED));
-      } else {
-        try (AutoCloseableLock destinationLock = withRegionLock(context, destination)) {
-          // TODO: this should invoke a function in case the primary for destination is remote
-          new RedisSetInRegion(region).sadd(destination,
-              new ArrayList<>(Collections.singletonList(member)));
+        return RedisResponse.integer(NOT_MOVED);
+      }
-          command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), MOVED));
-        } catch (InterruptedException e) {
-          Thread.currentThread().interrupt();
-          System.out.println("Interrupt exception!!");
-          command.setResponse(
-              Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-          return;
-        } catch (TimeoutException e) {
-          System.out.println("Timeout exception!!");
-          command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-              "Timeout acquiring lock. Please try again."));
-          return;
-        } catch (Exception e) {
-          System.out.println("Unexpected exception: " + e);
-          command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-              "Unexpected exception."));
-        }
+      try (AutoCloseableLock destinationLock = withRegionLock(context, destination)) {
+        // TODO: this should invoke a function in case the primary for destination is remote
+        new RedisSetInRegion(region).sadd(destination,
+            new ArrayList<>(Collections.singletonList(member)));
+
+        response = RedisResponse.integer(MOVED);
+      } catch (InterruptedException e) {
+        Thread.currentThread().interrupt();
+        response = RedisResponse.error("Thread interrupted");
+      } catch (TimeoutException e) {
+        response = RedisResponse.error("Timeout acquiring lock. Please try again.");
+      } catch (Exception e) {
+        response = RedisResponse.error("Unexpected exception.");
-      System.out.println("Interrupt exception!!");
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
+      response = RedisResponse.error("Thread interrupted.");
-      System.out.println("Timeout exception!!");
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
+      response = RedisResponse.error("Timeout acquiring lock. Please try again.");
-      System.out.println("Unexpected exception: " + e);
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Unexpected exception."));
+      response = RedisResponse.error("Unexpected exception.");
+
+    return response;

MOV26 UPD40 INS43 UPD42 INS42 INS60 INS41 INS43 INS59 INS42 INS42 INS42 INS25 MOV54 MOV44 MOV38 MOV8 INS41 INS41 MOV44 INS8 INS7 INS7 INS7 INS32 INS32 INS7 MOV21 INS42 INS32 INS42 INS32 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS32 INS7 INS7 INS7 UPD42 MOV42 UPD42 MOV42 MOV45 UPD42 MOV42 UPD42 MOV42 MOV45 UPD42 MOV42 UPD42 MOV42 MOV45 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS32 INS42 INS32 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 UPD42 MOV42 UPD42 MOV42 MOV45 UPD42 MOV42 UPD42 MOV42 MOV45 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL41 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL8 DEL25 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL41 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32