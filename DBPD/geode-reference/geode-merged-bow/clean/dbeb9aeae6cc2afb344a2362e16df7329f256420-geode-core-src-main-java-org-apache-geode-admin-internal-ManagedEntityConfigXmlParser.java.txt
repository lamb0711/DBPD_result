Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Parses an XML file and configures a {@link DistributedSystemConfig}
- * from it.
+ * Parses an XML file and configures a {@link DistributedSystemConfig} from it.
-public class ManagedEntityConfigXmlParser
-  extends ManagedEntityConfigXml implements ContentHandler {
+public class ManagedEntityConfigXmlParser extends ManagedEntityConfigXml implements ContentHandler {
-  //////////////////////  Static Methods  //////////////////////
+  ////////////////////// Static Methods //////////////////////
-   * Parses XML data and from it configures a
-   * <code>DistributedSystemConfig</code>.
+   * Parses XML data and from it configures a <code>DistributedSystemConfig</code>.
-   * @throws AdminXmlException
-   *         If an error is encountered while parsing the XML
+   * @throws AdminXmlException If an error is encountered while parsing the XML
-  public static void parse(InputStream is,
-                           DistributedSystemConfig config) {
-    ManagedEntityConfigXmlParser handler =
-      new ManagedEntityConfigXmlParser();
+  public static void parse(InputStream is, DistributedSystemConfig config) {
+    ManagedEntityConfigXmlParser handler = new ManagedEntityConfigXmlParser();
-        // SAXException.  Pshaw!
+        // SAXException. Pshaw!
-      throw new AdminXmlException(LocalizedStrings.ManagedEntityConfigXmlParser_WHILE_PARSING_XML.toLocalizedString(), ex);
+      throw new AdminXmlException(
+          LocalizedStrings.ManagedEntityConfigXmlParser_WHILE_PARSING_XML.toLocalizedString(), ex);
-   * @throws org.apache.geode.cache.CacheXmlException
-   *         If <code>s</code> is a malformed integer
+   * @throws org.apache.geode.cache.CacheXmlException If <code>s</code> is a malformed integer
-      throw new AdminXmlException(LocalizedStrings.ManagedEntityConfigXmlParser_MALFORMED_INTEGER_0.toLocalizedString(s), ex);
+      throw new AdminXmlException(
+          LocalizedStrings.ManagedEntityConfigXmlParser_MALFORMED_INTEGER_0.toLocalizedString(s),
+          ex);
-  //////////////////////  Instance Methods  //////////////////////
+  ////////////////////// Instance Methods //////////////////////
-//    if (this.system.isMcastEnabled()) {
-//      generateMulticast();
-//    }
+  // if (this.system.isMcastEnabled()) {
+  // generateMulticast();
+  // }
-  public void startElement(String namespaceURI, String localName,
-                           String qName, Attributes atts)
-    throws SAXException {
+  public void startElement(String namespaceURI, String localName, String qName, Attributes atts)
+      throws SAXException {
-      
+
-      throw new AdminXmlException(LocalizedStrings.ManagedEntityConfigXmlParser_UNKNOWN_XML_ELEMENT_0.toLocalizedString(qName));
+      throw new AdminXmlException(
+          LocalizedStrings.ManagedEntityConfigXmlParser_UNKNOWN_XML_ELEMENT_0
+              .toLocalizedString(qName));
-  public void endElement(String namespaceURI, String localName,
-                         String qName)
-    throws SAXException {
+  public void endElement(String namespaceURI, String localName, String qName) throws SAXException {
-      throw new AdminXmlException(LocalizedStrings.ManagedEntityConfigXmlParser_UNKNOWN_XML_ELEMENT_0.toLocalizedString(qName));
+      throw new AdminXmlException(
+          LocalizedStrings.ManagedEntityConfigXmlParser_UNKNOWN_XML_ELEMENT_0
+              .toLocalizedString(qName));
-   * When a <code>distributed-system</code> element is encountered, we
-   * push the <code>DistributedSystemConfig</code> on the stack.
+   * When a <code>distributed-system</code> element is encountered, we push the
+   * <code>DistributedSystemConfig</code> on the stack.
-    
+
-    
+
-   * <code>DistributedSystemConfig</code> off of the top of the stack
-   * and set its multicast config appropriately.
+   * <code>DistributedSystemConfig</code> off of the top of the stack and set its multicast config
+   * appropriately.
-    DistributedSystemConfig config =
-      (DistributedSystemConfig) stack.peek();
+    DistributedSystemConfig config = (DistributedSystemConfig) stack.peek();
-   * Starts a <code>remote-command</code> element.  The item on top of
-   * the stack may be a <code>DistributedSystemConfig</code> or it
-   * might be a <code>ManagedEntityConfig</code>.
+   * Starts a <code>remote-command</code> element. The item on top of the stack may be a
+   * <code>DistributedSystemConfig</code> or it might be a <code>ManagedEntityConfig</code>.
-   * Ends a <code>remote-command</code> element.  Pop the command off
-   * the top of the stack and set it on the
-   * <code>DistributedSystemConfig</code> or it might be a
-   * <code>ManagedEntityConfig</code> on top of the stack.
+   * Ends a <code>remote-command</code> element. Pop the command off the top of the stack and set it
+   * on the <code>DistributedSystemConfig</code> or it might be a <code>ManagedEntityConfig</code>
+   * on top of the stack.
-      String s = "Did not expect a " + top.getClass().getName() +
-        " on top of the stack";
+      String s = "Did not expect a " + top.getClass().getName() + " on top of the stack";
-    DistributedSystemConfig system =
-      (DistributedSystemConfig) stack.peek();
+    DistributedSystemConfig system = (DistributedSystemConfig) stack.peek();
-    DistributionLocatorConfig config =
-      system.createDistributionLocatorConfig();
-    
+    DistributionLocatorConfig config = system.createDistributionLocatorConfig();
+
-   * We assume that there is a <code>ManagedEntityConfig</code> on top
-   * of the stack.
+   * We assume that there is a <code>ManagedEntityConfig</code> on top of the stack.
-    DistributedSystemConfig config =
-      (DistributedSystemConfig) stack.peek();
+    DistributedSystemConfig config = (DistributedSystemConfig) stack.peek();
-    String authenticationRequired =
-      atts.getValue(AUTHENTICATION_REQUIRED);
+    String authenticationRequired = atts.getValue(AUTHENTICATION_REQUIRED);
-    DistributedSystemConfig config =
-      (DistributedSystemConfig) stack.peek();
+    DistributedSystemConfig config = (DistributedSystemConfig) stack.peek();
-    DistributedSystemConfig config =
-      (DistributedSystemConfig) stack.peek();
+    DistributedSystemConfig config = (DistributedSystemConfig) stack.peek();
-    DistributedSystemConfig config =
-      (DistributedSystemConfig) stack.peek();
+    DistributedSystemConfig config = (DistributedSystemConfig) stack.peek();
-    DistributedSystemConfig config =
-      (DistributedSystemConfig) stack.peek();
-    CacheServerConfig server =
-      config.createCacheServerConfig();
+    DistributedSystemConfig config = (DistributedSystemConfig) stack.peek();
+    CacheServerConfig server = config.createCacheServerConfig();
-   * Long strings in XML files may generate multiple
-   * <code>characters</code> callbacks.  Coalesce multiple callbacks
-   * into one big string by using a <code>StringBuffer</code>.  See
-   * bug 32122.
+   * Long strings in XML files may generate multiple <code>characters</code> callbacks. Coalesce
+   * multiple callbacks into one big string by using a <code>StringBuffer</code>. See bug 32122.
-  public void characters(char[] ch, int start, int length)
-    throws SAXException {
+  public void characters(char[] ch, int start, int length) throws SAXException {
-  //////////  Inherited methods that don't do anything  //////////
+  ////////// Inherited methods that don't do anything //////////
-  public void setDocumentLocator(Locator locator) { }
+  public void setDocumentLocator(Locator locator) {}
-  public void startDocument() throws SAXException { }
+  public void startDocument() throws SAXException {}
-  public void endDocument() throws SAXException { }
+  public void endDocument() throws SAXException {}
-  public void startPrefixMapping(String prefix, String uri) 
-    throws SAXException { }
+  public void startPrefixMapping(String prefix, String uri) throws SAXException {}
-  public void endPrefixMapping(String prefix)
-    throws SAXException { }
+  public void endPrefixMapping(String prefix) throws SAXException {}
-  public void ignorableWhitespace(char[] ch, int start, int length)
-    throws SAXException { }
+  public void ignorableWhitespace(char[] ch, int start, int length) throws SAXException {}
-  public void processingInstruction(String target, String data)
-    throws SAXException { }
+  public void processingInstruction(String target, String data) throws SAXException {}
-  public void skippedEntity(String name) throws SAXException { }
+  public void skippedEntity(String name) throws SAXException {}
-  ///////////////////////  Inner Classes  ///////////////////////
+  /////////////////////// Inner Classes ///////////////////////
-   * Class that delegates all of the methods of a {@link
-   * DefaultHandler} to a {@link ManagedEntityConfigXmlParser} that
-   * implements all of the methods of <code>DefaultHandler</code>, but
-   * <B>is not</B> a <code>DefaultHandler</code>.
+   * Class that delegates all of the methods of a {@link DefaultHandler} to a
+   * {@link ManagedEntityConfigXmlParser} that implements all of the methods of
+   * <code>DefaultHandler</code>, but <B>is not</B> a <code>DefaultHandler</code>.
-    /** The <code>ManagedEntityConfigXmlParser</code> that does the
-     * real work */ 
+    /**
+     * The <code>ManagedEntityConfigXmlParser</code> that does the real work
+     */
-     * Creates a new <code>DefaultHandlerDelegate</code> that
-     * delegates to the given
+     * Creates a new <code>DefaultHandlerDelegate</code> that delegates to the given
-    public InputSource resolveEntity(String publicId, 
-                                     String systemId)
-      throws SAXException {
+    public InputSource resolveEntity(String publicId, String systemId) throws SAXException {
-    public void startPrefixMapping(String prefix, String uri)
-      throws SAXException {
+    public void startPrefixMapping(String prefix, String uri) throws SAXException {
-    public void startElement(String uri, String localName,
-                             String qName, Attributes attributes)
-      throws SAXException {
+    public void startElement(String uri, String localName, String qName, Attributes attributes)
+        throws SAXException {
-    public void endElement(String uri, String localName, String qName)
-      throws SAXException {
+    public void endElement(String uri, String localName, String qName) throws SAXException {
-    public void characters(char[] ch, int start, int length)
-      throws SAXException {
+    public void characters(char[] ch, int start, int length) throws SAXException {
-    public void ignorableWhitespace(char[] ch, int start, int length)
-      throws SAXException {
+    public void ignorableWhitespace(char[] ch, int start, int length) throws SAXException {
-    public void processingInstruction(String target, String data)
-      throws SAXException {
+    public void processingInstruction(String target, String data) throws SAXException {

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66