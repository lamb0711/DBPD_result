GEODE-6399: Manage dependency versions via java-platform (#3190)

* All applicable projects should opt into dependency version management
via bom consumption, i.e.,
    compile(platform(project(':boms:geode-all-bom')))

* Those configurations that do not extend compile, such as compileOnly
or those provided by other plugins, will also require a dependency on
the platform's BOM

* The BOM itself is now configured via the buildSrc
DependencyConstraints.groovy.Â  This replaces
geode-dependency-management.gradle.

* Those lingering "property" versions are now accessible via
DependencyConstraints.get() rather than project properties.

* Published POMs now correctly consume the Geode BOM, rather than
reproducing the same dependencyManagement block across all POMs.

* expected_pom.xml, expected_classpath.txt, and dependency_classpath.txt
files have been accordingly updated.

* publish.gradle now sets the project property constrainVersionInBom,
indicating that the published artifact should be constrained to the same
version in the geode-all-bom as the BOM itself.  Use
    project.ext.set('constrainVersionInBom', true)
to opt into the constrain set without consuming publish.gradle, or the
inverse to opt out.

* Explicit dependency in test.gradle on geode-junit:1.3.0 has been
removed.
It is only needed in buildSrc testRuntime.

* Unused 'bundled' configuration from legacy publication style has been
removed.

Co-authored-by: Patrick Rhomberg <prhomberg@pivotal.io>
Co-authored-by: Robert Houghton <rhoughton@pivotal.io>

-import org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactory;
-
+  private static final String FACTORY_CANONICAL_NAME = "org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactory";
+  private static final String FACTORY_SIMPLE_NAME = "CategoryWithParameterizedRunnerFactory";
+
-    return runnerFactoryValue.equals(CategoryWithParameterizedRunnerFactory.class.getCanonicalName())
-        || runnerFactoryValue.equals(CategoryWithParameterizedRunnerFactory.class.getSimpleName());
+    return runnerFactoryValue.equals(FACTORY_CANONICAL_NAME)
+        || runnerFactoryValue.equals(FACTORY_SIMPLE_NAME);

INS23 INS23 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 DEL40 DEL26 DEL42 DEL43 DEL57 DEL42 DEL32 DEL42 DEL43 DEL57 DEL42 DEL32