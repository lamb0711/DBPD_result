Merge branch 'release/1.0.0-incubating.M1'

- * =========================================================================
- *  Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- *  This product is protected by U.S. and international copyright
- *  and intellectual property laws. Pivotal products are covered by
- *  more patents listed at http://www.pivotal.io/patents.
- * ========================================================================
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import java.net.URL;
+import com.gemstone.gemfire.internal.logging.LogService;
-
+  
+      
+      configureLogging(commandList);
+          
+
+      configureLogging(commandList);
+
+  private void configureLogging(final List<String> commandList) {
+    URL configUrl = LogService.class.getResource(LogService.CLI_CONFIG);
+    String configFilePropertyValue = configUrl.toString();
+    commandList.add("-Dlog4j.configurationFile=" + configFilePropertyValue);
+  }
-                 mandatory=true,
-                 unspecifiedDefaultValue=CliMetaData.ANNOTATION_NULL_VALUE,                 
-                 help=CliStrings.VALIDATE_DISK_STORE__DISKDIRS__HELP)
+                  mandatory=true,
+                  unspecifiedDefaultValue=CliMetaData.ANNOTATION_NULL_VALUE,                 
+                  help=CliStrings.VALIDATE_DISK_STORE__DISKDIRS__HELP)
-                  String[] diskDirs) {   
+                  String[] diskDirs,
+      @CliOption(key=CliStrings.VALIDATE_DISK_STORE__J,
+                  unspecifiedDefaultValue=CliMetaData.ANNOTATION_NULL_VALUE,
+                  help=CliStrings.VALIDATE_DISK_STORE__J__HELP)
+      @CliMetaData (valueSeparator = ",")
+      String[] jvmProps) {   
+
+      configureLogging(commandList);
+      
+      if (jvmProps != null && jvmProps.length != 0) {
+        for (int i = 0; i < jvmProps.length; i++) {
+          commandList.add(jvmProps[i]);
+        }
+      }
+      
+      //Pass any java options on to the command
+      String opts = System.getenv("JAVA_OPTS");
+      if (opts != null) {
+        commandList.add(opts);
+      }
+//      StringPrintWriter s = new StringPrintWriter();
+//      ex.printStackTrace(s);
-      @CliOption  (key=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ALGORITHM,
-      help=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ALGORITHM__HELP)
-      String lruEvictionAlgo,
-      @CliOption  (key=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ACTION,
-      help=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ACTION__HELP)
-      String lruEvictionAction,
-      @CliOption  (key=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__LIMIT,
+      @CliOption  (key=CliStrings.ALTER_DISK_STORE__COMPRESSOR,
-      help=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__LIMIT__HELP)
-      Integer lruEvictionLimit,
+      specifiedDefaultValue="none",
+      help=CliStrings.ALTER_DISK_STORE__COMPRESSOR__HELP)
+      String compressorClassName,
+      @CliOption  (key=CliStrings.ALTER_DISK_STORE__STATISTICS__ENABLED,
+      unspecifiedDefaultValue=CliMetaData.ANNOTATION_NULL_VALUE,
+      help=CliStrings.ALTER_DISK_STORE__STATISTICS__ENABLED__HELP)
+      Boolean statisticsEnabled, 
-      @CliOption  (key=CliStrings.ALTER_DISK_STORE__COMPRESSOR,
+      @CliOption  (key=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ACTION,
+      help=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ACTION__HELP)
+      String lruEvictionAction,
+      @CliOption  (key=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ALGORITHM,
+      help=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__ALGORITHM__HELP)
+      String lruEvictionAlgo,
+      @CliOption  (key=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__LIMIT,
-      specifiedDefaultValue="none",
-      help=CliStrings.ALTER_DISK_STORE__COMPRESSOR__HELP)
-      String compressorClassName,
-      @CliOption  (key=CliStrings.ALTER_DISK_STORE__STATISTICS__ENABLED,
+      help=CliStrings.ALTER_DISK_STORE__LRU__EVICTION__LIMIT__HELP)
+      Integer lruEvictionLimit,
+      @CliOption  (key=CliStrings.ALTER_DISK_STORE__OFF_HEAP,
-      help=CliStrings.ALTER_DISK_STORE__STATISTICS__ENABLED__HELP)
-      Boolean statisticsEnabled, 
+      help=CliStrings.ALTER_DISK_STORE__OFF_HEAP__HELP)
+      Boolean offHeap, 
+          (offHeap != null) ||
+          String offHeapString = offHeap == null ? null : offHeap.toString();
-              compressorClassName, statisticsEnabledString, false);
+              compressorClassName, statisticsEnabledString, offHeapString, false);

INS26 INS26 INS40 INS40 INS31 MOV44 MOV44 MOV44 MOV44 MOV44 INS83 INS39 INS42 INS44 INS8 INS44 INS44 INS83 INS74 INS42 INS60 INS60 INS21 INS77 INS77 INS5 INS42 INS77 INS43 INS42 INS43 INS43 INS43 INS59 INS43 INS59 INS32 INS42 INS80 INS80 INS80 INS42 INS80 INS43 INS85 INS42 INS80 INS80 INS80 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS45 INS42 INS21 INS25 INS60 INS25 INS42 INS40 INS42 INS40 INS42 INS40 INS32 INS32 INS57 INS42 INS40 INS42 INS42 INS45 INS42 INS32 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS27 INS27 INS24 INS42 INS42 INS32 INS42 INS33 INS21 INS36 INS42 INS42 INS33 INS40 INS34 INS58 INS27 INS37 INS8 INS42 INS42 INS45 INS32 INS27 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS42 INS42 INS33 INS60 INS42 INS34 INS32 INS43 INS59 INS42 INS42 INS2 INS42 INS42 INS16 INS42 INS42 INS27 INS33 INS32 INS42 INS42 INS33 INS42 INS42