GEODE-1274: Migration from PulseLogWriter to Log4j standard and removal of associated classes.

* To avoid dependency on geode-core, the pulse loggers are instantiated directly from LogManager, rather than canonical LogService (which itself extends LogManager).
* Significant reduction of logging level state checks, relying on Log4j handling.
* Significant reduction of string concatenation, relying on Log4j2 string substitutions.
* Reduction of logging using an exception e.getMessage, favoring instead passing the exception itself for the stacktrace.
* Multiple identical exception blocks collapsed.
* this closes #446

-import org.apache.geode.tools.pulse.internal.log.PulseLogWriter;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
-  private final PulseLogWriter LOGGER = PulseLogWriter.getLogger();
+  private static final Logger logger = LogManager.getLogger();
-          if (LOGGER.infoEnabled()) {
-            LOGGER.info("Exception Occurred while updating cluster data : " + e.getMessage());
-          }
+          logger.info("Exception Occurred while updating cluster data : ", e);
-          if (LOGGER.infoEnabled()) {
-            LOGGER.info("InterruptedException Occurred : " + e.getMessage());
-          }
+          logger.info("InterruptedException Occurred : ", e);
-      if (LOGGER.infoEnabled()) {
-        LOGGER.info(resourceBundle.getString("LOG_MSG_STOP_THREAD_UPDATES") + " :: "
-            + this.serverName + ":" + this.port);
-      }
+      logger.info("{} :: {}:{}", resourceBundle.getString("LOG_MSG_STOP_THREAD_UPDATES"),
+          this.serverName, this.port);
-    if (LOGGER.finerEnabled()) {
-      LOGGER.finer(resourceBundle.getString("LOG_MSG_CLUSTER_DATA_IS_UPDATING") + "::"
-          + this.serverName + ":" + this.port);
-    }
+    logger.debug("{} :: {}:{}", resourceBundle.getString("LOG_MSG_CLUSTER_DATA_IS_UPDATING"),
+        this.serverName, this.port);
-      if (LOGGER.infoEnabled()) {
-        LOGGER
-            .info("InterruptedException occured while stoping cluster thread : " + e.getMessage());
-      }
+      logger.info("InterruptedException occured while stoping cluster thread : ", e);
-          if (LOGGER.infoEnabled()) {
-            LOGGER.info("Adding statement = " + i);
-          }
+          logger.info("Adding statement = {}", i);
-      if (LOGGER.infoEnabled()) {
-        LOGGER.info("statementDefinition [" + iNum + "]" + statementDefinition);
-      }
+      logger.info("statementDefinition [{}]{}", iNum, statementDefinition);
-      if (LOGGER.infoEnabled()) {
-        LOGGER.info(resourceBundle.getString("LOG_MSG_REFRESHING_MEMBER_DATA") + " : " + m.name);
-      }
+      logger.info("{} : {}", resourceBundle.getString("LOG_MSG_REFRESHING_MEMBER_DATA"), m.name);
-        LOGGER.severe(ex.getMessage());
+        logger.fatal(ex);
-        } catch (ClassNotFoundException e) {
-          cluster.LOGGER.severe(e);
-        } catch (SecurityException e) {
-          cluster.LOGGER.severe(e);
-        } catch (NoSuchMethodException e) {
-          cluster.LOGGER.severe(e);
-        } catch (IllegalArgumentException e) {
-          cluster.LOGGER.severe(e);
-        } catch (InstantiationException e) {
-          cluster.LOGGER.severe(e);
-        } catch (IllegalAccessException e) {
-          cluster.LOGGER.severe(e);
-        } catch (InvocationTargetException e) {
-          cluster.LOGGER.severe(e);
+        } catch (ClassNotFoundException | SecurityException | NoSuchMethodException
+            | InstantiationException | IllegalAccessException | InvocationTargetException e) {
+          cluster.logger.fatal(e);

INS26 INS40 UPD40 INS83 UPD43 MOV8 UPD42 UPD42 MOV41 UPD42 MOV21 MOV21 MOV21 UPD42 UPD42 INS45 MOV32 MOV22 MOV22 INS8 MOV21 UPD42 INS45 INS42 INS42 UPD42 INS45 MOV32 INS40 UPD42 INS45 MOV32 MOV22 MOV22 INS8 UPD42 INS45 MOV42 MOV21 MOV21 INS8 INS8 UPD42 UPD42 MOV42 INS84 MOV21 MOV21 UPD42 INS45 INS42 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 UPD40 UPD42 UPD42 INS45 MOV42 UPD42 INS45 MOV42 DEL45 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL45 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL45 DEL45 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL45 DEL45 DEL27 DEL42 DEL42 DEL32 DEL25 DEL8 DEL45 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL45 DEL42 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL45 DEL42 DEL45 DEL42 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL45 DEL40 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL32 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12