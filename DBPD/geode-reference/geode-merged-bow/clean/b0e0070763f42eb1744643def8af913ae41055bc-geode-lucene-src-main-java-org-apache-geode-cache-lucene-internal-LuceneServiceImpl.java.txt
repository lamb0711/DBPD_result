GEODE-3026: Removed the AsyncEventQueue for the Lucene index if the region isn't created

* GEODE-3026: Removed the AsyncEventQueue for the Lucene index if region fails to be created

* GEODE-3026: Renamed RegionService to RegionCacheService

* GEODE-3026: Moved RegionCacheService API to RegionListener

* GEODE-3026: Updated dunit test

+import org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueImpl;
-  @Override
+  public void cleanupFailedInitialization(Region region) {
+    List<LuceneIndexCreationProfile> definedIndexes = getDefinedIndexes(region.getFullPath());
+    for (LuceneIndexCreationProfile definedIndex : definedIndexes) {
+      // Get the AsyncEventQueue
+      String aeqId = LuceneServiceImpl.getUniqueIndexName(definedIndex.getIndexName(),
+          definedIndex.getRegionPath());
+      AsyncEventQueueImpl aeq = (AsyncEventQueueImpl) cache.getAsyncEventQueue(aeqId);
+      // Stop and remove the AsyncEventQueue if it exists
+      if (aeq != null) {
+        aeq.stop();
+        this.cache.removeAsyncEventQueue(aeq);
+      }
+    }
+  }
+
+  public List<LuceneIndexCreationProfile> getDefinedIndexes(String regionPath) {
+    List<LuceneIndexCreationProfile> profiles = new ArrayList();
+    for (LuceneIndexCreationProfile profile : getAllDefinedIndexes()) {
+      if (profile.getRegionPath().equals(regionPath)) {
+        profiles.add(profile);
+      }
+    }
+    return Collections.unmodifiableList(profiles);
+  }
+
-      RegionListener listenerToRemove = null;
-      for (RegionListener listener : cache.getRegionListeners()) {
-        if (listener instanceof LuceneRegionListener) {
-          LuceneRegionListener lrl = (LuceneRegionListener) listener;
-          if (lrl.getRegionPath().equals(regionPath) && lrl.getIndexName().equals(indexName)) {
-            listenerToRemove = lrl;
-            break;
-          }
-        }
-      }
+      RegionListener listenerToRemove = getRegionListener(indexName, regionPath);
+  protected RegionListener getRegionListener(String indexName, String regionPath) {
+    if (!regionPath.startsWith("/")) {
+      regionPath = "/" + regionPath;
+    }
+    RegionListener rl = null;
+    for (RegionListener listener : cache.getRegionListeners()) {
+      if (listener instanceof LuceneRegionListener) {
+        LuceneRegionListener lrl = (LuceneRegionListener) listener;
+        if (lrl.getRegionPath().equals(regionPath) && lrl.getIndexName().equals(indexName)) {
+          rl = lrl;
+          break;
+        }
+      }
+    }
+    return rl;
+  }
+

INS26 INS40 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS44 MOV8 INS43 INS42 INS60 INS70 INS43 INS43 INS43 INS42 INS60 INS70 INS41 INS42 INS43 INS42 INS43 INS42 INS25 INS41 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS74 INS59 INS44 INS32 INS8 INS32 INS8 INS42 INS42 INS38 INS8 INS43 INS42 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS60 INS25 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS25 INS42 INS42 INS42 MOV21 INS60 MOV25 MOV21 INS32 INS21 INS42 UPD42 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS42 INS32 INS8 MOV43 INS59 INS42 INS42 INS45 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS33 INS21 INS21 INS42 INS32 INS42 INS42 INS21 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS32 INS43 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS52 INS42 UPD42 DEL42 DEL78