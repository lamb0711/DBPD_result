GEODE-2828: AEQ created before the Lucene user regions

	* AEQ is being created before the Lucene user region
	* A countdown latch prevents the index repository computation until the user regions are ready
	* Integration tests do not use a Dummy executor because we need a thread pool for afterPrimary call.

	This closes #481

+import org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueImpl;
+  private LuceneIndexImpl luceneIndex;
+
+      luceneIndex = this.service.beforeDataRegionCreated(this.indexName, this.regionPath, attrs,
+          this.analyzer, this.fieldAnalyzers, aeqId, this.fields);
+
-      this.service.afterDataRegionCreated(this.indexName, this.analyzer, this.regionPath,
-          this.fieldAnalyzers, this.fields);
+      this.service.afterDataRegionCreated(this.luceneIndex);
+      String aeqId = LuceneServiceImpl.getUniqueIndexName(this.indexName, this.regionPath);
+      AsyncEventQueueImpl aeq = (AsyncEventQueueImpl) cache.getAsyncEventQueue(aeqId);
+      AbstractPartitionedRepositoryManager repositoryManager =
+          (AbstractPartitionedRepositoryManager) luceneIndex.getRepositoryManager();
+      repositoryManager.allowRepositoryComputation();

INS26 INS40 INS23 INS83 INS43 INS59 INS42 INS42 INS21 INS21 INS60 INS60 INS60 INS21 INS7 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS42 INS32 MOV22 MOV42 MOV22 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS42 INS22 INS42 INS22 INS22 INS42 INS22 MOV22 INS42 MOV22 UPD42 INS42 INS42 MOV22 MOV22 INS43 INS32 INS43 INS32 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL32 DEL21