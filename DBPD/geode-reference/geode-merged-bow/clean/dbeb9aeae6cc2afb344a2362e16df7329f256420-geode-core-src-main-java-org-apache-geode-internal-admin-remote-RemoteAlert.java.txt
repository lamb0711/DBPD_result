Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public RemoteAlert(GemFireVM manager, int level, Date date, 
-                     String connectionName, String threadName, long tid, 
-                     String msg, String exceptionText, 
-                     InternalDistributedMember sender) {
+  public RemoteAlert(GemFireVM manager, int level, Date date, String connectionName,
+      String threadName, long tid, String msg, String exceptionText,
+      InternalDistributedMember sender) {
-    
+
-  
+
+
+
+
+
+
-   * Returns a InternalDistributedMember instance representing a member that is
-   * sending (or has sent) this alert. Could be <code>null</code>.
+   * Returns a InternalDistributedMember instance representing a member that is sending (or has
+   * sent) this alert. Could be <code>null</code>.
-   * @return the InternalDistributedMember instance representing a member that
-   *         is sending/has sent this alert
-   *         
+   * @return the InternalDistributedMember instance representing a member that is sending/has sent
+   *         this alert
+   * 
-   * Converts the String return by an invocation of {@link #toString}
-   * into an <code>Alert</code>.
+   * Converts the String return by an invocation of {@link #toString} into an <code>Alert</code>.
-      throw new IllegalArgumentException(LocalizedStrings.RemoteAlert_INVALIDATE_TIMESTAMP_0.toLocalizedString(sb.toString()));
+      throw new IllegalArgumentException(
+          LocalizedStrings.RemoteAlert_INVALIDATE_TIMESTAMP_0.toLocalizedString(sb.toString()));
-        public int getLevel() {
-          return level;
-        }
+      public int getLevel() {
+        return level;
+      }
-        public GemFireVM getGemFireVM() {
-          return null;
-        }
+      public GemFireVM getGemFireVM() {
+        return null;
+      }
-        public String getConnectionName() {
-          return connectionName;
-        }
+      public String getConnectionName() {
+        return connectionName;
+      }
-        public String getSourceId() {
-          return sourceId;
-        }
+      public String getSourceId() {
+        return sourceId;
+      }
-        public String getMessage() {
-          return message;
-        }
+      public String getMessage() {
+        return message;
+      }
-        public Date getDate() {
-          return date;
-        }
+      public Date getDate() {
+        return date;
+      }
-        public InternalDistributedMember getSender() {
-          /* Not implemented, currently this is used only for testing purpose */
-          return null;
-        }
-      };
+      public InternalDistributedMember getSender() {
+        /* Not implemented, currently this is used only for testing purpose */
+        return null;
+      }
+    };
-      
+
-    } catch (java.io.IOException ignore) {}
+    } catch (java.io.IOException ignore) {
+    }

UPD66 UPD66 UPD66 UPD66 UPD66