Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import com.gemstone.gemfire.internal.Sendable;
+import com.gemstone.gemfire.internal.offheap.StoredObject;
-      object = ((CachedDeserializable) obj).getSerializedValue();
+      if (obj instanceof StoredObject) {
+        StoredObject so = (StoredObject)obj;
+        if (logger.isTraceEnabled(LogMarker.SERIALIZER)) {
+          logger.trace(LogMarker.SERIALIZER, "writeObjectAsByteArray StoredObject");
+        }
+        so.sendAsByteArray(out);
+        return;
+      } else {
+        object = ((CachedDeserializable) obj).getSerializedValue();
+      }
-    } else {
+    }/*else if (obj instanceof Sendable) {
+      ((Sendable)obj).sendTo(out); 
+    } */ 
+    else {
-  public static void writeHashMap(HashMap<?,?> map, DataOutput out)
+  public static void writeHashMap(Map<?,?> map, DataOutput out)

INS26 INS26 INS40 INS40 UPD74 INS8 UPD43 INS25 UPD42 INS62 INS8 MOV8 INS42 INS43 INS60 INS25 INS21 INS41 INS42 INS43 INS59 INS32 INS8 INS32 INS42 INS42 INS11 INS42 INS42 INS40 INS21 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS42 INS42 INS40 INS45