Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

+  
+  protected void checkRedisPort(int value) {
+    minMaxCheck(REDIS_PORT_NAME, value, 0, 65535);
+  }
+  protected void checkRedisBindAddress(String value) {
+    _checkIfModifiable(REDIS_BIND_ADDRESS_NAME);
+    if (value != null && value.length() > 0 &&
+        !SocketCreator.isLocalHost(value)) {
+      throw new IllegalArgumentException(
+          LocalizedStrings.AbstractDistributionConfig_REDIS_BIND_ADDRESS_0_INVALID_MUST_BE_IN_1
+          .toLocalizedString(new Object[]{value, SocketCreator.getMyAddresses()
+          }));
+    }
+  }
+  public boolean isRedisBindAddressModifiable() {
+    return _modifiableDefault();
+  }
+  public boolean isRedisPortModifiable() {
+    return _modifiableDefault();
+  }
+
+  public boolean isOffHeapMemorySizeModifiable() {
+    return _modifiableDefault();
+  }
+  
+  protected void checkOffHeapMemorySize(String value) {
+    _checkIfModifiable(OFF_HEAP_MEMORY_SIZE_NAME);
+  }
+  
+  public boolean isLockMemoryModifiable() {
+    return _modifiableDefault();
+  }
+  
+  public boolean isDistributedTransactionsModifiable() {
+    return _modifiableDefault();
+  }
+  
+  protected void checkLockMemory(final boolean value) {
+    _checkIfModifiable(LOCK_MEMORY_NAME);
+  }
+    
+      REDIS_PORT_NAME,
+      REDIS_BIND_ADDRESS_NAME,
-      HTTP_SERVICE_SSL_KEYSTORE_NAME,HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME,HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME,HTTP_SERVICE_SSL_TRUSTSTORE_NAME,HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME
+      HTTP_SERVICE_SSL_KEYSTORE_NAME,HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME,HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME,HTTP_SERVICE_SSL_TRUSTSTORE_NAME,HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME,
+      OFF_HEAP_MEMORY_SIZE_NAME, 
+      LOCK_MEMORY_NAME,
+      DISTRIBUTED_TRANSACTIONS_NAME
+    } else if (attName.equalsIgnoreCase(REDIS_PORT_NAME)) {
+      this.setRedisPort(((Integer)attValue).intValue());
+    } else if (attName.equalsIgnoreCase(REDIS_BIND_ADDRESS_NAME)) {
+      this.setRedisBindAddress((String)attValue);
+    } else if (attName.equalsIgnoreCase(OFF_HEAP_MEMORY_SIZE_NAME)) {
+      this.setOffHeapMemorySize((String)attValue);
+    } else if (attName.equalsIgnoreCase(LOCK_MEMORY_NAME)) {
+      this.setLockMemory((Boolean)attValue);
+    } else if (attName.equalsIgnoreCase(DISTRIBUTED_TRANSACTIONS_NAME)) {
+      this.setDistributedTransactions(((Boolean)attValue).booleanValue());
+    } else if (attName.equalsIgnoreCase(REDIS_PORT_NAME)) {
+      return this.getRedisPort();
+    } else if (attName.equalsIgnoreCase(REDIS_BIND_ADDRESS_NAME)) {
+      return this.getRedisBindAddress();
+    } else if (attName.equalsIgnoreCase(OFF_HEAP_MEMORY_SIZE_NAME)) {
+      return this.getOffHeapMemorySize();
+    } else if (attName.equalsIgnoreCase(LOCK_MEMORY_NAME)) {
+      return this.getLockMemory();
+    } else if (attName.equalsIgnoreCase(DISTRIBUTED_TRANSACTIONS_NAME)) {
+      return this.getDistributedTransactions();
+    } else if (attName.equalsIgnoreCase(REDIS_PORT_NAME)) {
+      return this.isRedisPortModifiable();
+    } else if (attName.equalsIgnoreCase(REDIS_BIND_ADDRESS_NAME)) {
+      return this.isRedisBindAddressModifiable();
+    } else if (attName.equalsIgnoreCase(OFF_HEAP_MEMORY_SIZE_NAME)) {
+      return this.isOffHeapMemorySizeModifiable();
-    } else {
+    } else if (attName.equalsIgnoreCase(LOCK_MEMORY_NAME)) {
+      return this.isLockMemoryModifiable();
+    } else if (attName.equals(DISTRIBUTED_TRANSACTIONS_NAME)) {
+      return this.isDistributedTransactionsModifiable();
+    }else {
-    } else if (attName.equalsIgnoreCase(USER_COMMAND_PACKAGES)) {
+    } else if (attName.equalsIgnoreCase(REDIS_PORT_NAME)) {
+      return Integer.class;
+    } else if (attName.equalsIgnoreCase(REDIS_BIND_ADDRESS_NAME)) {
+      return String.class;
+    }else if (attName.equalsIgnoreCase(USER_COMMAND_PACKAGES)) {
-    } else {
+    } else if (attName.equalsIgnoreCase(OFF_HEAP_MEMORY_SIZE_NAME)) {
+      return String.class;
+    } else if (attName.equalsIgnoreCase(LOCK_MEMORY_NAME)) {
+      return Boolean.class;
+    } else if (attName.equalsIgnoreCase(DISTRIBUTED_TRANSACTIONS_NAME)) {
+      return Boolean.class;
+    } 
+    else {
-
+    m.put(REDIS_PORT_NAME, "The port GemFireRedisServer will listen on. Default is 0. Set to zero to disable GemFireRedisServer.");
+    m.put(REDIS_BIND_ADDRESS_NAME, "The address the GemFireRedisServer will listen on for remote connections. Default is \"\" which causes the GemFireRedisServer to listen on the host's default address. This property is ignored if redis-port is \"0\".");
+    m.put(OFF_HEAP_MEMORY_SIZE_NAME, LocalizedStrings.AbstractDistributionConfig_OFF_HEAP_MEMORY_SIZE_0.toLocalizedString(DEFAULT_OFF_HEAP_MEMORY_SIZE));
+    m.put(LOCK_MEMORY_NAME, LocalizedStrings.AbstractDistributionConfig_LOCK_MEMORY.toLocalizedString(DEFAULT_LOCK_MEMORY));
+    m.put(DISTRIBUTED_TRANSACTIONS_NAME, "Flag to indicate whether all transactions including JTA should be distributed transactions.  Default is false, meaning colocated transactions.");

INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS39 INS42 INS21 INS43 INS42 INS21 INS25 INS41 INS41 INS41 INS43 INS42 INS21 INS41 INS41 INS83 INS39 INS42 INS21 MOV25 INS21 INS21 INS21 INS21 INS21 INS32 INS42 INS32 INS27 INS8 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS32 MOV5 MOV32 MOV8 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS34 INS34 INS42 INS42 INS27 INS38 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 MOV8 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS27 INS27 INS32 INS14 MOV5 MOV32 MOV8 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS33 INS32 INS34 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 MOV32 MOV8 INS42 INS42 INS42 INS40 INS42 INS3 MOV32 MOV8 INS5 INS4 MOV32 MOV8 INS43 INS85 INS42 INS32 MOV32 MOV8 INS42 INS42 INS42 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS25 MOV32 MOV8 MOV25 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 MOV25 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 INS25 MOV32 MOV8 MOV25 MOV32 MOV27 MOV32 MOV32 MOV8 MOV32 MOV8 MOV32 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 INS25 MOV32 MOV8 INS25 INS25 INS32 INS8 MOV25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 INS42 INS42 INS42 INS41 INS32 INS8 INS32 INS8 MOV25 MOV32 MOV8 INS25 INS32 INS8 MOV25 INS32 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS41 INS32 INS8 INS32 MOV8 INS25 INS42 INS42 INS42 INS21 INS32 INS8 INS52 INS42 INS32 INS32 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS32 MOV8 INS25 INS32 INS42 INS42 INS42 INS21 INS52 INS42 INS52 INS42 INS32 INS25 INS42 INS42 INS42 MOV32 MOV8 INS25 INS52 INS42 INS32 INS32 INS52 INS42 INS32 INS8 MOV25 MOV32 MOV8 INS25 INS36 INS42 INS52 INS42 INS11 INS42 INS42 INS42 INS41 MOV32 MOV8 INS25 INS11 INS43 INS42 INS32 MOV32 MOV8 INS25 INS43 INS42 INS42 INS52 INS42 MOV32 MOV8 INS25 INS42 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 INS25 MOV32 MOV8 MOV25 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 INS8 INS41 MOV32 MOV8 INS57 MOV32 MOV8 INS43 MOV32 MOV8 INS42 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS25 MOV32 MOV8 INS32 INS8 INS25 MOV32 INS8 INS25 INS42 INS42 INS42 INS41 INS32 INS8 INS25 INS25 INS41 MOV32 MOV8 INS32 INS8 INS25 INS32 INS42 INS42 INS42 INS41 INS32 INS8 MOV8 INS32 INS8 INS25 INS57 INS32 INS8 INS42 INS42 INS42 INS21 INS32 INS8 INS25 INS52 INS42 INS32 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS41 INS32 INS8 MOV8 INS43 INS42 INS42 INS42 INS41 INS32 INS8 INS32 INS42 INS42 INS42 INS21 INS32 INS8 MOV8 INS52 INS42 INS32 INS32 INS42 INS42 INS42 INS41 INS42 INS57 INS42 INS42 INS42 INS41 INS32 INS8 INS52 INS42 INS11 INS32 INS42 INS42 INS42 INS21 INS52 INS42 INS52 INS42 INS32 INS43 INS57 INS42 INS42 INS42 INS41 INS43 INS42 INS52 INS42 INS11 INS32 INS52 INS42 INS42 INS43 INS57 INS42 INS43 INS42 INS52 INS42 INS32 INS42 INS43 INS42 INS36 INS42 INS42 INS11 INS43 INS42 INS42 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25