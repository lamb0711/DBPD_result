GEODE-4009: add jdbc connection pooling (#1213)

* The HikariCP datasource implementation is used for connection pooling.
* removed prepared statement caching
* close is now called for all connections, statements, and result sets.
* renamed ConnectionManager to DataSourceManager
* renamed JdbcConnectorService to JdbcConnectorServiceImpl
* renamed InternalJdbcConnectorService to JdbcConnectorService

-import org.apache.geode.connectors.jdbc.internal.InternalJdbcConnectorService;
+import org.apache.geode.connectors.jdbc.internal.JdbcConnectorService;
-  RegionMapping[] getFunctionResult(InternalJdbcConnectorService service,
-      FunctionContext<Void> context) {
+  RegionMapping[] getFunctionResult(JdbcConnectorService service, FunctionContext<Void> context) {
-  RegionMapping[] getRegionMappingsAsArray(InternalJdbcConnectorService service) {
+  RegionMapping[] getRegionMappingsAsArray(JdbcConnectorService service) {
-  private Set<RegionMapping> getRegionMappings(InternalJdbcConnectorService service) {
+  private Set<RegionMapping> getRegionMappings(JdbcConnectorService service) {

UPD40 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42