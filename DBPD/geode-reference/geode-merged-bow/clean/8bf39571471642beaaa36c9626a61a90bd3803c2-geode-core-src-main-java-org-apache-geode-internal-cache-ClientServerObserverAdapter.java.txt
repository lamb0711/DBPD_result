Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class provides 'do-nothing' implementations of all of the methods of
- * interface ClientServerObserver. See the documentation for class
- * ClientServerObserverHolder for details.
+ * This class provides 'do-nothing' implementations of all of the methods of interface
+ * ClientServerObserver. See the documentation for class ClientServerObserverHolder for details.
-public class ClientServerObserverAdapter implements ClientServerObserver
-{
+public class ClientServerObserverAdapter implements ClientServerObserver {
-  public void afterPrimaryIdentificationFromBackup(ServerLocation primaryEndpoint)
-  {
-  }
+  public void afterPrimaryIdentificationFromBackup(ServerLocation primaryEndpoint) {}
-  public void beforeInterestRegistration()
-  {
-  }
+  public void beforeInterestRegistration() {}
-  public void afterInterestRegistration()
-  {
-  }
+  public void afterInterestRegistration() {}
-  public void beforePrimaryIdentificationFromBackup()
-  {
-  }
+  public void beforePrimaryIdentificationFromBackup() {}
-  public void beforeInterestRecovery()
-  {
+  public void beforeInterestRecovery() {
-  public void beforeFailoverByCacheClientUpdater(ServerLocation epFailed)
-  {
-  }
+  public void beforeFailoverByCacheClientUpdater(ServerLocation epFailed) {}
+
-  public void beforeSendingToServer(EventID eventId){
-    
+  public void beforeSendingToServer(EventID eventId) {
+
+
-   * Invoked after sending an instantiator message to server 
+   * Invoked after sending an instantiator message to server
-  public void afterReceivingFromServer(EventID eventId){
-    
+  public void afterReceivingFromServer(EventID eventId) {
+
-  
+
-  public void beforeSendingClientAck(){
-    
-  }  
+  public void beforeSendingClientAck() {
+
+  }
-  public void afterMessageCreation(Message msg){
-  
+  public void afterMessageCreation(Message msg) {
+
-  
+
-  public void afterQueueDestroyMessage(){
-    
+  public void afterQueueDestroyMessage() {
+
-  
+
-   * Invoked after a primary is recovered from a backup or new connection. 
+   * Invoked after a primary is recovered from a backup or new connection.
-  public void afterPrimaryRecovered(ServerLocation location) {
-  }
+  public void afterPrimaryRecovered(ServerLocation location) {}

UPD66 UPD66 UPD66 UPD66 DEL66