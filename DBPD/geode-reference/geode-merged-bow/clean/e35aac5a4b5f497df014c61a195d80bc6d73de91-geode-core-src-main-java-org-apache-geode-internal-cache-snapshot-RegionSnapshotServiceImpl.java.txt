Merge branch 'release/1.5.0'

-import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.internal.InternalEntity;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.cache.InternalRegion;
+import org.apache.geode.internal.cache.execute.InternalFunction;
-    GFSnapshotImporter in = new GFSnapshotImporter(snapshot);
+    GFSnapshotImporter in = new GFSnapshotImporter(snapshot, local.getCache().getPdxRegistry());
-            val = (V) CachedDeserializableFactory.create(record.getValue());
+            val = (V) CachedDeserializableFactory.create(record.getValue(), local.getCache());
-            Future<?> f = GemFireCacheImpl.getExisting("Importing region from snapshot")
-                .getDistributionManager().getWaitingThreadPool().submit((Runnable) () -> local
-                    .basicImportPutAll(copy, !options.shouldInvokeCallbacks()));
+            Future<?> f = local.getCache().getDistributionManager().getWaitingThreadPool().submit(
+                (Runnable) () -> local.basicImportPutAll(copy, !options.shouldInvokeCallbacks()));
-    Exporter<K, V> exp = createExporter(region, options);
+    Exporter<K, V> exp = createExporter(local.getCache(), region, options);
-    SnapshotWriter writer = GFSnapshot.create(snapshot, region.getFullPath());
+    SnapshotWriter writer =
+        GFSnapshot.create(snapshot, region.getFullPath(), (InternalCache) region.getCache());
-  static <K, V> Exporter<K, V> createExporter(Region<?, ?> region, SnapshotOptions<K, V> options) {
+  static <K, V> Exporter<K, V> createExporter(InternalCache cache, Region<?, ?> region,
+      SnapshotOptions<K, V> options) {
-    } else if (InternalDistributedSystem.getAnyInstance().isLoner()
+    } else if (cache.getInternalDistributedSystem().isLoner()
-  private static class ParallelExportFunction<K, V> implements Function {
+  private static class ParallelExportFunction<K, V> implements InternalFunction {
-  private static class ParallelImportFunction<K, V> implements Function {
+  private static class ParallelImportFunction<K, V> implements Function, InternalEntity {

MOV26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS44 UPD43 INS43 INS43 INS42 UPD42 INS42 MOV43 INS42 MOV43 INS32 INS32 INS11 INS32 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS42 UPD42 UPD42 DEL45