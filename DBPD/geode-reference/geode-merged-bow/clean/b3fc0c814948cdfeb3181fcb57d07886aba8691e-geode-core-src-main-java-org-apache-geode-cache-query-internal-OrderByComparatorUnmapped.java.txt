GEODE-2587: Refactored the OrderByComparator's compare method

	* This prevents creation of extra data structures like arrays of arrays
	* Hence let number of GC, faster execution of queries with ORDER BY

	This closes #517

+import org.apache.geode.cache.query.QueryService;
+import org.apache.geode.pdx.internal.PdxString;
+  public int evaluateSortCriteria(Object obj1, Object obj2) {
+    int result = -1;
+    Object[] list1 = this.evaluateSortCriteria(obj1);
+    Object[] list2 = this.evaluateSortCriteria(obj2);
+
+    if (list1.length != list2.length) {
+      Support.assertionFailed("Error Occurred due to improper sort criteria evaluation ");
+    } else {
+      for (int i = 0; i < list1.length; i++) {
+        Object arr1[] = (Object[]) list1[i];
+        Object arr2[] = (Object[]) list2[i];
+        // check for null.
+        if (arr1[0] == null || arr2[0] == null) {
+          if (arr1[0] == null) {
+            result = (arr2[0] == null ? 0 : -1);
+          } else {
+            result = 1;
+          }
+        } else if (arr1[0] == QueryService.UNDEFINED || arr2[0] == QueryService.UNDEFINED) {
+          if (arr1[0] == QueryService.UNDEFINED) {
+            result = (arr2[0] == QueryService.UNDEFINED ? 0 : -1);
+          } else {
+            result = 1;
+          }
+        } else {
+          if (arr1[0] instanceof Number && arr2[0] instanceof Number) {
+            double diff = ((Number) arr1[0]).doubleValue() - ((Number) arr2[0]).doubleValue();
+            result = diff > 0 ? 1 : diff < 0 ? -1 : 0;
+          } else {
+            if (arr1[0] instanceof PdxString && arr2[0] instanceof String) {
+              arr2[0] = new PdxString((String) arr2[0]);
+            } else if (arr2[0] instanceof PdxString && arr1[0] instanceof String) {
+              arr1[0] = new PdxString((String) arr1[0]);
+            }
+            result = ((Comparable) arr1[0]).compareTo(arr2[0]);
+          }
+
+        }
+
+        // equals.
+        if (result == 0) {
+          continue;
+        } else {
+          // not equal, change the sign based on the order by type (asc,
+          // desc).
+          if (((Boolean) arr1[1]).booleanValue()) {
+            result = (result * -1);
+          }
+          break;
+        }
+      }
+    }
+    return result;
+  }
+
+
+
+  @Override

INS26 INS26 INS40 INS40 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS60 INS25 INS41 INS42 INS42 INS39 INS59 INS5 INS59 INS5 INS59 INS27 INS8 INS8 INS42 INS42 INS38 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS32 INS40 INS40 INS21 INS24 INS34 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS32 INS58 INS27 INS37 INS8 INS42 INS42 INS45 INS39 INS59 INS42 INS40 INS42 INS60 INS60 INS25 INS25 INS42 INS34 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS27 INS8 INS8 INS42 INS42 INS85 INS11 INS42 INS42 INS85 INS11 INS27 INS27 INS25 INS27 INS8 INS8 INS42 INS34 INS18 INS25 INS10 INS5 INS2 INS5 INS2 INS2 INS33 INS2 INS33 INS27 INS8 INS8 INS27 INS27 INS25 INS25 INS32 INS8 INS43 INS85 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS34 INS42 INS34 INS2 INS33 INS21 INS21 INS2 INS40 INS2 INS40 INS27 INS8 INS8 INS27 INS8 INS8 INS36 INS42 INS21 INS42 INS42 INS42 INS34 INS7 INS7 INS42 INS34 INS42 INS34 INS2 INS40 INS21 INS21 INS62 INS62 INS60 INS21 INS25 INS21 INS11 INS7 INS42 INS36 INS42 INS34 INS42 INS34 INS7 INS7 INS2 INS43 INS2 INS43 INS39 INS59 INS7 INS27 INS8 INS25 INS7 INS43 INS2 INS42 INS36 INS16 INS42 INS36 INS42 INS34 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS27 INS42 INS16 INS62 INS62 INS21 INS27 INS8 INS42 INS32 INS42 INS42 INS34 INS27 INS27 INS34 INS38 INS16 INS32 INS32 INS27 INS34 INS16 INS2 INS43 INS2 INS43 INS7 INS62 INS62 INS21 INS36 INS42 INS2 INS42 INS38 INS2 INS33 INS34 INS27 INS34 INS38 INS36 INS42 INS36 INS42 INS42 INS34 INS27 INS38 INS34 INS42 INS34 INS42 INS42 INS34 INS42 INS2 INS14 INS2 INS43 INS2 INS43 INS7 INS11 INS42 INS34 INS34 INS42 INS34 INS2 INS40 INS34 INS11 INS11 INS42 INS34 INS34 INS42 INS34 INS43 INS11 INS42 INS34 INS42 INS42 INS34 INS42 INS2 INS14 INS43 INS2 INS42 INS34 INS43 INS2 INS43 INS2 INS42 INS43 INS2 INS42 INS34 INS43 INS11 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS43 INS2 INS42 INS42 INS34