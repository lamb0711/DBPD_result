Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A dummy implementation of the {@code AccessControl} interface that
- * allows authorization depending on the format of the {@code Principal}
- * string.
+ * A dummy implementation of the {@code AccessControl} interface that allows authorization depending
+ * on the format of the {@code Principal} string.
-  public static final OperationCode[] READER_OPS = {
-      OperationCode.GET,
-      OperationCode.QUERY,
-      OperationCode.EXECUTE_CQ,
-      OperationCode.CLOSE_CQ,
-      OperationCode.STOP_CQ,
-      OperationCode.REGISTER_INTEREST,
-      OperationCode.UNREGISTER_INTEREST,
-      OperationCode.KEY_SET,
-      OperationCode.CONTAINS_KEY,
-      OperationCode.EXECUTE_FUNCTION };
+  public static final OperationCode[] READER_OPS =
+      {OperationCode.GET, OperationCode.QUERY, OperationCode.EXECUTE_CQ, OperationCode.CLOSE_CQ,
+          OperationCode.STOP_CQ, OperationCode.REGISTER_INTEREST, OperationCode.UNREGISTER_INTEREST,
+          OperationCode.KEY_SET, OperationCode.CONTAINS_KEY, OperationCode.EXECUTE_FUNCTION};
-  public static final OperationCode[] WRITER_OPS = {
-      OperationCode.PUT,
-      OperationCode.PUTALL,
-      OperationCode.DESTROY,
-      OperationCode.INVALIDATE,
-      OperationCode.REGION_CLEAR };
+  public static final OperationCode[] WRITER_OPS = {OperationCode.PUT, OperationCode.PUTALL,
+      OperationCode.DESTROY, OperationCode.INVALIDATE, OperationCode.REGION_CLEAR};
-  public void init(final Principal principal, final DistributedMember remoteMember, final Cache cache) throws NotAuthorizedException {
+  public void init(final Principal principal, final DistributedMember remoteMember,
+      final Cache cache) throws NotAuthorizedException {
-    this.securityLogWriter.fine("Invoked authorize operation for [" + opCode + "] in region [" + regionName + "] for client: " + remoteMember);
+    this.securityLogWriter.fine("Invoked authorize operation for [" + opCode + "] in region ["
+        + regionName + "] for client: " + remoteMember);

UPD66 UPD66 UPD66