GEODE-4902: Refactor LogMarker class and usage (#1678)

* GEODE-4902: Refactor LogMarker and usage
* Distinguish those markers at the TRACE and DEBUG levels (now Markers named *_VERBOSE) from those that log at a coarser grainularity (now Markers named *_MARKER)
* Suppress only *_VERBOSE markers by default, from previous behavior of suppressing all markers.
* Refactor some pathological log checks, e.g., change a log from debug to trace when it is gated behind ifTraceEnabled block.
* Remove unused Markers.
* Remove any log marker logic from AdminWaiters exception message generation.  Exceptions now always include a full message.
* Remove marker-gated print to System.out in PersistentOplogSet -- direct calls to System.out should not exist in that class.
* Add marker EVENT_ID_TO_STRING_VERBOSE to explicitly distinguish instance of marker used in logic not immediately consumed by a logger.  The consumption of EventId::toString should only exist at logging in any event.
**
* Remove nearby dead code and dead code detected during marker removal.
* Expand wildcard imports in touched files.
* Remove TODO comments, at least one of which was a decade old.
* Collapse nearby, redundant catch blocks
* Remove empty finally blocks
* Update documentation page to refer to GEODE_VERBOSE, from deprecated GEMFIRE_VERBOSE
* The change in log marker names causes one class to compile larger.  Updated sanctionedDataSerializables.

-    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST)) {
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "VersionedObjectList.addKeyAndVersion({}; {})",
-          key, versionTag);
+    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE)) {
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE,
+          "VersionedObjectList.addKeyAndVersion({}; {})", key, versionTag);
-    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST)) {
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "addPart({}; {}; {}; {}", key, value,
+    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE)) {
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "addPart({}; {}; {}; {}", key, value,
-   *
-   * @param key
-   * @param value
-   * @param versionTag
-    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST)) {
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "VOL.addAll(other={}; this={}", other, this);
+    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE)) {
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "VOL.addAll(other={}; this={}", other,
+          this);
-    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST)) {
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST,
+    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE)) {
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE,
-    final boolean isDebugEnabled_VOL = logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST);
+    final boolean isDebugEnabled_VOL =
+        logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE);
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST,
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE,
-        logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "reading {} keys", size);
+        logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "reading {} keys", size);
-        logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "reading {} objects", size);
+        logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "reading {} objects", size);
-        logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "reading {} version tags", size);
+        logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "reading {} version tags", size);
-    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST)) {
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "writing object {} of type {}: {}", index,
-          objectType, value);
+    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE)) {
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "writing object {} of type {}: {}",
+          index, objectType, value);
-    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST)) {
-      logger.trace(LogMarker.VERSIONED_OBJECT_LIST, "reading object {} of type {}", index,
+    if (logger.isTraceEnabled(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE)) {
+      logger.trace(LogMarker.VERSIONED_OBJECT_LIST_VERBOSE, "reading object {} of type {}", index,

UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65