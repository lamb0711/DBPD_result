GEODE-4559: pass the Cache to a Declarable (#1422)

* Declarable now has a default method named "initialize(Cache, Properties)".
This allows a Declarable to know the cache that created it.
Deprecated Declarable.init(Properties).
Note that for backwards compatibility, the product calls
both these methods. Also the two Declarables that the product
implements, AutoBalancer and ReflectionBasedAutoSerializer,
implement both these methods but after the first calls subsequent
calls of init or initialize will be noops.

* initialize on ReflectionBasedAutoSerializer now call setRegionService with the cache.
init and initialize can now be called multiple times and each time the properties will
be set again. This is for backwards compatibility.

* The AutoBalancer no longer looks up the static cache.
but instead of given one by the product calling setCache
during initialization.


+import org.apache.geode.cache.CacheXmlException;
+  private final List<DeclarableAndProperties> declarablePropertiesList = new ArrayList<>();
+
+  private static class DeclarableAndProperties {
+    private final Declarable declarable;
+    private final Properties properties;
+
+    public DeclarableAndProperties(Declarable d, Properties p) {
+      declarable = d;
+      properties = p;
+    }
+
+    public Declarable getDeclarable() {
+      return declarable;
+    }
+
+    public Properties getProperties() {
+      return properties;
+    }
+  }
+
+    initializeDeclarablesMap(cache);
+
+    if (hasFunctionService()) {
+      getFunctionServiceCreation().create();
+    }
+
-    cache.addDeclarableProperties(this.declarablePropertiesMap);
-    runInitializer();
+
+    runInitializer(cache);
+  public void initializeDeclarablesMap(InternalCache cache) {
+    for (DeclarableAndProperties struct : this.declarablePropertiesList) {
+      Declarable declarable = struct.getDeclarable();
+      Properties properties = struct.getProperties();
+      try {
+        declarable.initialize(cache, properties);
+        declarable.init(properties); // for backwards compatibility
+      } catch (Exception ex) {
+        throw new CacheXmlException(
+            "Exception while initializing an instance of " + declarable.getClass().getName(), ex);
+      }
+      this.declarablePropertiesMap.put(declarable, properties);
+    }
+    cache.addDeclarableProperties(this.declarablePropertiesMap);
+  }
+
-    this.declarablePropertiesMap.put(declarable, properties);
+    this.declarablePropertiesList.add(new DeclarableAndProperties(declarable, properties));
+  private volatile boolean hasFunctionService = false;
+
+  boolean hasFunctionService() {
+    return this.hasFunctionService;
+  }
+
+    this.hasFunctionService = true;
+  public FunctionServiceCreation getFunctionServiceCreation() {
+    return this.functionServiceCreation;
+  }
+
-  void runInitializer() {
-    if (getInitializer() != null) {
-      getInitializer().init(getInitializerProps());
+  void runInitializer(InternalCache cache) {
+    Declarable initializer = getInitializer();
+    if (initializer != null) {
+      initializer.initialize(cache, getInitializerProps());
+      initializer.init(getInitializerProps()); // for backwards compatibility

INS26 INS40 INS23 INS55 INS31 INS23 INS31 INS31 INS83 INS83 INS74 INS59 INS83 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS59 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS44 INS43 INS43 INS42 INS14 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS21 INS25 INS43 INS42 INS70 MOV21 INS21 INS42 INS9 INS41 INS21 INS42 INS41 INS43 INS42 INS60 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS42 INS41 INS42 INS41 INS32 INS32 INS8 INS42 INS44 INS22 INS8 INS32 INS22 INS7 INS22 INS42 INS43 INS59 INS43 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS43 INS42 INS52 INS42 INS60 INS60 INS54 MOV21 INS22 INS42 INS14 INS52 INS42 INS22 INS9 INS52 INS42 INS42 INS42 MOV32 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS43 INS59 INS8 INS12 INS52 INS42 INS43 INS42 INS42 INS52 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS21 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS27 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS42 DEL42 DEL32