GEODE-3967: There're following 9 problems fixed here:
1) When ConcurrentCacheModificationException happened, GatewaySenderEventImpl
 should save the status and notify gatewaysender if it hold primary queue,
because other member might have put the event into the secondary queue.
2) In AbstractUpdateOperation's doPutOrCreate's 3 tries of basicUpdate, the
3rd try should allow both create and update.
3) Let event with CME not to dispatch. The old logic does not allow CME event
to  enqueue. This is wrong, because an event without CME might have been
added into the secondary queue. So we should enqueue it, but not to dispatch.
4) Let UPDATE_VERSION_STAMP not to enqueue if not primary queue, because
the event did not fire in pair.
5) AbstractGatewaySenderEventProcessor put loop of filter in wrong place,
which caused UPDATE_VERSION_STAMP and CME events are not ignored.
However, not to fix it for now. Leave it in GEODE-4659.
6) shouldSendVersionEvents for Remote sender should return true, since
we no longer support 7.0.1 any more.
7) change version to 150
8) CME event should not retry in AUO.doPutOrCreate, because retry will end up with CME too.
9) CME && !originRemote: only enqueue to primary

This closes #1317

+import org.apache.geode.internal.VersionedDataSerializable;
-public class GatewaySenderEventImpl
-    implements AsyncEvent, DataSerializableFixedID, Conflatable, Sizeable, Releasable {
+public class GatewaySenderEventImpl implements AsyncEvent, DataSerializableFixedID, Conflatable,
+    Sizeable, Releasable, VersionedDataSerializable {
+  private transient boolean isConcurrencyConflict = false;
+
+    this.isConcurrencyConflict = event.isConcurrencyConflict();
+  @Override
+    toDataPre_GEODE_1_5_0_0(out);
+    DataSerializer.writeBoolean(this.isConcurrencyConflict, out);
+  }
+
+  public void toDataPre_GEODE_1_5_0_0(DataOutput out) throws IOException {
+  @Override
+    fromDataPre_GEODE_1_5_0_0(in);
+    this.isConcurrencyConflict = DataSerializer.readBoolean(in);
+  }
+
+  public void fromDataPre_GEODE_1_5_0_0(DataInput in) throws IOException, ClassNotFoundException {
-        .append(";bucketId=").append(this.bucketId).append("]");
+        .append(";bucketId=").append(this.bucketId).append(";isConcurrencyConflict=")
+        .append(this.isConcurrencyConflict).append("]");
+  public boolean isConcurrencyConflict() {
+    return isConcurrencyConflict;
+  }
+
+  public boolean setConcurrencyConflict(boolean isConcurrencyConflict) {
+    return this.isConcurrencyConflict = isConcurrencyConflict;
+  }
+
-    // TODO Auto-generated method stub
-    return null;
+    return new Version[] {Version.GEODE_150};

INS26 INS40 INS43 INS23 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS39 INS59 INS78 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 UPD42 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS9 INS21 INS42 INS43 INS42 INS42 INS21 INS21 INS42 INS43 INS42 INS42 INS42 INS21 INS21 INS41 INS39 INS42 INS41 INS7 INS42 INS32 INS32 INS42 INS32 INS7 INS32 INS42 INS7 INS3 INS22 INS32 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS22 INS32 INS32 INS42 INS45 INS22 INS42 INS5 INS4 INS52 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 MOV32 INS42 INS22 INS52 INS42 INS43 INS85 INS40 UPD45 INS52 INS42 INS42 DEL33