Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.Set;
-   * all Regions created. The mapping is a {@link String} key which is the name of the {@link
-   * Region} created to hold the data to the RedisDataType it contains.
+   * all Regions created. The mapping is a {@link String} key which is the name of the
+   * {@link Region} created to hold the data to the RedisDataType it contains.
-  private final Region<ByteArrayWrapper, Map<ByteArrayWrapper, ByteArrayWrapper>> hashRegion;
-  private final Region<ByteArrayWrapper, Set<ByteArrayWrapper>> setRegion;
-
-      ScheduledExecutorService expirationExecutor, RegionShortcut defaultShortcut,
-      Region<ByteArrayWrapper, Map<ByteArrayWrapper, ByteArrayWrapper>> hashRegion,
-      Region<ByteArrayWrapper, Set<ByteArrayWrapper>> setRegion) {
-
-    this(stringsRegion, hLLRegion, redisMetaRegion, expirationsMap, expirationExecutor,
-        defaultShortcut, hashRegion, setRegion, GemFireCacheImpl.getInstance());
-  }
-
-  public RegionProvider(Region<ByteArrayWrapper, ByteArrayWrapper> stringsRegion,
-      Region<ByteArrayWrapper, HyperLogLogPlus> hLLRegion,
-      KeyRegistrar redisMetaRegion,
-      ConcurrentMap<ByteArrayWrapper, ScheduledFuture<?>> expirationsMap,
-      ScheduledExecutorService expirationExecutor, RegionShortcut defaultShortcut,
-      Region<ByteArrayWrapper, Map<ByteArrayWrapper, ByteArrayWrapper>> hashRegion,
-      Region<ByteArrayWrapper, Set<ByteArrayWrapper>> setRegion, Cache cache) {
-    if (stringsRegion == null || hLLRegion == null || redisMetaRegion == null) {
+      ScheduledExecutorService expirationExecutor, RegionShortcut defaultShortcut) {
+    if (stringsRegion == null || hLLRegion == null || redisMetaRegion == null)
-    }
-    this.hashRegion = hashRegion;
-    this.setRegion = setRegion;
-    this.cache = cache;
+    this.cache = GemFireCacheImpl.getInstance();
-    if (key == null) {
-      return null;
-    }
-
-
-      if (lock != null) {
-        locked = lock.tryLock();
-      }
+      locked = lock.tryLock();
-    if (type == RedisDataType.REDIS_PROTECTED) {
+    if (type == null || type == RedisDataType.REDIS_PROTECTED)
-    }
-        } else if (type == RedisDataType.REDIS_LIST) {
-          return this.destroyRegion(key, type);
-        } else if (type == RedisDataType.REDIS_SET) {
-          // remove the set
-          this.setRegion.remove(key);
-          return true;
-        } else if (type == RedisDataType.REDIS_HASH) {
-          // Check hash
-          this.hashRegion.remove(key);
-          return true;
-          return false;
+          return destroyRegion(key, type);
-        if (cancelExpiration) {
+        if (cancelExpiration)
-        } else {
+        else
-        }
-        if (lock != null) {
+        if (lock != null)
-        }
-    if (type == null || type == RedisDataType.REDIS_STRING || type == RedisDataType.REDIS_HLL) {
+    if (type == null || type == RedisDataType.REDIS_STRING || type == RedisDataType.REDIS_HLL)
-    }
-    if (r != null) {
+    if (r != null)
-    }
-          if (r == null) {
+          if (r == null)
-          }
-
-    String regionName = key.toString();
-          // without context
+                                                                                // without context
-
-              r = createRegionGlobally(regionName);
-
+              r = createRegionGlobally(stringKey);
-            if (hasTransaction) {
+            if (hasTransaction)
-            }
-  @SuppressWarnings("rawtypes")
-    if (r != null) {
+    if (r != null)
-    }
-  /**
-   * @return the hashRegion
-   */
-  public Region<ByteArrayWrapper, Map<ByteArrayWrapper, ByteArrayWrapper>> getHashRegion() {
-    return hashRegion;
-  }
-
-  /**
-   * @return the setRegion
-   */
-  public Region<ByteArrayWrapper, Set<ByteArrayWrapper>> getSetRegion() {
-    return setRegion;
-  }
-
-    if (type == null) {
+    if (type == null)
-    }
-    if (!canceled) {
+    if (!canceled)
-    }
-    if (type == null) {
+    if (type == null)
-    }
-    if (future == null) {
+    if (future == null)
-    }

MOV8 MOV60 MOV60 INS54 INS25 MOV25 UPD66 MOV53 MOV8 MOV8 INS27 MOV41 INS41 INS41 MOV41 MOV27 MOV41 MOV41 MOV41 MOV41 MOV32 INS25 INS27 MOV27 INS42 INS8 MOV8 INS42 INS33 MOV8 INS21 MOV21 MOV25 INS25 INS32 MOV32 MOV25 MOV21 MOV21 MOV27 MOV21 INS42 INS42 UPD42 MOV42 MOV27 MOV8 INS41 MOV8 INS25 INS42 MOV21 UPD42 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL17 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL8 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL25 DEL54 DEL8 DEL8 DEL42 DEL40 DEL27 DEL52 DEL42 DEL40 DEL27 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL9 DEL41 DEL8 DEL42 DEL40 DEL27 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL9 DEL41 DEL8 DEL9 DEL41 DEL8 DEL25 DEL25 DEL25 DEL8 DEL8 DEL25 DEL8 DEL41 DEL8 DEL41 DEL8 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL25 DEL8 DEL42 DEL45 DEL79 DEL8 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL41 DEL8 DEL31 DEL8 DEL8 DEL8 DEL25 DEL8