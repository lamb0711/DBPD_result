Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class represents the data given for binding an overflow mechanism to a
- * client subscription. It encapsulates eviction policy, capacity and overflowDirectory.
- * This object will get created for every <b>client-subscription</b> tag
+ * This class represents the data given for binding an overflow mechanism to a client subscription.
+ * It encapsulates eviction policy, capacity and overflowDirectory. This object will get created for
+ * every <b>client-subscription</b> tag
-  
+
-  
+
-  
-  public int getCapacity(){
-    return this.haQueueCapacity ;
-  }
-  
-  public void setCapacity(int capacity){
-    this.haQueueCapacity = capacity;
-  }
- 
-  public String getEvictionPolicy(){
-    return this.haEvictionPolicy ;
+
+  public int getCapacity() {
+    return this.haQueueCapacity;
-  public void setEvictionPolicy(String policy){
+  public void setCapacity(int capacity) {
+    this.haQueueCapacity = capacity;
+  }
+
+  public String getEvictionPolicy() {
+    return this.haEvictionPolicy;
+  }
+
+  public void setEvictionPolicy(String policy) {
-  public String getOverflowDirectory(){
+  public String getOverflowDirectory() {
-      throw new IllegalStateException(LocalizedStrings.DiskStore_Deprecated_API_0_Cannot_Mix_With_DiskStore_1
-          .toLocalizedString(new Object[] {"getOverflowDirectory", this.getDiskStoreName()}));
+      throw new IllegalStateException(
+          LocalizedStrings.DiskStore_Deprecated_API_0_Cannot_Mix_With_DiskStore_1
+              .toLocalizedString(new Object[] {"getOverflowDirectory", this.getDiskStoreName()}));
-  public void setOverflowDirectory(String overflowDirectory){
+  public void setOverflowDirectory(String overflowDirectory) {
-      throw new IllegalStateException(LocalizedStrings.DiskStore_Deprecated_API_0_Cannot_Mix_With_DiskStore_1
-          .toLocalizedString(new Object[] {"setOverflowDirectory", this.getDiskStoreName()}));
+      throw new IllegalStateException(
+          LocalizedStrings.DiskStore_Deprecated_API_0_Cannot_Mix_With_DiskStore_1
+              .toLocalizedString(new Object[] {"setOverflowDirectory", this.getDiskStoreName()}));
-  
+
-  
+
-      throw new IllegalStateException(LocalizedStrings.DiskStore_Deprecated_API_0_Cannot_Mix_With_DiskStore_1
-          .toLocalizedString(new Object[] {"setDiskStoreName", this.getDiskStoreName()}));
+      throw new IllegalStateException(
+          LocalizedStrings.DiskStore_Deprecated_API_0_Cannot_Mix_With_DiskStore_1
+              .toLocalizedString(new Object[] {"setDiskStoreName", this.getDiskStoreName()}));
-  public boolean hasOverflowDirectory()
-  {
+
+  public boolean hasOverflowDirectory() {
-  private void setHasOverflowDirectory(boolean hasOverflowDirectory)
-  {
+
+  private void setHasOverflowDirectory(boolean hasOverflowDirectory) {

UPD66 UPD66 UPD66