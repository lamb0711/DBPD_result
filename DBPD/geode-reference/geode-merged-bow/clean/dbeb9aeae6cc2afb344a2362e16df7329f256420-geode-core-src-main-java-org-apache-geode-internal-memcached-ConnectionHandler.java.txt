Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * One instance of ConnectionHandle is created for each
- * client that connects to {@link GemFireMemcachedServer}
- * and is responsible for reading requests and sending
- * responses to this client.
+ * One instance of ConnectionHandle is created for each client that connects to
+ * {@link GemFireMemcachedServer} and is responsible for reading requests and sending responses to
+ * this client.
-  
+
-  
+
-  
+
-  
+
-    while(!Thread.currentThread().isInterrupted()) {
+    while (!Thread.currentThread().isInterrupted()) {
-          logger.fine("processing command:"+command);
+          logger.fine("processing command:" + command);
-        ByteBuffer reply = command.getCommandProcessor().processCommand(
-            request, this.protocol, cache);
+        ByteBuffer reply =
+            command.getCommandProcessor().processCommand(request, this.protocol, cache);
-    logger.fine("Connection handler "+Thread.currentThread().getName()+" terminating");
+    logger.fine("Connection handler " + Thread.currentThread().getName() + " terminating");

UPD66 UPD66 UPD66 DEL66