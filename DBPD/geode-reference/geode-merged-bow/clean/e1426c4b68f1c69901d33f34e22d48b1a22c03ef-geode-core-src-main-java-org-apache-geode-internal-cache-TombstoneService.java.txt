GEODE-1703: Add constants for defaults to TombstoneService

+import static org.apache.geode.distributed.internal.DistributionConfig.GEMFIRE_PREFIX;
+
+import org.apache.geode.annotations.VisibleForTesting;
-import org.apache.geode.distributed.internal.DistributionConfig;
+  @VisibleForTesting
+  public static final long REPLICATE_TOMBSTONE_TIMEOUT_DEFAULT =
+      Long.getLong(GEMFIRE_PREFIX + "tombstone-timeout", 600000L);
+
-  public static long REPLICATE_TOMBSTONE_TIMEOUT =
-      Long.getLong(DistributionConfig.GEMFIRE_PREFIX + "tombstone-timeout", 600000L);
+  public static long REPLICATE_TOMBSTONE_TIMEOUT = REPLICATE_TOMBSTONE_TIMEOUT_DEFAULT;
+
+  @VisibleForTesting
+  public static final long NON_REPLICATE_TOMBSTONE_TIMEOUT_DEFAULT =
+      Long.getLong(GEMFIRE_PREFIX + "non-replicated-tombstone-timeout", 480000);
-  public static long NON_REPLICATE_TOMBSTONE_TIMEOUT =
-      Long.getLong(DistributionConfig.GEMFIRE_PREFIX + "non-replicated-tombstone-timeout", 480000);
+  public static long NON_REPLICATE_TOMBSTONE_TIMEOUT = NON_REPLICATE_TOMBSTONE_TIMEOUT_DEFAULT;
+
+  @VisibleForTesting
+  public static final int EXPIRED_TOMBSTONE_LIMIT_DEFAULT =
+      Integer.getInteger(GEMFIRE_PREFIX + "tombstone-gc-threshold", 100000);
-  public static int EXPIRED_TOMBSTONE_LIMIT =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "tombstone-gc-threshold", 100000);
+  public static int EXPIRED_TOMBSTONE_LIMIT = EXPIRED_TOMBSTONE_LIMIT_DEFAULT;
+
+  @VisibleForTesting
+  public static final long DEFUNCT_TOMBSTONE_SCAN_INTERVAL_DEFAULT =
+      Long.getLong(GEMFIRE_PREFIX + "tombstone-scan-interval", 60000);
-      Long.getLong(DistributionConfig.GEMFIRE_PREFIX + "tombstone-scan-interval", 60000);
+      DEFUNCT_TOMBSTONE_SCAN_INTERVAL_DEFAULT;
+
+  @VisibleForTesting
+  public static final double GC_MEMORY_THRESHOLD_DEFAULT =
+      Integer.getInteger(GEMFIRE_PREFIX + "tombstone-gc-memory-threshold", 30) * 0.01;
-  public static double GC_MEMORY_THRESHOLD =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "tombstone-gc-memory-threshold",
-          30 /* 100-HeapLRUCapacityController.DEFAULT_HEAP_PERCENTAGE */) * 0.01;
+  public static double GC_MEMORY_THRESHOLD = GC_MEMORY_THRESHOLD_DEFAULT;
+
+  @VisibleForTesting
+  public static final boolean FORCE_GC_MEMORY_EVENTS_DEFAULT = false;
-  public static boolean FORCE_GC_MEMORY_EVENTS = false;
+  public static boolean FORCE_GC_MEMORY_EVENTS = FORCE_GC_MEMORY_EVENTS_DEFAULT;
+
+  @VisibleForTesting
+  public static final long MAX_SLEEP_TIME_DEFAULT = 10000;
+
-  public static long MAX_SLEEP_TIME = 10000;
+  public static long MAX_SLEEP_TIME = MAX_SLEEP_TIME_DEFAULT;
+  @VisibleForTesting
+  public static final boolean IDLE_EXPIRATION_DEFAULT = false;
+
+  /** dunit test hook for forced batch expiration */
-  public static boolean IDLE_EXPIRATION = false; // dunit test hook for forced batch
-                                                 // expiration
+  public static boolean IDLE_EXPIRATION = IDLE_EXPIRATION_DEFAULT;

MOV26 INS26 UPD40 INS40 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS78 INS83 INS83 INS83 INS39 INS59 INS78 INS83 INS83 INS83 INS39 INS59 INS78 INS83 MOV29 MOV78 INS83 INS83 INS39 INS59 INS78 MOV29 INS83 INS83 INS83 INS39 INS59 INS78 INS83 MOV29 MOV78 INS83 INS83 INS39 INS59 INS78 INS83 MOV29 MOV78 INS83 INS83 INS39 INS59 INS78 INS83 MOV29 MOV78 INS83 INS83 INS39 INS59 INS78 INS83 INS29 MOV78 INS83 INS83 INS39 INS59 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 INS65 INS42 INS42 INS42 INS42 INS27 INS34 INS42 INS42 INS27 INS34 INS66 INS42 INS45 INS42 INS45 INS42 INS42 INS42 DEL42 DEL42 DEL40 DEL45 DEL27 DEL34 DEL32 DEL42 DEL42 DEL40 DEL45 DEL27 DEL34 DEL32 DEL40 DEL40 DEL40