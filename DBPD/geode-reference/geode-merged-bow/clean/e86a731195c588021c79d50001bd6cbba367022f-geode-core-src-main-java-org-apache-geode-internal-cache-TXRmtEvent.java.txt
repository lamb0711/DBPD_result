Merge branch 'release/1.3.0'

-  public List getCreateEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isCreate() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
-  public List getPutEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isUpdate() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
-
-  public List getInvalidateEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isInvalidate() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
-
-  public List getDestroyEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isDestroy() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }

DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL40 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL40 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL40 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL40 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31