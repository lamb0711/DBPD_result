Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This program is used to measure the amount of time it takes to
- * connect and re-connect to a {@link DistributedSystem}.
+ * This program is used to measure the amount of time it takes to connect and re-connect to a
+ * {@link DistributedSystem}.
-    err.println("usage: java DistributedSystemConnectPerf " +
-                "[options] port iterations");
+    err.println("usage: java DistributedSystemConnectPerf " + "[options] port iterations");
-    err.println("  iterations    Number of times to " +
-                "connect/disconnect");
+    err.println("  iterations    Number of times to " + "connect/disconnect");
-    err.println("  -wait time    Time (in milliseconds) connection " +
-                "is open");
+    err.println("  -wait time    Time (in milliseconds) connection " + "is open");
-    err.println("This program measures the amount of time it takes " +
-                "to connect/disconnect to a DistributedSystem");
+    err.println("This program measures the amount of time it takes "
+        + "to connect/disconnect to a DistributedSystem");
-    props.setProperty(LOCATORS,
-                      "localhost[" + port + "]");
+    props.setProperty(LOCATORS, "localhost[" + port + "]");
-      out.println("** Connected to DistributedSystem " +
-                                 "(took " + delta + " ms)");
+      out.println("** Connected to DistributedSystem " + "(took " + delta + " ms)");
-      out.println("** Disconnected from DistributedSystem " +
-                  "(took " + delta + " ms)");
+      out.println("** Disconnected from DistributedSystem " + "(took " + delta + " ms)");
-    out.println("** Average connect time took: " +
-                (totalConnect / iterations) + " ms");
-    out.println("** Average disconnect time took: " +
-                (totalDisconnect / iterations) + " ms");
+    out.println("** Average connect time took: " + (totalConnect / iterations) + " ms");
+    out.println("** Average disconnect time took: " + (totalDisconnect / iterations) + " ms");

UPD66 DEL66