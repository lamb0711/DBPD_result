Merge branch 'develop' into feature/GEODE-9

-    
+
+  void buildMessageForAdjunctReceivers(LocalRegion r, TXCommitMessage msg) {
+    try {
+      if (!r.getScope().isLocal() && !this.entryMods.isEmpty()) {
+        
+        msg.startRegion(r, entryMods.size());
+        Iterator it = this.entryMods.entrySet().iterator();
+        Set<InternalDistributedMember> newMemberSet = new HashSet<InternalDistributedMember>();
+        
+        while (it.hasNext()) {
+          Map.Entry me = (Map.Entry)it.next();
+          Object eKey = me.getKey();
+          TXEntryState txes = (TXEntryState)me.getValue();
+          txes.buildMessage(r, eKey, msg,this.otherMembers);
+          if(txes.getFilterRoutingInfo()!=null) {
+            newMemberSet.addAll(txes.getFilterRoutingInfo().getMembers());
+          }
+          if(txes.getAdjunctRecipients()!=null) {
+            
+            Set adjunctRecipients = txes.getAdjunctRecipients();
+            newMemberSet.addAll(adjunctRecipients);  
+          }
+        }
+        
+        
+        if (!newMemberSet.equals(this.otherMembers)) 
+        { 
+          // r.getCache().getLogger().info("DEBUG: participants list has changed! bug 32999."); 
+          // Flag the message that the lock manager needs to be updated with the new member set
+          msg.setUpdateLockMembers();
+          this.otherMembers = newMemberSet;
+        }
+        
+        msg.finishRegion(this.otherMembers);
+      }
+    }
+    catch (RegionDestroyedException ex) {
+      // region was destroyed out from under us; after conflict checking
+      // passed. So act as if the region destroy happened right after the
+      // commit. We act this way by doing nothing; including distribution
+      // of this region's commit data.
+    }
+    catch (CancelException ex) {
+      // cache was closed out from under us; after conflict checking
+      // passed. So do nothing.
+    }
+  }
+
+  

INS31 INS39 INS42 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS54 INS42 INS42 INS8 INS12 INS12 INS25 INS44 INS8 INS44 INS8 INS27 INS8 INS43 INS42 INS43 INS42 INS38 INS38 INS21 INS60 INS60 INS61 INS25 INS21 INS42 INS42 INS32 INS32 INS32 INS43 INS59 INS74 INS59 INS32 INS8 INS38 INS8 INS32 INS32 INS42 INS22 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS60 INS60 INS60 INS21 INS25 INS25 INS32 INS21 INS21 INS42 INS42 INS22 INS42 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS74 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS27 INS8 INS27 INS8 INS42 INS42 INS22 INS32 INS7 INS52 INS42 INS22 INS42 INS43 INS43 INS40 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS22 INS32 INS33 INS21 INS32 INS33 INS60 INS21 INS52 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS32 INS52 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS32 INS52 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42