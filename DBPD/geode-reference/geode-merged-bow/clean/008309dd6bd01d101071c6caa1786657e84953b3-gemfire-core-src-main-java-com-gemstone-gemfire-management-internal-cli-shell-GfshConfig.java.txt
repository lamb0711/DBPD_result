Merge branch 'release/1.0.0-incubating.M1'

- * =========================================================================
- *  Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- *  This product is protected by U.S. and international copyright
- *  and intellectual property laws. Pivotal products are covered by
- *  more patents listed at http://www.pivotal.io/patents.
- * ========================================================================
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+  public  static final String INIT_FILE_PROPERTY            = "gfsh.init-file";
-
+  public  static final String DEFAULT_INIT_FILE_NAME 	= ".gfsh2rc";	
-
+  private String initFileName;
-    this(HISTORY_FILE.getAbsolutePath(), DEFAULT_PROMPT, MAX_HISTORY_SIZE, null, null, null, null);
+    this(HISTORY_FILE.getAbsolutePath(), DEFAULT_PROMPT, MAX_HISTORY_SIZE, null, null, null, null, null);
-      Integer logCount) {
+      Integer logCount, String initFileName) {
+    if (initFileName == null) {
+      this.initFileName = this.searchForInitFileName();
+    } else {
+      this.initFileName = initFileName;
+    }
+
+  public String getInitFileName() {
+    return initFileName;
+  }
+
+    builder.append(
+        "init-file=" + (getInitFileName() == null ? "" : getInitFileName()))
+        .append(Gfsh.LINE_SEPARATOR);
-    builder.append(" [historyFileName=");
+    builder.append(" [initFileName=");
+    builder.append(getInitFileName() == null ? "" : getInitFileName());
+    builder.append(", historyFileName=");
-}
+  /*
+   * Search for the init file using the system property, then the current
+   * directory, then the home directory. It need not exist at all.
+   */
+  private String searchForInitFileName() {
+    String homeDirectoryInitFileName = System.getProperty("user.home")
+        + File.separatorChar + DEFAULT_INIT_FILE_NAME;
+    String currentDirectoryInitFileName = System.getProperty("user.dir")
+        + File.separatorChar + DEFAULT_INIT_FILE_NAME;
+    String systemPropertyInitFileName = System.getProperty(INIT_FILE_PROPERTY);
+
+    String[] initFileNames = { systemPropertyInitFileName,
+        currentDirectoryInitFileName, homeDirectoryInitFileName };
+
+    for (String initFileName : initFileNames) {
+      if (IOUtils.isExistingPathname(initFileName)) {
+        return initFileName;
+      }
+    }
+
+    return null;
+  }
+}

INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS44 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS43 INS42 INS25 INS42 INS41 INS21 INS21 INS21 INS42 INS60 INS60 INS60 INS60 INS70 INS41 INS33 INS42 INS27 INS8 INS8 INS42 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS5 INS59 INS44 INS42 INS8 INS33 INS42 INS33 INS21 INS21 INS32 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS16 UPD45 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS32 INS43 INS85 INS42 INS4 INS43 INS42 INS25 INS7 INS7 INS42 INS42 INS27 INS27 INS45 INS32 INS32 INS40 INS42 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS22 INS32 INS22 INS42 INS45 INS36 INS32 INS33 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS41 INS52 INS42 INS52 INS42 INS52 INS42 INS16 INS42 INS42 INS27 INS45 INS32 INS32 INS33 INS42 INS42