GEODE-4945: InternalGfshCommand should not have to implement CommandMâ€¦ (#1684)

* Correct class scanning for user gfsh commands

+import java.util.Arrays;
-import java.util.StringTokenizer;
+    List<String> userCommandSources = new ArrayList<>();
-      StringTokenizer tokenizer =
-          new StringTokenizer(System.getProperty(USER_CMD_PACKAGES_PROPERTY), ",");
-      while (tokenizer.hasMoreTokens()) {
-        userCommandPackages.add(tokenizer.nextToken());
-      }
+      userCommandSources.add(System.getProperty(USER_CMD_PACKAGES_PROPERTY));
-      StringTokenizer tokenizer =
-          new StringTokenizer(System.getenv().get(USER_CMD_PACKAGES_ENV_VARIABLE), ",");
-      while (tokenizer.hasMoreTokens()) {
-        userCommandPackages.add(tokenizer.nextToken());
-      }
+      userCommandSources.add(System.getenv().get(USER_CMD_PACKAGES_ENV_VARIABLE));
-        StringTokenizer tokenizer = new StringTokenizer(cacheUserCmdPackages, ",");
-        while (tokenizer.hasMoreTokens()) {
-          userCommandPackages.add(tokenizer.nextToken());
-        }
+        userCommandSources.add(cacheUserCmdPackages);
+    for (String source : userCommandSources) {
+      Arrays.stream(source.split(",")).forEach(userCommandPackages::add);
+    }
+
-        Set<Class<?>> foundClasses = ClasspathScanLoadHelper
-            .scanPackageForClassesImplementing(userCommandPackage, CommandMarker.class);
+        Set<Class<?>> foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(
+            CommandMarker.class, userCommandPackage, GfshCommand.class.getPackage().getName());
-      foundClasses = ClasspathScanLoadHelper.scanPackageForClassesImplementing(
-          "org.apache.geode.management.internal.cli.converters", Converter.class);
+      foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(Converter.class,
+          "org.apache.geode.management.internal.cli.converters");
-      foundClasses = ClasspathScanLoadHelper.scanPackageForClassesImplementing(
-          "org.springframework.shell.converters", Converter.class);
+      foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(Converter.class,
+          "org.springframework.shell.converters");
-      foundClasses = ClasspathScanLoadHelper.scanPackageForClassesImplementing(
-          InternalGfshCommand.class.getPackage().getName(), CommandMarker.class);
+      foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(CommandMarker.class,
+          GfshCommand.class.getPackage().getName(),
+          InternalGfshCommand.class.getPackage().getName());

MOV26 UPD40 MOV60 INS25 INS70 INS74 MOV27 INS8 INS8 INS44 INS42 INS8 INS43 INS43 UPD42 INS21 MOV21 INS43 INS42 MOV21 INS42 UPD42 MOV42 INS74 INS32 INS8 INS42 INS32 INS43 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV32 MOV21 INS32 INS42 INS90 MOV45 MOV45 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS42 UPD42 UPD42 UPD42 INS32 UPD42 UPD42 MOV42 UPD42 UPD42 INS45 MOV42 INS32 INS42 UPD42 INS32 INS57 INS42 INS32 INS42 INS43 INS57 INS42 INS42 INS43 INS42 DEL43 DEL43 DEL45 DEL32 DEL8 DEL61 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL8 DEL61 DEL8 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL8 DEL61 DEL8 DEL32