Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

-  private final HashMap<String, LuceneIndex> indexMap = new HashMap<String, LuceneIndex>();;
+  private final HashMap<String, LuceneIndex> indexMap = new HashMap<String, LuceneIndex>();
+  private final HashMap<String, LuceneIndexCreationProfile> definedIndexMap = new HashMap<>();
+
+    registerDefinedIndex(LuceneServiceImpl.getUniqueIndexName(indexName, regionPath),
+                                new LuceneIndexCreationProfile(indexName, regionPath, fields, analyzer, fieldAnalyzers));
+
+      definedIndexMap.remove(LuceneServiceImpl.getUniqueIndexName(indexName, regionPath));
+
+
+          if (!attrs.getDataPolicy().withPartitioning()) {
+            // replicated region
+            throw new UnsupportedOperationException("Lucene indexes on replicated regions are not supported");
+          }
+
+          //For now we cannot support eviction with local destroy.
+          //Eviction with overflow to disk still needs to be supported
+          EvictionAttributes evictionAttributes = attrs.getEvictionAttributes();
+          EvictionAlgorithm evictionAlgorithm = evictionAttributes.getAlgorithm();
+          if (evictionAlgorithm != EvictionAlgorithm.NONE && evictionAttributes.getAction().isLocalDestroy()) {
+            throw new UnsupportedOperationException("Lucene indexes on regions with eviction and action local destroy are not supported");
+          }
+
-    
-  
+
+
-    
-    LuceneIndexImpl index = null;
+    return new LuceneIndexForPartitionedRegion(indexName, regionPath, cache);
+  }
-    //For now we cannot support eviction with local destroy.
-    //Eviction with overflow to disk still needs to be supported
-    EvictionAttributes evictionAttributes = dataregion.getAttributes().getEvictionAttributes();
-    EvictionAlgorithm evictionAlgorithm = evictionAttributes.getAlgorithm();
-    if (evictionAlgorithm != EvictionAlgorithm.NONE && evictionAttributes.getAction().isLocalDestroy()) {
-      throw new UnsupportedOperationException("Lucene indexes on regions with eviction and action local destroy are not supported");
-    }
-
-    if (dataregion instanceof PartitionedRegion) {
-      // partitioned region
-      index = new LuceneIndexForPartitionedRegion(indexName, regionPath, cache);
-    } else {
-      // replicated region
-      throw new UnsupportedOperationException("Lucene indexes on replicated regions are not supported");
-    }
-    return index;
+  private void registerDefinedIndex(final String regionAndIndex, final LuceneIndexCreationProfile luceneIndexCreationProfile) {
+    if (definedIndexMap.containsKey(regionAndIndex) || indexMap.containsKey(regionAndIndex))
+      throw new IllegalArgumentException("Lucene index already exists in region");
+    definedIndexMap.put(regionAndIndex, luceneIndexCreationProfile);
+    definedIndexMap.remove(regionAndIndex);
+
+  public Collection<LuceneIndexCreationProfile> getAllDefinedIndexes() {
+    return definedIndexMap.values();
+  }
+
+  public LuceneIndexCreationProfile getDefinedIndex(String indexName, String regionPath) {
+    return definedIndexMap.get(getUniqueIndexName(indexName , regionPath));
+  }

INS23 INS31 INS31 INS31 INS83 INS83 INS74 INS59 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS43 INS43 INS43 INS42 INS14 INS21 INS83 INS43 INS42 INS83 INS43 INS42 INS25 INS21 INS21 INS43 INS43 INS41 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS42 INS42 INS74 INS32 MOV14 INS42 INS42 INS27 INS53 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS32 INS14 INS21 INS32 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS25 INS60 MOV60 MOV25 INS38 MOV8 MOV43 INS59 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42