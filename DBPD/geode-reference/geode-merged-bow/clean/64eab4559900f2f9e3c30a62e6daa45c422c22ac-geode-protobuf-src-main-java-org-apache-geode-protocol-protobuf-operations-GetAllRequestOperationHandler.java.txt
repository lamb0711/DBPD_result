GEODE-3213: Refactor ProtoBuf handler flow. This now closes #646

Signed-off-by: Alexander Murmann <amurmann@pivotal.io>

+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+
+import org.apache.geode.protocol.protobuf.Failure;
-import org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities;
+import org.apache.geode.protocol.protobuf.Result;
+import org.apache.geode.protocol.protobuf.Success;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-    implements OperationHandler<ClientProtocol.Request, ClientProtocol.Response> {
-  private static Logger logger = LogManager.getLogger();
+    implements OperationHandler<RegionAPI.GetAllRequest, RegionAPI.GetAllResponse> {
-  public ClientProtocol.Response process(SerializationService serializationService,
-      ClientProtocol.Request request, Cache cache) {
-    if (request.getRequestAPICase() != ClientProtocol.Request.RequestAPICase.GETALLREQUEST) {
-      return ProtobufResponseUtilities
-          .createAndLogErrorResponse("Improperly formatted getAll request message.", logger, null);
-    }
-    RegionAPI.GetAllRequest getAllRequest = request.getGetAllRequest();
-
-    String regionName = getAllRequest.getRegionName();
+  public Result<RegionAPI.GetAllResponse> process(SerializationService serializationService,
+      RegionAPI.GetAllRequest request, Cache cache) {
+    String regionName = request.getRegionName();
-      return ProtobufResponseUtilities.createErrorResponse("Region not found");
+      return Failure
+          .of(ClientProtocol.ErrorResponse.newBuilder().setMessage("Region not found").build());
-      for (BasicTypes.EncodedValue key : getAllRequest.getKeyList()) {
+      for (BasicTypes.EncodedValue key : request.getKeyList()) {
-      Map<Object, Object> results = region.getAll(keys);
+      Map<?, ?> results = region.getAll(keys);
-      for (Map.Entry<Object, Object> entry : results.entrySet()) {
+      for (Map.Entry entry : results.entrySet()) {
-      return ProtobufResponseUtilities.createGetAllResponse(entries);
+      return Success.of(RegionAPI.GetAllResponse.newBuilder().addAllEntries(entries).build());
-      // can be thrown by encoding or decoding.
-      return ProtobufResponseUtilities.createAndLogErrorResponse("Encoding not supported.", logger,
-          ex);
+      return Failure.of(
+          ClientProtocol.ErrorResponse.newBuilder().setMessage("Encoding not supported.").build());
-      return ProtobufResponseUtilities
-          .createAndLogErrorResponse("Codec error in protobuf deserialization.", logger, ex);
+      return Failure.of(ClientProtocol.ErrorResponse.newBuilder()
+          .setMessage("Codec error in protobuf deserialization.").build());

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD74 UPD43 UPD43 INS74 UPD40 UPD40 INS43 INS43 MOV43 INS42 UPD40 MOV40 UPD42 INS32 UPD74 INS42 INS42 INS32 UPD42 INS76 INS76 MOV43 UPD42 INS42 INS32 INS32 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 UPD42 MOV42 MOV45 INS32 UPD42 MOV42 MOV42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS40 UPD42 MOV42 INS40 INS42 INS32 UPD42 MOV42 MOV45 INS32 UPD42 MOV42 MOV45 INS40 UPD42 MOV42 INS40 UPD42 MOV42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL43 DEL40 DEL43 DEL42 DEL42 DEL32 DEL40 DEL27 DEL42 DEL42 DEL45 DEL42 DEL33 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL32 DEL42 DEL32