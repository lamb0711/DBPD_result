GEODE-4559: pass the Cache to a Declarable (#1422)

* Declarable now has a default method named "initialize(Cache, Properties)".
This allows a Declarable to know the cache that created it.
Deprecated Declarable.init(Properties).
Note that for backwards compatibility, the product calls
both these methods. Also the two Declarables that the product
implements, AutoBalancer and ReflectionBasedAutoSerializer,
implement both these methods but after the first calls subsequent
calls of init or initialize will be noops.

* initialize on ReflectionBasedAutoSerializer now call setRegionService with the cache.
init and initialize can now be called multiple times and each time the properties will
be set again. This is for backwards compatibility.

* The AutoBalancer no longer looks up the static cache.
but instead of given one by the product calling setCache
during initialization.


+    Class c;
+    try {
+      c = InternalDataSerializer.getCachedClass(className);
+    } catch (Exception ex) {
+      throw new CacheXmlException("Could not find the class: " + className, ex);
+    }
-      Class c = InternalDataSerializer.getCachedClass(className);
-      throw new CacheXmlException(
-          LocalizedStrings.CacheXmlParser_WHILE_INSTANTIATING_A_0.toLocalizedString(className), ex);
+      throw new CacheXmlException("Could not create an instance of " + className, ex);
-    d.init(props);
-
+    // init call done later in GemFireCacheImpl.addDeclarableProperties
-    fsc.create();
+    this.cache.setFunctionServiceCreation(fsc);

MOV60 INS60 INS54 MOV43 INS59 INS8 MOV8 INS12 INS42 INS21 INS44 INS8 INS22 UPD42 INS42 INS7 INS43 INS42 INS53 INS52 INS42 INS42 MOV32 INS42 INS14 INS27 INS43 INS27 INS42 INS45 INS42 INS42 INS45 INS42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42