new unit tests and code clean-up

New unit tests to increase code coverage.  I also tinkered with
trying to get EclEmma output from DUnit ChildVMs but it seems to
be run in a shutdownHook in parallel with the DUnitLauncher
shutdownHook.

-import com.gemstone.gemfire.DataSerializable;
-import com.gemstone.gemfire.DataSerializer;
-import com.gemstone.gemfire.InternalGemFireError;
-import com.gemstone.gemfire.distributed.DurableClientAttributes;
-import com.gemstone.gemfire.internal.HeapDataOutputStream;
-import com.gemstone.gemfire.internal.Version;
-import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.StringTokenizer;
-import java.io.*;
-import java.util.*;
+import com.gemstone.gemfire.distributed.DurableClientAttributes;
- * The attributes of a distributed member. These attributes are stored as
- * the AdditionalBytes in JGroups' IpAddress.
+ * The attributes of a distributed member.  This is largely deprecated as
+ * GMSMember holds all of this information.
-public class MemberAttributes implements DataSerializable {
-  private static final long serialVersionUID = -3257772958884802693L;
+public class MemberAttributes {
-  /** Constructs new MemberAttributes from DataInput.  */
-  public MemberAttributes(byte[] b) throws IOException, ClassNotFoundException {
-    this.byteInfo = b;
-    DataInputStream in = 
-      new DataInputStream(new ByteArrayInputStream(b));
-    fromData(in);
-  }
-  
-  public MemberAttributes(MemberAttributes other) {
-    this.dcPort = other.dcPort;
-    this.vmPid = other.vmPid;
-    this.vmKind = other.vmKind;
-    this.name = other.name;
-    this.groups = other.groups;
-    this.durableClientAttributes = other.durableClientAttributes;
-  }
-  
-  /** Parses comma-separated-values into array of groups (strings). */
-  public static String[] parseGroups(String csv) {
-    if (csv == null || csv.length() == 0) {
-      return new String[0];
-    }
-    List groups = new ArrayList();
-    StringTokenizer st = new StringTokenizer(csv, ",");
-    while (st.hasMoreTokens()) {
-      String groupName = st.nextToken().trim();
-      // TODO make case insensitive
-      if (!groups.contains(groupName)) { // only add each group once
-        groups.add(groupName);
-      }
-    }
-    return (String[]) groups.toArray(new String[groups.size()]);
-  }
+  
+  
-  /** Writes the contents of this object to the given output. */
-  public void toData(DataOutput out) throws IOException {
-    out.writeInt(this.dcPort);
-    out.writeInt(this.vmPid);
-    out.writeInt(this.vmKind);
-    DataSerializer.writeString(this.name, out);
-    DataSerializer.writeStringArray(this.groups, out);
-    DataSerializer.writeString(this.durableClientAttributes==null ? "" : this.durableClientAttributes.getId(), out);
-    DataSerializer.writeInteger(Integer.valueOf(this.durableClientAttributes==null ? 300 : this.durableClientAttributes.getTimeout()), out);
-  }
-
-  /** Reads the contents of this object from the given input. */
-  public void fromData(DataInput in)
-  throws IOException, ClassNotFoundException {
-    this.dcPort = in.readInt();
-    this.vmPid = in.readInt();
-    this.vmKind = in.readInt();
-    this.name = DataSerializer.readString(in);
-    this.groups = DataSerializer.readStringArray(in);
-    String durableId = DataSerializer.readString(in);
-    int durableTimeout = DataSerializer.readInteger(in).intValue();
-    this.durableClientAttributes = new DurableClientAttributes(durableId, durableTimeout);
-  }
-  
-  private byte[] byteInfo;
-  
-  /** Returns the contents of this objects serialized as a byte array. */
-  public byte[] toByteArray() {
-    if (byteInfo != null) {
-      return byteInfo;
-    }
-    try {
-      HeapDataOutputStream hdos = new HeapDataOutputStream(Version.CURRENT);
-      toData(hdos);
-      byteInfo = hdos.toByteArray();
-      return byteInfo;
-    }
-    catch (IOException e) {
-      throw new InternalGemFireError(LocalizedStrings.MemberAttributes_IOEXCEPTION_ON_A_BYTE_ARRAY_0.toLocalizedString(e));
-    }
-  }
-  
-  public static MemberAttributes fromByteArray(byte[] bytes) {
-    try {
-      return new MemberAttributes(bytes);
-    }
-    catch (IOException e) {
-      throw new InternalGemFireError(LocalizedStrings.MemberAttributes_IOEXCEPTION_ON_A_BYTE_ARRAY_0.toLocalizedString(e));
-    }
-    catch (ClassNotFoundException e) {
-      throw new InternalGemFireError(LocalizedStrings.MemberAttributes_CLASSNOTFOUNDEXCEPTION_IN_DESERIALIZATION_0.toLocalizedString(e));
-    }
-  }
-
-	/**
-	 * Returns a string representation of the object.
-	 * 
-	 * @return a string representation of the object
-	 */
-  @Override
-	public String toString() {
-		final StringBuffer sb = new StringBuffer("[MemberAttributes: ");
-		sb.append("dcPort=").append(this.dcPort);
-		sb.append(", vmPid=").append(this.vmPid);
-		sb.append(", vmKind=").append(this.vmKind);
-		sb.append(", name=").append(this.name);
-		sb.append(", groups=").append("(");
-    for (int i = 0; i < groups.length; i++) {
-      sb.append(groups[i]);
-    }
-    sb.append(")");
-    sb.append(", durableClientAttributes=").append(this.durableClientAttributes);
-    sb.append("]");
-		return sb.toString();
-	}
-

MOV26 UPD40 UPD40 UPD40 UPD66 UPD66 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL38 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL42 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL45 DEL52 DEL42 DEL22 DEL42 DEL32 DEL16 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL34 DEL52 DEL42 DEL22 DEL42 DEL32 DEL16 DEL32 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL42 DEL14 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL85 DEL5 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL39 DEL85 DEL5 DEL42 DEL42 DEL33 DEL27 DEL42 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL45 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL42 DEL2 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31