Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import java.io.Serializable;
+import org.apache.shiro.subject.Subject;
-import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
+import com.gemstone.gemfire.internal.security.IntegratedSecurityService;
+import com.gemstone.gemfire.internal.security.SecurityService;
-/***
- * 
- * since 7.0
+/**
+ * @since GemFire 7.0
-
+  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+
-    return get(key, keyClass, valueClass, regionName, loadOnCacheMiss);
+    return get(request.getPrincipal(), key, keyClass, valueClass, regionName, loadOnCacheMiss);
-    return select(query);
+    return select(request.getPrincipal(), query);
-  private DataCommandResult select(String queryString) {
+  private DataCommandResult select(Serializable principal, String queryString) {
+            // Post processing
+            object = this.securityService.postProcess(principal, null, null, object, false);
+
-  public DataCommandResult get(String key, String keyClass, String valueClass, String regionName, Boolean loadOnCacheMiss) {
+  public DataCommandResult get(Serializable principal, String key, String keyClass, String valueClass, String regionName, Boolean loadOnCacheMiss) {
+
+        // run it through post processor. region.get will return the deserialized object already, so we don't need to
+        // deserialize it anymore to pass it to the postProcessor
+        value = this.securityService.postProcess(principal, regionName, keyObject, value, false);
+
-      if(JsonUtil.isPrimitiveOrWrapper(klass))
+      if(JsonUtil.isPrimitiveOrWrapper(klass)) {
+      }
+    private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+
-          GeodeSecurityUtil.authorizeRegionRead(region);
+          this.securityService.authorizeRegionRead(region);
+            Subject subject = this.securityService.getSubject();
+            if(subject!=null){
+              request.setPrincipal((Serializable)subject.getPrincipal());
+            }
-
-            // post process, iterate through the result for post processing
-            if(GeodeSecurityUtil.needPostProcess()) {
-              List<SelectResultRow> rows = dataResult.getSelectResult();
-              for (Iterator<SelectResultRow> itr = rows.iterator(); itr.hasNext(); ) {
-                SelectResultRow row = itr.next();
-                Object newValue = GeodeSecurityUtil.postProcess(null, null, row.getValue());
-                // user is not supposed to see this row
-                if (newValue == null) {
-                  itr.remove();
-                } else {
-                  row.setValue(newValue);
-                }
-              }
-            }
-

INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS23 UPD65 INS83 INS43 INS59 INS44 INS44 INS23 UPD66 INS42 INS42 INS32 INS43 INS42 INS43 INS42 INS83 INS43 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS21 MOV21 INS7 INS42 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS9 INS22 MOV60 MOV25 INS21 INS52 INS42 INS52 INS42 UPD43 UPD27 INS7 UPD42 UPD42 UPD42 INS42 INS32 INS22 UPD42 MOV42 INS22 INS42 INS42 INS33 INS33 INS42 INS9 INS52 INS42 UPD42 UPD42 INS11 INS52 INS42 INS43 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL33 DEL33 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL24 DEL8 DEL25