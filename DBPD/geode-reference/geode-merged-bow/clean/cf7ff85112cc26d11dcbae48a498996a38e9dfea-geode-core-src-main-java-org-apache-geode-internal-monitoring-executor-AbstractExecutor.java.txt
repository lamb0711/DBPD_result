GEODE-5142 new Thread Monitoring Mechanism

Fixing an NPE that may occur if a monitored thread disappears during
expiry but before we've reported on its state.

+  public AbstractExecutor(ThreadsMonitoring tMonitoring, long threadID) {
+    this.startTime = System.currentTimeMillis();
+    this.numIterationsStuck = 0;
+    this.threadID = threadID;
+  }
+
+    boolean logThreadDetails = (thread != null);
-        .append(this.numIterationsStuck).append("> ").append(System.lineSeparator())
-        .append("Thread Name <").append(thread.getThreadName()).append(">")
-        .append(System.lineSeparator()).append("Thread state <").append(thread.getThreadState())
-        .append(">").append(System.lineSeparator());
+        .append(this.numIterationsStuck).append("> ").append(System.lineSeparator());
+    if (logThreadDetails) {
+      strb.append("Thread Name <").append(thread.getThreadName()).append(">")
+          .append(System.lineSeparator()).append("Thread state <").append(thread.getThreadState())
+          .append(">").append(System.lineSeparator());
-    if (thread.getLockName() != null)
-      strb.append("Waiting on <").append(thread.getLockName()).append(">")
-          .append(System.lineSeparator());
+      if (thread.getLockName() != null)
+        strb.append("Waiting on <").append(thread.getLockName()).append(">")
+            .append(System.lineSeparator());
-    if (thread.getLockOwnerName() != null)
-      strb.append("Owned By <").append(thread.getLockOwnerName()).append("> and ID <")
-          .append(thread.getLockOwnerId()).append(">").append(System.lineSeparator());
+      if (thread.getLockOwnerName() != null)
+        strb.append("Owned By <").append(thread.getLockOwnerName()).append("> and ID <")
+            .append(thread.getLockOwnerId()).append(">").append(System.lineSeparator());
+    }
+
-        .append(System.lineSeparator()).append("Thread Stack:").append(System.lineSeparator());
+        .append(System.lineSeparator());
-    for (int i = 0; i < thread.getStackTrace().length; i++) {
-      String row = thread.getStackTrace()[i].toString();
-      strb.append(row).append(System.lineSeparator());
+    if (logThreadDetails) {
+      strb.append("Thread Stack:").append(System.lineSeparator());
+      for (int i = 0; i < thread.getStackTrace().length; i++) {
+        String row = thread.getStackTrace()[i].toString();
+        strb.append(row).append(System.lineSeparator());
+      }

INS31 INS83 INS42 INS44 INS44 INS8 INS43 INS42 INS39 INS42 INS21 INS21 INS21 INS60 INS25 INS25 INS42 INS7 INS7 INS7 INS39 INS59 MOV32 INS42 INS8 MOV32 INS42 INS8 INS22 INS32 INS22 INS34 INS22 INS42 INS42 INS36 INS21 MOV25 MOV25 INS21 MOV24 INS52 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS27 INS32 INS32 INS42 INS33 INS32 INS42 MOV32 INS32 INS42 MOV32 INS32 INS42 INS45 INS42 INS42 INS45 INS32 INS42 MOV32 INS32 INS42 INS45 INS32 INS42 MOV32 INS32 INS42 INS45 INS32 INS42 MOV32 INS42 INS42 INS45 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32