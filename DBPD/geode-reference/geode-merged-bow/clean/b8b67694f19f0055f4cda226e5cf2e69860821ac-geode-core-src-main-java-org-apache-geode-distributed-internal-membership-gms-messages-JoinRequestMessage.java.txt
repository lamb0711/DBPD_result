Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.Version;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.Version;
-public class JoinRequestMessage extends HighPriorityDistributionMessage {
-  private InternalDistributedMember memberID;
+public class JoinRequestMessage extends AbstractGMSMessage {
+  private GMSMember memberID;
+  private boolean useMulticast;
-  public JoinRequestMessage(InternalDistributedMember coord, InternalDistributedMember id,
+  public JoinRequestMessage(GMSMember coord, GMSMember id,
-    setRecipient(coord);
+    if (coord != null) {
+      setRecipient(coord);
+    }
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
+  public boolean getMulticast() {
+    return useMulticast;
-  public InternalDistributedMember getMemberID() {
+  @Override
+  public void setMulticast(boolean useMulticast) {
+    this.useMulticast = useMulticast;
+  }
+
+  public GMSMember getMemberID() {
-    return getShortClassName() + "(" + memberID
+    return getClass().getSimpleName() + "(" + memberID
-  public void toData(DataOutput out) throws IOException {
-    DataSerializer.writeObject(memberID, out);
-    DataSerializer.writeObject(credentials, out);
-    DataSerializer.writePrimitiveInt(failureDetectionPort, out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
+    GMSUtil.writeMemberID(memberID, out, context);
+    context.getSerializer().writeObject(credentials, out);
+    out.writeInt(failureDetectionPort);
-    out.writeBoolean(getMulticast());
+    out.writeBoolean(false);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    memberID = DataSerializer.readObject(in);
-    credentials = DataSerializer.readObject(in);
-    failureDetectionPort = DataSerializer.readPrimitiveInt(in);
-    setMulticast(in.readBoolean());
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
+    memberID = GMSUtil.readMemberID(in, context);
+    credentials = context.getDeserializer().readObject(in);
+    failureDetectionPort = in.readInt();
+    // setMulticast(in.readBoolean());
+    in.readBoolean();

UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 INS23 INS31 UPD42 UPD43 INS83 INS39 INS59 MOV78 INS83 INS39 INS42 INS8 INS78 UPD42 UPD43 INS44 INS44 UPD42 INS42 UPD43 UPD43 INS25 INS41 INS42 INS39 INS42 INS21 UPD42 INS43 INS42 INS43 INS42 UPD42 UPD42 INS27 INS8 INS42 INS7 INS42 INS42 MOV32 INS42 INS33 MOV21 INS22 INS42 INS32 UPD42 UPD42 INS42 INS32 UPD42 UPD42 INS9 INS52 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS42 INS32 UPD42 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32