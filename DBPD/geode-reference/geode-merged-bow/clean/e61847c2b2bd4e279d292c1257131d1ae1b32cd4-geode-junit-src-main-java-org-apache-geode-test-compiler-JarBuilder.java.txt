Update javadoc for JarBuilder

- *  &#064;Rule
- *  public TemporaryFolder temporaryFolder= new TemporaryFolder();
+`` *
+ * &#064;Test
+ * public void buildJarUsingStrings() {
+ *   JarBuilder jarBuilder = new JarBuilder();
+ *   File outputJar = new File("output.jar");
- *  &#064;Test
- *  public void buildJarUsingStrings() {
- *  File tempDir = temporaryFolder.getRoot()
- *  JarBuilder jarBuilder = new JarBuilder(tempDir);
- *  File outputJar = new File("output.jar");
+ *   String classInFooBarPackage = &quot;package foo.bar; public class ClassA {int n = 10;}&quot;;
+ *   String classInDefaultPackage = &quot;public class ClassB {}&quot;;
+ *   jarBuilder.buildJar(outputJar, classInFooBarPackage, classInDefaultPackage);
+ * }
- *  String classInFooBarPackage = &quot;package foo.bar; public class ClassA {int n = 10;}&quot;;
- *  String classInDefaultPackage = &quot;public class ClassB {}&quot;;
- *  jarBuilder.buildJar(outputJar, classInFooBarPackage, classInDefaultPackage);
- *     }
+ * &#064;Test
+ * public void buildJarUsingFiles() {
+ *   JarBuilder jarBuilder = new JarBuilder();
+ *   File outputJar = new File("output.jar");
- *  &#064;Test
- *  public void buildJarUsingFiles() {
- *  File tempDir = temporaryFolder.getRoot()
- *  JarBuilder jarBuilder = new JarBuilder(tempDir);
- *  File outputJar = new File("output.jar");
+ *   // The following two files are expected to contain valid Java source code
+ *   File sourceFileOne = new File("ClassA.java");
+ *   File sourceFileTwo = new File("ClassB.java");
+ *   jarBuilder.buildJar(outputJar, sourceFileOne, sourceFileTwo);
+ * }
- *  File sourceFileOne = new File("ClassA.java");
- *  File sourceFileTwo = new File("ClassB.java");
- *  jarBuilder.buildJar(outputJar, sourceFileOne, sourceFileTwo);
- *     }
+ * &#064;Test
+ * public void buildJarUsingClassNames() {
+ *   JarBuilder jarBuilder = new JarBuilder();
+ *   File outputJar = new File("output.jar");
- *  &#064;Test
- *  public void buildJarUsingClassNames() {
- *  File tempDir = temporaryFolder.getRoot()
- *  JarBuilder jarBuilder = new JarBuilder(tempDir);
- *  File outputJar = new File("output.jar");
- *
- *  String classInFooBarPackage = "foo.bar.ClassInFooBarPackage";
- *  String classInDefaultPackage = "ClassInDefaultPackage";
- *  jarBuilder.buildJar(outputJar, classInFooBarPackage, classInDefaultPackage);
- *     }
+ *   String classInFooBarPackage = "foo.bar.ClassInFooBarPackage";
+ *   String classInDefaultPackage = "ClassInDefaultPackage";
+ *   jarBuilder.buildJar(outputJar, classInFooBarPackage, classInDefaultPackage);
+ * }
+  /**
+   * Builds a jar file containing empty classes with the given classNames.
+   */

INS29 UPD66 UPD66 UPD66 INS66 UPD66 INS65 INS66 DEL66 DEL66 DEL66 DEL66