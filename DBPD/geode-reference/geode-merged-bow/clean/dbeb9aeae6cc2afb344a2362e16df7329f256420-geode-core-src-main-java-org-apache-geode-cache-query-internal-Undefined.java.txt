Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An UNDEFINED value is the result of accessing an attribute of a null-valued
- * attribute. If you access an attribute that has an explicit value of null,
- * then it is not undefined. For example, if a query accesses the attribute
- * address.city and address is null, then the result is undefined. If the query
- * accesses address, then the result is not undefined, it is null.
+ * An UNDEFINED value is the result of accessing an attribute of a null-valued attribute. If you
+ * access an attribute that has an explicit value of null, then it is not undefined. For example, if
+ * a query accesses the attribute address.city and address is null, then the result is undefined. If
+ * the query accesses address, then the result is not undefined, it is null.
-    Support.assertState(QueryService.UNDEFINED == null,
-        "UNDEFINED constant already instantiated");
+    Support.assertState(QueryService.UNDEFINED == null, "UNDEFINED constant already instantiated");
-  public void toData(DataOutput out) throws IOException {
-  }
+  public void toData(DataOutput out) throws IOException {}
-    @Override
-    public Version[] getSerializationVersions() {
-       return null;
-    }
+  @Override
+  public Version[] getSerializationVersions() {
+    return null;
+  }

UPD66 UPD66 UPD66 UPD66 DEL66