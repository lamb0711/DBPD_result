Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Implements GemFireLogger with custom levels while also bridging LogWriter 
- * and LogWriterI18n to Log4J.
+ * Implements GemFireLogger with custom levels while also bridging LogWriter and LogWriterI18n to
+ * Log4J.
-public final class LogWriterLogger 
-extends FastLogger 
-implements InternalLogWriter, GemFireLogger {
-  
+public final class LogWriterLogger extends FastLogger implements InternalLogWriter, GemFireLogger {
+
-  
-  // TODO:LOG:SECURITY: need to use this either here if isSecure==true or in the security LogWriterAppender's PatternLayout but not both places
+
+  // TODO:LOG:SECURITY: need to use this either here if isSecure==true or in the security
+  // LogWriterAppender's PatternLayout but not both places
-  
+
-  private LogWriterLogger(final Logger logger, final String connectionName, final boolean isSecure) {
+  private LogWriterLogger(final Logger logger, final String connectionName,
+      final boolean isSecure) {
-  
+
-   * @param name
-   *          The this.logger name. If null the name of the calling class will
-   *          be used.
-   * @param isSecure
-   *          True if creating a Logger for security logging.
+   * @param name The this.logger name. If null the name of the calling class will be used.
+   * @param isSecure True if creating a Logger for security logging.
-  
+
-   * @param name
-   *          The this.logger name. If null the name of the calling class will
-   *          be used.
-   * @param connectionName
-   *          The member name (also known as connection name)
-   * @param isSecure
-   *          True if creating a Logger for security logging.
+   * @param name The this.logger name. If null the name of the calling class will be used.
+   * @param connectionName The member name (also known as connection name)
+   * @param isSecure True if creating a Logger for security logging.
-  public static LogWriterLogger create(final String name, final String connectionName, final boolean isSecure) {
+  public static LogWriterLogger create(final String name, final String connectionName,
+      final boolean isSecure) {
-  
+
-  
+
-    
+
-  
+
-  
+
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * Logs a message at the {@code Level.WARN} level including the stack trace of
-   * the {@link Throwable} {@code t} passed as parameter.
+   * Logs a message at the {@code Level.WARN} level including the stack trace of the
+   * {@link Throwable} {@code t} passed as parameter.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * Logs a message at the {@code Level.WARN} level including the stack trace of
-   * the {@link Throwable} {@code t} passed as parameter.
+   * Logs a message at the {@code Level.WARN} level including the stack trace of the
+   * {@link Throwable} {@code t} passed as parameter.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * Logs a message at the {@code Level.WARN} level including the stack trace of
-   * the {@link Throwable} {@code t} passed as parameter.
+   * Logs a message at the {@code Level.WARN} level including the stack trace of the
+   * {@link Throwable} {@code t} passed as parameter.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * Logs a message at the {@code Level.WARN} level including the stack trace of
-   * the {@link Throwable} {@code t} passed as parameter.
+   * Logs a message at the {@code Level.WARN} level including the stack trace of the
+   * {@link Throwable} {@code t} passed as parameter.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param marker the marker data specific to this log statement
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message object to log.
+   * @param marker the marker data specific to this log statement
+   * @param message the message object to log.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param marker
-   *          the marker data specific to this log statement
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param marker the marker data specific to this log statement
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param msg
-   *          the message string to be logged
+   * @param msg the message string to be logged
-   * @param msg
-   *          the message string to be logged
-   * @param t
-   *          A Throwable or null.
+   * @param msg the message string to be logged
+   * @param t A Throwable or null.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack trace.
+   * @param message the message to log.
+   * @param t the exception to log, including its stack trace.
-   * @param message
-   *          the message object to log.
+   * @param message the message object to log.
-   * @param message
-   *          the message to log; the format depends on the message factory.
-   * @param params
-   *          parameters to the message.
+   * @param message the message to log; the format depends on the message factory.
+   * @param params parameters to the message.
-   * @param message
-   *          the message to log.
-   * @param t
-   *          the exception to log, including its stack
-   *          trace.LogService.getLogWriterLogger().enter()
+   * @param message the message to log.
+   * @param t the exception to log, including its stack
+   *        trace.LogService.getLogWriterLogger().enter()
-  
+
-  
+
-    
+
-    
+
-  
+
-  
+
-  
+
-    return new GemFireHandler(this); // TODO:LOG:CLEANUP: DO WE NEED A DIFFERENT HANDLER OR IS THIS OKAY?
+    return new GemFireHandler(this); // TODO:LOG:CLEANUP: DO WE NEED A DIFFERENT HANDLER OR IS THIS
+                                     // OKAY?
-    
-    if (log4jLevel == Level.OFF) {     
+
+    if (log4jLevel == Level.OFF) {
-    
-    throw new IllegalStateException("Level " + log4jLevel + " could not be mapped to LogWriter level.");
+
+    throw new IllegalStateException(
+        "Level " + log4jLevel + " could not be mapped to LogWriter level.");
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66