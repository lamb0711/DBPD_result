GEODE-8059: replace multiple redis set functions with one CommandFunction (#5035)


+import static org.apache.geode.redis.internal.RedisCommandType.DEL;
+import static org.apache.geode.redis.internal.RedisCommandType.SADD;
+import static org.apache.geode.redis.internal.RedisCommandType.SMEMBERS;
+import static org.apache.geode.redis.internal.RedisCommandType.SREM;
+
+import org.apache.geode.redis.internal.RedisCommandType;
+import org.apache.geode.redis.internal.executor.CommandFunction;
-    FunctionService.registerFunction(new SaddFunction());
-    FunctionService.registerFunction(new SremFunction());
-    FunctionService.registerFunction(new SmembersFunction());
-    FunctionService.registerFunction(new SdelFunction());
+    FunctionService.registerFunction(new CommandFunction());
-    ResultCollector<ArrayList<ByteArrayWrapper>, List<Long>> results = FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(key))
-        .setArguments(membersToAdd)
-        .execute(SaddFunction.ID);
-
+    ResultCollector<Object[], List<Long>> results = executeFunction(SADD, membersToAdd);
-    ResultCollector<ArrayList<ByteArrayWrapper>, List<Long>> results = FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(key))
-        .setArguments(membersToRemove)
-        .execute(SremFunction.ID);
+    ResultCollector<Object[], List<Long>> results = executeFunction(SREM, membersToRemove);
-    ResultCollector<Void, List<Set<ByteArrayWrapper>>> results = FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(key))
-        .execute(SmembersFunction.ID);
+    ResultCollector<Object[], List<Set<ByteArrayWrapper>>> results =
+        executeFunction(SMEMBERS, null);
-    ResultCollector<Void, List<Boolean>> results = FunctionService
+    ResultCollector<Object[], List<Boolean>> results = executeFunction(DEL, null);
+    return results.getResult().get(0);
+  }
+
+  private ResultCollector executeFunction(RedisCommandType command,
+      ArrayList<ByteArrayWrapper> commandArguments) {
+    return FunctionService
-        .execute(SdelFunction.ID);
-    return results.getResult().get(0);
+        .setArguments(new Object[] {command, commandArguments})
+        .execute(CommandFunction.ID);

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 MOV83 MOV83 MOV39 MOV42 INS8 INS83 INS43 INS42 INS44 INS44 INS8 MOV21 INS42 INS43 INS42 MOV74 INS42 INS41 UPD74 UPD74 UPD74 UPD74 UPD42 MOV42 INS32 INS5 INS32 INS5 INS32 INS5 INS32 INS5 INS32 MOV32 UPD42 MOV42 INS40 UPD43 INS43 INS85 UPD42 MOV42 UPD42 MOV42 MOV42 INS43 INS85 UPD42 MOV42 UPD42 MOV42 MOV42 INS43 INS85 UPD42 MOV42 UPD42 MOV42 INS33 INS43 INS85 INS42 INS42 INS33 UPD42 INS3 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS5 INS4 INS43 INS85 INS42 INS42 INS42 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL8 DEL31 DEL43 DEL42 DEL43 DEL74 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL40 DEL32 DEL43 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL40 DEL32 DEL43 DEL40