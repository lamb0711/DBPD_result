Merge branch 'release/1.3.0'

-import java.io.Serializable;
+import java.util.Optional;
+import org.apache.geode.internal.security.SecurityService;
-  public void cmdExecute(Message clientMessage, ServerConnection servConn, long start)
-      throws IOException {
+  public void cmdExecute(final Message clientMessage, final ServerConnection serverConnection,
+      final SecurityService securityService, long start) throws IOException {
-    CachedRegionHelper crHelper = servConn.getCachedRegionHelper();
+    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
-        servConn.setAsTrue(REQUIRES_RESPONSE);
-        servConn.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
+        serverConnection.setAsTrue(REQUIRES_RESPONSE);
+        serverConnection.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
-        writeChunkedException(clientMessage, exception, servConn);
-        servConn.setAsTrue(RESPONDED);
+        writeChunkedException(clientMessage, exception, serverConnection);
+        serverConnection.setAsTrue(RESPONDED);
-      logger.warn("{}: {}", servConn.getName(), message);
-      sendError(hasResult, clientMessage, message, servConn);
+      logger.warn("{}: {}", serverConnection.getName(), message);
+      sendError(hasResult, clientMessage, message, serverConnection);
-        logger.warn("{}: {}", servConn.getName(), message);
-        sendError(hasResult, clientMessage, message, servConn);
+        logger.warn("{}: {}", serverConnection.getName(), message);
+        sendError(hasResult, clientMessage, message, serverConnection);
-      HandShake handShake = (HandShake) servConn.getHandshake();
+      HandShake handShake = (HandShake) serverConnection.getHandshake();
-      Function functionObject = null;
+      Function<?> functionObject = null;
-            logger.warn("{}: {}", servConn.getName(), message);
-            sendError(hasResult, clientMessage, message, servConn);
+            logger.warn("{}: {}", serverConnection.getName(), message);
+            sendError(hasResult, clientMessage, message, serverConnection);
-        AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+        functionObject.getRequiredPermissions(regionName).forEach(securityService::authorize);
+
+        AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-        ChunkedMessage m = servConn.getFunctionResponseMessage();
+        ChunkedMessage m = serverConnection.getFunctionResponseMessage();
-        resultSender = new ServerToClientFunctionResultSender(m,
-            MessageType.EXECUTE_REGION_FUNCTION_RESULT, servConn, functionObject, executeContext);
+        resultSender =
+            new ServerToClientFunctionResultSender(m, MessageType.EXECUTE_REGION_FUNCTION_RESULT,
+                serverConnection, functionObject, executeContext);
-              functionObject.getId(), servConn, execution);
+              functionObject.getId(), serverConnection, execution);
-        sendException(hasResult, clientMessage, message, servConn, ioe);
+        sendException(hasResult, clientMessage, message, serverConnection, ioe);
-          sendException(hasResult, clientMessage, message, servConn, fe);
+          sendException(hasResult, clientMessage, message, serverConnection, fe);
-        sendException(hasResult, clientMessage, message, servConn, e);
+        sendException(hasResult, clientMessage, message, serverConnection, e);
-  private void sendException(byte hasResult, Message msg, String message, ServerConnection servConn,
-      Throwable e) throws IOException {
+  private void sendException(byte hasResult, Message msg, String message,
+      ServerConnection serverConnection, Throwable e) throws IOException {
-      writeFunctionResponseException(msg, MessageType.EXCEPTION, servConn, e);
-      servConn.setAsTrue(RESPONDED);
+      writeFunctionResponseException(msg, MessageType.EXCEPTION, serverConnection, e);
+      serverConnection.setAsTrue(RESPONDED);
-  private void sendError(byte hasResult, Message msg, String message, ServerConnection servConn)
-      throws IOException {
+  private void sendError(byte hasResult, Message msg, String message,
+      ServerConnection serverConnection) throws IOException {
-      writeFunctionResponseError(msg, MessageType.EXECUTE_REGION_FUNCTION_ERROR, message, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeFunctionResponseError(msg, MessageType.EXECUTE_REGION_FUNCTION_ERROR, message,
+          serverConnection);
+      serverConnection.setAsTrue(RESPONDED);

MOV26 INS26 UPD40 INS40 INS44 INS83 INS83 UPD42 INS83 INS43 INS42 UPD42 UPD42 INS42 MOV27 MOV27 UPD42 MOV43 INS74 UPD42 MOV43 INS76 INS21 UPD42 UPD42 UPD42 UPD42 UPD42 MOV43 INS32 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS90 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42