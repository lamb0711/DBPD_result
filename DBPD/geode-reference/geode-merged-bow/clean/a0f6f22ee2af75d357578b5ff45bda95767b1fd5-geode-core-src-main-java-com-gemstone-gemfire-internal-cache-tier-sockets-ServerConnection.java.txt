Merge branch 'develop' into feature/GEODE-17-2

-  public long setUserAuthorizeAndPostAuthorizeRequest(AuthorizeRequest authzRequest, AuthorizeRequestPP postAuthzRequest)
-  {
+  public long setUserAuthorizeAndPostAuthorizeRequest(
+      AuthorizeRequest authzRequest, AuthorizeRequestPP postAuthzRequest)
+      throws IOException {
-    if (this.clientUserAuths == null )
+    if (this.clientUserAuths == null) {
-    return this.clientUserAuths.putUserAuth(userAuthAttr);
+    }
+    try {
+      return this.clientUserAuths.putUserAuth(userAuthAttr);
+    } catch (NullPointerException npe) {
+      if (this.isTerminated()) {
+        // Bug #52023.
+        throw new IOException("Server connection is terminated.");
+      }
+      throw npe;
+    }
-      return this.clientUserAuths.removeUserId(aIds.getUniqueId(), keepalive);      
-    }
-    catch(Exception ex)
-    {
-      throw new  AuthenticationFailedException("Authentication failed");
+      try {
+        return this.clientUserAuths.removeUserId(aIds.getUniqueId(), keepalive);
+      } catch (NullPointerException npe) {
+        // Bug #52023.
+        logger.debug("Exception {}", npe);
+        return false;
+      }
+    } catch (Exception ex) {
+      throw new AuthenticationFailedException("Authentication failed", ex);
-      throws AuthenticationRequiredException {
+      throws AuthenticationRequiredException, IOException {
-      
-      UserAuthAttributes uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      UserAuthAttributes uaa = null;
+      try {
+        uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      } catch (NullPointerException npe) {
+        if (this.isTerminated()) {
+          // Bug #52023.
+          throw new IOException("Server connection is terminated.");
+        } else {
+          logger.debug("Unexpected exception {}", npe);
+        }
+      }
-  throws AuthenticationRequiredException{
+  throws AuthenticationRequiredException, IOException {
-      UserAuthAttributes uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      UserAuthAttributes uaa = null;
+      try {
+        uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      } catch (NullPointerException npe) {
+        if (this.isTerminated()) {
+          // Bug #52023.
+          throw new IOException("Server connection is terminated.");
+        } else {
+          logger.debug("Unexpected exception {}", npe);
+        }
+      }

INS43 INS43 INS43 INS42 INS54 INS42 INS42 INS8 INS8 INS12 MOV21 MOV41 INS44 INS8 INS54 INS54 INS54 INS43 INS42 INS25 INS53 INS8 INS12 INS8 INS12 INS8 INS12 INS42 INS32 INS8 INS42 MOV41 INS44 INS8 INS33 INS21 INS44 INS8 INS33 INS21 INS44 INS8 INS52 INS42 INS53 INS43 INS42 INS21 INS41 INS42 INS7 INS43 INS42 INS25 INS7 INS43 INS42 INS25 INS14 INS42 INS32 INS9 INS42 MOV32 INS42 INS32 INS8 INS8 INS42 MOV32 INS42 INS32 INS8 INS8 INS43 INS45 INS42 INS42 INS45 INS42 INS52 INS42 INS53 INS21 INS52 INS42 INS53 INS21 INS42 INS14 INS32 INS14 INS32 INS43 INS45 INS42 INS42 INS45 INS42 INS43 INS45 INS42 INS42 INS45 INS42 INS42 INS42