GEODE-8313: Improve RedisData synchronization for toData (#5318)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
-      hash.put(iterator.next(), iterator.next());
+      hashPut(iterator.next(), iterator.next());
+  /**
+   * Since GII (getInitialImage) can come in and call toData while other threads
+   * are modifying this object, the striped executor will not protect toData.
+   * So any methods that modify "hash" needs to be thread safe with toData.
+   */
-  public void toData(DataOutput out) throws IOException {
+  public synchronized void toData(DataOutput out) throws IOException {
+  private synchronized ByteArrayWrapper hashPut(ByteArrayWrapper field, ByteArrayWrapper value) {
+    return hash.put(field, value);
+  }
+
+  private synchronized ByteArrayWrapper hashPutIfAbsent(ByteArrayWrapper field,
+      ByteArrayWrapper value) {
+    return hash.putIfAbsent(field, value);
+  }
+
+  private synchronized ByteArrayWrapper hashRemove(ByteArrayWrapper field) {
+    return hash.remove(field);
+  }
+
+
-        hash.put(field, value);
+        hashPut(field, value);
-        hash.remove(field);
+        hashRemove(field);
-        added = hash.putIfAbsent(field, value) == null;
+        added = hashPutIfAbsent(field, value) == null;
-        added = hash.put(field, value) == null;
+        added = hashPut(field, value) == null;
-      if (hash.remove(fieldToRemove) != null) {
+      if (hashRemove(fieldToRemove) != null) {
-      hash.put(field, newValue);
+      hashPut(field, newValue);
-    hash.put(field, modifiedValue);
+    hashPut(field, modifiedValue);
-  public double hincrbyfloat(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,
-      ByteArrayWrapper field, double increment) throws NumberFormatException {
+  public double hincrbyfloat(Region<ByteArrayWrapper, RedisData> region,
+      ByteArrayWrapper key,
+      ByteArrayWrapper field, double increment)
+      throws NumberFormatException {
-      hash.put(field, newValue);
+      hashPut(field, newValue);
-    hash.put(field, modifiedValue);
+    hashPut(field, modifiedValue);

INS31 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS44 MOV8 INS83 INS83 INS43 INS42 INS44 MOV8 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS66 INS66 INS66 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 MOV32 UPD42 UPD42 MOV32 INS8 INS8 UPD42 INS21 INS21 UPD42 UPD42 INS32 INS32 INS7 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS33 INS42 INS42 INS42 UPD42 DEL42 DEL42 DEL33 DEL27 DEL7 DEL21 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42