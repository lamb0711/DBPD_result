Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+   * 
+   * 
-  public abstract Object put(Object key, Object value, byte[] deltaBytes, EntryEventImpl clientEvent,
-      Operation op, boolean requireOldValue, Object expectedOldValue,
+  public abstract Object put(Object key, Object value, byte[] deltaBytes,
+      EntryEventImpl clientEvent, Operation op, boolean requireOldValue, Object expectedOldValue,
+   * 
-  public abstract Object destroy(Object key, Object expectedOldValue,
-      Operation operation, EntryEventImpl clientEvent, Object callbackArg);
+  public abstract Object destroy(Object key, Object expectedOldValue, Operation operation,
+      EntryEventImpl clientEvent, Object callbackArg);
-  
+
+   * 
-  
-  
+
+
+   * 
+   * 
+   * 
-  
-  
+
+
+   * 
-  
+
-  public abstract VersionedObjectList putAll(Map map, EventID eventId, boolean skipCallbacks, Object callbackArg);
+  public abstract VersionedObjectList putAll(Map map, EventID eventId, boolean skipCallbacks,
+      Object callbackArg);
-  public abstract VersionedObjectList removeAll(Collection<Object> keys, EventID eventId, Object callbackArg);
+  public abstract VersionedObjectList removeAll(Collection<Object> keys, EventID eventId,
+      Object callbackArg);
-  
+
+   * 
-//  public boolean containsValue(Object value);
-//  public Set entries(boolean recursive) {
-//  public void invalidate(Object key) throws TimeoutException,
-//  public int size()
+  // public boolean containsValue(Object value);
+  // public Set entries(boolean recursive) {
+  // public void invalidate(Object key) throws TimeoutException,
+  // public int size()
-  
+
-   * returns the region to which this interface provides access.  This may be
-   * null in an admin system
+   * returns the region to which this interface provides access. This may be null in an admin system

UPD66 DEL66