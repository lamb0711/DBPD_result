Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This message is generated based on event received on GatewayReceiver for
- * updating the time-stamp in a version tag for a RegionEntry.
+ * This message is generated based on event received on GatewayReceiver for updating the time-stamp
+ * in a version tag for a RegionEntry.
-public class PRUpdateEntryVersionMessage extends
-    PartitionMessageWithDirectReply {
+public class PRUpdateEntryVersionMessage extends PartitionMessageWithDirectReply {
-  
+
-  public PRUpdateEntryVersionMessage() {
-  }
+  public PRUpdateEntryVersionMessage() {}
-  public PRUpdateEntryVersionMessage(
-      Collection<InternalDistributedMember> recipients, int regionId,
+  public PRUpdateEntryVersionMessage(Collection<InternalDistributedMember> recipients, int regionId,
-  public PRUpdateEntryVersionMessage(Set recipients, int regionId,
-      DirectReplyProcessor processor, EntryEventImpl event) {
+  public PRUpdateEntryVersionMessage(Set recipients, int regionId, DirectReplyProcessor processor,
+      EntryEventImpl event) {
-   * @see org.apache.geode.internal.cache.partitioned.PartitionMessage#
-   * operateOnPartitionedRegion
+   * @see org.apache.geode.internal.cache.partitioned.PartitionMessage# operateOnPartitionedRegion
-  protected boolean operateOnPartitionedRegion(DistributionManager dm,
-      PartitionedRegion pr, long startTime) throws CacheException,
-      QueryException, DataLocationException, InterruptedException, IOException {
+  protected boolean operateOnPartitionedRegion(DistributionManager dm, PartitionedRegion pr,
+      long startTime) throws CacheException, QueryException, DataLocationException,
+      InterruptedException, IOException {
-    final EntryEventImpl event = EntryEventImpl.create(pr, getOperation(),
-        getKey(), null, /* newValue */
-        null, /* callbackargs */
-        false /* originRemote - false to force distribution in buckets */,
-        getSender() /* eventSender */, false /* generateCallbacks */, false /* initializeId */);
+    final EntryEventImpl event =
+        EntryEventImpl.create(pr, getOperation(), getKey(), null, /* newValue */
+            null, /* callbackargs */
+            false /* originRemote - false to force distribution in buckets */,
+            getSender() /* eventSender */, false /* generateCallbacks */, false /* initializeId */);
-        Integer bucket = Integer.valueOf(PartitionedRegionHelper
-            .getHashKey(event));
+        Integer bucket = Integer.valueOf(PartitionedRegionHelper.getHashKey(event));
-          logger.debug("{}: updateEntryVersionLocally in bucket: {}, key: {}", getClass().getName(), bucket, key);
+          logger.debug("{}: updateEntryVersionLocally in bucket: {}, key: {}", getClass().getName(),
+              bucket, key);
-                                                           * No need to send
-                                                           * exception back
+                                                           * No need to send exception back
-        sendReply(getSender(), getProcessorId(), dm, new ReplyException(pbe),
-            pr, startTime);
+        sendReply(getSender(), getProcessorId(), dm, new ReplyException(pbe), pr, startTime);
-  public static final class UpdateEntryVersionResponse extends
-      PartitionResponse {
+  public static final class UpdateEntryVersionResponse extends PartitionResponse {
-    public UpdateEntryVersionResponse(InternalDistributedSystem dm,
-        Set recipients, Object k) {
+    public UpdateEntryVersionResponse(InternalDistributedSystem dm, Set recipients, Object k) {
-  public static UpdateEntryVersionResponse send(
-      InternalDistributedMember recipient, PartitionedRegion r,
-      EntryEventImpl event) throws ForceReattemptException {
+  public static UpdateEntryVersionResponse send(InternalDistributedMember recipient,
+      PartitionedRegion r, EntryEventImpl event) throws ForceReattemptException {
-    UpdateEntryVersionResponse p = new UpdateEntryVersionResponse(
-        r.getSystem(), recipient, event.getKey());
-    PRUpdateEntryVersionMessage m = new PRUpdateEntryVersionMessage(recipients,
-        r.getPRId(), p, event);
+    UpdateEntryVersionResponse p =
+        new UpdateEntryVersionResponse(r.getSystem(), recipient, event.getKey());
+    PRUpdateEntryVersionMessage m =
+        new PRUpdateEntryVersionMessage(recipients, r.getPRId(), p, event);
-          LocalizedStrings.UpdateEntryVersionMessage_FAILED_SENDING_0
-              .toLocalizedString(m));
+          LocalizedStrings.UpdateEntryVersionMessage_FAILED_SENDING_0.toLocalizedString(m));

UPD66 UPD66