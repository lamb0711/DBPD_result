GEODE-6412: Improve concurrency for getBucketIndex (#3198)

  * Caching an arbitrary index instead of finding one for every getBucketIndex call
  * Refactored to use jmh asych group threads
+  // An arbitrary bucket index from this PartiionedIndex that is used as a representative
+  // index for the entire PartitionIndex. Usually used for scoring/sizing of an index when
+  // selecting which index to use
+  private volatile Index arbitraryBucketIndex;
+      setArbitraryBucketIndex(index);
+      if (index == arbitraryBucketIndex) {
+        setArbitraryBucketIndex(retrieveArbitraryBucketIndex());
+      }
-  /**
-   * Returns one of the bucket index. To get all bucket index use getBucketIndexes()
-   */
-  public Index getBucketIndex() {
+  public void setArbitraryBucketIndex(Index index) {
+    if (arbitraryBucketIndex == null) {
+      arbitraryBucketIndex = index;
+    }
+  }
+
+  public Index retrieveArbitraryBucketIndex() {
+  public Index getBucketIndex() {
+    return arbitraryBucketIndex;
+  }
+
-
-   *
-      int upperBoundOperator, Collection results, Set keysToRemove, ExecutionContext context)
+      int upperBoundOperator, Collection results, Set keysToRemove,
+      ExecutionContext context)

INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 UPD42 INS83 INS43 INS42 INS8 INS42 INS42 INS43 INS42 INS25 INS42 INS41 INS42 INS27 INS8 INS42 INS21 INS25 INS42 INS33 INS21 INS32 INS27 INS8 INS7 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS32 INS42 DEL66 DEL65 DEL29