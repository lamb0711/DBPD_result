GEODE-773: Extract static methods from DistributedTestCase

Refactor DistributedTestCase by extracting inner classes & interfaces into:
* IgnoredException
* StoppableWaitCriterion
* WaitCriterion

Refactor DistributedTestCase by extracting static methods into:
* Assert
* DebuggerUtils
* DistributedTestUtils
* Invoke
* Jitter
* LogWriterUtils
* NetworkUtils
* ThreadUtils
* Wait

Also:
* Rename variables for clarity
* Replace several uses of LogWriter with Logger
* Write and polish lots of javadocs
* Overhaul entire hierarchy of tearDown() methods across dunit tests

+import com.gemstone.gemfire.test.dunit.Assert;
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-            getLogWriter()
+            com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-            getLogWriter()
+            com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-            getLogWriter()
+            com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-              getLogWriter().info("EntryExistsException was thrown for key "+ j);
+              com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("EntryExistsException was thrown for key "+ j);
-              getLogWriter().info("EntryNotFoundException was thrown for key "+ j);
+              com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("EntryNotFoundException was thrown for key "+ j);
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-         getLogWriter()
+         com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-         getLogWriter()
+         com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-         getLogWriter()
+         com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-         getLogWriter()
+         com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter().error(
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().error(
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          fail("interupted", e);
+          Assert.fail("interupted", e);
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter()
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter().info("PRQueryDUnitHelper#PRQueryingVsLocalQuerying: Time to Query Local cache "+queryTimeLocal + " ms");
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("PRQueryDUnitHelper#PRQueryingVsLocalQuerying: Time to Query Local cache "+queryTimeLocal + " ms");
-          getLogWriter().info("PRQueryDUnitHelper#PRQueryingVsLocalQuerying: Time to Query PR "+queryTimePR+" ms");
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("PRQueryDUnitHelper#PRQueryingVsLocalQuerying: Time to Query PR "+queryTimePR+" ms");
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-        getLogWriter().info("PRQueryDUnitHelper:PerfResultsObject#displayResults");
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("PRQueryDUnitHelper:PerfResultsObject#displayResults");
-        getLogWriter().info("~~~~~~~~~~~~~~~~~~~~~~~PR Querying Performance Results~~~~~~~~~~~~~~~~~~~~~~~");
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("~~~~~~~~~~~~~~~~~~~~~~~PR Querying Performance Results~~~~~~~~~~~~~~~~~~~~~~~");
-        getLogWriter().info(this.OperationDescription);
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info(this.OperationDescription);
-        getLogWriter().info("Scope                    : "+this.Scope);
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("Scope                    : "+this.Scope);
-        getLogWriter().info("Redundancy Level         : "+this.redundancy);
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("Redundancy Level         : "+this.redundancy);
-        getLogWriter().info("Number of Accessor       : "+this.NumberOfAccessors);
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("Number of Accessor       : "+this.NumberOfAccessors);
-        getLogWriter().info("Number of Datastore/s    : "+this.NumberOfDataStores);
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("Number of Datastore/s    : "+this.NumberOfDataStores);
-        getLogWriter().info("QueryingTime Local       : "+this.QueryingTimeLocal+" ms");
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("QueryingTime Local       : "+this.QueryingTimeLocal+" ms");
-        getLogWriter().info("QueryingTime PR          : "+this.QueryingTimePR+" ms");
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("QueryingTime PR          : "+this.QueryingTimePR+" ms");
-        getLogWriter().info("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
+        com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter().info("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
-          fail("Creating Index in this vm failed : ", ex);
+          Assert.fail("Creating Index in this vm failed : ", ex);
-           fail("Creating Index in this vm failed : ", ex);
+           Assert.fail("Creating Index in this vm failed : ", ex);
-          fail("Creating Index in this vm failed : ", ex);
+          Assert.fail("Creating Index in this vm failed : ", ex);
-      fail("IOException during cache.xml generation to " + file, ex);
+      Assert.fail("IOException during cache.xml generation to " + file, ex);
-          fail("Region Not found in this vm ", exx);
+          Assert.fail("Region Not found in this vm ", exx);
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()
-          getLogWriter()
+          com.gemstone.gemfire.test.dunit.LogWriterUtils.getLogWriter()

INS26 INS40 INS42 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS40 INS40 INS40 INS42 INS42 INS42 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS40 INS40