Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

+import org.apache.geode.internal.security.IntegratedSecurityService;
+import org.apache.geode.internal.security.SecurityService;
-import org.apache.geode.management.internal.cli.functions.DataCommandFunction.SelectExecStep;
-  private final int resultItemCount = 9;
+  final int resultItemCount = 9;
-  @Override
-  public Gfsh getGfsh() {
-    return Gfsh.getCurrentInstance();
-  }
-
-  @Override
-  public InternalCache getCache() {
-    return (InternalCache) CacheFactory.getAnyInstance();
-  }
+  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
-    ExecuteRebalanceWithTimeout(String[] includedRegions, String[] excludedRegions,
+    public ExecuteRebalanceWithTimeout(String[] includedRegions, String[] excludedRegions,
-    Result executeRebalanceWithTimeout(String[] includeRegions, String[] excludeRegions,
+    public Result executeRebalanceWithTimeout(String[] includeRegions, String[] excludeRegions,
-  private boolean checkMemberPresence(DistributedMember dsMember, InternalCache cache) {
+  public boolean checkMemberPresence(DistributedMember dsMember, InternalCache cache) {
-  private String listOfAllMembers(ArrayList<DistributedMember> dsMemberList) {
+  public String listOfAllMembers(ArrayList<DistributedMember> dsMemberList) {
-  private CompositeResultData toCompositeResultData(CompositeResultData rebalanceResulteData,
+  protected CompositeResultData toCompositeResultData(CompositeResultData rebalanceResulteData,
-  private DistributedMember getAssociatedMembers(String region, final InternalCache cache) {
+  public DistributedMember getAssociatedMembers(String region, final InternalCache cache) {
-    getCache().getSecurityService().authorizeRegionRead(regionName);
+    this.securityService.authorizeRegionRead(regionName);
-    getCache().getSecurityService().authorizeRegionWrite(regionName);
+    this.securityService.authorizeRegionWrite(regionName);
+    this.securityService.authorizeRegionWrite(regionPath);
-    cache.getSecurityService().authorizeRegionWrite(regionPath);
+    this.securityService.authorizeRegionRead(regionPath, key);
-    cache.getSecurityService().authorizeRegionRead(regionPath, key);
-        Subject subject = cache.getSecurityService().getSubject();
+        Subject subject = this.securityService.getSubject();
-      dataResult = getfn.get(null, key, keyClass, valueClass, regionPath, loadOnCacheMiss,
-          cache.getSecurityService());
+      dataResult = getfn.get(null, key, keyClass, valueClass, regionPath, loadOnCacheMiss);
-    getCache().getSecurityService().authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
-      cache.getSecurityService().authorizeRegionWrite(regionPath);
+      this.securityService.authorizeRegionWrite(regionPath);
-      cache.getSecurityService().authorizeRegionWrite(regionPath, key);
+      this.securityService.authorizeRegionWrite(regionPath, key);
-    CLIStep exec = new SelectExecStep(arguments);
+    CLIStep exec = new DataCommandFunction.SelectExecStep(arguments);
-    ArrayList<DistributedMember> dsMemberList;
+    public ArrayList<DistributedMember> dsMemberList;
-    MemberPRInfo() {
+    public MemberPRInfo() {
-    @Override

MOV26 INS26 INS40 UPD40 INS23 INS83 INS43 INS59 UPD83 UPD83 UPD83 UPD83 MOV60 MOV60 UPD42 MOV42 INS42 INS32 INS83 INS83 INS83 INS83 UPD42 MOV42 UPD42 MOV42 INS22 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 UPD43 INS22 INS22 INS40 INS52 INS42 INS52 INS42 INS22 INS52 INS42 DEL83 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL43 DEL42 DEL42 DEL43 DEL32 DEL11 DEL41 DEL8 DEL31 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL78