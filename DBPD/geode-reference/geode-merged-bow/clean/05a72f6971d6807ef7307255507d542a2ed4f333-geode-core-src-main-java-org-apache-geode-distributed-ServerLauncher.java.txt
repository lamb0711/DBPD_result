Fix failing d-unit test by moving catch blocks back to ServerLauncher.start()

Co-authored-by: Aaron Lindsey <alindsey@pivotal.io>
Co-authored-by: Kirk Lund <klund@apache.org>

+      } catch (IOException e) {
+        failOnStart(e);
+        throw new RuntimeException(
+            String.format("An IO error occurred while starting a %s in %s on %s: %s",
+                getServiceName(), getWorkingDirectory(), getId(), e.getMessage()),
+            e);
+      } catch (FileAlreadyExistsException e) {
+        failOnStart(e);
+        throw new RuntimeException(
+            String.format("A PID file already exists and a %s may be running in %s on %s.",
+                getServiceName(), getWorkingDirectory(), getId()),
+            e);
+      } catch (PidUnavailableException e) {
+        failOnStart(e);
+        throw new RuntimeException(
+            String.format("The process ID could not be determined while starting %s %s in %s: %s",
+                getServiceName(), getId(), getWorkingDirectory(), e.getMessage()),
+            e);
-  private ControllableProcess getControllableProcess() {
-    if (controllableProcessFactory != null) {
-      return controllableProcessFactory.get();
-    }
-
-    try {
-      return new FileControllableProcess(controlHandler, new File(getWorkingDirectory()),
-          ProcessType.SERVER, isForcing());
-    } catch (IOException e) {
-      failOnStart(e);
-      throw new RuntimeException(
-          String.format("An IO error occurred while starting a %s in %s on %s: %s",
-              getServiceName(), getWorkingDirectory(), getId(), e.getMessage()),
-          e);
-    } catch (FileAlreadyExistsException e) {
-      failOnStart(e);
-      throw new RuntimeException(
-          String.format("A PID file already exists and a %s may be running in %s on %s.",
-              getServiceName(), getWorkingDirectory(), getId()),
-          e);
-    } catch (PidUnavailableException e) {
-      failOnStart(e);
-      throw new RuntimeException(
-          String.format("The process ID could not be determined while starting %s %s in %s: %s",
-              getServiceName(), getId(), getWorkingDirectory(), e.getMessage()),
-          e);
-    }
+  private ControllableProcess getControllableProcess()
+      throws IOException, FileAlreadyExistsException, PidUnavailableException {
+    return controllableProcessFactory != null
+        ? controllableProcessFactory.get()
+        : new FileControllableProcess(controlHandler, new File(getWorkingDirectory()),
+            ProcessType.SERVER, isForcing());

INS43 INS43 INS43 MOV8 MOV42 MOV42 MOV42 INS16 MOV27 MOV32 MOV14 MOV12 MOV12 MOV12 INS42 INS42 INS42 DEL41 DEL8 DEL25 DEL54 DEL8