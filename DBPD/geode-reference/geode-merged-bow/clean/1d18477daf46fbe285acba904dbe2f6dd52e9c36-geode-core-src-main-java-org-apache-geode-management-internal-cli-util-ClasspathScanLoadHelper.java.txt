GEODE-6310 limit classgraph file descriptor consumption (#3124)

 * properly wraps all scanner uses in try-with-resources to ensure
   temporary files are cleaned up and file descriptors are closed

 * limits thread usage based on heap size, cpu count, and max file
   descriptor limits

 * removes usage of a non-public classgraph API, to ensure
   binary-compatibility with versions of classgraph up to 4.4.12

* based on review feedback, simplify to just always use 1 thread

-import java.util.regex.Pattern;
-import io.github.classgraph.utils.WhiteBlackList;
-public class ClasspathScanLoadHelper {
+public class ClasspathScanLoadHelper implements AutoCloseable {
-        .enableAnnotationInfo().scan();
+        .enableAnnotationInfo().scan(1);
-  private boolean classMatchesPackage(String className, String packageSpec) {
+  /**
+   * replaces shell-style glob characters with their regexp equivalents
+   */
+  private static String globToRegex(final String glob) {
+    return "^" + glob.replace(".", "\\.").replace("*", ".*") + "$";
+  }
+
+  private static boolean classMatchesPackage(String className, String packageSpec) {
-    Pattern globPattern = WhiteBlackList.globToPattern(packageSpec);
-    return globPattern.matcher(className).matches();
+    return className.matches(globToRegex(packageSpec));
+  @Override
+  public void close() {
+    if (scanResult != null)
+      scanResult.close();
+  }

INS43 INS31 INS31 INS42 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS78 INS83 INS39 INS42 INS8 INS65 INS42 INS83 INS43 INS42 INS41 INS42 INS25 INS66 INS42 INS27 INS27 INS21 INS45 INS32 INS45 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS33 INS32 INS34 INS32 INS42 INS45 INS45 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS45 INS45 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32