GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.i18n.LogWriterI18n;
-import org.apache.geode.internal.i18n.LocalizedStrings;
+import org.apache.geode.LogWriter;
-          LocalizedStrings.TransactionImpl_TRANSACTIONIMPL_SETROLLBACKONLY_NO_GLOBAL_TRANSACTION_EXISTS
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "TransactionImpl::setRollbackOnly: No global transaction exists.";
+      LogWriter writer = TransactionUtils.getLogWriter();
-        LocalizedStrings.TransactionImpl_SETTRANSACTIONTIMEOUT_IS_NOT_SUPPORTED.toLocalizedString();
-    LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+        "setTransactionTimeout is not supported.";
+    LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionImpl_TRANSACTIONIMPL_ENLISTRESOURCE_NO_GLOBAL_TRANSACTION_EXISTS
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "TransactionImpl::enlistResource: No global transaction exists";
+      LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionImpl_TRANSACTIONIMPL_DELISTRESOURCE_NO_GLOBAL_TRANSACTION_EXISTS
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "TransactionImpl::delistResource: No global transaction exists";
+      LogWriter writer = TransactionUtils.getLogWriter();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionImpl_TRANSACTIONIMPLREGISTERSYNCHRONIZATIONSYNCHRONIZATION_IS_NULL
-              .toLocalizedString());
+          "TransactionImpl::registerSynchronization:Synchronization is null");
-          LocalizedStrings.TransactionManagerImpl_NO_TRANSACTION_PRESENT.toLocalizedString());
+          "no transaction present");
-            LocalizedStrings.TransactionImpl_TRANSACTIONIMPL_REGISTERSYNCHRONIZATION_SYNCHRONIZATION_CANNOT_BE_REGISTERED_BECAUSE_THE_TRANSACTION_HAS_BEEN_MARKED_FOR_ROLLBACK
-                .toLocalizedString();
-        LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+            "TransactionImpl::registerSynchronization: Synchronization cannot be registered because the transaction has been marked for rollback";
+        LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionImpl_TRANSACTIONIMPL_REGISTERSYNCHRONIZATION_SYNCHRONIZATION_CANNOT_BE_REGISTERED_ON_A_TRANSACTION_WHICH_IS_NOT_ACTIVE
-                .toLocalizedString();
-        LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+            "TransactionImpl::registerSynchronization: Synchronization cannot be registered on a transaction which is not active";
+        LogWriter writer = TransactionUtils.getLogWriter();

UPD40 UPD43 MOV53 INS45 UPD42 UPD43 MOV53 UPD43 UPD42 UPD43 UPD43 UPD42 INS45 INS45 UPD42 INS45 UPD42 INS45 UPD42 UPD42 INS45 UPD42 UPD42 UPD42 UPD43 INS45 UPD42 UPD43 UPD42 INS45 UPD42 UPD42 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32