Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

-import org.apache.geode.distributed.internal.membership.gms.interfaces.Authenticator;
-import org.apache.geode.distributed.internal.membership.gms.interfaces.HealthMonitor;
-import org.apache.geode.distributed.internal.membership.gms.interfaces.JoinLeave;
-import org.apache.geode.distributed.internal.membership.gms.interfaces.Locator;
-import org.apache.geode.distributed.internal.membership.gms.interfaces.Manager;
-import org.apache.geode.distributed.internal.membership.gms.interfaces.Messenger;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.*;
-import org.apache.geode.internal.security.SecurityService;
-import org.apache.geode.internal.security.SecurityServiceFactory;
-  private final Manager manager;
-  private final JoinLeave joinLeave;
-  private final HealthMonitor healthMon;
-  private final Messenger messenger;
-  private final Authenticator auth;
-  private final ServiceConfig config;
-  private final DMStats stats;
-  private final Stopper cancelCriterion;
-  private final SecurityService securityService;
-
+  final private Manager manager;
+  final private JoinLeave joinLeave;
+  private Locator locator;
+  final private HealthMonitor healthMon;
+  final private Messenger messenger;
+  final private Authenticator auth;
+  final private ServiceConfig config;
+  final private DMStats stats;
+  final private Stopper cancelCriterion;
-  private Locator locator;
-
+
+
+
-    this.securityService = SecurityServiceFactory.create();
-      RemoteTransportConfig transport, DMStats stats, SecurityService securityService) {
+      RemoteTransportConfig transport, DMStats stats) {
-    this.securityService = securityService;
-    this.securityLogWriter = staticSecurityLogWriter;
+    securityLogWriter = staticSecurityLogWriter;
-    this.logWriter = staticLogWriter;
+    logWriter = staticLogWriter;
-    if (this.stopping) {
+    if (stopping) {
-    this.stopping = true;
+    stopping = true;
-    this.timer.cancel();
+    timer.cancel();
-      this.joinLeave.emergencyClose();
+      joinLeave.emergencyClose();
-        this.healthMon.emergencyClose();
+        healthMon.emergencyClose();
-          this.auth.emergencyClose();
+          auth.emergencyClose();
-            this.messenger.emergencyClose();
+            messenger.emergencyClose();
-              this.manager.emergencyClose();
+              manager.emergencyClose();
-              this.cancelCriterion.cancel("Membership services are shut down");
-              this.stopped = true;
+              cancelCriterion.cancel("Membership services are shut down");
+              stopped = true;
-    if (this.stopping) {
+    if (stopping) {
-    this.stopping = true;
+    stopping = true;
-      this.timer.cancel();
+      timer.cancel();
-        this.joinLeave.stop();
+        joinLeave.stop();
-          this.healthMon.stop();
+          healthMon.stop();
-            this.auth.stop();
+            auth.stop();
-              this.messenger.stop();
+              messenger.stop();
-                this.manager.stop();
+                manager.stop();
-                this.cancelCriterion.cancel("Membership services are shut down");
-                this.stopped = true;
+                cancelCriterion.cancel("Membership services are shut down");
+                stopped = true;
-  public SecurityService getSecurityService() {
-    return this.securityService;
-  }
-
-    return this.auth;
+    return auth;
-      this.auth.installView(v);
+      auth.installView(v);
-    if (this.locator != null) {
-      this.locator.installView(v);
+    if (locator != null) {
+      locator.installView(v);
-    this.healthMon.installView(v);
-    this.messenger.installView(v);
-    this.manager.installView(v);
+    healthMon.installView(v);
+    messenger.installView(v);
+    manager.installView(v);
-      this.joinLeave.memberSuspected(initiator, suspect, reason);
+      joinLeave.memberSuspected(initiator, suspect, reason);
-        this.healthMon.memberSuspected(initiator, suspect, reason);
+        healthMon.memberSuspected(initiator, suspect, reason);
-          this.auth.memberSuspected(initiator, suspect, reason);
+          auth.memberSuspected(initiator, suspect, reason);
-            this.messenger.memberSuspected(initiator, suspect, reason);
+            messenger.memberSuspected(initiator, suspect, reason);
-            this.manager.memberSuspected(initiator, suspect, reason);
+            manager.memberSuspected(initiator, suspect, reason);
-    return this.manager;
+    return manager;
-    return this.locator;
+    return locator;
-    return this.joinLeave;
+    return joinLeave;
-    return this.healthMon;
+    return healthMon;
-    return this.shutdownCause;
+    return shutdownCause;
-    return this.shutdownCause instanceof ForcedDisconnectException;
+    return shutdownCause instanceof ForcedDisconnectException;
-    if (this.locator != null) {
-      return ((GMSLocator) this.locator).getPublicKey(mbr);
+    if (locator != null) {
+      return ((GMSLocator) locator).getPublicKey(mbr);
-      return this.reasonForStopping;
+      return reasonForStopping;

MOV23 UPD40 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 MOV25 MOV25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22