GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-            LocalizedStrings.MemoryThresholds_CRITICAL_PERCENTAGE_GT_ZERO_AND_LTE_100
-                .toLocalizedString());
+            "Critical percentage must be greater than 0.0 and less than or equal to 100.0.");
-            LocalizedStrings.OffHeapMemoryMonitor_NO_OFF_HEAP_MEMORY_HAS_BEEN_CONFIGURED
-                .toLocalizedString());
+            "No off-heap memory has been configured.");
-            LocalizedStrings.MemoryThresholds_CRITICAL_PERCENTAGE_GTE_EVICTION_PERCENTAGE
-                .toLocalizedString());
+            "Critical percentage must be greater than the eviction percentage.");
-            LocalizedStrings.MemoryThresholds_EVICTION_PERCENTAGE_GT_ZERO_AND_LTE_100
-                .toLocalizedString());
+            "Eviction percentage must be greater than 0.0 and less than or equal to 100.0.");
-            LocalizedStrings.OffHeapMemoryMonitor_NO_OFF_HEAP_MEMORY_HAS_BEEN_CONFIGURED
-                .toLocalizedString());
+            "No off-heap memory has been configured.");
-            LocalizedStrings.MemoryMonitor_EVICTION_PERCENTAGE_LTE_CRITICAL_PERCENTAGE
-                .toLocalizedString());
+            "Eviction percentage must be less than the critical percentage.");
-      logger.error(
-          LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_CRITICAL_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+      logger.error("Member: {} above {} critical threshold",
+          new Object[] {event.getMember(), "off-heap"});
-      logger.error(
-          LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_CRITICAL_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+      logger.error("Member: {} below {} critical threshold",
+          new Object[] {event.getMember(), "off-heap"});
-          .info(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_HIGH_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+          .info("Member: {} above {} eviction threshold",
+              new Object[] {event.getMember(), "off-heap"});
-          .info(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_HIGH_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+          .info("Member: {} below {} eviction threshold",
+              new Object[] {event.getMember(), "off-heap"});
-        logger.error(LocalizedMessage
-            .create(LocalizedStrings.MemoryMonitor_EXCEPTION_OCCURRED_WHEN_NOTIFYING_LISTENERS), t);
+        logger.error("Exception occurred when notifying listeners ", t);

INS8 MOV8 INS21 MOV8 MOV8 INS32 MOV32 INS42 INS42 INS45 MOV3 MOV32 UPD42 UPD42 INS45 MOV32 UPD42 UPD42 INS45 UPD42 UPD42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL40 DEL32