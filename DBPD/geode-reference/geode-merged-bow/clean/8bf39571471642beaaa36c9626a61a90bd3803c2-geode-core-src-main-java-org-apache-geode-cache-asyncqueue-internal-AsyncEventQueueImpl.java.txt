Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-    
+
-  
+
- 
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-	AbstractGatewaySenderEventProcessor eventProcessor = 
-	  ((AbstractGatewaySender) sender).getEventProcessor();
-	    
-	int size = 0;
-	if (eventProcessor instanceof ConcurrentSerialGatewaySenderEventProcessor) {
-	  Set<RegionQueue> queues = 
-		((ConcurrentSerialGatewaySenderEventProcessor) eventProcessor).getQueues();
-	  Iterator<RegionQueue> itr = queues.iterator();
-	  while (itr.hasNext()) {
-		size = size + itr.next().size();
-	  }
-	} else {
-	  size = eventProcessor.getQueue().size();
-	}
-	return size;
+    AbstractGatewaySenderEventProcessor eventProcessor =
+        ((AbstractGatewaySender) sender).getEventProcessor();
+
+    int size = 0;
+    if (eventProcessor instanceof ConcurrentSerialGatewaySenderEventProcessor) {
+      Set<RegionQueue> queues =
+          ((ConcurrentSerialGatewaySenderEventProcessor) eventProcessor).getQueues();
+      Iterator<RegionQueue> itr = queues.iterator();
+      while (itr.hasNext()) {
+        size = size + itr.next().size();
+      }
+    } else {
+      size = eventProcessor.getQueue().size();
+    }
+    return size;
-  
+
-  
+
-     AbstractGatewaySender abstractSender =  (AbstractGatewaySender) this.sender;
-     return ((AsyncEventQueueStats) abstractSender.getStatistics());
+    AbstractGatewaySender abstractSender = (AbstractGatewaySender) this.sender;
+    return ((AsyncEventQueueStats) abstractSender.getStatistics());
-  
+
-  
+
-    }
-    else {
+    } else {
-    return ((AbstractGatewaySender)sender).getIsMetaQueue();
+    return ((AbstractGatewaySender) sender).getIsMetaQueue();
-    ((AbstractGatewaySender)this.sender).destroy();
+    ((AbstractGatewaySender) this.sender).destroy();
-   public boolean isBucketSorted() {
+  public boolean isBucketSorted() {
-   public boolean isForwardExpirationDestroy() {
-     return ((AbstractGatewaySender)this.sender).isForwardExpirationDestroy();
-   }
+  public boolean isForwardExpirationDestroy() {
+    return ((AbstractGatewaySender) this.sender).isForwardExpirationDestroy();
+  }

