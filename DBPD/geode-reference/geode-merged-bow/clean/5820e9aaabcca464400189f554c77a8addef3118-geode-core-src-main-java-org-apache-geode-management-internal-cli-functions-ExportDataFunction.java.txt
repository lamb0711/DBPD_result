GEODE-5971: Refactor export/import commands to extend GfshCommand andâ€¦ (#2894)


-import org.apache.geode.internal.cache.execute.InternalFunction;
+import org.apache.geode.management.cli.CliFunction;
-public class ExportDataFunction implements InternalFunction {
+public class ExportDataFunction extends CliFunction {
-  public void execute(FunctionContext context) {
+  public CliFunctionResult executeFunction(FunctionContext context) throws Exception {
+    CliFunctionResult result;
-    try {
-      Cache cache = ((InternalCache) context.getCache()).getCacheForProcessingClientRequests();
-      Region<?, ?> region = cache.getRegion(regionName);
-      String hostName = cache.getDistributedSystem().getDistributedMember().getHost();
-      if (region != null) {
-        RegionSnapshotService<?, ?> snapshotService = region.getSnapshotService();
-        final File exportFile = new File(fileName);
-        if (parallel) {
-          SnapshotOptions options = new SnapshotOptionsImpl<>().setParallelMode(true);
-          snapshotService.save(exportFile, SnapshotFormat.GEMFIRE, options);
-        } else {
-          snapshotService.save(exportFile, SnapshotFormat.GEMFIRE);
-        }
-        String successMessage = CliStrings.format(CliStrings.EXPORT_DATA__SUCCESS__MESSAGE,
-            regionName, exportFile.getCanonicalPath(), hostName);
-        context.getResultSender().lastResult(successMessage);
+    Cache cache = ((InternalCache) context.getCache()).getCacheForProcessingClientRequests();
+    Region<?, ?> region = cache.getRegion(regionName);
+    String hostName = cache.getDistributedSystem().getDistributedMember().getHost();
+    if (region != null) {
+      RegionSnapshotService<?, ?> snapshotService = region.getSnapshotService();
+      final File exportFile = new File(fileName);
+      if (parallel) {
+        SnapshotOptions options = new SnapshotOptionsImpl<>().setParallelMode(true);
+        snapshotService.save(exportFile, SnapshotFormat.GEMFIRE, options);
-        throw new IllegalArgumentException(
-            CliStrings.format(CliStrings.REGION_NOT_FOUND, regionName));
+        snapshotService.save(exportFile, SnapshotFormat.GEMFIRE);
-    } catch (Exception e) {
-      context.getResultSender().sendException(e);
+      String successMessage = CliStrings.format(CliStrings.EXPORT_DATA__SUCCESS__MESSAGE,
+          regionName, exportFile.getCanonicalPath(), hostName);
+      result = new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
+          successMessage);
+    } else {
+      result = new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.ERROR,
+          CliStrings.format(CliStrings.REGION_NOT_FOUND, regionName));
+
+    return result;

MOV26 UPD40 UPD43 UPD42 INS43 INS42 MOV43 MOV8 INS42 MOV60 MOV25 MOV60 MOV60 MOV60 INS60 INS41 INS43 INS59 INS42 INS42 INS42 INS21 INS7 INS7 INS42 INS14 INS42 MOV14 INS43 INS32 INS40 INS42 UPD43 INS32 INS40 INS42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 DEL39 DEL42 DEL32 DEL42 DEL42 DEL32 DEL53 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8