GEODE-2197: refactor cluster config

 * not to save the xml, properties in the file system.
 * the cc region's change listener is to download the jar from other locators

-import java.util.HashSet;
-import java.util.List;
-import java.util.Properties;
-import java.util.Set;
-
-import org.apache.logging.log4j.Logger;
-
+import org.apache.logging.log4j.Logger;
+
+import java.util.HashSet;
+import java.util.List;
+import java.util.Objects;
+import java.util.Optional;
+import java.util.Properties;
+import java.util.Set;
- * 
+ *
-  private final AddJarFunction saveJarFunction = new AddJarFunction();
+  private final AddJarFunction addJarFunction = new AddJarFunction();
-      String[] groups) {
+                                                    String[] groups) {
-    return saveConfigChangesAllLocators(saveJarFunction, args);
+    return saveConfigChanges(addJarFunction, args);
-    return saveConfigChangesAllLocators(deleteJarFunction, args);
+    return saveConfigChanges(deleteJarFunction, args);
-    boolean success = false;
-    if (!locators.isEmpty()) {
-      for (DistributedMember locator : locators) {
-        ResultCollector<?, ?> rc = CliUtil.executeFunction(function, args, locator);
-        @SuppressWarnings("unchecked")
-        List<ConfigurationChangeResult> results = (List<ConfigurationChangeResult>) rc.getResult();
-        if (!results.isEmpty()) {
-          ConfigurationChangeResult configChangeResult = results.get(0);
-          if (configChangeResult.isSuccessful()) {
-            logger.info("Configuration change successful");
-            success = true;
-            break;
-          } else {
-            logger.info("Failed to save the configuration change. {}", configChangeResult);
-            success = false;
-          }
-        }
-      }
+    boolean success = locators.stream()
+        .map((DistributedMember locator) -> saveConfigChangeOnLocator(locator, function, args))
+        .anyMatch((Boolean result) -> result);
+
+    if (!success) {
+      logger.error("Failed to save the configuration change.");
+
+  private boolean saveConfigChangeOnLocator(DistributedMember locator, Function function,
+                                            Object[] args) {
+    ResultCollector<?, ?> rc = CliUtil.executeFunction(function, args, locator);
+    List<ConfigurationChangeResult> results = (List<ConfigurationChangeResult>) rc.getResult();
-  private boolean saveConfigChangesAllLocators(Function function, Object[] args) {
-    if (!isSharedConfigEnabled) {
-      return true;
-    }
-    boolean success = true;
-    Set<DistributedMember> locators = new HashSet<DistributedMember>(
-        cache.getDistributionManager().getAllHostedLocatorsWithSharedConfiguration().keySet());
+    Optional<ConfigurationChangeResult> result = results.stream()
+        .filter(Objects::nonNull)
+        .filter(ConfigurationChangeResult::isSuccessful)
+        .findFirst();
-    if (!locators.isEmpty()) {
-      ResultCollector<?, ?> rc = CliUtil.executeFunction(function, args, locators);
-      @SuppressWarnings("unchecked")
-      List<ConfigurationChangeResult> results = (List<ConfigurationChangeResult>) rc.getResult();
-
-      if (!results.isEmpty()) {
-        for (ConfigurationChangeResult configChangeResult : results) {
-          if (!configChangeResult.isSuccessful()) {
-            success = false;
-            break;
-          }
-        }
-      }
-    }
-    return success;
+    return result.isPresent();

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 MOV31 INS40 INS40 UPD42 UPD42 MOV44 MOV8 UPD42 MOV25 MOV60 INS60 MOV25 MOV41 INS60 INS41 MOV39 INS59 INS74 INS59 INS32 UPD42 UPD42 UPD42 MOV42 INS32 INS42 INS43 MOV43 UPD42 MOV42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS86 INS32 INS42 INS32 UPD42 MOV42 INS32 INS42 INS86 INS44 INS42 INS42 INS42 INS45 INS32 UPD42 MOV42 INS90 INS42 INS42 INS44 INS32 UPD43 MOV43 UPD42 MOV42 INS32 UPD42 MOV42 INS90 INS42 INS42 INS43 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL10 DEL42 DEL38 DEL9 DEL41 DEL8 DEL25 DEL9 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL76 DEL76 DEL74 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL45 DEL79 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL44 DEL42 DEL8 DEL70 DEL8 DEL25 DEL8 DEL25 DEL42 DEL41 DEL42 DEL45 DEL79 DEL42 DEL42 DEL32 DEL38 DEL34 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL42 DEL45 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL70 DEL8 DEL25 DEL8