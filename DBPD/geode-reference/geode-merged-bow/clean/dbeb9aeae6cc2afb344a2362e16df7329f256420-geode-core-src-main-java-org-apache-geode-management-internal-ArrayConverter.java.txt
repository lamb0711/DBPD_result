Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  ArrayConverter(Type targetType, ArrayType openArrayType,
-      Class openArrayClass, OpenTypeConverter elementConverter) {
+  ArrayConverter(Type targetType, ArrayType openArrayType, Class openArrayClass,
+      OpenTypeConverter elementConverter) {
-    final Object[] openArray = (Object[]) Array.newInstance(getOpenClass()
-        .getComponentType(), len);
+    final Object[] openArray = (Object[]) Array.newInstance(getOpenClass().getComponentType(), len);
-  public final Object fromNonNullOpenValue(Object openValue)
-      throws InvalidObjectException {
+  public final Object fromNonNullOpenValue(Object openValue) throws InvalidObjectException {
-    valueArray = (Object[]) Array.newInstance((Class<?>) componentType,
-        openArray.length);
+    valueArray = (Object[]) Array.newInstance((Class<?>) componentType, openArray.length);
-   * OpenTypeConverter for the elements of this array. If this is an array of
-   * arrays, the converter converts the second-level arrays, not the deepest
-   * elements.
+   * OpenTypeConverter for the elements of this array. If this is an array of arrays, the converter
+   * converts the second-level arrays, not the deepest elements.

UPD66 UPD66 DEL66