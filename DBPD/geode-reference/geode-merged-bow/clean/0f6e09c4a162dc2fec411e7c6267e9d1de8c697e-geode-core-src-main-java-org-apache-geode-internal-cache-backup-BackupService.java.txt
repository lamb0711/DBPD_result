GEODE-3800: Replace BackupManager with BackupService (#1372)

* GEODE-3800: Convert backups into a service
+import java.io.IOException;
+import java.util.concurrent.atomic.AtomicReference;
-import org.apache.geode.distributed.internal.DistributionManager;
-public class BackupManager {
+public class BackupService {
-  private final InternalDistributedMember sender;
-  private BackupTask task;
-  private Future<HashSet<PersistentID>> taskFuture;
+  private transient Future<HashSet<PersistentID>> taskFuture;
+  final AtomicReference<BackupTask> currentTask = new AtomicReference<>();
-  public BackupManager(InternalDistributedMember sender, InternalCache cache) {
+  public BackupService(InternalCache cache) {
-    this.sender = sender;
-    LoggingThreadGroup group = LoggingThreadGroup.createThreadGroup("BackupManager Thread", logger);
+    LoggingThreadGroup group = LoggingThreadGroup.createThreadGroup("BackupService Thread", logger);
-            new Thread(group, command, "BackupManagerThread" + this.threadId.incrementAndGet());
+            new Thread(group, command, "BackupServiceThread" + this.threadId.incrementAndGet());
-  public void startBackup() {
-    task = new BackupTask(cache);
-    taskFuture = executor.submit(task::backup);
+  public HashSet<PersistentID> prepareBackup(InternalDistributedMember sender)
+      throws IOException, InterruptedException {
+    validateRequestingAdmin(sender);
+    BackupTask backupTask = new BackupTask(cache);
+    if (!currentTask.compareAndSet(null, backupTask)) {
+      throw new IOException("Another backup already in progress");
+    }
+    taskFuture = executor.submit(() -> backupTask.backup());
+    return backupTask.awaitLockAcquisition();
-  public HashSet<PersistentID> getDiskStoreIdsToBackup() throws InterruptedException {
-    return task.awaitLockAcquisition();
-  }
-
-  public HashSet<PersistentID> doBackup(File targetDir, File baselineDir, boolean abort) {
+  public HashSet<PersistentID> doBackup(File targetDir, File baselineDir, boolean abort)
+      throws IOException {
+    BackupTask task = currentTask.get();
+    if (task == null) {
+      if (abort) {
+        return new HashSet<>();
+      }
+      throw new IOException("No backup currently in progress");
+    }
+    } finally {
+      cleanup();
-    task.waitForBackup();
+    BackupTask task = currentTask.get();
+    if (task != null) {
+      task.waitTillBackupFilesAreCopiedToTemporaryLocation();
+    }
-    return task.getBackupForDiskStore(diskStore);
+    BackupTask task = currentTask.get();
+    return task == null ? null : task.getBackupForDiskStore(diskStore);
-  public void validateRequestingAdmin() {
+  void validateRequestingAdmin(InternalDistributedMember sender) {
-    Set allIds = getDistributionManager().addAllMembershipListenerAndGetAllIds(membershipListener);
+    Set allIds =
+        cache.getDistributionManager().addAllMembershipListenerAndGetAllIds(membershipListener);
-  private void cleanup() {
-    getDistributionManager().removeAllMembershipListener(membershipListener);
-    cache.clearBackupManager();
-  }
-
-  private DistributionManager getDistributionManager() {
-    return cache.getInternalDistributedSystem().getDistributionManager();
+  void cleanup() {
+    cache.getDistributionManager().removeAllMembershipListener(membershipListener);
+    currentTask.set(null);

MOV26 INS26 MOV23 UPD40 INS40 UPD42 INS31 INS83 INS74 UPD42 INS83 MOV74 INS42 INS44 INS43 MOV43 INS8 INS43 INS8 MOV44 INS43 MOV43 UPD42 INS14 INS43 INS42 INS42 INS21 INS60 INS25 MOV21 MOV41 INS42 INS60 INS25 INS60 INS25 INS60 UPD42 MOV42 INS74 INS42 INS32 INS43 INS59 INS38 INS8 INS43 INS59 INS27 INS8 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS16 INS43 INS42 INS42 INS42 UPD42 MOV42 MOV14 INS32 INS53 UPD42 INS42 INS42 INS32 INS42 INS33 INS25 INS53 INS21 INS42 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS32 INS27 INS33 MOV32 UPD42 UPD42 INS33 INS42 UPD45 INS42 INS42 INS33 INS42 INS14 INS86 INS42 INS42 INS42 INS8 INS14 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS43 INS45 INS32 INS41 INS43 INS45 INS42 UPD42 INS42 INS42 INS42 INS42 INS14 INS42 INS74 INS43 INS42 UPD45 DEL83 DEL59 DEL23 DEL83 DEL43 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL90 DEL83 DEL39 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL8 DEL31 DEL8 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31