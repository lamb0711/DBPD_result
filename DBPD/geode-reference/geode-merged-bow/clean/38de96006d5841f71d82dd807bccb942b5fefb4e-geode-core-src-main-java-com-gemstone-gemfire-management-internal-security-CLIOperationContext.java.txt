GEODE-17: refactor ManagementIntercepter and MBeanServerWrapper

-import java.lang.annotation.Annotation;
-import java.lang.reflect.Method;
-import java.util.HashMap;
-import java.util.Map;
-
-import org.springframework.shell.event.ParseResult;
-
-import com.gemstone.gemfire.GemFireConfigException;
-import com.gemstone.gemfire.management.internal.cli.i18n.CliStrings;
-import static com.gemstone.gemfire.management.internal.security.ResourceConstants.*;
+import org.springframework.shell.event.ParseResult;
+
+import java.lang.annotation.Annotation;
+import java.lang.reflect.Method;
+import java.util.HashMap;
+import java.util.Map;
-	
-	private OperationCode code = OperationCode.RESOURCE;
-	private ResourceOperationCode resourceCode = null;
+
-	private static Map<String,ResourceOperationCode> commandToCodeMapping = new HashMap<String,ResourceOperationCode>();
+	private static Map<String,ResourceOperation> commandToCodeMapping = new HashMap<String,ResourceOperation>();
-		GfshParseResult parseResult = (GfshParseResult) parseCommand(commandString);		
-		this.commandOptions = parseResult.getParamValueStrings();		
-    this.resourceCode = findResourceCode(parseResult.getCommandName());
-    this.code = findOperationCode(parseResult.getCommandName());
+		GfshParseResult parseResult = (GfshParseResult) parseCommand(commandString);
+		ResourceOperation op = findResourceCode(parseResult.getCommandName());
+		setResourceOperation(op);
+		this.commandOptions = parseResult.getParamValueStrings();
-
-  /**
-   * This method returns OperationCode for command. Some commands perform data
-   * operations, for such commands OperationCode returned is not RESOURCE but
-   * corresponding data operation as defined in OperationCode
-   *
-   * @param commandName
-   * @return OperationCode
-   */
-  private OperationCode findOperationCode(String commandName) {
-
-    if(CliStrings.GET.equals(commandName) || CliStrings.LOCATE_ENTRY.equals(commandName))
-      return OperationCode.GET;
-
-    if(CliStrings.PUT.equals(commandName))
-      return OperationCode.PUT;
-
-    if(CliStrings.QUERY.equals(commandName))
-      return OperationCode.QUERY;
-
-    if (CliStrings.REMOVE.equals(commandName)) {
-      if (commandOptions.containsKey(CliStrings.REMOVE__ALL)
-          && "true".equals(commandOptions.get(CliStrings.REMOVE__ALL))) {
-        return OperationCode.REMOVEALL;
-      } else
-        return OperationCode.DESTROY;
-    }
-
-    if(CliStrings.CLOSE_DURABLE_CQS.equals(commandName)) {
-      return OperationCode.CLOSE_CQ;
-    }
-
-    if(CliStrings.CREATE_REGION.equals(commandName)) {
-      return OperationCode.REGION_CREATE;
-    }
-
-    if(CliStrings.DESTROY_REGION.equals(commandName)) {
-      return OperationCode.REGION_DESTROY;
-    }
-
-    if(CliStrings.EXECUTE_FUNCTION.equals(commandName)) {
-      return OperationCode.EXECUTE_FUNCTION;
-    }
-
-    //"stop cq"
-    //"removeall",
-    //"get durable cqs",
-    return OperationCode.RESOURCE;
-	}
-	  
-		boolean found=false;
-				cache(commandTarget.getCommandName(),(ResourceOperation)an);
-				found=true;
+				commandToCodeMapping.put(commandTarget.getCommandName(), (ResourceOperation)an);
-		if(!found)
-			cache(commandTarget.getCommandName(),null);
-    ResourceOperationCode resourceOpCode = null;
-		
-		if (op != null) {
-			String opString = op.operation();
-			if (opString != null)
-        resourceOpCode = ResourceOperationCode.parse(opString);
-		}
-		
-    if(resourceOpCode==null){
-      if (commandName.startsWith(GETTER_DESCRIBE) || commandName.startsWith(GETTER_LIST)
-          || commandName.startsWith(GETTER_STATUS)) {
-        resourceOpCode = ResourceOperationCode.LIST_DS;
-			} 
-		}
-
-		
-    if(resourceOpCode!=null) {
-      commandToCodeMapping.put(commandName, resourceOpCode);
-		} else {			
-      throw new GemFireConfigException(
-          "Error while configuring authorization for gfsh commands. No opCode defined for command " + commandName);
-
-		}
+		commandToCodeMapping.put(commandName, op);
-	private static ResourceOperationCode findResourceCode(String commandName) {		
+	private static ResourceOperation findResourceCode(String commandName) {
-
-
-	@Override
-	public OperationCode getOperationCode() {		
-		return code;
-	}
-
-	@Override
-	public ResourceOperationCode getResourceOperationCode() {
-		return resourceCode;
-	}
-	
-	  str = "CLIOperationContext(resourceCode=" + resourceCode + ") options=" + commandOptions+")";
+	  str = "CLIOperationContext(resourceCode=" + getOperationCode() + ") options=" + commandOptions+")";

MOV26 MOV26 MOV26 MOV26 MOV26 UPD74 INS8 UPD43 UPD43 INS60 INS21 MOV21 UPD42 UPD42 UPD74 INS43 INS59 INS32 UPD43 INS42 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS32 INS42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL40 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL32 DEL32 DEL7 DEL21 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL27 DEL40 DEL41 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL41 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL41 DEL25 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL45 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL27 DEL40 DEL41 DEL8 DEL40 DEL41 DEL25 DEL8 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL41 DEL8 DEL25 DEL40 DEL41 DEL8 DEL31 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL9 DEL7 DEL21 DEL42 DEL38 DEL42 DEL42 DEL42 DEL32 DEL33 DEL32 DEL21 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL25 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42