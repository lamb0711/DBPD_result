Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Factory for creating instances of {@link LuceneQuery}.
- * To get an instance of this factory call {@link LuceneService#createLuceneQueryFactory}.
+ * Factory for creating instances of {@link LuceneQuery}. To get an instance of this factory call
+ * {@link LuceneService#createLuceneQueryFactory}.
- * To use this factory configure it with the <code>set</code> methods and then
- * call {@link #create} to produce a {@link LuceneQuery} instance.
+ * To use this factory configure it with the <code>set</code> methods and then call {@link #create}
+ * to produce a {@link LuceneQuery} instance.
-  
+
-  
+
-   *  Default page size of result is 0, which means no pagination
+   * Default page size of result is 0, which means no pagination
-  
+
-   * Set page size for a query result. The default page size is 0 which means no pagination.
-   * If specified negative value, throw IllegalArgumentException
+   * Set page size for a query result. The default page size is 0 which means no pagination. If
+   * specified negative value, throw IllegalArgumentException
+   * 
-  
+
-   * Set max limit of result for a query
-   * If specified limit is less or equal to zero, throw IllegalArgumentException
+   * Set max limit of result for a query If specified limit is less or equal to zero, throw
+   * IllegalArgumentException
+   * 
-  
+
-  
+
-   * Create wrapper object for lucene's QueryParser object using default standard analyzer.
-   * The queryString is using lucene QueryParser's syntax. QueryParser is for easy-to-use 
-   * with human understandable syntax. 
-   *  
+   * Create wrapper object for lucene's QueryParser object using default standard analyzer. The
+   * queryString is using lucene QueryParser's syntax. QueryParser is for easy-to-use with human
+   * understandable syntax.
+   * 
-  public <K, V> LuceneQuery<K, V> create(String indexName, String regionName, String queryString, String defaultField);
+  public <K, V> LuceneQuery<K, V> create(String indexName, String regionName, String queryString,
+      String defaultField);
-   * Creates a wrapper object for Lucene's Query object. This {@link LuceneQuery} builder method could be used in
-   * advanced cases, such as cases where Lucene's Query object construction needs Lucene's API over query string.
+   * Creates a wrapper object for Lucene's Query object. This {@link LuceneQuery} builder method
+   * could be used in advanced cases, such as cases where Lucene's Query object construction needs
+   * Lucene's API over query string.
-  public <K, V> LuceneQuery<K, V> create(String indexName, String regionName, LuceneQueryProvider provider);
+  public <K, V> LuceneQuery<K, V> create(String indexName, String regionName,
+      LuceneQueryProvider provider);

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 DEL66 DEL66