Merge branch 'release/1.4.0'

+import static org.awaitility.Awaitility.await;
+import java.util.Map;
+import java.util.concurrent.TimeUnit;
+import org.apache.commons.lang.ArrayUtils;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.management.DistributedRegionMXBean;
+import org.apache.geode.management.DistributedSystemMXBean;
+import org.apache.geode.management.ManagementService;
+import org.apache.geode.management.internal.cli.CliUtil;
-        if (this instanceof ServerStarterRule)
+        if (this instanceof ServerStarterRule) {
-        else {
+        } else {
+  public DistributedRegionMXBean getRegionMBean(String regionName) {
+    return getManagementService().getDistributedRegionMXBean(regionName);
+  }
+
+  public ManagementService getManagementService() {
+    ManagementService managementService =
+        ManagementService.getExistingManagementService(getCache());
+    if (managementService == null) {
+      throw new IllegalStateException("Management service is not available on this member");
+    }
+    return managementService;
+  }
+
+  public abstract InternalCache getCache();
+
+  public void waitTillRegionIsReadyOnServers(String regionName, int serverCount) {
+    await().atMost(30, TimeUnit.SECONDS).until(() -> getRegionMBean(regionName) != null);
+    await().atMost(30, TimeUnit.SECONDS)
+        .until(() -> getRegionMBean(regionName).getMembers().length == serverCount);
+  }
+
+  private long getDiskStoreCount(String diskStoreName) {
+    DistributedSystemMXBean dsMXBean = getManagementService().getDistributedSystemMXBean();
+    Map<String, String[]> diskstores = dsMXBean.listMemberDiskstore();
+    long count =
+        diskstores.values().stream().filter(x -> ArrayUtils.contains(x, diskStoreName)).count();
+
+    return count;
+  }
+
+  public void waitTilGatewaySendersAreReady(int expectedGatewayObjectCount) throws Exception {
+    DistributedSystemMXBean dsMXBean = getManagementService().getDistributedSystemMXBean();
+    await().atMost(30, TimeUnit.SECONDS)
+        .until(() -> dsMXBean.listGatewaySenderObjectNames().length == expectedGatewayObjectCount);
+  }
+
+  public void waitTillDiskStoreIsReady(String diskstoreName, int serverCount) {
+    await().atMost(30, TimeUnit.SECONDS)
+        .until(() -> getDiskStoreCount(diskstoreName) == serverCount);
+  }
+
+  public void waitTillAsyncEventQueuesAreReadyOnServers(String queueId, int serverCount) {
+    await().atMost(2, TimeUnit.SECONDS).until(
+        () -> CliUtil.getMembersWithAsyncEventQueue(getCache(), queueId).size() == serverCount);
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS83 INS43 INS42 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS41 INS42 INS60 INS25 INS41 INS42 INS43 INS42 INS39 INS42 INS21 INS21 INS43 INS42 INS60 INS60 INS60 INS41 INS39 INS42 INS42 INS60 INS21 INS43 INS42 INS39 INS42 INS21 INS43 INS42 INS39 INS42 INS21 INS42 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS32 INS42 INS43 INS59 INS74 INS59 INS39 INS59 INS42 INS43 INS59 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS53 INS32 INS42 INS86 INS32 INS42 INS86 INS42 INS42 INS32 INS43 INS43 INS5 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS86 INS32 INS42 INS86 INS32 INS42 INS86 INS42 INS42 INS42 INS32 INS14 INS32 INS42 INS34 INS40 INS27 INS32 INS42 INS34 INS40 INS27 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS34 INS40 INS27 INS32 INS42 INS34 INS40 INS27 INS32 INS42 INS34 INS40 INS27 INS42 INS43 INS45 INS42 INS32 INS33 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS86 INS42 INS42 INS22 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS59 INS32 INS32 INS42 INS42 INS42 INS32 INS42 MOV21 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42