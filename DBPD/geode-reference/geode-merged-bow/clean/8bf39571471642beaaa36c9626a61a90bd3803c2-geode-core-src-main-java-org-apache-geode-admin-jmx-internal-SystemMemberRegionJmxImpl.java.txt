Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * MBean representation of {@link 
- * org.apache.geode.admin.SystemMemberRegion}.
+ * MBean representation of {@link org.apache.geode.admin.SystemMemberRegion}.
- * @since GemFire     3.5
+ * @since GemFire 3.5
-public class SystemMemberRegionJmxImpl 
-extends org.apache.geode.admin.internal.SystemMemberRegionImpl
-implements org.apache.geode.admin.jmx.internal.ManagedResource {
+public class SystemMemberRegionJmxImpl
+    extends org.apache.geode.admin.internal.SystemMemberRegionImpl
+    implements org.apache.geode.admin.jmx.internal.ManagedResource {
-  //   Constructor(s)
+  // Constructor(s)
-  /** 
+  /**
-   * @param cache   the cache this region belongs to
-   * @param region  internal region to delegate real work to
+   * @param cache the cache this region belongs to
+   * @param region internal region to delegate real work to
-  public SystemMemberRegionJmxImpl(SystemMemberCacheImpl cache, 
-                                   Region region)
-                            throws org.apache.geode.admin.AdminException {
+  public SystemMemberRegionJmxImpl(SystemMemberCacheImpl cache, Region region)
+      throws org.apache.geode.admin.AdminException {
-  throws org.apache.geode.admin.AdminException {
-    
+      throws org.apache.geode.admin.AdminException {
+
-    this.mbeanName = new StringBuffer("GemFire.Cache:")
-        .append("path=")
-        .append(MBeanUtil.makeCompliantMBeanNameProperty(getFullPath()))
-        .append(",name=")
-        .append(MBeanUtil.makeCompliantMBeanNameProperty(cache.getName()))
-        .append(",id=")
-        .append(cache.getId())
-        .append(",owner=")
+    this.mbeanName = new StringBuffer("GemFire.Cache:").append("path=")
+        .append(MBeanUtil.makeCompliantMBeanNameProperty(getFullPath())).append(",name=")
+        .append(MBeanUtil.makeCompliantMBeanNameProperty(cache.getName())).append(",id=")
+        .append(cache.getId()).append(",owner=")
-      
+
-  
+
-  //   ManagedResource implementation
+  // ManagedResource implementation
-  
+
-  
-	public String getMBeanName() {
-		return this.mbeanName;
-	}
-  
-	public ModelMBean getModelMBean() {
-		return this.modelMBean;
-	}
-	public void setModelMBean(ModelMBean modelMBean) {
-		this.modelMBean = modelMBean;
-	}
-  
+
+  public String getMBeanName() {
+    return this.mbeanName;
+  }
+
+  public ModelMBean getModelMBean() {
+    return this.modelMBean;
+  }
+
+  public void setModelMBean(ModelMBean modelMBean) {
+    this.modelMBean = modelMBean;
+  }
+
-  
+
-   * Checks equality of the given object with <code>this</code> based on the
-   * type (Class) and the MBean Name returned by <code>getMBeanName()</code>
-   * methods.
+   * Checks equality of the given object with <code>this</code> based on the type (Class) and the
+   * MBean Name returned by <code>getMBeanName()</code> methods.
-   * @param obj
-   *          object to check equality with
-   * @return true if the given object is if the same type and its MBean Name is
-   *         same as <code>this</code> object's MBean Name, false otherwise
+   * @param obj object to check equality with
+   * @return true if the given object is if the same type and its MBean Name is same as
+   *         <code>this</code> object's MBean Name, false otherwise
-    if ( !(obj instanceof SystemMemberRegionJmxImpl) ) {
+    if (!(obj instanceof SystemMemberRegionJmxImpl)) {
-    
-    SystemMemberRegionJmxImpl other = (SystemMemberRegionJmxImpl) obj; 
-    
+
+    SystemMemberRegionJmxImpl other = (SystemMemberRegionJmxImpl) obj;
+
-   * Returns hash code for <code>this</code> object which is based on the MBean 
-   * Name generated. 
+   * Returns hash code for <code>this</code> object which is based on the MBean Name generated.

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66