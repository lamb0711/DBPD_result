Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-   * If >= 0 then it is relative to the first byte of field data.
-   * Otherwise it is relative to the base determined by
-   * vlfOffsetIndex.
+   * If >= 0 then it is relative to the first byte of field data. Otherwise it is relative to the
+   * base determined by vlfOffsetIndex.
-   * if >= 0 then it is the index of the vlfOffsets that
-   * this field should use as its base to find its data.
-   * If < 0 then it should be -1 which means the base
-   * is the first byte after the last byte of field data.
+   * if >= 0 then it is the index of the vlfOffsets that this field should use as its base to find
+   * its data. If < 0 then it should be -1 which means the base is the first byte after the last
+   * byte of field data.
-  
+
-  
+
+   * 
-  public PdxField() {
-  }
+  public PdxField() {}
-  public PdxField(String fieldName, int index, int varId,
-      FieldType type, boolean identityField) {
+  public PdxField(String fieldName, int index, int varId, FieldType type, boolean identityField) {
-   * Used by {@link PdxInstanceImpl#equals(Object)} to act as if it has
-   * a field whose value is always the default.
+   * Used by {@link PdxInstanceImpl#equals(Object)} to act as if it has a field whose value is
+   * always the default.
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-    int hash =1 ;
-    if(fieldName != null) {
-      hash = hash*31 + fieldName.hashCode();
+    int hash = 1;
+    if (fieldName != null) {
+      hash = hash * 31 + fieldName.hashCode();
-    if(type != null) {
+    if (type != null) {
-    
+
-  //We don't compare the offsets here, because
-  //this method is to see if two different PDXTypes
-  //have equivalent fields. See PdxReaderImpl.equals.
+  // We don't compare the offsets here, because
+  // this method is to see if two different PDXTypes
+  // have equivalent fields. See PdxReaderImpl.equals.
-    }  
-    PdxField  otherVFT = (PdxField)other;
-  
+    }
+    PdxField otherVFT = (PdxField) other;
+
-    if (otherVFT.fieldName.equals(this.fieldName)
-        && this.isDeleted() == otherVFT.isDeleted()
+    if (otherVFT.fieldName.equals(this.fieldName) && this.isDeleted() == otherVFT.isDeleted()
-    return this.fieldName + ":" + this.type
-    + (isDeleted() ? ":DELETED" : "")
-    + (isIdentityField() ? ":identity" : "")
-    + ":" + this.fieldIndex 
-    + ((this.varLenFieldSeqId > 0) ? (":" + this.varLenFieldSeqId) : "")
-    + ":idx0(relativeOffset)=" + this.relativeOffset + ":idx1(vlfOffsetIndex)=" + this.vlfOffsetIndex;
+    return this.fieldName + ":" + this.type + (isDeleted() ? ":DELETED" : "")
+        + (isIdentityField() ? ":identity" : "") + ":" + this.fieldIndex
+        + ((this.varLenFieldSeqId > 0) ? (":" + this.varLenFieldSeqId) : "")
+        + ":idx0(relativeOffset)=" + this.relativeOffset + ":idx1(vlfOffsetIndex)="
+        + this.vlfOffsetIndex;
-    
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66