GEODE-4961: Allowing custom serialization formats with the protobuf protocol

Adding a new ValueSerializer interface that users can implement to
control the serialization format of data sent using the protobuf
protocol.

ValueSerializers are registered on the server side using the java
ServiceLoader mechanism. They are selected by the client using a new
valueFormat field in the handshake.

Renamed AuthenticationRequest to HandshakeRequest. Credentials
and valueFormat are all sent as part of a single HandshakeRequest.

Renamed the connection states to make them a little easier to
understand, and removed some duplicate states.

The new states are RequireVersion, RequireAuthentication,
AcceptMessages, InvalidSecurity, and TerminateConnection



+import java.util.Properties;
+
+import org.apache.shiro.subject.Subject;
+
-import org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService;
+import org.apache.geode.internal.protocol.protobuf.v1.operations.security.HandshakeRequestOperationHandler;
+import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.security.AuthenticationFailedException;
-public class NoSecurityProtobufConnectionStateProcessor
-    implements ProtobufConnectionStateProcessor {
+public class RequireAuthentication implements ConnectionState {
+
+  public RequireAuthentication() {}
+
-  public void validateOperation(Object message, ProtobufSerializationService serializer,
-      MessageExecutionContext messageContext, ProtobufOperationContext operationContext)
-      throws ConnectionStateException {}
-
-  public ProtobufConnectionAuthenticatingStateProcessor allowAuthentication()
+  public void validateOperation(ProtobufOperationContext operationContext)
-    throw new ConnectionStateException(BasicTypes.ErrorCode.AUTHENTICATION_NOT_SUPPORTED,
-        "This machine is not set to require user authentication.");
+    if (!(operationContext.getOperationHandler() instanceof HandshakeRequestOperationHandler)) {
+      throw new ConnectionStateException(BasicTypes.ErrorCode.AUTHENTICATION_FAILED,
+          "User has not yet authenticated");
+    }
+

INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 UPD42 UPD43 UPD42 UPD42 MOV78 INS39 INS42 MOV44 MOV43 INS8 INS25 INS38 MOV8 INS36 INS62 INS32 INS43 UPD40 UPD45 INS42 INS42 UPD42 MOV42 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43