Feature/geode 3583 storage (#1285)

* This resolves the following tickets: GEODE-4196, GEODE-4197, GEODE-4198, GEODE-4199
   GEODE-4200, GEODE-4201, GEODE-4203, GEODE-4204, GEODE-4205, GEODE-4206
   GEODE-4208, GEODE-4209, GEODE-4210, GEODE-4212, and GEODE-4213
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-  private final ServerRegionProxy firstProxy;
-
-  private ServerLocation serverAffinityLocation;
-
-  /** the operations performed in the current transaction are held in this list */
-  private List<TransactionalOperation> recordedOperations =
-      Collections.synchronizedList(new LinkedList<TransactionalOperation>());
-
-  /** lock request for obtaining local locks */
-  private TXLockRequest lockReq;
-
-  private Runnable internalAfterLocalLocks;
-
+  private final ServerRegionProxy firstProxy;
+  private final InternalCache cache;
+  private final DistributionManager dm;
+
+  /** the operations performed in the current transaction are held in this list */
+  private final List<TransactionalOperation> recordedOperations =
+      Collections.synchronizedList(new LinkedList<TransactionalOperation>());
+
+  private ServerLocation serverAffinityLocation;
+
+  /** lock request for obtaining local locks */
+  private TXLockRequest lockReq;
+
+  private Runnable internalAfterLocalLocks;
+
-  public ClientTXStateStub(TXStateProxy stateProxy, DistributedMember target,
-      LocalRegion firstRegion) {
+  public ClientTXStateStub(InternalCache cache, DistributionManager dm, TXStateProxy stateProxy,
+      DistributedMember target, LocalRegion firstRegion) {
-    firstProxy = firstRegion.getServerProxy();
+    this.cache = cache;
+    this.dm = dm;
+    this.firstProxy = firstRegion.getServerProxy();
+  TXLockRequest createTXLockRequest() {
+    return new TXLockRequest();
+  }
+
+  TXRegionLockRequestImpl createTXRegionLockRequestImpl(InternalCache cache, LocalRegion region) {
+    return new TXRegionLockRequestImpl(cache, region);
+  }
+
-    lockReq = new TXLockRequest();
-    InternalCache cache = GemFireCacheImpl.getExisting("");
+    lockReq = createTXLockRequest();
-          rlr = new TXRegionLockRequestImpl(cache.getRegionByPath(txOp.getRegionName()));
+          rlr = createTXRegionLockRequestImpl(cache, cache.getRegionByPath(txOp.getRegionName()));
-    InternalCache cache = GemFireCacheImpl.getInstance();
+      // we can probably delete this block because cache is now a final var
-    InternalDistributedSystem ds = cache.getInternalDistributedSystem();
-    DistributionManager dm = ds.getDistributionManager();
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override

MOV23 MOV23 MOV31 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS44 INS44 INS43 INS42 INS8 INS43 INS42 INS44 INS44 INS8 INS78 INS78 INS78 INS78 INS78 INS78 INS42 INS42 INS42 INS42 MOV43 INS42 MOV43 INS42 INS21 INS21 INS42 INS41 INS42 MOV43 INS42 INS43 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 MOV14 INS42 INS14 INS22 INS42 INS22 INS42 INS22 MOV43 INS42 INS42 INS32 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS32 INS42 INS42 MOV32 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL14 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60