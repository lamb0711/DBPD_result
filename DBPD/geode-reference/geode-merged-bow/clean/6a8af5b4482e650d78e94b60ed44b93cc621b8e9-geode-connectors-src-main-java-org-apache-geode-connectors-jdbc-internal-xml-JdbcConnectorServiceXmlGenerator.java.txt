GEODE-4160: fix gfsh describe jdbc-connection (#1223)

* GEODE-4160: fix gfsh describe jdbc-connection

If the connection had no parameters set, then running
gfsh describe jdbc-connection would fail with an NPE.

-    XmlGeneratorUtils.addAttribute(attributes, USER, config.getUser());
-    XmlGeneratorUtils.addAttribute(attributes, PASSWORD, config.getPassword());
-    XmlGeneratorUtils.addAttribute(attributes, PARAMETERS, createParametersString(config));
+    if (config.getUser() != null) {
+      XmlGeneratorUtils.addAttribute(attributes, USER, config.getUser());
+    }
+    if (config.getPassword() != null) {
+      XmlGeneratorUtils.addAttribute(attributes, PASSWORD, config.getPassword());
+    }
+    if (config.getParameters() != null) {
+      XmlGeneratorUtils.addAttribute(attributes, PARAMETERS, createParametersString(config));
+    }
-    XmlGeneratorUtils.addAttribute(attributes, TABLE, mapping.getTableName());
-    XmlGeneratorUtils.addAttribute(attributes, PDX_CLASS, mapping.getPdxClassName());
-    XmlGeneratorUtils.addAttribute(attributes, PRIMARY_KEY_IN_VALUE,
-        Boolean.toString(mapping.isPrimaryKeyInValue()));
-
-    XmlGeneratorUtils.startElement(handler, PREFIX, ElementType.REGION_MAPPING.getTypeName(),
-        attributes);
-    if (mapping.getFieldToColumnMap() != null) {
-      addFieldMappings(handler, mapping.getFieldToColumnMap());
+    if (mapping.getTableName() != null) {
+      XmlGeneratorUtils.addAttribute(attributes, TABLE, mapping.getTableName());
-    XmlGeneratorUtils.endElement(handler, PREFIX, ElementType.REGION_MAPPING.getTypeName());
+    if (mapping.getPdxClassName() != null) {
+      XmlGeneratorUtils.addAttribute(attributes, PDX_CLASS, mapping.getPdxClassName());
+    }
+    if (mapping.isPrimaryKeyInValue() != null) {
+      XmlGeneratorUtils.addAttribute(attributes, PRIMARY_KEY_IN_VALUE,
+          Boolean.toString(mapping.isPrimaryKeyInValue()));
+    }
+
+    if (mapping.getFieldToColumnMap() != null) {
+      XmlGeneratorUtils.startElement(handler, PREFIX, ElementType.REGION_MAPPING.getTypeName(),
+          attributes);
+      addFieldMappings(handler, mapping.getFieldToColumnMap());
+      XmlGeneratorUtils.endElement(handler, PREFIX, ElementType.REGION_MAPPING.getTypeName());
+    }
-    Properties properties = config.getConnectionProperties();
+    assert config.getParameters() != null;
-    for (Map.Entry<Object, Object> entry : properties.entrySet()) {
-      Object key = entry.getKey();
-      if (!key.equals(USER) && !key.equals(PASSWORD)) {
-        if (stringBuilder.length() > 0) {
-          stringBuilder.append(",");
-        }
-        stringBuilder.append(key).append(PARAMS_DELIMITER).append(entry.getValue());
+    for (Map.Entry<String, String> entry : config.getParameters().entrySet()) {
+      if (stringBuilder.length() > 0) {
+        stringBuilder.append(",");
+      stringBuilder.append(entry.getKey()).append(PARAMS_DELIMITER).append(entry.getValue());

MOV8 INS25 INS25 INS25 INS25 INS25 INS25 INS6 MOV60 INS70 MOV41 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS44 INS32 MOV8 INS32 INS33 MOV21 INS32 INS33 MOV21 INS32 INS33 MOV21 INS32 INS33 MOV21 INS32 INS33 MOV21 INS32 INS33 MOV21 MOV21 MOV21 INS32 INS33 INS74 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 MOV43 INS43 INS43 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 MOV32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL32 DEL38 DEL42 DEL32 DEL38 DEL27 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL32 DEL70 DEL8