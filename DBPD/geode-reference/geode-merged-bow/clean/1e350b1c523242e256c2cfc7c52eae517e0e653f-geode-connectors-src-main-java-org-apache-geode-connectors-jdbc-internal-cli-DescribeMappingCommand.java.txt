Merge pull request #3032 from BenjaminPerryRoss/feature/GEODE-6187

Feature/geode 6187
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__CATALOG_NAME;
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__DATA_SOURCE_NAME;
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__ID_NAME;
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__PDX_NAME;
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__REGION_NAME;
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__SCHEMA_NAME;
-import static org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.CREATE_MAPPING__TABLE_NAME;
+import static org.apache.geode.connectors.util.internal.MappingConstants.REGION_NAME;
-import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
+import org.apache.geode.connectors.util.internal.DescribeMappingResult;
-  static final String DESCRIBE_MAPPING__HELP = EXPERIMENTAL + "Describe the specified JDBC mapping";
-  static final String DESCRIBE_MAPPING__REGION_NAME = "region";
-  static final String DESCRIBE_MAPPING__REGION_NAME__HELP =
+  private static final String DESCRIBE_MAPPING__HELP =
+      EXPERIMENTAL + "Describe the specified JDBC mapping";
+  private static final String DESCRIBE_MAPPING__REGION_NAME = REGION_NAME;
+  private static final String DESCRIBE_MAPPING__REGION_NAME__HELP =
-  static final String RESULT_SECTION_NAME = "MappingDescription";
+  private static final String RESULT_SECTION_NAME = "MappingDescription";
-    RegionMapping mapping = null;
+    DescribeMappingResult describeMappingResult = null;
-        mapping = (RegionMapping) result.getResultObject();
+        describeMappingResult = (DescribeMappingResult) result.getResultObject();
-    if (mapping == null) {
+    if (describeMappingResult == null) {
-    fillResultData(mapping, resultModel);
+    fillResultData(describeMappingResult, resultModel);
-  private void fillResultData(RegionMapping mapping, ResultModel resultModel) {
+  private void fillResultData(DescribeMappingResult describeMappingResult,
+      ResultModel resultModel) {
-    sectionModel.addData(CREATE_MAPPING__REGION_NAME, mapping.getRegionName());
-    sectionModel.addData(CREATE_MAPPING__DATA_SOURCE_NAME, mapping.getDataSourceName());
-    sectionModel.addData(CREATE_MAPPING__TABLE_NAME, mapping.getTableName());
-    sectionModel.addData(CREATE_MAPPING__PDX_NAME, mapping.getPdxName());
-    sectionModel.addData(CREATE_MAPPING__ID_NAME, mapping.getIds());
-    sectionModel.addData(CREATE_MAPPING__CATALOG_NAME, mapping.getCatalog());
-    sectionModel.addData(CREATE_MAPPING__SCHEMA_NAME, mapping.getSchema());
+    describeMappingResult.getAttributeMap().forEach(sectionModel::addData);

UPD40 UPD40 INS83 INS83 INS83 INS83 INS42 UPD43 UPD42 INS21 UPD43 UPD42 INS32 UPD42 UPD42 UPD42 UPD42 MOV32 UPD42 MOV42 INS90 UPD42 UPD42 INS42 INS42 UPD42 UPD43 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL45 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21