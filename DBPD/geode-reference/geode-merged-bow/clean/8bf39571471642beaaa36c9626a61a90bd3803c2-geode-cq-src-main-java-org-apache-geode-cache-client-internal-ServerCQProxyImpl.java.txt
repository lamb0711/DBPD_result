Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ * 
+   * 
+
-   * Creates a server CQ proxy given using the same pool as that of
-   * the given server proxy.
+   * Creates a server CQ proxy given using the same pool as that of the given server proxy.
+   * 
+   * 
-  public Object create(ClientCQ cq)
-  {
+  public Object create(ClientCQ cq) {
-    byte regionDataPolicyOrdinal = cq.getCqBaseRegion()==null ? (byte) 0 : cq.getCqBaseRegion()
-        .getAttributes().getDataPolicy().ordinal;
-    return CreateCQOp.execute(this.pool, cq.getName(), cq.getQueryString(),
-        CqStateImpl.RUNNING, cq.isDurable(), regionDataPolicyOrdinal);
+    byte regionDataPolicyOrdinal = cq.getCqBaseRegion() == null ? (byte) 0
+        : cq.getCqBaseRegion().getAttributes().getDataPolicy().ordinal;
+    return CreateCQOp.execute(this.pool, cq.getName(), cq.getQueryString(), CqStateImpl.RUNNING,
+        cq.isDurable(), regionDataPolicyOrdinal);
-  
+
+   * 
-  public Object createOn(String cqName, Connection conn, String queryStr,
-      int cqState, boolean isDurable, byte regionDataPolicy)
-  {
-    
-    return CreateCQOp.executeOn(this.pool, conn, cqName, queryStr, cqState,
-        isDurable, regionDataPolicy);
+  public Object createOn(String cqName, Connection conn, String queryStr, int cqState,
+      boolean isDurable, byte regionDataPolicy) {
+
+    return CreateCQOp.executeOn(this.pool, conn, cqName, queryStr, cqState, isDurable,
+        regionDataPolicy);
-  
+
+   * 
-  public SelectResults createWithIR(ClientCQ cq)
-  {
+  public SelectResults createWithIR(ClientCQ cq) {
-    byte regionDataPolicyOrdinal = cq.getCqBaseRegion()==null ? (byte) 0 : cq.getCqBaseRegion()
-        .getAttributes().getDataPolicy().ordinal;
-    return CreateCQWithIROp.execute(this.pool, cq.getName(), cq
-        .getQueryString(), CqStateImpl.RUNNING, cq.isDurable(),regionDataPolicyOrdinal);
+    byte regionDataPolicyOrdinal = cq.getCqBaseRegion() == null ? (byte) 0
+        : cq.getCqBaseRegion().getAttributes().getDataPolicy().ordinal;
+    return CreateCQWithIROp.execute(this.pool, cq.getName(), cq.getQueryString(),
+        CqStateImpl.RUNNING, cq.isDurable(), regionDataPolicyOrdinal);
+   * 
+   * 
-  
+
-    return GetDurableCQsOp.execute((ExecutablePool)pool);
+    return GetDurableCQsOp.execute((ExecutablePool) pool);

UPD66 DEL66