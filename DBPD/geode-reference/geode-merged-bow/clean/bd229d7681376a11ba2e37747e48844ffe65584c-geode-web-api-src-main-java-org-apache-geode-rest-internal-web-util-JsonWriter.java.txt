GEODE-1993: postprocess region/key in developer rest api

* This closes #276

-import java.io.IOException;
-import java.math.BigDecimal;
-import java.math.BigInteger;
-import java.nio.charset.Charset;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Date;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import org.springframework.hateoas.Link;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.MediaType;
-import org.springframework.util.CollectionUtils;
-
-import org.apache.geode.rest.internal.web.exception.GemfireRestException;
+import org.springframework.hateoas.Link;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.MediaType;
+import org.springframework.util.CollectionUtils;
+
+import java.io.IOException;
+import java.math.BigDecimal;
+import java.math.BigInteger;
+import java.nio.charset.Charset;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
- * 
+ *
-    } else if (value.getClass().equals(Date.class)) {
-      generator.writeObject((Date) value);
+      // } else if (value.getClass().equals(Date.class)) {
+      // generator.writeObject((Date) value);
-        // TODO:: can value be a domain object...? As we have configured PdxInstance based storage,
-        // Throw GemfireRestException for value of type domain objects.
-
-        // TODO:Do we need to convert domain objects into the JSON using ObjectMapper. There is no
-        // gurantee that domain class is in classpath.
-        /*
-         * ObjectMapper mapper = new ObjectMapper(); mapper.setDateFormat(new
-         * SimpleDateFormat("MM/dd/yyyy"));
-         * mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
-         * mapper.configure(com.fasterxml.jackson.core.JsonParser.Feature.
-         * ALLOW_UNQUOTED_FIELD_NAMES, true); mapper.writeValueAsString(value)
-         * 
-         * Object classInstance = mapper.readValue(JSON, Class.forName(className));
-         */
-        throw new GemfireRestException("Requested data could not convert into REST format[JSON] ");
+        generator.writeObject(value);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV25 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS21 INS32 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL14 DEL53 DEL25