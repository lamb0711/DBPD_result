Feature/geode 5558 (#2297)

* GEODE-5558: Cleanup to DistributedLockServiceDUnitTest, some to DLockService

* Use only new style invoke() calls
* Unboxing
* Lambdas
* commented code
* And more...
* cleanup DLockService typecasts.

Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>

* Remove early return from testGrantTokenCleanup

Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>

-      DLockToken token = (DLockToken) this.tokens.get(name);
+      DLockToken token = this.tokens.get(name);
-      Set unusedTokens = Collections.EMPTY_SET;
-      for (Iterator iter = this.tokens.values().iterator(); iter.hasNext();) {
-        DLockToken token = (DLockToken) iter.next();
+      Set<DLockToken> unusedTokens = Collections.emptySet();
+      for (DLockToken token : this.tokens.values()) {
-              unusedTokens = new HashSet();
+              unusedTokens = new HashSet<>();
-      for (Iterator iter = unusedTokens.iterator(); iter.hasNext();) {
-        DLockToken token = (DLockToken) iter.next();
+      for (DLockToken token : unusedTokens) {
-      for (Iterator iter = this.tokens.values().iterator(); iter.hasNext();) {
-        DLockToken token = (DLockToken) iter.next();
+      for (DLockToken token : this.tokens.values()) {
-      for (Iterator iter = this.tokens.values().iterator(); iter.hasNext();) {
-        DLockToken token = (DLockToken) iter.next();
+      for (DLockToken token : this.tokens.values()) {
-        for (Iterator iter = this.tokens.values().iterator(); iter.hasNext();) {
-          DLockToken token = (DLockToken) iter.next();
+        for (DLockToken token : this.tokens.values()) {
-      return (DLockToken) this.tokens.get(name);
+      return this.tokens.get(name);
-    return (DLockToken) this.tokens.get(name);
+    return this.tokens.get(name);
-      DLockToken token = (DLockToken) this.tokens.get(name);
+      DLockToken token = this.tokens.get(name);
-      for (Iterator iter = this.tokens.values().iterator(); iter.hasNext();) {
-        DLockToken token = (DLockToken) iter.next();
+      for (DLockToken token : this.tokens.values()) {
-      for (Iterator iter = this.tokens.entrySet().iterator(); iter.hasNext();) {
-        Map.Entry entry = (Map.Entry) iter.next();
+      for (Map.Entry<Object, DLockToken> entry : this.tokens.entrySet()) {
-        DLockToken token = (DLockToken) entry.getValue();
+        DLockToken token = entry.getValue();

MOV32 INS60 INS70 INS70 INS70 INS70 INS70 INS70 INS74 INS59 INS44 MOV32 MOV8 INS44 INS42 MOV8 INS44 MOV32 MOV8 INS44 MOV32 MOV8 MOV32 MOV43 INS44 MOV32 MOV8 INS44 MOV32 MOV8 MOV32 MOV43 MOV43 MOV42 INS32 MOV43 INS42 MOV43 INS42 MOV43 INS42 MOV43 INS42 INS70 MOV32 MOV43 INS42 INS74 INS42 UPD42 MOV42 UPD42 MOV42 INS44 MOV32 MOV8 MOV43 INS43 MOV43 MOV43 MOV43 INS42 UPD42 MOV42 MOV32 INS74 MOV43 DEL42 DEL43 DEL11 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL40 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL11 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL11 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24