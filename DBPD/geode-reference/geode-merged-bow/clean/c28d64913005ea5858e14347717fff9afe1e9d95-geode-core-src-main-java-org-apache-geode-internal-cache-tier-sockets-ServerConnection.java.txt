Merge branch 'release/1.4.0'

-import static org.apache.geode.distributed.ConfigurationProperties.*;
+import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_CLIENT_AUTHENTICATOR;
-  final protected CacheServerStats stats;
+  protected final CacheServerStats stats;
-  /** Tracks the id of the most recent batch to which a reply has been sent */
+  /**
+   * Tracks the id of the most recent batch to which a reply has been sent
+   */
-   * 
+   *
-   * 
-   * 
+   *
+   *
-  static private final ThreadLocal<Byte> executeFunctionOnLocalNodeOnly = new ThreadLocal<Byte>() {
+  private static final ThreadLocal<Byte> executeFunctionOnLocalNodeOnly = new ThreadLocal<Byte>() {
-  static public void executeFunctionOnLocalNodeOnly(Byte value) {
+  public static void executeFunctionOnLocalNodeOnly(Byte value) {
-  static public Byte isExecuteFunctionOnLocalNodeOnly() {
+  public static Byte isExecuteFunctionOnLocalNodeOnly() {
-      if (!getCommunicationMode().isWAN())
+      if (!getCommunicationMode().isWAN()) {
+      }
+          String messageType = MessageType.getString(this.requestMsg.getMessageType());
+            logger.debug("Bound {} with uniqueId {} for message {} with {}", subject.getPrincipal(),
+                uniqueId, messageType, this.getName());
+          } else if (uniqueId == 0) {
+            logger.debug("No unique ID yet. {}, {}", messageType, this.getName());
+          } else {
+            logger.error("Failed to bind the subject of uniqueId {} for message {} with {}",
+                uniqueId, messageType, this.getName());
+            throw new AuthenticationRequiredException("Failed to find the authenticated user.");
+      {
+      }
-    if (retCua == null)
+    if (retCua == null) {
+    }
-        if (!removed)
+        if (!removed) {
+        }
-         * 
+         *
-
-        logger.info(this.clientUserAuths);
+
-      } catch (java.nio.channels.ClosedChannelException ignore) {
-        // ok shutting down
-      } catch (CancelException e) {
+      } catch (java.nio.channels.ClosedChannelException | CancelException ignore) {
+
-    /* this.sKey = */getSelectableChannel().register(s, SelectionKey.OP_READ, this);
+    getSelectableChannel().register(s, SelectionKey.OP_READ, this);
-   *
+  /**
+   * Returns the client's read-timeout setting. This is used in the client health monitor to timeout
+   * connections that have taken too long & the client will have already given up waiting for a
+   * response. Certain messages also may include an override to the normal read-timeout, such as a
+   * query or a putAll.
+   */
-    if (this.requestSpecificTimeout == -1)
+    if (this.requestSpecificTimeout == -1) {
-    else
+    } else {
+    }
-  /** returns the name of this connection */
+  /**
+   * returns the name of this connection
+   */
-    if (!AcceptorImpl.isAuthenticationRequired())
+    if (!AcceptorImpl.isAuthenticationRequired()) {
+    }
-    if (AcceptorImpl.isIntegratedSecurity())
+    if (AcceptorImpl.isIntegratedSecurity()) {
+    }
-    if (!AcceptorImpl.isAuthenticationRequired())
+    if (!AcceptorImpl.isAuthenticationRequired()) {
+    }
-    if (AcceptorImpl.isIntegratedSecurity())
+    if (AcceptorImpl.isIntegratedSecurity()) {
+    }
-  /** returns the member ID byte array to be used for creating EventID objects */
+  /**
+   * returns the member ID byte array to be used for creating EventID objects
+   */

UPD40 INS83 INS83 UPD83 UPD83 UPD83 UPD83 INS29 INS65 INS25 INS25 MOV25 MOV25 UPD66 INS8 INS66 INS66 INS66 INS66 INS8 INS8 UPD66 MOV38 INS8 MOV32 INS8 INS8 INS8 UPD66 INS8 MOV41 MOV41 MOV41 MOV41 MOV41 MOV41 MOV41 INS8 MOV21 MOV21 INS8 INS84 INS60 INS25 MOV21 MOV43 MOV43 INS43 INS59 MOV27 MOV8 INS25 INS42 INS42 INS32 INS21 INS27 INS8 INS8 INS42 INS42 INS32 INS32 INS42 INS34 INS21 INS21 INS53 INS22 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS32 INS32 INS14 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS43 INS45 INS52 INS42 INS52 INS42 INS42 DEL83 DEL83 DEL25 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL44 DEL8 DEL12 DEL25 DEL25