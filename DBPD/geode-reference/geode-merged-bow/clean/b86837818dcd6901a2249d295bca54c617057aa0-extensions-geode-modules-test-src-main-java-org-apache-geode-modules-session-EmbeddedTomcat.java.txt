GEODE-6875: Remove unused & deprecated API usage (#3813)

- Fixed warnings.
- Replaced deprecated API in Http Session.
- Replaced usage of internal API in Http Session.
- Removed unused classes and methods in Http Session.
-import javax.servlet.ServletException;
-
-import org.apache.catalina.Valve;
-
-  private String contextPath = null;
-  private Embedded container = null;
+  private int port;
+  private Embedded container;
+  private Context rootContext;
-  /**
-   * The directory to create the Tomcat server configuration under.
-   */
-  private String catalinaHome = "tomcat";
-
-  /**
-   * The port to run the Tomcat server on.
-   */
-  private int port = 8089;
-
-  /**
-   * The classes directory for the web application being run.
-   */
-  private String classesDir = "target/classes";
-
-  private Context rootContext = null;
-
-  private Engine engine;
-
-  /**
-   * The web resources directory for the web application being run.
-   */
-  private String webappDir = "";
-
-  public EmbeddedTomcat(String contextPath, int port, String jvmRoute)
-      throws MalformedURLException {
-    this.contextPath = contextPath;
+  EmbeddedTomcat(int port, String jvmRoute) throws MalformedURLException {
-    container.setCatalinaHome(catalinaHome);
+    // The directory to create the Tomcat server configuration under.
+    container.setCatalinaHome("tomcat");
-    if (classesDir != null) {
-      loader.addRepository(new File(classesDir).toURI().toURL().toString());
-    }
+    // The classes directory for the web application being run.
+    loader.addRepository(new File("target/classes").toURI().toURL().toString());
+    // The web resources directory for the web application being run.
+    String webappDir = "";
+
-    engine = container.createEngine();
+    Engine engine = container.createEngine();
-  public void startContainer() throws LifecycleException {
+  void startContainer() throws LifecycleException {
-    Runtime.getRuntime().addShutdownHook(new Thread() {
-      @Override
-      public void run() {
-        stopContainer();
-      }
-    });
+    Runtime.getRuntime().addShutdownHook(new Thread(this::stopContainer));
-  public void stopContainer() {
+  void stopContainer() {
-  public StandardWrapper addServlet(String path, String name, String clazz)
-      throws ServletException {
+  StandardWrapper addServlet(String path, String name, String clazz) {
-    // servlet.load();
-  public Embedded getEmbedded() {
+  Embedded getEmbedded() {
-  public Context getRootContext() {
+  Context getRootContext() {
-  public String getPath() {
-    return contextPath;
-  }
-
-  public void setPath(String path) {
-    this.contextPath = path;
-  }
-
-
-  public void addValve(Valve valve) {
-    ((StandardEngine) engine).addValve(valve);
-  }
-
-  public void removeValve(Valve valve) {
-    ((StandardEngine) engine).removeValve(valve);
-  }

MOV43 UPD42 MOV21 INS60 INS60 MOV43 MOV59 MOV43 INS59 INS45 INS42 MOV32 INS90 INS52 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL83 DEL42 DEL33 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL66 DEL65 DEL29 DEL34 DEL66 DEL65 DEL29 DEL42 DEL43 DEL45 DEL33 DEL83 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL23 DEL83 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL7 DEL21 DEL83 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL83 DEL83 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31