Revert "GEODE-2113 Implement SSL over NIO"

Regression testing encountered some hangs when using message "chunking"
in TCPConduit.  This needs to be investigated and fixed.

This reverts commit a075b0e1a13a7a57378973bbfb7f14a63f29bf87.

-import java.io.EOFException;
-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.internal.net.Buffers;
-import org.apache.geode.internal.net.NioFilter;
-public class MsgReader {
-  private static final Logger logger = LogService.getLogger();
-
+public abstract class MsgReader {
-  private final NioFilter ioFilter;
-  private final ByteBuffer peerNetData;
-  private int lastReadPosition;
-  private int lastProcessedPosition;
-
-  public MsgReader(Connection conn, NioFilter nioFilter, ByteBuffer peerNetData, Version version) {
+  public MsgReader(Connection conn, Version version) {
-    this.ioFilter = nioFilter;
-    this.peerNetData = peerNetData;
-    ByteBuffer buffer = ioFilter.getUnwrappedBuffer(peerNetData);
-    buffer.position(0).limit(0);
-
-
-    nioInputBuffer.position(nioInputBuffer.limit());
-
-    header.messageLength = nioMessageLength;
-    header.messageType = nioMessageType;
-    header.messageId = nioMsgId;
+    header.nioMessageLength = nioMessageLength;
+    header.nioMessageType = nioMessageType;
+    header.nioMsgId = nioMsgId;
-    ByteBuffer nioInputBuffer = readAtLeast(header.messageLength);
-    this.getStats().incMessagesBeingReceived(true, header.messageLength);
+    ByteBuffer nioInputBuffer = readAtLeast(header.nioMessageLength);
+    this.getStats().incMessagesBeingReceived(true, header.nioMessageLength);
-      this.getStats().decMessagesBeingReceived(header.messageLength);
-      ioFilter.doneReading(nioInputBuffer);
+      this.getStats().decMessagesBeingReceived(header.nioMessageLength);
-    ByteBuffer nioInputBuffer = readAtLeast(header.messageLength);
-    this.getStats().incMessagesBeingReceived(md.size() == 0, header.messageLength);
-    md.addChunk(nioInputBuffer, header.messageLength);
+    ByteBuffer nioInputBuffer = readAtLeast(header.nioMessageLength);
+    this.getStats().incMessagesBeingReceived(md.size() == 0, header.nioMessageLength);
+    md.addChunk(nioInputBuffer, header.nioMessageLength);
-  public ByteBuffer readAtLeast(int bytes) throws IOException {
-
-    ByteBuffer unwrappedBuffer =
-        ioFilter.ensureUnwrappedCapacity(bytes, peerNetData, Buffers.BufferType.UNTRACKED,
-            getStats());
-
-    while ((lastReadPosition - lastProcessedPosition) < bytes) {
-      unwrappedBuffer.limit(unwrappedBuffer.capacity());
-      unwrappedBuffer.position(lastReadPosition);
-
-      int amountRead = conn.getSocket().getChannel().read(peerNetData);
-      if (amountRead < 0) {
-        throw new EOFException();
-      }
-      if (amountRead > 0) {
-        peerNetData.flip();
-        unwrappedBuffer = ioFilter.unwrap(peerNetData);
-        lastReadPosition = unwrappedBuffer.position();
-      }
-    }
-    unwrappedBuffer.limit(lastProcessedPosition + bytes);
-    unwrappedBuffer.position(lastProcessedPosition);
-    lastProcessedPosition = unwrappedBuffer.limit();
-
-    return unwrappedBuffer;
-  }
+  public abstract ByteBuffer readAtLeast(int bytes) throws IOException;
-    int messageLength;
-    byte messageType;
-    short messageId;
+    int nioMessageLength;
+    byte nioMessageType;
+    short nioMsgId;
-    public int getMessageLength() {
-      return messageLength;
+    public int getNioMessageLength() {
+      return nioMessageLength;
-    public byte getMessageType() {
-      return messageType;
+    public byte getNioMessageType() {
+      return nioMessageType;
-    public short getMessageId() {
-      return messageId;
+    public short getNioMessageId() {
+      return nioMsgId;
-

INS83 INS42 INS83 MOV21 UPD42 UPD42 UPD42 MOV43 MOV43 UPD42 UPD42 UPD42 UPD40 UPD40 UPD40 UPD42 INS9 UPD40 MOV21 UPD40 UPD40 UPD42 UPD42 UPD42 UPD40 UPD40 UPD42 UPD40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL34 DEL32 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL9 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL42 DEL34 DEL27 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL42 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL41 DEL8