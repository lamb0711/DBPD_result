new unit tests and code clean-up

New unit tests to increase code coverage.  I also tinkered with
trying to get EclEmma output from DUnit ChildVMs but it seems to
be run in a shutdownHook in parallel with the DUnitLauncher
shutdownHook.

-      long locatorWaitTime = services.getConfig().getLocatorWaitTime() * 1000;
+      long locatorWaitTime = ((long)services.getConfig().getLocatorWaitTime()) * 1000L;
-      viewRequests.notify();
+      viewRequests.notifyAll();
-    long giveUpTime = System.currentTimeMillis() + services.getConfig().getLocatorWaitTime() * 1000;
+    long giveUpTime = System.currentTimeMillis() + ((long)services.getConfig().getLocatorWaitTime() * 1000L);
-      joinResponse.notify();
+      joinResponse.notifyAll();
-        joinResponse.notify();
+        joinResponse.notifyAll();
-      int failurePoint = (int) (Math.round(51 * oldWeight) / 100.0);
+      int failurePoint = (int) (Math.round(51.0 * oldWeight) / 100.0);
+      assert m instanceof JoinRequestMessage;
+      assert m instanceof JoinResponseMessage;
+      assert m instanceof InstallViewMessage;
+      assert m instanceof ViewAckMessage;
+      assert m instanceof LeaveRequestMessage;
+      assert m instanceof RemoveMemberMessage;
+      assert m instanceof FindCoordinatorRequest;
+      assert m instanceof FindCoordinatorResponse;
+      assert m instanceof NetworkPartitionMessage;
-        notify();
+        notifyAll();
-        if (!this.waiting) {
-          // if we've set waiting to false due to incoming messages then
-          // we've discounted receiving any other responses from the
-          // remaining members due to leave/crash notification
-          result = pendingRemovals;
-        } else {
-          result.addAll(pendingRemovals);
-          this.waiting = false;
+        synchronized(this) {
+          if (!this.waiting) {
+            // if we've set waiting to false due to incoming messages then
+            // we've discounted receiving any other responses from the
+            // remaining members due to leave/crash notification
+            result = pendingRemovals;
+          } else {
+            result.addAll(pendingRemovals);
+            this.waiting = false;
+          }
-        viewRequests.notify();
+        viewRequests.notifyAll();
-        int size = joinReqs.size();

INS6 INS6 INS6 INS6 INS6 INS6 INS6 INS6 INS6 INS62 INS62 INS62 INS62 INS62 INS62 INS62 INS62 INS62 INS8 INS36 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS51 UPD42 MOV27 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 MOV8 INS36 UPD34 INS11 UPD34 UPD42 UPD42 INS11 INS39 MOV32 UPD42 INS39 MOV32 UPD34 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60