Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A wrapper that holds a client to server connection and
- * a server to client connection.
+ * A wrapper that holds a client to server connection and a server to client connection.
- *  The clientToServerConnection should not
- *  be used outside of this class.
+ * The clientToServerConnection should not be used outside of this class.
-  private final AtomicReference/*<Connection>*/ clientToServerConn = new AtomicReference();
+  private final AtomicReference/* <Connection> */ clientToServerConn = new AtomicReference();
-  
+
-    throw new UnsupportedOperationException("Subscription connections should only be closed by subscription manager");
+    throw new UnsupportedOperationException(
+        "Subscription connections should only be closed by subscription manager");
-  
+
-    if(conn != null) {
+    if (conn != null) {
-  
+
-    Connection conn = (Connection)this.clientToServerConn.get();
+    Connection conn = (Connection) this.clientToServerConn.get();
-  
+
-    Connection currentConn = (Connection)this.clientToServerConn.get();
-    if(currentConn != null) {
+    Connection currentConn = (Connection) this.clientToServerConn.get();
+    if (currentConn != null) {
-      } catch(Exception e) {
+      } catch (Exception e) {
-          logger.debug("SubscriptionConnectionImpl - error destroying client to server connection", e);
+          logger.debug("SubscriptionConnectionImpl - error destroying client to server connection",
+              e);
-    } 
+    }
-    if(currentUpdater != null) {
+    if (currentUpdater != null) {
-      } catch(Exception e) {
+      } catch (Exception e) {
-  
+
-  
+
-  
+
-  
+
-  
+
-    Connection result = (Connection)this.clientToServerConn.get();
+    Connection result = (Connection) this.clientToServerConn.get();
-  
+
-  
+
-   * Indicate that we have, or are about to send
-   * the client create message on this connection.
+   * Indicate that we have, or are about to send the client create message on this connection.
-  
+
-  public String toString() { 
-    Connection result = (Connection)this.clientToServerConn.get();
-    if(result != null) {
+  public String toString() {
+    Connection result = (Connection) this.clientToServerConn.get();
+    if (result != null) {
-  
-  public short getWanSiteVersion(){
+
+  public short getWanSiteVersion() {
-  
+
-  
-  public void setWanSiteVersion(short wanSiteVersion){
+
+  public void setWanSiteVersion(short wanSiteVersion) {
-    ((Connection)this.clientToServerConn.get()).setConnectionID(id);
+    ((Connection) this.clientToServerConn.get()).setConnectionID(id);
-    return ((Connection)this.clientToServerConn.get()).getConnectionID();
+    return ((Connection) this.clientToServerConn.get()).getConnectionID();

UPD66 UPD66 UPD66 DEL66 DEL66 DEL66