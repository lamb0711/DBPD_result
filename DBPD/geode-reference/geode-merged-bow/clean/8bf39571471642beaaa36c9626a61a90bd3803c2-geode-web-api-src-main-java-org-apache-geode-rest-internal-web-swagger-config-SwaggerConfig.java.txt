Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  protected static final List<String> DEFAULT_INCLUDE_PATTERNS = Arrays
-      .asList("/.*");
+  protected static final List<String> DEFAULT_INCLUDE_PATTERNS = Arrays.asList("/.*");
-    return new ApiInfo(
-        LocalizedStrings.SwaggerConfig_VENDOR_PRODUCT_LINE.toLocalizedString(),
+    return new ApiInfo(LocalizedStrings.SwaggerConfig_VENDOR_PRODUCT_LINE.toLocalizedString(),
-   * Adds the Jackson Scala module to the MappingJackson2HttpMessageConverter
-   * registered with Spring. Swagger core models are Scala so we need to be able
-   * to convert to JSON. Also registers some custom serializers needed to
-   * transform Swagger models to Swagger-UI required JSON format.
+   * Adds the Jackson Scala module to the MappingJackson2HttpMessageConverter registered with
+   * Spring. Swagger core models are Scala so we need to be able to convert to JSON. Also registers
+   * some custom serializers needed to transform Swagger models to Swagger-UI required JSON format.
-   * Configure a SwaggerApiResourceListing for each Swagger instance within your
-   * app. e.g. 1. private 2. external APIs 3. ..., required to be a Spring bean
-   * as Spring will call the postConstruct method to bootstrap Swagger scanning.
+   * Configure a SwaggerApiResourceListing for each Swagger instance within your app. e.g. 1.
+   * private 2. external APIs 3. ..., required to be a Spring bean as Spring will call the
+   * postConstruct method to bootstrap Swagger scanning.
-    SwaggerApiResourceListing swaggerApiResourceListing = new SwaggerApiResourceListing(
-        springSwaggerConfig.swaggerCache(), SWAGGER_GROUP);
+    SwaggerApiResourceListing swaggerApiResourceListing =
+        new SwaggerApiResourceListing(springSwaggerConfig.swaggerCache(), SWAGGER_GROUP);
-    swaggerApiResourceListing
-        .setApiListingReferenceScanner(apiListingReferenceScanner());
+    swaggerApiResourceListing.setApiListingReferenceScanner(apiListingReferenceScanner());
-    swaggerApiResourceListing.setAuthorizationTypes(Collections
-        .<AuthorizationType> emptyList());
+    swaggerApiResourceListing.setAuthorizationTypes(Collections.<AuthorizationType>emptyList());
-    swaggerGlobalSettings.setGlobalResponseMessages(springSwaggerConfig
-        .defaultResponseMessages());
-    swaggerGlobalSettings.setIgnorableParameterTypes(springSwaggerConfig
-        .defaultIgnorableParameterTypes());
-    swaggerGlobalSettings.setParameterDataTypes(springSwaggerModelConfig
-        .defaultParameterDataTypes());
+    swaggerGlobalSettings.setGlobalResponseMessages(springSwaggerConfig.defaultResponseMessages());
+    swaggerGlobalSettings
+        .setIgnorableParameterTypes(springSwaggerConfig.defaultIgnorableParameterTypes());
+    swaggerGlobalSettings
+        .setParameterDataTypes(springSwaggerModelConfig.defaultParameterDataTypes());
-   * The ApiListingReferenceScanner does most of the work. It scans the
-   * appropriate Spring RequestMappingHandlerMappings, applies the correct
-   * absolute paths to the generated Swagger resources, and so on.
+   * The ApiListingReferenceScanner does most of the work. It scans the appropriate Spring
+   * RequestMappingHandlerMappings, applies the correct absolute paths to the generated Swagger
+   * resources, and so on.
-    apiListingReferenceScanner
-        .setRequestMappingHandlerMapping(springSwaggerConfig
-            .swaggerRequestMappingHandlerMappings());
+    apiListingReferenceScanner.setRequestMappingHandlerMapping(
+        springSwaggerConfig.swaggerRequestMappingHandlerMappings());
-    apiListingReferenceScanner.setExcludeAnnotations(springSwaggerConfig
-        .defaultExcludeAnnotations());
+    apiListingReferenceScanner
+        .setExcludeAnnotations(springSwaggerConfig.defaultExcludeAnnotations());
-    apiListingReferenceScanner.setResourceGroupingStrategy(springSwaggerConfig
-        .defaultResourceGroupingStrategy());
+    apiListingReferenceScanner
+        .setResourceGroupingStrategy(springSwaggerConfig.defaultResourceGroupingStrategy());
-    apiPathProvider.setDefaultPathProvider(springSwaggerConfig
-        .defaultSwaggerPathProvider());
+    apiPathProvider.setDefaultPathProvider(springSwaggerConfig.defaultSwaggerPathProvider());

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66