Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Factory to create the <code>AsyncEventQueue</code>. 
- * Below example illustrates how to get the instance of factory and create the 
- * <code>AsyncEventQueue</code>.
-<PRE>
+ * Factory to create the <code>AsyncEventQueue</code>. Below example illustrates how to get the
+ * instance of factory and create the <code>AsyncEventQueue</code>.
+ * 
+ * <PRE>
-</PRE>
+ * </PRE>
-   * Sets the maximum amount of memory (in MB) for an
-   * <code>AsyncEventQueue</code>'s queue.
-   * Default is 100 MB.
+   * Sets the maximum amount of memory (in MB) for an <code>AsyncEventQueue</code>'s queue. Default
+   * is 100 MB.
-   * @param memory
-   *          The maximum amount of memory (in MB) for an
-   *          <code>AsyncEventQueue</code>'s queue
+   * @param memory The maximum amount of memory (in MB) for an <code>AsyncEventQueue</code>'s queue
-  
+
-   * Sets whether or not the writing to the disk is synchronous.
-   * Default is true.
+   * Sets whether or not the writing to the disk is synchronous. Default is true.
-   * @param isSynchronous
-   *          boolean if true indicates synchronous writes
-   *  
+   * @param isSynchronous boolean if true indicates synchronous writes
+   * 
-   * Sets the batch size for an <code>AsyncEventQueue</code>'s queue.
-   * Default is 100.
+   * Sets the batch size for an <code>AsyncEventQueue</code>'s queue. Default is 100.
-   * @param size
-   *          The size of batches sent to its <code>AsyncEventListener</code>
+   * @param size The size of batches sent to its <code>AsyncEventListener</code>
-  
+
-   * Sets the batch time interval (in milliseconds) for a <code>AsyncEventQueue</code>.
-   * Default is 5 ms.
+   * Sets the batch time interval (in milliseconds) for a <code>AsyncEventQueue</code>. Default is 5
+   * ms.
-   * @param interval
-   *          The maximum time interval that can elapse before a partial batch
-   *          is sent from a <code>AsyncEventQueue</code>.
+   * @param interval The maximum time interval that can elapse before a partial batch is sent from a
+   *        <code>AsyncEventQueue</code>.
-   * Sets whether the <code>AsyncEventQueue</code> is persistent or not.
-   * Default is false.
+   * Sets whether the <code>AsyncEventQueue</code> is persistent or not. Default is false.
-   * @param isPersistent
-   *          Whether to enable persistence for an <code>AsyncEventQueue</code>.
+   * @param isPersistent Whether to enable persistence for an <code>AsyncEventQueue</code>.
-   * Indicates whether all VMs need to distribute events to remote site. In this
-   * case only the events originating in a particular VM will be in dispatched
-   * in order.
-   * Default is false.
+   * Indicates whether all VMs need to distribute events to remote site. In this case only the
+   * events originating in a particular VM will be in dispatched in order. Default is false.
-   * @param isParallel
-   *          boolean to indicate whether distribution policy is parallel
+   * @param isParallel boolean to indicate whether distribution policy is parallel
-  
+
-   * Sets whether to enable batch conflation for <code>AsyncEventQueue</code>.
-   * Default is false.
+   * Sets whether to enable batch conflation for <code>AsyncEventQueue</code>. Default is false.
-   * @param     isConflation        
-   *              Whether or not to enable batch conflation for batches sent from a 
-   *              <code>AsyncEventQueue</code>
+   * @param isConflation Whether or not to enable batch conflation for batches sent from a
+   *        <code>AsyncEventQueue</code>
-  
+
-   * Sets the number of dispatcher thread.
-   * Default is 5.
+   * Sets the number of dispatcher thread. Default is 5.
-   * Adds a <code>GatewayEventFilter</code> to the attributes of
-   * AsyncEventQueue being created by factory.
+   * Adds a <code>GatewayEventFilter</code> to the attributes of AsyncEventQueue being created by
+   * factory.
-   * @param filter
-   *          GatewayEventFilter
+   * @param filter GatewayEventFilter
-   * Removes the provided <code>GatewayEventFilter</code> from the attributes of
-   * AsyncEventQueue being created by factory.
+   * Removes the provided <code>GatewayEventFilter</code> from the attributes of AsyncEventQueue
+   * being created by factory.
-  public AsyncEventQueueFactory removeGatewayEventFilter(
-      GatewayEventFilter filter);
-  
+  public AsyncEventQueueFactory removeGatewayEventFilter(GatewayEventFilter filter);
+
-   * Sets the order policy for multiple dispatchers.
-   * Default is KEY.
+   * Sets the order policy for multiple dispatchers. Default is KEY.
-  
+
-   * @param filter
-   *          The <code>GatewayEventSubstitutionFilter</code>
+   * @param filter The <code>GatewayEventSubstitutionFilter</code>
-   * Forwards destroy operations from expiration action to AsyncEventQueue.
-   * By default the expiration destroy events are not added to AEQ, by
-   * setting this attribute to true adds destroy event to AEQ.
+   * Forwards destroy operations from expiration action to AsyncEventQueue. By default the
+   * expiration destroy events are not added to AEQ, by setting this attribute to true adds destroy
+   * event to AEQ.
-   * @param forward
-   *        boolean to indicate whether to forward expiration destroy events.
+   * @param forward boolean to indicate whether to forward expiration destroy events.
-   * Creates the <code>AsyncEventQueue</code>. It accepts Id of AsyncEventQueue
-   * and instance of AsyncEventListener. Multiple queues can be created using
-   * Same listener instance. So, the instance of <code>AsyncEventListener</code>
-   * should be thread safe in that case. The <code>AsyncEventListener</code>
-   * will start receiving events when the <code>AsyncEventQueue</code> is
-   * created.
+   * Creates the <code>AsyncEventQueue</code>. It accepts Id of AsyncEventQueue and instance of
+   * AsyncEventListener. Multiple queues can be created using Same listener instance. So, the
+   * instance of <code>AsyncEventListener</code> should be thread safe in that case. The
+   * <code>AsyncEventListener</code> will start receiving events when the
+   * <code>AsyncEventQueue</code> is created.
-   * @param id
-   *          Id of AsyncEventQueue
-   * @param listener
-   *          <code>AsyncEventListener</code> to be added to the regions that
-   *          are configured to use this queue.
+   * @param id Id of AsyncEventQueue
+   * @param listener <code>AsyncEventListener</code> to be added to the regions that are configured
+   *        to use this queue.

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66