GEODE-6369 Cache-creation failure after a successful auto-reconnect causes subsequent NPE

If an error occurs while rebuilding the cache on auto-reconnect & we can't
continue we should throw an exception to any thread waiting for the
reconnect to complete.

If we're unable to contact the cluster configuration service we do not
terminate auto-reconnect attempts.

New members are now only allowed to join after view preparation has
completed.  This will reduce the number of "surprise members" and also
ensures that any old member IDs have been removed from the view.

We now only attempt to use findCoordinatorFromView multiple times if the
view actually changes.  Instead we contact locators again to see if
there are new registrants.

fixing the above exposed other problems in auto-reconnect:

* messages were being thrown away by the location service quorum checker
during auto-reconnect.  some of these were "join" messages that needed
to be delivered to the new membership service

* registrants weren't being removed from the recovered membership view
in the locator.  This confused restarting nodes because the recovered
membership view has stale info in it that they don't want to use

* locator services restart were hanging due to profile interchange being
done under synchronization

-    boolean systemReconnected = this.system.waitUntilReconnected(time, units);
-    if (!systemReconnected) {
-      return false;
+    try {
+      boolean systemReconnected = this.system.waitUntilReconnected(time, units);
+      if (!systemReconnected) {
+        return false;
+      }
+      GemFireCacheImpl cache = getInstance();
+      return cache != null && cache.isInitialized();
+    } catch (CancelException e) {
+      throw new CacheClosedException("Cache could not be recreated", e);
-    GemFireCacheImpl cache = getInstance();
-    return cache != null && cache.isInitialized();

INS8 INS54 MOV8 INS12 INS44 INS8 INS43 INS42 INS53 INS42 INS14 INS43 INS45 INS42 INS42