Merge branch 'feature/GEODE-8' into develop

-// $ANTLR : "oql.g" -> "OQLParser.java"$
+// $ANTLR 2.7.4: "oql.g" -> "OQLParser.java"$
-	int LITERAL_trace = 60;
-	int LITERAL_import = 61;
-	int LITERAL_as = 62;
-	int LITERAL_declare = 63;
-	int LITERAL_define = 64;
-	int LITERAL_query = 65;
-	int LITERAL_undefine = 66;
-	int LITERAL_select = 67;
-	int LITERAL_distinct = 68;
-	int LITERAL_all = 69;
-	int LITERAL_from = 70;
-	int LITERAL_in = 71;
-	int LITERAL_type = 72;
-	int LITERAL_where = 73;
-	int LITERAL_limit = 74;
-	int LITERAL_group = 75;
-	int LITERAL_by = 76;
-	int LITERAL_having = 77;
-	int LITERAL_hint = 78;
-	int LITERAL_order = 79;
-	int LITERAL_asc = 80;
-	int LITERAL_desc = 81;
-	int LITERAL_or = 82;
-	int LITERAL_orelse = 83;
-	int LITERAL_and = 84;
-	int LITERAL_for = 85;
-	int LITERAL_exists = 86;
-	int LITERAL_andthen = 87;
-	int LITERAL_any = 88;
-	int LITERAL_some = 89;
-	int LITERAL_like = 90;
-	int LITERAL_union = 91;
-	int LITERAL_except = 92;
-	int LITERAL_mod = 93;
-	int LITERAL_intersect = 94;
-	int LITERAL_abs = 95;
-	int LITERAL_not = 96;
-	int LITERAL_listtoset = 97;
-	int LITERAL_element = 98;
-	int LITERAL_flatten = 99;
-	int LITERAL_nvl = 100;
-	int LITERAL_to_date = 101;
-	int LITERAL_first = 102;
-	int LITERAL_last = 103;
-	int LITERAL_unique = 104;
-	int LITERAL_sum = 105;
-	int LITERAL_min = 106;
-	int LITERAL_max = 107;
-	int LITERAL_avg = 108;
-	int LITERAL_count = 109;
-	int LITERAL_is_undefined = 110;
-	int LITERAL_is_defined = 111;
-	int LITERAL_struct = 112;
-	int LITERAL_array = 113;
-	int LITERAL_set = 114;
-	int LITERAL_bag = 115;
-	int LITERAL_list = 116;
-	int LITERAL_short = 117;
-	int LITERAL_long = 118;
-	int LITERAL_int = 119;
-	int LITERAL_float = 120;
-	int LITERAL_double = 121;
-	int LITERAL_char = 122;
-	int LITERAL_string = 123;
-	int LITERAL_boolean = 124;
-	int LITERAL_byte = 125;
-	int LITERAL_octet = 126;
-	int LITERAL_enum = 127;
-	int LITERAL_date = 128;
-	int LITERAL_time = 129;
-	int LITERAL_interval = 130;
-	int LITERAL_timestamp = 131;
-	int LITERAL_collection = 132;
-	int LITERAL_dictionary = 133;
-	int LITERAL_map = 134;
-	int LITERAL_nil = 135;
-	int LITERAL_null = 136;
-	int LITERAL_undefined = 137;
-	int LITERAL_true = 138;
-	int LITERAL_false = 139;
-	int NUM_LONG = 140;
-	int NUM_FLOAT = 141;
-	int NUM_DOUBLE = 142;
+	int AGG_FUNC = 60;
+	int SUM = 61;
+	int AVG = 62;
+	int COUNT = 63;
+	int MAX = 64;
+	int MIN = 65;
+	int LITERAL_trace = 66;
+	int LITERAL_import = 67;
+	int LITERAL_as = 68;
+	int LITERAL_declare = 69;
+	int LITERAL_define = 70;
+	int LITERAL_query = 71;
+	int LITERAL_undefine = 72;
+	int LITERAL_select = 73;
+	int LITERAL_distinct = 74;
+	int LITERAL_all = 75;
+	int LITERAL_from = 76;
+	int LITERAL_in = 77;
+	int LITERAL_type = 78;
+	int LITERAL_where = 79;
+	int LITERAL_limit = 80;
+	int LITERAL_group = 81;
+	int LITERAL_by = 82;
+	int LITERAL_having = 83;
+	int LITERAL_hint = 84;
+	int LITERAL_order = 85;
+	int LITERAL_asc = 86;
+	int LITERAL_desc = 87;
+	int LITERAL_or = 88;
+	int LITERAL_orelse = 89;
+	int LITERAL_and = 90;
+	int LITERAL_for = 91;
+	int LITERAL_exists = 92;
+	int LITERAL_andthen = 93;
+	int LITERAL_any = 94;
+	int LITERAL_some = 95;
+	int LITERAL_like = 96;
+	int LITERAL_union = 97;
+	int LITERAL_except = 98;
+	int LITERAL_mod = 99;
+	int LITERAL_intersect = 100;
+	int LITERAL_abs = 101;
+	int LITERAL_not = 102;
+	int LITERAL_listtoset = 103;
+	int LITERAL_element = 104;
+	int LITERAL_flatten = 105;
+	int LITERAL_nvl = 106;
+	int LITERAL_to_date = 107;
+	int LITERAL_first = 108;
+	int LITERAL_last = 109;
+	int LITERAL_unique = 110;
+	int LITERAL_sum = 111;
+	int LITERAL_avg = 112;
+	int LITERAL_min = 113;
+	int LITERAL_max = 114;
+	int LITERAL_count = 115;
+	int LITERAL_is_undefined = 116;
+	int LITERAL_is_defined = 117;
+	int LITERAL_struct = 118;
+	int LITERAL_array = 119;
+	int LITERAL_set = 120;
+	int LITERAL_bag = 121;
+	int LITERAL_list = 122;
+	int LITERAL_short = 123;
+	int LITERAL_long = 124;
+	int LITERAL_int = 125;
+	int LITERAL_float = 126;
+	int LITERAL_double = 127;
+	int LITERAL_char = 128;
+	int LITERAL_string = 129;
+	int LITERAL_boolean = 130;
+	int LITERAL_byte = 131;
+	int LITERAL_octet = 132;
+	int LITERAL_enum = 133;
+	int LITERAL_date = 134;
+	int LITERAL_time = 135;
+	int LITERAL_interval = 136;
+	int LITERAL_timestamp = 137;
+	int LITERAL_collection = 138;
+	int LITERAL_dictionary = 139;
+	int LITERAL_map = 140;
+	int LITERAL_nil = 141;
+	int LITERAL_null = 142;
+	int LITERAL_undefined = 143;
+	int LITERAL_true = 144;
+	int LITERAL_false = 145;
+	int NUM_LONG = 146;
+	int NUM_FLOAT = 147;
+	int NUM_DOUBLE = 148;

INS23 INS23 INS23 INS23 INS23 INS23 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 UPD34 UPD34 UPD34