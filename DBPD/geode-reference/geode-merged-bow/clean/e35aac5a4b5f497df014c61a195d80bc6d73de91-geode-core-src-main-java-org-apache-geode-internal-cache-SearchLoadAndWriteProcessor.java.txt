Merge branch 'release/1.5.0'

-import java.io.NotSerializableException;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.ClusterDistributionManager;
-  public DM distributionManager = null;
+  public DistributionManager distributionManager = null;
-  public void memberJoined(InternalDistributedMember id) {
+  public void memberJoined(DistributionManager distributionManager, InternalDistributedMember id) {
-  public void memberSuspect(InternalDistributedMember id, InternalDistributedMember whoSuspected,
-      String reason) {}
+  public void memberSuspect(DistributionManager distributionManager, InternalDistributedMember id,
+      InternalDistributedMember whoSuspected, String reason) {}
-  public void quorumLost(Set<InternalDistributedMember> failures,
-      List<InternalDistributedMember> remaining) {}
+  public void quorumLost(DistributionManager distributionManager,
+      Set<InternalDistributedMember> failures, List<InternalDistributedMember> remaining) {}
-  public void memberDeparted(final InternalDistributedMember id, final boolean crashed) {
+  public void memberDeparted(DistributionManager distributionManager,
+      final InternalDistributedMember id, final boolean crashed) {
+        obj = this.region.getCache().convertPdxInstanceIfNeeded(obj);
-      DistributionManager dm, VersionTag versionTag) {
+      ClusterDistributionManager dm, VersionTag versionTag) {
-        final DM dm =
+        final DistributionManager dm =
-    nMsg.doGet((DistributionManager) this.distributionManager);
+    nMsg.doGet((ClusterDistributionManager) this.distributionManager);
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    private void doGet(DistributionManager dm) {
+    private void doGet(ClusterDistributionManager dm) {
-      if (dm.getDMType() == DistributionManager.ADMIN_ONLY_DM_TYPE
+      if (dm.getDMType() == ClusterDistributionManager.ADMIN_ONLY_DM_TYPE
-    private void replyWithNull(DistributionManager dm) {
+    private void replyWithNull(ClusterDistributionManager dm) {
-        boolean requestorTimedOut, DistributionManager distributionManager, VersionTag versionTag) {
+        boolean requestorTimedOut, ClusterDistributionManager distributionManager,
+        VersionTag versionTag) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    private void doGet(DistributionManager dm) {
+    private void doGet(ClusterDistributionManager dm) {
-    private void replyWithNull(DistributionManager dm) {
+    private void replyWithNull(ClusterDistributionManager dm) {
-        boolean requestorTimedOut, boolean authoritative, DistributionManager distributionManager,
-        VersionTag versionTag) {
+        boolean requestorTimedOut, boolean authoritative,
+        ClusterDistributionManager distributionManager, VersionTag versionTag) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    private void doLoad(DistributionManager dm) {
+    private void doLoad(ClusterDistributionManager dm) {
+              // no need to call convertPdxInstanceIfNeeded since we are serializing
+              // this into the NetLoadRequestMessage. The loaded object will be deserialized
+              // on the other side and have the correct form in that member.
-    void replyWithException(Exception e, DistributionManager dm) {
+    void replyWithException(Exception e, ClusterDistributionManager dm) {
-        DistributionManager distributionManager, Object aCallbackArgument, Exception e,
+        ClusterDistributionManager distributionManager, Object aCallbackArgument, Exception e,
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-            entryEvtImpl.region = region;
+            entryEvtImpl.setRegion(region);
-        DistributionManager distributionManager, boolean netWriteSucceeded, Exception e,
+        ClusterDistributionManager distributionManager, boolean netWriteSucceeded, Exception e,
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {

UPD40 UPD43 MOV44 INS44 INS44 INS44 UPD42 INS43 INS42 INS43 INS42 INS43 INS42 UPD43 INS44 INS42 INS42 INS42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS43 INS42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 INS21 UPD42 UPD40 INS7 UPD43 INS42 INS32 UPD42 INS32 INS42 INS42 INS22 INS42 INS32 INS52 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL7