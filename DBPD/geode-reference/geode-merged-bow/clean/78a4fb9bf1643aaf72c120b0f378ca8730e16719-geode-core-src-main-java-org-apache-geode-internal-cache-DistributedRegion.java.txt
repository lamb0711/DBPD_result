GEODE-8079: Fix DistributedRegion Validations (#5070)

Attaching a parallel gateway-sender or async-event-queue to a
Replicate Region through the AttributesMutator class now throws an
exception instead of wrongly assigning the dispatcher to the region.

- Fixed several warnings.
- Added unit and distributed tests.
- Refactored WanValidationsDUnitTest.
- Replaced usages of 'junit.Assert' by 'assertj'.
- Changed test methods to use more meaningful names.
- Removed references to old ids used by another ticketing system.
+import static org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueImpl.getAsyncEventQueueIdFromSenderId;
+import static org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueImpl.getSenderIdFromAsyncEventQueueId;
+
-  @Override
-  public void preInitialize() {
-    Set<String> allGatewaySenderIds = getAllGatewaySenderIds();
-
-    if (!allGatewaySenderIds.isEmpty()) {
-      for (GatewaySender sender : cache.getAllGatewaySenders()) {
-        if (sender.isParallel() && allGatewaySenderIds.contains(sender.getId())) {
-          // Once decided to support REPLICATED regions with parallel
-          // gateway-sender/asynchronous-event-queue, ShadowPartitionedRegionForUserRR should be
-          // called and this validation should be removed.
-          if (sender.getId().contains(AsyncEventQueueImpl.ASYNC_EVENT_QUEUE_PREFIX)) {
-            throw new AsyncEventQueueConfigurationException(
-                String.format(
-                    "Parallel Async Event Queue %s can not be used with replicated region %s",
-
-                    AsyncEventQueueImpl.getAsyncEventQueueIdFromSenderId(sender.getId()),
-                    getFullPath()));
-          } else {
-            throw new GatewaySenderConfigurationException(
-                String.format(
-                    "Parallel gateway sender %s can not be used with replicated region %s",
-                    sender.getId(), getFullPath()));
-          }
+  /**
+   * Validates that the GatewaySender/AsyncEventQueue referenced by the {@param asyncDispatcherId}
+   * can be attached to this region; that is, verifies that the dispatcher is not configured as
+   * parallel.
+   *
+   * @param asyncDispatcherId Id of the AsynchronousEventDispatcher to validate.
+   */
+  void validateAsynchronousEventDispatcher(String asyncDispatcherId) {
+    for (GatewaySender sender : getCache().getAllGatewaySenders()) {
+      if (sender.isParallel() && sender.getId().equals(asyncDispatcherId)) {
+        // Once decided to support REPLICATED regions with parallel
+        // gateway-sender/asynchronous-event-queue, ShadowPartitionedRegionForUserRR should be
+        // called and this validation should be removed.
+        if (sender.getId().contains(AsyncEventQueueImpl.ASYNC_EVENT_QUEUE_PREFIX)) {
+          throw new AsyncEventQueueConfigurationException(String.format(
+              "Parallel Async Event Queue %s can not be used with replicated region %s",
+              getAsyncEventQueueIdFromSenderId(sender.getId()), getFullPath()));
+        } else {
+          throw new GatewaySenderConfigurationException(
+              String.format("Parallel Gateway Sender %s can not be used with replicated region %s",
+                  sender.getId(), getFullPath()));
+  @Override
+  public void preInitialize() {
+    Set<String> allGatewaySenderIds = getAllGatewaySenderIds();
+    allGatewaySenderIds.forEach(this::validateAsynchronousEventDispatcher);
+  }
+
+    validateAsynchronousEventDispatcher(gatewaySenderId);
+    validateAsynchronousEventDispatcher(getSenderIdFromAsyncEventQueueId(asyncEventQueueId));

INS26 INS26 INS40 INS40 INS31 INS29 UPD42 INS44 MOV8 MOV78 INS83 INS39 INS42 INS8 INS65 INS65 INS43 INS42 MOV60 INS21 INS21 INS21 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS32 INS32 INS32 INS66 INS32 INS42 INS42 INS90 INS42 INS42 INS42 INS32 UPD42 MOV42 INS52 INS42 INS42 INS42 MOV32 UPD42 UPD42 UPD45 DEL83 DEL42 DEL42 DEL42 DEL32 DEL38 DEL25 DEL8