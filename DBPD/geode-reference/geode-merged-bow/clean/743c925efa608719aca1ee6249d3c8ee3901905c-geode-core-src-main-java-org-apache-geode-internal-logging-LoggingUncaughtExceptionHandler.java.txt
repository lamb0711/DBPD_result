Revert GEODE-2644 because offline diskstore commands generate info level logs

GFSH forks the offline diskstore commands in a JVM using log4j2-cli.xml
which sets the log level to WARN. However, the forked JVM creates a
Cache which then starts generating info level statements to STDOUT.

Revert "GEODE-2644: Remove log level from MonitorQueryUnderContentionBenchmark"
This reverts commit 6691d310e1263966991e584f712156d919dabecf.

Revert "GEODE-2644: Update session state caching dependencies for logging"
This reverts commit 688f58a4a75cc1297faa1dda201b971346c3a9fe.

Revert "GEODE-5637: Fix flaky SingleHopClientExecutorWithLoggingIntegrationTest"
This reverts commit 0a8f3dffa1ebaa618fafecc15bbc92ba8ba83696.

Revert "GEODE-2644: Make LogWriterAppender optional and support log4j2.xml"
This reverts commit 591f3f7840ce38c6100bff2040f396ad2469175e.

Revert "GEODE-2644: Expand DistributedSystemMXBean tests"
This reverts commit cd2bba13e2fb7e79f7634053a6c612050b328e11.

Revert "GEODE-2644: Make AlertAppender optional and support log4j2.xml"
This reverts commit 02c3cae1d38098259ff6aa4635c6e74f795bdc50.

Revert "GEODE-2644: Add LogConfig and StatisticsConfig for logging"
This reverts commit a77c94b349b3ed7fc873fc29f6852f9936843790.

Revert "GEODE-2644: Add AlertingTest JUnit Category"
This reverts commit 731cd2a7d35b086d34f8bbcb94a83c40739ae8ee.

Revert "GEODE-2644: Add LogFileAssert and LogLevelAssert assertions"
This reverts commit 5e61da5301469cdbd71ac186573f56c38e9a6cf0.

Revert "GEODE-2644: Cleanup logging related files"
This reverts commit 763e4177f201eff9b140654e6858152a1a184b8c.

Revert "GEODE-2644: Define interfaces for new Log4j2 Appenders"
This reverts commit efd8a14027195b6dae1dd3e4d53a33696ed318bb.

-import static org.apache.geode.distributed.internal.InternalDistributedSystem.SHUTDOWN_HOOK_NAME;
-
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
- * This class delegates to a static singleton that handles all exceptions not caught by any thread
- * created in geode. So all interactions with it are done with static methods.
+ * This class delegates to a static singleton that handles all
+ * exceptions not caught by any thread created in geode.
+ * So all interactions with it are done with static methods.
-
-  public static void setOnThread(final Thread thread) {
+  public static void setOnThread(Thread thread) {
-  interface FailureSetter {
-
+  interface FailureSettor {
-
-    private final FailureSetter failureSetter;
+    private final FailureSettor failureSettor;
-    Implementation(final Logger logger, final FailureSetter failureSetter) {
+    Implementation(Logger logger, FailureSettor failureSettor) {
-      this.failureSetter = failureSetter;
+      this.failureSettor = failureSettor;
-    public void uncaughtException(final Thread t, final Throwable e) {
-      if (e instanceof VirtualMachineError) {
-        failureSetter.setFailure((VirtualMachineError) e);
+    public void uncaughtException(Thread t, Throwable ex) {
+      if (ex instanceof VirtualMachineError) {
+        this.failureSettor.setFailure((VirtualMachineError) ex);
-      if (e instanceof NoClassDefFoundError && t.getName().equals(SHUTDOWN_HOOK_NAME)) {
+      if ((ex instanceof NoClassDefFoundError)
+          && (t.getName().equals(InternalDistributedSystem.SHUTDOWN_HOOK_NAME))) {
-            t, e);
+            t, ex);
-        logger.fatal(message, e);
+        logger.fatal(message, ex);
-    void setOnThread(final Thread thread) {
+    void setOnThread(Thread thread) {

MOV26 UPD40 UPD42 UPD66 INS66 UPD66 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 INS36 INS36 UPD42 MOV62 MOV32 INS22 UPD42 INS40 UPD42 UPD42 INS52 INS42 UPD42 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL42 DEL83