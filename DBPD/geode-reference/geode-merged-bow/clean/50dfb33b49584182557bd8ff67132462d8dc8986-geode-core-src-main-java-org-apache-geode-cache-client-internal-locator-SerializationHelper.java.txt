GEODE-6588: Cleanup generics and other static analyzer issues. (#3391)


-import java.util.Iterator;
-  private static void writeServerLocations(Collection/* <ServerLocation> */ serverLocations,
+  private static void writeServerLocations(Collection<ServerLocation> serverLocations,
-    int length = serverLocations.size();
-    out.writeInt(length);
-    for (Iterator itr = serverLocations.iterator(); itr.hasNext();) {
-      ServerLocation next = (ServerLocation) itr.next();
-      InternalDataSerializer.invokeToData(next, out);
+    out.writeInt(serverLocations.size());
+    for (ServerLocation serverLocation : serverLocations) {
+      InternalDataSerializer.invokeToData(serverLocation, out);
-    int length = bucketServerLocations.size();
-    out.writeInt(length);
-    for (Iterator itr = bucketServerLocations.iterator(); itr.hasNext();) {
-      ServerLocation next = (ServerLocation) itr.next();
-      InternalDataSerializer.invokeToData(next, out);
+    out.writeInt(bucketServerLocations.size());
+    for (BucketServerLocation66 serverLocation : bucketServerLocations) {
+      InternalDataSerializer.invokeToData(serverLocation, out);
-  public static ArrayList/* <ServerLocation> */ readServerLocationList(DataInput in)
+  private static <T extends Collection<ServerLocation>> T readServerLocations(DataInput in,
+      int size, T serverLocations)
-    int size = in.readInt();
-    if (size < 0) {
-      return null;
-    }
-    ArrayList serverLocations = new ArrayList(size);
+
-  public static void writeServerLocationList(List/* <ServerLocation> */ serverLocations,
+
+  static ArrayList<ServerLocation> readServerLocationList(DataInput in)
+      throws IOException, ClassNotFoundException {
+    int size = in.readInt();
+    if (size < 0) {
+      return null;
+    }
+    return readServerLocations(in, size, new ArrayList<>(size));
+  }
+
+  static void writeServerLocationList(List<ServerLocation> serverLocations,
-  public static void writeServerLocationSet(Set/* <ServerLocation> */ serverLocations,
+  static void writeServerLocationSet(Set<ServerLocation> serverLocations,
-  public static HashSet/* <ServerLocation> */ readServerLocationSet(DataInput in)
+  static HashSet<ServerLocation> readServerLocationSet(DataInput in)
-    HashSet serverLocations = new HashSet(size);
-    for (int i = 0; i < size; i++) {
-      ServerLocation next = new ServerLocation();
-      InternalDataSerializer.invokeFromData(next, in);
-      serverLocations.add(next);
-    }
-    return serverLocations;
+    return readServerLocations(in, size, new HashSet<>(size));
-    HashSet bucketServerLocations = new HashSet(size);
+    HashSet<BucketServerLocation66> bucketServerLocations = new HashSet<>(size);

INS31 UPD83 INS73 INS43 UPD42 INS44 INS44 INS43 INS43 INS83 INS74 INS42 INS44 MOV43 MOV43 INS8 INS74 INS74 INS70 INS70 INS42 INS74 INS42 INS39 INS42 INS43 INS42 INS42 INS42 MOV43 MOV43 INS43 INS42 MOV60 MOV25 INS41 INS74 INS74 MOV43 INS43 INS41 MOV43 MOV43 INS44 INS42 INS8 INS44 INS42 INS8 INS43 MOV43 INS42 INS42 INS32 MOV43 INS43 MOV43 INS43 UPD42 MOV42 INS32 INS74 INS59 MOV32 MOV43 INS42 MOV21 MOV32 INS43 INS42 MOV21 UPD42 MOV42 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS14 UPD42 MOV42 INS74 INS74 INS42 MOV42 INS42 INS74 MOV42 UPD42 UPD42 MOV43 MOV43 MOV43 DEL40 DEL26 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL24 DEL39 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL24 DEL43 DEL42 DEL59 DEL60 DEL83 DEL83 DEL83 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL41 DEL42 DEL43 DEL14 DEL59