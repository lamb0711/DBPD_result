GEODE-6803: Make CacheElement an interface and have RuntimeCacheElemeâ€¦ (#3625)


- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements. See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-import java.util.ArrayList;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.geode.annotations.Experimental;
-@Experimental
-public abstract class CacheElement implements Identifiable<String>, Serializable {
-  protected List<String> groups = new ArrayList<>();
-
-  public static <T extends Identifiable> boolean exists(List<T> list, String id) {
+public interface CacheElement extends Identifiable<String>, Serializable {
+  static <T extends Identifiable> boolean exists(List<T> list, String id) {
-  public static <T extends Identifiable> T findElement(List<T> list, String id) {
+  static <T extends Identifiable> T findElement(List<T> list, String id) {
-  public static <T extends Identifiable> void removeElement(List<T> list, String id) {
+  static <T extends Identifiable> void removeElement(List<T> list, String id) {
-  public String getConfigGroup() {
-    String group = getGroup();
-    if (StringUtils.isBlank(group)) {
-      return "cluster";
-    }
-    return group;
-  }
+  String getConfigGroup();
-  public String getGroup() {
-    if (groups.size() == 0) {
-      return null;
-    }
-    return groups.get(0);
-  }
+  String getGroup();
-  public void setGroup(String group) {
-    groups.clear();
-
-    if (StringUtils.isBlank(group)) {
-      return;
-    }
-    groups.add(group);
-  }
+  void setGroup(String group);

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL78 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL23 DEL83 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL45 DEL41 DEL8 DEL25 DEL42 DEL41 DEL8 DEL83 DEL42 DEL42 DEL32 DEL34 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL83 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8