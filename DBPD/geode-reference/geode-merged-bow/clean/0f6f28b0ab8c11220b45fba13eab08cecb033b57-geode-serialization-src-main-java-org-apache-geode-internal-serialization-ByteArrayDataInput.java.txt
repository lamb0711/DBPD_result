GEODE-7869: Cleanup warnings in geode-serialization

-    this.nBytes = bytes.length;
-    this.pos = 0;
+    nBytes = bytes.length;
+    pos = 0;
-    final int capacity = (this.nBytes - this.pos);
+    final int capacity = (nBytes - pos);
-      this.pos += (int) n;
+      pos += (int) n;
-      this.pos += capacity;
+      pos += capacity;
-    if (this.pos < this.nBytes) {
-      return (this.bytes[this.pos++] & 0xff);
+    if (pos < nBytes) {
+      return (bytes[pos++] & 0xff);
-    final int capacity = (this.nBytes - this.pos);
+    final int capacity = (nBytes - pos);
-      System.arraycopy(this.bytes, this.pos, b, off, len);
-      this.pos += len;
+      System.arraycopy(bytes, pos, b, off, len);
+      pos += len;
-    return (this.nBytes - this.pos);
+    return (nBytes - pos);
-    return this.pos;
+    return pos;
-      if ((this.nBytes - this.pos) >= len) {
-        System.arraycopy(this.bytes, this.pos, b, off, len);
-        this.pos += len;
+      if ((nBytes - pos) >= len) {
+        System.arraycopy(bytes, pos, b, off, len);
+        pos += len;
-    if (this.pos < this.nBytes) {
-      return (this.bytes[this.pos++] != 0);
+    if (pos < nBytes) {
+      return (bytes[pos++] != 0);
-    if (this.pos < this.nBytes) {
-      return this.bytes[this.pos++];
+    if (pos < nBytes) {
+      return bytes[pos++];
-    if ((this.pos + 1) < this.nBytes) {
-      int result = (this.bytes[this.pos++] & 0xff);
-      return (short) ((result << 8) | (this.bytes[this.pos++] & 0xff));
+    if ((pos + 1) < nBytes) {
+      int result = (bytes[pos++] & 0xff);
+      return (short) ((result << 8) | (bytes[pos++] & 0xff));
-    if ((this.pos + 1) < this.nBytes) {
-      int result = (this.bytes[this.pos++] & 0xff);
-      return ((result << 8) | (this.bytes[this.pos++] & 0xff));
+    if ((pos + 1) < nBytes) {
+      int result = (bytes[pos++] & 0xff);
+      return ((result << 8) | (bytes[pos++] & 0xff));
-    if ((this.pos + 1) < this.nBytes) {
-      int result = this.bytes[this.pos++] << 8;
-      return (char) (result | (this.bytes[this.pos++] & 0xff));
+    if ((pos + 1) < nBytes) {
+      int result = bytes[pos++] << 8;
+      return (char) (result | (bytes[pos++] & 0xff));
-    if ((this.pos + 3) < this.nBytes) {
-      int result = (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      return ((result << 8) | (this.bytes[this.pos++] & 0xff));
+    if ((pos + 3) < nBytes) {
+      int result = (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      return ((result << 8) | (bytes[pos++] & 0xff));
-    if ((this.pos + 7) < this.nBytes) {
-      long result = (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      result = (result << 8) | (this.bytes[this.pos++] & 0xff);
-      return ((result << 8) | (this.bytes[this.pos++] & 0xff));
+    if ((pos + 7) < nBytes) {
+      long result = (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      result = (result << 8) | (bytes[pos++] & 0xff);
+      return ((result << 8) | (bytes[pos++] & 0xff));
-    if ((this.pos + utfLen) <= this.nBytes) {
+    if ((pos + utfLen) <= nBytes) {
-      if (this.charBuf == null || this.charBuf.length < utfLen) {
+      if (charBuf == null || charBuf.length < utfLen) {
-        this.charBuf = new char[charBufLength];
+        charBuf = new char[charBufLength];
-      final char[] chars = this.charBuf;
+      final char[] chars = charBuf;
-      int index = this.pos;
+      int index = pos;
-      this.pos = limit;
+      pos = limit;
-    return new String(bytes, 0, startIdx, utfLen);
+    @SuppressWarnings("deprecation")
+    final String string = new String(bytes, 0, startIdx, utfLen);
+    return string;
-    if (this.pos >= this.nBytes) {
+    if (pos >= nBytes) {
-      return this.bytes[this.pos++] & 0xff;
+      return bytes[pos++] & 0xff;
-  public String readLine() throws IOException {
-    if (this.pos >= this.nBytes) {
+  public String readLine() {
+    if (pos >= nBytes) {
-    int startIdx = this.pos;
+    int startIdx = pos;
-          lastIdx = this.pos;
+          lastIdx = pos;
-          lastIdx = this.pos - 1;
+          lastIdx = pos - 1;
-          lastIdx = this.pos - 1;
+          lastIdx = pos - 1;
-            this.pos--;
+            pos--;
-    return new String(this.bytes, 0, startIdx, lastIdx - startIdx);
+    @SuppressWarnings("deprecation")
+    final String string = new String(bytes, 0, startIdx, lastIdx - startIdx);
+    return string;
-    this.bytes = null;
-    this.nBytes = 0;
-    this.pos = 0;
-    this.version = null;
+    bytes = null;
+    nBytes = 0;
+    pos = 0;
+    version = null;
-    return this.version == null ? super.toString()
-        : (super.toString() + " (v" + this.version + ')');
+    return version == null ? super.toString()
+        : (super.toString() + " (v" + version + ')');

MOV29 MOV78 MOV43 MOV29 MOV78 MOV43 MOV29 MOV78 MOV43 MOV29 MOV78 MOV43 MOV29 MOV78 MOV43 MOV29 MOV78 MOV43 MOV29 MOV78 MOV43 MOV29 MOV78 MOV29 MOV78 INS60 INS60 INS42 MOV8 MOV8 MOV8 MOV8 MOV8 MOV8 MOV8 INS79 INS83 INS43 INS59 INS42 INS79 INS83 INS43 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV36 MOV36 MOV36 MOV36 MOV36 MOV36 MOV36 MOV36 MOV36 MOV36 MOV36 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV36 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22