GEODE-6592: Added --if-not-exists flag to CreateMappingCommand (#3402)

* Added --if-not-exists flag to CreateMappingCommand and Tests

Co-authored-by: Benjamin Ross <bross@pivotal.io>
Co-authored-by: Xiaojian Zhou <gzhou@pivotal.io>
Co-authored-by: Jianxia Chen <jchen@pivotal.io>

+  public static final String CREATE_MAPPING__IFNOTEXISTS__HELP =
+      "By default, an attempt to create a duplicate jdbc mapping is reported as an error. If this option is specified without a value or is specified with a value of true, then gfsh displays a \"Skipping...\" acknowledgement, but does not throw an error.";
+  static final String IF_NOT_EXISTS_SKIPPING_EXCEPTION_MESSAGE = "Skipping: ";
+      @CliOption(key = CliStrings.IFNOTEXISTS,
+          specifiedDefaultValue = "true", unspecifiedDefaultValue = "false",
+          help = CREATE_MAPPING__IFNOTEXISTS__HELP) boolean ifNotExists,
+        checkForAEQIdForAccessor(regionName, synchronous, regionConfig);
-      return ResultModel.createError(ex.getMessage());
+      if (ifNotExists) {
+        return ResultModel
+            .createInfo(IF_NOT_EXISTS_SKIPPING_EXCEPTION_MESSAGE + ex.getMessage());
+      } else {
+        return ResultModel.createError(ex.getMessage());
+      }
+  private void checkForAEQIdForAccessor(String regionName, boolean synchronous,
+      RegionConfig regionConfig)
+      throws PreconditionException {
+    RegionAttributesType regionAttributesType = regionConfig.getRegionAttributes();
+    if (!synchronous && regionAttributesType != null) {
+      boolean isAccessor = MappingCommandUtils.isAccessor(regionAttributesType);
+      if (!isAccessor) {
+        return;
+      } else {
+        String queueName = MappingCommandUtils.createAsyncEventQueueName(regionName);
+        if (regionAttributesType.getAsyncEventQueueIds() != null && regionAttributesType
+            .getAsyncEventQueueIds().contains(queueName)) {
+          throw new PreconditionException(
+              "An async-event-queue named " + queueName + " must not already exist.");
+        }
+      }
+    }
+  }
+
+    if (element == null) {
+      return false;
+    }

INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS44 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS77 INS39 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS60 INS25 INS25 INS42 INS80 INS80 INS80 INS80 INS42 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS40 INS42 INS45 INS42 INS45 INS42 INS42 INS8 INS42 INS42 INS32 INS38 INS27 INS60 INS25 INS42 INS33 INS41 INS25 INS42 INS42 INS42 INS42 INS33 INS39 INS59 INS38 INS8 INS8 INS9 INS21 INS42 INS8 MOV8 INS42 INS32 INS42 INS41 INS60 INS25 INS32 INS41 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS32 INS53 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS33 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS45 INS42 INS45