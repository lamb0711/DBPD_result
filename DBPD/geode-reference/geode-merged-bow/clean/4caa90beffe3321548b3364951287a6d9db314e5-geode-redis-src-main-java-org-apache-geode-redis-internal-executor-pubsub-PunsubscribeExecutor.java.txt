GEODE-8312: Improve Redis pub/sub capabilities (#5316)

* Improve pub/sub implementation
* Keep regular subscribed channel names as byte[]'s

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
+import java.util.Collection;
+import java.util.List;
+import java.util.stream.Collectors;
+import org.apache.geode.redis.internal.data.ByteArrayWrapper;
-    byte[] pattern = command.getProcessedCommand().get(1);
-    long subscriptionCount =
-        context
-            .getPubSub()
-            .punsubscribe(new GlobPattern(new String(pattern)), context.getClient());
-    ArrayList<Object> items = new ArrayList<>();
-    items.add("punsubscribe");
-    items.add(pattern);
-    items.add(subscriptionCount);
+    List<byte[]> channelNames = extractChannelNames(command);
+    if (channelNames.isEmpty()) {
+      channelNames = context.getPubSub().findSubscribedChannels(context.getClient());
+    }
-    return RedisResponse.array(items);
+    Collection<Collection<?>> response = punsubscribe(context, channelNames);
+
+    return RedisResponse.flattenedArray(response);
+  }
+
+  private List<byte[]> extractChannelNames(Command command) {
+    return command.getProcessedCommandWrappers().stream()
+        .skip(1)
+        .map(ByteArrayWrapper::toBytes)
+        .collect(Collectors.toList());
+  }
+
+  private Collection<Collection<?>> punsubscribe(ExecutionHandlerContext context,
+      List<byte[]> channelNames) {
+    Collection<Collection<?>> response = new ArrayList<>();
+
+    if (channelNames.isEmpty()) {
+      response.add(createItem(null, 0));
+    } else {
+      for (byte[] channel : channelNames) {
+        long subscriptionCount =
+            context.getPubSub().punsubscribe(new GlobPattern(new String(channel)),
+                context.getClient());
+        response.add(createItem(channel, subscriptionCount));
+      }
+    }
+    return response;
+  }
+
+  private ArrayList<Object> createItem(byte[] channel, long subscriptionCount) {
+    ArrayList<Object> oneItem = new ArrayList<>();
+    oneItem.add("punsubscribe");
+    oneItem.add(channel);
+    oneItem.add(subscriptionCount);
+    return oneItem;

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 MOV78 MOV83 MOV43 MOV42 MOV44 MOV44 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS8 INS60 INS25 INS60 INS41 INS43 INS5 INS43 INS42 INS41 INS43 INS74 INS43 INS42 INS74 INS42 MOV60 INS25 INS41 INS43 INS43 INS5 INS42 INS39 INS42 INS60 MOV21 MOV21 MOV21 MOV41 INS74 INS59 INS32 INS8 INS74 INS59 INS32 INS42 INS39 INS85 INS42 INS32 INS42 INS43 INS76 INS42 INS43 INS5 INS74 INS32 INS8 INS8 INS42 INS42 INS42 INS39 INS85 MOV74 INS59 INS42 INS43 INS5 INS42 INS32 INS42 INS42 INS21 INS43 INS74 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS39 INS85 INS43 INS74 UPD42 INS42 INS42 INS21 INS70 INS42 INS14 UPD42 UPD42 UPD42 UPD42 INS42 INS39 INS85 INS42 INS42 INS7 INS42 INS43 INS76 INS42 INS42 INS42 INS32 INS42 INS90 INS42 INS42 INS42 INS43 INS76 INS32 INS44 INS42 INS8 INS74 INS42 INS32 INS42 INS32 INS42 MOV34 INS42 INS42 INS42 INS42 INS42 INS32 MOV5 INS42 MOV60 INS21 INS43 INS32 INS42 INS32 MOV32 UPD42 MOV42 INS42 INS33 INS34 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL8 DEL31