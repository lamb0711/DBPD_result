GEODE-2673: overhaul PartitionedRegion dunit tests (#1486)

* Delete PartitionedRegionDUnitTestCase
* Overhaul every dunit test that extended PartitionedRegionDUnitTestCase
* Fix flakiness in several dunit tests
* Document and update test methods that were named after old TRAC bugs
* Extract regression test methods to new dedicated test classes
* Extract unrelated test methods to new dedicated test classes
* Extract inner classes that are used by multiple test classes
* Change PRIdMap prIdToPR in PartitionedRegion to be private and change tests to use an accessor to reference it
* Change localBucket2RegionMap in PartitionedRegionDataStore to be private and change tests to use an accessor to reference it
* Move "Set getSomeKeys(Random rnd)" from PartitionedRegion product code to PartitionedRegionGetSomeKeys in test code
* Make IgnoredException AutoCloseable so you can use it within try-resource blocks
* Add "IgnoredException addIgnoredException(final Class exceptionClass)" to IgnoredException

-  final ConcurrentMap<Integer, BucketRegion> localBucket2RegionMap;
+  private final ConcurrentMap<Integer, BucketRegion> localBucket2RegionMap;
-  // /**
-  // * Checks whether there is room in this Map to accommodate more data without
-  // * pushing the Map over its rebalance threshold.
-  // *
-  // * @param bytes
-  // * the size to check in bytes
-  // */
-  // boolean canAccommodateMoreBytesSafely(long bytes)
-  // {
-  //
-  // if (this.partitionedRegion.getLocalMaxMemory() == 0) {
-  // return false;
-  // }
-  // long allocatedMemory = currentAllocatedMemory();
-  // // precision coercion from int to long on bytes
-  // long newAllocatedSize = allocatedMemory + bytes;
-  // if (newAllocatedSize < (this.partitionedRegion.getLocalMaxMemory()
-  // * PartitionedRegionHelper.BYTES_PER_MB * this.partitionedRegion.rebalanceThreshold)) {
-  // return true;
-  // }
-  // else {
-  // return false;
-  // }
-  // }
+  ConcurrentMap<Integer, BucketRegion> getLocalBucket2RegionMap() {
+    return this.localBucket2RegionMap;
+  }

INS31 INS83 INS74 INS42 INS8 INS43 INS43 INS43 INS41 INS42 INS42 INS42 INS22 INS52 INS42