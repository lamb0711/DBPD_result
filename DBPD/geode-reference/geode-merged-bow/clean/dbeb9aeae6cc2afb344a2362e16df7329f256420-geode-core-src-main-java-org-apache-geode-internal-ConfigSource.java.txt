Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public enum Type {API, SYSTEM_PROPERTY, FILE, SECURE_FILE, XML, RUNTIME, LAUNCHER};
+
+  public enum Type {
+    API, SYSTEM_PROPERTY, FILE, SECURE_FILE, XML, RUNTIME, LAUNCHER
+  };
+
-      case API: this.description = "api"; break;
-      case SYSTEM_PROPERTY: this.description = "system property"; break;
-      case FILE: this.description = "file"; break;
-      case SECURE_FILE: this.description = "secure file"; break;
-      case XML: this.description = "cache.xml"; break;
-      case RUNTIME: this.description = "runtime modification"; break;
-      case LAUNCHER: this.description = "launcher"; break;
+      case API:
+        this.description = "api";
+        break;
+      case SYSTEM_PROPERTY:
+        this.description = "system property";
+        break;
+      case FILE:
+        this.description = "file";
+        break;
+      case SECURE_FILE:
+        this.description = "secure file";
+        break;
+      case XML:
+        this.description = "cache.xml";
+        break;
+      case RUNTIME:
+        this.description = "runtime modification";
+        break;
+      case LAUNCHER:
+        this.description = "launcher";
+        break;
-    if(secure) {
+    if (secure) {
-      this.description = (fileName==null)?"secure file":fileName;
-    }
-    else {
+      this.description = (fileName == null) ? "secure file" : fileName;
+    } else {
-      this.description = (fileName==null)?"file":fileName;
+      this.description = (fileName == null) ? "file" : fileName;
+
+
-  
-  public static ConfigSource api() {return API_SINGLETON;}
-  public static ConfigSource sysprop() {return SYSPROP_SINGLETON;}
-  public static ConfigSource xml() {return XML_SINGLETON;}
-  public static ConfigSource runtime() {return RUNTIME_SINGLETON;}
-  public static ConfigSource file(String fileName, boolean secure) {return new ConfigSource(fileName, secure);}
-  public static ConfigSource launcher() {return LAUNCHER_SINGLETON;}
-  
+
+  public static ConfigSource api() {
+    return API_SINGLETON;
+  }
+
+  public static ConfigSource sysprop() {
+    return SYSPROP_SINGLETON;
+  }
+
+  public static ConfigSource xml() {
+    return XML_SINGLETON;
+  }
+
+  public static ConfigSource runtime() {
+    return RUNTIME_SINGLETON;
+  }
+
+  public static ConfigSource file(String fileName, boolean secure) {
+    return new ConfigSource(fileName, secure);
+  }
+
+  public static ConfigSource launcher() {
+    return LAUNCHER_SINGLETON;
+  }
+
-    result = prime * result
-        + ((description == null) ? 0 : description.hashCode());
+    result = prime * result + ((description == null) ? 0 : description.hashCode());
+
-    return (type == other.type
-            && description.equals(other.description));
+    return (type == other.type && description.equals(other.description));
-  
+

