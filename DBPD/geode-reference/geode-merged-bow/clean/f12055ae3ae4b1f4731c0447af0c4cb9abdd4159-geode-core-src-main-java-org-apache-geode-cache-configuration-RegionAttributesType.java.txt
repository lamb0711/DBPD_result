GEODE-5971: refactor AlterRegionCommand to use RegionConfig object (#3054)

* GEODE-5971: refactor AlterRegionCommand to use RegionConfig object

Co-authored-by: Kenneth Howe <khowe@pivotal.io>
Co-authored-by: Aditya Anchuri <aanchuri@pivotal.io>
Co-authored-by: Peter Tran <ptran@pivotal.io>

* refactor AlterRegionCommand to use ResultModel and RegionConfig
* only alter region in the same group as the region is created on
* when cluster configuration is enabled, if region does not exist in CC, the command would error out.
* The command would no longer alter region not created by gfsh command
* add more unit tests

+import java.util.Arrays;
+import java.util.Objects;
+import java.util.Properties;
+import java.util.Set;
+import java.util.stream.Collectors;
+import org.apache.commons.lang3.StringUtils;
+
+import org.apache.geode.cache.ExpirationAction;
+   * turn the comma separated ids into a set of id
+   */
+  public Set<String> getGatewaySenderIdsAsSet() {
+    if (gatewaySenderIds == null) {
+      return null;
+    }
+    return Arrays.stream(gatewaySenderIds.split(","))
+        .filter(StringUtils::isNotBlank)
+        .collect(Collectors.toSet());
+  }
+
+  /**
+   * turn the comma separated id into a set of ids
+   */
+  public Set<String> getAsyncEventQueueIdsAsSet() {
+    if (asyncEventQueueIds == null) {
+      return null;
+    }
+    return Arrays.stream(asyncEventQueueIds.split(","))
+        .filter(StringUtils::isNotBlank)
+        .collect(Collectors.toSet());
+  }
+
+  /**
-  public static class DiskWriteAttributes {
+  public static class DiskWriteAttributes implements Serializable {
+    public ExpirationAttributesType() {}
+
+    public ExpirationAttributesType(Integer timeout, ExpirationAction action, String expiry,
+        Properties iniProps) {
+      expirationAttributes.setTimeout(Objects.toString(timeout, null));
+      if (action != null) {
+        expirationAttributes.setAction(action.toXmlString());
+      }
+      if (expiry != null) {
+        expirationAttributes.setCustomExpiry(new DeclarableType(expiry, iniProps));
+      }
+    }
+
+    /**
+     * @return true if timeout or action is specified
+     */
+    public boolean hasTimoutOrAction() {
+      return (getTimeout() != null || getAction() != null);
+    }
+
+    /**
+     * @return true if custom expiry class is specified
+     */
+    public boolean hasCustomExpiry() {
+      return getCustomExpiry() != null;
+    }
+
+    /**
+     * @return the custom expiry declarable
+     */

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS29 INS83 INS74 INS42 INS8 INS29 INS83 INS74 INS42 INS8 INS43 INS31 INS31 INS31 INS31 INS65 INS43 INS43 INS25 INS41 INS65 INS43 INS43 INS25 INS41 INS42 INS83 INS42 INS8 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS66 INS42 INS42 INS27 INS8 INS32 INS66 INS42 INS42 INS27 INS8 INS32 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS25 INS25 INS65 INS41 INS65 INS41 INS65 INS42 INS33 INS41 INS32 INS42 INS32 INS42 INS33 INS41 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS27 INS8 INS27 INS8 INS66 INS36 INS66 INS27 INS66 INS33 INS32 INS42 INS90 INS42 INS42 INS33 INS32 INS42 INS90 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS33 INS21 INS27 INS32 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS32 INS27 INS27 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS14 INS32 INS33 INS32 INS33 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42