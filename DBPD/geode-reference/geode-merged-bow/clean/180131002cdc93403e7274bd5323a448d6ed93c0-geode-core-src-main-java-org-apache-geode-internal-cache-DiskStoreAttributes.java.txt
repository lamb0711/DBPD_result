GEODE-8283: Provide REST interface for disk-store creation

- Provides create, get, list and delete operations
- Can create with locator only running

Co-Authored-By: Jason Huynh <jhuynh@vmware.com>

+
+  public static void checkMinAndMaxOplogSize(long maxOplogSize) {
+    long MAX = Long.MAX_VALUE / (1024 * 1024);
+    if (maxOplogSize > MAX) {
+      throw new IllegalArgumentException(
+          String.format(
+              "%s has to be a number that does not exceed %s so the value given %s is not acceptable",
+              new Object[] {"max oplog size", maxOplogSize, MAX}));
+    }
+    checkMinOplogSize(maxOplogSize);
+  }
+
+  public static void checkMinOplogSize(long maxOplogSize) {
+    if (maxOplogSize < 0) {
+      throw new IllegalArgumentException(
+          String.format(
+              "Maximum Oplog size specified has to be a non-negative number and the value given %s is not acceptable",
+              maxOplogSize));
+    }
+  }
+
+  public static void checkQueueSize(int queueSize) {
+    if (queueSize < 0) {
+      throw new IllegalArgumentException(
+          String.format(
+              "Queue size specified has to be a non-negative number and the value given %s is not acceptable",
+              queueSize));
+    }
+  }
+
+  public static void checkWriteBufferSize(int writeBufferSize) {
+    if (writeBufferSize < 0) {
+      throw new IllegalArgumentException(
+          String.format(
+              "Write buffer size specified has to be a non-negative number and the value given %s is not acceptable",
+              writeBufferSize));
+    }
+  }
+
+  /**
+   * Verify all directory sizes are positive
+   */
+  public static void verifyNonNegativeDirSize(int[] sizes) {
+    for (int size : sizes) {
+      if (size < 0) {
+        throw new IllegalArgumentException(
+            String.format("Dir size cannot be negative : %s",
+                size));
+      }
+    }
+  }
+
+  public static void checkTimeInterval(long timeInterval) {
+    if (timeInterval < 0) {
+      throw new IllegalArgumentException(
+          String.format(
+              "Time Interval specified has to be a non-negative number and the value given %s is not acceptable",
+              timeInterval));
+    }
+  }

INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS39 INS42 INS60 INS25 INS21 INS39 INS42 INS25 INS39 INS42 INS25 INS39 INS42 INS25 INS65 INS5 INS42 INS70 INS39 INS42 INS25 INS39 INS59 INS27 INS8 INS32 INS27 INS8 INS27 INS8 INS27 INS8 INS66 INS39 INS85 INS44 INS42 INS8 INS27 INS8 INS42 INS27 INS42 INS42 INS53 INS42 INS42 INS42 INS34 INS53 INS42 INS34 INS53 INS42 INS34 INS53 INS39 INS42 INS25 INS42 INS34 INS53 INS40 INS36 INS14 INS14 INS14 INS14 INS27 INS8 INS14 INS27 INS43 INS32 INS43 INS32 INS43 INS32 INS43 INS32 INS42 INS34 INS53 INS43 INS32 INS34 INS34 INS42 INS42 INS42 INS45 INS3 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS14 INS42 INS42 INS42 INS45 INS42 INS5 INS4 INS43 INS32 INS43 INS85 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42