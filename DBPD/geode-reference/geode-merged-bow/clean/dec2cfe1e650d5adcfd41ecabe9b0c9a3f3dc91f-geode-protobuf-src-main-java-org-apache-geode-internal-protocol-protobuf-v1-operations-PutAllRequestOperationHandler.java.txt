GEODE-4377: Don't catch encoding exceptions in OperationHandlers

This adds DecodingException and moves the handling of EncodingException
and this new exception to ProtobufOpsProcessor.

I've also added tests for getAll and putAll to ensure that their
handlers properly process all entries in the presence of a Key or
Entry decoding error.

This closes #1434

-import java.util.Objects;
-import java.util.stream.Collectors;
+import static org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorCode.INVALID_REQUEST;
+import static org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorCode.SERVER_ERROR;
-import org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.EncodingException;
+import org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.DecodingException;
-import org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities;
-      MessageExecutionContext messageExecutionContext) throws InvalidExecutionContextException {
+      MessageExecutionContext messageExecutionContext)
+      throws InvalidExecutionContextException, DecodingException {
-    RegionAPI.PutAllResponse.Builder builder = RegionAPI.PutAllResponse.newBuilder()
-        .addAllFailedKeys(putAllRequest.getEntryList().stream()
-            .map((entry) -> singlePut(serializationService, region, entry)).filter(Objects::nonNull)
-            .collect(Collectors.toList()));
-    messageExecutionContext.getStatistics().endOperation(startTime);
+    RegionAPI.PutAllResponse.Builder builder = RegionAPI.PutAllResponse.newBuilder();
+    try {
+      messageExecutionContext.getCache().setReadSerializedForCurrentThread(true);
+
+      putAllRequest.getEntryList().stream()
+          .forEach((entry) -> processSinglePut(builder, serializationService, region, entry));
+
+    } finally {
+      messageExecutionContext.getStatistics().endOperation(startTime);
+      messageExecutionContext.getCache().setReadSerializedForCurrentThread(false);
+    }
-  private BasicTypes.KeyedError singlePut(SerializationService serializationService, Region region,
-      BasicTypes.Entry entry) {
+  private void processSinglePut(RegionAPI.PutAllResponse.Builder builder,
+      SerializationService serializationService, Region region, BasicTypes.Entry entry) {
-      Object decodedValue = serializationService.decode(entry.getValue());
-      Object decodedKey = serializationService.decode(entry.getKey());
+      Object decodedKey = serializationService.decode(entry.getKey());
+      Object decodedValue = serializationService.decode(entry.getValue());
-    } catch (EncodingException ex) {
-      return buildAndLogKeyedError(entry, BasicTypes.ErrorCode.INVALID_REQUEST,
-          "Encoding not supported", ex);
+
+    } catch (DecodingException ex) {
+      logger.info("Encoding not supported: " + ex);
+      builder.addFailedKeys(this.buildKeyedError(entry, INVALID_REQUEST, "Encoding not supported"));
-      return buildAndLogKeyedError(entry, BasicTypes.ErrorCode.SERVER_ERROR, ex.toString(), ex);
+      builder.addFailedKeys(buildKeyedError(entry, SERVER_ERROR, ex.toString()));
+    } catch (Exception ex) {
+      logger.warn("Error processing putAll entry", ex);
+      builder.addFailedKeys(buildKeyedError(entry, SERVER_ERROR, ex.toString()));
-    return null;
-  private BasicTypes.KeyedError buildAndLogKeyedError(BasicTypes.Entry entry,
-      BasicTypes.ErrorCode errorCode, String message, Exception ex) {
-    logger.error(message, ex);
-
+  private BasicTypes.KeyedError buildKeyedError(BasicTypes.Entry entry,
+      BasicTypes.ErrorCode errorCode, String message) {

MOV26 MOV26 UPD40 UPD40 UPD40 INS43 INS39 INS42 INS44 UPD42 INS42 INS60 INS54 INS43 INS42 MOV43 INS59 INS8 INS8 UPD40 MOV40 MOV60 INS12 MOV42 MOV32 INS21 INS21 MOV21 INS21 MOV44 INS8 INS32 MOV32 INS32 UPD43 INS21 INS21 INS21 INS21 INS21 INS32 INS42 INS9 UPD42 INS32 UPD42 MOV42 INS9 UPD42 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS27 INS42 INS42 INS32 INS42 INS42 MOV32 MOV32 INS42 INS42 INS45 INS42 INS42 INS42 INS32 UPD42 INS42 INS45 INS42 INS52 INS42 INS42 INS42 INS45 UPD42 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL90 DEL32 DEL32 DEL32 DEL32 DEL59 DEL60 DEL43 DEL42 DEL40 DEL45 DEL42 DEL32 DEL41 DEL40 DEL41 DEL33 DEL41 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21