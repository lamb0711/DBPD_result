GEODE-2240: prevent unsafe concurrent access to ArrayList

Fixed deadlock by adding expiredTombstonesLock.

-     * tombstones that have expired and are awaiting batch removal. This variable is only accessed
-     * by the sweeper thread and so is not guarded
+     * tombstones that have expired and are awaiting batch removal.
+    private final Object expiredTombstonesLock = new Object();
-      synchronized (getBlockGCLock()) {
+      synchronized (expiredTombstonesLock) {
-          for (Tombstone t : expiredTombstones) {
-            DistributedRegion tr = (DistributedRegion) t.region;
-            tr.getVersionVector().recordGCVersion(t.getMemberID(), t.getRegionVersion());
-            if (!reapedKeys.containsKey(tr)) {
-              reapedKeys.put(tr, Collections.emptySet());
+          synchronized (expiredTombstonesLock) {
+            for (Tombstone t : expiredTombstones) {
+              DistributedRegion tr = (DistributedRegion) t.region;
+              tr.getVersionVector().recordGCVersion(t.getMemberID(), t.getRegionVersion());
+              if (!reapedKeys.containsKey(tr)) {
+                reapedKeys.put(tr, Collections.emptySet());
+              }
-      expiredTombstones.add(tombstone);
+      synchronized (expiredTombstonesLock) {
+        expiredTombstones.add(tombstone);
+      }

INS23 INS83 INS83 INS43 INS59 INS42 INS42 INS14 INS51 UPD66 INS43 INS42 INS42 INS8 INS42 MOV21 INS51 INS42 INS8 MOV70 DEL66 DEL42 DEL32