Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import java.util.stream.*;
-import com.gemstone.gemfire.internal.logging.LogService;
+@SuppressWarnings("SynchronizeOnNonFinalField")
-    members = new ArrayList<InternalDistributedMember>(4);
+    members = new ArrayList<>(4);
-    members = new ArrayList<InternalDistributedMember>(4);
+    members = new ArrayList<>(4);
-    this.members = new ArrayList<InternalDistributedMember>(members);
+    this.members = new ArrayList<>(members);
-  // legacy method for JGMM
+  /**
+   * Test method
+   * @param size   size of the view, used for presizing collections
+   * @param viewId the ID of the view
+   */
-    members = new ArrayList<InternalDistributedMember>(size);
-    this.hashedMembers = new HashSet<InternalDistributedMember>();
+    members = new ArrayList<>(size);
+    this.hashedMembers = new HashSet<>();
-   * @param other
-   * @param viewId
-    this.members = new ArrayList<InternalDistributedMember>(other.members);
-    this.hashedMembers = new HashSet<InternalDistributedMember>(other.members);
+    this.members = new ArrayList<>(other.members);
+    this.hashedMembers = new HashSet<>(other.members);
-    this.shutdownMembers = new HashSet<InternalDistributedMember>(other.shutdownMembers);
-    this.crashedMembers = new HashSet<InternalDistributedMember>(other.crashedMembers);
+    this.shutdownMembers = new HashSet<>(other.shutdownMembers);
+    this.crashedMembers = new HashSet<>(other.crashedMembers);
-    this.hashedMembers = new HashSet<InternalDistributedMember>(mbrs);
+    this.hashedMembers = new HashSet<>(mbrs);
-   * @param otherView
-    List<InternalDistributedMember> result = new ArrayList<InternalDistributedMember>(members);
+    List<InternalDistributedMember> result = new ArrayList<>(members);
-    List<InternalDistributedMember> result = new ArrayList<InternalDistributedMember>(5);
-    for (InternalDistributedMember mbr : this.members) {
-      if (mbr.getVmViewId() == this.viewId) {
-        result.add(mbr);
-      }
-    }
+    List<InternalDistributedMember> result = new ArrayList<>(5);
+    result.addAll(this.members.stream().filter(mbr -> mbr.getVmViewId() 
+                                                      == this.viewId).collect(Collectors.toList()));
-  public void addShutdownMembers(Set<InternalDistributedMember> mbr) {
-    this.shutdownMembers.addAll(mbr);
-  }
-
-    for (InternalDistributedMember mbr: ids) {
-      remove(mbr);
-    }
+    ids.forEach(this::remove);
+    assert mbr instanceof InternalDistributedMember;
-   * @param localAddress
+   * @param localAddress the address of this member
-    List<InternalDistributedMember> results = new ArrayList<InternalDistributedMember>();
-    List<InternalDistributedMember> notPreferredCoordinatorList = new ArrayList<InternalDistributedMember>();
+    List<InternalDistributedMember> results = new ArrayList<>();
+    List<InternalDistributedMember> notPreferredCoordinatorList = new ArrayList<>();
-    for (InternalDistributedMember mbr : this.crashedMembers) {
-      if ((mbr.getVmKind() != DistributionManager.ADMIN_ONLY_DM_TYPE)) {
-        if (oldView == null || oldView.contains(mbr)) {
-          result.add(mbr);
-        }
-      }
-    }
+    result.addAll(this.crashedMembers.stream()
+                                     .filter(mbr -> (mbr.getVmKind() != DistributionManager.ADMIN_ONLY_DM_TYPE))
+                                     .filter(mbr -> oldView == null || oldView.contains(mbr))
+                                     .collect(Collectors.toList()));
-  public synchronized boolean equals(Object arg0) {
-    if (arg0 == this) {
+  public synchronized boolean equals(Object other) {
+    if (other == this) {
-    if (!(arg0 instanceof NetView)) {
+    if (!(other instanceof NetView)) {
-    return this.members.equals(((NetView) arg0).getMembers());
+    return this.members.equals(((NetView) other).getMembers());
-    this.hashedMembers = new HashSet<InternalDistributedMember>(members);
+    assert members != null;
+    this.hashedMembers = new HashSet<>(members);

UPD40 INS79 INS42 INS45 INS29 MOV21 INS8 MOV60 INS65 INS65 INS65 MOV21 MOV21 MOV21 INS6 MOV21 UPD42 INS6 INS66 INS42 INS66 INS42 INS66 INS62 INS66 INS27 MOV22 MOV22 UPD42 INS32 INS42 INS42 INS90 INS42 MOV43 UPD42 UPD42 UPD42 INS32 UPD42 INS42 INS33 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD40 UPD74 UPD40 UPD74 UPD74 UPD74 INS32 INS42 INS32 INS52 INS42 UPD74 UPD74 INS32 INS42 INS32 UPD74 INS32 INS42 INS86 INS42 INS42 INS32 INS42 INS86 INS42 INS42 UPD42 MOV22 INS42 INS59 MOV27 INS32 INS42 INS86 INS59 MOV27 UPD42 INS42 MOV22 INS42 INS59 MOV36 INS42 INS42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL65 DEL42 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL65 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL25 DEL8 DEL70 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL8 DEL70 DEL8 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43