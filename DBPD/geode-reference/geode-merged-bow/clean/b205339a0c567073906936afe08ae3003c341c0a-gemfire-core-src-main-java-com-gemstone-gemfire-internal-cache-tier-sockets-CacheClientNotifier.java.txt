Merge branch 'feature/GEODE-8' into develop

+import com.gemstone.gemfire.internal.cache.EntryEventImpl.SerializedCacheValueImpl;
-  public static void routeSingleClientMessage(ClientUpdateMessage clientMessage, ClientProxyMembershipID clientProxyMembershiptId) {
+  public static void routeSingleClientMessage(ClientUpdateMessage clientMessage, ClientProxyMembershipID clientProxyMembershipId) {
-      HAEventWrapper haEW = new HAEventWrapper(clientMessage);
-      haEW.setPutInProgress(true);
-      HashSet<ClientProxyMembershipID > singleClient = new HashSet<ClientProxyMembershipID >();
-      singleClient.add(clientProxyMembershiptId);
-      instance.singletonRouteClientMessage(clientMessage, singleClient);
+      instance.singletonRouteClientMessage(clientMessage, Collections.singleton(clientProxyMembershipId));
-    Object value = null;
-    byte valueIsObject = 0x01;
-
-      // only need a value if notifyBySubscription is true
-      CachedDeserializable serializedNewValue = (CachedDeserializable) entryEvent.getSerializedNewValue();
-      final boolean isTraceEnabled = logger.isTraceEnabled();
-      if (serializedNewValue == null) {
-        if (entryEvent.getCachedSerializedNewValue() != null) {
-          value = entryEvent.getCachedSerializedNewValue();
-          if (isTraceEnabled) {
-            logger.trace("CacheClientNotifier: Using cached serialized new value for operation {}: byte[{}]", operation, entryEvent.getCachedSerializedNewValue().length);
-          }
-        } else {
-        Object newValue = entryEvent.getRawNewValue();
-        if (newValue instanceof byte[]) {
-          // The value is already a byte[]. Set _valueIsObject flag to 0x00
-          // (not an object)
-          value = newValue;
-          valueIsObject = 0x00;
-        }
-        else {
-          // The value is an object. Serialize it.
-          byte[] valueBytes = CacheServerHelper.serialize(newValue);
-          value = valueBytes;
-          entryEvent.setCachedSerializedNewValue(valueBytes);
-        }
-        if (isTraceEnabled)
-          logger.trace("CacheClientNotifier: Using deserialized new value for operation {}: {}", operation, newValue);
-        }
-      } else {
-        value = serializedNewValue.getSerializedValue();
-        // value is a byte[] at since getSerializedValue returns byte[]
-        if (isTraceEnabled) {
-          logger.trace("CacheClientNotifier: Using serialized new value for operation {}: {}", operation, serializedNewValue.getStringForm());
-        }
-      }
-        (LocalRegion)event.getRegion(), keyOfInterest, value, delta, valueIsObject,
+        (LocalRegion)event.getRegion(), keyOfInterest, null, delta, (byte) 0x01,
+    
+    if (event.getOperation().isEntry()) {
+      EntryEventImpl entryEvent = (EntryEventImpl)event;
+      // only need a value if notifyBySubscription is true
+      entryEvent.exportNewValue(clientUpdateMsg);
+    }

INS26 INS40 UPD42 INS25 INS32 INS8 INS32 INS42 INS60 INS21 INS33 INS11 INS42 INS42 INS43 INS59 INS32 INS32 INS39 INS34 INS42 INS42 INS11 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS43 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL22 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL39 DEL85 DEL5 DEL62 DEL42 DEL42 DEL7 DEL21 DEL42 DEL34 DEL7 DEL21 DEL8 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL21 DEL25 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42