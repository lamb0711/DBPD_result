Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-    
+
-  public AbstractRemoteGatewaySender(Cache cache, GatewaySenderAttributes attrs){
+
+  public AbstractRemoteGatewaySender(Cache cache, GatewaySenderAttributes attrs) {
-  
-  /** used to reduce warning logs in case remote locator is down (#47634) */ 
-  protected int proxyFailureTries = 0; 
-  
+
+  /** used to reduce warning logs in case remote locator is down (#47634) */
+  protected int proxyFailureTries = 0;
+
-    if (this.remoteDSId == DEFAULT_DISTRIBUTED_SYSTEM_ID || this.proxy != null
-        && !this.proxy.isDestroyed()) {
+    if (this.remoteDSId == DEFAULT_DISTRIBUTED_SYSTEM_ID
+        || this.proxy != null && !this.proxy.isDestroyed()) {
-    RemoteLocatorRequest request = new RemoteLocatorRequest(this.remoteDSId, pf
-        .getPoolAttributes().getServerGroup());
-    String locators = ((GemFireCacheImpl) this.cache).getDistributedSystem()
-        .getConfig().getLocators();
+    RemoteLocatorRequest request =
+        new RemoteLocatorRequest(this.remoteDSId, pf.getPoolAttributes().getServerGroup());
+    String locators =
+        ((GemFireCacheImpl) this.cache).getDistributedSystem().getConfig().getLocators();
-      logger.debug("Gateway Sender is attempting to configure pool with remote locator information");
+      logger
+          .debug("Gateway Sender is attempting to configure pool with remote locator information");
-        RemoteLocatorResponse response = (RemoteLocatorResponse) new TcpClient()
-            .requestToServer(locatorID.getHost(), locatorID.getPort(), request,
-                WanLocatorDiscoverer.WAN_LOCATOR_CONNECTION_TIMEOUT);
+        RemoteLocatorResponse response =
+            (RemoteLocatorResponse) new TcpClient().requestToServer(locatorID.getHost(),
+                locatorID.getPort(), request, WanLocatorDiscoverer.WAN_LOCATOR_CONNECTION_TIMEOUT);
-                      new Object[] { remoteDSId, localLocator }));
+                  new Object[] {remoteDSId, localLocator}));
-            logger.debug("Received the remote site {} location information:", this.remoteDSId, response.getLocators());
+            logger.debug("Received the remote site {} location information:", this.remoteDSId,
+                response.getLocators());
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.AbstractGatewaySender_SENDER_0_IS_NOT_ABLE_TO_CONNECT_TO_LOCAL_LOCATOR_1,
-                new Object[] { this.id, localLocator + ioeStr  }), ioe);        
+          logger.warn(LocalizedMessage.create(
+              LocalizedStrings.AbstractGatewaySender_SENDER_0_IS_NOT_ABLE_TO_CONNECT_TO_LOCAL_LOCATOR_1,
+              new Object[] {this.id, localLocator + ioeStr}), ioe);
-                  new Object[] { this.id, localLocator }), e);
+              new Object[] {this.id, localLocator}), e);
-                new Object[] { this.id, this.remoteDSId }));
+            new Object[] {this.id, this.remoteDSId}));
-              .toLocalizedString(new Object[] { this.id, this.remoteDSId}));
+              .toLocalizedString(new Object[] {this.id, this.remoteDSId}));
-      logger.info(LocalizedMessage.create(LocalizedStrings.AbstractGatewaySender_SENDER_0_GOT_REMOTE_LOCATOR_INFORMATION_FOR_SITE_1,
-              new Object[] { this.id, this.remoteDSId, this.proxyFailureTries }));
+      logger.info(LocalizedMessage.create(
+          LocalizedStrings.AbstractGatewaySender_SENDER_0_GOT_REMOTE_LOCATOR_INFORMATION_FOR_SITE_1,
+          new Object[] {this.id, this.remoteDSId, this.proxyFailureTries}));
-  
+

