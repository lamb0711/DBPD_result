GEODE-1070: use log4j in off-heap code

-import com.gemstone.gemfire.LogWriter;
-import com.gemstone.gemfire.i18n.LogWriterI18n;
+import com.gemstone.gemfire.internal.logging.log4j.LocalizedMessage;
-  private final LogWriterI18n log;
-    this.log = cache.getLoggerI18n();
-    if (this.log.fineEnabled()) {
-      this.log.fine("Handling new local event " + event);
+    if (logger.isDebugEnabled()) {
+      logger.debug("Handling new local event {}", event);
-      this.log.error(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_CRITICAL_THRESHOLD,
-          new Object[] { event.getMember(), "off-heap" });
+      logger.error(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_CRITICAL_THRESHOLD,
+          new Object[] { event.getMember(), "off-heap" }));
-      this.log.error(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_CRITICAL_THRESHOLD,
-          new Object[] { event.getMember(), "off-heap" });
+      logger.error(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_CRITICAL_THRESHOLD,
+          new Object[] { event.getMember(), "off-heap" }));
-      this.log.info(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_HIGH_THRESHOLD,
-          new Object[] { event.getMember(), "off-heap" });
+      logger.info(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_HIGH_THRESHOLD,
+          new Object[] { event.getMember(), "off-heap" }));
-      this.log.info(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_HIGH_THRESHOLD,
-          new Object[] { event.getMember(),  "off-heap" });
+      logger.info(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_HIGH_THRESHOLD,
+          new Object[] { event.getMember(),  "off-heap" }));
-    if (this.log.fineEnabled()) {
-      this.log.fine("Informing remote members of event " + event);
+    if (logger.isDebugEnabled()) {
+      logger.debug("Informing remote members of event {}", event);
-        this.log.error(LocalizedStrings.MemoryMonitor_EXCEPTION_OCCURED_WHEN_NOTIFYING_LISTENERS, t);
+        logger.error(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_EXCEPTION_OCCURED_WHEN_NOTIFYING_LISTENERS), t);
-  LogWriter getLogWriter() {
-    return this.log.convertToLogWriter();
-  }
-  
-      getLogWriter().fine("OffHeapMemoryUsageListener is starting " + this);
+      if (logger.isDebugEnabled()) {
+        logger.debug("OffHeapMemoryUsageListener is starting {}", this);
+      }
-              getLogWriter().warning("OffHeapMemoryUsageListener was interrupted " + this);
+              logger.warn("OffHeapMemoryUsageListener was interrupted {}", this);
-      getLogWriter().fine("OffHeapMemoryUsageListener is stopping " + this);
+      if (logger.isDebugEnabled()) {
+        logger.debug("OffHeapMemoryUsageListener is stopping {}", this);
+      }

MOV26 UPD40 INS8 MOV8 INS25 INS25 INS42 UPD42 INS21 MOV8 MOV8 INS42 UPD42 INS32 INS8 INS32 INS8 INS32 INS32 INS42 INS42 MOV21 INS42 INS42 MOV21 INS42 UPD42 INS45 INS42 INS42 INS42 INS32 INS32 INS42 INS42 MOV32 INS32 INS42 UPD42 INS45 INS42 INS42 INS42 INS40 MOV3 INS42 INS42 MOV32 INS42 UPD42 UPD40 INS42 INS42 MOV32 UPD42 MOV42 UPD42 INS45 INS52 UPD42 MOV42 UPD42 INS45 INS52 INS42 UPD42 UPD40 INS42 UPD42 UPD40 INS42 INS32 INS42 INS42 MOV40 UPD42 MOV42 UPD42 INS45 INS52 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL45 DEL42 DEL27 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL40 DEL32 DEL21 DEL8 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL45 DEL42 DEL27 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL41 DEL8 DEL31 DEL32 DEL45 DEL52 DEL27 DEL32 DEL45 DEL52 DEL27 DEL32 DEL45 DEL52 DEL27