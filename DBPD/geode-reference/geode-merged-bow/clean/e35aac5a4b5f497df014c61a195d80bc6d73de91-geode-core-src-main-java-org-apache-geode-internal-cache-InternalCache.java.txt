Merge branch 'release/1.5.0'

-import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.DistributionManager;
-import org.apache.geode.internal.cache.backup.BackupManager;
+import org.apache.geode.internal.cache.backup.BackupService;
-  DM getDistributionManager();
+  DistributionManager getDistributionManager();
-  void setRegionByPath(String path, LocalRegion r);
+  void setRegionByPath(String path, InternalRegion r);
-  <K, V> RegionAttributes<K, V> invokeRegionBefore(LocalRegion parent, String name,
+  <K, V> RegionAttributes<K, V> invokeRegionBefore(InternalRegion parent, String name,
-  void invokeRegionAfter(LocalRegion region);
+  void invokeRegionAfter(InternalRegion region);
-  void invokeBeforeDestroyed(LocalRegion region);
+  void invokeBeforeDestroyed(InternalRegion region);
-  void invokeCleanupFailedInitialization(LocalRegion region);
+  void invokeCleanupFailedInitialization(InternalRegion region);
-  boolean removeRoot(LocalRegion rootRgn);
+  boolean removeRoot(InternalRegion rootRgn);
-  LocalRegion getReinitializingRegion(String fullPath);
+  InternalRegion getReinitializingRegion(String fullPath);
+  CacheClosedException getCacheClosedException(String reason);
+
-  void clearBackupManager();
-
-  LocalRegion getRegionByPath(String path);
+  InternalRegion getRegionByPath(String path);
-  BackupManager getBackupManager();
-
-  BackupManager startBackup(InternalDistributedMember sender) throws IOException;
+  BackupService getBackupService();
-  Set<LocalRegion> getAllRegions();
+  Set<InternalRegion> getAllRegions();
-  LocalRegion getRegionByPathForProcessing(String path);
+  InternalRegion getRegionByPathForProcessing(String path);
-  Set<LocalRegion> getApplicationRegions();
+  Set<InternalRegion> getApplicationRegions();
+  void removeGatewayReceiver(GatewayReceiver receiver);
+
+  boolean removeCacheServer(CacheServer cacheServer);
+
-      InternalDistributedMember sender, LocalRegion region,
+      InternalDistributedMember sender, InternalRegion region,
+
+  void closeDiskStores();
+
+  /**
+   * If obj is a PdxInstance and pdxReadSerialized is not true
+   * then convert obj by calling PdxInstance.getObject.
+   *
+   * @return either the original obj if no conversion was needed;
+   *         or the result of calling PdxInstance.getObject on obj.
+   */
+  Object convertPdxInstanceIfNeeded(Object obj);

MOV26 MOV31 MOV31 UPD40 UPD40 INS31 INS31 INS31 INS31 UPD43 UPD43 INS43 INS42 INS44 UPD43 UPD43 UPD42 UPD74 UPD43 UPD74 INS39 INS42 INS44 INS39 INS42 MOV44 INS39 INS42 INS29 UPD43 MOV43 INS42 INS44 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 INS42 INS43 INS42 UPD42 UPD42 UPD43 UPD42 UPD43 INS43 INS42 UPD43 UPD42 UPD43 INS65 INS65 UPD42 INS43 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 INS66 INS66 INS66 INS66 INS42 DEL39 DEL42 DEL43 DEL42 DEL31