GEODE-6033: Support dynamic VMs in SharedErrorCollector (#3168)

Make SharedErrorCollector support create and bounce VM.

+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Map;
-@SuppressWarnings("serial,unused")
-  private static volatile ProtectedErrorCollector errorCollector;
+  private static volatile VisibleErrorCollector errorCollector;
+
+  private final Map<Integer, List<Throwable>> beforeBounceErrors = new HashMap<>();
-    invoker().invokeInEveryVMAndController(() -> errorCollector = new ProtectedErrorCollector());
+    invoker().invokeInEveryVMAndController(() -> invokeBefore());
-    ProtectedErrorCollector allErrors = errorCollector;
+    VisibleErrorCollector allErrors = errorCollector;
-        List<Throwable> remoteFailures = new ArrayList<>();
-        remoteFailures.addAll(vm.invoke(() -> errorCollector.errors()));
+        List<Throwable> remoteFailures = new ArrayList<>(vm.invoke(() -> errorCollector.errors()));
+  @Override
+  protected void afterCreateVM(VM vm) {
+    vm.invoke(() -> invokeBefore());
+  }
+
+  @Override
+  protected void beforeBounceVM(VM vm) {
+    beforeBounceErrors.put(vm.getId(), vm.invoke(() -> errorCollector.errors()));
+  }
+
+  @Override
+  protected void afterBounceVM(VM vm) {
+    List<Throwable> beforeBounceErrorsForVM = beforeBounceErrors.remove(vm.getId());
+    vm.invoke(() -> {
+      invokeBefore();
+      errorCollector.addErrors(beforeBounceErrorsForVM);
+    });
+  }
+
+  private void invokeBefore() {
+    errorCollector = new VisibleErrorCollector();
+  }
+
-   * Uses reflection to acquire access to the {@code List} of {@code Throwable}s in
-   * {@link ErrorCollector}.
+   * Increases visibility of {@link #verify()} to public and uses reflection to acquire access to
+   * the {@code List} of {@code Throwable}s in {@link ErrorCollector}.
-  private static class ProtectedErrorCollector extends ErrorCollector {
+  private static class VisibleErrorCollector extends ErrorCollector {
-    private final List<Throwable> protectedErrors;
+    private final List<Throwable> visibleErrors;
-    ProtectedErrorCollector() {
-      try {
-        Field superErrors = ErrorCollector.class.getDeclaredField("errors");
-        superErrors.setAccessible(true);
-        protectedErrors = (List<Throwable>) superErrors.get(this);
-      } catch (IllegalAccessException | NoSuchFieldException e) {
-        throw new RuntimeException(e);
-      }
-    }
-
-    List<Throwable> errors() {
-      return protectedErrors;
+    private VisibleErrorCollector() {
+      visibleErrors = getErrorsReference();
+
+    List<Throwable> errors() {
+      return visibleErrors;
+    }
+
+    void addErrors(Collection<Throwable> errors) {
+      visibleErrors.addAll(errors);
+    }
+
+    private List<Throwable> getErrorsReference() {
+      try {
+        Field superErrors = ErrorCollector.class.getDeclaredField("errors");
+        superErrors.setAccessible(true);
+        return (List<Throwable>) superErrors.get(this);
+      } catch (IllegalAccessException | NoSuchFieldException e) {
+        throw new RuntimeException(e);
+      }
+    }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 MOV31 MOV31 UPD43 INS83 INS83 INS74 INS59 MOV78 MOV83 MOV39 MOV42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 UPD42 INS31 INS31 UPD42 INS43 INS43 INS74 INS42 INS14 INS21 INS42 INS43 INS42 INS21 INS42 INS43 INS42 MOV21 INS42 INS43 INS42 INS60 INS21 INS21 INS83 INS42 INS8 INS39 INS42 INS44 INS8 INS83 INS74 UPD42 INS42 INS42 INS43 INS43 INS74 INS32 UPD43 INS42 INS32 INS42 INS42 INS74 INS59 INS32 INS7 INS66 INS65 UPD66 INS66 UPD66 UPD42 INS21 INS74 INS42 INS21 INS43 INS43 INS42 INS42 INS43 MOV32 MOV42 INS86 UPD42 INS42 INS42 INS86 UPD42 UPD42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS86 MOV42 MOV14 INS68 INS7 UPD42 INS43 INS43 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 UPD43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS21 INS21 UPD42 INS42 MOV11 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS86 INS32 INS42 INS42 DEL42 DEL45 DEL79 DEL7 DEL86 DEL32 DEL21 DEL8 DEL31 DEL42 DEL7 DEL21