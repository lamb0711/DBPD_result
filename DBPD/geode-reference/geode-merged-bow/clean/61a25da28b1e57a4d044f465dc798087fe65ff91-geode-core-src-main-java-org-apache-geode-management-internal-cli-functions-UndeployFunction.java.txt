GEODE-5971: Refactoring various commands (#3294)

* GEODE-5971: Refactoring various commands

- DeployCommand
- DestroyFunctionCommand
- ExecuteFunctionCommand
- ListDeployedCommand
- ListFunctionCommand
- UndeployCommand

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

-import java.util.ArrayList;
+import java.io.IOException;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.stream.Collectors;
-import org.apache.geode.SystemFailure;
-import org.apache.geode.cache.CacheClosedException;
-      String[] undeployedJars = new String[0];
-      if (ArrayUtils.isEmpty(jarFilenameList)) {
-        final List<DeployedJar> jarClassLoaders = jarDeployer.findDeployedJars();
-        undeployedJars = new String[jarClassLoaders.size() * 2];
-        int index = 0;
-        for (DeployedJar jarClassLoader : jarClassLoaders) {
-          undeployedJars[index++] = jarClassLoader.getJarName();
-          try {
-            undeployedJars[index++] =
-                ClassPathLoader.getLatest().getJarDeployer().undeploy(jarClassLoader.getJarName());
-          } catch (IllegalArgumentException iaex) {
-            // It's okay for it to have have been uneployed from this server
-            undeployedJars[index++] = iaex.getMessage();
-          }
-        }
+      List<String> jarNamesToUndeploy;
+      if (ArrayUtils.isNotEmpty(jarFilenameList)) {
+        jarNamesToUndeploy = Arrays.stream(jarFilenameList).collect(Collectors.toList());
-        List<String> undeployedList = new ArrayList<String>();
-        for (String jarFilename : jarFilenameList) {
-          try {
-            undeployedList.add(jarFilename);
-            undeployedList.add(ClassPathLoader.getLatest().getJarDeployer().undeploy(jarFilename));
-          } catch (IllegalArgumentException iaex) {
-            // It's okay for it to not have been deployed to this server
-            undeployedList.add(iaex.getMessage());
-          }
-        }
-        undeployedJars = undeployedList.toArray(undeployedJars);
+        final List<DeployedJar> jarClassLoaders = jarDeployer.findDeployedJars();
+        jarNamesToUndeploy =
+            jarClassLoaders.stream().map(l -> l.getJarName()).collect(Collectors.toList());
-      CliFunctionResult result = new CliFunctionResult(memberId, undeployedJars);
+      Map<String, String> undeployedJars = new HashMap<>();
+      for (String jarName : jarNamesToUndeploy) {
+        String jarLocation;
+        try {
+          jarLocation =
+              ClassPathLoader.getLatest().getJarDeployer().undeploy(jarName);
+        } catch (IOException | IllegalArgumentException iaex) {
+          // It's okay for it to have have been undeployed from this server
+          jarLocation = iaex.getMessage();
+        }
+        undeployedJars.put(jarName, jarLocation);
+      }
+
+      CliFunctionResult result = new CliFunctionResult(memberId, undeployedJars, null);
-    } catch (CacheClosedException cce) {
+    } catch (Exception cce) {
+      logger.error(cce.getMessage(), cce);
-
-    } catch (VirtualMachineError e) {
-      SystemFailure.initiateFailure(e);
-      throw e;
-
-    } catch (Throwable th) {
-      SystemFailure.checkFailure();
-      logger.error("Could not undeploy JAR file: {}", th.getMessage(), th);
-      CliFunctionResult result = new CliFunctionResult(memberId, th, null);
-      context.getResultSender().lastResult(result);
+

MOV26 MOV26 INS26 INS26 INS40 UPD40 UPD40 UPD40 INS40 MOV60 INS25 INS60 MOV70 MOV32 MOV8 INS8 INS74 INS59 UPD42 MOV21 MOV43 UPD43 INS21 UPD42 UPD42 MOV60 INS21 INS43 MOV43 MOV43 INS42 INS14 MOV43 UPD42 INS60 UPD42 INS32 INS7 INS42 INS74 MOV43 INS59 INS32 MOV43 INS33 INS42 INS42 INS32 INS42 UPD42 INS32 INS42 INS32 INS43 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS32 MOV32 UPD42 MOV42 MOV32 INS42 INS84 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 MOV32 UPD42 MOV42 INS86 UPD42 UPD42 INS42 INS43 MOV43 UPD42 UPD42 INS59 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 DEL42 DEL43 DEL74 DEL14 DEL85 DEL5 DEL32 DEL34 DEL27 DEL3 DEL39 DEL42 DEL34 DEL59 DEL60 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL37 DEL2 DEL42 DEL32 DEL42 DEL42 DEL37 DEL2 DEL42 DEL42 DEL37 DEL2 DEL32 DEL7 DEL42 DEL43 DEL85 DEL5 DEL42 DEL85 DEL5 DEL34 DEL3 DEL59 DEL60 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL33 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12