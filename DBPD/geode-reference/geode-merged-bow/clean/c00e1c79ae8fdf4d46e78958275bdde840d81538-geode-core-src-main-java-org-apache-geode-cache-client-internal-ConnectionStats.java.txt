GEODE-6425: Fixes rollover in some cache stats (#3214)

Changes the following CachePerfStats to long:
 - gets
 - misses
 - put
 - update
 - create
 - destroys
 - invalidates 
 - clear

Handles the error caused by attempting to retrieve a long type stat as an
int. Returns the long value as an int with overflow. This is consistent
with previous behavior of the stats

Co-authored-by: Helena Bales <hbales@pivotal.io>
Co-authored-by: Jacob Barrett <jbarrett@pivotal.io>

-              f.createIntCounter("gets", "Total number of gets completed successfully", "gets"),
-              f.createIntCounter("getFailures", "Total number of get attempts that have failed",
+              f.createLongCounter("gets", "Total number of gets completed successfully", "gets"),
+              f.createLongCounter("getFailures", "Total number of get attempts that have failed",
-              f.createIntCounter("getTimeouts", "Total number of get attempts that have timed out",
+              f.createLongCounter("getTimeouts", "Total number of get attempts that have timed out",
-              f.createIntCounter("puts", "Total number of puts completed successfully", "puts"),
-              f.createIntCounter("putFailures", "Total number of put attempts that have failed",
+              f.createLongCounter("puts", "Total number of puts completed successfully", "puts"),
+              f.createLongCounter("putFailures", "Total number of put attempts that have failed",
-              f.createIntCounter("putTimeouts", "Total number of put attempts that have timed out",
+              f.createLongCounter("putTimeouts", "Total number of put attempts that have timed out",
-              f.createIntCounter("destroys", "Total number of destroys completed successfully",
+              f.createLongCounter("destroys", "Total number of destroys completed successfully",
-              f.createIntCounter("destroyFailures",
+              f.createLongCounter("destroyFailures",
-              f.createIntCounter("destroyTimeouts",
+              f.createLongCounter("destroyTimeouts",
-              f.createIntCounter("clears", "Total number of clears completed successfully",
+              f.createLongCounter("clears", "Total number of clears completed successfully",
-              f.createIntCounter("clearFailures", "Total number of clear attempts that have failed",
+              f.createLongCounter("clearFailures",
+                  "Total number of clear attempts that have failed",
-              f.createIntCounter("clearTimeouts",
+              f.createLongCounter("clearTimeouts",
-              f.createIntCounter("invalidates",
+              f.createLongCounter("invalidates",
-              f.createIntCounter("invalidateFailures",
+              f.createLongCounter("invalidateFailures",
-              f.createIntCounter("invalidateTimeouts",
+              f.createLongCounter("invalidateTimeouts",
-    this.stats.incInt(endGetId, 1);
+    this.stats.incLong(endGetId, 1L);
-    this.stats.incInt(endPutId, 1);
+    this.stats.incLong(endPutId, 1L);
-    this.stats.incInt(endDestroyId, 1);
+    this.stats.incLong(endDestroyId, 1);
-    this.stats.incInt(endClearId, 1);
+    this.stats.incLong(endClearId, 1L);
-    this.stats.incInt(endInvalidateId, 1);
+    this.stats.incLong(endInvalidateId, 1L);

UPD42 UPD34 UPD42 UPD34 UPD42 UPD42 UPD34 UPD42 UPD34 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42