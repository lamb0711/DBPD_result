Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

+import org.apache.geode.security.SecurableComponents;
-  /**
-   * "off-heap-memory-size" with value of "" or "<size>[g|m]"
-   */
+  private String securityEnabledComponents = DEFAULT_SECURITY_ENABLED_COMPONENTS;
+
+  /** "off-heap-memory-size" with value of "" or "<size>[g|m]" */
+
+
+    this.securityEnabledComponents = ((DistributionConfigImpl) other).securityEnabledComponents;
+    if(security.containsKey(SECURITY_MANAGER) && !security.containsKey(SECURITY_ENABLED_COMPONENTS)){
+      security.setProperty(SECURITY_ENABLED_COMPONENTS, SecurableComponents.ALL);
+    }
+  public String getSecurityEnabledComponents() {
+    return securityEnabledComponents;
+  }
+
+  @Override
+  public void setSecurityEnabledComponents(final String securityEnabledComponents) {
+    this.securityEnabledComponents = (String) checkAttribute(SECURITY_ENABLED_COMPONENTS, securityEnabledComponents);
+  }
+
+  @Override
+    if (sslProtocols == null) {
+      if (other.sslProtocols != null)
+        return false;
+    } else if (!sslProtocols.equals(other.sslProtocols))
+      return false;
+    if (sslRequireAuthentication != other.sslRequireAuthentication)
+      return false;
+    if (startDevRestApi != other.startDevRestApi)
+      return false;
+    if (startLocator == null) {
+      if (other.startLocator != null)
+        return false;
+    } else if (!startLocator.equals(other.startLocator))
+      return false;
+    if (startLocatorPort != other.startLocatorPort)
+      return false;
+    if (statisticArchiveFile == null) {
+      if (other.statisticArchiveFile != null)
+        return false;
+    } else if (!statisticArchiveFile.equals(other.statisticArchiveFile))
+      return false;
+    if (statisticSampleRate != other.statisticSampleRate)
+      return false;
+    if (statisticSamplingEnabled != other.statisticSamplingEnabled)
+      return false;
+    if (tcpPort != other.tcpPort)
+      return false;
+    if (udpFragmentSize != other.udpFragmentSize)
+      return false;
+    if (udpRecvBufferSize != other.udpRecvBufferSize)
+      return false;
+    if (udpSendBufferSize != other.udpSendBufferSize)
+      return false;
+    if (useSharedConfiguration != other.useSharedConfiguration)
+      return false;
+    if (userCommandPackages == null) {
+      if (other.userCommandPackages != null)
+        return false;
+    } else if (!userCommandPackages.equals(other.userCommandPackages))
+      return false;
+    if (userDefinedProps == null) {
+      if (other.userDefinedProps != null)
+        return false;
+    } else if (!userDefinedProps.equals(other.userDefinedProps))
+      return false;
+    if (!StringUtils.equals(securityEnabledComponents, other.securityEnabledComponents)) {
+      return false;
+    }
+    result = prime * result
+        + ((userCommandPackages == null) ? 0 : userCommandPackages.hashCode());
+    result = prime * result
+        + ((userDefinedProps == null) ? 0 : userDefinedProps.hashCode());
+    result = prime * result + ((securityEnabledComponents == null) ? 0 : securityEnabledComponents.hashCode());

INS26 INS40 INS23 INS31 INS31 INS83 INS43 INS59 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS21 INS25 MOV41 INS42 INS42 INS41 INS42 INS83 INS43 INS42 INS21 INS25 INS21 INS21 INS21 UPD66 INS7 INS27 INS8 INS42 INS42 INS7 MOV27 MOV8 INS25 INS7 INS7 INS7 INS22 INS22 INS32 INS38 INS21 INS22 INS11 MOV38 INS8 INS42 INS27 INS42 INS27 INS42 INS27 INS52 INS42 INS36 INS42 INS42 INS42 INS42 INS32 INS32 INS52 INS42 INS43 INS32 INS41 MOV25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS27 INS36 INS27 INS36 INS27 INS36 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS9 INS27 INS8 INS25 INS27 INS41 INS27 INS41 INS27 INS8 INS25 INS27 INS41 INS27 INS8 INS25 INS27 INS41 INS27 INS41 INS27 INS41 INS27 INS41 INS27 INS41 INS27 INS41 INS27 INS41 INS27 INS8 INS25 INS27 INS8 INS25 INS38 MOV8 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS43 INS42 INS42 INS33 INS25 INS38 INS41 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS33 INS25 INS38 INS41 INS42 INS40 INS9 INS42 INS33 INS25 INS38 INS41 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS40 INS9 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS42 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS42 INS42 INS42 INS40 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS42 INS33 INS42 INS33 INS42 INS33 DEL8 DEL25