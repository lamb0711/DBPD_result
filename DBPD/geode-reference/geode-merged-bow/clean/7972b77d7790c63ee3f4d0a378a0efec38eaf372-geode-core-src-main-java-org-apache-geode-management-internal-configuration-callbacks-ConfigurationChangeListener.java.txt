GEODE-4029: Deployed jars may not be correct when multiple locators aâ€¦ (#1103)

* GEODE-4029: Deployed jars may not be correct when multiple locators are in use

* GEODE-4029: Review updates

+import java.util.Optional;
+import org.apache.geode.cache.CacheFactory;
+import org.apache.geode.cache.GemFireCache;
+import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
+  // Don't process the event locally. The action of adding or removing a jar should already have
+  // been performed by DeployCommand or UndeployCommand.
-    addOrRemoveJarFromFilesystem(event);
+    if (event.isOriginRemote()) {
+      addOrRemoveJarFromFilesystem(event);
+    }
-    addOrRemoveJarFromFilesystem(event);
+    if (event.isOriginRemote()) {
+      addOrRemoveJarFromFilesystem(event);
+    }
-  // when a new jar is added, if it does not exist in the current locator, download it from
-  // another locator.
-  // when a jar is removed, if it exists in the current locator, remove it.
+  // Here we first remove any jars which are not used anymore and then we re-add all of the
+  // necessary jars again. This may appear a bit blunt but it also accounts for the situation
+  // where a jar is only being updated - i.e. the name does not change, only the content.
-    Configuration newConfig = (Configuration) event.getNewValue();
-    Configuration oldConfig = (Configuration) event.getOldValue();
+    Configuration newConfig = event.getNewValue();
+    Configuration oldConfig = event.getOldValue();
-    Set<String> jarsAdded = new HashSet<>(newJars);
+
-
-    jarsAdded.removeAll(oldJars);
-    if (!jarsAdded.isEmpty() && !jarsRemoved.isEmpty()) {
-      throw new IllegalStateException(
-          "We don't expect to have jars both added and removed in one event");
-    }
-
-    for (String jarAdded : jarsAdded) {
-      if (!jarExistsInFilesystem(group, jarAdded)) {
-        try {
-          sharedConfig.downloadJarFromOtherLocators(group, jarAdded);
-        } catch (Exception e) {
-          logger.error("Unable to add jar: " + jarAdded, e);
-        }
-      }
-    }
-
+
+    String triggerMemberId = (String) event.getCallbackArgument();
+    DistributedMember locator = getDistributedMember(triggerMemberId);
+    for (String jarAdded : newJars) {
+      try {
+        sharedConfig.downloadJarFromLocator(group, jarAdded, locator);
+      } catch (Exception e) {
+        logger.error("Unable to add jar: " + jarAdded, e);
+      }
+    }
-  private boolean jarExistsInFilesystem(String groupName, String jarName) {
-    return sharedConfig.getPathToJarOnThisLocator(groupName, jarName).toFile().exists();
-  }
+  private DistributedMember getDistributedMember(String memberName) {
+    InternalCache cache = (InternalCache) CacheFactory.getAnyInstance();
+    Set<DistributedMember> locators = new HashSet<>(
+        cache.getDistributionManager().getAllHostedLocatorsWithSharedConfiguration().keySet());
+    Optional<DistributedMember> locator =
+        locators.stream().filter(x -> x.getId().equals(memberName)).findFirst();
+    return locator.get();
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS8 MOV70 INS43 INS42 INS8 MOV21 INS25 INS25 INS60 INS60 INS42 UPD42 INS60 INS60 INS60 INS41 INS32 INS8 INS32 MOV8 MOV43 MOV43 MOV43 INS59 INS43 INS59 UPD42 MOV8 INS43 INS59 UPD74 MOV74 INS59 INS74 INS59 INS32 INS42 INS42 MOV21 MOV42 INS42 MOV32 MOV32 UPD42 MOV42 INS11 INS42 INS42 INS32 INS42 INS42 INS11 INS43 INS42 INS14 INS43 INS43 INS42 INS32 UPD42 MOV42 INS42 MOV43 INS32 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS42 MOV74 INS32 INS42 UPD42 MOV42 MOV32 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS86 INS32 INS42 INS42 UPD42 MOV42 INS59 INS32 UPD42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL14 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL32 DEL38 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL38 DEL25 DEL8 DEL39 DEL42 DEL42 DEL44 DEL32 DEL32 DEL41 DEL8