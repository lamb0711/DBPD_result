GEODE-2685: support getStatistics on PartitionedRegion (#3576)

getStatistics for a partitioned region that is not a proxy will return a CacheStatistics whose methods always compute their results from local bucket state.
For a proxy partitioned region The CacheStatistics methods will always return 0.
-  /**
-   * @since GemFire 5.0
-   * @throws UnsupportedOperationException OVERRIDES
-   */
-  public CacheStatistics getStatistics() {
-    throw new UnsupportedOperationException();
+  public long getLastModifiedTime() {
+    if (!this.canStoreDataLocally()) {
+      return 0;
+    }
+    Set<BucketRegion> buckets = this.dataStore.getAllLocalBucketRegions();
+    long lastModifiedTime =
+        buckets.stream().map(x -> x.getLastModifiedTime()).reduce(0L, (a, b) -> a > b ? a : b);
+    return lastModifiedTime;
+  }
+
+  @Override
+  public long getLastAccessedTime() {
+    if (!this.canStoreDataLocally()) {
+      return 0;
+    }
+    Set<BucketRegion> buckets = this.dataStore.getAllLocalBucketRegions();
+    long lastAccessedTime =
+        buckets.stream().map(x -> x.getLastAccessedTime()).reduce(0L, (a, b) -> a > b ? a : b);
+    return lastAccessedTime;
+  }
+
+  @Override
+  public long getMissCount() {
+    if (!this.canStoreDataLocally()) {
+      return 0;
+    }
+    Set<BucketRegion> buckets = this.dataStore.getAllLocalBucketRegions();
+    return buckets.stream().map(x -> x.getMissCount()).reduce(0L, (a, b) -> a + b);
+  }
+
+  @Override
+  public long getHitCount() {
+    if (!this.canStoreDataLocally()) {
+      return 0;
+    }
+    Set<BucketRegion> buckets = this.dataStore.getAllLocalBucketRegions();
+    return buckets.stream().map(x -> x.getHitCount()).reduce(0L, (a, b) -> a + b);
+  }
+
+  @Override
+  public void resetCounts() {
+    if (!this.canStoreDataLocally()) {
+      return;
+    }
+    Set<BucketRegion> buckets = this.dataStore.getAllLocalBucketRegions();
+    for (BucketRegion bucket : buckets) {
+      bucket.resetCounts();
+    }

INS31 INS31 INS31 INS31 INS31 MOV78 INS83 INS39 INS42 INS8 INS78 MOV83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 UPD42 MOV42 MOV8 INS78 INS83 INS39 INS42 INS8 INS25 INS60 INS60 INS41 INS42 INS25 INS60 INS60 INS41 INS42 INS25 INS60 INS41 INS42 INS25 INS60 INS41 INS42 INS25 INS60 INS70 INS38 INS8 INS74 INS59 INS39 INS59 INS42 INS38 INS8 INS74 INS59 INS39 INS59 INS42 INS38 INS8 INS74 INS59 INS32 INS38 INS8 INS74 INS59 INS32 INS38 INS8 INS74 INS59 INS44 INS42 INS8 INS32 INS41 INS43 INS43 INS42 INS32 INS42 INS32 INS32 INS41 INS43 INS43 INS42 INS32 INS42 INS32 INS32 INS41 INS43 INS43 INS42 INS32 INS32 INS42 INS34 INS86 INS32 INS41 INS43 INS43 INS42 INS32 INS32 INS42 INS34 INS86 INS32 INS41 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS52 INS42 INS34 INS42 INS42 INS22 INS42 INS32 INS42 INS34 INS86 INS52 INS42 INS34 UPD42 MOV42 INS42 INS22 INS42 INS32 INS42 INS34 INS86 INS52 INS42 INS34 INS42 INS42 INS22 INS42 INS32 INS42 INS86 INS59 INS59 INS27 INS52 INS42 INS34 INS42 UPD42 MOV42 INS22 INS42 INS32 INS42 INS86 INS59 INS59 INS27 INS52 INS42 INS42 INS42 INS22 INS42 INS42 INS32 INS52 INS42 INS32 INS42 INS86 INS59 INS59 INS16 INS52 INS42 INS32 INS42 INS86 INS59 INS59 INS16 INS52 INS42 INS42 INS42 INS59 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS59 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS59 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS59 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL43 DEL14 DEL53 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL43 DEL31