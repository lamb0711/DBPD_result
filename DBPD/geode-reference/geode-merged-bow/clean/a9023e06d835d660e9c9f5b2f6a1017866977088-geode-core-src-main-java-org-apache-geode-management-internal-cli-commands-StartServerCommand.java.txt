GEODE-5212: fix failing StartLocator and Server command DUnit tests (#2580)

   * Added unit tests to cover different working directory cases
   * Removed acceptance tests related to working directory as they
     seem to be fragile as paths are environment specific

Signed-off-by: Kirk Lund <klund@apache.org>
+import java.io.IOException;
+    return doStartServer(memberName, assignBuckets, bindAddress, cacheXmlPathname, classpath,
+        criticalHeapPercentage, criticalOffHeapPercentage, workingDirectory, disableDefaultServer,
+        disableExitWhenOutOfMemory, enableTimeStatistics, evictionHeapPercentage,
+        evictionOffHeapPercentage, force, group, hostNameForClients, jmxManagerHostnameForClients,
+        includeSystemClasspath, initialHeap, jvmArgsOpts, locators, locatorWaitTime, lockMemory,
+        logLevel, maxConnections, maxHeap, maxMessageCount, maxThreads, mcastBindAddress, mcastPort,
+        memcachedPort, memcachedProtocol, memcachedBindAddress, redisPort, redisBindAddress,
+        redisPassword, messageTimeToLive, offHeapMemorySize, gemfirePropertiesFile, rebalance,
+        gemfireSecurityPropertiesFile, serverBindAddress, serverPort, socketBufferSize,
+        springXmlLocation, statisticsArchivePathname, requestSharedConfiguration, startRestApi,
+        httpServicePort, httpServiceBindAddress, userName, passwordToUse, redirectOutput);
+  }
+
+  Result doStartServer(String memberName, Boolean assignBuckets, String bindAddress,
+      String cacheXmlPathname, String classpath, Float criticalHeapPercentage,
+      Float criticalOffHeapPercentage, String workingDirectory, Boolean disableDefaultServer,
+      Boolean disableExitWhenOutOfMemory, Boolean enableTimeStatistics,
+      Float evictionHeapPercentage, Float evictionOffHeapPercentage, Boolean force, String group,
+      String hostNameForClients, String jmxManagerHostnameForClients,
+      Boolean includeSystemClasspath, String initialHeap, String[] jvmArgsOpts, String locators,
+      Integer locatorWaitTime, Boolean lockMemory, String logLevel, Integer maxConnections,
+      String maxHeap, Integer maxMessageCount, Integer maxThreads, String mcastBindAddress,
+      Integer mcastPort, Integer memcachedPort, String memcachedProtocol,
+      String memcachedBindAddress, Integer redisPort, String redisBindAddress, String redisPassword,
+      Integer messageTimeToLive, String offHeapMemorySize, File gemfirePropertiesFile,
+      Boolean rebalance, File gemfireSecurityPropertiesFile, String serverBindAddress,
+      Integer serverPort, Integer socketBufferSize, String springXmlLocation,
+      String statisticsArchivePathname, Boolean requestSharedConfiguration, Boolean startRestApi,
+      String httpServicePort, String httpServiceBindAddress, String userName, String passwordToUse,
+      Boolean redirectOutput)
+      throws MalformedObjectNameException, IOException, InterruptedException {
-      stderrReader.stopAsync(StartMemberUtils.PROCESS_STREAM_READER_ASYNC_STOP_TIMEOUT_MILLIS); // stop
-                                                                                                // will
-                                                                                                // close
-      // ErrorStream
+      stderrReader.stopAsync(StartMemberUtils.PROCESS_STREAM_READER_ASYNC_STOP_TIMEOUT_MILLIS);
+      // stop will close ErrorStream
-  private void addJvmOptionsForOutOfMemoryErrors(final List<String> commandLine) {
+  static void addJvmOptionsForOutOfMemoryErrors(final List<String> commandLine) {

INS26 INS40 INS31 INS8 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS43 MOV8 UPD83 MOV25 MOV25 MOV21 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS5 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42