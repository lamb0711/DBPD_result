GEODE-5727: rework how ResultModel deal with file contents. (#2460)

* file saving should be handled by the command's postExecutor to save to appropriate places
* after saving file content to a directory, the ResultModel turned the FileResultModel into InfoResultModel.
* gfsh should not be the place to save files in ModelCommandResult.

-import java.text.MessageFormat;
-import org.apache.geode.management.internal.cli.i18n.CliStrings;
-  private String message;
-  public FileResultModel(String fileName, String content, String message) {
+  public FileResultModel(String fileName, String content) {
-    this.message = message;
-  public String getMessage() {
-    return message;
-  }
-
-  public void setMessage(String message) {
-    this.message = message;
-  }
-
-  public void writeFile(String directory) throws IOException {
-    String options = "(y/N)";
+  /**
+   * at this point, the dir should already exist and is confirmed as a directory
+   * filename in this instance should be file name only. no path in the file name
+   *
+   * @param directory the directory where to write the content of byte[] to with the filename
+   * @return the message you would like to return to the user.
+   */
+  public String saveFile(File directory) throws IOException {
+    String options = "(Y/N)";
+    File file = new File(directory, filename).getAbsoluteFile();
-    File fileToDumpData = new File(filename);
-    if (!fileToDumpData.isAbsolute()) {
-      if (directory == null || directory.isEmpty()) {
-        directory = System.getProperty("user.dir", ".");
-      }
-      fileToDumpData = new File(directory, filename);
-    }
-
-    File parentDirectory = fileToDumpData.getParentFile();
-    if (parentDirectory != null) {
-      parentDirectory.mkdirs();
-    }
-    if (fileToDumpData.exists()) {
-      String fileExistsMessage =
-          CliStrings.format(CliStrings.ABSTRACTRESULTDATA__MSG__FILE_WITH_NAME_0_EXISTS_IN_1,
-              filename, fileToDumpData.getParent(), options);
+    if (file.exists()) {
+      String fileExistsMessage = String.format("File with name \"$s\" already exists in \"$s\".",
+          filename, directory.getAbsolutePath());
-        fileExistsMessage = fileExistsMessage + " Overwrite? " + options + " : ";
+        fileExistsMessage += " Overwrite? " + options + " : ";
-          return;
+          return "User aborted. Did not overwrite " + file.getAbsolutePath();
-        throw new IOException(fileExistsMessage);
+        return fileExistsMessage;
-    } else if (!parentDirectory.exists()) {
-      handleCondition(CliStrings.format(
-          CliStrings.ABSTRACTRESULTDATA__MSG__PARENT_DIRECTORY_OF_0_DOES_NOT_EXIST,
-          fileToDumpData.getAbsolutePath()));
-      return;
-    } else if (!parentDirectory.canWrite()) {
-      handleCondition(CliStrings.format(
-          CliStrings.ABSTRACTRESULTDATA__MSG__PARENT_DIRECTORY_OF_0_IS_NOT_WRITABLE,
-          fileToDumpData.getAbsolutePath()));
-      return;
-    } else if (!parentDirectory.isDirectory()) {
-      handleCondition(
-          CliStrings.format(CliStrings.ABSTRACTRESULTDATA__MSG__PARENT_OF_0_IS_NOT_DIRECTORY,
-              fileToDumpData.getAbsolutePath()));
-      return;
-      FileWriter fw = new FileWriter(fileToDumpData);
+      FileWriter fw = new FileWriter(file);
-      FileOutputStream fos = new FileOutputStream(fileToDumpData);
+      FileOutputStream fos = new FileOutputStream(file);
-    if (message != null && !message.isEmpty()) {
-      if (gfsh != null) {
-        Gfsh.println(MessageFormat.format(message, fileToDumpData.getAbsolutePath()));
-      }
-    }
-  }
-
-  private void handleCondition(String message) throws IOException {
-    Gfsh gfsh = Gfsh.getCurrentInstance();
-    // null check required in GfshVM too to avoid test issues
-    if (gfsh != null && !gfsh.isQuietMode()) {
-      gfsh.logWarning(message, null);
-    } else {
-      throw new IOException(message);
-    }
+    return "File saved to " + file.getAbsolutePath();

INS29 MOV43 UPD42 INS65 INS65 INS65 MOV43 INS41 INS66 INS66 INS42 INS66 INS66 INS27 UPD45 UPD42 INS32 UPD42 INS45 INS32 MOV14 INS42 MOV43 MOV43 UPD42 MOV42 MOV42 INS41 MOV43 UPD42 INS45 UPD7 INS42 MOV43 UPD42 UPD42 UPD42 MOV43 UPD42 INS27 INS45 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL83 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL39 DEL42 DEL14 DEL42 DEL42 DEL32 DEL38 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL40 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL41 DEL8 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL41 DEL8 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL41 DEL8 DEL25 DEL25 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL33 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31