Merge branch 'develop' of https://git-wip-us.apache.org/repos/asf/geode into develop

* 'develop' of https://git-wip-us.apache.org/repos/asf/geode: (57 commits)
  GEODE-2551 Fix code issues found by AppChecker
  Revert "GEODE-1887: Now Size api goes through ServerProxy when cache is of type client and DataPolicy is Empty."
  GEODE-2538: Don't deserialize values on the server when getting results
  GEODE-2461: remove json4s-ast_2.10 as explicit dependency
  GEODE-2547: Interest registration no longer causes a CacheLoader to be invoked
  GEODE-2526: Enhance log statement to include ResourceTypeName
  GEODE-880 Remove unused classes
  GEODE-2460: update dependency versions
  GEODE-1995: Removed ReliableMessageQueue, ReliableMessageQueueFactory, ReliableMessageQueueFactoryImpl and it's usage in the code from GemfireCacheImpl and DistributedRegion.
  GEODE-2550 Improve README and BUILDING
  GEODE-2538: Don't invoke a cache loader when fetching values for a lucene query
  GEODE-2404: Added support for destroying lucene indexes
  GEODE-2545: NPE during lucene query execution when cache is closing or region is destroyed
  GEODE-2515: Disabling BaseLineAndCompareQueryPerfJUnitTest
  GEODE-2142: Removing JSON licence stuff from NOTICE files
  GEODE-2142: removing tests so run precheckin
  GEODE-2142: final compiling build
  GEODE-2142: cyclical dependency in gradle build
  GEODE-2142: spotless
  GEODE-2142: Refactoring of tests to work with new JSONObject class. Changing file export to use Base64 encoding.
  ...

+import org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue;
+
+  private static LuceneExceptionObserver exceptionObserver = exception -> {
+  };
+
+    try {
+      return process(events);
+    } catch (RuntimeException e) {
+      exceptionObserver.onException(e);
+      throw e;
+    } catch (Error e) {
+      exceptionObserver.onException(e);
+      throw e;
+    }
+
+  }
+
+  protected boolean process(final List<AsyncEvent> events) {
-    } catch (IOException e) {
-      logger.debug("Unable to save to lucene index", e);
-      return false;
+    } catch (IOException e) {
+      throw new InternalGemFireError("Unable to save to lucene index", e);
+
+  public static void setExceptionObserver(LuceneExceptionObserver observer) {
+    if (observer == null) {
+      observer = exception -> {
+      };
+    }
+
+    exceptionObserver = observer;
+  }
+
+  public static LuceneExceptionObserver getExceptionObserver() {
+    return exceptionObserver;
+  }

INS26 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS43 INS59 MOV78 INS83 INS39 INS42 MOV44 INS8 UPD83 UPD42 INS44 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS8 INS42 INS42 INS86 INS54 INS83 INS74 INS42 MOV12 INS43 INS42 INS25 INS21 INS42 INS41 INS59 INS8 INS8 INS12 INS12 INS43 INS43 INS42 INS27 INS8 INS7 INS42 INS42 INS41 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS32 INS43 INS42 INS21 INS53 INS43 INS42 INS21 INS53 INS53 INS7 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS14 INS42 INS86 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS59 INS8 INS42 INS42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL9 DEL41