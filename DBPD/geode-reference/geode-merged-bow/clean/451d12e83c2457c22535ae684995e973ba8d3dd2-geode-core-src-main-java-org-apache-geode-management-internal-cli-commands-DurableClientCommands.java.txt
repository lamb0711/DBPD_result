GEODE-2919: Provide finer grained security

 - For full details, see https://cwiki.apache.org/confluence/display/GEODE/Finer+grained+security

+import java.util.HashMap;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeMap;
+
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
-import org.apache.geode.management.internal.cli.result.CommandResultException;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeMap;
+import org.apache.geode.security.ResourcePermission.Target;
-  @CliMetaData(shellOnly = false)
+  @CliMetaData()
-    Result result = null;
+    Result result;
-      Map<String, List<String>> memberCqNamesMap = new TreeMap<String, List<String>>();
-      Map<String, List<String>> errorMessageNodes = new HashMap<String, List<String>>();
-      Map<String, List<String>> exceptionMessageNodes = new HashMap<String, List<String>>();
+      Map<String, List<String>> memberCqNamesMap = new TreeMap<>();
+      Map<String, List<String>> errorMessageNodes = new HashMap<>();
+      Map<String, List<String>> exceptionMessageNodes = new HashMap<>();
-  @CliMetaData(shellOnly = false)
+  @CliMetaData()
-      @CliOption(key = CliStrings.COUNT_DURABLE_CQ_EVENTS__DURABLE__CQ__NAME, mandatory = false,
+      @CliOption(key = CliStrings.COUNT_DURABLE_CQ_EVENTS__DURABLE__CQ__NAME,
-      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS}, mandatory = false,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS}, mandatory = false,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-    Result result = null;
+    Result result;
-  @CliMetaData(shellOnly = false)
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @CliMetaData()
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.QUERY)
-      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS}, mandatory = false,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS}, mandatory = false,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-    Result result = null;
+    Result result;
-  @CliMetaData(shellOnly = false)
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  @CliMetaData()
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.QUERY)
-      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS}, mandatory = false,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS}, mandatory = false,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-    Result result = null;
+    Result result;
-    Result result = null;
+    Result result;
-    Map<String, List<String>> errorMap = new HashMap<String, List<String>>();
-    Map<String, List<String>> successMap = new HashMap<String, List<String>>();
-    Map<String, List<String>> exceptionMap = new HashMap<String, List<String>>();
+    Map<String, List<String>> errorMap = new HashMap<>();
+    Map<String, List<String>> successMap = new HashMap<>();
+    Map<String, List<String>> exceptionMap = new HashMap<>();
-    /***
+    /*
-    Result result = null;
+    Result result;
-    Map<String, List<String>> failureMap = new HashMap<String, List<String>>();
-    Map<String, Long> memberQueueSizeTable = new TreeMap<String, Long>();
+    Map<String, List<String>> failureMap = new HashMap<>();
+    Map<String, Long> memberQueueSizeTable = new TreeMap<>();
-    /***
+    /*
-        memberResult.getSubscriptionQueueSize();
-      members = new LinkedList<String>();
+      members = new LinkedList<>();
-      ird.addLine(CliStrings.format(CliStrings.ACTION_SUCCCEEDED_ON_MEMBER, successMessage));
+      ird.addLine(CliStrings.format(CliStrings.ACTION_SUCCEEDED_ON_MEMBER, successMessage));
-      List<String> successfullMembers = successMap.get(successMessage);
+      List<String> successfulMembers = successMap.get(successMessage);
-      for (String member : successfullMembers) {
+      for (String member : successfulMembers) {

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 MOV60 INS80 INS80 INS60 MOV60 MOV60 UPD40 INS42 INS40 UPD40 INS42 INS40 MOV74 INS59 INS42 INS14 UPD42 UPD42 INS74 UPD74 UPD74 UPD74 UPD74 UPD42 UPD42 UPD42 MOV43 UPD42 UPD74 UPD74 UPD74 UPD74 UPD40 DEL42 DEL9 DEL80 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL33 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL33 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL42 DEL9 DEL80 DEL33 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43