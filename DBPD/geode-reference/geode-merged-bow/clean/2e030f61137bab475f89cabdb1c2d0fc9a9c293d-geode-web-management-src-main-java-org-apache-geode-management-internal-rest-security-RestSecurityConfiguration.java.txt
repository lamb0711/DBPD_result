GEODE-7156: add token based authentication support in management restâ€¦ (#4005)

* GEODE-7156: add token based authentication support in management rest api

Co-authored-by: Joris Melchior <jmelchior@pivotal.io>

* added security-auth-token-enabled-components property
* pass this property to the management web application context
* enabled auth token filter when that property is set
* improve SimpleSecurityManager to authenticate mock token

+import org.springframework.security.web.authentication.AuthenticationFailureHandler;
+import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;
-      http.httpBasic().authenticationEntryPoint(new AuthenticationEntryPoint() {
-        @Override
-        public void commence(HttpServletRequest request, HttpServletResponse response,
-            AuthenticationException authException)
-            throws IOException, ServletException {
-          response.addHeader("WWW-Authenticate", "Basic realm=\"GEODE\"");
-          response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
-          response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);
-          ClusterManagementResult result =
-              new ClusterManagementResult(ClusterManagementResult.StatusCode.UNAUTHENTICATED,
-                  authException.getMessage());
-          objectMapper.writeValue(response.getWriter(), result);
-        }
-      });
+      if (authProvider.isAuthTokenEnabled()) {
+        JwtAuthenticationFilter tokenEndpointFilter = new JwtAuthenticationFilter();
+        tokenEndpointFilter.setAuthenticationSuccessHandler((request, response, authentication) -> {
+        });
+        tokenEndpointFilter.setAuthenticationFailureHandler(new AuthenticationFailedHandler());
+        http.addFilterBefore(tokenEndpointFilter, BasicAuthenticationFilter.class);
+      } else {
+        http.httpBasic().authenticationEntryPoint(new AuthenticationFailedHandler());
+      }
+
+  private class AuthenticationFailedHandler
+      implements AuthenticationFailureHandler, AuthenticationEntryPoint {
+    @Override
+    public void commence(HttpServletRequest request, HttpServletResponse response,
+        AuthenticationException authException)
+        throws IOException, ServletException {
+      response.addHeader("WWW-Authenticate", "Basic realm=\"GEODE\"");
+      response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
+      response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);
+      ClusterManagementResult result =
+          new ClusterManagementResult(ClusterManagementResult.StatusCode.UNAUTHENTICATED,
+              authException.getMessage());
+      objectMapper.writeValue(response.getWriter(), result);
+    }
+
+    @Override
+    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response,
+        AuthenticationException exception)
+        throws IOException, ServletException {
+      commence(request, response, exception);
+    }
+  }

INS26 INS26 INS40 INS40 INS55 INS8 INS83 INS42 INS43 MOV43 MOV31 INS31 MOV21 INS25 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 MOV32 INS8 MOV8 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS21 MOV25 INS42 INS42 INS42 INS32 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS21 INS21 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS86 INS42 INS42 INS14 INS42 INS42 INS42 INS57 INS43 INS59 INS59 INS59 INS8 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL1 DEL8