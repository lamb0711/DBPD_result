Merge branch 'release/1.0.0-incubating.M3'

-import hydra.Log;
+import batterytest.greplogs.ExpectedStrings;
+import batterytest.greplogs.LogConsumer;
+import com.gemstone.gemfire.distributed.Locator;
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
+import com.gemstone.gemfire.distributed.internal.InternalLocator;
+import com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave;
+import com.gemstone.gemfire.internal.AvailablePortHelper;
+import com.gemstone.gemfire.internal.logging.LogService;
+import com.gemstone.gemfire.test.dunit.DUnitEnv;
+import com.gemstone.gemfire.test.dunit.Host;
+import com.gemstone.gemfire.test.dunit.SerializableCallable;
+import com.gemstone.gemfire.test.dunit.VM;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.FileReader;
-import java.io.IOException;
-import java.lang.reflect.Method;
-import java.net.InetAddress;
-import java.net.URISyntaxException;
-import java.nio.channels.FileChannel;
-import java.nio.charset.Charset;
-import java.rmi.AccessException;
-import java.rmi.AlreadyBoundException;
-import java.rmi.NotBoundException;
-import java.rmi.Remote;
-import java.rmi.RemoteException;
-import java.rmi.registry.LocateRegistry;
-import java.rmi.registry.Registry;
-import java.rmi.server.UnicastRemoteObject;
-import java.util.List;
-import java.util.Properties;
-
-import batterytest.greplogs.ExpectedStrings;
-import batterytest.greplogs.LogConsumer;
+import java.io.*;
+import java.lang.reflect.Method;
+import java.net.InetAddress;
+import java.net.URISyntaxException;
+import java.nio.channels.FileChannel;
+import java.nio.charset.Charset;
+import java.rmi.*;
+import java.rmi.registry.LocateRegistry;
+import java.rmi.registry.Registry;
+import java.rmi.server.UnicastRemoteObject;
+import java.util.List;
+import java.util.Properties;
-import com.gemstone.gemfire.distributed.Locator;
-import com.gemstone.gemfire.distributed.internal.DistributionConfig;
-import com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave;
-import com.gemstone.gemfire.internal.AvailablePortHelper;
-import com.gemstone.gemfire.internal.logging.LogService;
-import com.gemstone.gemfire.test.dunit.DUnitEnv;
-import com.gemstone.gemfire.test.dunit.Host;
-import com.gemstone.gemfire.test.dunit.SerializableCallable;
-import com.gemstone.gemfire.test.dunit.VM;
+import static com.gemstone.gemfire.distributed.ConfigurationProperties.*;
- * 
- *
-  public static final String LOG_LEVEL = System.getProperty("logLevel", "info");
+  public static final String logLevel = System.getProperty("logLevel", "info");
+  
+  public static final String LOG4J = System.getProperty("log4j.configurationFile");
-  static final String RMI_PORT_PARAM = "gemfire.DUnitLauncher.RMI_PORT";
-  static final String VM_NUM_PARAM = "gemfire.DUnitLauncher.VM_NUM";
+  public static final String RMI_PORT_PARAM = DistributionConfig.GEMFIRE_PREFIX + "DUnitLauncher.RMI_PORT";
+  static final String VM_NUM_PARAM = DistributionConfig.GEMFIRE_PREFIX + "DUnitLauncher.VM_NUM";
-  private static final String LAUNCHED_PROPERTY = "gemfire.DUnitLauncher.LAUNCHED";
+  private static final String LAUNCHED_PROPERTY = DistributionConfig.GEMFIRE_PREFIX + "DUnitLauncher.LAUNCHED";
+
-  
-  private static void launch() throws URISyntaxException, AlreadyBoundException, IOException, InterruptedException, NotBoundException  {
-//  initialize the log writer that hydra uses
-    Log.createLogWriter( "dunit-master", LOG_LEVEL );
-
+  private static void launch() throws URISyntaxException, AlreadyBoundException, IOException, InterruptedException, NotBoundException {
-    locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();
-     
+    System.setProperty(RMI_PORT_PARAM, ""+namingPort);
+    // inhibit banners to make logs smaller
+    System.setProperty(InternalLocator.INHIBIT_DM_BANNER, "true");
+
-    
+
+
-    
+
+    //wait for the VM to start up
+    if(!processManager.waitForVMs(STARTUP_TIMEOUT)) {
+      throw new RuntimeException("VMs did not start up with 30 seconds");
+    }
+
+    locatorPort = startLocator(registry);
+
+    init(master);
+
+
-    
+
-    
+
-    init(master);
-    
-    startLocator(registry);
-    p.setProperty("locators", getLocatorString());
-    p.setProperty("mcast-port", "0");
-    p.setProperty("enable-cluster-configuration", "false");
-    p.setProperty("use-cluster-configuration", "false");
-    p.setProperty("log-level", LOG_LEVEL);
+    p.setProperty(LOCATORS, getLocatorString());
+    p.setProperty(MCAST_PORT, "0");
+    p.setProperty(ENABLE_CLUSTER_CONFIGURATION, "false");
+    p.setProperty(USE_CLUSTER_CONFIGURATION, "false");
+    p.setProperty(LOG_LEVEL, logLevel);
-  private static void startLocator(Registry registry) throws IOException, NotBoundException {
+  private static int startLocator(Registry registry) throws IOException, NotBoundException {
-        p.setProperty("jmx-manager", "false");
+        p.setProperty(JMX_MANAGER, "false");
-        p.setProperty("enable-cluster-configuration", "false");
+        p.setProperty(ENABLE_CLUSTER_CONFIGURATION, "false");
-        p.setProperty(DistributionConfig.DISABLE_AUTO_RECONNECT_NAME, "true");
+        p.setProperty(DISABLE_AUTO_RECONNECT, "true");
-          Locator.startLocatorAndDS(locatorPort, locatorLogFile, p);
+          Locator.startLocatorAndDS(0, locatorLogFile, p);
+          InternalLocator internalLocator = (InternalLocator) Locator.getLocator();
+          locatorPort = internalLocator.getPort();
+          internalLocator.resetInternalLocatorFileNamesWithCorrectPortNumber(locatorPort);
-        
-        return null;
+
+        return locatorPort;
+    return (Integer) result.getResult();
-    System.setProperty("gemfire.free-off-heap-memory", "true");
+    System.setProperty(DistributionConfig.GEMFIRE_PREFIX + "free-off-heap-memory", "true");

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 INS23 INS83 INS83 INS83 INS43 INS59 INS83 MOV21 MOV24 MOV21 MOV21 UPD39 UPD42 INS42 INS42 INS32 INS27 INS27 INS27 INS21 INS25 INS41 INS42 INS42 INS45 INS40 INS45 INS40 INS45 INS40 INS45 INS32 INS7 INS38 INS8 INS11 UPD42 UPD42 INS42 INS27 INS42 INS42 INS40 INS45 INS42 MOV32 INS32 INS53 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS27 INS45 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS14 INS42 INS42 INS42 INS40 INS45 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS21 INS43 INS59 INS7 INS32 INS34 INS42 INS42 INS11 INS42 INS32 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL45 DEL45 DEL45 DEL42 DEL32 DEL7 DEL21 DEL45 DEL42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL40 DEL42 DEL33 DEL45