GEODE-2644: Make LogWriterAppender optional and support log4j2.xml

LogWriterAppender is now configured in log4j2.xml and it supports
sessions that correspond with Cache lifecycle. This allows Geode to
pause and resume LogWriterAppender and GeodeConsoleAppender without
resorting to dynamically adding and removing appenders.

When the Cache exists, log events stop going to the Console and instead
go to the Geode log file. Whenever the Cache does not exist, log events
go only to the Console.

These changes remove as much of the Log4j2 Core manipulation as
possible.

Also fixed:
* GEODE-5789: Geode now updates log level of all Geode loggers.

List of changes:
* Change LogWriterAppender to be pausable and session-oriented
* Add GeodeConsoleAppender which is pausable
* Log4j2 Core dependency is now optional
* Internal Logging interfaces allow Logging service to be pluggable
* Log4j2 xml integration testing now uses JUnit Rule from Log4j2
* Reduce coupling between Logging and the rest of Geode
* Greatly increase test coverage for Logging

+import java.util.HashSet;
+import java.util.Set;
-import org.apache.geode.internal.Banner;
+import org.apache.geode.internal.logging.LogConfigListener;
+import org.apache.geode.internal.logging.LogConfigSupplier;
+import org.apache.geode.internal.logging.LoggingSession;
-import org.apache.geode.internal.logging.log4j.AlertAppender;
-import org.apache.geode.internal.logging.log4j.LogWriterAppender;
-import org.apache.geode.internal.logging.log4j.LogWriterAppenders;
+import org.apache.geode.internal.statistics.StatisticsConfig;
-    org.apache.geode.admin.jmx.internal.ManagedResource {
+    org.apache.geode.admin.jmx.internal.ManagedResource, LogConfigSupplier {
-  private LogWriterAppender logWriterAppender;
+  private final LoggingSession loggingSession;
+  private final Set<LogConfigListener> logConfigListeners = new HashSet<>();
+
+    loggingSession = LoggingSession.create();
+
+  @Override
+  @Override
+  @Override
+  @Override
-      AlertAppender.getInstance().shuttingDown();
-      LogWriterAppenders.stop(LogWriterAppenders.Identifier.MAIN);
-      LogWriterAppenders.destroy(LogWriterAppenders.Identifier.MAIN);
+      loggingSession.stopSession();
+      loggingSession.shutdown();
-      AlertAppender.getInstance().shuttingDown();
-      LogWriterAppenders.stop(LogWriterAppenders.Identifier.MAIN);
-      LogWriterAppenders.destroy(LogWriterAppenders.Identifier.MAIN);
+      loggingSession.stopSession();
+      loggingSession.shutdown();
-      AlertAppender.getInstance().shuttingDown();
-      LogWriterAppenders.stop(LogWriterAppenders.Identifier.MAIN);
-      LogWriterAppenders.destroy(LogWriterAppenders.Identifier.MAIN);
+      loggingSession.stopSession();
+      loggingSession.shutdown();
-    LogWriterAppenders.startupComplete(LogWriterAppenders.Identifier.MAIN);
+  @Override
-      AlertAppender.getInstance().shuttingDown();
-      LogWriterAppenders.stop(LogWriterAppenders.Identifier.MAIN);
+
+      loggingSession.stopSession();
-      LogWriterAppenders.destroy(LogWriterAppenders.Identifier.MAIN);
+      loggingSession.shutdown();
+  @Override
+  @Override
+  @Override
-    String childTail = tailFile(this.logWriterAppender.getChildLogFile());
+    File childLogFile = loggingSession.getLogFile().isPresent()
+        ? loggingSession.getLogFile().get().getChildLogFile() : null;
+    String childTail = tailFile(childLogFile);
+  @Override
-    LogWriterAppenders.configChanged(LogWriterAppenders.Identifier.MAIN);
+    logConfigChanged();
-    LogWriterAppenders.configChanged(LogWriterAppenders.Identifier.MAIN);
+    logConfigChanged();
-    LogWriterAppenders.configChanged(LogWriterAppenders.Identifier.MAIN);
+    logConfigChanged();
-    LogWriterAppenders.configChanged(LogWriterAppenders.Identifier.MAIN);
+    logConfigChanged();
+  @Override
+  @Override
+    loggingSession.createSession(this);
+
-    this.logWriterAppender = LogWriterAppenders
-        .getOrCreateAppender(LogWriterAppenders.Identifier.MAIN, false, logConfig, false);
+    loggingSession.startSession();
-      this.logWriter = LogWriterFactory.createLogWriterLogger(false, false, logConfig, false);
-      // LOG: changed statement from config to info
-      this.logWriter.info(Banner.getString(null));
+      this.logWriter = LogWriterFactory.createLogWriterLogger(logConfig, false);
-    this.logWriter = LogWriterFactory.createLogWriterLogger(false, false, logConfig, false);
+    this.logWriter = LogWriterFactory.createLogWriterLogger(logConfig, false);
-    // Print Banner information
-    logger.info(Banner.getString(this.agentConfig.getOriginalArgs()));
-
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  public LogConfig getLogConfig() {
+    return agentConfig.createLogConfig();
+  }
+
+  @Override
+  public StatisticsConfig getStatisticsConfig() {
+    return agentConfig.createStatisticsConfig();
+  }
+
+  @Override
+  public void addLogConfigListener(LogConfigListener logConfigListener) {
+    logConfigListeners.add(logConfigListener);
+  }
+
+  @Override
+  public void removeLogConfigListener(LogConfigListener logConfigListener) {
+    logConfigListeners.remove(logConfigListener);
+  }
+
+  void logConfigChanged() {
+    for (LogConfigListener listener : logConfigListeners) {
+      listener.configChanged();
+    }
+  }
+
+  @Override
+  @Override

MOV26 MOV26 MOV26 INS26 INS26 MOV23 INS40 INS40 UPD40 UPD40 UPD40 UPD40 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS42 MOV29 INS83 INS83 INS43 INS59 INS83 INS74 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS39 INS42 INS8 INS78 INS78 INS42 INS42 INS43 INS43 UPD42 INS14 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS21 INS70 INS42 INS42 INS42 UPD42 MOV42 INS74 INS7 INS43 MOV43 INS59 INS32 INS32 INS32 INS32 INS42 INS32 INS42 INS32 INS44 INS42 INS8 INS43 INS42 INS32 MOV44 MOV44 MOV44 INS42 UPD42 INS16 INS42 INS32 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 INS52 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS42 INS42 MOV53 MOV53 MOV53 INS32 INS32 INS33 INS42 INS42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS32 MOV42 MOV22 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL40 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL40 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL40 DEL40 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL40 DEL40 DEL52 DEL42 DEL22 DEL32 DEL32 DEL42 DEL40 DEL42 DEL40 DEL42 DEL40 DEL42 DEL40 DEL52 DEL42 DEL22 DEL40 DEL9 DEL9 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL9 DEL9 DEL42 DEL42 DEL42 DEL33 DEL32 DEL32 DEL21 DEL9 DEL9 DEL42 DEL42 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL32 DEL32 DEL21