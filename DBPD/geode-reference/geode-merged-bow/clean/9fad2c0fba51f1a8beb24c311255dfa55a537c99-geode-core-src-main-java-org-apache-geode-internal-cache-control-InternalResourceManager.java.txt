Revert "GEODE-7953: Restore Redundancy Internal API (#4909)" (#5006)

This reverts commit 0f9918510b24f2169189936a92951b9bb4f313f1.
+import java.util.HashSet;
-import java.util.concurrent.ConcurrentHashMap;
-import org.apache.geode.cache.control.RestoreRedundancyOperation;
-import org.apache.geode.cache.control.RestoreRedundancyResults;
-  private Map<ResourceType, Set<ResourceListener>> listeners = new HashMap<>();
+  private Map<ResourceType, Set<ResourceListener>> listeners =
+      new HashMap<ResourceType, Set<ResourceListener>>();
-  // A map of in progress rebalance operations. The value is Boolean because ConcurrentHashMap does
-  // not support null values.
-  private final Map<RebalanceOperation, Boolean> inProgressRebalanceOperations =
-      new ConcurrentHashMap<>();
-
-  // A map of in progress restore redundancy completable futures. The value is Boolean because
-  // ConcurrentHashMap does not support null values.
-  private final Map<CompletableFuture<RestoreRedundancyResults>, Boolean> inProgressRedundancyOperations =
-      new ConcurrentHashMap<>();
+  // The set of in progress rebalance operations.
+  private final Set<RebalanceOperation> inProgressOperations = new HashSet<RebalanceOperation>();
+  private final Object inProgressOperationsLock = new Object();
-    return Collections.unmodifiableSet(inProgressRebalanceOperations.keySet());
+    synchronized (this.inProgressOperationsLock) {
+      return new HashSet<RebalanceOperation>(this.inProgressOperations);
+    }
-    inProgressRebalanceOperations.put(op, Boolean.TRUE);
+    synchronized (this.inProgressOperationsLock) {
+      this.inProgressOperations.add(op);
+    }
-    inProgressRebalanceOperations.remove(op);
+    synchronized (this.inProgressOperationsLock) {
+      this.inProgressOperations.remove(op);
+    }
-  }
-  @Override
-  public RestoreRedundancyOperation createRestoreRedundancyOperation() {
-    return new RestoreRedundancyOperationImpl(cache);
-  }
-
-  @Override
-  public Set<CompletableFuture<RestoreRedundancyResults>> getRestoreRedundancyFutures() {
-    return Collections.unmodifiableSet(inProgressRedundancyOperations.keySet());
-  }
-
-  void addInProgressRestoreRedundancy(
-      CompletableFuture<RestoreRedundancyResults> completableFuture) {
-    inProgressRedundancyOperations.put(completableFuture, Boolean.TRUE);
-  }
-
-  void removeInProgressRestoreRedundancy(
-      CompletableFuture<RestoreRedundancyResults> completableFuture) {
-    inProgressRedundancyOperations.remove(completableFuture);
+   *
+     *
+     *
+     *
+     *
+     *

MOV26 MOV55 UPD40 INS31 UPD74 INS43 MOV78 MOV83 MOV74 MOV42 INS8 UPD42 MOV44 INS8 UPD42 MOV44 INS8 UPD43 UPD43 UPD42 UPD42 MOV42 UPD42 INS51 INS51 INS51 UPD74 UPD42 UPD42 UPD74 INS43 INS22 INS8 INS22 INS8 INS22 INS8 INS43 INS74 UPD43 MOV43 UPD42 MOV42 INS52 INS42 INS41 INS52 INS42 MOV21 INS52 INS42 MOV21 INS42 INS43 INS43 UPD42 INS14 INS42 INS42 INS74 INS22 INS22 UPD42 UPD42 INS22 UPD42 UPD43 MOV43 UPD43 MOV43 INS52 INS42 INS52 INS42 INS52 INS42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL74 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL39 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL42 DEL40 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL8 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL8