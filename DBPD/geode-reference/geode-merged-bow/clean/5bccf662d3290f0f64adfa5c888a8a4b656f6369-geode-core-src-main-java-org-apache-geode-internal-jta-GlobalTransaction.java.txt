GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

+import org.apache.geode.LogWriter;
-import org.apache.geode.i18n.LogWriterI18n;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_CONSTRUCTOR_ERROR_WHILE_TRYING_TO_CREATE_XID_DUE_TO_0,
-            e, e);
+            String.format(
+                "GlobalTransaction::Constructor::Error while trying to create Xid due to %s",
+                e, e));
-          LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_CONSTRUCTOR_ERROR_WHILE_TRYING_TO_CREATE_XID_DUE_TO_0
-              .toLocalizedString(new Object[] {e});
+          String.format(
+              "GlobalTransaction::Constructor::Error while trying to create Xid due to %s",
+              new Object[] {e});
-          LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_ADDTRANSACTION_CANNOT_ADD_A_NULL_TRANSACTION
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "GlobalTransaction::addTransaction::Cannot add a null Transaction";
+      LogWriter writer = TransactionUtils.getLogWriter();
-    LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+    LogWriter writer = TransactionUtils.getLogWriter();
-              writer.info(LocalizedStrings.ONE_ARG,
-                  "GlobalTransaction::commit:Exception in delisting XAResource", e);
+              writer.info(String.format("%s",
+                  "GlobalTransaction::commit:Exception in delisting XAResource", e));
-            LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_COMMIT_ERROR_IN_COMMITTING_BUT_TRANSACTION_COULD_NOT_BE_ROLLED_BACK_DUE_TO_EXCEPTION_0
-                .toLocalizedString(t);
+            String.format(
+                "GlobalTransaction::commit::Error in committing, but transaction could not be rolled back due to exception: %s",
+                t);
-          LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_COMMIT_ERROR_IN_COMMITTING_THE_TRANSACTION_TRANSACTION_ROLLED_BACK_EXCEPTION_0_1
-              .toLocalizedString(new Object[] {e, " " + (e instanceof XAException
+          String.format(
+              "GlobalTransaction::commit:Error in committing the transaction. Transaction rolled back.Exception, %s %s",
+              new Object[] {e, " " + (e instanceof XAException
-    LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+    LogWriter writer = TransactionUtils.getLogWriter();
-              writer.info(LocalizedStrings.ONE_ARG,
-                  "GlobalTransaction::rollback:Exception in delisting XAResource", e);
+              writer.info(String.format("%s",
+                  "GlobalTransaction::rollback:Exception in delisting XAResource", e));
-          LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_ROLLBACK_ROLLBACK_NOT_SUCCESSFUL_DUE_TO_EXCEPTION_0_1
-              .toLocalizedString(new Object[] {e, " " + (e instanceof XAException
+          String.format(
+              "GlobalTransaction::rollback:Rollback not successful due to exception %s %s",
+              new Object[] {e, " " + (e instanceof XAException
-   * @see javax.transaction.Transaction#enlistResource(javax.transaction.xa.XAResource)
+   * @see Transaction#enlistResource(XAResource)
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          LogWriter writer = TransactionUtils.getLogWriter();
-              LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_ENLISTRESOURCE_CANNOT_ENLIST_A_RESOURCE_TO_A_TRANSACTION_WHICH_IS_NOT_ACTIVE
-                  .toLocalizedString();
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+              "GlobalTransaction::enlistResource::Cannot enlist a resource to a transaction which is not active";
+          LogWriter writer = TransactionUtils.getLogWriter();
-                LocalizedStrings.GlobalTransaction_GLOBALTRANSACTION_ENLISTRESOURCE_EXCEPTION_OCCURRED_IN_TRYING_TO_SET_XARESOURCE_TIMEOUT_DUE_TO_0_ERROR_CODE_1
-                    .toLocalizedString(new Object[] {xe, Integer.valueOf(xe.errorCode)});
-            LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+                String.format(
+                    "GlobalTransaction::enlistResource:Exception occurred in trying to set XAResource timeout due to %s Error Code, %s",
+                    new Object[] {xe, Integer.valueOf(xe.errorCode)});
+            LogWriter writer = TransactionUtils.getLogWriter();
-            LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+            LogWriter writer = TransactionUtils.getLogWriter();
-                  LocalizedStrings.GlobalTransaction_GLOBALTRANSACTIONENLISTRESOURCEONLY_ONE_RESOUCE_MANAGER_SUPPORTED);
+                  "GlobalTransaction::enlistResource::Only one Resouce Manager supported");
-                LocalizedStrings.GlobalTransaction_GLOBALTRANSACTIONENLISTRESOURCEONLY_ONE_RESOUCE_MANAGER_SUPPORTED
-                    .toLocalizedString());
+                "GlobalTransaction::enlistResource::Only one Resouce Manager supported");
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.GLOBALTRANSACTION__ENLISTRESOURCE__ERROR_WHILE_ENLISTING_XARESOURCE_0_1
-                .toLocalizedString(new Object[] {e, addon}),
+            String.format(
+                "GlobalTransaction::enlistResource::error while enlisting XAResource %s %s",
+                new Object[] {e, addon}),
-          LocalizedStrings.GLOBALTRANSACTION__ENLISTRESOURCE__ERROR_WHILE_ENLISTING_XARESOURCE_0_1
-              .toLocalizedString(new Object[] {e, addon}));
+          String.format("GlobalTransaction::enlistResource::error while enlisting XAResource %s %s",
+              new Object[] {e, addon}));
-      String exception = LocalizedStrings.GlobalTransaction_ERROR_WHILE_DELISTING_XARESOURCE_0_1
-          .toLocalizedString(new Object[] {e, " "
+      String exception = String.format("error while delisting XAResource %s %s",
+          new Object[] {e, " "
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-                LocalizedStrings.GlobalTransaction_ERROR_WHILE_DELISTING_XARESOURCE_0_1
-                    .toLocalizedString(new Object[] {e, " " + (e instanceof XAException
+                String.format("error while delisting XAResource %s %s",
+                    new Object[] {e, " " + (e instanceof XAException
-            LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+            LogWriter writer = TransactionUtils.getLogWriter();
-         * "GlobaTransaction::suspend not succesful due to " + e; LogWriterI18n writer =
+         * "GlobaTransaction::suspend not succesful due to " + e; LogWriter writer =
-                LocalizedStrings.GlobalTransaction_GLOBATRANSACTION_RESUME_RESUME_NOT_SUCCESFUL_DUE_TO_0
-                    .toLocalizedString(e);
-            LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+                String.format("GlobaTransaction::resume:Resume not succesful due to %s",
+                    e);
+            LogWriter writer = TransactionUtils.getLogWriter();
-    LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+    LogWriter writer = TransactionUtils.getLogWriter();
-        writer.info(LocalizedStrings.GlobalTransaction_TRANSACTION_0_HAS_TIMED_OUT, this);
+        writer.info(String.format("Transaction %s has timed out.", this));
-            LocalizedStrings.GlobalTransaction_GLOBATRANSACTION_EXPIREGTX_ERROR_OCCURRED_WHILE_REMOVING_TRANSACTIONAL_MAPPINGS_0,
-            e, e);
+            String.format(
+                "GlobaTransaction::expireGTX:Error occurred while removing transactional mappings %s",
+                e, e));
-                LocalizedStrings.GlobalTransaction_EXCEPTION_OCCURRED_WHILE_TRYING_TO_SET_THE_XARESOURCE_TIMEOUT_DUE_TO_0_ERROR_CODE_1
-                    .toLocalizedString(new Object[] {e, Integer.valueOf(e.errorCode)});
-            LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+                String.format(
+                    "Exception occurred while trying to set the XAResource TimeOut due to %s Error code, %s",
+                    new Object[] {e, Integer.valueOf(e.errorCode)});
+            LogWriter writer = TransactionUtils.getLogWriter();
-      throw new IllegalStateException(LocalizedStrings.GlobalTransaction_COULD_NOT_COMPARE_0_TO_1
-          .toLocalizedString(new Object[] {this, other}));
+      throw new IllegalStateException(String.format("Could not compare %s to %s",
+          new Object[] {this, other}));

MOV26 UPD40 UPD43 UPD43 UPD43 UPD42 UPD42 INS42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 INS45 UPD42 INS42 UPD43 MOV43 UPD43 UPD42 UPD42 UPD42 UPD42 INS32 UPD42 INS32 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 UPD42 MOV43 UPD42 INS42 INS45 UPD42 INS42 INS42 INS45 MOV52 INS32 UPD42 INS42 INS45 INS42 INS42 INS45 MOV42 MOV42 UPD43 UPD42 INS42 INS45 UPD42 INS42 INS45 INS42 INS42 INS45 MOV42 MOV42 UPD42 UPD43 UPD42 INS42 INS45 UPD42 INS45 UPD42 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 INS45 UPD42 UPD42 UPD43 UPD42 UPD42 INS45 UPD42 INS42 INS45 UPD42 UPD42 INS42 INS45 UPD42 UPD42 INS32 INS32 UPD42 INS42 INS45 UPD42 UPD42 INS42 INS45 UPD42 INS42 INS42 INS45 MOV45 MOV42 INS42 INS42 INS45 MOV45 MOV42 DEL40 DEL26 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40