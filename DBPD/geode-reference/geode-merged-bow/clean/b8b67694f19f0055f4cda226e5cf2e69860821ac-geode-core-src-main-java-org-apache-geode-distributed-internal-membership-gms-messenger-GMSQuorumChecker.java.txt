Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.distributed.DistributedMember;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.distributed.internal.membership.NetView;
-import org.apache.geode.distributed.internal.membership.QuorumChecker;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
-public class GMSQuorumChecker implements QuorumChecker {
+public class GMSQuorumChecker {
-  private boolean isDebugEnabled = false;
-  private Map<SocketAddress, InternalDistributedMember> addressConversionMap;
+  private boolean isInfoEnabled = false;
+  private Map<SocketAddress, GMSMember> addressConversionMap;
-  private Set<InternalDistributedMember> receivedAcks;
+  private Set<GMSMember> receivedAcks;
-  private final NetView lastView;
+  private final GMSMembershipView lastView;
-  private Set<DistributedMember> oldDistributedMemberIdentifiers;
+  private Set<GMSMember> oldMemberIdentifiers;
-  public GMSQuorumChecker(NetView jgView, int partitionThreshold, JChannel channel,
-      Set<DistributedMember> oldDistributedMemberIdentifiers) {
+  public GMSQuorumChecker(GMSMembershipView jgView, int partitionThreshold, JChannel channel,
+      Set<GMSMember> oldMemberIdentifiers) {
-    this.oldDistributedMemberIdentifiers = oldDistributedMemberIdentifiers;
+    this.oldMemberIdentifiers = oldMemberIdentifiers;
-    List<InternalDistributedMember> members = this.lastView.getMembers();
-    for (InternalDistributedMember addr : members) {
+    List<GMSMember> members = this.lastView.getMembers();
+    for (GMSMember addr : members) {
-          new InetSocketAddress(addr.getNetMember().getInetAddress(), addr.getPort());
+          new InetSocketAddress(addr.getInetAddress(), addr.getPort());
-    isDebugEnabled = logger.isDebugEnabled();
+    isInfoEnabled = logger.isInfoEnabled();
-  @Override
+
-    if (isDebugEnabled) {
-      logger.debug("beginning quorum check with {}", this);
+    if (isInfoEnabled) {
+      logger.info("beginning quorum check with {}", this);
-  @Override
+
-  @Override
+
-  @Override
+
-  @Override
-  public NetView getView() {
-    return this.lastView;
-  }
-  @Override
-    return new MembershipInformation(channel, oldDistributedMemberIdentifiers, messageQueue);
+    return new MembershipInformation(channel, oldMemberIdentifiers, messageQueue);
-    if (isDebugEnabled) {
-      logger.debug(
+    if (isInfoEnabled) {
+      logger.info(
-        if (isDebugEnabled) {
-          logger.debug("quorum check: timeout waiting for responses.  {} responses received",
+        if (isInfoEnabled) {
+          logger.info("quorum check: timeout waiting for responses.  {} responses received",
-      if (isDebugEnabled) {
-        logger.debug("quorum check: waiting up to {}ms to receive a quorum of responses",
+      if (isInfoEnabled) {
+        logger.info("quorum check: waiting up to {}ms to receive a quorum of responses",
-        if (isDebugEnabled) {
-          logger.debug(
+        if (isInfoEnabled) {
+          logger.info(
-  private int getWeight(Collection<InternalDistributedMember> idms,
-      InternalDistributedMember leader) {
+  private int getWeight(Collection<GMSMember> idms,
+      GMSMember leader) {
-    for (InternalDistributedMember mbr : idms) {
-      int thisWeight = mbr.getNetMember().getMemberWeight();
+    for (GMSMember mbr : idms) {
+      int thisWeight = mbr.getMemberWeight();
-      } else if (mbr.getNetMember().preferredForCoordinator()) {
+      } else if (mbr.preferredForCoordinator()) {
-    List<InternalDistributedMember> members = this.lastView.getMembers();
-    for (InternalDistributedMember addr : members) {
+    List<GMSMember> members = this.lastView.getMembers();
+    for (GMSMember addr : members) {
-        if (isDebugEnabled) {
-          logger.debug("quorum check: sending request to {}", addr);
+        if (isInfoEnabled) {
+          logger.info("quorum check: sending request to {}", addr);
-          logger.debug("Failed sending Ping message to " + dest);
+          logger.info("Failed sending Ping message to " + dest);
-          logger.debug("Failed sending Pong message to " + msg.getSrc());
+          logger.info("Failed sending Pong message to " + msg.getSrc());
-      logger.debug("received ping-pong response from {}", sender);
+      logger.info("received ping-pong response from {}", sender);
-      InternalDistributedMember memberAddr = addressConversionMap.get(sockaddr);
+      GMSMember memberAddr = addressConversionMap.get(sockaddr);
-        logger.debug("quorum check: mapped address to member ID {}", memberAddr);
+        logger.info("quorum check: mapped address to member ID {}", memberAddr);

UPD40 UPD40 UPD74 UPD74 UPD43 UPD74 UPD42 UPD43 UPD43 UPD42 UPD43 UPD42 UPD43 UPD74 UPD42 UPD74 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD74 UPD42 UPD42 UPD43 UPD42 UPD74 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV32 UPD42 UPD42 MOV42 MOV42 UPD42 UPD42 MOV42 UPD42 UPD42 MOV32 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL32 DEL42 DEL78 DEL42 DEL78 DEL42 DEL78 DEL42 DEL78 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL42 DEL78 DEL42 DEL32 DEL42 DEL32