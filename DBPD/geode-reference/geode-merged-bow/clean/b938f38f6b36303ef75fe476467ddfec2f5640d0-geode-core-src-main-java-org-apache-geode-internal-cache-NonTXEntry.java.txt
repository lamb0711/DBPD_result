GEODE-6534: Make NonTXEntry entryIsDestroyed volatile (#3318)

* GEODE-6534: Make NonTXEntry entryIsDestroyed volatile

Minimize volatile hits per call to isDestroyed().

* Trigger precheckin

* Trigger precheckin again.

-  private final LocalRegion localRegion;
+  private final LocalRegion region;
-  private boolean entryIsDestroyed = false;
+  private volatile boolean entryIsDestroyed;
-  public NonTXEntry(LocalRegion localRegion, RegionEntry regionEntry) {
+  public NonTXEntry(LocalRegion region, RegionEntry regionEntry) {
-    this.localRegion = localRegion;
+    this.region = region;
-    this.key = regionEntry.getKey();
+    key = regionEntry.getKey();
-    RegionEntry regionEntry = localRegion.getRegionMap().getEntry(this.key);
+    RegionEntry regionEntry = region.getRegionMap().getEntry(key);
-      throw new EntryDestroyedException(this.key.toString());
+      throw new EntryDestroyedException(key.toString());
-    RegionEntry re = localRegion.basicGetEntry(this.key);
+    RegionEntry re = region.basicGetEntry(key);
-      throw new EntryDestroyedException(this.key.toString());
+      throw new EntryDestroyedException(key.toString());
-    if (this.entryIsDestroyed) {
+    if (entryIsDestroyed) {
-    if (localRegion.isThisRegionBeingClosedOrDestroyed()
-        || localRegion.basicGetEntry(this.key) == null) {
-      this.entryIsDestroyed = true;
+    if (region.isThisRegionBeingClosedOrDestroyed() || region.basicGetEntry(key) == null) {
+      entryIsDestroyed = true;
+      return true;
-    return this.entryIsDestroyed;
+    return false;
-        localRegion.getDeserialized(this.basicGetEntry(), false, ignoreCopyOnRead, false, false);
+        region.getDeserialized(basicGetEntry(), false, ignoreCopyOnRead, false, false);
-      throw new EntryDestroyedException(this.getRegionEntry().getKey().toString());
+      throw new EntryDestroyedException(getRegionEntry().getKey().toString());
-    return localRegion;
+    return region;
-    if (!localRegion.isStatisticsEnabled()) {
+    if (!region.isStatisticsEnabled()) {
-          String.format("Statistics disabled for region '%s'",
-              localRegion.getFullPath()));
+          String.format("Statistics disabled for region '%s'", region.getFullPath()));
-    return new CacheStatisticsImpl(this.basicGetEntry(), localRegion);
+    return new CacheStatisticsImpl(basicGetEntry(), region);
-    this.basicGetEntry();
-    return localRegion.getEntryUserAttributes().get(basicGetEntry().getKey());
+    basicGetEntry();
+    return region.getEntryUserAttributes().get(basicGetEntry().getKey());
-    return localRegion.getEntryUserAttributes().put(basicGetEntry().getKey(), userAttribute);
+    return region.getEntryUserAttributes().put(basicGetEntry().getKey(), userAttribute);
-    return this.basicGetEntry().equals(entry.getRegionEntry())
-        && this.getRegion() == entry.getRegion();
+    return basicGetEntry().equals(entry.getRegionEntry())
+        && getRegion() == entry.getRegion();
-        .append(this.getRegionEntry()).toString();
+        .append(getRegionEntry()).toString();
-    return localRegion.put(getKey(), value);
+    return region.put(getKey(), value);

MOV31 INS83 MOV78 MOV43 UPD42 MOV78 MOV43 UPD42 MOV44 UPD42 UPD42 INS21 INS42 INS9 UPD42 INS32 UPD42 INS42 INS41 UPD42 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 INS42 UPD42 INS9 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 DEL9 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL52 DEL52 DEL42 DEL52 DEL42 DEL32 DEL21 DEL52 DEL52 DEL52