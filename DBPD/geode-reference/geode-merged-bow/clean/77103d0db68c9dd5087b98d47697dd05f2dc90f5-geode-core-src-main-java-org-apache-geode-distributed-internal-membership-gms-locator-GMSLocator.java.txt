GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier (#4230)

* GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier

Initial refactor: removal of NetMember, MemberAttributes and other classes that subordinated GMS
identifiers.  Repurposing GMSMember as a data packet to hold information required in a membership
identifer.

* fixing failing tests

* fixing failing unit tests

* picking up a change that IntelliJ didn't auto-save & fixing serializables test

* fixing problems with durable client ids

these identifiers morph after the client's membership identifier has been formed
so the member ID needs to be updated before serializing it

* fixing merge error

* updating sanctionedDataSerializables

* fixing lgtm complaint

* removing unnecessary serialization/deserialization methods in GMSUtil

* remove methods no longer needed for serializing an object with a different DSFID

* fixing serializables test

-import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.api.MemberIdentifier;
+import org.apache.geode.distributed.internal.membership.gms.messenger.GMSMemberWrapper;
-  private final Set<GMSMember> registrants = new HashSet<>();
-  private final Map<GMSMember.GMSMemberWrapper, byte[]> publicKeys =
+  private final Set<MemberIdentifier> registrants = new HashSet<>();
+  private final Map<GMSMemberWrapper, byte[]> publicKeys =
-  private GMSMember localAddress;
+  private MemberIdentifier localAddress;
-        publicKeys.put(new GMSMember.GMSMemberWrapper(findRequest.getMemberID()),
+        publicKeys.put(new GMSMemberWrapper(findRequest.getMemberID()),
-    GMSMember coordinator = null;
+    MemberIdentifier coordinator = null;
-      GMSMember requestingMemberID = findRequest.getMemberID();
-      for (GMSMember id : responseView.getMembers()) {
-        if (requestingMemberID.compareTo(id, false) == 0) {
+      MemberIdentifier requestingMemberID = findRequest.getMemberID();
+      for (MemberIdentifier id : responseView.getMembers()) {
+        if (requestingMemberID.getMemberData().compareTo(id.getMemberData(), false) == 0) {
-      Collection<GMSMember> rejections = findRequest.getRejectedCoordinators();
+      Collection<MemberIdentifier> rejections = findRequest.getRejectedCoordinators();
-        for (GMSMember mbr : registrants) {
-          if (mbr != coordinator && (coordinator == null || mbr.compareTo(coordinator) < 0)) {
+        for (MemberIdentifier mbr : registrants) {
+          if (mbr != coordinator && (coordinator == null || Objects.compare(mbr, coordinator,
+              services.getMemberFactory().getComparator()) < 0)) {
-                || !mbr.isNetworkPartitionDetectionEnabled())) {
+                || !mbr.getMemberData().isNetworkPartitionDetectionEnabled())) {
-  public byte[] getPublicKey(GMSMember member) {
-    return publicKeys.get(new GMSMember.GMSMemberWrapper(member));
+  public byte[] getPublicKey(MemberIdentifier member) {
+    return publicKeys.get(new GMSMemberWrapper(member));
-  public List<GMSMember> getMembers() {
+  public List<MemberIdentifier> getMembers() {
-      List<GMSMember> members = new ArrayList<>(recoveredView.getMembers());
+      List<MemberIdentifier> members = new ArrayList<>(recoveredView.getMembers());
-      for (GMSMember member : members) {
-        if (member.getVmKind() == GMSMember.LOCATOR_DM_TYPE) {
+      for (MemberIdentifier member : members) {
+        if (member.getVmKind() == MemberIdentifier.LOCATOR_DM_TYPE) {

MOV26 INS26 INS40 UPD40 UPD74 UPD74 UPD43 UPD74 UPD43 UPD43 UPD42 UPD43 UPD43 UPD42 INS42 UPD43 UPD42 UPD42 UPD42 UPD43 UPD74 UPD43 UPD74 UPD42 UPD43 UPD43 INS42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD40 UPD43 INS32 INS32 UPD42 INS42 MOV42 INS42 MOV42 INS42 UPD42 UPD42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 MOV42 INS42 DEL40 DEL40 DEL40