Merge geode develop branch

-    if (isRecreated() && !this.wasAboutToDestroy() && !this.wasAboutToDestroyDataStorage()) {
+    if (regionPreviouslyHostedData()) {
-      if (this.isBucket() && !this.wasAboutToDestroy()) {
-        // Fix for 48642
-        // If this is a bucket, only destroy the data, if required.
-        beginDestroyDataStorage();
-      }
-      endDestroy(region);
+      destroyPartiallyInitializedRegion(region);
+
+  private boolean regionPreviouslyHostedData() {
+    return isRecreated() && this.getMyPersistentID() != null && !this.wasAboutToDestroy()
+        && !this.wasAboutToDestroyDataStorage();
+  }
+
+  private void destroyPartiallyInitializedRegion(final LocalRegion region) {
+    if (this.isBucket() && !this.wasAboutToDestroy()) {
+      /*
+       * For bucket regions, we only destroy data storage for the following reason:
+       * The ProxyBucketRegion and DiskInitFile will hold a reference to the same AbstractDiskRegion
+       * object. If we do a full region destroy, it will result in the proxy and init file
+       * referencing different objects. This can lead to a memory leak because disk compaction will
+       * use the init file's version which may not have all changes from the in-memory version. A
+       * partial destroy ensures that the ProxyBucketRegion and DiskInitFile continue to share the
+       * same AbstractDiskRegion reference, which prevents this memory leak.
+       *
+       * Because we only destroy data storage, the persistence view will be maintained (disk ID will
+       * be non-null) but all data and initializing/initialized persistent IDs will be deleted.
+       */
+      beginDestroyDataStorage();
+    }
+    endDestroy(region);
+  }

MOV31 INS31 INS31 INS39 INS42 MOV44 INS8 INS83 INS39 INS42 INS8 INS83 UPD42 INS44 MOV8 INS25 INS41 INS83 INS43 INS42 INS32 MOV8 INS8 MOV27 INS42 INS42 INS21 INS27 INS32 INS27 MOV38 INS42 INS42 MOV32 INS27 INS32 INS33 INS52 INS42 DEL25 DEL8