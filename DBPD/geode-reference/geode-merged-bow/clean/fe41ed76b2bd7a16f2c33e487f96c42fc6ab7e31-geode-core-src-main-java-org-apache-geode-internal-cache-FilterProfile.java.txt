GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import org.apache.geode.distributed.internal.DistributionAdvisee;
-  static enum operationType {
+  enum operationType {
-   * 
-   * @param r
-   * @param inputClientID
-      this.logger.debug("Stopping CQ {} on this members FilterProfile.", cq.getServerCqName());
+      logger.debug("Stopping CQ {} on this members FilterProfile.", cq.getServerCqName());
-        } catch (Exception ex) {
+        } catch (Exception ignore) {
-    msg.clientID = clientID.longValue();
+    msg.clientID = clientID;
-        ((CacheDistributionAdvisee) this.region).getDistributionAdvisor().adviseProfileUpdate();
+        ((DistributionAdvisee) this.region).getDistributionAdvisor().adviseProfileUpdate();
-    } catch (InterruptedException ie) {
+    } catch (InterruptedException ignore) {
-  private final CacheProfile localProfile = new CacheProfile(this);
-  private final Profile[] localProfileArray = new Profile[] {localProfile};
+  private final CacheProfile localProfile = new CacheProfile(this);
+
+  private final Profile[] localProfileArray = new Profile[] {localProfile};
-          event.getOperation().isEntry() && ((EntryEventImpl) event).getTransactionId() != null;
+          event.getOperation().isEntry() && ((EntryEvent) event).getTransactionId() != null;
-      result = fillInInterestRoutingInfo(event, localProfileArray, result, Collections.EMPTY_SET);
+      result = fillInInterestRoutingInfo(event, localProfileArray, result, Collections.emptySet());
-    Set clientsInv = Collections.EMPTY_SET;
-    Set clients = Collections.EMPTY_SET;
+    Set clientsInv = Collections.emptySet();
+    Set clients = Collections.emptySet();
-          frInfo.addInterestedClients(cf.getDistributedMember(), Collections.EMPTY_SET,
-              Collections.EMPTY_SET, false);
+          frInfo.addInterestedClients(cf.getDistributedMember(), Collections.emptySet(),
+              Collections.emptySet(), false);
-    Set allKeysRef = this.allKeyClients;
-    return allKeysRef;
+    return (Set) this.allKeyClients;
-    StringBuffer result = new StringBuffer(sorted.size() * 70);
+    StringBuilder result = new StringBuilder(sorted.size() * 70);
-    StringBuffer result = new StringBuffer(sorted.size() * 70);
+    StringBuilder result = new StringBuilder(sorted.size() * 70);
-
-    return Collections.EMPTY_LIST;
+    return Collections.emptyList();
-    return Collections.EMPTY_LIST;
+    return Collections.emptyList();
-   * 
-   * @param member
-   * @param message
-   * 
-   * @param msgs
-          FilterProfile localFP = ((PartitionedRegion) r).getFilterProfile();
+          FilterProfile localFP = ((LocalRegion) r).getFilterProfile();
-        } catch (CancelException e) {
+        } catch (CancelException ignore) {
-      GemFireCacheImpl cache = null;
+      InternalCache cache;
-      } catch (CancelException e) {
+      } catch (CancelException ignore) {
-            result = Long.valueOf(nextID++);
+            result = nextID++;

INS26 INS40 MOV43 MOV43 INS11 UPD43 UPD43 INS32 INS32 INS42 INS32 INS32 MOV43 MOV22 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD43 UPD42 INS42 INS42 INS42 INS42 UPD43 UPD43 UPD42 INS42 UPD42 UPD42 UPD42 INS32 UPD43 INS42 INS42 UPD42 UPD42 UPD42 INS32 INS32 UPD43 INS42 INS42 INS42 INS42 MOV37 UPD42 UPD43 UPD42 DEL83 DEL42 DEL65 DEL42 DEL65 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL42 DEL59 DEL60 DEL42 DEL40 DEL40 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL33 DEL42 DEL42 DEL32