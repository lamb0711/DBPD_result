GEODE-8195: ConcurrentModificationException from LocatorMembershipListenerImpl (#5306)

I've replaced the "for" loop using an implicit Iterator with one using an
explicit Iterator so that its safe "remove()" method can be used.  The
Iterator method is stated as being the only safe way to modify the
collection while iterating over its contents.

I've also modified a test to validate the fix.  The test forces a
failure to send two messages to an address.  The failures are then
handled in the code that was throwing the
ConcurrentModificationException and, since there are two failures,
it causes two removals to be performedon the failedMessages collection.
+import java.util.Iterator;
-        for (DistributionLocatorId value : entry.getValue()) {
+        for (DistributionLocatorId remoteLocator : entry.getValue()) {
-          sendMessage(value, advertiseNewLocatorMessage, failedMessages);
+          sendMessage(remoteLocator, advertiseNewLocatorMessage, failedMessages);
-              new LocatorJoinMessage(entry.getKey(), value, localLocatorId, "");
+              new LocatorJoinMessage(entry.getKey(), remoteLocator, localLocatorId, "");
-            for (LocatorJoinMessage locatorJoinMessage : joinMessages) {
+            for (Iterator<LocatorJoinMessage> iterator = joinMessages.iterator(); iterator
+                .hasNext();) {
+              LocatorJoinMessage locatorJoinMessage = iterator.next();
-                joinMessages.remove(locatorJoinMessage);
+                iterator.remove();
+                  return;

INS26 INS40 MOV8 MOV60 MOV70 INS25 MOV38 MOV8 INS24 MOV58 MOV27 MOV37 MOV8 UPD42 MOV44 MOV32 INS8 UPD42 MOV60 MOV60 INS24 UPD42 INS58 INS32 MOV8 INS74 INS59 INS42 INS42 INS60 INS43 INS43 INS42 INS32 MOV43 INS59 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 INS41 DEL42 DEL42 DEL44 DEL42 DEL70 DEL24 DEL25 DEL8