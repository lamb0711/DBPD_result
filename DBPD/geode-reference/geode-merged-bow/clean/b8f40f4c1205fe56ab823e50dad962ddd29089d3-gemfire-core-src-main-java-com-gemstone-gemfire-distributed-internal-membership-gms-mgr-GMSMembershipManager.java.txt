GEODE-77 adding new unit tests for GMSJoinLeave

This adds a bunch of new unit tests to GMSJoinLeaveJUnitTest and
fixes a number of problems exposed by the new tests.

Members were in the view multiple times.
Members were in the shutdownMembers collection multiple times.
Members could be in the crashedMembers collection multiple times.
View preparation was actually installing the view in the coordinator.
A rogue process could request removal of a member.

+import java.util.LinkedHashMap;
-import com.gemstone.gemfire.cache.util.BoundedLinkedHashMap;
-import com.gemstone.gemfire.distributed.internal.membership.MemberAttributes;
-  /**
-   * Trick class to make the view lock more visible
-   * in stack traces
-   * 
-   */
-  static class ViewLock extends ReentrantReadWriteLock {
-    public ViewLock() {
-    }
-  }
-  
-  protected ViewLock latestViewLock = new ViewLock();
+  protected ReadWriteLock latestViewLock = new ReentrantReadWriteLock();
-    synchronized (latestViewLock) {
+    latestViewLock.writeLock().lock();
+    try {
-    } // synchronized
+    } finally {
+      latestViewLock.writeLock().unlock();
+    }
-   * use only).  Synchronizes on {@link #latestViewLock} and then deletes
+   * use only).  Write-locks {@link #latestViewLock} and then deletes
-   * Add a mapping from the given member to the given stub. Must be
-   * synchronized on {@link #latestViewLock} by caller.
+   * Add a mapping from the given member to the given stub. Must
+   * be called with {@link #latestViewLock} held.
+  /**
+   * Class <code>BoundedLinkedHashMap</code> is a bounded
+   * <code>LinkedHashMap</code>. The bound is the maximum
+   * number of entries the <code>BoundedLinkedHashMap</code>
+   * can contain.
+   */
+  static class BoundedLinkedHashMap extends LinkedHashMap
+  {
+    private static final long serialVersionUID = -3419897166186852692L;
+
+    /**
+     * The maximum number of entries allowed in this
+     * <code>BoundedLinkedHashMap</code>
+     */
+    protected int _maximumNumberOfEntries;
+
+    /**
+     * Constructor.
+     *
+     * @param initialCapacity The initial capacity.
+     * @param loadFactor The load factor
+     * @param maximumNumberOfEntries The maximum number of allowed entries
+     */
+    public BoundedLinkedHashMap(int initialCapacity, float loadFactor, int maximumNumberOfEntries) {
+      super(initialCapacity, loadFactor);
+      this._maximumNumberOfEntries = maximumNumberOfEntries;
+    }
+
+    /**
+     * Constructor.
+     *
+     * @param initialCapacity The initial capacity.
+     * @param maximumNumberOfEntries The maximum number of allowed entries
+     */
+    public BoundedLinkedHashMap(int initialCapacity, int maximumNumberOfEntries) {
+      super(initialCapacity);
+      this._maximumNumberOfEntries = maximumNumberOfEntries;
+    }
+
+    /**
+     * Constructor.
+     *
+     * @param maximumNumberOfEntries The maximum number of allowed entries
+     */
+    public BoundedLinkedHashMap(int maximumNumberOfEntries) {
+      super();
+      this._maximumNumberOfEntries = maximumNumberOfEntries;
+    }
+
+    /**
+     * Returns the maximum number of entries.
+     * @return the maximum number of entries
+     */
+    public int getMaximumNumberOfEntries(){
+      return this._maximumNumberOfEntries;
+    }
+
+    @Override
+    protected boolean removeEldestEntry(Map.Entry entry) {
+      return size() > this._maximumNumberOfEntries;
+    }
+  }
+

MOV26 UPD40 INS23 INS55 MOV29 INS83 INS43 INS59 MOV29 MOV83 UPD42 MOV42 INS43 INS23 INS23 MOV31 INS31 INS31 INS31 INS31 INS42 INS42 INS14 INS21 INS54 INS42 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS39 INS59 INS29 UPD42 INS44 INS44 INS44 INS29 INS83 INS42 INS44 INS44 INS8 INS29 INS83 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 MOV43 INS32 MOV8 INS8 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 INS66 INS42 INS38 INS65 INS42 INS65 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS39 INS42 INS46 INS21 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS46 INS21 INS65 INS65 INS39 INS42 INS46 INS21 INS65 INS65 INS41 INS42 INS43 INS42 INS41 INS32 INS42 INS21 INS34 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS7 INS66 INS42 INS66 INS42 INS66 INS42 INS7 INS66 INS42 INS66 INS7 INS66 INS66 INS22 INS40 INS27 INS42 INS42 INS32 INS22 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS32 INS22 INS32 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS52 INS42 INS42 INS42 DEL40 DEL26 DEL55 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL42 DEL51