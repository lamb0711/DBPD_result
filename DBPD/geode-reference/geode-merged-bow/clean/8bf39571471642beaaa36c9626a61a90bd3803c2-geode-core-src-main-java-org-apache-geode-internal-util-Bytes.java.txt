Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-    
-    buf[off    ] = int0(val);
+
+    buf[off] = int0(val);
-  
+
-    
-    buf[off    ] = long0(val);
+
+    buf[off] = long0(val);
-    
+
-    b = buf.get(); val  = (b & 0x7f);       if ((b & 0x80) == 0) return val;
-    b = buf.get(); val |= (b & 0x7f) <<  7; if ((b & 0x80) == 0) return val;
-    b = buf.get(); val |= (b & 0x7f) << 14; if ((b & 0x80) == 0) return val;
-    b = buf.get(); val |= (b & 0x7f) << 21; if ((b & 0x80) == 0) return val;
-    b = buf.get(); val |= (b & 0x7f) << 28; 
-    
+    b = buf.get();
+    val = (b & 0x7f);
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf.get();
+    val |= (b & 0x7f) << 7;
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf.get();
+    val |= (b & 0x7f) << 14;
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf.get();
+    val |= (b & 0x7f) << 21;
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf.get();
+    val |= (b & 0x7f) << 28;
+
-  
+
+   * 
-    
+
-    b = buf[off++]; val  = (b & 0x7f);       if ((b & 0x80) == 0) return val;
-    b = buf[off++]; val |= (b & 0x7f) <<  7; if ((b & 0x80) == 0) return val;
-    b = buf[off++]; val |= (b & 0x7f) << 14; if ((b & 0x80) == 0) return val;
-    b = buf[off++]; val |= (b & 0x7f) << 21; if ((b & 0x80) == 0) return val;
-    b = buf[off++]; val |= (b & 0x7f) << 28; 
-    
+    b = buf[off++];
+    val = (b & 0x7f);
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf[off++];
+    val |= (b & 0x7f) << 7;
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf[off++];
+    val |= (b & 0x7f) << 14;
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf[off++];
+    val |= (b & 0x7f) << 21;
+    if ((b & 0x80) == 0)
+      return val;
+    b = buf[off++];
+    val |= (b & 0x7f) << 28;
+
-  
+
-  
+
-  
+
-    
+
-  
+
-  
+
-  
+
-    return (b0 << 24) 
-        | ((b1 & 0xff) << 16) 
-        | ((b2 & 0xff) << 8) 
-        |  (b3 & 0xff); 
+    return (b0 << 24) | ((b1 & 0xff) << 16) | ((b2 & 0xff) << 8) | (b3 & 0xff);
-  
+
-  public static long toLong(byte b0, byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7) {
-    return ((long) b0 << 56)
-        | (((long) b1 & 0xff) << 48) 
-        | (((long) b2 & 0xff) << 40) 
-        | (((long) b3 & 0xff) << 32) 
-        | (((long) b4 & 0xff) << 24) 
-        | (((long) b5 & 0xff) << 16) 
-        | (((long) b6 & 0xff) << 8)
-        |  ((long) b7 & 0xff); 
+  public static long toLong(byte b0, byte b1, byte b2, byte b3, byte b4, byte b5, byte b6,
+      byte b7) {
+    return ((long) b0 << 56) | (((long) b1 & 0xff) << 48) | (((long) b2 & 0xff) << 40)
+        | (((long) b3 & 0xff) << 32) | (((long) b4 & 0xff) << 24) | (((long) b5 & 0xff) << 16)
+        | (((long) b6 & 0xff) << 8) | ((long) b7 & 0xff);
-  
-  public static byte char0(char value)   { return (byte) (value >> 8); }
-  public static byte char1(char value)   { return (byte)  value; }
-  public static byte short0(short value) { return (byte) (value >> 8); }
-  public static byte short1(short value) { return (byte)  value; }
+  public static byte char0(char value) {
+    return (byte) (value >> 8);
+  }
-  public static byte int0(int value)     { return (byte) (value >> 24); }
-  public static byte int1(int value)     { return (byte) (value >> 16); }
-  public static byte int2(int value)     { return (byte) (value >> 8); }
-  public static byte int3(int value)     { return (byte)  value; }
+  public static byte char1(char value) {
+    return (byte) value;
+  }
-  public static byte long0(long value)   { return (byte) (value >> 56); }
-  public static byte long1(long value)   { return (byte) (value >> 48); }
-  public static byte long2(long value)   { return (byte) (value >> 40); }
-  public static byte long3(long value)   { return (byte) (value >> 32); }
-  public static byte long4(long value)   { return (byte) (value >> 24); }
-  public static byte long5(long value)   { return (byte) (value >> 16); }
-  public static byte long6(long value)   { return (byte) (value >> 8); }
-  public static byte long7(long value)   { return (byte)  value; }
+  public static byte short0(short value) {
+    return (byte) (value >> 8);
+  }
+
+  public static byte short1(short value) {
+    return (byte) value;
+  }
+
+  public static byte int0(int value) {
+    return (byte) (value >> 24);
+  }
+
+  public static byte int1(int value) {
+    return (byte) (value >> 16);
+  }
+
+  public static byte int2(int value) {
+    return (byte) (value >> 8);
+  }
+
+  public static byte int3(int value) {
+    return (byte) value;
+  }
+
+  public static byte long0(long value) {
+    return (byte) (value >> 56);
+  }
+
+  public static byte long1(long value) {
+    return (byte) (value >> 48);
+  }
+
+  public static byte long2(long value) {
+    return (byte) (value >> 40);
+  }
+
+  public static byte long3(long value) {
+    return (byte) (value >> 32);
+  }
+
+  public static byte long4(long value) {
+    return (byte) (value >> 24);
+  }
+
+  public static byte long5(long value) {
+    return (byte) (value >> 16);
+  }
+
+  public static byte long6(long value) {
+    return (byte) (value >> 8);
+  }
+
+  public static byte long7(long value) {
+    return (byte) value;
+  }

