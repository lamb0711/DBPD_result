Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The old ManagedEntityController was a concrete class which has been renamed
- * to ManagedEntityControllerImpl. The build.xml now skips building
- * ManagedEntityControllerImpl. If ManagedEntityControllerImpl is not found
- * in the classpath then the code uses DisabledManagedEntityController as a
- * place holder.
+ * The old ManagedEntityController was a concrete class which has been renamed to
+ * ManagedEntityControllerImpl. The build.xml now skips building ManagedEntityControllerImpl. If
+ * ManagedEntityControllerImpl is not found in the classpath then the code uses
+ * DisabledManagedEntityController as a place holder.
-  private static final String EXCEPTION_MESSAGE = "Local and remote OS command invocations are disabled for the Admin API.";
-  
-  DisabledManagedEntityController() {
-  }
-  
+  private static final String EXCEPTION_MESSAGE =
+      "Local and remote OS command invocations are disabled for the Admin API.";
+
+  DisabledManagedEntityController() {}
+
-    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)){
-      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#start {}", EXCEPTION_MESSAGE);
+    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)) {
+      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#start {}",
+          EXCEPTION_MESSAGE);
-    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)){
-      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#stop {}", EXCEPTION_MESSAGE);
+    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)) {
+      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#stop {}",
+          EXCEPTION_MESSAGE);
-    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)){
-      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#isRunning {}", EXCEPTION_MESSAGE);
+    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)) {
+      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#isRunning {}",
+          EXCEPTION_MESSAGE);
-    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)){
-      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#getLog {}", EXCEPTION_MESSAGE);
+    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)) {
+      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#getLog {}",
+          EXCEPTION_MESSAGE);
-    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)){
-      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#buildSSLArguments {}", EXCEPTION_MESSAGE);
+    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)) {
+      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#buildSSLArguments {}",
+          EXCEPTION_MESSAGE);
-    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)){
-      logger.warn(LogMarker.MANAGED_ENTITY, "DisabledManagedEntityController#getProductExecutable {}", EXCEPTION_MESSAGE);
+    if (logger.isTraceEnabled(LogMarker.MANAGED_ENTITY)) {
+      logger.warn(LogMarker.MANAGED_ENTITY,
+          "DisabledManagedEntityController#getProductExecutable {}", EXCEPTION_MESSAGE);

UPD66 UPD66 UPD66 UPD66 DEL66