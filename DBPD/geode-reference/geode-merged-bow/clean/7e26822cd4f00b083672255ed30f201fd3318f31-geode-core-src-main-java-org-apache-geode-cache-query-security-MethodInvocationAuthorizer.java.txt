GEODE-6985: Implement RestrictedMethodAuthorizer (#4077)

- Fixed minor warnings.
- Made the class final, immutable and thread safe.
- Added comprehensive javadocs to all public methods.
- Added several unit tests for the class and all public methods.
- Added methods 'isAllowedGeodeMethod' and 'isKnownDangerousMethod'.
- * A method invocation authorizer which can determine whether a {@link java.lang.reflect.Method} is
+ * The root interface that should be implemented by method invocation authorizer instances.
+ * The authorizer is responsible for determining whether a {@link java.lang.reflect.Method} is
+ *
-   * will remember whether the method invocation is already authorized, so {@code authorize} will be
-   * called once in the lifetime of a Geode member for every new method seen while traversing the
-   * objects. Nevertheless, the implementation should be lighting fast as it will be called by the
-   * OQL engine in runtime during the query execution.
+   * classes will remember whether the method invocation is already authorized, so that
+   * {@code authorize} will be called once in the lifetime of a Geode member for every new method
+   * seen while traversing the objects.
+   * Nevertheless, the implementation should be lighting fast as it will be called by the OQL engine
+   * in runtime during the query execution.
-   * @return {@code true} if the {@code method} can be executed on the {@code target} instance,
+   * @return {@code true} if the {@code method} can be executed on on the {@code target} instance,

INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66