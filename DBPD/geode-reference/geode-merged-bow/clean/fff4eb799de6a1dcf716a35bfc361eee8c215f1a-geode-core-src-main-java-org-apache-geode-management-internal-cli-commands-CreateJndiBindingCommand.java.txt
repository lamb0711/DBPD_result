GEODE-6103 RegionCreateFunction takes RegionConfig in argument (#2998)

* reduce dependence on RegionFunctionArgs
* Also clean up CreateRegionCommand to achieve a clean separation between validations and calling RegionCreateFunction

Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>
Signed-off-by: Peter Tran <ptran@pivotal.io>
Signed-off-by: Ken Howe <khowe@pivotal.io>
-import org.apache.geode.management.internal.cli.exceptions.EntityExistsException;
-    InternalConfigurationPersistenceService service =
-        (InternalConfigurationPersistenceService) getConfigurationPersistenceService();
+    InternalConfigurationPersistenceService service = getConfigurationPersistenceService();
-      if (cacheConfig != null) {
-        JndiBindingsType.JndiBinding existing =
-            CacheElement.findElement(cacheConfig.getJndiBindings(), jndiName);
-        if (existing != null) {
-          throw new EntityExistsException(
-              CliStrings.format("Jndi binding with jndi-name \"{0}\" already exists.", jndiName),
-              ifNotExists);
-        }
+      if (cacheConfig != null && CacheElement.exists(cacheConfig.getJndiBindings(), jndiName)) {
+        String message =
+            CliStrings.format("Jndi binding with jndi-name \"{0}\" already exists.", jndiName);
+        return ifNotExists ? ResultModel.createInfo("Skipping: " + message)
+            : ResultModel.createError(message);

MOV43 MOV32 INS27 MOV27 MOV32 INS41 UPD42 UPD43 INS16 INS42 UPD42 MOV32 INS42 INS32 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS45 UPD42 MOV42 DEL40 DEL26 DEL42 DEL43 DEL11 DEL40 DEL33 DEL27 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25