Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//import org.apache.commons.modeler.ManagedBean;
+// import org.apache.commons.modeler.ManagedBean;
- * The JMX "managed resource" that represents the health of GemFire.
- * Basically, it provides the behavior of
- * <code>GemFireHealthImpl</code>, but does some JMX stuff like
- * registering beans with the agent.
+ * The JMX "managed resource" that represents the health of GemFire. Basically, it provides the
+ * behavior of <code>GemFireHealthImpl</code>, but does some JMX stuff like registering beans with
+ * the agent.
-public class GemFireHealthJmxImpl extends GemFireHealthImpl 
-  implements ManagedResource {
+public class GemFireHealthJmxImpl extends GemFireHealthImpl implements ManagedResource {
-  
+
-  ///////////////////////  Constructors  ///////////////////////
+  /////////////////////// Constructors ///////////////////////
-   * Creates a new <code>GemFireHealthJmxImpl</code> that monitors the
-   * health of the given distributed system and uses the given JMX
-   * agent. 
+   * Creates a new <code>GemFireHealthJmxImpl</code> that monitors the health of the given
+   * distributed system and uses the given JMX agent.
-  GemFireHealthJmxImpl(GfManagerAgent agent,
-                       AdminDistributedSystemJmxImpl system)
-    throws AdminException {
+  GemFireHealthJmxImpl(GfManagerAgent agent, AdminDistributedSystemJmxImpl system)
+      throws AdminException {
-    this.mbeanName = new StringBuffer()
-      .append(MBEAN_NAME_PREFIX)
-      .append("GemFireHealth,id=")
-      .append(MBeanUtil.makeCompliantMBeanNameProperty(system.getId()))
-      .toString();
+    this.mbeanName = new StringBuffer().append(MBEAN_NAME_PREFIX).append("GemFireHealth,id=")
+        .append(MBeanUtil.makeCompliantMBeanNameProperty(system.getId())).toString();
-  //////////////////////  Instance Methods  //////////////////////
+  ////////////////////// Instance Methods //////////////////////
-  
-  public ObjectName manageGemFireHealthConfig(String hostName)
-  throws MalformedObjectNameException {
+
+  public ObjectName manageGemFireHealthConfig(String hostName) throws MalformedObjectNameException {
-    } //catch (AdminException e) { logWriter.warning(e); throw e; }
-    catch (RuntimeException e) { 
-      logger.warn(e.getMessage(), e); 
-      throw e; 
+    } // catch (AdminException e) { logWriter.warning(e); throw e; }
+    catch (RuntimeException e) {
+      logger.warn(e.getMessage(), e);
+      throw e;
-      // If this ever returns, rethrow the error.  We're poisoned
+      // If this ever returns, rethrow the error. We're poisoned
-    } catch (Error e) { 
+    } catch (Error e) {
-      // catch VirtualMachineError (see above).  However, there is
+      // catch VirtualMachineError (see above). However, there is
-      throw e; 
+      throw e;
-    
+
-  protected DistributedSystemHealthConfig
-    createDistributedSystemHealthConfig() {
+  protected DistributedSystemHealthConfig createDistributedSystemHealthConfig() {
-      throw new RuntimeAdminException(LocalizedStrings.GemFireHealthJmxImpl_WHILE_GETTING_THE_DISTRIBUTEDSYSTEMHEALTHCONFIG.toLocalizedString(), ex);
+      throw new RuntimeAdminException(
+          LocalizedStrings.GemFireHealthJmxImpl_WHILE_GETTING_THE_DISTRIBUTEDSYSTEMHEALTHCONFIG
+              .toLocalizedString(),
+          ex);
-  protected GemFireHealthConfig
-    createGemFireHealthConfig(String hostName) {
+  protected GemFireHealthConfig createGemFireHealthConfig(String hostName) {
-      throw new RuntimeAdminException(LocalizedStrings.GemFireHealthJmxImpl_WHILE_GETTING_THE_GEMFIREHEALTHCONFIG.toLocalizedString(), ex);
+      throw new RuntimeAdminException(
+          LocalizedStrings.GemFireHealthJmxImpl_WHILE_GETTING_THE_GEMFIREHEALTHCONFIG
+              .toLocalizedString(),
+          ex);
-   * Ensures that the three primary Health MBeans are registered and returns
-   * their ObjectNames. 
+   * Ensures that the three primary Health MBeans are registered and returns their ObjectNames.
-    MBeanUtil.ensureMBeanIsRegistered((ManagedResource)this.defaultConfig);
-    MBeanUtil.ensureMBeanIsRegistered((ManagedResource)this.dsHealthConfig);
+    MBeanUtil.ensureMBeanIsRegistered((ManagedResource) this.defaultConfig);
+    MBeanUtil.ensureMBeanIsRegistered((ManagedResource) this.dsHealthConfig);
-  
+
-  
+
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66