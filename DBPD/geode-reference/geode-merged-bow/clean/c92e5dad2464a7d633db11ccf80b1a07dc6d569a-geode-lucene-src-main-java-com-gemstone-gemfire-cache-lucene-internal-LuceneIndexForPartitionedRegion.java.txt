GEODE-1330: Set boolean so that internal lucene regions aren't generated in xml

+import com.gemstone.gemfire.cache.AttributesFactory;
-  private final Cache cache;
-
-    this.indexName = indexName;
-    this.regionPath = regionPath;
-    this.cache = cache;
+    super(indexName, regionPath, cache);
-    PartitionAttributesFactory partitionAttributesFactory = new PartitionAttributesFactory<String, File>();
-    partitionAttributesFactory.setColocatedWith(regionPath);
-    configureLuceneRegionAttributesFactory(partitionAttributesFactory, partitionAttributes);
-
-    return cache.<String, File> createRegionFactory(regionShortCut)
-        .setPartitionAttributes(partitionAttributesFactory.create())
-        .create(fileRegionName);
+    return createRegion(fileRegionName, regionShortCut, this.regionPath, partitionAttributes);
-    PartitionAttributesFactory partitionAttributesFactory = new PartitionAttributesFactory<String, File>();
-    partitionAttributesFactory.setColocatedWith(fileRegionName);
-    configureLuceneRegionAttributesFactory(partitionAttributesFactory, partitionAttributes);
-
-    return cache.<ChunkKey, byte[]> createRegionFactory(regionShortCut)
-      .setPartitionAttributes(partitionAttributesFactory.create())
-      .create(chunkRegionName);
+    return createRegion(chunkRegionName, regionShortCut, fileRegionName, partitionAttributes);
+  protected <K, V> Region<K, V> createRegion(final String regionName, final RegionShortcut regionShortCut,
+      final String colocatedWithRegionName, final PartitionAttributes partitionAttributes) {
+    PartitionAttributesFactory partitionAttributesFactory = new PartitionAttributesFactory<String, File>();
+    partitionAttributesFactory.setColocatedWith(colocatedWithRegionName);
+    configureLuceneRegionAttributesFactory(partitionAttributesFactory, partitionAttributes);
+
+    // Create AttributesFactory based on input RegionShortcut
+    RegionAttributes baseAttributes = this.cache.getRegionAttributes(regionShortCut.toString());
+    AttributesFactory factory = new AttributesFactory(baseAttributes);
+    factory.setPartitionAttributes(partitionAttributesFactory.create());
+    RegionAttributes<K, V> attributes = factory.create();
+
+    return createRegion(regionName, attributes);
+  }
+

INS26 INS40 INS31 INS31 MOV43 INS42 MOV44 MOV44 MOV44 INS8 INS83 INS73 INS73 INS74 INS42 INS44 INS44 INS44 INS44 INS8 INS46 INS41 INS42 INS42 INS43 INS43 INS43 INS83 MOV43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 MOV60 MOV21 MOV21 INS60 INS60 INS21 INS60 INS41 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 UPD42 MOV42 INS43 INS59 INS43 INS59 INS32 INS74 INS59 INS32 INS42 INS42 INS42 MOV22 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 UPD42 UPD42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS14 INS42 MOV42 MOV32 INS43 INS43 INS43 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 MOV22 UPD42 MOV42 INS32 INS43 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL43 DEL43 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL43 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL39 DEL85 DEL5 DEL32 DEL42 DEL32