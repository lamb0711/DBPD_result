Merge remote-tracking branch 'origin/feature/GEODE-409' into develop

-  private static final Pattern infoOrBelowPattern = Pattern.compile("^\\[(?:info|debug|trace|fine|finer|finest)");
+  /**
+   * Any messages at these levels will be skipped
+   */
+  private static final Pattern skipLevelPattern = Pattern.compile("^\\[(?:warn|warning|info|debug|trace|fine|finer|finest)");
-  private static int ERROR_BUFFER_LIMIT = 50;
+  private static int ERROR_BUFFER_LIMIT = 128;
-      if (infoOrBelowPattern.matcher(line).find()){
+      if (skipLevelPattern.matcher(line).find()){
-            tmpErrFlag = false;
-            tmpErrLines = 0;
-            saveFlag = false;
-            StringBuilder buffer = new StringBuilder();
-            buffer.append("-----------------------------------------------------------------------\n");
-            buffer.append("Found suspect string in ")
-                   .append(fileName)
-                   .append(" at line ")
-                   .append(savelinenum).append("\n\n")
-                   .append(all.toString());
-            return buffer;
+            // This code used to stop appending if a causedBy was seen.
+            // But we want the causedBy stack trace to also be included
+            // in the suspect StringBuilder.
+            // The main thing is we do not want to call checkExpectedStrs
+            // with this "caused by" line.
-            // one of the registered ignorable strings
+            // one of the registered expected strings
-                     && !(infoOrBelowPattern.matcher(line).find()
+                     && !(skipLevelPattern.matcher(line).find()
-          String shortName = "";
+          String shortName = null;
+          if (shortName != null) {
+          } else {
+            return enforceErrorLimit(1, line + "\n", lineNumber, fileName);
+          }
-      StringBuilder buffer = new StringBuilder();
-      buffer.append("\n-----------------------------------------------------------------------\n")
-            .append("Found suspect string in ")
-            .append(fileName)
-            .append(" at line ")
-            .append(savelinenum)
-            .append("\n\n")
-            .append(all);
-      return buffer;
+      return enforceErrorLimit(1, all.toString(), savelinenum, fileName);

INS29 INS65 UPD42 UPD34 INS66 UPD45 MOV21 INS41 INS32 UPD42 MOV42 INS34 MOV32 UPD42 MOV42 MOV42 UPD42 INS25 INS27 INS8 INS8 INS33 INS42 INS33 MOV60 MOV60 MOV21 MOV41 INS41 INS32 INS42 INS34 INS27 INS42 INS42 UPD42 INS42 INS45 DEL42 DEL9 DEL7 DEL21 DEL42 DEL34 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL21 DEL42 DEL41 DEL45 DEL42 DEL9 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL45 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41