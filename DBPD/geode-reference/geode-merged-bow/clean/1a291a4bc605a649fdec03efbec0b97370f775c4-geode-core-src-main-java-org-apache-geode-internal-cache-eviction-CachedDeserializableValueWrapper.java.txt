GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

-package org.apache.geode.internal.cache.lru;
-
-import org.apache.geode.internal.cache.RegionEntry;
-import org.apache.geode.internal.cache.persistence.DiskRecoveryStore;
+package org.apache.geode.internal.cache.eviction;
- * Represents an entry in an LRU map
+ * Marker class to indicate that the wrapped value is owned by a CachedDeserializable and its form
+ * is changing from serialized to deserialized.
-public interface LRUEntry extends LRUClockNode, RegionEntry {
-  /**
-   * If the key is stored as an Object then returns that object; but if the key is stored as
-   * primitives then returns null.
-   */
-  Object getKeyForSizing();
+public class CachedDeserializableValueWrapper {
-  void setDelayedDiskId(DiskRecoveryStore diskRecoveryStore);
+  private final Object value;
+
+  public CachedDeserializableValueWrapper(Object value) {
+    this.value = value;
+  }
+
+  public Object getValue() {
+    return value;
+  }

UPD40 UPD42 INS23 INS31 INS83 INS83 INS43 INS59 INS83 UPD42 INS8 INS83 MOV43 INS42 INS8 UPD66 INS66 UPD42 MOV42 INS42 UPD43 UPD42 INS21 INS41 UPD42 INS7 INS42 INS22 INS42 INS52 INS42 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL43 DEL66 DEL66 DEL65 DEL29 DEL42 DEL31 DEL39