Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A TreeSet constrained to contain Structs of all the same type. To conserve on
- * objects, we store the StructType once and reuse it to generate Struct
- * instances on demand.
+ * A TreeSet constrained to contain Structs of all the same type. To conserve on objects, we store
+ * the StructType once and reuse it to generate Struct instances on demand.
- * The values in this set are stored as Object[] and get wrapped in Structs as
- * necessary.
+ * The values in this set are stored as Object[] and get wrapped in Structs as necessary.
-public final class SortedStructSet extends TreeSet implements SelectResults,
-    DataSerializableFixedID, Ordered, StructFields {
+public final class SortedStructSet extends TreeSet
+    implements SelectResults, DataSerializableFixedID, Ordered, StructFields {
-  public SortedStructSet() {
-  };
+  public SortedStructSet() {};
-          LocalizedStrings.SortedStructSet_STRUCTTYPE_MUST_NOT_BE_NULL
-              .toLocalizedString());
+          LocalizedStrings.SortedStructSet_STRUCTTYPE_MUST_NOT_BE_NULL.toLocalizedString());
-          LocalizedStrings.SortedStructSet_STRUCTTYPE_MUST_NOT_BE_NULL
-              .toLocalizedString());
+          LocalizedStrings.SortedStructSet_STRUCTTYPE_MUST_NOT_BE_NULL.toLocalizedString());
-          LocalizedStrings.SortedStructSet_THIS_SET_ONLY_ACCEPTS_STRUCTIMPL
-              .toLocalizedString());
+          LocalizedStrings.SortedStructSet_THIS_SET_ONLY_ACCEPTS_STRUCTIMPL.toLocalizedString());
-   * public boolean addFieldValues(Object[] fieldValues) { //return
-   * super.add(fieldValues); StructImpl s = new StructImpl(this.structType,
-   * fieldValues); return super.add(s); }
+   * public boolean addFieldValues(Object[] fieldValues) { //return super.add(fieldValues);
+   * StructImpl s = new StructImpl(this.structType, fieldValues); return super.add(s); }
-   * Does this set contain a Struct of the correct type with the specified
-   * values?
+   * Does this set contain a Struct of the correct type with the specified values?
-   * Does this set contain a Struct of the correct type with the specified
-   * values?
+   * Does this set contain a Struct of the correct type with the specified values?
-   * public boolean containsFieldValues(Object[] fieldValues) { return
-   * super.contains(fieldValues); }
+   * public boolean containsFieldValues(Object[] fieldValues) { return super.contains(fieldValues);
+   * }
-          LocalizedStrings.SortedStructSet_ELEMENT_TYPE_MUST_BE_STRUCT
-              .toLocalizedString());
+          LocalizedStrings.SortedStructSet_ELEMENT_TYPE_MUST_BE_STRUCT.toLocalizedString());
-   * @param modifiable
-   *          New value of property modifiable.
+   * @param modifiable New value of property modifiable.
-     return false;
+    return false;

UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66