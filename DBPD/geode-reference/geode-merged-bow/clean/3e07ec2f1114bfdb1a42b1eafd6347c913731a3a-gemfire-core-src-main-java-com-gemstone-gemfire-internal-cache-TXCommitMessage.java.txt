Merge remote-tracking branch 'origin/develop' into feature/GEODE-11

+      List<EntryEventImpl> pendingCallbacks = new ArrayList<>(this.farSideEntryOps.size());
-          entryOp.process();
+          entryOp.process(pendingCallbacks);
+      firePendingCallbacks(pendingCallbacks);
-  
+
+  private void firePendingCallbacks(List<EntryEventImpl> callbacks) {
+    Iterator<EntryEventImpl> ci = callbacks.iterator();
+    while(ci.hasNext()) {
+      EntryEventImpl ee = ci.next();
+      try {
+        if (ee.getOperation().isDestroy()) {
+          ee.getRegion().invokeTXCallbacks(EnumListenerEvent.AFTER_DESTROY, ee, true);
+        } else if (ee.getOperation().isInvalidate()) {
+          ee.getRegion().invokeTXCallbacks(EnumListenerEvent.AFTER_INVALIDATE, ee, true);
+        } else if (ee.getOperation().isCreate()) {
+          ee.getRegion().invokeTXCallbacks(EnumListenerEvent.AFTER_CREATE, ee, true);
+        } else {
+          ee.getRegion().invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, ee, true);
+        }
+      } finally {
+        ee.release();
+      }
+    }
+  }
+
-    protected void txApplyEntryOp(FarSideEntryOp entryOp)
+    protected void txApplyEntryOp(FarSideEntryOp entryOp, List<EntryEventImpl> pendingCallbacks)
-        try {
-        eei.invokeCallbacks(this.r, skipListeners, true);
-        } finally {
-          eei.release();
-        }
+        eei.setInvokePRCallbacks(!skipListeners);
+        pendingCallbacks.add(eei);
-                              null /* fire inline, no pending callbacks */,
+                              pendingCallbacks,
-                                 null /* fire inline, no pending callbacks */,
+                                 pendingCallbacks,
-                          null /* fire inline, no pending callbacks */,
+                          pendingCallbacks,
-      public void process() {
-        txApplyEntryOp(this);
+      public void process(List<EntryEventImpl> pendingCallbacks) {
+        txApplyEntryOp(this, pendingCallbacks);

INS31 INS83 INS39 INS42 INS44 INS8 INS74 INS42 INS60 INS61 INS44 INS60 INS21 INS43 INS43 INS74 INS59 INS32 INS8 INS74 INS42 INS44 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS54 INS43 INS43 MOV8 INS74 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS42 INS42 MOV60 INS21 INS41 INS43 INS43 INS42 INS42 INS74 INS32 INS42 INS42 INS32 INS25 INS21 INS32 INS42 INS42 INS42 INS43 INS22 INS42 INS42 INS42 INS32 INS8 INS25 INS32 UPD42 INS38 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS21 INS32 INS8 INS25 INS42 INS42 INS42 MOV22 MOV32 INS42 MOV22 MOV22 MOV32 INS42 MOV22 INS42 INS42 INS42 INS32 INS32 INS42 INS21 INS32 INS8 INS8 INS32 INS42 INS40 INS42 INS9 INS42 INS42 INS32 INS32 INS42 INS21 INS21 INS42 INS42 INS32 INS42 INS40 INS42 INS9 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS40 INS42 INS9 INS32 INS42 INS40 INS42 INS9 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL9 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL41 DEL8 DEL33 DEL33 DEL33