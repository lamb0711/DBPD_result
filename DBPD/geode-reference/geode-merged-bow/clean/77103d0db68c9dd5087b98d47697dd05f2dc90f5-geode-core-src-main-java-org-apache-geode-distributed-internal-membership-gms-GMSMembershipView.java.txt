GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier (#4230)

* GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier

Initial refactor: removal of NetMember, MemberAttributes and other classes that subordinated GMS
identifiers.  Repurposing GMSMember as a data packet to hold information required in a membership
identifer.

* fixing failing tests

* fixing failing unit tests

* picking up a change that IntelliJ didn't auto-save & fixing serializables test

* fixing problems with durable client ids

these identifiers morph after the client's membership identifier has been formed
so the member ID needs to be updated before serializing it

* fixing merge error

* updating sanctionedDataSerializables

* fixing lgtm complaint

* removing unnecessary serialization/deserialization methods in GMSUtil

* remove methods no longer needed for serializing an object with a different DSFID

* fixing serializables test

+import org.apache.geode.distributed.internal.membership.gms.api.MemberIdentifier;
-import org.apache.geode.logging.internal.log4j.api.LogService;
- * The GMSMembershipView class represents a membership view. Note that this class is not
- * synchronized, so take
+ * The GMSMembershipView class represents a membership view For Geode this is translated
+ * into a MembershipView by GMSMembershipManager. The membership identifiers are GMSMembers,
+ * which for Geode means they are InternalDistributedMember instances.
+ *
+ * Note that this class is not synchronized, so take
-  private static final Logger logger = LogService.getLogger();
-
-  private List<GMSMember> members;
+  private List<MemberIdentifier> members;
-  private final Map<GMSMember, Object> publicKeys = new ConcurrentHashMap<>();
+  private final Map<MemberIdentifier, Object> publicKeys = new ConcurrentHashMap<>();
-  private Set<GMSMember> shutdownMembers;
-  private Set<GMSMember> crashedMembers;
-  private GMSMember creator;
-  private Set<GMSMember> hashedMembers;
+  private Set<MemberIdentifier> shutdownMembers;
+  private Set<MemberIdentifier> crashedMembers;
+  private MemberIdentifier creator;
+  private Set<MemberIdentifier> hashedMembers;
-  public GMSMembershipView(GMSMember creator) {
+  public GMSMembershipView(MemberIdentifier creator) {
-  public GMSMembershipView(GMSMember creator, int viewId,
-      List<GMSMember> members) {
+  public GMSMembershipView(MemberIdentifier creator, int viewId,
+      List<MemberIdentifier> members) {
-  public GMSMembershipView(GMSMember creator, int viewId,
-      List<GMSMember> mbrs, Set<GMSMember> shutdowns,
-      Set<GMSMember> crashes) {
+  public GMSMembershipView(MemberIdentifier creator, int viewId,
+      List<MemberIdentifier> mbrs, Set<MemberIdentifier> shutdowns,
+      Set<MemberIdentifier> crashes) {
-  public GMSMember getCreator() {
+  public MemberIdentifier getCreator() {
-  public void setCreator(GMSMember creator) {
+  public void setCreator(MemberIdentifier creator) {
-  public Object getPublicKey(GMSMember mbr) {
+  public Object getPublicKey(MemberIdentifier mbr) {
-  public void setPublicKey(GMSMember mbr, Object key) {
+  public void setPublicKey(MemberIdentifier mbr, Object key) {
-  public int getFailureDetectionPort(GMSMember mbr) {
+  public int getFailureDetectionPort(MemberIdentifier mbr) {
-  public void setFailureDetectionPort(GMSMember mbr, int port) {
+  public void setFailureDetectionPort(MemberIdentifier mbr, int port) {
-      for (GMSMember mbr : otherView.getMembers()) {
+      for (MemberIdentifier mbr : otherView.getMembers()) {
-  public void add(GMSMember mbr) {
+  public void add(MemberIdentifier mbr) {
-  public void addCrashedMembers(Set<GMSMember> mbr) {
+  public void addCrashedMembers(Set<MemberIdentifier> mbr) {
-  public List<GMSMember> getNewMembers(GMSMembershipView olderView) {
-    List<GMSMember> result = new ArrayList<>(members);
+  public List<MemberIdentifier> getNewMembers(GMSMembershipView olderView) {
+    List<MemberIdentifier> result = new ArrayList<>(members);
-  public List<GMSMember> getNewMembers() {
-    List<GMSMember> result = new ArrayList<>(5);
+  public List<MemberIdentifier> getNewMembers() {
+    List<MemberIdentifier> result = new ArrayList<>(5);
-  public boolean remove(GMSMember mbr) {
+  public boolean remove(MemberIdentifier mbr) {
-  public void removeAll(Collection<GMSMember> ids) {
+  public void removeAll(Collection<MemberIdentifier> ids) {
-  public boolean contains(GMSMember mbr) {
+  public boolean contains(MemberIdentifier mbr) {
-  public GMSMember getLeadMember() {
-    for (GMSMember mbr : this.members) {
-      if (mbr.getVmKind() == GMSMember.NORMAL_DM_TYPE) {
+  public MemberIdentifier getLeadMember() {
+    for (MemberIdentifier mbr : this.members) {
+      if (mbr.getVmKind() == MemberIdentifier.NORMAL_DM_TYPE) {
-  public GMSMember getCoordinator() {
+  public MemberIdentifier getCoordinator() {
-      for (GMSMember addr : members) {
+      for (MemberIdentifier addr : members) {
-  public GMSMember getCoordinator(
-      Collection<GMSMember> rejections) {
+  public MemberIdentifier getCoordinator(
+      Collection<MemberIdentifier> rejections) {
-      for (GMSMember addr : members) {
+      for (MemberIdentifier addr : members) {
-      for (GMSMember addr : members) {
+      for (MemberIdentifier addr : members) {
-  public List<GMSMember> getPreferredCoordinators(
-      Set<GMSMember> filter, GMSMember localAddress,
+  public List<MemberIdentifier> getPreferredCoordinators(
+      Set<MemberIdentifier> filter, MemberIdentifier localAddress,
-    List<GMSMember> results = new ArrayList<>();
-    List<GMSMember> notPreferredCoordinatorList = new ArrayList<>();
+    List<MemberIdentifier> results = new ArrayList<>();
+    List<MemberIdentifier> notPreferredCoordinatorList = new ArrayList<>();
-      for (GMSMember addr : members) {
+      for (MemberIdentifier addr : members) {
-        Iterator<GMSMember> it = notPreferredCoordinatorList.iterator();
+        Iterator<MemberIdentifier> it = notPreferredCoordinatorList.iterator();
-  public List<GMSMember> getGMSMembers() {
-    return (List<GMSMember>) (List<?>) Collections.unmodifiableList(this.members);
+  public List<MemberIdentifier> getGMSMembers() {
+    return (List<MemberIdentifier>) (List<?>) Collections.unmodifiableList(this.members);
-  public List<GMSMember> getMembers() {
+  public List<MemberIdentifier> getMembers() {
-  public Set<GMSMember> getShutdownMembers() {
+  public Set<MemberIdentifier> getShutdownMembers() {
-  public Set<GMSMember> getCrashedMembers() {
+  public Set<MemberIdentifier> getCrashedMembers() {
-  public boolean shouldBeCoordinator(GMSMember who) {
-    Iterator<GMSMember> it = this.members.iterator();
-    GMSMember firstNonPreferred = null;
+  public boolean shouldBeCoordinator(MemberIdentifier who) {
+    Iterator<MemberIdentifier> it = this.members.iterator();
+    MemberIdentifier firstNonPreferred = null;
-      GMSMember mbr = it.next();
+      MemberIdentifier mbr = it.next();
-    GMSMember lead = getLeadMember();
-    for (GMSMember mbr : this.members) {
+    MemberIdentifier lead = getLeadMember();
+    for (MemberIdentifier mbr : this.members) {
-        case GMSMember.NORMAL_DM_TYPE:
+        case MemberIdentifier.NORMAL_DM_TYPE:
-        case GMSMember.LOCATOR_DM_TYPE:
+        case MemberIdentifier.LOCATOR_DM_TYPE:
-        case GMSMember.ADMIN_ONLY_DM_TYPE:
+        case MemberIdentifier.ADMIN_ONLY_DM_TYPE:
-    GMSMember lead = oldView.getLeadMember();
-    for (GMSMember mbr : this.crashedMembers) {
+    MemberIdentifier lead = oldView.getLeadMember();
+    for (MemberIdentifier mbr : this.crashedMembers) {
-        case GMSMember.NORMAL_DM_TYPE:
+        case MemberIdentifier.NORMAL_DM_TYPE:
-        case GMSMember.LOCATOR_DM_TYPE:
+        case MemberIdentifier.LOCATOR_DM_TYPE:
-        case GMSMember.ADMIN_ONLY_DM_TYPE:
+        case MemberIdentifier.ADMIN_ONLY_DM_TYPE:
-  public Set<GMSMember> getActualCrashedMembers(GMSMembershipView oldView) {
-    Set<GMSMember> result = new HashSet<>(this.crashedMembers.size());
+  public Set<MemberIdentifier> getActualCrashedMembers(GMSMembershipView oldView) {
+    Set<MemberIdentifier> result = new HashSet<>(this.crashedMembers.size());
-        .filter(mbr -> (mbr.getVmKind() != GMSMember.ADMIN_ONLY_DM_TYPE))
+        .filter(mbr -> (mbr.getVmKind() != MemberIdentifier.ADMIN_ONLY_DM_TYPE))
-    GMSMember lead = oldView.getLeadMember();
-    for (GMSMember mbr : this.crashedMembers) {
+    MemberIdentifier lead = oldView.getLeadMember();
+    for (MemberIdentifier mbr : this.crashedMembers) {
-        case GMSMember.NORMAL_DM_TYPE:
+        case MemberIdentifier.NORMAL_DM_TYPE:
-        case GMSMember.LOCATOR_DM_TYPE:
+        case MemberIdentifier.LOCATOR_DM_TYPE:
-        case GMSMember.ADMIN_ONLY_DM_TYPE:
+        case MemberIdentifier.ADMIN_ONLY_DM_TYPE:
-    GMSMember lead = getLeadMember();
+    MemberIdentifier lead = getLeadMember();
-    for (GMSMember mbr : this.members) {
+    for (MemberIdentifier mbr : this.members) {
-      for (GMSMember mbr : this.shutdownMembers) {
+      for (MemberIdentifier mbr : this.shutdownMembers) {
-      for (GMSMember mbr : this.crashedMembers) {
+      for (MemberIdentifier mbr : this.crashedMembers) {
-  public synchronized GMSMember getCanonicalID(GMSMember id) {
+  public synchronized MemberIdentifier getCanonicalID(MemberIdentifier id) {
-      for (GMSMember m : this.members) {
+      for (MemberIdentifier m : this.members) {
-    GMSUtil.writeMemberID(creator, out, context);
+    context.getSerializer().writeObject(creator, out);
-    creator = GMSUtil.readMemberID(in, context);
+    creator = context.getDeserializer().readObject(in);
-  private void writeAsArrayList(List<GMSMember> list, DataOutput out,
+  private void writeAsArrayList(List<MemberIdentifier> list, DataOutput out,
-        GMSUtil.writeMemberID(list.get(i), out, context);
+        context.getSerializer().writeObject(list.get(i), out);

MOV26 MOV23 MOV23 UPD40 MOV44 UPD74 UPD74 UPD74 MOV59 UPD74 INS59 UPD43 UPD74 MOV59 UPD43 UPD74 MOV74 UPD74 MOV74 UPD43 UPD43 UPD43 UPD74 UPD74 MOV74 UPD74 UPD74 MOV74 UPD74 MOV74 UPD74 MOV74 UPD43 UPD66 INS66 INS66 UPD66 UPD43 UPD43 UPD43 UPD43 INS42 UPD42 UPD43 UPD42 MOV42 UPD43 UPD43 UPD74 UPD43 UPD74 UPD74 UPD42 UPD74 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD43 UPD74 UPD43 UPD42 UPD42 UPD42 UPD74 UPD43 UPD74 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD74 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD74 MOV74 UPD42 UPD74 MOV74 UPD42 UPD43 UPD42 UPD43 UPD42 UPD43 UPD42 INS74 UPD74 MOV74 UPD42 UPD42 UPD42 UPD42 UPD42 UPD74 UPD43 UPD43 UPD43 UPD42 UPD74 MOV74 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 MOV43 INS43 UPD43 UPD74 MOV74 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD42 UPD43 UPD42 UPD43 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 INS42 INS32 UPD42 UPD43 UPD40 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD43 UPD43 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD74 UPD42 UPD42 UPD42 UPD43 INS32 UPD42 UPD42 UPD42 MOV42 INS42 UPD40 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42