Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class uses Java reflection in conjunction with
- * {@link org.apache.geode.pdx.PdxSerializer PdxSerialzer} to perform
- * automatic serialization of domain objects. The implication is that the domain
- * classes do not need to implement the <code>PdxSerializable</code> interface.
+ * This class uses Java reflection in conjunction with {@link org.apache.geode.pdx.PdxSerializer
+ * PdxSerialzer} to perform automatic serialization of domain objects. The implication is that the
+ * domain classes do not need to implement the <code>PdxSerializable</code> interface.
- *     .setPdxSerializer(new ReflectionBasedAutoSerializer("com.foo.DomainObject"))
- *     .create();
+ *     .setPdxSerializer(new ReflectionBasedAutoSerializer("com.foo.DomainObject")).create();
- * See {@link ReflectionBasedAutoSerializer#reconfigure(String...) reconfigure}
- * for additional details on the format of the parameter string.
+ * 
+ * See {@link ReflectionBasedAutoSerializer#reconfigure(String...) reconfigure} for additional
+ * details on the format of the parameter string.
-   * Default constructor primarily used during declarative configuration via the
-   * cache.xml file.
-   * Instances created with this constructor will not match any classes
-   * so use {@link #ReflectionBasedAutoSerializer(String...)} instead.
+   * Default constructor primarily used during declarative configuration via the cache.xml file.
+   * Instances created with this constructor will not match any classes so use
+   * {@link #ReflectionBasedAutoSerializer(String...)} instead.
-   * Constructor which takes a list of class name patterns which are to be
-   * auto-serialized. Portability of serialization will not be checked.
+   * Constructor which takes a list of class name patterns which are to be auto-serialized.
+   * Portability of serialization will not be checked.
+   * 
-   * The hash (#) characters are separators and are not part of the parameter
-   * name. An example would be:
+   * 
+   * The hash (#) characters are separators and are not part of the parameter name. An example would
+   * be:
+   * 
-   * This would select all classes with a class name beginning with <code>com.company.DomainObject</code>
-   * and would select as PDX identity fields any fields beginning with <code>id</code>
-   * and would not serialize the field called <code>creationDate</code>.
+   * 
+   * This would select all classes with a class name beginning with
+   * <code>com.company.DomainObject</code> and would select as PDX identity fields any fields
+   * beginning with <code>id</code> and would not serialize the field called
+   * <code>creationDate</code>.
-   * There is no association between the the <i>identity</i> and <i>exclude</i> 
-   * options, so the above example could also be expressed as:
+   * There is no association between the the <i>identity</i> and <i>exclude</i> options, so the
+   * above example could also be expressed as:
+   * 
-   * Note that <u>all</u> defined patterns are used when determining whether a field
-   * should be considered as an identity field or should be excluded. Thus the
-   * order of the patterns is not relevant.
+   * Note that <u>all</u> defined patterns are used when determining whether a field should be
+   * considered as an identity field or should be excluded. Thus the order of the patterns is not
+   * relevant.
-   * @param classes the patterns which are matched against domain class
-   *  names to determine whether they should be serialized
-   *  @deprecated as of 6.6.2 use ReflectionBasedAutoSerializer(String...) instead.
+   * @param classes the patterns which are matched against domain class names to determine whether
+   *        they should be serialized
+   * @deprecated as of 6.6.2 use ReflectionBasedAutoSerializer(String...) instead.
-  
+
+
-   * Constructor which takes a list of class name patterns which are to be
-   * auto-serialized. Portability of serialization will not be checked.
+   * Constructor which takes a list of class name patterns which are to be auto-serialized.
+   * Portability of serialization will not be checked.
+   * 
-   * The hash (#) characters are separators and are not part of the parameter
-   * name. An example would be:
+   * 
+   * The hash (#) characters are separators and are not part of the parameter name. An example would
+   * be:
+   * 
-   * This would select all classes with a class name beginning with <code>com.company.DomainObject</code>
-   * and would select as PDX identity fields any fields beginning with <code>id</code>
-   * and would not serialize the field called <code>creationDate</code>.
+   * 
+   * This would select all classes with a class name beginning with
+   * <code>com.company.DomainObject</code> and would select as PDX identity fields any fields
+   * beginning with <code>id</code> and would not serialize the field called
+   * <code>creationDate</code>.
-   * There is no association between the the <i>identity</i> and <i>exclude</i> 
-   * options, so the above example could also be expressed as:
+   * There is no association between the the <i>identity</i> and <i>exclude</i> options, so the
+   * above example could also be expressed as:
+   * 
-   * Note that <u>all</u> defined patterns are used when determining whether a field
-   * should be considered as an identity field or should be excluded. Thus the
-   * order of the patterns is not relevant.
+   * Note that <u>all</u> defined patterns are used when determining whether a field should be
+   * considered as an identity field or should be excluded. Thus the order of the patterns is not
+   * relevant.
-   * @param patterns the patterns which are matched against domain class
-   *  names to determine whether they should be serialized
+   * @param patterns the patterns which are matched against domain class names to determine whether
+   *        they should be serialized
+
-   * Constructor which takes a list of class name patterns which are to be
-   * auto-serialized.
+   * Constructor which takes a list of class name patterns which are to be auto-serialized.
+   * 
-   * The hash (#) characters are separators and are not part of the parameter
-   * name. An example would be:
+   * 
+   * The hash (#) characters are separators and are not part of the parameter name. An example would
+   * be:
+   * 
-   * This would select all classes with a class name beginning with <code>com.company.DomainObject</code>
-   * and would select as PDX identity fields any fields beginning with <code>id</code>
-   * and would not serialize the field called <code>creationDate</code>.
+   * 
+   * This would select all classes with a class name beginning with
+   * <code>com.company.DomainObject</code> and would select as PDX identity fields any fields
+   * beginning with <code>id</code> and would not serialize the field called
+   * <code>creationDate</code>.
-   * There is no association between the the <i>identity</i> and <i>exclude</i> 
-   * options, so the above example could also be expressed as:
+   * There is no association between the the <i>identity</i> and <i>exclude</i> options, so the
+   * above example could also be expressed as:
+   * 
-   * Note that <u>all</u> defined patterns are used when determining whether a field
-   * should be considered as an identity field or should be excluded. Thus the
-   * order of the patterns is not relevant.
+   * Note that <u>all</u> defined patterns are used when determining whether a field should be
+   * considered as an identity field or should be excluded. Thus the order of the patterns is not
+   * relevant.
-   * @param checkPortability if <code>true</code> then an serialization done by
-   *  this serializer will throw an exception if the object it not portable to
-   *  non-java languages.
-   * @param patterns the patterns which are matched against domain class
-   *  names to determine whether they should be serialized
+   * @param checkPortability if <code>true</code> then an serialization done by this serializer will
+   *        throw an exception if the object it not portable to non-java languages.
+   * @param patterns the patterns which are matched against domain class names to determine whether
+   *        they should be serialized
-   * Method to configure classes to consider for serialization, to set any
-   * identity fields and to define any fields to exclude from serialization.
+   * Method to configure classes to consider for serialization, to set any identity fields and to
+   * define any fields to exclude from serialization.
+   * 
-   * The hash (#) characters are separators and are not part of the parameter
-   * name. An example would be:
+   * 
+   * The hash (#) characters are separators and are not part of the parameter name. An example would
+   * be:
+   * 
-   * This would select all classes with a class name beginning with <code>com.company.DomainObject</code>
-   * and would select as PDX identity fields any fields beginning with <code>id</code>
-   * and would not serialize the field called <code>creationDate</code>.
+   * 
+   * This would select all classes with a class name beginning with
+   * <code>com.company.DomainObject</code> and would select as PDX identity fields any fields
+   * beginning with <code>id</code> and would not serialize the field called
+   * <code>creationDate</code>.
-   * There is no association between the the <i>identity</i> and <i>exclude</i> 
-   * options, so the above example could also be expressed as:
+   * There is no association between the the <i>identity</i> and <i>exclude</i> options, so the
+   * above example could also be expressed as:
+   * 
-   * Note that <u>all</u> defined patterns are used when determining whether a field
-   * should be considered as an identity field or should be excluded. Thus the
-   * order of the patterns is not relevant.
+   * Note that <u>all</u> defined patterns are used when determining whether a field should be
+   * considered as an identity field or should be excluded. Thus the order of the patterns is not
+   * relevant.
+
-   * Method to reconfigure this serializer. Any previous configuration is cleared.
-   * The serializer will not check for portable serialization.
+   * Method to reconfigure this serializer. Any previous configuration is cleared. The serializer
+   * will not check for portable serialization.
+   * 
-   * The hash (#) characters are separators and are not part of the parameter
-   * name. An example would be:
+   * 
+   * The hash (#) characters are separators and are not part of the parameter name. An example would
+   * be:
+   * 
-   * This would select all classes with a class name beginning with <code>com.company.DomainObject</code>
-   * and would select as PDX identity fields any fields beginning with <code>id</code>
-   * and would not serialize the field called <code>creationDate</code>.
+   * 
+   * This would select all classes with a class name beginning with
+   * <code>com.company.DomainObject</code> and would select as PDX identity fields any fields
+   * beginning with <code>id</code> and would not serialize the field called
+   * <code>creationDate</code>.
-   * There is no association between the the <i>identity</i> and <i>exclude</i> 
-   * options, so the above example could also be expressed as:
+   * There is no association between the the <i>identity</i> and <i>exclude</i> options, so the
+   * above example could also be expressed as:
+   * 
-   * Note that <u>all</u> defined patterns are used when determining whether a field
-   * should be considered as an identity field or should be excluded. Thus the
-   * order of the patterns is not relevant.
+   * Note that <u>all</u> defined patterns are used when determining whether a field should be
+   * considered as an identity field or should be excluded. Thus the order of the patterns is not
+   * relevant.
+
+   * 
-   * The hash (#) characters are separators and are not part of the parameter
-   * name. An example would be:
+   * 
+   * The hash (#) characters are separators and are not part of the parameter name. An example would
+   * be:
+   * 
-   * This would select all classes with a class name beginning with <code>com.company.DomainObject</code>
-   * and would select as PDX identity fields any fields beginning with <code>id</code>
-   * and would not serialize the field called <code>creationDate</code>.
+   * 
+   * This would select all classes with a class name beginning with
+   * <code>com.company.DomainObject</code> and would select as PDX identity fields any fields
+   * beginning with <code>id</code> and would not serialize the field called
+   * <code>creationDate</code>.
-   * There is no association between the the <i>identity</i> and <i>exclude</i> 
-   * options, so the above example could also be expressed as:
+   * There is no association between the the <i>identity</i> and <i>exclude</i> options, so the
+   * above example could also be expressed as:
+   * 
-   * Note that <u>all</u> defined patterns are used when determining whether a field
-   * should be considered as an identity field or should be excluded. Thus the
-   * order of the patterns is not relevant.
+   * Note that <u>all</u> defined patterns are used when determining whether a field should be
+   * considered as an identity field or should be excluded. Thus the order of the patterns is not
+   * relevant.
-   * @param checkPortability if <code>true</code> then an serialization done by
-   * this serializer will throw an exception if the object it not portable to
-   * non-java languages.
+   * @param checkPortability if <code>true</code> then an serialization done by this serializer will
+   *        throw an exception if the object it not portable to non-java languages.
-   * Method implemented from <code>PdxSerializer</code> which performs object
-   * serialization.
+   * Method implemented from <code>PdxSerializer</code> which performs object serialization.
-   * @param obj
-   *          the object to serialize
-   * @param writer
-   *          the <code>PdxWriter</code> to use when serializing this object
-   * @return <code>true</code> if the object was serialized, <code>false</code>
-   *         otherwise
+   * @param obj the object to serialize
+   * @param writer the <code>PdxWriter</code> to use when serializing this object
+   * @return <code>true</code> if the object was serialized, <code>false</code> otherwise
-   * Method implemented from <code>PdxSerializer</code> which performs object
-   * de-serialization.
+   * Method implemented from <code>PdxSerializer</code> which performs object de-serialization.
-   * @param clazz
-   *          the class of the object to re-create
-   * @param reader
-   *          the <code>PdxReader</code> to use when creating this object
-   * @return the deserialized object if this serializer handles the given class,
-   * null otherwise.
+   * @param clazz the class of the object to re-create
+   * @param reader the <code>PdxReader</code> to use when creating this object
+   * @return the deserialized object if this serializer handles the given class, null otherwise.
-   * Used for declarative class initialization from cache.xml. The following
-   * property may be specified:
+   * Used for declarative class initialization from cache.xml. The following property may be
+   * specified:
-   * <li><b>classes</b> - a comma-delimited list of strings which represent the
-   * patterns used to select classes for serialization, patterns to select
-   * identity fields and patterns to exclude fields. See {@link ReflectionBasedAutoSerializer#reconfigure(String...) reconfigure}
-   * for specifics.
-   * </li>
-   * <li><b>check-portability</b> - if true then an exception will be thrown if
-   * an attempt to serialize data that is not portable to .NET is made.
+   * <li><b>classes</b> - a comma-delimited list of strings which represent the patterns used to
+   * select classes for serialization, patterns to select identity fields and patterns to exclude
+   * fields. See {@link ReflectionBasedAutoSerializer#reconfigure(String...) reconfigure} for
+   * specifics.</li>
+   * <li><b>check-portability</b> - if true then an exception will be thrown if an attempt to
+   * serialize data that is not portable to .NET is made.
-   * @param props
-   *          properties used to configure the auto serializer
+   * @param props properties used to configure the auto serializer
-   * Return a <code>Properties</code> object with a representation of the
-   * current config. Depending on how this <code>ReflectionBasedAutoSerializer</code>
-   * was configured, the returned property value will have the correct semantics
-   * but may differ from the the original configuration string.
+   * Return a <code>Properties</code> object with a representation of the current config. Depending
+   * on how this <code>ReflectionBasedAutoSerializer</code> was configured, the returned property
+   * value will have the correct semantics but may differ from the the original configuration
+   * string.
-   * Controls what classes will be auto serialized by this serializer.
-   * Override this method to customize what classes will be auto serialized.
+   * Controls what classes will be auto serialized by this serializer. Override this method to
+   * customize what classes will be auto serialized.
-   * <li>excludes classes whose package begins with "org.apache.", "java.", or "javax."
-   * unless the system property "gemfire.auto.serialization.no.hardcoded.excludes"
-   * is set to "true".
+   * <li>excludes classes whose package begins with "org.apache.", "java.", or "javax." unless the
+   * system property "gemfire.auto.serialization.no.hardcoded.excludes" is set to "true".
-   * <li>excludes classes that require standard java serialization. A class
-   * requires standard java serialization if it extends Externalizable or
-   * if it extends Serializable and has either a private writeObject method
-   * or a writeReplace method as defined by the java serialization specification.
+   * <li>excludes classes that require standard java serialization. A class requires standard java
+   * serialization if it extends Externalizable or if it extends Serializable and has either a
+   * private writeObject method or a writeReplace method as defined by the java serialization
+   * specification.
-   * This method is only called the first time it sees a new class. The result
-   * will be remembered and used the next time the same class is seen.
+   * This method is only called the first time it sees a new class. The result will be remembered
+   * and used the next time the same class is seen.
+   * 
-   * Controls what fields of a class will be auto serialized by this serializer.
-   * Override this method to customize what fields of a class will be auto serialized.
+   * Controls what fields of a class will be auto serialized by this serializer. Override this
+   * method to customize what fields of a class will be auto serialized.
-   * <li> excludes transient fields
-   * <li> excludes static fields
-   * <li> excludes any fields that match an "#exclude=" pattern.
+   * <li>excludes transient fields
+   * <li>excludes static fields
+   * <li>excludes any fields that match an "#exclude=" pattern.
-   * This method is only called the first time it sees a new class. The result
-   * will be remembered and used the next time the same class is seen.
+   * This method is only called the first time it sees a new class. The result will be remembered
+   * and used the next time the same class is seen.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
+
-   * Controls the field name that will be used in pdx for a field being auto serialized.
-   * Override this method to customize the field names that will be generated by auto serialization.
-   * It allows you to convert a local, language dependent name, to a more portable name.
-   * The returned name is the one that will show up in a {@link PdxInstance} and that
-   * one that will need to be used to access the field when doing a query.
+   * Controls the field name that will be used in pdx for a field being auto serialized. Override
+   * this method to customize the field names that will be generated by auto serialization. It
+   * allows you to convert a local, language dependent name, to a more portable name. The returned
+   * name is the one that will show up in a {@link PdxInstance} and that one that will need to be
+   * used to access the field when doing a query.
-   * This method is only called the first time it sees a new class. The result
-   * will be remembered and used the next time the same class is seen.
+   * This method is only called the first time it sees a new class. The result will be remembered
+   * and used the next time the same class is seen.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
-   * Controls what fields of a class that is auto serialized will be marked
-   * as pdx identity fields.
-   * Override this method to customize what fields of an auto serialized class will be
-   * identity fields.
-   * Identity fields are used when a {@link PdxInstance} computes its hash code
-   * and checks to see if it is equal to another object.
+   * Controls what fields of a class that is auto serialized will be marked as pdx identity fields.
+   * Override this method to customize what fields of an auto serialized class will be identity
+   * fields. Identity fields are used when a {@link PdxInstance} computes its hash code and checks
+   * to see if it is equal to another object.
-   * The default implementation only marks fields that match an "#identity=" pattern
-   * as identity fields.
+   * The default implementation only marks fields that match an "#identity=" pattern as identity
+   * fields.
-   * This method is only called the first time it sees a new class. The result
-   * will be remembered and used the next time the same class is seen.
+   * This method is only called the first time it sees a new class. The result will be remembered
+   * and used the next time the same class is seen.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
-   * Controls what pdx field type will be used when auto serializing.
-   * Override this method to customize what pdx field type will be used
-   * for a given domain class field.
+   * Controls what pdx field type will be used when auto serializing. Override this method to
+   * customize what pdx field type will be used for a given domain class field.
-   * The default implementation uses {@link FieldType#get(Class)}
-   * by passing it {@link Field#getType()}.
+   * The default implementation uses {@link FieldType#get(Class)} by passing it
+   * {@link Field#getType()}.
-   * This method is only called the first time it sees a new class. The result
-   * will be remembered and used the next time the same class is seen.
+   * This method is only called the first time it sees a new class. The result will be remembered
+   * and used the next time the same class is seen.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
-   * Controls if a pdx field's value can be transformed during serialization.
-   * Override this method to customize what fields can have their values transformed.
-   * If you return true then you need to also override {@link #writeTransform}
-   * and {@link #readTransform}.
+   * Controls if a pdx field's value can be transformed during serialization. Override this method
+   * to customize what fields can have their values transformed. If you return true then you need to
+   * also override {@link #writeTransform} and {@link #readTransform}.
-   * This method is only called the first time it sees a new class. The result
-   * will be remembered and used the next time the same class is seen.
+   * This method is only called the first time it sees a new class. The result will be remembered
+   * and used the next time the same class is seen.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
-   * @return true if the {@link #writeTransform} and {@link #readTransform} need to be called
-   * when serializing and deserializing this field's value.
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
+   * @return true if the {@link #writeTransform} and {@link #readTransform} need to be called when
+   *         serializing and deserializing this field's value.
+
-   * Controls what field value is written during auto serialization.
-   * Override this method to customize the data that will be written
-   * during auto serialization.
-   * This method will only be called if {@link #transformFieldValue}
-   * returned true.
+   * Controls what field value is written during auto serialization. Override this method to
+   * customize the data that will be written during auto serialization. This method will only be
+   * called if {@link #transformFieldValue} returned true.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
-   * @param originalValue the value of the field that was read from the domain object. 
-   * @return the actual value to write for this field. Return <code>originalValue</code>
-   *   if you decide not to transform the value. 
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
+   * @param originalValue the value of the field that was read from the domain object.
+   * @return the actual value to write for this field. Return <code>originalValue</code> if you
+   *         decide not to transform the value.
+
-   * Controls what field value is read during auto deserialization.
-   * Override this method to customize the data that will be read
-   * during auto deserialization.
-   * This method will only be called if {@link #transformFieldValue}
-   * returned true.
+   * Controls what field value is read during auto deserialization. Override this method to
+   * customize the data that will be read during auto deserialization. This method will only be
+   * called if {@link #transformFieldValue} returned true.
+   * 
-   * @param clazz the original class being serialized that owns this field.
-   *   Note that this field may have been inherited from a super class by this class.
-   *   If you want to find the class that declared this field use {@link Field#getDeclaringClass()}.
+   * @param clazz the original class being serialized that owns this field. Note that this field may
+   *        have been inherited from a super class by this class. If you want to find the class that
+   *        declared this field use {@link Field#getDeclaringClass()}.
-   * @return the actual value to write for this field. Return <code>serializedValue</code>
-   *   if you decide not to transform the value. 
+   * @return the actual value to write for this field. Return <code>serializedValue</code> if you
+   *         decide not to transform the value.
+
-   * Returns the cache that this serializer is installed on.
-   * Returns null if it is not installed.
+   * Returns the cache that this serializer is installed on. Returns null if it is not installed.
+   * 
+
+   * 
-}
+}

