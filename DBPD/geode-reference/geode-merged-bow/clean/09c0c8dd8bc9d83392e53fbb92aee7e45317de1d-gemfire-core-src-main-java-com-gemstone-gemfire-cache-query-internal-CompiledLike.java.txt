GEODE-890:CompiledLike member variables are not thread safe

Member variables in CompiledLike need to be thread safe.
Added the member variables into the execution context, this should
prevent threads/queries from sharing these variable values and
prevent a possible stack overflow/ infinite loop from occuring.

Added a Multithreaded test helper and test to reproduce the original issue.

-  private int wildcardType = -1;
+  private Object wildcardTypeKey = new Object();
-  private int wildcardPosition = -1;
+  private Object wildcardPositionKey = new Object();
-  private int patternLength = 0;
+  private Object patternLengthKey = new Object();
-  private boolean isIndexEvaluated = false;
+  private Object isIndexEvaluatedKey = new Object();
+  private int getWildcardPosition(ExecutionContext context) {
+    return (Integer)context.cacheGet(wildcardPositionKey, -1);
+  }
+  
+  private int getWildcardType(ExecutionContext context) {
+    return (Integer)context.cacheGet(wildcardTypeKey, -1);
+  }
+  
+  private int getPatternLength(ExecutionContext context) {
+    return (Integer) context.cacheGet(patternLengthKey, 0);
+  }
+  
+  private boolean getIsIndexEvaluated(ExecutionContext context) {
+    return (Boolean) context.cacheGet(isIndexEvaluatedKey, false);
+  }
-          && (wildcardPosition == patternLength - 1)
-          && (wildcardType == WILDCARD_PERCENT)) {
+          && (getWildcardPosition(context) == getPatternLength(context) - 1)
+          && (getWildcardType(context) == WILDCARD_PERCENT)) {
-    CompiledComparison[] cvs = getRangeIfSargable(this.var, pattern);
+    CompiledComparison[] cvs = getRangeIfSargable(context, this.var, pattern);
-          && (wildcardPosition == patternLength - 1)
-          && (wildcardType == WILDCARD_PERCENT)) {
+          && (getWildcardPosition(context) == getPatternLength(context) - 1)
+          && (getWildcardType(context) == WILDCARD_PERCENT)) {
-  CompiledComparison[] getRangeIfSargable(CompiledValue var, String pattern) {
+  CompiledComparison[] getRangeIfSargable(ExecutionContext context, CompiledValue var, String pattern) {
-    wildcardPosition = checkIfSargableAndRemoveEscapeChars(buffer);
-    patternLength = buffer.length();
-    isIndexEvaluated = true;
+    int wildcardPosition = checkIfSargableAndRemoveEscapeChars(context, buffer);
+    context.cachePut(wildcardPositionKey, wildcardPosition);
+    int patternLength = buffer.length();
+    context.cachePut(patternLengthKey, patternLength);
+    context.cachePut(isIndexEvaluatedKey, true);
-        if (len < (patternLength - 1) || wildcardType == WILDCARD_UNDERSCORE) {
+        if (len < (patternLength - 1) || getWildcardType(context) == WILDCARD_UNDERSCORE) {
-  int checkIfSargableAndRemoveEscapeChars(StringBuffer buffer) {
+  int checkIfSargableAndRemoveEscapeChars(ExecutionContext context, StringBuffer buffer) {
-        wildcardType = WILDCARD_UNDERSCORE;
+        context.cachePut(wildcardTypeKey, WILDCARD_UNDERSCORE);
-        wildcardType = WILDCARD_PERCENT;
+        context.cachePut(wildcardTypeKey, WILDCARD_PERCENT);
-    isIndexEvaluated = false;
+    context.cachePut(isIndexEvaluatedKey, false);
-    if (isIndexEvaluated) {
+    if (getIsIndexEvaluated(context)) {

INS23 INS23 INS31 INS31 INS31 INS31 INS43 INS43 MOV83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS44 INS44 INS42 UPD42 INS14 INS42 UPD42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS43 INS42 INS41 INS43 INS42 INS41 INS43 INS42 INS41 INS43 INS42 INS41 INS43 INS42 INS60 INS21 INS60 INS43 INS42 INS43 INS43 INS43 INS43 INS42 INS11 INS42 INS11 INS42 INS11 INS42 INS11 INS42 INS39 INS59 INS32 INS39 INS59 INS32 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS32 INS43 INS32 INS43 INS32 INS43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 MOV38 INS42 INS42 INS42 INS42 MOV38 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS9 INS42 MOV42 INS42 MOV42 MOV36 MOV36 MOV21 INS32 MOV21 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL39 DEL39 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL7 DEL42 DEL9 DEL7 DEL42 DEL42 DEL42 DEL7 DEL42 DEL42 DEL7 DEL42 DEL9 DEL7 DEL42