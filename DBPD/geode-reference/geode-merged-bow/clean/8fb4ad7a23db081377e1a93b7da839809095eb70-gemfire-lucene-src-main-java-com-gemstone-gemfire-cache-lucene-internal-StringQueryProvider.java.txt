Refactoring LuceneFunction, LuceneQueryProvider, and LuceneQueryFactory

LuceneFunction had a static RepositoryManager, I changed the code to get
look up the RepositoryManager from the LuceneService.

As part of that work, I noticed StringQueryProvider really needed access
to the index to lookup the field names, analyzer, etc. So I changed the
getQuery method to take an index, and removed the unneeded string
parameters.

Finally, I removed some of the mocking from
LuceneFunctionReadPathDUnitTest, which exposed some other issues:

* I switched RepositoryManager.getRepositories back to using a
RegionFunctionContext, because apparently context.getDataSet is *not*
the local data set.

* I canonicalized the regionPaths in LuceneService

+import org.apache.lucene.analysis.standard.StandardAnalyzer;
-  private String indexName;
-  private String regionPath;
-  private Query luceneQuery;
-  private LuceneIndex index;
+  private transient Query luceneQuery;
-    this(null, null);
+    this(null);
-  public StringQueryProvider(LuceneIndex index, String query) {
+  public StringQueryProvider(String query) {
-    this.index = index;
-    if (index != null) {
-      this.indexName = index.getName();
-      this.regionPath = index.getRegionPath();
-    }
-  public synchronized Query getQuery() throws QueryException {
+  public synchronized Query getQuery(LuceneIndex index) throws QueryException {
-      String[] fields = null;
-      if (index != null) {
-        fields = index.getFieldNames();
-      } else {
-        // TODO get index from lucene query service
-      }
+      String[] fields = index.getFieldNames();
-      MultiFieldQueryParser parser = new MultiFieldQueryParser(fields, new SimpleAnalyzer());
+      //TODO  get the analyzer from the index
+      MultiFieldQueryParser parser = new MultiFieldQueryParser(fields, new StandardAnalyzer());
-  /**
-   * @return name of the index on which this query will be executed
-   */
-  public String getIndexName() {
-    return indexName;
-  }
-
-  /**
-   * @return path of the region on which this query will be executed
-   */
-  public String getRegionPath() {
-    return regionPath;
-  }
-
-    DataSerializer.writeString(index.getName(), out);
-    DataSerializer.writeString(index.getRegionPath(), out);
-    this.indexName = DataSerializer.readString(in);
-    this.regionPath = DataSerializer.readString(in);

INS26 INS40 INS83 INS8 MOV44 MOV21 MOV43 MOV32 MOV43 UPD43 UPD42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL33 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL33 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL8 DEL8 DEL25 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21