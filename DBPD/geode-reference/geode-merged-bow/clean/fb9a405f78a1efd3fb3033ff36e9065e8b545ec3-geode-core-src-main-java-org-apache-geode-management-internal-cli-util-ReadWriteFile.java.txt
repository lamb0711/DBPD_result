GEODE-3472: Remove a great deal of commented-out code.

* this closes #748

-import org.apache.geode.cache.execute.FunctionException;
-import org.apache.geode.internal.logging.LogWriterImpl;
-import org.apache.geode.internal.logging.log4j.LogLevel;
-import org.apache.geode.management.internal.cli.GfshParser;
-
-import java.io.FileNotFoundException;
+import org.apache.geode.cache.execute.FunctionException;
+import org.apache.geode.internal.logging.LogWriterImpl;
+import org.apache.geode.internal.logging.log4j.LogLevel;
+import org.apache.geode.management.internal.cli.GfshParser;
+
-      BufferedReader input = null;
-      BufferedWriter output = null;
+      BufferedReader input;
+      BufferedWriter output;
-      if (logFileNameFile.canRead() == false) {
+      if (!logFileNameFile.canRead()) {
-      String line = null;
+      String line;
-        if (input != null) {
-          input.close();
-        }
-        if (output != null) {
-          output.flush();
-          output.close();
-        }
-        return (logToBeWritten + " doesn not exist");
+        input.close();
+        output.flush();
+        output.close();
+        return (logToBeWritten + " does not exist");
-        if (input != null) {
-          input.close();
-        }
-        if (output != null) {
-          output.flush();
-          output.close();
-        }
+        input.close();
+        output.flush();
+        output.close();
-        if (input != null) {
-          input.close();
-        }
-        if (output != null) {
-          output.flush();
-          output.close();
-        }
+        input.close();
+        output.flush();
+        output.close();
-      List<String> logLevels = new ArrayList<String>();
+      List<String> logLevels = new ArrayList<>();
-      while (input.ready() == true && (line = input.readLine()) != null) {
-        if (new File(logFileName).canRead() == false) {
+      while (input.ready() && (line = input.readLine()) != null) {
+        if (!new File(logFileName).canRead()) {
-        // boolean validateLogLevel = true;
-        if (line.startsWith("[")) {
-          foundLogLevelTag = true;
-        } else {
-          foundLogLevelTag = false;
-        }
-        if (line.contains("[info ") && timeRangeCheck == false) {
+        foundLogLevelTag = line.startsWith("[");
+        if (line.contains("[info ") && !timeRangeCheck) {
-            // dont take this log file as this does not fit in time range
+            // don't take this log file as this does not fit in time range
-        if (foundLogLevelTag == true) {
+        if (foundLogLevelTag) {
-      return ("Sucessfully written file " + logFileName);
+      return ("Successfully written file " + logFileName);
-    } catch (FileNotFoundException ex) {
-      return ("readWriteFile FileNotFoundException " + ex.getMessage());
-    } else if (line != null && foundLogLevelTag == true) {
+    } else if (foundLogLevelTag) {
-              if (flag == true) {
+              if (flag) {

MOV26 MOV26 MOV26 MOV26 INS42 INS38 MOV32 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV32 MOV21 UPD74 INS38 INS42 UPD45 MOV32 MOV32 INS38 UPD45 INS42 INS42 DEL40 DEL26 DEL33 DEL33 DEL9 DEL27 DEL33 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL43 DEL9 DEL27 DEL9 DEL27 DEL9 DEL8 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL9 DEL27 DEL42 DEL9 DEL27 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL42 DEL32 DEL27 DEL36 DEL41 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL9 DEL27 DEL27 DEL42 DEL9 DEL27