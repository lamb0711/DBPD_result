Adding a new CacheService extension point to GemFireCache

I had previously modified the existing Extension mechanism on this
branch to be able to fetch Extensions by key.

However, after digging more, I think those Extensions are mostly just
useful for Xml parsing since they have callbacks specific to
transitioning an object from a *Creation to a real object. In addition,
I was worried the changes I made would break existing extensions. So I
have rolled back those changes.

Instead of that, I've added the concept of a CacheService, which is
loaded by the ServiceLoader during cache initialization and has the same
lifecycle as the cache. Services can be retrieved using
GemfireCacheImpl.getService(SomeService.class).

I've used this new mechanism to install the LuceneService. This is
currently only an internal service, but we may want to make this public,
eg

Cache.getService(SomeService.class)

-    extensible.getExtensionPoint().removeExtension(MockCacheExtension.class);
+    for (Extension<Cache> extension : extensible.getExtensionPoint().getExtensions()) {
+      if (extension instanceof MockCacheExtension) {
+        extensible.getExtensionPoint().removeExtension(extension);
+        break;
+      }
+    }
-}
+}

INS70 INS44 MOV32 INS8 INS74 INS42 UPD42 INS25 INS43 INS43 INS62 INS8 INS42 INS42 INS42 MOV43 MOV21 INS10 INS32 INS32 INS42 INS42 INS42 INS42 DEL57