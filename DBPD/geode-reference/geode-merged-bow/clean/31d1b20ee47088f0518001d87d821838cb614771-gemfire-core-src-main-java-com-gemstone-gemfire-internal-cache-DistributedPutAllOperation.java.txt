Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

+  public void setPutAllEntryData(PutAllEntryData[] putAllEntryData) {
+    for (int i = 0; i < putAllEntryData.length; i++) {
+      putAllData[i] = putAllEntryData[i];
+    }
+    this.putAllDataSize = putAllEntryData.length;
+  }
+  
+  /**
+   * Add an entry that this putall operation should distribute.
+   */
+  public void addEntry(PutAllEntryData putAllEntry)
+  {
+    this.putAllData[this.putAllDataSize] = putAllEntry;
+    this.putAllDataSize += 1;
+    //cachedEvents.add(ev);
+  }
+  
+  public void freeOffHeapResources() {
+    // I do not use eventIterator here because it forces the lazy creation of EntryEventImpl by calling getEventForPosition.
+    for (int i=0; i < this.putAllDataSize; i++) {
+      PutAllEntryData entry = this.putAllData[i];
+      if (entry != null && entry.event != null) {
+        entry.event.release();
+      }
+    }
+  }
+  
+  
-    EntryEventImpl ev = new EntryEventImpl(
+    EntryEventImpl ev = EntryEventImpl.create(
+    boolean returnedEv = false;
+    try {
+    returnedEv = true;
+    } finally {
+      if (!returnedEv) {
+        ev.release();
+      }
+    }
-      this.value = event.getRawNewValue();
-      Object oldValue = event.getRawOldValue();
+      this.value = event.getRawNewValueAsHeapObject();
+      Object oldValue = event.getRawOldValueAsHeapObject();
+	msg.setFetchFromHDFS(event.isFetchFromHDFS());
+    msg.setPutDML(event.isPutDML());
-        event.isPossibleDuplicate(), !event.isGenerateCallbacks(), event.getCallbackArgument());
+        event.isPossibleDuplicate(), !event.isGenerateCallbacks(), event.getCallbackArgument(), false, false /*isPutDML*/);
-            event.isPossibleDuplicate(), !event.isGenerateCallbacks(), event.getCallbackArgument());
+            event.isPossibleDuplicate(), !event.isGenerateCallbacks(), event.getCallbackArgument(), event.isFetchFromHDFS(), event.isPutDML());
+        prMsg.setTransactionDistributed(event.getRegion().getCache().getTxManager().isDistributed());
+    // By default, fetchFromHDFS == true;
+    private transient boolean fetchFromHDFS = true;
+    
+    private transient boolean isPutDML = false;
+
-      EntryEventImpl event = new EntryEventImpl(
+      EntryEventImpl event = EntryEventImpl.create(
-        boolean requiresRegionContext) {
+        boolean requiresRegionContext, boolean fetchFromHDFS, boolean isPutDML) {
+	  ev.setFetchFromHDFS(fetchFromHDFS);
+      ev.setPutDML(isPutDML);
+        ev.release();
-      EntryEventImpl ev = new EntryEventImpl(rgn, entry.getOp(),
+      EntryEventImpl ev = EntryEventImpl.create(rgn, entry.getOp(),
+      boolean returnedEv = false;
+      try {
+      returnedEv = true;
+      } finally {
+        if (!returnedEv) {
+          ev.release();
+        }
+      }
-            doEntryPut(putAllData[i], rgn, requiresRegionContext);
+            doEntryPut(putAllData[i], rgn, requiresRegionContext,  fetchFromHDFS, isPutDML);
-
+    
+    public void setFetchFromHDFS(boolean val) {
+      this.fetchFromHDFS = val;
+    }
+    
+    public void setPutDML(boolean val) {
+      this.isPutDML = val;
+    }
+    
+    @Override
+    protected short computeCompressedExtBits(short bits) {
+      bits = super.computeCompressedExtBits(bits);
+      if (fetchFromHDFS) {
+        bits |= FETCH_FROM_HDFS;
+      }
+      if (isPutDML) {
+        bits |= IS_PUT_DML;
+      }
+      return bits;
+    }

INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS23 INS23 INS31 INS31 INS31 INS5 INS42 INS24 INS21 INS65 INS43 INS42 INS21 INS21 INS24 INS60 INS54 INS21 INS21 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS44 INS44 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS43 INS85 INS58 INS27 INS37 INS8 INS7 INS66 INS42 INS7 INS7 INS58 INS27 INS37 INS8 MOV43 INS39 INS59 INS8 INS8 INS32 INS32 MOV43 INS42 INS9 INS42 INS9 INS39 INS42 INS39 INS42 INS21 INS21 INS60 INS54 INS39 INS42 INS21 INS39 INS42 INS21 INS42 INS39 INS42 INS21 INS25 INS25 INS41 INS42 INS39 INS59 INS42 INS40 INS42 INS21 INS22 INS40 INS2 INS42 INS22 INS34 INS39 INS59 INS42 INS22 INS42 INS60 INS25 INS32 INS42 INS9 MOV21 MOV25 MOV21 INS21 MOV25 MOV21 MOV21 MOV60 MOV25 MOV21 MOV25 MOV21 MOV21 MOV41 INS25 INS42 INS42 INS32 INS42 INS42 INS32 MOV43 INS59 INS32 INS32 MOV43 INS59 INS39 INS59 INS8 INS8 INS7 INS7 INS7 INS42 INS8 INS42 INS8 INS42 INS42 INS34 INS7 INS52 INS42 INS22 INS22 INS52 INS42 INS42 INS34 INS52 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 MOV32 MOV32 INS33 MOV32 INS9 MOV32 MOV32 MOV32 INS7 INS38 INS8 INS42 INS42 INS42 INS42 MOV43 INS9 INS9 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS32 INS42 INS9 MOV25 MOV25 MOV21 MOV21 MOV21 MOV25 MOV21 INS21 MOV41 INS25 INS22 INS42 INS22 INS42 INS42 INS48 INS21 INS21 INS2 INS2 INS52 INS42 INS52 INS42 INS42 INS42 INS2 INS27 INS27 INS21 INS42 INS9 INS42 INS21 UPD42 UPD42 INS21 INS42 INS42 INS42 INS40 INS33 INS33 MOV22 INS9 MOV32 INS32 INS42 INS42 INS42 MOV32 INS42 INS33 INS42 INS42 INS42 MOV38 INS42 INS7 INS38 INS8 INS52 INS42 INS52 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS33 INS40 INS33 INS32 INS32 INS32 INS42 INS42 INS42 INS9 INS42 INS21 INS42 INS42 INS42 INS42 INS52 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL33 DEL9 DEL14 DEL42 DEL43 DEL42 DEL42 DEL40 DEL33 DEL33 DEL9 DEL14 DEL59 DEL42 DEL43 DEL42 DEL42 DEL42 DEL33 DEL42 DEL42 DEL42 DEL42 DEL14 DEL59