Merge branch 'develop' into feature/GEODE-17-2

-import com.gemstone.gemfire.LogWriter;
+import org.apache.logging.log4j.Logger;
- * A "stack" of "chunk" instances. The chunks are not kept
- * in java object form but instead each "chunk" is just an
- * off-heap address.
- * This class is used for each "tiny" free-list of the off-heap memory allocator.
+ * A "stack" of addresses of OffHeapStoredObject instances. The stored objects are not kept
+ * in java object form but instead each one is just an off-heap address.
+ * This class is used for each "tiny" free-list of the FreeListManager.
+ * This class is thread safe.
-public class SyncChunkStack {
+public class OffHeapStoredObjectAddressStack {
-  public SyncChunkStack(long addr) {
-    if (addr != 0L) SimpleMemoryAllocatorImpl.validateAddress(addr);
+  public OffHeapStoredObjectAddressStack(long addr) {
+    if (addr != 0L) MemoryAllocatorImpl.validateAddress(addr);
-  public SyncChunkStack() {
+  public OffHeapStoredObjectAddressStack() {
-    SimpleMemoryAllocatorImpl.validateAddress(e);
+    MemoryAllocatorImpl.validateAddress(e);
-      ObjectChunk.setNext(e, this.topAddr);
+      OffHeapStoredObject.setNext(e, this.topAddr);
-        this.topAddr = ObjectChunk.getNext(result);
+        this.topAddr = OffHeapStoredObject.getNext(result);
-   * Removes all the Chunks from this stack
-   * and returns the address of the first chunk.
-   * The caller owns all the Chunks after this call.
+   * Removes all the addresses from this stack
+   * and returns the top address.
+   * The caller owns all the addresses after this call.
-  public void logSizes(LogWriter lw, String msg) {
+  public void logSizes(Logger logger, String msg) {
-        int curSize = ObjectChunk.getSize(addr);
-        addr = ObjectChunk.getNext(addr);
+        int curSize = OffHeapStoredObject.getSize(addr);
+        addr = OffHeapStoredObject.getNext(addr);
-        lw.info(msg + curSize);
+        logger.info(msg + curSize);
-        result += ObjectChunk.getSize(addr);
-        addr = ObjectChunk.getNext(addr);
+        result += OffHeapStoredObject.getSize(addr);
+        addr = OffHeapStoredObject.getNext(addr);

UPD40 UPD42 UPD42 UPD42 UPD66 UPD66 UPD66 UPD66 UPD43 UPD42 UPD66 UPD66 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42