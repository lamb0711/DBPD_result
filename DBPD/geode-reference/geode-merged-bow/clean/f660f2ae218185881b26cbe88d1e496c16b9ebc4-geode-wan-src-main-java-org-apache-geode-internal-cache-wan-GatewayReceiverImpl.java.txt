GEODE-5591: fixed 2 issues: (#2425)

1) handle IO exception
            2) try with a random port, then retry with next port
-import java.net.BindException;
-import java.net.SocketException;
+  private boolean tryToStart(int port) {
+    if (!AvailablePort.isPortAvailable(port, AvailablePort.SOCKET,
+        AvailablePort.getAddress(AvailablePort.SOCKET))) {
+      return false;
+    }
+
+    receiver.setPort(port);
+    receiver.setSocketBufferSize(socketBufferSize);
+    receiver.setMaximumTimeBetweenPings(timeBetPings);
+    if (hostnameForSenders != null && !hostnameForSenders.isEmpty()) {
+      receiver.setHostnameForClients(hostnameForSenders);
+    }
+    receiver.setBindAddress(bindAdd);
+    receiver.setGroups(new String[] {GatewayReceiver.RECEIVER_GROUP});
+    ((CacheServerImpl) receiver).setGatewayTransportFilter(this.filters);
+    try {
+      receiver.start();
+      this.port = port;
+      return true;
+    } catch (IOException e) {
+      logger.info(LocalizedStrings.SocketCreator_FAILED_TO_CREATE_SERVER_SOCKET_ON_0_1
+          .toLocalizedString(new Object[] {bindAdd, port}));
+      return false;
+    }
+  }
+
-    boolean started = false;
-    this.port = getPortToStart();
-    while (!started && this.port != -1) {
-      receiver.setPort(this.port);
-      receiver.setSocketBufferSize(socketBufferSize);
-      receiver.setMaximumTimeBetweenPings(timeBetPings);
-      if (hostnameForSenders != null && !hostnameForSenders.isEmpty()) {
-        receiver.setHostnameForClients(hostnameForSenders);
-      }
-      receiver.setBindAddress(bindAdd);
-      receiver.setGroups(new String[] {GatewayReceiver.RECEIVER_GROUP});
-      ((CacheServerImpl) receiver).setGatewayTransportFilter(this.filters);
-      try {
-        receiver.start();
-        started = true;
-      } catch (BindException be) {
-        if (be.getCause() != null
-            && be.getCause().getMessage().contains("assign requested address")) {
-          throw new GatewayReceiverException(
-              LocalizedStrings.SocketCreator_FAILED_TO_CREATE_SERVER_SOCKET_ON_0_1
-                  .toLocalizedString(new Object[] {bindAdd, this.port}));
-        }
-        // ignore as this port might have been used by other threads.
-        logger.warn(LocalizedMessage.create(LocalizedStrings.GatewayReceiver_Address_Already_In_Use,
-            this.port));
-        this.port = getPortToStart();
-      } catch (SocketException se) {
-        if (se.getMessage().contains("Address already in use")) {
-          logger.warn(LocalizedMessage
-              .create(LocalizedStrings.GatewayReceiver_Address_Already_In_Use, this.port));
-          this.port = getPortToStart();
-        } else {
-          throw se;
-        }
+    int loopStartPort = getPortToStart();
+    int port = loopStartPort;
+    while (!tryToStart(port)) {
+      // get next port to try
+      if (port == endPort && startPort != endPort) {
+        port = startPort;
+      } else {
+        port++;
+      if (port == loopStartPort || port > endPort) {
+        throw new GatewayReceiverException("No available free port found in the given range (" +
+            this.startPort + "-" + this.endPort + ")");
+      }
+    }
-    }
-    if (!started) {
-      throw new IllegalStateException("No available free port found in the given range.");
-    }
-

INS31 UPD83 UPD39 UPD42 INS44 MOV8 INS83 INS39 INS42 MOV43 INS8 INS39 INS42 INS25 MOV21 INS54 MOV25 MOV25 INS60 INS60 INS61 MOV21 MOV60 MOV21 INS38 INS8 INS8 MOV12 INS39 INS59 INS39 INS59 INS38 INS8 INS32 INS41 UPD42 UPD42 INS42 MOV21 MOV21 INS41 MOV8 INS42 MOV32 INS42 INS42 INS32 INS25 INS25 UPD42 MOV42 UPD42 MOV42 INS42 INS40 MOV32 INS9 INS9 UPD43 UPD42 INS21 INS41 INS42 INS42 INS27 INS8 INS8 INS27 INS8 UPD42 MOV42 UPD42 INS40 MOV22 INS42 UPD42 INS32 INS9 INS27 INS27 INS21 INS21 INS27 INS27 INS53 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS7 INS37 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 MOV43 INS27 INS45 INS22 INS45 INS22 INS45 INS42 INS52 INS42 INS52 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL42 DEL42 DEL40 DEL52 DEL42 DEL22 DEL32 DEL52 DEL42 DEL22 DEL32 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL14 DEL53 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL42 DEL40 DEL52 DEL42 DEL22 DEL32 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL53 DEL8 DEL25 DEL8 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL45 DEL32 DEL27 DEL25 DEL8 DEL12 DEL54 DEL39 DEL42 DEL9 DEL59 DEL60 DEL52 DEL42 DEL22 DEL42 DEL32 DEL7 DEL21 DEL42 DEL38 DEL34 DEL38 DEL27 DEL27 DEL61 DEL42 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8