GEODE-7475: Include remote stack trace in AsyncInvocation timeout (#4344)

* Add stack trace of remote thread as the cause of an AsyncInvocation TimeoutException
* Clean up AsyncInvocation and SerializableRunnable/SerializableCallable hierarchy of classes
* New tests for StackTrace, VM.dumpThreads, and AsyncInvocation asyncTimeoutHandler
* Deprecate and reorganize some additional dunit methods that are either not used or have a newer preferred alternative
* Trigger remote VM to dump all threads to stdout when an AsyncInvocation times out
+import static java.lang.Integer.toHexString;
+
- * <PRE>
+ * <pre>
- *   final Host host = Host.getHost(0);
- *   VM vm0 = host.getVM(0);
- *   VM vm1 = host.getVM(1);
- *   final String name = this.getUniqueName();
- *   final Object value = new Integer(42);
+ *   VM vm0 = VM.getVM(0);
+ *   VM vm1 = VM.getVM(1);
- *   vm0.invoke(new SerializableRunnable("Put value") {
+ *   String regionName = getUniqueName();
+ *   Object value = new Integer(42);
+ *
+ *   vm0.invoke("Put value", new SerializableRunnable() {
- *   vm1.invoke(new SerializableRunnable("Get value") {
+ *   vm1.invoke("Get value", new SerializableRunnable() {
- * </PRE>
+ * </pre>
-  private static final long serialVersionUID = 7584289978241650456L;
+  private static final String DEFAULT_NAME = "";
+  private static final long DEFAULT_ID = 0L;
-  private String name;
-  protected Object[] args;
+  private final String name;
+  private final long id;
-    this.name = null;
+    this(DEFAULT_NAME, DEFAULT_ID);
-   * <PRE>
+   * <pre>
-   * </PRE>
+   * </pre>
+   *
+   * @deprecated Please pass name as the first argument to {@link VM} invoke or asyncInvoke.
+  @Deprecated
+    this(name, DEFAULT_ID);
+  }
+
+  public SerializableRunnable(long id) {
+    this(DEFAULT_NAME, id);
+  }
+
+  private SerializableRunnable(String name, long id) {
+    this.id = id;
-  public SerializableRunnable(String name, Object[] args) {
-    this.name = name;
-    this.args = args;
-  }
-
-  public void setName(String newName) {
-    this.name = newName;
-  }
-
+  /**
+   * @deprecated Please pass name as the first argument to {@link VM} invoke or asyncInvoke.
+   */
+  @Deprecated
-    return this.name;
+    return name;
+  public long getId() {
+    return id;
+  }
+
+  @Override
-    if (this.name != null) {
-      return "\"" + this.name + "\"";
-
-    } else {
-      return super.toString();
-    }
+    return new StringBuilder()
+        .append(getClass().getSimpleName()).append("@").append(toHexString(hashCode()))
+        .append('(').append(id).append(", \"").append(name).append("\")")
+        .toString();
-

INS26 MOV31 INS40 INS23 INS31 INS83 INS83 INS83 MOV43 INS59 INS83 UPD83 INS83 INS39 INS78 UPD42 UPD83 INS29 INS78 INS83 INS39 INS42 INS8 INS78 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS42 INS45 UPD42 UPD34 UPD42 INS17 INS65 INS42 INS17 INS39 UPD42 INS17 INS39 INS42 INS65 INS42 INS41 INS42 INS41 INS42 INS42 UPD66 UPD66 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS66 INS65 INS66 INS42 INS42 INS32 INS42 UPD42 INS42 INS32 INS42 UPD42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS13 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS14 INS42 INS32 INS42 INS43 INS32 INS42 INS42 INS42 DEL66 DEL42 DEL43 DEL85 DEL5 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL39 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL33 DEL27 DEL45 DEL52 DEL42 DEL22 DEL45 DEL27 DEL41 DEL8 DEL42 DEL48 DEL41 DEL8 DEL25