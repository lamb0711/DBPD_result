Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Implementation of {@link StatAlertDefinition}, represents threshold as data
- * range
+ * Implementation of {@link StatAlertDefinition}, represents threshold as data range
-public final class GaugeThresholdDecoratorImpl extends BaseDecoratorImpl 
-  implements DataSerializableFixedID {
+public final class GaugeThresholdDecoratorImpl extends BaseDecoratorImpl
+    implements DataSerializableFixedID {
-  public GaugeThresholdDecoratorImpl() {
-  }
+  public GaugeThresholdDecoratorImpl() {}
-  public GaugeThresholdDecoratorImpl(StatAlertDefinition definition,
-      Number lowerLimit, Number upperLimit) {
+  public GaugeThresholdDecoratorImpl(StatAlertDefinition definition, Number lowerLimit,
+      Number upperLimit) {
-    buffer
-        .append("Threshold Limit: " + lowerLimit + " to " + upperLimit + "\n");
+    buffer.append("Threshold Limit: " + lowerLimit + " to " + upperLimit + "\n");
-        && (isGreaterThan(params[0], upperLimit) || isLessThan(params[0],
-            lowerLimit));
+        && (isGreaterThan(params[0], upperLimit) || isLessThan(params[0], lowerLimit));
-    return ID.equalsIgnoreCase(decoratorID) ? this : super
-        .getDecorator(decoratorID);
+    return ID.equalsIgnoreCase(decoratorID) ? this : super.getDecorator(decoratorID);
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-     return null;
+    return null;

UPD66 DEL66