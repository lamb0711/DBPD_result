GEODE-5256: Parameters Precedence in Start Server (#2013)

* GEODE-5256: Parameters Precedence in Start Server

Configuration options set as part of the `start server` command now
take precedence over those configured in the `cache.xml` file, the
`cluster-configuration-service` and defaults.

- Rebased against latest develop branch.
- Removed unused `throws` clauses from tests.
- Renamed `ServerLauncherIntegrationTest` to
  `ServerLauncherBuilderIntegrationTest`.
- Added tests for `ServerLauncher` and `CacheCreation`.
- Added acceptance tests for `gfsh start server` command.
- Fixed `ServerLauncher.parseArguments` method, it was wrongly calling
  `setMaxConnections` for other unrelated parameters (maxMessageCount,
  messageTimeToLive and sockerBufferSize).
- The `ServerLauncher` class now sets all the relevent startup
  parameters during initialization within the static `parameters` field
  on `CacheServerLauncher` class. The `CacheCreation` class, in turn,
  reconfigures the `Server` attributes using
  `CacheServerLauncher.parameters` before starting the `AcceptorImpl`.

* GEODE-5256: Changes requested by reviewers

- Rebased against latest develop branch.
- Replaced `Wait` references for `Awaitility` in related tests.
- Class `CacheServerLauncher.Parameters` is now a top level class.
- Added `@Deprecated` annotation and docs for `CacheServerLauncher`.
- `StartServerCommandAcceptanceTest` now uses `FileUtils` instead of
  manually opening and reading the log file.

-import org.apache.geode.internal.cache.CacheServerLauncher;
-    CacheServerLauncher.setDisableDefaultServer(this.disableDefaultServer);
-    if (builder.isServerBindAddressSetByUser() && this.serverBindAddress != null) {
-      CacheServerLauncher.setServerBindAddress(this.serverBindAddress.getHostAddress());
-    }
-    if (builder.isServerPortSetByUser() && this.serverPort != null) {
-      CacheServerLauncher.setServerPort(this.serverPort);
-    }
+
+    // GEODE-5256: set startup properties on CacheServerLauncher statics, used later to start the
+    // server through CacheCreation if a cache.xml or if the cluster-configuration-service is
+    // enabled.
+    Integer serverPort =
+        (builder.isServerPortSetByUser() && this.serverPort != null) ? this.serverPort : null;
+    String serverBindAddress =
+        (builder.isServerBindAddressSetByUser() && this.serverBindAddress != null)
+            ? this.serverBindAddress.getHostAddress() : null;
+
+    ServerLauncherParameters.INSTANCE
+        .withPort(serverPort)
+        .withMaxThreads(this.maxThreads)
+        .withBindAddress(serverBindAddress)
+        .withMaxConnections(this.maxConnections)
+        .withMaxMessageCount(this.maxMessageCount)
+        .withSocketBufferSize(this.socketBufferSize)
+        .withMessageTimeToLive(this.messageTimeToLive)
+        .withHostnameForClients(this.hostNameForClients)
+        .withDisableDefaultServer(this.disableDefaultServer);
-      CacheServerLauncher.setServerBindAddress(serverBindAddress);
-      CacheServerLauncher.setServerPort(serverPort);
-          setMaxConnections(Integer.parseInt(
+          setMaxMessageCount(Integer.parseInt(
-          setMaxConnections(Integer.parseInt(ObjectUtils
+          setMessageTimeToLive(Integer.parseInt(ObjectUtils
-          setMaxConnections(Integer.parseInt(ObjectUtils
+          setSocketBufferSize(Integer.parseInt(ObjectUtils

INS60 INS60 MOV21 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS16 INS42 INS42 INS16 INS32 INS42 MOV22 INS36 MOV22 INS33 INS36 MOV32 INS33 INS32 INS42 INS22 MOV27 MOV27 INS32 INS42 INS22 INS52 INS42 INS32 INS42 INS22 INS52 INS42 INS32 INS42 INS22 INS52 INS42 INS32 INS42 INS22 INS52 INS42 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS52 INS42 INS32 INS42 INS22 INS40 UPD42 MOV42 UPD42 MOV42 INS52 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21