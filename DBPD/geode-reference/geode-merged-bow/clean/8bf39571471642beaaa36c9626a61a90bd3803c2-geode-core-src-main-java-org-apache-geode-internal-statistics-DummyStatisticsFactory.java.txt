Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
+
-  
-  private final static StatisticsTypeFactoryImpl tf = (StatisticsTypeFactoryImpl) StatisticsTypeFactoryImpl.singleton();
+
+  private final static StatisticsTypeFactoryImpl tf =
+      (StatisticsTypeFactoryImpl) StatisticsTypeFactoryImpl.singleton();
-  public DummyStatisticsFactory() {
-  }
-  
+  public DummyStatisticsFactory() {}
+
+
+
-//  /** for internal use only. Its called by {@link LocalStatisticsImpl#close}. */
-//  public void destroyStatistics(Statistics stats) {
-//    if (statsList.remove(stats)) {
-//      statsListModCount++;
-//    }
-//  }
-//  
+  // /** for internal use only. Its called by {@link LocalStatisticsImpl#close}. */
+  // public void destroyStatistics(Statistics stats) {
+  // if (statsList.remove(stats)) {
+  // statsListModCount++;
+  // }
+  // }
+  //
+
+
+
+
+
-  public StatisticsType createType(String name, String description,
-                                   StatisticDescriptor[] stats) {
+  public StatisticsType createType(String name, String description, StatisticDescriptor[] stats) {
+
-  public StatisticsType[] createTypesFromXml(Reader reader)
-    throws IOException {
+
+  public StatisticsType[] createTypesFromXml(Reader reader) throws IOException {
-  public StatisticDescriptor createIntCounter(String name, String description,
-                                              String units) {
+  public StatisticDescriptor createIntCounter(String name, String description, String units) {
-  public StatisticDescriptor createLongCounter(String name, String description,
-                                               String units) {
+
+  public StatisticDescriptor createLongCounter(String name, String description, String units) {
-  public StatisticDescriptor createDoubleCounter(String name, String description,
-                                                 String units) {
+
+  public StatisticDescriptor createDoubleCounter(String name, String description, String units) {
-  public StatisticDescriptor createIntGauge(String name, String description,
-                                            String units) {
+
+  public StatisticDescriptor createIntGauge(String name, String description, String units) {
-  public StatisticDescriptor createLongGauge(String name, String description,
-                                             String units) {
+
+  public StatisticDescriptor createLongGauge(String name, String description, String units) {
-  public StatisticDescriptor createDoubleGauge(String name, String description,
-                                               String units) {
+
+  public StatisticDescriptor createDoubleGauge(String name, String description, String units) {
-  public StatisticDescriptor createIntCounter(String name, String description,
-                                              String units, boolean largerBetter) {
+
+  public StatisticDescriptor createIntCounter(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createLongCounter(String name, String description,
-                                               String units, boolean largerBetter) {
+
+  public StatisticDescriptor createLongCounter(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createDoubleCounter(String name, String description,
-                                                 String units, boolean largerBetter) {
+
+  public StatisticDescriptor createDoubleCounter(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createIntGauge(String name, String description,
-                                            String units, boolean largerBetter) {
+
+  public StatisticDescriptor createIntGauge(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createLongGauge(String name, String description,
-                                             String units, boolean largerBetter) {
+
+  public StatisticDescriptor createLongGauge(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createDoubleGauge(String name, String description,
-                                               String units, boolean largerBetter) {
+
+  public StatisticDescriptor createDoubleGauge(String name, String description, String units,
+      boolean largerBetter) {

