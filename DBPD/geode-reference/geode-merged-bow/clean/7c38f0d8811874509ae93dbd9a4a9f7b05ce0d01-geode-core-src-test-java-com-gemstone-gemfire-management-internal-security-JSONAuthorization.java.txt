GEODE-17: enhance the GeodeSecurityUtil and review changes

* allow operations that does not require any authorizations
* put/get, import/export and locate entry will check region access
* rename EnvronmentVariablesHandlerInterceptor
* rename ShiroUtil to GeodeSecurityUtil
* reformat code and review changes

-import com.gemstone.gemfire.cache.operations.OperationContext.OperationCode;
-import com.gemstone.gemfire.cache.operations.OperationContext.Resource;
+
-  static class Permission {
-
-    private final Resource resource;
-    private final OperationCode operationCode;
-
-    Permission(Resource resource, OperationCode operationCode) {
-      this.resource = resource;
-      this.operationCode = operationCode;
-    }
-
-    public Resource getResource() {
-      return resource;
-    }
-
-    public OperationCode getOperationCode() {
-      return operationCode;
-    }
-
-    @Override
-    public String toString() {
-      String result = resource.toString() + ":" + operationCode.toString();
-      return result;
-    }
-  }
-
-    List<Permission> permissions = new ArrayList<>();
+    List<OperationContext> permissions = new ArrayList<>();
-    List<String> regionNames = null; // when checking, if regionNames is null, that means all regions are allowed.
+      String regionNames = null;
+      if(obj.has("regions")) {
+        regionNames = obj.getString("regions");
+      }
-        Resource r = Resource.valueOf(parts[0]);
-        OperationCode op = parts.length > 1 ? OperationCode.valueOf(parts[1]) : OperationCode.READ;
-        role.permissions.add(new Permission(r, op));
-      }
-
-      if(obj.has("region")) {
-        if (role.regionNames == null) {
-          role.regionNames = new ArrayList<>();
+        if(regionNames!=null) {
+          role.permissions.add(new ResourceOperationContext(parts[0], parts[1], regionNames));
-        role.regionNames.add(obj.getString("region"));
-      }
-
-      if(obj.has("regions")) {
-        JSONArray regions = obj.getJSONArray("regions");
-        if (role.regionNames == null) {
-          role.regionNames = new ArrayList<>();
-        }
-        for (int j = 0; j < regions.length(); j++) {
-          role.regionNames.add(regions.getString(j));
-        }
+        else
+          role.permissions.add(new ResourceOperationContext(parts[0], parts[1], "*"));
-    LogService.getLogger().info("Checking for permission " + context.getResource() + ":" + context.getOperationCode());
-
-      for (Permission perm : role.permissions) {
-        if (context.getResource() == perm.getResource() && context.getOperationCode() == perm.getOperationCode()) {
-          LogService.getLogger().info("Found permission " + perm);
-
-          //no need to further check the rgionName
-          if(context.getRegionName()==null){
-            return true;
-          }
-
-          if(role.regionNames == null || role.regionNames.contains(context.getRegionName())){
-            // if regionName is null, i.e. all regions are allowed
-            return true;
-          }
+      for (OperationContext permitted : role.permissions) {
+        if (permitted.implies(context)) {
+          return true;
-    LogService.getLogger().info("Did not find code " + context);

UPD74 UPD43 MOV25 UPD42 INS60 MOV43 MOV59 MOV32 INS25 UPD43 UPD42 INS7 INS27 INS8 INS21 UPD42 INS32 MOV8 INS42 INS32 INS42 INS33 INS21 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD45 MOV45 INS32 INS40 UPD42 MOV42 INS14 UPD43 MOV2 MOV2 INS45 INS43 INS2 INS2 INS42 UPD42 UPD42 MOV42 INS42 INS34 INS42 INS34 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL41 DEL8 DEL31 DEL55 DEL42 DEL43 DEL42 DEL43 DEL74 DEL23 DEL42 DEL42 DEL45 DEL32 DEL40 DEL33 DEL27 DEL40 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL8 DEL25 DEL40 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL40 DEL34 DEL27 DEL42 DEL42 DEL32 DEL40 DEL16 DEL59 DEL60 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL40 DEL33 DEL27 DEL40 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL8 DEL25 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL40 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL27 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL32 DEL33 DEL27 DEL25 DEL40 DEL33 DEL27 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL9 DEL41 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21