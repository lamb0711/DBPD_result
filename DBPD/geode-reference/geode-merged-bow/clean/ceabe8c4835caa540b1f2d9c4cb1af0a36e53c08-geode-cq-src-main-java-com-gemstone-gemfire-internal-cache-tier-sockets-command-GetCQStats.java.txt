Merge branch 'feature/GEODE-1571' of ssh://github.com/jinmeiliao/incubator-geode into feature/GEODE-1571

+import java.io.IOException;
+
+import com.gemstone.gemfire.cache.query.internal.cq.CqService;
+import com.gemstone.gemfire.distributed.internal.DistributionStats;
-import com.gemstone.gemfire.internal.cache.tier.sockets.*;
-import com.gemstone.gemfire.cache.query.CqException;
-import com.gemstone.gemfire.distributed.internal.DistributionStats;
-import com.gemstone.gemfire.cache.query.internal.DefaultQueryService;
-import com.gemstone.gemfire.cache.query.internal.cq.CqService;
-
-import java.io.IOException;
+import com.gemstone.gemfire.internal.cache.tier.sockets.CacheServerStats;
+import com.gemstone.gemfire.internal.cache.tier.sockets.Message;
+import com.gemstone.gemfire.internal.cache.tier.sockets.ServerConnection;
+import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
-
-    else {
-      // Process the cq request
-      try {
-        // make sure the cqservice has been created
-        // since that is what registers the stats
-        CqService cqService = crHelper.getCache().getCqService();
-        cqService.start();
-      }
-      catch (Exception e) {
-        String err = "Exception while Getting the CQ Statistics. ";
-        sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, err, msg
-            .getTransactionId(), e, servConn);
-        return;
-      }
+
+    GeodeSecurityUtil.authorizeClusterRead();
+    // Process the cq request
+    try {
+      // make sure the cqservice has been created
+      // since that is what registers the stats
+      CqService cqService = crHelper.getCache().getCqService();
+      cqService.start();
+    }
+    catch (Exception e) {
+      String err = "Exception while Getting the CQ Statistics. ";
+      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, err, msg
+          .getTransactionId(), e, servConn);
+      return;

MOV26 MOV26 MOV26 INS26 UPD40 UPD40 UPD40 INS40 INS21 MOV54 INS32 INS42 INS42 DEL8