GEODE-6588: Cleanup generics and static analyzer warnings.

+
-  public ServerFunctionExecutor(Pool p, boolean allServers, String... groups) {
-    this.pool = (PoolImpl) p;
+  ServerFunctionExecutor(Pool pool, boolean allServers, String... groups) {
+    this.pool = (PoolImpl) pool;
-  public ServerFunctionExecutor(Pool p, boolean allServers, ProxyCache proxyCache,
-      String... groups) {
-    this.pool = (PoolImpl) p;
+  ServerFunctionExecutor(Pool pool, boolean allServers, ProxyCache proxyCache, String... groups) {
+    this.pool = (PoolImpl) pool;
-  public ServerFunctionExecutor(ServerFunctionExecutor sfe) {
+  private ServerFunctionExecutor(ServerFunctionExecutor sfe) {
-      this.pool = sfe.pool;
+      pool = sfe.pool;
-    this.allServers = sfe.allServers;
-    this.groups = sfe.groups;
+    allServers = sfe.allServers;
+    groups = sfe.groups;
-    this.rc = collector != null ? new SynchronizedResultCollector(collector) : collector;
+    rc = collector != null ? new SynchronizedResultCollector(collector) : null;
-    this.memberMappedArg = argument;
-    this.isMemberMappedArgument = true;
+    memberMappedArg = argument;
+    isMemberMappedArgument = true;
-        if (this.proxyCache.isClosed()) {
+        if (proxyCache.isClosed()) {
-        UserAttributes.userAttributes.set(this.proxyCache.getUserAttributes());
+        UserAttributes.userAttributes.set(proxyCache.getUserAttributes());
-      if (result) { // have Results
+      if (result) {
-        if (this.rc == null) { // Default Result Collector
+        if (rc == null) {
-        } else { // Custome Result COllector
-          return executeOnServer(functionId, this.rc, hasResult, isHA, optimizeForWrite);
+        } else {
+          return executeOnServer(functionId, rc, hasResult, isHA, optimizeForWrite);
-      } else { // No results
+      } else {
-        if (this.proxyCache.isClosed()) {
+        if (proxyCache.isClosed()) {
-        UserAttributes.userAttributes.set(this.proxyCache.getUserAttributes());
+        UserAttributes.userAttributes.set(proxyCache.getUserAttributes());
-      if (function.hasResult()) { // have Results
+      if (function.hasResult()) {
-        if (this.rc == null) { // Default Result Collector
+        if (rc == null) {
-        } else { // Custome Result COllector
-          return executeOnServer(function, this.rc, hasResult);
+        } else {
+          return executeOnServer(function, rc, hasResult);
-      } else { // No results
+      } else {
-      ExecuteFunctionOp.execute(this.pool, function, this, args, memberMappedArg, this.allServers,
-          hasResult, rc, this.isFnSerializationReqd, UserAttributes.userAttributes.get(), groups);
+      ExecuteFunctionOp.execute(pool, function, this, args, memberMappedArg, allServers,
+          hasResult, rc, isFnSerializationReqd, UserAttributes.userAttributes.get(), groups);
-      ExecuteFunctionOp.execute(this.pool, functionId, this, args, memberMappedArg, this.allServers,
-          hasResult, rc, this.isFnSerializationReqd, isHA, optimizeForWrite,
+      ExecuteFunctionOp.execute(pool, functionId, this, args, memberMappedArg, allServers,
+          hasResult, rc, isFnSerializationReqd, isHA, optimizeForWrite,
-      ExecuteFunctionNoAckOp.execute(this.pool, function, args, memberMappedArg, this.allServers,
-          hasResult, this.isFnSerializationReqd, groups);
+      ExecuteFunctionNoAckOp.execute(pool, function, args, memberMappedArg, allServers,
+          hasResult, isFnSerializationReqd, groups);
-      ExecuteFunctionNoAckOp.execute(this.pool, functionId, args, memberMappedArg, this.allServers,
-          hasResult, this.isFnSerializationReqd, isHA, optimizeForWrite, groups);
+      ExecuteFunctionNoAckOp.execute(pool, functionId, args, memberMappedArg, allServers,
+          hasResult, isFnSerializationReqd, isHA, optimizeForWrite, groups);
-    return this.pool;
+    return pool;
-    this.isFnSerializationReqd = false;
+    isFnSerializationReqd = false;
-        // GEODE-5618: Set authentication properties before executing the internal function.
+        // Set authentication properties before executing the internal function.
-            if (this.proxyCache.isClosed()) {
+            if (proxyCache.isClosed()) {
-            UserAttributes.userAttributes.set(this.proxyCache.getUserAttributes());
+            UserAttributes.userAttributes.set(proxyCache.getUserAttributes());
-          Object obj = GetFunctionAttributeOp.execute(this.pool, functionName);
+          Object obj = GetFunctionAttributeOp.execute(pool, functionName);

UPD83 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22