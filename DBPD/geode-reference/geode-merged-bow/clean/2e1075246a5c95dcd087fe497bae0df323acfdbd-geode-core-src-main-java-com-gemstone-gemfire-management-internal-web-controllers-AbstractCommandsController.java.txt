Merge branch 'release/1.0.0-incubating.M3'

+import java.util.concurrent.Callable;
+import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
+import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
+import com.gemstone.gemfire.management.ManagementService;
+import com.gemstone.gemfire.management.internal.SystemManagementService;
-import com.gemstone.gemfire.management.internal.web.controllers.support.EnvironmentVariablesHandlerInterceptor;
-import com.gemstone.gemfire.management.internal.web.controllers.support.MemberMXBeanAdapter;
+import com.gemstone.gemfire.management.internal.web.controllers.support.LoginHandlerInterceptor;
+import com.gemstone.gemfire.security.NotAuthorizedException;
+import org.springframework.web.bind.annotation.ResponseStatus;
-import org.springframework.web.util.UriComponentsBuilder;
- * @since 8.0
+ * @since GemFire 8.0
+
+
+  private Class accessControlKlass;
+
+
+  // Convert a predefined exception to an HTTP Status code
+  @ResponseStatus(value=HttpStatus.UNAUTHORIZED, reason="Not authenticated")  // 401
+  @ExceptionHandler(com.gemstone.gemfire.security.AuthenticationFailedException.class)
+  public void authenticate() {
+
+  }
+
+  // Convert a predefined exception to an HTTP Status code
+  @ResponseStatus(value=HttpStatus.FORBIDDEN, reason="Access Denied")  // 403
+  @ExceptionHandler(java.lang.SecurityException.class)
+  public void authorize() {
+
+  }
+
+
-   * @see #createMemberMXBeanForManagerUsingAdapter(javax.management.MBeanServer, javax.management.ObjectName)
-      final MBeanServer platformMBeanServer = getMBeanServer();
+      SystemManagementService service = (SystemManagementService) ManagementService
+          .getExistingManagementService(GemFireCacheImpl.getInstance());
+      MBeanServer mbs = getMBeanServer();
-      final DistributedSystemMXBean distributedSystemMXBean = JMX.newMXBeanProxy(platformMBeanServer,
+      final DistributedSystemMXBean distributedSystemMXBean = JMX.newMXBeanProxy(mbs,
-      //managingMemberMXBeanProxy = createMemberMXBeanForManagerUsingAdapter(platformMBeanServer,
-      //  distributedSystemMXBean.getMemberObjectName());
-
-      managingMemberMXBeanProxy = createMemberMXBeanForManagerUsingProxy(platformMBeanServer,
+      managingMemberMXBeanProxy = createMemberMXBeanForManagerUsingProxy(mbs,
-  /**
-   * Creates an Adapter using the Platform MBeanServer and ObjectName to invoke operations on the GemFire Manager's
-   * MemberMXBean.
-   * 
-   * @param server a reference to this JVM's Platform MBeanServer.
-   * @param managingMemberObjectName the ObjectName of the GemFire Manager's MemberMXBean registered in
-   * the Platform MBeanServer.
-   * @return an Adapter for invoking operations on the GemFire Manager's MemberMXBean.
-   * @see com.gemstone.gemfire.management.internal.web.controllers.AbstractCommandsController.MemberMXBeanProxy
-   * @see #createMemberMXBeanForManagerUsingProxy(javax.management.MBeanServer, javax.management.ObjectName)
-   */
-  private MemberMXBean createMemberMXBeanForManagerUsingAdapter(final MBeanServer server, final ObjectName managingMemberObjectName) {
-    return new MemberMXBeanProxy(server, managingMemberObjectName);
+  protected synchronized ObjectName getMemberObjectName() {
+    final MBeanServer platformMBeanServer = getMBeanServer();
+
+    final DistributedSystemMXBean distributedSystemMXBean = JMX.newMXBeanProxy(platformMBeanServer,
+        MBeanJMXAdapter.getDistributedSystemName(), DistributedSystemMXBean.class);
+
+    return distributedSystemMXBean.getMemberObjectName();
-   * @see #createMemberMXBeanForManagerUsingAdapter(javax.management.MBeanServer, javax.management.ObjectName)
-   * @see com.gemstone.gemfire.management.internal.web.controllers.support.EnvironmentVariablesHandlerInterceptor#getEnvironment()
+   * @see LoginHandlerInterceptor#getEnvironment()
-    environment.putAll(EnvironmentVariablesHandlerInterceptor.getEnvironment());
+    environment.putAll(LoginHandlerInterceptor.getEnvironment());
-   * 
+   *
-   * @see com.gemstone.gemfire.management.internal.web.controllers.support.EnvironmentVariablesHandlerInterceptor#getEnvironment()
+   * @see LoginHandlerInterceptor#getEnvironment()
+  protected Callable<ResponseEntity<String>> getProcessCommandCallable(final String command){
+    return getProcessCommandCallable(command, getEnvironment(), null);
+  }
+
+  protected Callable<ResponseEntity<String>> getProcessCommandCallable(final String command, final Map<String, String> environment, final byte[][] fileData){
+    Callable callable = new Callable<ResponseEntity<String>>() {
+      @Override
+      public ResponseEntity<String> call() throws Exception {
+        String result = null;
+        try {
+          result = processCommand(command, environment, fileData);
+        }
+        catch(NotAuthorizedException ex){
+          return new ResponseEntity<String>(ex.getMessage(), HttpStatus.FORBIDDEN);
+        }
+        catch(Exception ex){
+          return new ResponseEntity<String>(ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
+        }
+        return new ResponseEntity<String>(result, HttpStatus.OK);
+      }
+    };
+    return GeodeSecurityUtil.associateWith(callable);
+  }
+
+
-   * @see com.gemstone.gemfire.management.internal.web.controllers.support.EnvironmentVariablesHandlerInterceptor#getEnvironment()
+   * @see LoginHandlerInterceptor#getEnvironment()
-   * @see com.gemstone.gemfire.management.internal.web.controllers.support.EnvironmentVariablesHandlerInterceptor#getEnvironment()
+   * @see LoginHandlerInterceptor#getEnvironment()
-    logger.info(LogMarker.CONFIG, "Processing Command ({}) with Environment ({}) having File Data ({})...",
-        command, environment, (fileData != null));
-    
+    logger.info(LogMarker.CONFIG, "Processing Command ({}) with Environment ({}) having File Data ({})...", command,
+      environment, (fileData != null));
-  /**
-   * The MemberMXBeanProxy class is a proxy for the MemberMXBean interface transforming an operation on the member
-   * MBean into a invocation on the MBeanServer, invoke method.
-   * 
-   * @see com.gemstone.gemfire.management.internal.web.controllers.support.MemberMXBeanAdapter
-   */
-  private static class MemberMXBeanProxy extends MemberMXBeanAdapter {
-
-    private final MBeanServer server;
-
-    private final ObjectName objectName;
-
-    public MemberMXBeanProxy(final MBeanServer server, final ObjectName objectName) {
-      assertNotNull(server, "The connection or reference to the Platform MBeanServer cannot be null!");
-      assertNotNull(objectName, "The JMX ObjectName for the GemFire Manager MemberMXBean cannot be null!");
-      this.server = server;
-      this.objectName = objectName;
-    }
-
-    protected MBeanServer getMBeanServer() {
-      return server;
-    }
-
-    protected ObjectName getObjectName() {
-      return objectName;
-    }
-
-    @Override
-    public String processCommand(final String commandString, final Map<String, String> env) {
-      try {
-        return String.valueOf(getMBeanServer().invoke(getObjectName(), "processCommand",
-          new Object[] { commandString, env }, new String[] { String.class.getName(), Map.class.getName() }));
-      }
-      catch (Exception e) {
-        throw new RuntimeException(String.format(
-          "An error occurred while executing processCommand with command String (%1$s) on the MemberMXBean (%2$s) of the GemFire Manager using environment (%3$s)!",
-            commandString, getObjectName(), env), e);
-      }
-    }
+  @ExceptionHandler(NotAuthorizedException.class)
+  public ResponseEntity<String> handleAppException(NotAuthorizedException ex) {
+    return new ResponseEntity<String>(ex.getMessage(), HttpStatus.FORBIDDEN);

MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 UPD40 INS40 UPD40 INS23 INS31 INS31 INS31 MOV31 INS31 INS31 INS83 INS43 INS59 INS77 INS79 INS83 INS39 INS42 INS8 INS77 INS79 INS83 INS39 INS42 INS8 INS83 INS83 MOV43 INS42 MOV8 UPD83 INS74 INS42 MOV83 INS74 UPD42 MOV42 MOV44 MOV44 INS44 INS8 INS79 INS83 INS74 INS42 INS44 INS8 UPD66 UPD42 MOV42 INS42 INS42 INS80 INS80 INS42 INS57 INS42 INS80 INS80 INS42 INS57 INS41 INS43 INS74 UPD43 UPD42 INS41 INS43 INS74 INS43 UPD42 UPD42 INS83 INS5 INS42 INS60 INS41 INS42 INS57 INS43 MOV43 INS43 INS42 INS41 INS42 INS40 INS42 INS45 INS43 INS42 INS40 INS42 INS45 INS43 INS8 INS32 INS42 INS43 INS43 UPD42 INS32 UPD42 MOV42 INS43 INS43 INS42 INS39 INS85 INS85 INS43 INS59 INS32 INS43 INS42 INS42 INS14 INS40 INS40 INS60 INS60 INS60 MOV21 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS33 INS42 UPD42 MOV42 INS42 INS42 INS14 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS74 INS32 INS40 INS43 INS59 MOV43 INS59 INS83 INS43 INS59 UPD42 UPD42 MOV42 INS74 INS1 INS43 MOV43 UPD42 MOV42 INS42 INS42 INS42 INS11 INS42 INS42 MOV32 INS42 INS42 INS32 INS43 INS74 INS31 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS57 UPD42 INS42 INS43 INS43 MOV78 INS83 INS74 INS42 INS43 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS43 INS43 INS42 INS60 INS54 INS41 INS42 INS42 INS42 INS42 INS42 MOV43 INS59 INS8 INS12 INS12 INS14 INS42 INS33 INS21 INS44 INS8 MOV44 INS8 INS74 INS42 INS40 INS7 INS43 INS42 INS41 UPD42 INS41 INS43 MOV43 INS42 INS32 INS42 INS14 INS14 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS74 INS32 INS40 INS74 INS32 INS40 INS43 INS43 INS42 UPD42 MOV42 INS43 INS43 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 DEL42 DEL40 DEL43 DEL69 DEL40 DEL43 DEL69 DEL68 DEL65 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL40 DEL65 DEL42 DEL40 DEL43 DEL69 DEL40 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL14 DEL41 DEL8 DEL31 DEL42 DEL40 DEL43 DEL69 DEL40 DEL43 DEL69 DEL68 DEL65 DEL40 DEL40 DEL42 DEL83 DEL43 DEL42 DEL44 DEL45 DEL32 DEL21 DEL42 DEL45 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL40 DEL40 DEL66 DEL66 DEL65 DEL40 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL59 DEL23 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL42 DEL42 DEL32 DEL45 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL85 DEL5 DEL57 DEL32 DEL43 DEL57 DEL32 DEL4 DEL3 DEL32 DEL32 DEL41 DEL8 DEL43 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL55