GEODE-7568: Pass persistence service to config mgr constructors (#4462)

* GEODE-7568: Pass persistence service to config mgr constructors

Pass the persistence service to each manager on construction, rather
than passing it to each method.

Co-authored-by: Dale Emery <demery@pivotal.io>

* Remove spurious commented code

-import org.apache.geode.distributed.internal.InternalConfigurationPersistenceService;
+import org.apache.geode.distributed.ConfigurationPersistenceService;
+  private final ConfigurationPersistenceService persistenceService;
+
+  CacheConfigurationManager(ConfigurationPersistenceService persistenceService) {
+    this.persistenceService = persistenceService;
+  }
-  public void checkCompatibility(T incoming, String group, T existing) {};
+  public void checkCompatibility(T incoming, String group, T existing) {}
-  public final boolean add(InternalConfigurationPersistenceService service, T config,
-      String groupName) {
-    return updateCacheConfig(service, config, groupName, this::add);
+  @Override
+  public final boolean add(T config, String groupName) {
+    return updateCacheConfig(config, groupName, this::add);
-  public final boolean delete(InternalConfigurationPersistenceService service, T config,
-      String groupName) {
-    return updateCacheConfig(service, config, groupName, this::delete);
+  @Override
+  public final boolean delete(T config, String groupName) {
+    return updateCacheConfig(config, groupName, this::delete);
-  public final boolean update(InternalConfigurationPersistenceService service, T config,
-      String groupName) {
-    return updateCacheConfig(service, config, groupName, this::update);
+  @Override
+  public final boolean update(T config, String groupName) {
+    return updateCacheConfig(config, groupName, this::update);
-  public final List<T> list(InternalConfigurationPersistenceService service, T filterConfig,
-      String groupName) {
+  @Override
+  public final List<T> list(T filterConfig, String groupName) {
-        service.getCacheConfig(
+        persistenceService.getCacheConfig(
-  boolean updateCacheConfig(InternalConfigurationPersistenceService service, T config,
-      String groupName, BiConsumer<T, CacheConfig> consumer) {
+  boolean updateCacheConfig(T config, String groupName, BiConsumer<T, CacheConfig> updater) {
-    service.updateCacheConfig(groupName, cacheConfigForGroup -> {
+    persistenceService.updateCacheConfig(groupName, cacheConfigForGroup -> {
-        consumer.accept(config, cacheConfigForGroup);
+        updater.accept(config, cacheConfigForGroup);

UPD40 INS23 INS31 INS83 INS83 INS43 INS59 INS42 INS44 INS8 INS78 INS78 INS78 INS78 INS42 INS42 INS43 INS42 INS21 INS42 INS42 INS42 INS42 UPD42 INS42 INS7 INS22 INS42 UPD42 INS52 INS42 UPD42 UPD42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44