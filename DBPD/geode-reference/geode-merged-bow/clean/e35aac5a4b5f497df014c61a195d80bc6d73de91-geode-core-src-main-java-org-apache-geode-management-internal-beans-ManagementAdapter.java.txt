Merge branch 'release/1.5.0'

-import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.distributed.internal.ClusterDistributionManager;
-    DistributedSystemBridge dsBridge = new DistributedSystemBridge(service);
+    DistributedSystemBridge dsBridge = new DistributedSystemBridge(service, internalCache);
+   * Handles Gateway receiver destroy
+   *
+   * @param recv specific gateway receiver
+   * @throws ManagementException
+   */
+  public void handleGatewayReceiverDestroy(GatewayReceiver recv) throws ManagementException {
+    if (!isServiceInitialised("handleGatewayReceiverDestroy")) {
+      return;
+    }
+
+    GatewayReceiverMBean mbean = (GatewayReceiverMBean) service.getLocalGatewayReceiverMXBean();
+    GatewayReceiverMBeanBridge bridge = mbean.getBridge();
+
+    bridge.destroyServer();
+    ObjectName objectName = (MBeanJMXAdapter
+        .getGatewayReceiverMBeanName(internalCache.getDistributedSystem().getDistributedMember()));
+
+    service.unregisterMBean(objectName);
+    Notification notification = new Notification(JMXNotificationType.GATEWAY_RECEIVER_DESTROYED,
+        memberSource, SequenceNumber.next(), System.currentTimeMillis(),
+        ManagementConstants.GATEWAY_RECEIVER_DESTROYED_PREFIX);
+    memberLevelNotifEmitter.sendNotification(notification);
+  }
+
+  /**
+  public void handleGatewaySenderRemoved(GatewaySender sender) throws ManagementException {
+    if (!isServiceInitialised("handleGatewaySenderRemoved")) {
+      return;
+    }
+    if ((sender.getRemoteDSId() < 0)) {
+      return;
+    }
+
+    GatewaySenderMBean bean =
+        (GatewaySenderMBean) service.getLocalGatewaySenderMXBean(sender.getId());
+    bean.stopMonitor();
+
+    ObjectName gatewaySenderName = MBeanJMXAdapter.getGatewaySenderMBeanName(
+        internalCache.getDistributedSystem().getDistributedMember(), sender.getId());
+    service.unregisterMBean(gatewaySenderName);
+
+    Notification notification = new Notification(JMXNotificationType.GATEWAY_SENDER_REMOVED,
+        memberSource, SequenceNumber.next(), System.currentTimeMillis(),
+        ManagementConstants.GATEWAY_SENDER_REMOVED_PREFIX + sender.getId());
+    memberLevelNotifEmitter.sendNotification(notification);
+  }
+
-    if (member.getVmKind() == DistributionManager.LOCATOR_DM_TYPE) {
+    if (member.getVmKind() == ClusterDistributionManager.LOCATOR_DM_TYPE) {

UPD40 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS42 INS25 INS60 INS60 INS21 INS60 INS21 INS60 INS21 INS43 INS42 INS42 INS25 INS25 INS60 INS21 INS60 INS21 INS60 INS21 INS66 INS42 INS66 INS42 INS42 INS38 INS8 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS42 INS38 INS8 INS36 INS8 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS32 INS41 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS36 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS41 INS27 INS41 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 UPD40 INS42 INS42 INS45 INS43 INS32 INS42 INS42 INS32 INS43 INS40 INS42 INS32 INS32 INS40 INS42 INS45 INS32 INS34 INS43 INS32 INS42 INS42 INS32 INS32 INS43 INS40 INS42 INS32 INS32 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42