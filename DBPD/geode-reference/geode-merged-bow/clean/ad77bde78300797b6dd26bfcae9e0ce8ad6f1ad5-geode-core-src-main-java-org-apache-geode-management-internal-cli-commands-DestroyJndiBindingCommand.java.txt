GEODE-4384/3875: refactor create/destroy jndi binding commands to use CacheConfig objects (#1627)

* GEODE-3875:  refactor create jndi binding
* GEODE-4384: refactor destroy jndi binding

* refactored xml manipulation using jaxb
* Eliminate the need for RegionElement

-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-import org.w3c.dom.NodeList;
+import org.apache.geode.internal.cache.configuration.JndiBindingsType;
-import org.apache.geode.management.internal.configuration.domain.Configuration;
-import org.apache.geode.management.internal.configuration.utils.XmlUtils;
-      Element existingBinding =
-          service.getXmlElement("cluster", "jndi-binding", "jndi-name", jndiName);
-      if (existingBinding == null) {
-        throw new EntityNotFoundException(
-            CliStrings.format("Jndi binding with jndi-name \"{0}\" does not exist.", jndiName),
-            ifExists);
-      }
-      removeJndiBindingFromXml(jndiName);
+      service.updateCacheConfig("cluster", cc -> {
+        List<JndiBindingsType.JndiBinding> bindings = cc.getJndiBindings();
+        JndiBindingsType.JndiBinding binding = service.findElement(bindings, jndiName);
+        if (binding == null) {
+          throw new EntityNotFoundException(
+              CliStrings.format("Jndi binding with jndi-name \"{0}\" does not exist.", jndiName),
+              ifExists);
+        }
+        bindings.remove(binding);
+        return cc;
+      });
-
-  void removeJndiBindingFromXml(String jndiName)
-      throws TransformerException, IOException, SAXException, ParserConfigurationException {
-    // cluster group config should always be present
-    Configuration config = getSharedConfiguration().getConfiguration("cluster");
-
-    Document document = XmlUtils.createDocumentFromXml(config.getCacheXmlContent());
-    NodeList jndiBindings = document.getElementsByTagName("jndi-binding");
-
-    boolean updatedXml = false;
-    if (jndiBindings != null && jndiBindings.getLength() > 0) {
-      for (int i = 0; i < jndiBindings.getLength(); i++) {
-        Element eachBinding = (Element) jndiBindings.item(i);
-        if (eachBinding.getAttribute("jndi-name").equals(jndiName)) {
-          eachBinding.getParentNode().removeChild(eachBinding);
-          updatedXml = true;
-        }
-      }
-    }
-
-    if (updatedXml) {
-      String newXml = XmlUtils.prettyXml(document.getFirstChild());
-      config.setCacheXmlContent(newXml);
-
-      getSharedConfiguration().getConfigurationRegion().put("cluster", config);
-    }
-  }

MOV26 UPD40 INS8 INS21 MOV21 INS32 INS42 INS42 INS45 INS86 INS59 INS8 INS42 INS60 INS60 MOV25 MOV21 INS41 INS74 INS59 INS43 MOV59 INS42 INS43 INS43 INS42 INS32 INS40 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 MOV42 INS40 INS42 INS42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL45 DEL45 DEL45 DEL43 DEL60 DEL8 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31