Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import com.gemstone.gemfire.internal.cache.DistributedPutAllOperation.PutAllEntryData;
+  public void setRemoveAllEntryData(RemoveAllEntryData[] removeAllEntryData) {
+    for (int i = 0; i < removeAllEntryData.length; i++) {
+      removeAllData[i] = removeAllEntryData[i];
+    }
+    this.removeAllDataSize = removeAllEntryData.length;
+  }
+  
+  /**
+   * Add an entry that this removeAll operation should distribute.
+   */
+  public void addEntry(RemoveAllEntryData removeAllEntry)
+  {
+    this.removeAllData[this.removeAllDataSize] = removeAllEntry;
+    this.removeAllDataSize += 1;
+  }
+  
+  public void freeOffHeapResources() {
+    // I do not use eventIterator here because it forces the lazy creation of EntryEventImpl by calling getEventForPosition.
+    for (int i=0; i < this.removeAllDataSize; i++) {
+      RemoveAllEntryData entry = this.removeAllData[i];
+      if (entry != null && entry.event != null) {
+        entry.event.release();
+      }
+    }
+  }
+
-    EntryEventImpl ev = new EntryEventImpl(
+    EntryEventImpl ev = EntryEventImpl.create(
+    boolean returnedEv = false;
+    try {
+    returnedEv = true;
+    } finally {
+      if (!returnedEv) {
+        ev.release();
+      }
+    }
+        prMsg.setTransactionDistributed(event.getRegion().getCache().getTxManager().isDistributed());
-      EntryEventImpl event = new EntryEventImpl(
+      EntryEventImpl event = EntryEventImpl.create(
+        ev.release();
-      EntryEventImpl ev = new EntryEventImpl(rgn, entry.getOp(),
+      EntryEventImpl ev = EntryEventImpl.create(rgn, entry.getOp(),
+      boolean returnedEv = false;
+      try {
+      returnedEv = true;
+      } finally {
+        if (!returnedEv) {
+          ev.release();
+        }
+      }

INS26 INS40 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS5 INS42 INS24 INS21 INS65 INS43 INS42 INS21 INS21 INS24 INS60 INS54 INS43 INS85 INS58 INS27 INS37 INS8 INS7 INS66 INS42 INS7 INS7 INS58 INS27 INS37 INS8 MOV43 INS39 INS59 INS8 INS8 INS60 INS54 INS42 INS39 INS59 INS42 INS40 INS42 INS21 INS22 INS40 INS2 INS42 INS22 INS34 INS39 INS59 INS42 INS22 INS42 INS60 INS25 INS32 INS42 INS9 MOV21 MOV25 MOV21 INS21 MOV21 MOV60 MOV25 MOV21 MOV25 MOV21 MOV21 MOV41 INS25 MOV43 INS59 MOV43 INS59 INS39 INS59 INS8 INS8 INS42 INS34 INS7 INS52 INS42 INS22 INS22 INS52 INS42 INS42 INS34 INS52 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 MOV32 MOV32 INS33 MOV32 INS9 MOV32 MOV32 MOV32 INS7 INS38 INS8 INS42 INS32 INS21 INS42 INS32 INS42 INS9 MOV25 MOV21 MOV21 MOV25 MOV21 INS21 MOV41 INS25 INS2 INS2 INS52 INS42 INS52 INS42 INS42 INS42 INS2 INS27 INS27 INS21 INS42 INS9 INS42 INS21 INS21 INS42 INS42 INS42 INS40 INS33 INS33 MOV22 INS9 MOV32 INS32 INS42 INS42 INS42 MOV32 INS42 INS33 INS42 INS42 INS42 MOV38 INS42 INS7 INS38 INS8 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS33 INS40 INS33 INS32 INS32 INS32 INS42 INS42 INS42 INS9 INS42 INS21 INS52 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL33 DEL9 DEL14 DEL42 DEL43 DEL42 DEL42 DEL40 DEL33 DEL33 DEL9 DEL14 DEL59 DEL42 DEL43 DEL42 DEL42 DEL42 DEL33 DEL42 DEL42 DEL42 DEL42 DEL14 DEL59