GEODE-7076: remove "group" for pdx configuration (#4035)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>

* moved RestfulEndpoint up to AbstractConfiguration
* moved CorrespondsWith to AbstractConfiguration
-import java.io.Serializable;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonProperty;
+import org.apache.commons.lang3.StringUtils;
+import org.apache.geode.management.api.ClusterManagementService;
+import org.apache.geode.management.runtime.RuntimeInfo;
+/**
+ * This class represents either a configuration or a filter.
+ * <p>
+ * As a configuration of a managed entity it can be used to
+ * either {@linkplain ClusterManagementService#create(AbstractConfiguration) create},
+ * {@linkplain ClusterManagementService#update(AbstractConfiguration) update},
+ * or {@linkplain ClusterManagementService#delete(AbstractConfiguration) delete} it,
+ * or to describe it in the result of
+ * {@linkplain ClusterManagementService#list(AbstractConfiguration) list}
+ * or {@linkplain ClusterManagementService#get(AbstractConfiguration) get}.
+ * <p>
+ * As a filter as input to {@linkplain ClusterManagementService#list(AbstractConfiguration) list}
+ * or {@linkplain ClusterManagementService#get(AbstractConfiguration) get}
+ * it can be used to specify what entities to return.
+ *
+ * @param <R> the RuntimeInfo that corresponds to this configuration. Each non-abstract subclass
+ *        needs to supply this when it extends this class.
+ */
-public abstract class AbstractConfiguration
-    implements Identifiable<String>, Serializable, JsonSerializable {
+public abstract class AbstractConfiguration<R extends RuntimeInfo>
+    implements Identifiable<String>, JsonSerializable {
+
-  private String group;
-
+  @JsonIgnore
-    return group;
+    return null;
-  public void setGroup(String group) {
-    this.group = group;
+  /**
+   * Returns the portion of the URI that uniquely, in the scope of {@link #getEndpoint()},
+   * identifies this instance.
+   * Some implementations of this class require that some other attribute be set
+   * (for example {@link Region#setName(String)}) before this method will return
+   * a non-null value. Refer to the javadocs on subclasses for details.
+   */
+  @Override
+  public abstract String getId();
+
+  public static final String URI_CONTEXT = "/management";
+  public static final String URI_VERSION = "/experimental";
+
+  /**
+   * Returns the portion of the URI, after {@link #URI_VERSION}, that specifies the type of this
+   * instance.
+   * It is possible that more than once instance of this type can exist.
+   *
+   * @return the portion of the URI that identifies the type of this instance
+   */
+  @JsonIgnore
+  public abstract String getEndpoint();
+
+  /**
+   * Returns the portion of the URI, after {@link #URI_VERSION}, that specifies the type and id of
+   * this instance.
+   * This result will uniquely identify a single instance.
+   * If the id is null, then null is returned.
+   *
+   * <p>
+   * Note that the result does not include the prefix: <code>http://hostname:port</code>
+   * it should return the URI part after /experimental
+   *
+   * @return {@link #getEndpoint()} + "/" + {@link #getId()}
+   */
+  @JsonIgnore
+  public String getIdentityEndPoint() {
+    String id = getId();
+    if (StringUtils.isBlank(id))
+      return null;
+    else {
+      String endpoint = getEndpoint();
+      if (StringUtils.isBlank(endpoint))
+        return null;
+      else
+        return getEndpoint() + "/" + getId();
+    }
+
+  /**
+   * Returns the full URI path that uniquely identifies this instance.
+   * If the id is null, then null is returned.
+   *
+   * <p>
+   * Note that the result does not include the prefix: <code>http://hostname:port</code>
+   *
+   * @return {@link #URI_CONTEXT} + {@link #URI_VERSION} + {@link #getIdentityEndPoint()}
+   */
+  @JsonProperty(access = JsonProperty.Access.READ_ONLY)
+  public String getUri() {
+    if (getIdentityEndPoint() == null) {
+      return null;
+    }
+    return URI_CONTEXT + URI_VERSION + getIdentityEndPoint();
+  }
+
+  /**
+   * Returns true if the RuntimeInfo will be the same on all members;
+   * false if each member can have different RuntimeInfo.
+   */
+  @JsonIgnore
+  public boolean isGlobalRuntime() {
+    return false;
+  }
+

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 INS29 INS73 INS31 INS31 INS23 INS31 INS31 INS65 INS65 INS42 INS43 INS78 INS83 MOV43 INS42 INS8 INS29 INS78 INS83 INS83 INS43 INS42 UPD83 INS83 INS83 INS43 INS83 INS83 INS83 INS43 INS59 INS29 INS78 INS83 INS83 INS43 INS42 INS29 INS78 MOV43 INS42 INS8 INS29 INS77 INS43 INS42 INS29 INS78 INS83 INS39 INS42 INS8 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS41 INS65 INS42 UPD42 MOV42 INS42 UPD42 INS45 INS42 INS42 INS45 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS60 INS25 INS65 INS65 INS42 INS80 INS42 INS25 INS41 INS65 INS42 INS41 INS68 INS66 INS68 INS66 INS68 INS66 INS68 INS66 INS68 INS66 INS68 INS66 INS68 INS66 INS33 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS43 INS59 INS32 INS41 INS8 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS65 INS42 INS40 INS27 INS8 INS27 INS66 INS66 INS9 INS42 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS68 INS68 INS67 INS67 INS68 INS68 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS60 INS25 INS67 INS67 INS68 INS32 INS33 INS41 INS42 INS42 INS32 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS69 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS41 INS41 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS27 INS42 INS32 INS45 INS32 INS42 INS42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL39 DEL42 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21