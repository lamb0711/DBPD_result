GEODE-7965: Modify Redis SADD command to use region.compute (#4918)

* GEODE-7965: Modify Redis SADD command to use region.compute

Co-authored-by: Ray Ingles <ringles@pivotal.io>
Co-authored-by: John Hutchison <jhutchison@pivotal.io>
+import java.util.concurrent.atomic.AtomicLong;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
+
-
-    long entriesAdded = 0L;
+    AtomicLong entriesAdded = new AtomicLong(0L);
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
+    Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
-      Set<ByteArrayWrapper> entries = region.get(key);
-      if (entries == null) {
-        entries = new HashSet<>();
-      }
+    // Save key
+    context.getKeyRegistrar().register(command.getKey(), RedisDataType.REDIS_SET);
-      for (int i = 2; i < commandElems.size(); i++) {
-        if (entries.add(new ByteArrayWrapper(commandElems.get(i)))) {
-          entriesAdded++;
-        }
-      }
+    region.compute(
+        key,
+        (ByteArrayWrapper localKey, Set<ByteArrayWrapper> oldSetValue) -> {
+          entriesAdded.set(0L);
+          Set<ByteArrayWrapper> setCopy;
+          if (oldSetValue == null) {
+            setCopy = new HashSet<>();
+          } else {
+            setCopy = new HashSet<>(oldSetValue);
+          }
-      region.put(key, entries);
-      command
-          .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entriesAdded));
+          for (int i = 2; i < commandElems.size(); i++) {
+            if (setCopy.add(new ByteArrayWrapper(commandElems.get(i)))) {
+              entriesAdded.incrementAndGet();
+            }
+          }
-      // Save key
-      context.getKeyRegistrar().register(command.getKey(), RedisDataType.REDIS_SET);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
-    }
+          return setCopy;
+        });
+
+    command
+        .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entriesAdded.get()));
-

MOV26 UPD40 MOV8 MOV60 MOV21 MOV60 MOV25 MOV60 INS43 INS42 UPD42 INS14 UPD42 INS86 INS43 INS34 INS44 INS44 INS8 INS32 INS42 INS43 INS42 MOV74 INS42 INS21 INS60 MOV25 MOV24 INS41 MOV42 INS42 INS42 INS32 INS74 INS59 INS8 INS42 UPD42 MOV42 INS42 INS34 INS43 INS43 INS42 UPD42 INS21 INS42 INS42 INS7 UPD42 INS42 INS14 UPD42 INS74 INS42 INS32 INS43 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL32 DEL42 DEL37 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54 DEL8