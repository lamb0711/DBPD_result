GEODE-6854: Skipped events already contained in the batch during conflation


+import java.util.Arrays;
+import org.apache.geode.internal.lang.ObjectUtils;
-    StringBuffer buffer = new StringBuffer();
-    buffer.append("GatewaySenderEventImpl[").append("id=").append(this.id).append(";action=")
+    StringBuilder builder = new StringBuilder();
+    builder.append("GatewaySenderEventImpl[").append("id=").append(this.id).append(";action=")
-    return buffer.toString();
+    return builder.toString();
+  }
+
+  public String toSmallString() {
+    StringBuilder builder = new StringBuilder();
+    builder.append("GatewaySenderEventImpl[").append("id=").append(this.id).append(";operation=")
+        .append(getOperation()).append(";region=").append(this.regionPath).append(";key=")
+        .append(this.key).append(";shadowKey=").append(this.shadowKey).append(";bucketId=")
+        .append(this.bucketId).append("]");
+    return builder.toString();
+  public boolean equals(Object obj) {
+    if (this == obj) {
+      return true;
+    }
+
+    if (!(obj instanceof GatewaySenderEventImpl)) {
+      return false;
+    }
+
+    GatewaySenderEventImpl that = (GatewaySenderEventImpl) obj;
+
+    return this.shadowKey.equals(that.shadowKey)
+        && this.id.equals(that.id)
+        && this.bucketId == that.bucketId
+        && this.action == that.action
+        && this.regionPath.equals(that.regionPath)
+        && this.key.equals(that.key)
+        && Arrays.equals(this.value, that.value);
+  }
+
+  public int hashCode() {
+    int hashCode = 17;
+    hashCode = 37 * hashCode + ObjectUtils.hashCode(this.shadowKey);
+    hashCode = 37 * hashCode + ObjectUtils.hashCode(this.id);
+    hashCode = 37 * hashCode + this.bucketId;
+    hashCode = 37 * hashCode + this.action;
+    hashCode = 37 * hashCode + ObjectUtils.hashCode(this.regionPath);
+    hashCode = 37 * hashCode + ObjectUtils.hashCode(this.key);
+    hashCode = 37 * hashCode + (this.value == null ? 0 : Arrays.hashCode(this.value));
+    return hashCode;
+  }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS42 INS60 INS21 INS41 INS43 INS42 INS25 INS25 INS60 INS41 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 UPD43 INS43 INS59 INS32 INS32 INS42 INS27 INS8 INS38 INS8 INS43 INS59 INS27 INS39 INS59 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS14 INS32 INS42 INS45 INS42 INS42 INS52 INS42 INS41 INS36 INS41 INS42 INS42 INS11 INS27 INS32 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 UPD43 INS43 INS32 INS42 INS22 INS9 INS62 INS9 INS43 INS42 INS27 INS32 INS42 INS42 INS22 INS40 INS27 INS32 INS27 INS32 INS27 INS22 INS27 INS22 INS27 INS32 INS27 INS32 INS27 INS36 UPD42 INS42 INS32 INS42 INS45 INS52 INS42 INS42 INS43 INS42 INS27 INS32 INS22 INS42 INS40 INS52 INS42 INS34 INS42 INS42 INS42 INS22 INS34 INS42 INS42 INS42 INS22 INS34 INS42 INS52 INS42 INS34 INS42 INS52 INS42 INS34 INS42 INS42 INS42 INS22 INS34 INS42 INS42 INS42 INS22 INS34 INS42 INS16 INS32 INS42 INS22 INS42 INS27 INS27 INS22 INS42 INS40 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS27 INS34 INS32 INS32 INS42 INS45 INS52 INS42 INS32 INS32 INS27 INS22 INS40 INS52 INS42 INS22 INS33 INS42 INS42 INS22 INS32 INS42 INS22 INS22 INS42 INS40 INS22 INS42 INS40 INS22 INS40 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS45 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS22 INS32 INS42 INS45 INS52 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS42 INS22 INS32 INS42 INS45 INS52 INS42 INS42 INS42 INS45 UPD42