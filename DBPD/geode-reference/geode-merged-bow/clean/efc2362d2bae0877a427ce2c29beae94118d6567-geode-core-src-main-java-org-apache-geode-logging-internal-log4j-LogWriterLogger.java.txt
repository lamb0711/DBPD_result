GEODE-6964: Move geode log4j core classes to geode-log4j

Introduce new Logging and Alerting SPIs. Extract all log4j-core code to
geode-log4j module.

The geode-core module no longer contains log4j2.xml and no longer has a
dependency on log4j-core.

All code that uses log4j-core has moved to the new module geode-log4j.
The log4j2.xml for Geode now lives in geode-log4j as well. These
changes ensure that users have better control over logging including
which backend to use. This should improve user experience when using
Spring Boot.

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

-package org.apache.geode.internal.logging.log4j;
-
-import static org.apache.geode.internal.logging.LogWriterLevel.ALL;
-import static org.apache.geode.internal.logging.LogWriterLevel.ERROR;
-import static org.apache.geode.internal.logging.LogWriterLevel.FINE;
-import static org.apache.geode.internal.logging.LogWriterLevel.FINER;
-import static org.apache.geode.internal.logging.LogWriterLevel.INFO;
-import static org.apache.geode.internal.logging.LogWriterLevel.NONE;
-import static org.apache.geode.internal.logging.LogWriterLevel.SEVERE;
-import static org.apache.geode.internal.logging.LogWriterLevel.WARNING;
+package org.apache.geode.logging.internal.log4j;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.spi.AbstractLogger;
+import org.apache.logging.log4j.spi.ExtendedLogger;
-import org.apache.geode.internal.logging.LogWriterLevel;
-import org.apache.geode.internal.logging.log4j.message.GemFireParameterizedMessageFactory;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.logging.internal.spi.LogWriterLevel;
-public class LogWriterLogger extends FastLogger implements InternalLogWriter, GemFireLogger {
-
-  private static final long serialVersionUID = 446081244292135L;
+public class LogWriterLogger extends ExtendedLoggerWrapper
+    implements InternalLogWriter, GemFireLogger {
-    super((AbstractLogger) logger, logger.getName(), logger.getMessageFactory());
+    super((ExtendedLogger) logger, logger.getName(), logger.getMessageFactory());
-    Logger wrapped = LogManager.getLogger(name, GemFireParameterizedMessageFactory.INSTANCE);
+    Logger wrapped = LogService.getLogger(name);
+  public Logger getExtendedLogger() {
+    return logger;
+  }
+
-      return NONE.intLevel();
+      return LogWriterLevel.NONE.intLevel();
-      return SEVERE.intLevel();
+      return LogWriterLevel.SEVERE.intLevel();
-      return ERROR.intLevel();
+      return LogWriterLevel.ERROR.intLevel();
-      return WARNING.intLevel();
+      return LogWriterLevel.WARNING.intLevel();
-      return INFO.intLevel();
+      return LogWriterLevel.INFO.intLevel();
-      return FINE.intLevel();
+      return LogWriterLevel.FINE.intLevel();
-      return FINER.intLevel();
+      return LogWriterLevel.FINER.intLevel();
-      return ALL.intLevel();
+      return LogWriterLevel.ALL.intLevel();

MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 INS31 UPD42 INS83 INS43 INS42 INS8 INS42 INS41 INS42 UPD43 UPD42 UPD42 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42