GEODE-798: change unit test to not create a real cache

testCreateOffHeapStorage now uses mocks.
Also a LocalStatisticsFactory can now be created without starting a sampler.
This allows it to be used as a light weight StatisticsFactory compared to InternalDistributedSystem.
The nice thing compared to a mocked StatisticsFactory is it will still create functional Statistics instances.

-    MemoryAllocator result;
-      result = null;
-    } else {
-      // Ensure that using off-heap will work with this JVM.
-      validateVmCompatibility();
-      
-      final OffHeapMemoryStats stats = new OffHeapStorage(sf);
-      
-      if (offHeapMemorySize < MIN_SLAB_SIZE) {
-        throw new IllegalArgumentException("The amount of off heap memory must be at least " + MIN_SLAB_SIZE + " but it was set to " + offHeapMemorySize);
-      }
-      
-      // determine off-heap and slab sizes
-      final long maxSlabSize = calcMaxSlabSize(offHeapMemorySize);
-      
-      final int slabCount = calcSlabCount(maxSlabSize, offHeapMemorySize);
-
-      if (system == null) {
-        throw new IllegalArgumentException("InternalDistributedSystem is null");
-      }
-      // ooohml provides the hook for disconnecting and closing cache on OutOfOffHeapMemoryException
-      OutOfOffHeapMemoryListener ooohml = new DisconnectingOutOfOffHeapMemoryListener((InternalDistributedSystem) system);
-      result = SimpleMemoryAllocatorImpl.create(ooohml, stats, lw, slabCount, offHeapMemorySize, maxSlabSize);
+      return null;
-    return result;
+
+    if (offHeapMemorySize < MIN_SLAB_SIZE) {
+      throw new IllegalArgumentException("The amount of off heap memory must be at least " + MIN_SLAB_SIZE + " but it was set to " + offHeapMemorySize);
+    }
+
+    // Ensure that using off-heap will work with this JVM.
+    validateVmCompatibility();
+
+    if (system == null) {
+      throw new IllegalArgumentException("InternalDistributedSystem is null");
+    }
+    // ooohml provides the hook for disconnecting and closing cache on OutOfOffHeapMemoryException
+    OutOfOffHeapMemoryListener ooohml = new DisconnectingOutOfOffHeapMemoryListener((InternalDistributedSystem) system);
+    return basicCreateOffHeapStorage(lw, sf, offHeapMemorySize, ooohml);
+  }
+  
+  static MemoryAllocator basicCreateOffHeapStorage(LogWriter lw, StatisticsFactory sf, long offHeapMemorySize, OutOfOffHeapMemoryListener ooohml) {
+    final OffHeapMemoryStats stats = new OffHeapStorage(sf);
+
+   // determine off-heap and slab sizes
+    final long maxSlabSize = calcMaxSlabSize(offHeapMemorySize);
+
+    final int slabCount = calcSlabCount(maxSlabSize, offHeapMemorySize);
+
+    return SimpleMemoryAllocatorImpl.create(ooohml, stats, lw, slabCount, offHeapMemorySize, maxSlabSize);

INS31 INS83 MOV43 INS42 INS44 INS44 INS44 INS44 MOV8 MOV25 MOV21 MOV25 MOV60 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS41 INS32 INS42 INS42 INS42 MOV32 INS41 INS42 INS42 INS42 INS42 INS42 INS33 DEL42 DEL59 DEL60 DEL42 DEL33 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21