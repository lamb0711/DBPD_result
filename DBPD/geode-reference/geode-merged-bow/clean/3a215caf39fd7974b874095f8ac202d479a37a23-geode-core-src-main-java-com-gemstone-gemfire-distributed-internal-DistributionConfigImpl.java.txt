GEODE-420: Merge with develop

-import com.gemstone.gemfire.internal.net.SocketCreator;
+import com.gemstone.gemfire.internal.net.SocketCreator;
-  /** The security manager class name*/
+  /**
+   * The security manager class name
+   */
-  /** The post processor class name*/
+  /**
+   * The post processor class name
+   */
-  /** The client Diffie-Hellman method name*/
+  /**
+   * The client Diffie-Hellman method name
+   */
-  
+
-  
-  
+
+
-          throw new InternalGemFireException("error invoking getter for property" + propertyName );
+          throw new InternalGemFireException("error invoking getter for property" + propertyName);
-      checkAttribute(propertyName,value);
+      checkAttribute(propertyName, value);
-        
+
-    securityClientAuthenticator = (String) value;
+    securityClientAuthenticator = value;
-  public void setSecurityManager(String value){
-    securityManager = (String)checkAttribute(SECURITY_MANAGER, value);
+  public void setSecurityManager(String value) {
+    securityManager = value;
-    postProcessor = (String) checkAttribute(SECURITY_POST_PROCESSOR, value);
+    postProcessor = value;
-    
+
-    
+
-    
+
-    
+
-    
+
-      return false;
-    if (securityManager == null) {
-      if (other.securityManager != null)
+      if (securityManager == null) {
+        if (other.securityManager != null) {
+          return false;
+        }
+      } else if (!securityManager.equals(other.securityManager)) {
-    } else if (!securityManager
-      .equals(other.securityManager))
-      return false;
-    if (postProcessor == null) {
-      if (other.postProcessor != null)
+      }
+      if (postProcessor == null) {
+        if (other.postProcessor != null) {
+          return false;
+        }
+      } else if (!postProcessor.equals(other.postProcessor)) {
-    } else if (!postProcessor
-      .equals(other.postProcessor))
-      return false;
-    if (shiroInit == null) {
-      if (other.shiroInit != null)
+      }
+      if (shiroInit == null) {
+        if (other.shiroInit != null) {
+          return false;
+        }
+      } else if (!shiroInit.equals(other.shiroInit)) {
-    } else if (!shiroInit
-      .equals(other.shiroInit))
-      return false;
+      }
-    result = prime
-        * result
-        + ((securityClientAccessor == null) ? 0 : securityClientAccessor
-            .hashCode());
-    result = prime
-        * result
-        + ((securityClientAccessorPP == null) ? 0 : securityClientAccessorPP
-            .hashCode());
-    result = prime
-        * result
-        + ((securityClientAuthInit == null) ? 0 : securityClientAuthInit
-            .hashCode());
-    result = prime
-        * result
-        + ((securityClientAuthenticator == null) ? 0
-            : securityClientAuthenticator.hashCode());
-    result = prime
-             * result
-             + ((securityManager == null) ? 0
-                  : securityManager.hashCode());
-    result = prime
-             * result
-             + ((postProcessor == null) ? 0
-                  : postProcessor.hashCode());
-    result = prime
-             * result
-             + ((shiroInit == null) ? 0
-                  : shiroInit.hashCode());
-    result = prime
-        * result
-        + ((securityClientDHAlgo == null) ? 0 : securityClientDHAlgo.hashCode());
-    result = prime * result
-        + ((securityLogFile == null) ? 0 : securityLogFile.hashCode());
+    result = prime * result + ((securityClientAccessor == null) ? 0 : securityClientAccessor.hashCode());
+    result = prime * result + ((securityClientAccessorPP == null) ? 0 : securityClientAccessorPP.hashCode());
+    result = prime * result + ((securityClientAuthInit == null) ? 0 : securityClientAuthInit.hashCode());
+    result = prime * result + ((securityClientAuthenticator == null) ? 0 : securityClientAuthenticator.hashCode());
+    result = prime * result + ((securityManager == null) ? 0 : securityManager.hashCode());
+    result = prime * result + ((postProcessor == null) ? 0 : postProcessor.hashCode());
+    result = prime * result + ((shiroInit == null) ? 0 : shiroInit.hashCode());
+    result = prime * result + ((securityClientDHAlgo == null) ? 0 : securityClientDHAlgo.hashCode());
+    result = prime * result + ((securityLogFile == null) ? 0 : securityLogFile.hashCode());

MOV26 INS42 INS42 INS42 INS8 INS8 INS8 INS8 MOV41 INS8 MOV41 INS8 MOV41 MOV41 MOV41 MOV41 DEL42 DEL43 DEL42 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL9 DEL41