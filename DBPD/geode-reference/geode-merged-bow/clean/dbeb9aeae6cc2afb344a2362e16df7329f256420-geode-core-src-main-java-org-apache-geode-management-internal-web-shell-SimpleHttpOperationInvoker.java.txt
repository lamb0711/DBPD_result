Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The SimpleHttpOperationInvoker class is an implementation of the OperationInvoker interface that issues commands
- * to the GemFire Manager via HTTP.  The SimpleHttpOperationInvoker uses a single URL web service endpoint to process
- * commands and return responses.
+ * The SimpleHttpOperationInvoker class is an implementation of the OperationInvoker interface that
+ * issues commands to the GemFire Manager via HTTP. The SimpleHttpOperationInvoker uses a single URL
+ * web service endpoint to process commands and return responses.
-   * Default no-arg constructor to create an instance of the SimpleHttpOperationInvoker class for testing purposes.
+   * Default no-arg constructor to create an instance of the SimpleHttpOperationInvoker class for
+   * testing purposes.
-   * Constructs an instance of the SimpleHttpOperationInvoker class initialized with a reference to the GemFire shell
-   * (Gfsh) using this HTTP-based OperationInvoker to send command invocations to the GemFire Manager's HTTP service
-   * using HTTP processing.
+   * Constructs an instance of the SimpleHttpOperationInvoker class initialized with a reference to
+   * the GemFire shell (Gfsh) using this HTTP-based OperationInvoker to send command invocations to
+   * the GemFire Manager's HTTP service using HTTP processing.
-   * @param gfsh a reference to the instance of the GemFire shell using this OperationInvoker to process commands.
-   * @see #SimpleHttpOperationInvoker(org.apache.geode.management.internal.cli.shell.Gfsh, String, Map)
+   * @param gfsh a reference to the instance of the GemFire shell using this OperationInvoker to
+   *        process commands.
+   * @see #SimpleHttpOperationInvoker(org.apache.geode.management.internal.cli.shell.Gfsh, String,
+   *      Map)
-  public SimpleHttpOperationInvoker(final Gfsh gfsh, Map<String,String> securityProperties) {
+  public SimpleHttpOperationInvoker(final Gfsh gfsh, Map<String, String> securityProperties) {
-   * Constructs an instance of the SimpleHttpOperationInvoker class initialized with a reference to the GemFire shell
-   * (Gfsh) using this HTTP-based OperationInvoker to send command invocations to the GemFire Manager's HTTP service
-   * using HTTP for processing.  In addition, the base URL to the HTTP service running in the GemFire Manager is
-   * specified as the base location for all HTTP requests.
+   * Constructs an instance of the SimpleHttpOperationInvoker class initialized with a reference to
+   * the GemFire shell (Gfsh) using this HTTP-based OperationInvoker to send command invocations to
+   * the GemFire Manager's HTTP service using HTTP for processing. In addition, the base URL to the
+   * HTTP service running in the GemFire Manager is specified as the base location for all HTTP
+   * requests.
-   * @param gfsh a reference to the instance of the GemFire shell using this OperationInvoker to process commands.
+   * @param gfsh a reference to the instance of the GemFire shell using this OperationInvoker to
+   *        process commands.
-  public SimpleHttpOperationInvoker(final Gfsh gfsh, final String baseUrl, Map<String,String> securityProperties) {
+  public SimpleHttpOperationInvoker(final Gfsh gfsh, final String baseUrl,
+      Map<String, String> securityProperties) {
-   * Creates an HTTP request from a command invocation encapsulated in a CommandRequest object.  The CommandRequest
-   * identifies the resource targeted by the command invocation along with any parameters to be sent as part of the
-   * HTTP request.
+   * Creates an HTTP request from a command invocation encapsulated in a CommandRequest object. The
+   * CommandRequest identifies the resource targeted by the command invocation along with any
+   * parameters to be sent as part of the HTTP request.
-   * @return a client HTTP request detailing the operation to be performed on the remote resource targeted by the
-   * command invocation.
+   * @return a client HTTP request detailing the operation to be performed on the remote resource
+   *         targeted by the command invocation.
-   * Creates a Link based on the resource being targeted by the command invocation.  The Link will contain the URI
-   * uniquely identifying the resource along with the HTTP GET operation specifying the method of processing.
+   * Creates a Link based on the resource being targeted by the command invocation. The Link will
+   * contain the URI uniquely identifying the resource along with the HTTP GET operation specifying
+   * the method of processing.
-   * @see AbstractHttpOperationInvoker#createLink(String, java.net.URI, org.apache.geode.management.internal.web.http.HttpMethod)
+   * @see AbstractHttpOperationInvoker#createLink(String, java.net.URI,
+   *      org.apache.geode.management.internal.web.http.HttpMethod)
-    return UriComponentsBuilder.fromHttpUrl(getBaseUrl())
-      .path(REST_API_MANAGEMENT_COMMANDS_URI)
-      .queryParam(CMD_QUERY_PARAMETER, command.getInput())
-      .build().encode().toUri();
+    return UriComponentsBuilder.fromHttpUrl(getBaseUrl()).path(REST_API_MANAGEMENT_COMMANDS_URI)
+        .queryParam(CMD_QUERY_PARAMETER, command.getInput()).build().encode().toUri();
-   * Processes the requested command.  Sends the command to the GemFire Manager for remote processing (execution).
+   * Processes the requested command. Sends the command to the GemFire Manager for remote processing
+   * (execution).
-   * @see AbstractHttpOperationInvoker#send(org.apache.geode.management.internal.web.http.ClientHttpRequest, Class)
+   * @see AbstractHttpOperationInvoker#send(org.apache.geode.management.internal.web.http.ClientHttpRequest,
+   *      Class)
-    assertState(isConnected(), "Gfsh must be connected to the GemFire Manager in order to process commands remotely!");
+    assertState(isConnected(),
+        "Gfsh must be connected to the GemFire Manager in order to process commands remotely!");
-    }
-    catch (ResourceAccessException e) {
+    } catch (ResourceAccessException e) {

UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 INS66