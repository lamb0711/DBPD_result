Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class is responsible for creating Aggregate MBeans at GemFire layer. It
- * acts as a ProxyListener and add/remove/update the corresponding MBean
- * aggregates accordingly.
+ * This class is responsible for creating Aggregate MBeans at GemFire layer. It acts as a
+ * ProxyListener and add/remove/update the corresponding MBean aggregates accordingly.
-  
-  
+
+
-  
+
-  
-  
+
+
-  
+
+   * 
-   * @param interfaceClass
-   *          class of the proxy interface
-   * @return appropriate handler instance to handle the proxy addition or
-   *         removal
+   * @param interfaceClass class of the proxy interface
+   * @return appropriate handler instance to handle the proxy addition or removal
-  public void afterPseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject, FederationComponent newVal){
+  public void afterPseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+      Object proxyObject, FederationComponent newVal) {
-  
+
-   * Handler class for CacheServer MBeans only to provide data to Distributed
-   * System MBean As of today there wont be any Distributed counterpart of Cache
-   * Server MBean
+   * Handler class for CacheServer MBeans only to provide data to Distributed System MBean As of
+   * today there wont be any Distributed counterpart of Cache Server MBean
-    public void handleProxyRemoval(ObjectName objectName, Class interfaceClass, Object obj, FederationComponent oldVal) {
+    public void handleProxyRemoval(ObjectName objectName, Class interfaceClass, Object obj,
+        FederationComponent oldVal) {
-    
+
-    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject,
-        FederationComponent newVal) {
-      
+    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+        Object proxyObject, FederationComponent newVal) {
+
-   * Handler class for GatewayReceiverHandler MBeans only to provide data to
-   * Distributed System MBean As of today there wont be any Distributed
-   * counterpart of GatewayReceiverHandler MBean
+   * Handler class for GatewayReceiverHandler MBeans only to provide data to Distributed System
+   * MBean As of today there wont be any Distributed counterpart of GatewayReceiverHandler MBean
-    
+
-    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject,
-        FederationComponent newVal) {
-      
+    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+        Object proxyObject, FederationComponent newVal) {
+
-  
-  
-  
+
+
+
-   * Handler class for GatewayReceiverHandler MBeans only to provide data to Distributed System MBean
-   * As of today there wont be any Distributed counterpart of GatewayReceiverHandler MBean
+   * Handler class for GatewayReceiverHandler MBeans only to provide data to Distributed System
+   * MBean As of today there wont be any Distributed counterpart of GatewayReceiverHandler MBean
-    
+
-    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject,
-        FederationComponent newVal) {
-      
+    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+        Object proxyObject, FederationComponent newVal) {
+
-    
+
-    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject,
-        FederationComponent newVal) {
-      
+    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+        Object proxyObject, FederationComponent newVal) {
+
-    
+
-    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject,
-        FederationComponent newVal) {
+    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+        Object proxyObject, FederationComponent newVal) {
-      
+
-        FederationComponent newVal, FederationComponent oldVal) {
-    }
-    
+        FederationComponent newVal, FederationComponent oldVal) {}
+
-    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass, Object proxyObject,
-        FederationComponent newVal) {
-      
+    public void handlePseudoCreateProxy(ObjectName objectName, Class interfaceClass,
+        Object proxyObject, FederationComponent newVal) {
+
-  public void quorumLost(Set<InternalDistributedMember> failures, List<InternalDistributedMember> remaining) {
+  public void quorumLost(Set<InternalDistributedMember> failures,
+      List<InternalDistributedMember> remaining) {
-//    distributedSystemBridge.quorumLost(failures, remaining);
+    // distributedSystemBridge.quorumLost(failures, remaining);
-  public void memberSuspect(InternalDistributedMember id,
-      InternalDistributedMember whoSuspected, String reason) {
+  public void memberSuspect(InternalDistributedMember id, InternalDistributedMember whoSuspected,
+      String reason) {
-  
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66