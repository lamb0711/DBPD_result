GEODE-2271 JSOnFormatter can generate three pdxTypeId for one json field.

JSON field can have 3 values(fieldValue, NULL, fieldNotExist), this
causes 3 pdxTypeIds. To reuduce this we merged first two values in in
one pdxType.

Added unit test for it

-      return readField(field);
+      PdxString pdxString = getPdxStringFromObjectField(ft);
+      if (pdxString != null)
+        return pdxString;
+    return readField(field);
+  }
+
+  /**
+   * This method checks whether Object field is String type. If its String then it returns PdxString
+   * otherwise null.
+   * 
+   * @param ft
+   * @return
+   */
+  private PdxString getPdxStringFromObjectField(PdxField ft) {
+    if (ft.getFieldType() == FieldType.OBJECT) {
+      ByteSource buffer = dis.getBuffer();
+      byte[] bytes = null;
+      if (buffer.hasArray()) {
+        bytes = buffer.array();
+      } else {
+        throw new IllegalStateException();
+      }
+      int offset = getPositionForField(ft) + buffer.arrayOffset();
+      // Do not create PdxString if the field is NULL
+      if (bytes[offset] == DSCODE.STRING || bytes[offset] == DSCODE.STRING_BYTES
+          || bytes[offset] == DSCODE.HUGE_STRING || bytes[offset] == DSCODE.HUGE_STRING_BYTES) {
+        return new PdxString(bytes, offset);
+      }
+    }
+    return null;

INS31 INS29 INS83 INS43 INS42 INS44 INS8 MOV41 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS41 INS66 INS66 INS42 INS42 INS27 INS8 INS33 INS60 INS25 INS32 INS40 INS60 INS60 INS25 INS60 INS25 INS43 INS59 INS27 INS41 INS42 INS42 INS43 INS59 INS5 INS59 INS32 INS8 INS8 INS39 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS32 INS39 INS85 INS42 INS33 INS42 INS42 INS21 INS53 INS42 INS27 INS27 INS27 INS41 INS42 INS42 INS42 INS42 INS7 INS14 INS32 INS32 INS27 INS27 INS2 INS40 INS14 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS27 INS27 INS2 INS40 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS2 INS40 INS2 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42