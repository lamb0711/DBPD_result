Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

+import com.gemstone.gemfire.internal.cache.PartitionAttributesImpl;
+    nonDefaultAttributes = new HashMap<String, String>();
+    if (this.totalNumBuckets != RegionAttributesDefault.TOTAL_NUM_BUCKETS) {
+      nonDefaultAttributes.put(RegionAttributesNames.TOTAL_NUM_BUCKETS, Integer.toString(this.totalNumBuckets));
+    }
+
+    if (this.localMaxMemory != ((PartitionAttributesImpl) partitionAttributes).getLocalMaxMemoryDefault()) {
+      nonDefaultAttributes.put(RegionAttributesNames.LOCAL_MAX_MEMORY, Integer.toString(this.localMaxMemory));
+    }
+
+
+    if (this.redundantCopies != RegionAttributesDefault.REDUNDANT_COPIES) {
+      nonDefaultAttributes.put(RegionAttributesNames.REDUNDANT_COPIES, Integer.toString(this.redundantCopies));
+    }
+
+
+    if (this.colocatedWith != null && !this.colocatedWith.equals(RegionAttributesDefault.COLOCATED_WITH)) {
+      nonDefaultAttributes.put(RegionAttributesNames.COLOCATED_WITH, this.colocatedWith);
+    }
+
+
+    if (this.recoveryDelay != RegionAttributesDefault.RECOVERY_DELAY) {
+      nonDefaultAttributes.put(RegionAttributesNames.RECOVERY_DELAY, Long.toString(this.recoveryDelay));
+    }
+
+
+    if (this.startupRecoveryDelay != RegionAttributesDefault.STARTUP_RECOVERY_DELAY) {
+      nonDefaultAttributes.put(RegionAttributesNames.STARTUP_RECOVERY_DELAY, Long.toString(this.startupRecoveryDelay));
+    }
+
+    if (this.partitionResolverName != null && !this.partitionResolverName.equals(RegionAttributesDefault.PARTITION_RESOLVER)) {
+      nonDefaultAttributes.put(RegionAttributesNames.PARTITION_RESOLVER, this.partitionResolverName);
+    }
- 
-    if (nonDefaultAttributes == null) {
-      nonDefaultAttributes = new HashMap<String, String>();
-      if (this.totalNumBuckets != RegionAttributesDefault.TOTAL_NUM_BUCKETS) {
-        nonDefaultAttributes.put(RegionAttributesNames.TOTAL_NUM_BUCKETS, Integer.toString(this.totalNumBuckets));
-      }
-
-      if (this.localMaxMemory != RegionAttributesDefault.LOCAL_MAX_MEMORY) {
-        nonDefaultAttributes.put(RegionAttributesNames.LOCAL_MAX_MEMORY, Integer.toString(this.localMaxMemory));
-      }
-
-
-      if (this.redundantCopies != RegionAttributesDefault.REDUNDANT_COPIES) {
-        nonDefaultAttributes.put(RegionAttributesNames.REDUNDANT_COPIES, Integer.toString(this.redundantCopies));
-      }
-
-
-      if (this.colocatedWith != null && !this.colocatedWith.equals(RegionAttributesDefault.COLOCATED_WITH)) {
-        nonDefaultAttributes.put(RegionAttributesNames.COLOCATED_WITH, this.colocatedWith);
-      }
-
-
-      if (this.recoveryDelay != RegionAttributesDefault.RECOVERY_DELAY) {
-        nonDefaultAttributes.put(RegionAttributesNames.RECOVERY_DELAY, Long.toString(this.recoveryDelay));
-      }
-
-
-      if (this.startupRecoveryDelay != RegionAttributesDefault.STARTUP_RECOVERY_DELAY) {
-        nonDefaultAttributes.put(RegionAttributesNames.STARTUP_RECOVERY_DELAY, Long.toString(this.startupRecoveryDelay));
-      }
-
-      if (this.partitionResolverName != null && !this.partitionResolverName.equals(RegionAttributesDefault.PARTITION_RESOLVER)) {
-        nonDefaultAttributes.put(RegionAttributesNames.PARTITION_RESOLVER, this.partitionResolverName);
-      }
-    }
-
-
-

INS26 INS40 INS8 MOV21 MOV25 INS25 MOV25 MOV25 MOV25 MOV25 MOV25 MOV41 INS27 MOV8 MOV22 INS32 INS36 INS42 INS11 INS43 INS42 INS42 DEL42 DEL33 DEL27 DEL40 DEL27 DEL25 DEL8 DEL25 DEL8