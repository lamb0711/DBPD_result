Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Support for correctness assertions.
- * "An assertion is a statement containing a boolean expression that the
- *  programmer believes to be true at the time the statement is executed.
- * For example, after unmarshalling all of the arguments from a data
- * buffer, a programmer might assert that the number of bytes of data
- * remaining in the buffer is zero. The system executes the assertion by
- * evaluating the boolean expression and reporting an error if it evaluates to
- * false. By verifying that the boolean expression is indeed true, the system
- * corroborates the programmer's knowledge of the program and increases his
- * confidence that the program is free of bugs.Assertion checking may be
- * disabled for increased performance. Typically, assertion-checking is enabled
- * during program development and testing, and disabled during deployment."
- *     - from http://java.sun.com/aboutJava/communityprocess/jsr/asrt_prop.html
+ * Support for correctness assertions. "An assertion is a statement containing a boolean expression
+ * that the programmer believes to be true at the time the statement is executed. For example, after
+ * unmarshalling all of the arguments from a data buffer, a programmer might assert that the number
+ * of bytes of data remaining in the buffer is zero. The system executes the assertion by evaluating
+ * the boolean expression and reporting an error if it evaluates to false. By verifying that the
+ * boolean expression is indeed true, the system corroborates the programmer's knowledge of the
+ * program and increases his confidence that the program is free of bugs.Assertion checking may be
+ * disabled for increased performance. Typically, assertion-checking is enabled during program
+ * development and testing, and disabled during deployment." - from
+ * http://java.sun.com/aboutJava/communityprocess/jsr/asrt_prop.html
- * This class does not provide a way to disable assertions for increased performance,
- * since we cannot prevent the arguments from being evaluated in any case without
- * changes to the Java language itself.
+ * This class does not provide a way to disable assertions for increased performance, since we
+ * cannot prevent the arguments from being evaluated in any case without changes to the Java
+ * language itself.
- * The interface to this class was designed for easy migration to the new assert
- * facility that is currently proposed for the Java language in JSR-000041
+ * The interface to this class was designed for easy migration to the new assert facility that is
+ * currently proposed for the Java language in JSR-000041
- * @see <a href="http://java.sun.com/aboutJava/communityprocess/jsr/jsr_041_asrt.html">JSR-000041 A Simple Assertion Facility</a>
- * @see <a href="http://java.sun.com/aboutJava/communityprocess/jsr/asrt_prop.html">Proposal: A Simple Assertion Facility For the Java[tm] Programming Language</a>
+ * @see <a href="http://java.sun.com/aboutJava/communityprocess/jsr/jsr_041_asrt.html">JSR-000041 A
+ *      Simple Assertion Facility</a>
+ * @see <a href="http://java.sun.com/aboutJava/communityprocess/jsr/asrt_prop.html">Proposal: A
+ *      Simple Assertion Facility For the Java[tm] Programming Language</a>
+   * 
-  private static boolean debug = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "haltOnAssertFailure");
+  private static boolean debug =
+      Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "haltOnAssertFailure");
-  public static boolean waitForDebuggerOnError() { return debug; }
+  public static boolean waitForDebuggerOnError() {
+    return debug;
+  }
-    if (debug) { 
+    if (debug) {
-      System.err.println("Waiting for debugger to attach"); 
+      System.err.println("Waiting for debugger to attach");
-        try { Thread.sleep(1000); }
-        catch (InterruptedException ignore) { 
+        try {
+          Thread.sleep(1000);
+        } catch (InterruptedException ignore) {
-//       org.apache.geode.internal.cache.GemFireCache gfc
-//         = org.apache.geode.internal.cache.GemFireCache.getInstance();
-//       if (gfc != null) {
-//         gfc.getLogger().info("DEBUG", ex);
-//       }
+      // org.apache.geode.internal.cache.GemFireCache gfc
+      // = org.apache.geode.internal.cache.GemFireCache.getInstance();
+      // if (gfc != null) {
+      // gfc.getLogger().info("DEBUG", ex);
+      // }
-   * Assert that a boolean value is true.The
-   * message object will be sent toString()
-   * and used for an error message.
+   * Assert that a boolean value is true.The message object will be sent toString() and used for an
+   * error message.
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-   * This is a workaround for X bug 38288. JRockit can throw a NullPointerException
-   * from Thread.holdsLock, so we catch the NullPointerException if it happens.
+   * This is a workaround for X bug 38288. JRockit can throw a NullPointerException from
+   * Thread.holdsLock, so we catch the NullPointerException if it happens.
-   * This method returns true, unless it throws an exception. This is so we can disable
-   * these tests for performance reasons with a java assertion, eg
+   * This method returns true, unless it throws an exception. This is so we can disable these tests
+   * for performance reasons with a java assertion, eg
+   * 
-   * @return true, unless the method throws an exception. 
+   * @return true, unless the method throws an exception.
-      if(Thread.holdsLock(lock) != shouldBeHeld) {
+      if (Thread.holdsLock(lock) != shouldBeHeld) {
-    
+

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66