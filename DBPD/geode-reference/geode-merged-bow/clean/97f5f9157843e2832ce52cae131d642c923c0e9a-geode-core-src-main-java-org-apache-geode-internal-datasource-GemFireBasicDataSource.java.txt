GEODE-6470: Making double-checked locking thread-safe (#3252)

        * A repeated check on a non-volatile field is not thread-safe, and could result in unexpected behavior.
	* Fixed using volatile and local variables
-  protected transient Driver driverObject = null;
+  protected transient volatile Driver driverObject = null;
-    loadDriver();
+    driverObject = loadDriver();
-    if (driverObject == null) {
+    Driver localDriverRef = driverObject;
+    if (localDriverRef == null) {
-        if (driverObject == null)
-          loadDriver();
+        localDriverRef = driverObject;
+        if (localDriverRef == null) {
+          localDriverRef = loadDriver();
+          driverObject = localDriverRef;
+        }
-  private void loadDriver() throws SQLException {
+  private Driver loadDriver() throws SQLException {
-        loadDriverUsingClassName();
+        return loadDriverUsingClassName();
-        loadDriverUsingURL();
+        return loadDriverUsingURL();
-  private void loadDriverUsingURL() throws SQLException {
-    driverObject = DriverManager.getDriver(this.url);
+  private Driver loadDriverUsingURL() throws SQLException {
+    return DriverManager.getDriver(this.url);
-  private void loadDriverUsingClassName()
+  private Driver loadDriverUsingClassName()
-    driverObject = (Driver) driverClass.newInstance();
+    return (Driver) driverClass.newInstance();

INS83 INS43 INS43 INS43 INS60 INS42 INS42 INS41 INS42 INS41 INS7 INS43 INS59 MOV32 MOV11 INS42 MOV32 INS42 INS42 INS42 UPD42 INS21 INS41 INS41 INS7 INS8 MOV32 MOV32 INS42 INS42 UPD42 MOV21 INS21 INS7 INS7 INS42 MOV32 INS42 INS42 DEL39 DEL21 DEL21 DEL39 DEL42 DEL7 DEL21 DEL39 DEL42 DEL7 DEL21