Merge branch 'release/1.4.0'

+import java.util.Arrays;
+import org.json.JSONArray;
+
- * 
+ *
+  /**
+   * The intent is that this method should be able to handle both ResultData as well as
+   * CompositeResultData
+   *
+   * @return the extracted GfJsonObject table
+   */
+  public GfJsonObject getTableContent() {
+    return getTableContent(0, 0);
+  }
+
+  /**
+   * Most frequently, only two index values are required: a section index followed by a table index.
+   * Some commands, such as 'describe region', may return command results with subsections, however.
+   * Include these in order, e.g., getTableContent(sectionIndex, subsectionIndex, tableIndex);
+   */
+  public GfJsonObject getTableContent(int... sectionAndTableIDs) {
+    GfJsonObject topLevelContent = getContent();
+    // Most common is receiving exactly one section index and one table index.
+    // Some results, however, will have subsections before the table listings.
+    assert (sectionAndTableIDs.length >= 2);
+
+    GfJsonObject sectionObject = topLevelContent;
+    for (int i = 0; i < sectionAndTableIDs.length - 1; i++) {
+      int idx = sectionAndTableIDs[i];
+      sectionObject = sectionObject.getJSONObject("__sections__-" + idx);
+      if (sectionObject == null) {
+        return topLevelContent;
+      }
+    }
+
+    int tableId = sectionAndTableIDs[sectionAndTableIDs.length - 1];
+    GfJsonObject tableContent = sectionObject.getJSONObject("__tables__-" + tableId);
+    if (tableContent == null) {
+      return topLevelContent;
+    }
+
+    return tableContent.getJSONObject("content");
+  }
+
-
+
+  public List<Object> getColumnValues(String columnName) {
+    Object[] actualValues =
+        toArray(getTableContent().getInternalJsonObject().getJSONArray(columnName));
+    return Arrays.asList(actualValues);
+  }
+
+  private Object[] toArray(JSONArray array) {
+    Object[] values = new Object[array.length()];
+
+    for (int i = 0; i < array.length(); i++) {
+      values[i] = array.get(i);
+    }
+
+    return values;
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS5 INS42 INS44 INS8 INS65 INS65 INS42 INS41 INS65 INS42 INS39 INS42 INS60 INS6 INS60 INS24 INS60 INS60 INS25 INS41 INS43 INS43 INS43 INS42 INS60 INS41 INS43 INS85 INS43 INS42 INS60 INS24 INS41 INS66 INS66 INS66 INS32 INS66 INS66 INS66 INS43 INS59 INS36 INS43 INS59 INS58 INS27 INS37 INS8 INS39 INS59 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS5 INS59 INS32 INS42 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS34 INS34 INS42 INS42 INS32 INS27 INS42 INS42 INS42 INS39 INS59 INS42 INS27 INS42 INS60 INS21 INS25 INS42 INS2 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS45 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS32 INS42 INS21 INS42 INS40 INS34 INS42 INS34 INS40 INS34 INS39 INS59 INS7 INS27 INS8 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS5 INS32 INS42 INS34 INS42 INS42 INS7 INS42 INS2 INS42 INS32 INS42 INS33 INS41 INS40 INS34 INS45 INS42 INS32 INS42 INS42 INS43 INS85 INS42 INS42 INS2 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42