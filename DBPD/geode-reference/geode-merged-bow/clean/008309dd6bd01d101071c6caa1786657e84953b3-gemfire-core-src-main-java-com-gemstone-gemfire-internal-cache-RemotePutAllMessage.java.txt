Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+  protected static final short IS_PUT_DML = (SKIP_CALLBACKS << 1);
+
+  private boolean isPutDML;
+	this.isPutDML = event.isPutDML();
+    msg.setTransactionDistributed(event.getRegion().getCache().getTxManager().isDistributed());
+    this.isPutDML = (flags & IS_PUT_DML) != 0;
+    if (this.isPutDML) flags |= IS_PUT_DML;
-    EntryEventImpl baseEvent = new EntryEventImpl(
+    EntryEventImpl baseEvent = EntryEventImpl.create(
+    try {
+	baseEvent.setPutDML(this.isPutDML);
+    try {
-          EntryEventImpl ev = PutAllPRMessage.getEventFromEntry(r, myId, eventSender, i, putAllData, false, bridgeContext, posDup, !skipCallbacks);
+          EntryEventImpl ev = PutAllPRMessage.getEventFromEntry(r, myId, eventSender, i, putAllData, false, bridgeContext, posDup, !skipCallbacks, isPutDML);
+          try {
+          } finally {
+            ev.release();
+          }
+    } finally {
+      dpao.freeOffHeapResources();
+    }
+    } finally {
+      baseEvent.release();
+    }

INS23 INS23 INS83 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS36 INS42 INS21 INS21 INS21 INS25 INS54 INS27 INS7 INS32 INS7 INS22 INS21 MOV43 INS59 INS8 INS8 INS42 INS34 INS22 INS32 INS42 INS42 INS32 INS22 INS27 INS52 INS42 INS7 INS42 INS32 MOV21 MOV21 MOV25 MOV21 INS21 MOV25 MOV60 INS54 INS21 INS52 INS42 INS42 INS42 INS32 INS42 INS52 INS42 INS36 INS34 INS42 INS42 INS42 INS42 INS42 INS40 INS33 INS33 MOV22 INS9 INS42 MOV38 INS32 INS8 INS8 INS32 INS32 INS42 INS27 INS42 INS42 INS22 MOV60 MOV21 MOV25 MOV21 MOV41 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS42 INS8 INS60 INS54 MOV43 INS59 MOV8 INS8 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 MOV38 INS42 INS32 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL33 DEL33 DEL9 DEL42 DEL14 DEL59 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL42 DEL42 DEL32 DEL59 DEL60