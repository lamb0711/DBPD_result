Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class AggregateRegionStatsMonitor extends MBeanStatsMonitor{
+public class AggregateRegionStatsMonitor extends MBeanStatsMonitor {
-  
+
-  
+
-  
-  
-  
+
+
+
-  
-  private Map<Statistics ,MemberLevelRegionStatisticsListener > listeners;
+
+  private Map<Statistics, MemberLevelRegionStatisticsListener> listeners;
-  
+
-  
+
-  public void removeDirectoryStatistics(Statistics stats){
+  public void removeDirectoryStatistics(Statistics stats) {
-  
+
-  
-  private MemberLevelRegionStatisticsListener removeListener(Statistics stats){
+
+  private MemberLevelRegionStatisticsListener removeListener(Statistics stats) {
-    
+
-  private class MemberLevelRegionStatisticsListener implements
-      StatisticsListener {
+  private class MemberLevelRegionStatisticsListener implements StatisticsListener {
-    
+
-        if(removed){
+        if (removed) {
-          log(name,value);
+          log(name, value);
-    
-    
+
+
-     * Only decrease those values which can both increase and decrease and not
-     * values which can only increase like read/writes
+     * Only decrease those values which can both increase and decrease and not values which can only
+     * increase like read/writes
-     * Remove last sample value from the aggregate. Last Sampled value can be
-     * obtained from the DefaultHashMap for the disk
+     * Remove last sample value from the aggregate. Last Sampled value can be obtained from the
+     * DefaultHashMap for the disk
-    
- 
+
+
-  
-  
-  private Number computeDelta(DefaultHashMap statsMap, String name,
-      Number currentValue) {
+
+
+  private Number computeDelta(DefaultHashMap statsMap, String name, Number currentValue) {
-      Number prevValue = statsMap.get(StatsKey.LRU_DESTROYS)
-          .longValue();
+      Number prevValue = statsMap.get(StatsKey.LRU_DESTROYS).longValue();
-      Number prevValue = statsMap.get(StatsKey.DISK_SPACE)
-          .longValue();
+      Number prevValue = statsMap.get(StatsKey.DISK_SPACE).longValue();
-    
+
-    
+
-    
+
-    
+
- 
+
-  
-  public long getDiskSpace(){
+
+  public long getDiskSpace() {
-    
+
-  
- 
+
+

UPD66 UPD66 UPD66 UPD66