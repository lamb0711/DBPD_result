Merge branch 'release/1.5.0'

-import static org.apache.geode.distributed.ConfigurationProperties.*;
+import static org.apache.geode.distributed.ConfigurationProperties.DISABLE_TCP;
+import static org.apache.geode.distributed.ConfigurationProperties.LOCATORS;
+import static org.apache.geode.distributed.ConfigurationProperties.MCAST_ADDRESS;
+import static org.apache.geode.distributed.ConfigurationProperties.MCAST_PORT;
-import java.util.*;
-import java.util.concurrent.*;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.Set;
+import java.util.StringTokenizer;
+import java.util.UUID;
+import java.util.concurrent.Callable;
+import java.util.concurrent.CancellationException;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.Future;
+import java.util.concurrent.FutureTask;
-import org.apache.geode.admin.*;
+import org.apache.geode.admin.AdminException;
+import org.apache.geode.admin.AlertLevel;
+import org.apache.geode.admin.BackupStatus;
+import org.apache.geode.admin.CacheServer;
+import org.apache.geode.admin.CacheServerConfig;
+import org.apache.geode.admin.CacheVm;
+import org.apache.geode.admin.ConfigurationParameter;
+import org.apache.geode.admin.DistributedSystemConfig;
+import org.apache.geode.admin.DistributionLocator;
+import org.apache.geode.admin.DistributionLocatorConfig;
+import org.apache.geode.admin.GemFireHealth;
+import org.apache.geode.admin.ManagedEntity;
+import org.apache.geode.admin.ManagedEntityConfig;
+import org.apache.geode.admin.OperationCancelledException;
+import org.apache.geode.admin.RuntimeAdminException;
+import org.apache.geode.admin.SystemMember;
+import org.apache.geode.admin.SystemMemberCacheListener;
+import org.apache.geode.admin.SystemMembershipEvent;
+import org.apache.geode.admin.SystemMembershipListener;
-import org.apache.geode.distributed.internal.*;
+import org.apache.geode.distributed.internal.ClusterDistributionManager;
+import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.distributed.internal.InternalLocator;
-import org.apache.geode.internal.admin.*;
-import org.apache.geode.internal.admin.remote.*;
+import org.apache.geode.internal.admin.ApplicationVM;
+import org.apache.geode.internal.admin.GemFireVM;
+import org.apache.geode.internal.admin.GfManagerAgent;
+import org.apache.geode.internal.admin.GfManagerAgentConfig;
+import org.apache.geode.internal.admin.GfManagerAgentFactory;
+import org.apache.geode.internal.admin.SSLConfig;
+import org.apache.geode.internal.admin.remote.CompactRequest;
+import org.apache.geode.internal.admin.remote.DistributionLocatorId;
+import org.apache.geode.internal.admin.remote.MissingPersistentIDsRequest;
+import org.apache.geode.internal.admin.remote.PrepareRevokePersistentIDRequest;
+import org.apache.geode.internal.admin.remote.RemoteApplicationVM;
+import org.apache.geode.internal.admin.remote.RemoteTransportConfig;
+import org.apache.geode.internal.admin.remote.RevokePersistentIDRequest;
+import org.apache.geode.internal.admin.remote.ShutdownAllRequest;
-    DM dm = this.getDistributionManager();
+    DistributionManager dm = this.getDistributionManager();
-        // this.logger.info("DEBUG: getSystemMemberApplications: " + future);
-            // this.logger.info("DEBUG: cancelled: " + future, ex);
-            // this.logger.info("DEBUG: executed: " + future);
-      // if (!isConnected()) {
-      // throw new IllegalStateException(this + " is not connected");
-      // }
-      // Assert.assertTrue(thisAdminDS == this);
-  public DM getDistributionManager() {
+  public DistributionManager getDistributionManager() {
-      // this.logger.info("DEBUG: nodeJoined: " + vm.getId(), new RuntimeException("STACK"));
-        // this.logger.info("DEBUG: no existing member: " + vm.getId());
-        // try {
-        // } catch (AdminException ex) {
-        // String s = "Could not create a SystemMember for " + vm;
-        // this.logger.warning(s, ex);
-        // }
-
-            // this.logger.info("DEBUG: run cancelled: " + future, ex);
-            // this.logger.info("DEBUG: run executed: " + future, ex);
-        // } else {
-        // this.logger.info("DEBUG: found existing member: " + member);
-
-      // StringBuffer sb = new StringBuffer();
-      // sb.append("File 1: ");
-      // sb.append(file1);
-      // sb.append("\nFile 2: ");
-      // sb.append(file2);
-      // sb.append("\n Absolute 1: ");
-      // sb.append(file1.getAbsoluteFile());
-      // sb.append("\n Absolute 2: ");
-      // sb.append(file2.getAbsoluteFile());
-      // sb.append("\n Canonical 1: ");
-      // sb.append(file1.getCanonicalFile());
-      // sb.append("\n Canonical 2: ");
-      // sb.append(file2.getCanonicalFile());
-      // logger.info(sb.toString());
-
-    // this.logger.info("DEBUG: removeSystemMember: " + internalId, new RuntimeException("STACK"));
-
-            // this.logger.info("DEBUG: removeSystemMember cs cancelling: " + future);
-            // this.logger.info("DEBUG: removeSystemMember as cancelling: " + future);
-        getMembershipPortRange(), getTcpPort(), DistributionManager.ADMIN_ONLY_DM_TYPE);
+        getMembershipPortRange(), getTcpPort(), ClusterDistributionManager.ADMIN_ONLY_DM_TYPE);
-    DM dm = getDistributionManager();
+    DistributionManager dm = getDistributionManager();
-  public static Set<PersistentID> getMissingPersistentMembers(DM dm) {
+  public static Set<PersistentID> getMissingPersistentMembers(DistributionManager dm) {
-    DM dm = getDistributionManager();
+    DistributionManager dm = getDistributionManager();
-    DM dm = getDistributionManager();
+    DistributionManager dm = getDistributionManager();
-  public static void revokePersistentMember(DM dm, UUID diskStoreID) {
+  public static void revokePersistentMember(DistributionManager dm, UUID diskStoreID) {
-  public static void revokePersistentMember(DM dm, InetAddress host, String directory) {
+  public static void revokePersistentMember(DistributionManager dm, InetAddress host,
+      String directory) {
-    DM dm = getDistributionManager();
+    DistributionManager dm = getDistributionManager();
-  public static Set shutDownAllMembers(DM dm, long timeout) {
+  public static Set shutDownAllMembers(DistributionManager dm, long timeout) {
-    DM dm = getDistributionManager();
+    DistributionManager dm = getDistributionManager();
-  public static BackupStatus backupAllMembers(DM dm, File targetDir, File baselineDir)
-      throws AdminException {
-    return new BackupStatusImpl(BackupUtil.backupAllMembers(dm, targetDir, baselineDir));
+  public static BackupStatus backupAllMembers(DistributionManager dm, File targetDir,
+      File baselineDir) throws AdminException {
+    String baselineDirectory = baselineDir == null ? null : baselineDir.toString();
+    return BackupUtil.backupAllMembers(dm, targetDir.toString(), baselineDirectory);
-    DM dm = getDistributionManager();
+    DistributionManager dm = getDistributionManager();
-  public static Map<DistributedMember, Set<PersistentID>> compactAllDiskStores(DM dm)
-      throws AdminException {
+  public static Map<DistributedMember, Set<PersistentID>> compactAllDiskStores(
+      DistributionManager dm) throws AdminException {

