Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingThread;
-  /**
-   * The thread group in which threads launched by this system controller reside.
-   */
-  private final ThreadGroup threadGroup;
-
-    this.threadGroup =
-        LoggingThreadGroup.createThreadGroup("ManagedEntityController threads", logger);
-          LocalizedStrings.ManagedEntityController_EXECUTION_COMMAND_IS_EMPTY.toLocalizedString());
+          "Execution command is empty");
-    logger.info(LocalizedMessage.create(
-        LocalizedStrings.ManagedEntityController_EXECUTING_REMOTE_COMMAND_0_IN_DIRECTORY_1,
-        new Object[] {command, workingDir}));
+    logger.info("Executing remote command: {} in directory {}",
+        command, workingDir);
-      logger.fatal(LocalizedMessage
-          .create(LocalizedStrings.ManagedEntityController_WHILE_EXECUTING_0, command), e);
+      logger.fatal("While executing " + command, e);
-    logger.info(
-        LocalizedMessage.create(LocalizedStrings.ManagedEntityController_RESULT_OF_EXECUTING_0_IS_1,
-            new Object[] {command, Integer.valueOf(retCode)}));
-    logger.info(LocalizedMessage.create(LocalizedStrings.ManagedEntityController_OUTPUT_OF_0_IS_1,
-        new Object[] {command, output}));
+    logger.info("Result of executing {} is {}", command, Integer.valueOf(retCode));
+    logger.info("Output of {} is {}", command, output);
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.ManagedEntityController_REMOTE_EXECUTION_OF_0_FAILED, command));
+      logger.warn("Remote execution of {} failed.", command);
-          LocalizedStrings.ManagedEntityController_A_REMOTE_COMMAND_MUST_BE_SPECIFIED_TO_OPERATE_ON_A_MANAGED_ENTITY_ON_HOST_0
-              .toLocalizedString(host));
+          String.format(
+              "A remote command must be specified to operate on a managed entity on host %s",
+              host));
-    Thread start = new Thread(this.threadGroup, new Runnable() {
-      public void run() {
-        execute(command, entity);
-      }
-    }, "Start " + entity.getEntityType());
+    Thread start = new LoggingThread("Start " + entity.getEntityType(),
+        false, () -> execute(command, entity));
-    Thread stop = new Thread(this.threadGroup, new Runnable() {
-      public void run() {
-        execute(command, entity);
-      }
-    }, "Stop " + entity.getEntityType());
+    Thread stop = new LoggingThread("Stop " + entity.getEntityType(),
+        false, () -> execute(command, entity));
-          LocalizedStrings.ManagedEntityController_COULD_NOT_DETERMINE_IF_MANAGED_ENTITY_WAS_RUNNING_0
-              .toLocalizedString(output));
+          String.format("Could not determine if managed entity was running: %s",
+              output));

UPD40 MOV43 MOV43 INS45 INS42 INS42 INS45 INS42 MOV32 INS45 INS42 INS42 MOV41 INS14 MOV41 INS43 INS9 INS86 UPD43 MOV43 MOV27 INS9 INS86 INS45 INS45 MOV42 INS42 MOV32 UPD42 MOV32 INS27 UPD42 INS42 INS45 INS45 INS42 UPD42 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL45 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL43 DEL83 DEL39 DEL42 DEL21 DEL8 DEL31 DEL1 DEL14 DEL42 DEL43 DEL52 DEL42 DEL22 DEL83 DEL39 DEL42 DEL21 DEL8 DEL31 DEL1 DEL14 DEL14 DEL40