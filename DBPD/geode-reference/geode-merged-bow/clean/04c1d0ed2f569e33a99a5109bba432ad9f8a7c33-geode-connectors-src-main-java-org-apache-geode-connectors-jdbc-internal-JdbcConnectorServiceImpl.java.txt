GEODE-5935: move jdbc xml mapping to be in a region  (#2739)

The jdbc region-mapping xml element is now jdbc:mapping.
It no longer has a "region" attribute since it is nested in a region.
Creating a jdbc-mapping requires that the region already exists.
The jdbc:mapping element is now nested in a region element instead of the cache element.
The old connector-service element has been completely removed.
Some of the jdbc-mapping gfsh commands now require at least one server to be running.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen21@apache.org>
Co-authored-by: Ben Ross @BenjaminPerryRoss 

-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
-  private final Map<String, ConnectorService.RegionMapping> mappingsByRegion =
+  private final Map<String, RegionMapping> mappingsByRegion =
-  public Set<ConnectorService.RegionMapping> getRegionMappings() {
-    Set<ConnectorService.RegionMapping> regionMappings = new HashSet<>();
+  public Set<RegionMapping> getRegionMappings() {
+    Set<RegionMapping> regionMappings = new HashSet<>();
-  public void createRegionMapping(ConnectorService.RegionMapping mapping)
+  public void createRegionMapping(RegionMapping mapping)
-    ConnectorService.RegionMapping existing =
+    RegionMapping existing =
-  public void replaceRegionMapping(ConnectorService.RegionMapping alteredMapping)
+  public void replaceRegionMapping(RegionMapping alteredMapping)
-    ConnectorService.RegionMapping existingMapping =
+    RegionMapping existingMapping =
-  public ConnectorService.RegionMapping getMappingForRegion(String regionName) {
+  public RegionMapping getMappingForRegion(String regionName) {

UPD40 UPD74 UPD74 UPD43 UPD43 UPD43 UPD43 UPD43 INS42 INS42 INS42 UPD74 INS42 UPD43 INS42 UPD43 UPD43 INS42 INS42 INS42 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40