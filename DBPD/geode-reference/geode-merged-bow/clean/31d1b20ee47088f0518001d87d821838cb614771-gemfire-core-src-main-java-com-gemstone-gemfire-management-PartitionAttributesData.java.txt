Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

-  private int redundantCopies;
-  private long totalMaxMemory;
+  private final int redundantCopies;
+  private final long totalMaxMemory;
-  private int totalNumBuckets;
-  private int localMaxMemory;
-  private String colocatedWith;
-  private String partitionResolver;
-  private long recoveryDelay;
-  private long startupRecoveryDelay;
-  private String[] partitionListeners;
+  private final int totalNumBuckets;
+  private final int localMaxMemory;
+  private final String colocatedWith;
+  private final String partitionResolver;
+  private final long recoveryDelay;
+  private final long startupRecoveryDelay;
+  private final String[] partitionListeners;
-  @ConstructorProperties( { "redundantCopies", "totalMaxMemory",
-      "totalNumBuckets", "localMaxMemory", "colocatedWith",
-      "partitionResolver", "recoveryDelay", "startupRecoveryDelay",
-      "partitionListeners" })
-  public PartitionAttributesData(int redundantCopies, long totalMaxMemory,
-      int totalNumBuckets, int localMaxMemory, String colocatedWith,
-      String partitionResolver, long recoveryDelay, long startupRecoveryDelay,
-      String[] partitionListeners) {
+  /**
+   * This constructor is to be used by internal JMX framework only. User should
+   * not try to create an instance of this class.
+   */
+  @ConstructorProperties({ "redundantCopies", "totalMaxMemory", "totalNumBuckets", "localMaxMemory", "colocatedWith", "partitionResolver",
+      "recoveryDelay", "startupRecoveryDelay", "partitionListeners" })
+  public PartitionAttributesData(int redundantCopies, long totalMaxMemory, int totalNumBuckets, int localMaxMemory, String colocatedWith,
+      String partitionResolver, long recoveryDelay, long startupRecoveryDelay, String[] partitionListeners) {
-   }
+  }
+  /**
+   * String representation of PartitionAttributesData
+   */
-    return "PartitionAttributesData [colocatedWith=" + colocatedWith
-        + ", localMaxMemory=" + localMaxMemory + ", partitionListeners="
-        + Arrays.toString(partitionListeners) + ", partitionResolver="
-        + partitionResolver + ", recoveryDelay=" + recoveryDelay
-        + ", redundantCopies=" + redundantCopies + ", startupRecoveryDelay="
-        + startupRecoveryDelay + ", totalMaxMemory=" + totalMaxMemory
-        + ", totalNumBuckets=" + totalNumBuckets + "]";
+    StringBuilder sb = new StringBuilder();
+    sb.append("PartitionAttributesData [colocatedWith=").append(colocatedWith);
+    sb.append(", localMaxMemory=").append(localMaxMemory);
+    sb.append(", partitionListeners=").append(Arrays.toString(partitionListeners));
+    sb.append(", partitionResolver=").append(partitionResolver);
+    sb.append(", recoveryDelay=").append(recoveryDelay);
+    sb.append(", redundantCopies=").append(redundantCopies);
+    sb.append(", startupRecoveryDelay=").append(startupRecoveryDelay);
+    sb.append(", totalMaxMemory=").append(totalMaxMemory);
+    sb.append(", totalNumBuckets=").append(totalNumBuckets + "]");
+    return sb.toString();

INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS29 INS29 INS65 INS65 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS66 INS66 INS66 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS14 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 MOV32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS43 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 MOV42 MOV45 INS42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL41