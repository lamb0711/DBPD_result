GEODE-5971: Refactor durable client commands to extend GfshCommand (#2858)


-import org.apache.geode.management.internal.cli.domain.SubscriptionQueueSizeResult;
-    String durableClientId = null, cqName = null;
-    SubscriptionQueueSizeResult result = new SubscriptionQueueSizeResult(memberNameOrId);
+    String durableClientId = args[0];
+    String cqName = args[1];
-    durableClientId = args[0];
-    cqName = args[1];
+    context.getResultSender()
+        .lastResult(createFunctionResult(memberNameOrId, durableClientId, cqName));
+  }
+
+  private CliFunctionResult createFunctionResult(String memberNameOrId, String durableClientId,
+      String cqName) {
-      if (cacheClientNotifier != null) {
-        CacheClientProxy cacheClientProxy = cacheClientNotifier.getClientProxy(durableClientId);
-        // Check if the client is present or not
-        if (cacheClientProxy != null) {
-          if (cqName != null && !cqName.isEmpty()) {
-            CqService cqService = cacheClientProxy.getCache().getCqService();
-            if (cqService != null) {
-              CqQuery cqQuery =
-                  cqService.getClientCqFromServer(cacheClientProxy.getProxyID(), cqName);
-              if (cqQuery != null) {
-                CqQueryVsdStats cqVsdStats = ((InternalCqQuery) cqQuery).getVsdStats();
-
-                if (cqVsdStats != null) {
-                  long queueSize = cqVsdStats.getNumHAQueuedEvents();
-                  result.setSubscriptionQueueSize(queueSize);
-                } else {
-                  result.setErrorMessage(CliStrings.format(
-                      CliStrings.COUNT_DURABLE_CQ_EVENTS__DURABLE_CQ_STATS_NOT_FOUND,
-                      durableClientId, cqName));
-                }
-              } else {
-                result.setErrorMessage(
-                    CliStrings.format(CliStrings.COUNT_DURABLE_CQ_EVENTS__DURABLE_CQ_NOT_FOUND,
-                        durableClientId, cqName));
-              }
-            } else {
-              result.setErrorMessage(CliStrings.COUNT_DURABLE_CQ_EVENTS__NO__CQS__REGISTERED);
-            }
-          } else {
-            result.setSubscriptionQueueSize(
-                cacheClientNotifier.getDurableClientHAQueueSize(durableClientId));
-          }
-        } else {
-          result.setErrorMessage(
-              CliStrings.format(CliStrings.NO_CLIENT_FOUND_WITH_CLIENT_ID, durableClientId));
-        }
-      } else {
-        result.setErrorMessage(CliStrings.NO_CLIENT_FOUND);
+      if (cacheClientNotifier == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.NO_CLIENT_FOUND);
+
+      CacheClientProxy cacheClientProxy = cacheClientNotifier.getClientProxy(durableClientId);
+      // Check if the client is present or not
+      if (cacheClientProxy == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.format(CliStrings.NO_CLIENT_FOUND_WITH_CLIENT_ID, durableClientId));
+      }
+
+      if (cqName == null || cqName.isEmpty()) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.OK,
+            Integer.toString(cacheClientNotifier.getDurableClientHAQueueSize(durableClientId)));
+      }
+
+      CqService cqService = cacheClientProxy.getCache().getCqService();
+      if (cqService == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.COUNT_DURABLE_CQ_EVENTS__NO__CQS__REGISTERED);
+      }
+
+      CqQuery cqQuery = cqService.getClientCqFromServer(cacheClientProxy.getProxyID(), cqName);
+      if (cqQuery == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.format(CliStrings.COUNT_DURABLE_CQ_EVENTS__DURABLE_CQ_NOT_FOUND,
+                durableClientId, cqName));
+      }
+
+      CqQueryVsdStats cqVsdStats = ((InternalCqQuery) cqQuery).getVsdStats();
+
+      if (cqVsdStats == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.format(
+                CliStrings.COUNT_DURABLE_CQ_EVENTS__DURABLE_CQ_STATS_NOT_FOUND,
+                durableClientId, cqName));
+      }
+
+      long queueSize = cqVsdStats.getNumHAQueuedEvents();
+      return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.OK,
+          Long.toString(queueSize));
-      result.setExceptionMessage(e.getMessage());
-    } finally {
-      context.getResultSender().lastResult(result);
+      return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+          e.getMessage());
-
-  @Override
-  public String getId() {
-    return GetSubscriptionQueueSizeFunction.class.getName();
-  }
-

MOV31 MOV78 INS39 INS42 MOV44 INS8 UPD83 INS43 INS42 INS44 INS44 INS44 MOV8 MOV60 MOV60 MOV60 INS60 INS60 INS21 UPD42 MOV42 INS43 INS42 INS43 INS42 UPD43 MOV43 UPD42 MOV42 INS54 MOV43 INS59 INS43 INS59 INS32 UPD42 MOV42 INS42 UPD42 MOV8 INS12 INS42 MOV2 MOV42 INS42 MOV2 MOV32 INS42 INS32 MOV60 INS25 MOV60 MOV25 INS25 MOV60 INS25 MOV60 INS25 MOV60 INS25 MOV60 INS41 MOV44 INS8 INS42 INS42 INS42 UPD42 MOV42 UPD27 MOV27 INS8 UPD27 UPD27 MOV27 MOV8 INS27 MOV8 INS27 MOV8 INS27 MOV8 INS14 INS43 INS42 INS41 UPD42 INS41 UPD42 INS41 UPD27 MOV32 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS43 INS42 INS40 INS32 INS42 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS42 INS42 INS42 INS42 INS43 INS42 INS40 MOV32 INS43 INS42 INS40 INS40 INS43 INS42 INS40 MOV32 INS43 INS42 INS40 MOV32 INS43 INS42 INS40 INS40 INS43 INS42 INS40 MOV32 INS43 INS42 INS40 MOV32 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL78 DEL42 DEL42 DEL43 DEL57 DEL32 DEL41 DEL8 DEL42 DEL33 DEL27 DEL32 DEL21 DEL8 DEL25 DEL38 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL39 DEL42 DEL42 DEL33 DEL59 DEL42 DEL33 DEL59 DEL60 DEL43 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8