Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-   * The monitor used to monitor load on this bridge server and distribute load to the locators
+   * The monitor used to monitor load on this cache server and distribute load to the locators
-   * Needed because this guy is an advisee
+   * Needed because this server is an advisee
-   * Checks to see whether or not this bridge server is running. If so, an
+   * Checks to see whether or not this cache server is running. If so, an
-          LocalizedStrings.CacheServerImpl_A_CACHE_SERVERS_CONFIGURATION_CANNOT_BE_CHANGED_ONCE_IT_IS_RUNNING
-              .toLocalizedString());
+          "A cache server's configuration cannot be changed once it is running.");
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.CacheServerImpl_FORCING_NOTIFYBYSUBSCRIPTION_TO_SUPPORT_DYNAMIC_REGIONS));
+        logger.info("Forcing notifyBySubscription to support dynamic regions");
-        this.tcpNoDelay, serverConnectionFactory);
+        this.tcpNoDelay, serverConnectionFactory, 120000);
-    this.cache.getLoggerI18n()
-        .config(LocalizedStrings.CacheServerImpl_CACHESERVER_CONFIGURATION___0, getConfig());
+    this.cache.getLogger()
+        .config(String.format("CacheServer Configuration:  %s", getConfig()));
-     * If the stopped bridge server is restarted, we'll need to re-register the client membership
+     * If the stopped cache server is restarted, we'll need to re-register the client membership
-   * Gets the address that this bridge server can be contacted on from external processes.
+   * Gets the address that this cache server can be contacted on from external processes.
-        String s = "A bridge server's bind address is only available if it has been started";
+        String s = "A cache server's bind address is only available if it has been started";
-      cache.getLoggerI18n()
-          .warning(LocalizedStrings.CacheServerImpl_CACHESERVER_ERROR_CLOSING_LOAD_MONITOR, e);
+      cache.getLogger()
+          .warning("CacheServer - Error closing load monitor", e);
-      cache.getLoggerI18n()
-          .warning(LocalizedStrings.CacheServerImpl_CACHESERVER_ERROR_CLOSING_ADVISOR, e);
+      cache.getLogger()
+          .warning("CacheServer - Error closing advisor", e);
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.CacheServerImpl_CACHESERVER_ERROR_CLOSING_ACCEPTOR_MONITOR), e);
+      logger.warn("CacheServer - Error closing acceptor monitor", e);
-          LocalizedStrings.CacheServerImpl__0_INVALID_EVICTION_POLICY.toLocalizedString(ePolicy));
+          String.format("%s Invalid eviction policy", ePolicy));
-   * Returns an array of all the groups of this bridge server. This includes those from the groups
+   * Returns an array of all the groups of this cache server. This includes those from the groups
-          LocalizedStrings.CacheServerImpl_MUST_BE_RUNNING.toLocalizedString());
+          "The cache server must be running to use this operation");

UPD66 UPD66 UPD66 UPD66 UPD66 INS32 INS34 UPD42 INS42 INS42 INS45 MOV32 INS45 INS45 INS45 INS45 INS45 INS45 UPD45 UPD42 UPD42 UPD42 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL40 DEL40 DEL42 DEL42 DEL40 DEL32 DEL40 DEL40 DEL42 DEL32