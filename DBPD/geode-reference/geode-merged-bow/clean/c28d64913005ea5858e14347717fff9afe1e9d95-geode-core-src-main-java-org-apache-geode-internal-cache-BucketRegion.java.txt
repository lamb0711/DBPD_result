Merge branch 'release/1.4.0'

+import java.io.DataOutput;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.*;
+import java.util.concurrent.atomic.AtomicLong;
+import java.util.concurrent.locks.Lock;
+
+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.internal.cache.event.EventSequenceNumberHolder;
+import org.apache.geode.internal.cache.event.EventSequenceNumberHolder;
-import org.apache.logging.log4j.Logger;
-
-import java.io.DataOutput;
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.*;
-import java.util.concurrent.atomic.AtomicLong;
-import java.util.concurrent.locks.Lock;
- * 
+ *
- * 
+ *
-     * 
+     *
-   * 
-   * @param keys
+   *
-   * 
-   * @param keys
-              logger.trace("LockKeys: remove key {}, notifyAll for {}. It waited", keys[i],
+              logger.trace("LockKeys: remove key {}, notifyAll for {}. It waited {}", keys[i],
-   * 
-   * @param keys
-              logger.debug("{} interrupted while waiting for {}", title, foundLock, e.getMessage());
+              logger.debug("{} interrupted while waiting for {}", title, foundLock);
-            logger.debug("{} waited {} ms to lock", title, waitTime, foundLock);
+            logger.debug("{} waited {} ms to lock {}", title, waitTime, foundLock);
-   * 
-   * @param l
-
-   * 
-   * @param event
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
-   * @param key
-   * @param updateStats
+   *
-   * 
-   * @param keyInfo
-   * @param generateCallbacks
+   *
-   * @param returnTombstones TODO
-   * 
+   *
-   * 
-   * 
+   *
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-    Set failures = Collections.EMPTY_SET;
+    Set failures = Collections.emptySet();
-   * 
+   *
-   * 
+   *
-      return Collections.EMPTY_SET;
+      return Collections.emptySet();
-  boolean cacheWriteBeforeDestroy(EntryEventImpl event, Object expectedOldValue)
+  public boolean cacheWriteBeforeDestroy(EntryEventImpl event, Object expectedOldValue)
-   * 
+   *
-   * 
+   *
-    return calcMemSize(regionEntry._getValue()); // OFFHEAP _getValue ok
+    return calcMemSize(regionEntry.getValue()); // OFFHEAP _getValue ok
-  int updateSizeOnEvict(Object key, int oldSize) {
+  public int updateSizeOnEvict(Object key, int oldSize) {
-  };
+  }
-  void incNumOverflowOnDisk(long delta) {
+  public void incNumOverflowOnDisk(long delta) {
-  void incNumOverflowBytesOnDisk(long delta) {
+  public void incNumOverflowBytesOnDisk(long delta) {
-  void incNumEntriesInVM(long delta) {
+  public void incNumEntriesInVM(long delta) {
-

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS83 INS83 INS83 INS83 INS83 INS32 INS42 INS42 INS32 UPD42 INS42 INS42 UPD45 UPD45 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL32 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL40 DEL40