GEODE-6822: Deploying jars only creates new classloader for the newly deployed jar (#3537)

  * Deserialized objects of classes unrelated to the latest deployed jar should now compare correctly after an unrelated new jar is deployed
  * This solution causes each deployed jar to create it's own class loader and chains them together.
  * The class loaders are now child first class loaders and If a class cannot be found, it will search all 'sibling'/other deployed jars
  * When a jar is redeployed (new version), we keep some meta data in a map so we no longer crawl the 'old' jar when possible and only search through the latest version of a specific jar.
  * Java does some caching of classes and in the undeploy scenario, we may still be able to load classes that have been "removed" from the new jar (only if it was already cached by some other class loader). This can happen when we have inter jar dependencies.
  * Geode also caches classes, so whenever a redeploy occurs, the geode class cache gets wiped, and first lookups take a minor performance hit, but subsequent lookups go through geodes caching of the classes (so the for name and class lookups through chaining should have a minimal impact)

-import java.net.URLClassLoader;
+import java.util.Collection;
+import java.util.HashMap;
-  private volatile URLClassLoader classLoaderForDeployedJars;
+  public final HashMap<String, DeployJarChildFirstClassLoader> latestJarNamesToClassLoader =
+      new HashMap<>();
+
+  private volatile DeployJarChildFirstClassLoader leafLoader;
-  void rebuildClassLoaderForDeployedJars() {
-    ClassLoader parent = ClassPathLoader.class.getClassLoader();
-
-    this.classLoaderForDeployedJars = new URLClassLoader(jarDeployer.getDeployedJarURLs(), parent);
-  }
-
+  synchronized void rebuildClassLoaderForDeployedJars() {
+    leafLoader = null;
+    Collection<DeployedJar> deployedJars = jarDeployer.getDeployedJars().values();
+    for (DeployedJar deployedJar : deployedJars) {
+      chainClassloader(deployedJar);
+    }
+  }
+
+  ClassLoader getLeafLoader() {
+    if (leafLoader == null) {
+      return ClassPathLoader.class.getClassLoader();
+    }
+    return leafLoader;
+  }
+
+  synchronized void chainClassloader(DeployedJar jar) {
+    this.leafLoader = new DeployJarChildFirstClassLoader(latestJarNamesToClassLoader,
+        new URL[] {jar.getFileURL()}, jar.getJarName(), getLeafLoader());
+  }
+
+  synchronized void unloadClassloaderForJar(String jarName) {
+    latestJarNamesToClassLoader.put(jarName, null);
+  }
+
+    Class<?> clazz = forName(name, isDebugEnabled);
+    if (clazz != null)
+      return clazz;
+
+    throw new ClassNotFoundException(name);
+  }
+
+  private Class<?> forName(String name, boolean isDebugEnabled) {
+        // Do not look up class definitions in jars that have been unloaded or are old
+        if (classLoader instanceof DeployJarChildFirstClassLoader) {
+          if (((DeployJarChildFirstClassLoader) classLoader).thisIsOld()) {
+            return null;
+          }
+        }
-
-
-    throw new ClassNotFoundException(name);
+    return null;
-    if (classLoaderForDeployedJars != null) {
-      classLoaders.add(classLoaderForDeployedJars);
-    }
-
+    classLoaders.add(getLeafLoader());

MOV26 INS26 INS40 UPD40 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS74 INS59 UPD43 INS83 MOV39 MOV42 INS8 MOV43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS74 INS42 MOV44 MOV43 INS8 UPD83 INS44 INS44 INS43 INS43 INS43 INS42 INS14 UPD42 UPD42 INS21 MOV60 INS70 INS25 INS41 INS43 INS42 MOV21 INS43 INS42 INS21 INS43 INS76 MOV60 MOV25 INS60 INS25 MOV53 INS43 INS42 INS39 INS42 INS41 MOV21 INS42 INS42 INS42 INS74 INS7 INS74 INS44 INS42 INS8 INS27 INS8 INS42 INS42 INS42 INS32 INS42 INS74 INS59 INS27 INS41 INS42 INS33 INS43 INS42 INS33 INS43 INS43 UPD42 INS32 INS43 INS42 INS21 INS42 INS33 INS41 INS42 INS42 INS42 INS33 INS43 INS76 INS42 INS32 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 MOV32 UPD42 UPD43 INS42 INS3 INS32 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 INS5 INS4 INS42 INS42 INS42 INS25 INS43 INS85 INS32 INS62 INS8 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS43 INS25 INS42 INS32 INS8 INS36 INS42 INS41 INS11 INS33 INS43 INS42 INS42 DEL8 DEL31 DEL32 DEL42 DEL42 DEL33 DEL27 DEL8 DEL25