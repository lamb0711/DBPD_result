GEODE-5993: Eliminate race in monitorQueryThread() (#2818)

A race existed between setting low memory in the heap monitor thread,
and checking the low memory state in query monitoring thread.

The cancelation executor was shut down and no longer accepting new
tasks when this race occurred, causing a RejectedExecutionException.

This commit solves that problem by encapsulating the scheduling
behavior using the state design pattern.

Co-authored-by: Ryan McMahon <rmcmahon@pivotal.io>
Co-authored-by: Bill Burcham <bburcham@pivotal.io>

-        new QueryMonitor(() -> (ScheduledThreadPoolExecutor) Executors.newScheduledThreadPool(1),
+        new QueryMonitor((ScheduledThreadPoolExecutor) Executors.newScheduledThreadPool(1),

MOV11 DEL86