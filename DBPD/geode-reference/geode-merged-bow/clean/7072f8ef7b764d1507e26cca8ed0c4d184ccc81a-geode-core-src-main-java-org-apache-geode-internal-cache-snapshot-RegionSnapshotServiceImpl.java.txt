GEODE-3300: Complete and expose parallel export feature for use

This closes #704

-import org.apache.geode.cache.execute.*;
+import org.apache.geode.cache.execute.Function;
+import org.apache.geode.cache.execute.FunctionContext;
+import org.apache.geode.cache.execute.FunctionException;
+import org.apache.geode.cache.execute.FunctionService;
+import org.apache.geode.cache.execute.RegionFunctionContext;
+import org.apache.geode.cache.execute.ResultCollector;
+import org.apache.geode.cache.execute.ResultSender;
-import org.apache.geode.internal.cache.*;
+import org.apache.geode.internal.cache.CachePerfStats;
+import org.apache.geode.internal.cache.CachedDeserializable;
+import org.apache.geode.internal.cache.CachedDeserializableFactory;
+import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.LocalDataSet;
+import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.internal.cache.Token;
-import java.io.*;
+import java.io.File;
+import java.io.FileFilter;
+import java.io.IOException;
+import java.io.InterruptedIOException;
+import java.io.Serializable;
-      return;
-
-    return ((SnapshotOptionsImpl<K, V>) options).isParallelMode()
-        && region.getAttributes().getDataPolicy().withPartitioning()
+    return options.isParallelMode() && region.getAttributes().getDataPolicy().withPartitioning()
+    if (snapshot.isDirectory()) {
+      File[] snapshots =
+          snapshot.listFiles((File f) -> f.getName().endsWith(SNAPSHOT_FILE_EXTENSION));
+      if (snapshots == null) {
+        throw new IOException("Unable to access " + snapshot.getCanonicalPath());
+      } else if (snapshots.length == 0) {
+        throw new IllegalArgumentException("Failure to import snapshot: "
+            + snapshot.getAbsolutePath() + " contains no valid .gfd snapshot files");
+      }
+      for (File snapshotFile : snapshots) {
+        importSnapshotFile(snapshotFile, options, local);
+      }
+    } else if (snapshot.getName().endsWith(SNAPSHOT_FILE_EXTENSION)) {
+      importSnapshotFile(snapshot, options, local);
+    } else {
+      throw new IllegalArgumentException("Failure to import snapshot: "
+          + snapshot.getCanonicalPath() + " is not .gfd file or directory containing .gfd files");
+    }
+  }
+  private void importSnapshotFile(File snapshot, SnapshotOptions<K, V> options, LocalRegion local)
+      throws IOException, ClassNotFoundException {
-            new Object[] {count, bytes, region.getName(), snapshot});
+            new Object[] {count, bytes, region.getName(), snapshot.getAbsolutePath()});
+    if (!snapshot.getName().endsWith(SNAPSHOT_FILE_EXTENSION)) {
+      throw new IllegalArgumentException("Failure to export snapshot: "
+          + snapshot.getCanonicalPath() + " is not a valid .gfd file");
+    }
-        getLoggerI18n().info(LocalizedStrings.Snapshot_EXPORT_END_0_1_2_3,
-            new Object[] {count, sink.getBytesWritten(), region.getName(), snapshot});
+        getLoggerI18n().info(LocalizedStrings.Snapshot_EXPORT_END_0_1_2_3, new Object[] {count,
+            sink.getBytesWritten(), region.getName(), snapshot.getAbsolutePath()});
-

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 UPD40 INS40 INS40 INS40 INS40 INS31 INS83 INS39 INS42 INS44 MOV44 INS44 INS43 INS43 INS8 UPD42 INS44 INS43 INS42 INS74 INS42 INS42 INS42 MOV60 MOV25 INS25 INS43 INS42 INS25 INS42 INS43 INS43 INS43 INS32 INS8 INS25 INS42 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS60 INS25 INS70 INS32 INS8 INS8 INS32 INS53 INS42 INS5 INS59 INS27 INS8 INS25 INS44 INS42 INS8 INS32 INS42 INS42 INS21 INS53 INS32 INS42 INS42 INS14 INS43 INS85 INS42 INS32 INS42 INS33 INS53 INS27 INS8 INS43 INS42 INS21 INS42 INS42 INS32 INS14 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS86 INS14 INS40 INS34 INS53 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS45 INS32 INS45 INS44 INS32 INS43 INS27 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS43 INS42 INS32 INS42 INS42 INS42 INS45 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL41 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL11 DEL36 DEL42 DEL42