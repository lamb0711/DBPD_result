Using System.nanoTime in RemoteDUnitVM

This should be more efficient than System.currentTimeMillis.

+import java.util.concurrent.TimeUnit;
-     logger.info("Received method: " + name);
-     long start = System.currentTimeMillis();
+     long start = start(name);
-     long delta = System.currentTimeMillis() - start;
-     logger.info( "Got result: " + result.toString().trim()  + " from " +
-               name + " (took " + delta + " ms)");
+     logDelta(name, start, result);
+  protected long start(String name) {
+    logger.info("Received method: " + name);
+    long start = System.nanoTime();
+    return start;
+  }
+
+  protected void logDelta(String name, long start, MethExecutorResult result) {
+    long delta = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - start);
+     logger.info( "Got result: " + result.toString() + " from " + name + 
+               " (took " + delta + " ms)");
+  }
+
-     logger.info("Received method: " + name);
-     long start = System.currentTimeMillis();
+     long start = start(name);
-     long delta = System.currentTimeMillis() - start;
-     logger.info( "Got result: " + result.toString() + " from " + name + 
-               " (took " + delta + " ms)");
+     logDelta(name, start, result);
-     logger.info("Received method: " +  name);
-     long start = System.currentTimeMillis();
+     long start = start(name);
-     long delta = System.currentTimeMillis() - start;
-     logger.info( "Got result: " + result.toString() + " from " + name + 
-               " (took " + delta + " ms)");
+     logDelta(name, start, result);
-     logger.info("Received method: " + name);
-     long start = System.currentTimeMillis();
+     long start = start(name);
-     long delta = System.currentTimeMillis() - start;
-     logger.info( "Got result: " + result.toString() + " from " + name +
-               " (took " + delta + " ms)");
+     logDelta(name, start, result);

INS26 INS40 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS21 INS43 INS42 MOV21 INS60 INS41 INS43 INS42 INS39 INS42 INS43 INS42 INS60 MOV21 INS21 INS21 INS21 INS32 INS42 INS39 INS59 INS42 INS42 INS42 INS39 INS59 INS32 INS32 INS32 INS42 UPD42 MOV42 INS42 MOV42 INS42 INS32 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 MOV42 INS42 UPD42 MOV42 INS42 MOV42 UPD42 UPD42 INS42 INS42 INS40 INS42 INS27 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS42 DEL39 DEL42 DEL42 DEL32 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL39 DEL42 DEL32 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL39 DEL42 DEL42 DEL32 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL39 DEL42 DEL42 DEL32 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21