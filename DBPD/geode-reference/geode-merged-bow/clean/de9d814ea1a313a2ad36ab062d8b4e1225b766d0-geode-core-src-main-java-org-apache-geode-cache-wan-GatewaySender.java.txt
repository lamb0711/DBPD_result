GEODE-4429: Remove unnecessary modifiers from interfaces in geode-core:cache

* This excludes those interfaces in geode-core:internal.cache, as covered in GEODE-4430
-  public static final boolean DEFAULT_MANUAL_START = false;
+  boolean DEFAULT_MANUAL_START = false;
-  public static final boolean DEFAULT_DISK_SYNCHRONOUS = true;
+  boolean DEFAULT_DISK_SYNCHRONOUS = true;
-  public static final int DEFAULT_SOCKET_BUFFER_SIZE = 524288;
+  int DEFAULT_SOCKET_BUFFER_SIZE = 524288;
-  public static final int DEFAULT_SOCKET_READ_TIMEOUT = Integer
+  int DEFAULT_SOCKET_READ_TIMEOUT = Integer
-  public static final int MINIMUM_SOCKET_READ_TIMEOUT = 30000;
+  int MINIMUM_SOCKET_READ_TIMEOUT = 30000;
-  public static final int QUEUE_OPLOG_SIZE =
+  int QUEUE_OPLOG_SIZE =
-  public static final boolean DEFAULT_PERSISTENCE_ENABLED = false;
+  boolean DEFAULT_PERSISTENCE_ENABLED = false;
-  public static final boolean DEFAULT_BATCH_CONFLATION = false;
+  boolean DEFAULT_BATCH_CONFLATION = false;
-  public static final int DEFAULT_BATCH_SIZE = 100;
+  int DEFAULT_BATCH_SIZE = 100;
-  public static final int DEFAULT_BATCH_TIME_INTERVAL = 1000;
+  int DEFAULT_BATCH_TIME_INTERVAL = 1000;
-  public static final int DEFAULT_ALERT_THRESHOLD = 0;
+  int DEFAULT_ALERT_THRESHOLD = 0;
-  public static final int DEFAULT_PARALLELISM_REPLICATED_REGION =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX
-          + "cache.gatewaySender.defaultParallelismForReplicatedRegion", 113).intValue();
+  int DEFAULT_PARALLELISM_REPLICATED_REGION = Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX
+      + "cache.gatewaySender.defaultParallelismForReplicatedRegion", 113).intValue();
-  public static final int DEFAULT_DISTRIBUTED_SYSTEM_ID = -1;
+  int DEFAULT_DISTRIBUTED_SYSTEM_ID = -1;
-  public static final int DEFAULT_DISPATCHER_THREADS = 5;
+  int DEFAULT_DISPATCHER_THREADS = 5;
-  public static final boolean DEFAULT_FORWARD_EXPIRATION_DESTROY = false;
+  boolean DEFAULT_FORWARD_EXPIRATION_DESTROY = false;
-  public static final OrderPolicy DEFAULT_ORDER_POLICY = OrderPolicy.KEY;
+  OrderPolicy DEFAULT_ORDER_POLICY = OrderPolicy.KEY;
-  public static final int DEFAULT_MAXIMUM_QUEUE_MEMORY = 100;
+  int DEFAULT_MAXIMUM_QUEUE_MEMORY = 100;
-  public static final long GATEWAY_SENDER_TIMEOUT = Integer
+  long GATEWAY_SENDER_TIMEOUT = Integer
-  public static final String GATEWAY_CONNECTION_READ_TIMEOUT_PROPERTY =
+  String GATEWAY_CONNECTION_READ_TIMEOUT_PROPERTY =
-  public static final int GATEWAY_CONNECTION_IDLE_TIMEOUT = Integer
+  int GATEWAY_CONNECTION_IDLE_TIMEOUT = Integer
-  public static final boolean REMOVE_FROM_QUEUE_ON_EXCEPTION = (System.getProperty(
+  boolean REMOVE_FROM_QUEUE_ON_EXCEPTION = (System.getProperty(
-  public static final boolean EARLY_ACK =
+  boolean EARLY_ACK =
-  public static final boolean DEFAULT_IS_PARALLEL = false;
+  boolean DEFAULT_IS_PARALLEL = false;
-  public static final boolean DEFAULT_IS_FOR_INTERNAL_USE = false;
+  boolean DEFAULT_IS_FOR_INTERNAL_USE = false;
-  public static final int CONNECTION_RETRY_INTERVAL = Integer
+  int CONNECTION_RETRY_INTERVAL = Integer
-  public enum OrderPolicy {
+  enum OrderPolicy {
-  public void start();
+  void start();
-  public void stop();
+  void stop();
-  public void pause();
+  void pause();
-  public void resume();
+  void resume();
-  public void rebalance();
+  void rebalance();
-  public boolean isRunning();
+  boolean isRunning();
-  public boolean isPaused();
+  boolean isPaused();
-  public void addGatewayEventFilter(GatewayEventFilter filter);
+  void addGatewayEventFilter(GatewayEventFilter filter);
-  public void removeGatewayEventFilter(GatewayEventFilter filter);
+  void removeGatewayEventFilter(GatewayEventFilter filter);
-  public GatewayEventSubstitutionFilter getGatewayEventSubstitutionFilter();
+  GatewayEventSubstitutionFilter getGatewayEventSubstitutionFilter();
-  public String getId();
+  String getId();
-  public int getRemoteDSId();
+  int getRemoteDSId();
-  public int getSocketBufferSize();
+  int getSocketBufferSize();
-  public int getSocketReadTimeout();
+  int getSocketReadTimeout();
-  public String getDiskStoreName();
+  String getDiskStoreName();
-  public int getMaximumQueueMemory();
+  int getMaximumQueueMemory();
-  public int getBatchSize();
+  int getBatchSize();
-  public int getBatchTimeInterval();
+  int getBatchTimeInterval();
-  public boolean isBatchConflationEnabled();
+  boolean isBatchConflationEnabled();
-  public boolean isPersistenceEnabled();
+  boolean isPersistenceEnabled();
-  public int getAlertThreshold();
+  int getAlertThreshold();
-  public List<GatewayEventFilter> getGatewayEventFilters();
+  List<GatewayEventFilter> getGatewayEventFilters();
-  public List<GatewayTransportFilter> getGatewayTransportFilters();
+  List<GatewayTransportFilter> getGatewayTransportFilters();
-  public boolean isDiskSynchronous();
+  boolean isDiskSynchronous();
-  public boolean isManualStart();
+  boolean isManualStart();
-  public boolean isParallel();
+  boolean isParallel();
-  public int getDispatcherThreads();
+  int getDispatcherThreads();
-  public OrderPolicy getOrderPolicy();
+  OrderPolicy getOrderPolicy();
-  public int getMaxParallelismForReplicatedRegion();
+  int getMaxParallelismForReplicatedRegion();

DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83