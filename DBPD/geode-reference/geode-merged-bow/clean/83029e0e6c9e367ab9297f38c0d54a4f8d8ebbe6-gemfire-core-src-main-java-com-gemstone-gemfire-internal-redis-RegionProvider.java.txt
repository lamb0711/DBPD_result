GEODE-223: Handle region create/destroy remote event in Redis adpater

Ignore events where region creation initiated remotely attempts to create a local region reference when the region has already been destroyed. Also, the destruction of a region may be caught the query engine, so I have accounted for that by handling com.gemstone.gemfire.cache.query.RegionNotFoundException. Finally, a the Jedis client timeout has been increased for RedisDistDunitTest to account for concurrent region creation/destruction and an expected exception has been added to not fail over the log scanning. Sometimes when a region is destroyed the PooledMessage Processor will log a regiondestroyed exception, which is ok, but makes the test fail.

closes #16

-  public void createRemoteRegionLocally(ByteArrayWrapper key, RedisDataType type) {
+  public void createRemoteRegionReferenceLocally(ByteArrayWrapper key, RedisDataType type) {
-        // If we cannot get the lock then this remote even may have been initialized
+        // If we cannot get the lock then this remote event may have been initialized
-        // likely we will deadlock just to do the same task, this even can be ignored
+        // likely we will deadlock just to do the same task. This event can be ignored
+          // If r is null, this implies that we are after a create/destroy
+          // simply ignore. Calls to getRegion or getOrCreate will work correctly
+          if (r == null)
+            return;
+          

UPD42 INS25 INS27 INS41 INS42 INS33