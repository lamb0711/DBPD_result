GEODE-11: Make StringQueryProvider DataSerializable

StringQueryProvider will be sent over wire and should be serialized efficiently
using DataSerializableFixedId

https://reviews.apache.org/r/38581/

+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+
-import org.apache.lucene.queryparser.classic.QueryParser;
+import com.gemstone.gemfire.DataSerializer;
+import com.gemstone.gemfire.internal.DataSerializableFixedID;
+import com.gemstone.gemfire.internal.Version;
-public class StringQueryProvider implements LuceneQueryProvider {
+/**
+ * Constructs a Lucene Query object by parsing a search string. The class uses {@link MultiFieldQueryParser}. It sets
+ * searchable fields in a {@link LuceneIndex} as default fields.
+ */
+public class StringQueryProvider implements LuceneQueryProvider, DataSerializableFixedID {
-  private Query luceneQuery;
-  
-  final QueryParser parser;
-  final String query;
+
+  // the following members hold input data and needs to be sent on wire
+  private String query;
+  private String indexName;
+  private String regionPath;
+
+  // the following members hold derived objects and need not be serialized
+  private Query luceneQuery;
+  private LuceneIndex index;
+
+  public StringQueryProvider() {
+    this(null);
+  }
-    String[] fields = null;
-    
+    this.index = index;
-      fields = index.getFieldNames();
+      this.indexName = index.getName();
+      this.regionPath = index.getRegionPath();
-    parser = new MultiFieldQueryParser(fields, new SimpleAnalyzer());
-  
+
+      String[] fields = null;
+      if (index != null) {
+        fields = index.getFieldNames();
+      } else {
+        // TODO get index from lucene query service
+      }
+
+      MultiFieldQueryParser parser = new MultiFieldQueryParser(fields, new SimpleAnalyzer());
+
+  /**
+   * @return the query string used to construct this query provider
+   */
+  public String getQueryString() {
+    return query;
+  }
+
+  /**
+   * @return name of the index on which this query will be executed
+   */
+  public String getIndexName() {
+    return indexName;
+  }
+
+  /**
+   * @return path of the region on which this query will be executed
+   */
+  public String getRegionPath() {
+    return regionPath;
+  }
+
+  @Override
+  public Version[] getSerializationVersions() {
+    return null;
+  }
+
+  @Override
+  public int getDSFID() {
+    return LUCENE_STRING_QUERY_PROVIDER;
+  }
+
+  @Override
+  public void toData(DataOutput out) throws IOException {
+    DataSerializer.writeString(query, out);
+    DataSerializer.writeString(index.getName(), out);
+    DataSerializer.writeString(index.getRegionPath(), out);
+  }
+
+  @Override
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
+    query = DataSerializer.readString(in);
+    this.indexName = DataSerializer.readString(in);
+    this.regionPath = DataSerializer.readString(in);
+  }

MOV26 INS26 INS26 INS26 INS26 INS26 MOV23 MOV23 INS40 INS40 INS40 UPD40 INS40 INS40 INS29 INS43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS65 INS42 UPD83 UPD83 UPD43 INS83 INS43 INS59 INS83 INS43 INS59 MOV83 INS42 INS8 UPD83 MOV83 INS42 MOV44 MOV44 INS8 MOV78 INS83 MOV43 INS42 MOV43 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS78 INS83 INS5 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS66 INS65 INS66 INS66 INS65 INS66 UPD42 UPD42 INS42 INS42 INS42 INS42 INS17 MOV21 INS21 INS25 INS25 MOV41 INS65 INS42 INS41 INS65 INS42 INS41 INS65 INS42 INS41 INS42 INS43 INS85 INS41 INS42 INS41 INS42 UPD43 MOV43 UPD42 MOV42 INS42 MOV21 INS21 INS21 INS42 INS43 INS42 UPD42 MOV42 INS42 INS21 INS21 INS21 INS42 INS42 INS33 INS7 UPD27 MOV27 INS8 INS27 MOV8 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS33 INS42 UPD42 INS32 INS32 INS42 INS7 INS7 INS7 INS22 INS42 UPD42 MOV21 INS21 INS42 INS33 INS60 MOV54 UPD42 UPD42 INS42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS22 INS32 INS22 INS32 INS52 INS42 INS7 INS8 INS43 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS22 INS22 INS32 INS42 INS42 MOV14 MOV21 INS52 INS42 UPD42 UPD42 INS52 INS42 INS42 INS42 INS43 INS42 INS21 MOV42 INS32 INS42 INS32 INS42 INS42 MOV42 INS42 INS42 MOV27 INS42 INS42 DEL42 DEL42 DEL42 DEL8 DEL25 DEL8 DEL31