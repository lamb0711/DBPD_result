Merge branch 'release/1.0.0-incubating.M1'

- * =========================================================================
- *  Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- *  This product is protected by U.S. and international copyright
- *  and intellectual property laws. Pivotal products are covered by
- *  more patents listed at http://www.pivotal.io/patents.
- * ========================================================================
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-    String passwordToUse           = password;
+    String passwordToUse           = decrypt(password);
-        
+
+        // This is so that SSL termination results in https URLs being returned
+        String query = (url.startsWith("https")) ? "?scheme=https" : "";
+
-        LinkIndex linkIndex = new SimpleHttpRequester(CONNECT_LOCATOR_TIMEOUT_MS).get(url.concat("/index"), LinkIndex.class);
+        LinkIndex linkIndex = new SimpleHttpRequester(CONNECT_LOCATOR_TIMEOUT_MS).get(url.concat("/index").concat(query), LinkIndex.class);
-  private void configureHttpsURLConnection(Map<String, String> sslConfigProps) throws Exception {
+  private String decrypt(String password) {
+    if (password != null) {
+      return PasswordUtil.decrypt(password);
+    }
+    return null;
+  }
+
+private void configureHttpsURLConnection(Map<String, String> sslConfigProps) throws Exception {
-      List<?> gfshHistoryList = gfshHistory.getHistoryList();
-      Iterator<?> it = gfshHistoryList.iterator();
+      //List<?> gfshHistoryList = gfshHistory.getHistoryList();
+      Iterator<?> it = gfshHistory.entries();

INS31 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS25 INS41 INS42 INS27 INS8 INS33 INS32 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS60 UPD42 UPD42 INS43 INS59 INS42 INS42 INS16 INS36 INS45 INS45 INS32 INS32 MOV32 INS42 INS42 INS42 INS42 INS45 DEL42 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60