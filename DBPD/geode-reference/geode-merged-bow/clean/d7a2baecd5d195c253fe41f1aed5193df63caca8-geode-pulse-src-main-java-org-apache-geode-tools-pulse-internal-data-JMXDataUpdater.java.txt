GEODE-7869: Cleanup warnings in geode-pulse

-import java.util.stream.Collectors;
-  private ObjectName MBEAN_OBJECT_NAME_MEMBER_MANAGER;
-  private final String opSignature[] =
+  private final String[] opSignature =
-    this.serverName = server;
+    serverName = server;
-      this.MBEAN_OBJECT_NAME_SYSTEM_DISTRIBUTED =
+      MBEAN_OBJECT_NAME_SYSTEM_DISTRIBUTED =
-      this.MBEAN_OBJECT_NAME_REGION_DISTRIBUTED =
+      MBEAN_OBJECT_NAME_REGION_DISTRIBUTED =
-      this.MBEAN_OBJECT_NAME_MEMBER_MANAGER =
-          new ObjectName(PulseConstants.OBJECT_NAME_MEMBER_MANAGER);
-      this.MBEAN_OBJECT_NAME_MEMBER = new ObjectName(PulseConstants.OBJECT_NAME_MEMBER);
-      this.MBEAN_OBJECT_NAME_STATEMENT_DISTRIBUTED =
+      MBEAN_OBJECT_NAME_MEMBER = new ObjectName(PulseConstants.OBJECT_NAME_MEMBER);
+      MBEAN_OBJECT_NAME_STATEMENT_DISTRIBUTED =
-        logger.info("{}={} & {}={}", resourceBundle.getString("LOG_MSG_HOST"), this.serverName,
-            resourceBundle.getString("LOG_MSG_PORT"), this.port);
-        jmxSerURL = formJMXServiceURLString(this.serverName, this.port);
+        logger.info("{}={} & {}={}", resourceBundle.getString("LOG_MSG_HOST"), serverName,
+            resourceBundle.getString("LOG_MSG_PORT"), port);
+        jmxSerURL = formJMXServiceURLString(serverName, port);
-        Map<String, Object> env = new HashMap<String, Object>();
+        Map<String, Object> env = new HashMap<>();
-          this.conn = JMXConnectorFactory.connect(url, env);
-          this.mbs = this.conn.getMBeanServerConnection();
+          conn = JMXConnectorFactory.connect(url, env);
+          mbs = conn.getMBeanServerConnection();
-      if (this.conn != null) {
+      if (conn != null) {
-          this.conn.close();
+          conn.close();
-        this.conn = null;
+        conn = null;
-    return this.conn;
+    return conn;
-      if (this.conn == null) {
+      if (conn == null) {
-      this.systemMBeans = this.mbs.queryNames(this.MBEAN_OBJECT_NAME_SYSTEM_DISTRIBUTED, null);
-      for (ObjectName sysMBean : this.systemMBeans) {
+      systemMBeans = mbs.queryNames(MBEAN_OBJECT_NAME_SYSTEM_DISTRIBUTED, null);
+      for (ObjectName sysMBean : systemMBeans) {
-          this.mbs.queryNames(this.MBEAN_OBJECT_NAME_REGION_DISTRIBUTED, null);
+          mbs.queryNames(MBEAN_OBJECT_NAME_REGION_DISTRIBUTED, null);
-      for (Iterator<String> it = cluster.getDeletedRegions().iterator(); it.hasNext();) {
-        cluster.removeClusterRegion(it.next());
+      for (String s : cluster.getDeletedRegions()) {
+        cluster.removeClusterRegion(s);
-      Set<ObjectName> memberMBeans = this.mbs.queryNames(this.MBEAN_OBJECT_NAME_MEMBER, null);
+      Set<ObjectName> memberMBeans = mbs.queryNames(MBEAN_OBJECT_NAME_MEMBER, null);
-          this.mbs.queryNames(this.MBEAN_OBJECT_NAME_STATEMENT_DISTRIBUTED, null);
+          mbs.queryNames(MBEAN_OBJECT_NAME_STATEMENT_DISTRIBUTED, null);
-      this.mbs = null;
-      if (this.conn != null) {
+      mbs = null;
+      if (conn != null) {
-          this.conn.close();
+          conn.close();
-        this.conn = null;
+        conn = null;
-    Iterator<String> iterator = cluster.getDeletedMembers().iterator();
-    while (iterator.hasNext()) {
-      String memberKey = iterator.next();
+    for (String memberKey : cluster.getDeletedMembers()) {
-      if (!this.isAddedNotiListner) {
-        this.mbs.addNotificationListener(mbeanName, this, null, new Object());
-        this.isAddedNotiListner = true;
+      if (!isAddedNotiListner) {
+        mbs.addNotificationListener(mbeanName, this, null, new Object());
+        isAddedNotiListner = true;
-      String[] serverCnt = (String[]) (this.mbs.invoke(mbeanName,
+      String[] serverCnt = (String[]) (mbs.invoke(mbeanName,
-      TabularData table = (TabularData) (this.mbs.invoke(mbeanName,
+      TabularData table = (TabularData) (mbs.invoke(mbeanName,
+      @SuppressWarnings("unchecked")
-          this.mbs.getAttributes(mbeanName, PulseConstants.CLUSTER_MBEAN_ATTRIBUTES);
+          mbs.getAttributes(mbeanName, PulseConstants.CLUSTER_MBEAN_ATTRIBUTES);
-      for (int i = 0; i < attributeList.size(); i++) {
+      for (Object o : attributeList) {
-        Attribute attribute = (Attribute) attributeList.get(i);
+        Attribute attribute = (Attribute) o;
-              cluster.setUsedHeapSize((long) 0);
+              cluster.setUsedHeapSize(0);
-              cluster.setTotalBytesOnDisk((long) 0);
+              cluster.setTotalBytesOnDisk(0);
-      throws InstanceNotFoundException, IntrospectionException, ReflectionException, IOException,
-      AttributeNotFoundException, MBeanException {
+      throws InstanceNotFoundException, ReflectionException, IOException {
-        this.mbs.getAttributes(mbeanName, PulseConstants.GATEWAY_MBEAN_ATTRIBUTES);
+        mbs.getAttributes(mbeanName, PulseConstants.GATEWAY_MBEAN_ATTRIBUTES);
-    for (int i = 0; i < attributeList.size(); i++) {
-      Attribute attribute = (Attribute) attributeList.get(i);
+    for (Object o : attributeList) {
+      Attribute attribute = (Attribute) o;
-      if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_PORT)) {
-        gatewayReceiver
-            .setListeningPort(getIntegerAttribute(attribute.getValue(), attribute.getName()));
-      } else if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_EVENTRECEIVEDDATE)) {
-        gatewayReceiver
-            .setLinkThroughput(getDoubleAttribute(attribute.getValue(), attribute.getName()));
-      } else if (attribute.getName()
-          .equals(PulseConstants.MBEAN_ATTRIBUTE_AVEARGEBATCHPROCESSINGTIME)) {
-        gatewayReceiver
-            .setAvgBatchProcessingTime(getLongAttribute(attribute.getValue(), attribute.getName()));
-      } else if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_RUNNING)) {
-        gatewayReceiver.setStatus(getBooleanAttribute(attribute.getValue(), attribute.getName()));
+      switch (attribute.getName()) {
+        case PulseConstants.MBEAN_ATTRIBUTE_PORT:
+          gatewayReceiver
+              .setListeningPort(getIntegerAttribute(attribute.getValue(), attribute.getName()));
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_EVENTRECEIVEDDATE:
+          gatewayReceiver
+              .setLinkThroughput(getDoubleAttribute(attribute.getValue(), attribute.getName()));
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_AVEARGEBATCHPROCESSINGTIME:
+          gatewayReceiver
+              .setAvgBatchProcessingTime(
+                  getLongAttribute(attribute.getValue(), attribute.getName()));
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_RUNNING:
+          gatewayReceiver.setStatus(getBooleanAttribute(attribute.getValue(), attribute.getName()));
+          break;
-      throws InstanceNotFoundException, IntrospectionException, ReflectionException, IOException,
-      AttributeNotFoundException, MBeanException {
+      throws InstanceNotFoundException, ReflectionException, IOException {
-        this.mbs.getAttributes(mbeanName, PulseConstants.GATEWAYSENDER_MBEAN_ATTRIBUTES);
+        mbs.getAttributes(mbeanName, PulseConstants.GATEWAYSENDER_MBEAN_ATTRIBUTES);
-    for (int i = 0; i < attributeList.size(); i++) {
-      Attribute attribute = (Attribute) attributeList.get(i);
+    for (Object o : attributeList) {
+      Attribute attribute = (Attribute) o;
-    } catch (InstanceNotFoundException | ReflectionException | AttributeNotFoundException
-        | IntrospectionException | MBeanException infe) {
+    } catch (InstanceNotFoundException | ReflectionException infe) {
-      throws InstanceNotFoundException, IntrospectionException, ReflectionException, IOException,
-      AttributeNotFoundException, MBeanException {
+      throws InstanceNotFoundException, ReflectionException, IOException {
-        this.mbs.getAttributes(mbeanName, PulseConstants.ASYNC_EVENT_QUEUE_MBEAN_ATTRIBUTES);
+        mbs.getAttributes(mbeanName, PulseConstants.ASYNC_EVENT_QUEUE_MBEAN_ATTRIBUTES);
-    for (int i = 0; i < attributeList.size(); i++) {
-      Attribute attribute = (Attribute) attributeList.get(i);
+    for (Object o : attributeList) {
+      Attribute attribute = (Attribute) o;
-    } catch (InstanceNotFoundException | ReflectionException | AttributeNotFoundException
-        | IntrospectionException | MBeanException infe) {
+    } catch (InstanceNotFoundException | ReflectionException infe) {
-    } catch (InstanceNotFoundException | ReflectionException | MBeanException
-        | AttributeNotFoundException | IntrospectionException infe) {
+    } catch (InstanceNotFoundException | ReflectionException infe) {
-        HashMap<String, Cluster.Client> memberClientsHM = new HashMap<String, Cluster.Client>();
+        HashMap<String, Cluster.Client> memberClientsHM = new HashMap<>();
-            "" + this.mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_PORT));
+            "" + mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_PORT));
-        this.mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_HOSTNAMEFORCLIENTS_ALT);
-        existingMember.setHostnameForClients((String) this.mbs.getAttribute(mbeanName,
+        mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_HOSTNAMEFORCLIENTS_ALT);
+        existingMember.setHostnameForClients((String) mbs.getAttribute(mbeanName,
-            (String) this.mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_BINDADDRESS));
+            (String) mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_BINDADDRESS));
-        CompositeData[] compositeData = (CompositeData[]) (this.mbs.invoke(mbeanName,
+        CompositeData[] compositeData = (CompositeData[]) (mbs.invoke(mbeanName,
-      ArrayList<String> memberNames = new ArrayList<String>(memberNamesTemp);
+      ArrayList<String> memberNames = new ArrayList<>(memberNamesTemp);
-      List<Cluster.RegionOnMember> regionOnMemberList = new ArrayList<Cluster.RegionOnMember>();
-      List<Cluster.RegionOnMember> regionOnMemberListNew = new ArrayList<Cluster.RegionOnMember>();
+      List<Cluster.RegionOnMember> regionOnMemberList = new ArrayList<>();
+      List<Cluster.RegionOnMember> regionOnMemberListNew = new ArrayList<>();
-            new ArrayList<Cluster.RegionOnMember>(Arrays.asList(regionOnMemberNames));
+            new ArrayList<>(Arrays.asList(regionOnMemberNames));
-            AttributeList attributeList = this.mbs.getAttributes(regionOnMemberMBean,
+            AttributeList attributeList = mbs.getAttributes(regionOnMemberMBean,
-            for (int i = 0; i < attributeList.size(); i++) {
-              Attribute attribute = (Attribute) attributeList.get(i);
+            for (Object o : attributeList) {
+              Attribute attribute = (Attribute) o;
-        AttributeList attributeList = this.mbs.getAttributes(regionOnMemberMBean,
+        AttributeList attributeList = mbs.getAttributes(regionOnMemberMBean,
-        for (int i = 0; i < attributeList.size(); i++) {
-          Attribute attribute = (Attribute) attributeList.get(i);
+        for (Object o : attributeList) {
+          Attribute attribute = (Attribute) o;
-      logger.debug("updateRegionOnMembers : Total regions on member in region after update = {}",
+      logger.debug("updateRegionOnMembers : Total regions on member in region {} after update = {}",
-          this.mbs.getAttributes(mbeanName, PulseConstants.REGION_MBEAN_ATTRIBUTES);
+          mbs.getAttributes(mbeanName, PulseConstants.REGION_MBEAN_ATTRIBUTES);
-      for (int i = 0; i < attributeList.size(); i++) {
-        Attribute attribute = (Attribute) attributeList.get(i);
+      for (Object value : attributeList) {
+        Attribute attribute = (Attribute) value;
-      for (int i = 0; i < attributeList.size(); i++) {
+      for (Object o : attributeList) {
-        Attribute attribute = (Attribute) attributeList.get(i);
+        Attribute attribute = (Attribute) o;
-            String memName[] = (String[]) attribute.getValue();
+            String[] memName = (String[]) attribute.getValue();
-            for (int k = 0; k < memName.length; k++) {
-              region.getMemberName().add(memName[k]);
+            for (String s : memName) {
+              region.getMemberName().add(s);
-    if (len < 2 || value.charAt(0) != '"' || value.charAt(len - 1) != '"') {
-      return false;
-    } else {
-      return true;
-    }
+    return len >= 2 && value.charAt(0) == '"' && value.charAt(len - 1) == '"';
-          this.mbs.getAttributes(mbeanName, PulseConstants.STATEMENT_MBEAN_ATTRIBUTES);
+          mbs.getAttributes(mbeanName, PulseConstants.STATEMENT_MBEAN_ATTRIBUTES);
-      for (int i = 0; i < attributeList.size(); i++) {
-        Attribute attribute = (Attribute) attributeList.get(i);
+      for (Object o : attributeList) {
+        Attribute attribute = (Attribute) o;
-    MBeanAttributeInfo[] mbeanAttributes = this.mbs.getMBeanInfo(mbeanName).getAttributes();
-    Set<String> mbeanAttributeNames =
-        Arrays.stream(mbeanAttributes).map(MBeanAttributeInfo::getName).collect(Collectors.toSet());
+    MBeanAttributeInfo[] mbeanAttributes = mbs.getMBeanInfo(mbeanName).getAttributes();
-        this.mbs.getAttributes(mbeanName, mbeanAttributeNames.toArray(new String[0]));
+        mbs.getAttributes(mbeanName,
+            Arrays.stream(mbeanAttributes).map(MBeanAttributeInfo::getName).distinct()
+                .toArray(String[]::new));
-    for (int i = 0; i < attributeList.size(); i++) {
+    for (Object o : attributeList) {
-      Attribute attribute = (Attribute) attributeList.get(i);
+      Attribute attribute = (Attribute) o;
-          String sgValues[] = (String[]) attribute.getValue();
+          String[] sgValues = (String[]) attribute.getValue();
-          for (int k = 0; k < sgValues.length; k++) {
-            member.getServerGroups().add(sgValues[k]);
+          for (String sgValue : sgValues) {
+            member.getServerGroups().add(sgValue);
-        ArrayList<Cluster.Member> memberList = new ArrayList<Cluster.Member>();
+        ArrayList<Cluster.Member> memberList = new ArrayList<>();
-   * function used to handle Float data type if the value for mbean for an attribute is null then
-   * return 0.0 as default value else return the attribute value
-   */
-  private Float getFloatAttribute(Object object, String name) {
-    if (object == null) {
-      return Float.valueOf(0.0f);
-    }
-
-    try {
-      if (!(object.getClass().equals(Float.class))) {
-        logger.info(
-            "************************Unexpected type for attribute: {}; Expected type: {}; Received type: {}************************",
-            name, Float.class.getName(), object.getClass().getName());
-        return Float.valueOf(0.0f);
-      } else {
-        return (Float) object;
-      }
-    } catch (Exception e) {
-      logger.info("Exception occurred: ", e);
-      return Float.valueOf(0.0f);
-    }
-  }
-
-  /**
-      return Integer.valueOf(0);
+      return 0;
-        return Integer.valueOf(0);
+        return 0;
-      return Integer.valueOf(0);
+      return 0;
-      return Long.valueOf(0);
+      return 0L;
-        return Long.valueOf(0);
+        return 0L;
-      return Long.valueOf(0);
+      return 0L;
-      return Double.valueOf(0);
+      return (double) 0;
-        return Double.valueOf(0);
+        return (double) 0;
-      return Double.valueOf(0);
+      return (double) 0;
-          this.mbs.getAttributes(mbeanName, PulseConstants.REGION_MBEAN_ATTRIBUTES);
+          mbs.getAttributes(mbeanName, PulseConstants.REGION_MBEAN_ATTRIBUTES);
-      for (int i = 0; i < attributeList.size(); i++) {
-        Attribute attribute = (Attribute) attributeList.get(i);
+      for (Object value : attributeList) {
+        Attribute attribute = (Attribute) value;
-      for (int i = 0; i < attributeList.size(); i++) {
-        Attribute attribute = (Attribute) attributeList.get(i);
+      for (Object o : attributeList) {
+        Attribute attribute = (Attribute) o;
-        String memberName = notificationSource;
-        Cluster.Member member = cluster.getMembersHMap().get(memberName);
+        Cluster.Member member = cluster.getMembersHMap().get(notificationSource);
-    if (this.mbs != null && this.systemMBeans != null) {
-      Object opParams[] = {queryText, members, limit};
-      for (ObjectName sysMBean : this.systemMBeans) {
+    if (mbs != null && systemMBeans != null) {
+      Object[] opParams = {queryText, members, limit};
+      for (ObjectName sysMBean : systemMBeans) {
-          String resultString = (String) (this.mbs.invoke(sysMBean,
-              PulseConstants.MBEAN_OPERATION_QUERYDATABROWSER, opParams, this.opSignature));
+          String resultString = (String) (mbs.invoke(sysMBean,
+              PulseConstants.MBEAN_OPERATION_QUERYDATABROWSER, opParams, opSignature));
-    String gemfireVersion = "";
-    gemfireVersion = version.substring(startIndex);
+    String gemfireVersion = version.substring(startIndex);

INS5 MOV60 INS43 INS85 INS70 INS70 INS70 INS70 MOV41 INS70 MOV42 INS42 INS44 MOV32 MOV8 MOV43 INS44 INS42 MOV8 MOV43 INS44 INS42 MOV8 INS44 INS42 MOV8 UPD27 MOV27 MOV43 INS44 INS42 MOV8 MOV27 INS12 MOV27 MOV12 MOV27 MOV12 MOV43 INS42 INS70 MOV43 INS42 INS70 INS43 INS42 INS50 INS43 INS42 INS43 INS42 INS70 INS70 UPD27 UPD27 INS70 INS42 INS32 INS43 INS42 MOV44 INS8 INS70 INS70 MOV32 INS42 MOV74 INS44 MOV32 INS8 MOV74 MOV74 MOV5 MOV43 INS79 INS44 INS42 MOV8 INS42 INS42 MOV43 MOV32 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS42 INS42 MOV43 UPD84 INS42 INS42 MOV43 UPD84 UPD84 MOV74 MOV74 MOV43 INS44 INS42 MOV8 INS44 INS42 MOV8 UPD27 UPD27 MOV43 INS44 INS42 MOV8 INS42 INS42 INS42 INS32 UPD42 MOV42 MOV43 INS70 INS34 MOV21 INS41 INS34 INS11 INS44 INS42 MOV8 INS44 INS42 MOV8 INS42 INS42 INS5 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 MOV21 INS42 INS42 INS45 MOV43 INS42 INS40 INS40 INS40 INS40 MOV14 INS70 UPD45 INS43 INS42 INS43 INS42 INS43 INS42 INS42 MOV32 INS42 INS89 MOV5 INS44 INS42 MOV8 INS34 INS34 INS39 INS34 INS11 INS43 INS42 INS43 INS42 MOV43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV5 MOV43 INS42 MOV43 MOV43 INS42 MOV43 INS42 MOV43 INS42 MOV5 UPD74 UPD74 UPD74 MOV43 INS44 INS42 MOV8 INS42 INS42 MOV43 INS42 MOV43 INS70 INS42 INS42 MOV43 UPD42 INS5 MOV43 INS42 MOV43 INS42 INS34 INS34 INS39 INS34 INS42 INS42 MOV43 INS42 MOV43 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 MOV14 INS43 INS42 INS5 INS44 INS42 MOV8 INS43 INS85 INS11 INS42 INS42 UPD74 INS42 INS42 INS42 INS42 MOV43 INS42 MOV44 MOV44 UPD74 MOV43 MOV43 MOV5 UPD74 MOV32 INS42 INS42 MOV43 MOV43 INS42 MOV43 INS42 INS43 INS85 MOV43 INS42 MOV43 INS42 INS42 INS42 UPD74 INS39 INS34 MOV43 INS42 MOV43 INS42 UPD42 MOV43 INS42 INS42 INS42 INS42 INS42 INS70 INS42 INS42 INS42 INS42 INS42 MOV43 INS44 INS42 MOV8 MOV43 INS42 INS42 MOV43 INS34 INS34 INS42 INS43 INS42 INS42 INS42 MOV43 INS42 INS42 MOV43 INS42 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL43 DEL85 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL40 DEL14 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL8 DEL24 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL34 DEL11 DEL39 DEL34 DEL11 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL40 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL40 DEL43 DEL40 DEL43 DEL40 DEL43 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL42 DEL32 DEL85 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL9 DEL8 DEL9 DEL41 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL85 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL34 DEL3 DEL32 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL40 DEL43 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL57 DEL32 DEL36 DEL38 DEL42 DEL42 DEL45 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL11 DEL41 DEL8 DEL25 DEL8 DEL54 DEL8 DEL31 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL34 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL41 DEL8 DEL12 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL24 DEL42 DEL42 DEL59 DEL60 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL85 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL45 DEL42 DEL7 DEL21