GEODE-6156: add --id option to create jdbc-mapping (#2969)


-  public TableMetaDataView getTableMetaDataView(Connection connection, String tableName) {
+  public TableMetaDataView getTableMetaDataView(Connection connection, String tableName,
+      String ids) {
-        k -> computeTableMetaDataView(connection, k));
+        k -> computeTableMetaDataView(connection, k, ids));
-  private TableMetaDataView computeTableMetaDataView(Connection connection, String tableName) {
+  private TableMetaDataView computeTableMetaDataView(Connection connection, String tableName,
+      String ids) {
-        String key = getPrimaryKeyColumnNameFromMetaData(realTableName, metaData);
+        String key = getPrimaryKeyColumnNameFromMetaData(realTableName, metaData, ids);
-  private String getPrimaryKeyColumnNameFromMetaData(String tableName, DatabaseMetaData metaData)
+  private String getPrimaryKeyColumnNameFromMetaData(String tableName, DatabaseMetaData metaData,
+      String ids)
+    if (ids != null && !ids.isEmpty()) {
+      if (!doesColumnExistInTable(tableName, metaData, ids)) {
+        throw new JdbcConnectorException(
+            "The table " + tableName + " does not have a column named " + ids);
+      }
+      return ids;
+    }
+
+  private boolean doesColumnExistInTable(String tableName, DatabaseMetaData metaData,
+      String columnName) throws SQLException {
+    int caseInsensitiveMatches = 0;
+    try (ResultSet columnData = metaData.getColumns(null, null, tableName, "%")) {
+      while (columnData.next()) {
+        String realColumnName = columnData.getString("COLUMN_NAME");
+        if (columnName.equals(realColumnName)) {
+          return true;
+        } else if (columnName.equalsIgnoreCase(realColumnName)) {
+          caseInsensitiveMatches++;
+        }
+      }
+    }
+    if (caseInsensitiveMatches > 1) {
+      throw new JdbcConnectorException(
+          "The table " + tableName + " has more than one column that matches " + columnName);
+    }
+    return caseInsensitiveMatches != 0;
+  }

INS31 INS44 INS44 INS44 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS25 INS41 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS39 INS59 INS58 INS8 INS27 INS8 INS27 INS27 INS38 INS25 INS41 INS42 INS34 INS43 INS59 INS61 INS42 INS34 INS53 INS42 INS34 INS42 INS33 INS32 INS38 INS8 INS42 INS42 INS42 INS32 INS32 INS8 INS14 INS42 INS42 INS42 INS32 INS53 INS42 INS42 INS33 INS33 INS42 INS45 INS42 INS42 INS60 INS25 INS43 INS27 INS42 INS42 INS42 INS42 INS14 INS43 INS59 INS32 INS8 INS25 INS42 INS45 INS42 INS45 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS41 INS32 INS8 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS45 INS9 INS42 INS42 INS42 INS21 INS37 INS42