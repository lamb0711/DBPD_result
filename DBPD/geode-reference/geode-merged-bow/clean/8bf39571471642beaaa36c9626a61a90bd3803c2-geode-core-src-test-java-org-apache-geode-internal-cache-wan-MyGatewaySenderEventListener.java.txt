Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class MyGatewaySenderEventListener implements
-    AsyncEventListener, Serializable {
+public class MyGatewaySenderEventListener implements AsyncEventListener, Serializable {
-	  System.out.println("hitesh got event");
-    synchronized (eventsMap) {		  
-   	 for (AsyncEvent event : events) {
-      	    this.eventsMap.put(event.getKey(), event.getDeserializedValue());
-        }
+    System.out.println("hitesh got event");
+    synchronized (eventsMap) {
+      for (AsyncEvent event : events) {
+        this.eventsMap.put(event.getKey(), event.getDeserializedValue());
+      }
-  public void close() {
-  }
+  public void close() {}
-  
+
-  public boolean equals(Object obj){
-    if(this == obj){
+  public boolean equals(Object obj) {
+    if (this == obj) {
-    if ( !(obj instanceof MyGatewaySenderEventListener) ) return false;
-    MyGatewaySenderEventListener listener = (MyGatewaySenderEventListener)obj;
+    if (!(obj instanceof MyGatewaySenderEventListener))
+      return false;
+    MyGatewaySenderEventListener listener = (MyGatewaySenderEventListener) obj;
-  
+
-  public String toString(){
+  public String toString() {

