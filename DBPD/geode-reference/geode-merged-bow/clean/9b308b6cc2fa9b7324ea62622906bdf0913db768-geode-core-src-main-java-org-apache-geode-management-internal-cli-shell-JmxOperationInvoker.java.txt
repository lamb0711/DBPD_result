GEODE-3096: pulling in refactoring work on HttpOperationInvoker

* Use HttpOperationInvoker to replace RestHttpOperationInvoker and SimpleHttpOperationInvoker
* Use one single ShellCommandController to replace all command controllers
* do not allow execution of commands that require client side file data gathering to be executed only on the locator/server
* deprecate CommandService and CommandStatement
* simplify CommandRequest, delete geode's ClientHttpRequest
* fix tests

-import static org.apache.geode.distributed.ConfigurationProperties.CLUSTER_SSL_PREFIX;
-import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER_SSL_PREFIX;
-
-import org.apache.geode.distributed.internal.DistributionConfig;
-  private String checkforSystemPropertyPrefix(String key) {
-    String returnKey = key;
-    if (key.startsWith("javax.")) {
-      returnKey = key;
-    }
-    if (key.startsWith(CLUSTER_SSL_PREFIX) || key.startsWith(JMX_MANAGER_SSL_PREFIX)
-        || key.startsWith(DistributionConfig.SSL_PREFIX)) {
-      if (key.endsWith("keystore")) {
-        returnKey = Gfsh.SSL_KEYSTORE;
-      } else if (key.endsWith("keystore-password")) {
-        returnKey = Gfsh.SSL_KEYSTORE_PASSWORD;
-      } else if (key.endsWith("ciphers")) {
-        returnKey = Gfsh.SSL_ENABLED_CIPHERS;
-      } else if (key.endsWith("truststore-password")) {
-        returnKey = Gfsh.SSL_TRUSTSTORE_PASSWORD;
-      } else if (key.endsWith("truststore")) {
-        returnKey = Gfsh.SSL_TRUSTSTORE;
-      } else if (key.endsWith("protocols")) {
-        returnKey = Gfsh.SSL_ENABLED_PROTOCOLS;
-      }
-    }
-    return returnKey;
-  }
-
+    Byte[][] binaryData = null;
-      return memberMXBeanProxy.processCommand(commandRequest.getInput(),
-          commandRequest.getEnvironment(), ArrayUtils.toByteArray(commandRequest.getFileData()));
-    } else {
-      return memberMXBeanProxy.processCommand(commandRequest.getInput(),
-          commandRequest.getEnvironment());
+      binaryData = ArrayUtils.toByteArray(commandRequest.getFileData());
+    return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
+        commandRequest.getEnvironment(), binaryData);
-  public String getManagerHost() {
-    return managerHost;
-  }
-
-  public int getManagerPort() {
-    return managerPort;
-  }
-

INS8 INS60 INS25 MOV41 INS5 INS59 MOV32 MOV8 INS43 INS85 INS85 INS42 INS33 INS21 MOV32 UPD42 MOV42 INS42 INS7 UPD42 INS42 MOV32 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL27 DEL42 DEL42 DEL45 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL42 DEL32 DEL8 DEL25 DEL8 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31