GEODE-2995: incorporating even more review feedback

Addressing feedback from Udo and Hitesh
Refactored test locations to match new src layout

Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>
Signed-off-by: Brian Rowe <browe@pivotal.io>

+import java.util.HashMap;
+
+  static final HashMap<Class, BasicTypes.EncodingType> typeToEncodingMap = intializeTypeMap();
+
+  private static HashMap<Class, BasicTypes.EncodingType> intializeTypeMap() {
+    HashMap<Class, BasicTypes.EncodingType> result = new HashMap<>();
+    result.put(Integer.class, BasicTypes.EncodingType.INT);
+    result.put(Byte.class, BasicTypes.EncodingType.BYTE);
+    result.put(Long.class, BasicTypes.EncodingType.LONG);
+    result.put(Float.class, BasicTypes.EncodingType.FLOAT);
+    result.put(Short.class, BasicTypes.EncodingType.SHORT);
+    result.put(byte[].class, BasicTypes.EncodingType.BINARY);
+    result.put(Double.class, BasicTypes.EncodingType.DOUBLE);
+    result.put(String.class, BasicTypes.EncodingType.STRING);
+    result.put(Boolean.class, BasicTypes.EncodingType.BOOLEAN);
+    return result;
+  }
+
-    if (resultValue instanceof Integer) {
-      return BasicTypes.EncodingType.INT;
-    } else if (resultValue instanceof Byte) {
-      return BasicTypes.EncodingType.BYTE;
-    } else if (resultValue instanceof PdxInstance) {
+    if (resultValue instanceof PdxInstance) {
-    } else if (resultValue instanceof Long) {
-      return BasicTypes.EncodingType.LONG;
-    } else if (resultValue instanceof Float) {
-      return BasicTypes.EncodingType.FLOAT;
-    } else if (resultValue instanceof Short) {
-      return BasicTypes.EncodingType.SHORT;
-    } else if (resultValue instanceof byte[]) {
-      return BasicTypes.EncodingType.BINARY;
-    } else if (resultValue instanceof Double) {
-      return BasicTypes.EncodingType.DOUBLE;
-    } else if (resultValue instanceof String) {
-      return BasicTypes.EncodingType.STRING;
-    } else if (resultValue instanceof Boolean) {
-      return BasicTypes.EncodingType.BOOLEAN;
-    throw new UnsupportedEncodingTypeException(
-        "We cannot translate: " + resultValue.getClass() + " into a specific Protobuf Encoding");
+    BasicTypes.EncodingType encodingType = typeToEncodingMap.get(resultValue.getClass());
+    if (encodingType == null) {
+      throw new UnsupportedEncodingTypeException(
+          "We cannot translate: " + resultValue.getClass() + " into a specific Protobuf Encoding");
+    } else {
+      return encodingType;
+    }

INS26 INS40 INS23 INS31 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS42 INS8 INS43 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 MOV25 INS60 INS25 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS74 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS43 INS59 INS27 INS8 MOV8 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS42 INS42 INS57 INS40 INS40 INS42 INS32 INS42 INS33 MOV53 INS42 INS42 INS40 INS74 MOV43 MOV43 MOV43 MOV43 MOV43 MOV5 MOV43 MOV43 MOV43 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL40 DEL41 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL40 DEL42 DEL62 DEL40 DEL41 DEL8 DEL42 DEL62 DEL25 DEL25