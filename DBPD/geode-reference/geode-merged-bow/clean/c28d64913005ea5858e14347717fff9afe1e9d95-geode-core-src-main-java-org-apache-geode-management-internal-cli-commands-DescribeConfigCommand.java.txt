Merge branch 'release/1.4.0'

-import org.apache.geode.management.internal.cli.CliUtil;
-        targetMember = CliUtil.getDistributedMemberByNameOrId(memberNameOrId);
+        targetMember = getMember(memberNameOrId);
-      if (targetMember != null) {
-        ResultCollector<?, ?> rc =
-            CliUtil.executeFunction(getMemberConfigFunction, hideDefaults, targetMember);
-        ArrayList<?> output = (ArrayList<?>) rc.getResult();
-        Object obj = output.get(0);
-        if (obj != null && obj instanceof MemberConfigurationInfo) {
-          MemberConfigurationInfo memberConfigInfo = (MemberConfigurationInfo) obj;
+      ResultCollector<?, ?> rc =
+          executeFunction(getMemberConfigFunction, hideDefaults, targetMember);
+      ArrayList<?> output = (ArrayList<?>) rc.getResult();
+      Object obj = output.get(0);
-          CompositeResultData crd = ResultBuilder.createCompositeResultData();
-          crd.setHeader(
-              CliStrings.format(CliStrings.DESCRIBE_CONFIG__HEADER__TEXT, memberNameOrId));
+      if (obj != null && obj instanceof MemberConfigurationInfo) {
+        MemberConfigurationInfo memberConfigInfo = (MemberConfigurationInfo) obj;
-          List<String> jvmArgsList = memberConfigInfo.getJvmInputArguments();
-          TabularResultData jvmInputArgs = crd.addSection().addSection().addTable();
+        CompositeResultData crd = ResultBuilder.createCompositeResultData();
+        crd.setHeader(CliStrings.format(CliStrings.DESCRIBE_CONFIG__HEADER__TEXT, memberNameOrId));
-          for (String jvmArg : jvmArgsList) {
-            jvmInputArgs.accumulate("JVM command line arguments", jvmArg);
-          }
+        List<String> jvmArgsList = memberConfigInfo.getJvmInputArguments();
+        TabularResultData jvmInputArgs = crd.addSection().addSection().addTable();
-          addSection(crd, memberConfigInfo.getGfePropsSetUsingApi(),
-              "GemFire properties defined using the API");
-          addSection(crd, memberConfigInfo.getGfePropsRuntime(),
-              "GemFire properties defined at the runtime");
-          addSection(crd, memberConfigInfo.getGfePropsSetFromFile(),
-              "GemFire properties defined with the property file");
-          addSection(crd, memberConfigInfo.getGfePropsSetWithDefaults(),
-              "GemFire properties using default values");
-          addSection(crd, memberConfigInfo.getCacheAttributes(), "Cache attributes");
-
-          List<Map<String, String>> cacheServerAttributesList =
-              memberConfigInfo.getCacheServerAttributes();
-
-          if (cacheServerAttributesList != null && !cacheServerAttributesList.isEmpty()) {
-            CompositeResultData.SectionResultData cacheServerSection = crd.addSection();
-            cacheServerSection.setHeader("Cache-server attributes");
-
-            for (Map<String, String> cacheServerAttributes : cacheServerAttributesList) {
-              addSubSection(cacheServerSection, cacheServerAttributes);
-            }
-          }
-          result = ResultBuilder.buildResult(crd);
+        for (String jvmArg : jvmArgsList) {
+          jvmInputArgs.accumulate("JVM command line arguments", jvmArg);
-      } else {
-        ErrorResultData erd = ResultBuilder.createErrorResultData();
-        erd.addLine(CliStrings.format(CliStrings.DESCRIBE_CONFIG__MEMBER__NOT__FOUND,
-            new Object[] {memberNameOrId}));
-        result = ResultBuilder.buildResult(erd);
+        addSection(crd, memberConfigInfo.getGfePropsSetUsingApi(),
+            "GemFire properties defined using the API");
+        addSection(crd, memberConfigInfo.getGfePropsRuntime(),
+            "GemFire properties defined at the runtime");
+        addSection(crd, memberConfigInfo.getGfePropsSetFromFile(),
+            "GemFire properties defined with the property file");
+        addSection(crd, memberConfigInfo.getGfePropsSetWithDefaults(),
+            "GemFire properties using default values");
+        addSection(crd, memberConfigInfo.getCacheAttributes(), "Cache attributes");
+
+        List<Map<String, String>> cacheServerAttributesList =
+            memberConfigInfo.getCacheServerAttributes();
+
+        if (cacheServerAttributesList != null && !cacheServerAttributesList.isEmpty()) {
+          CompositeResultData.SectionResultData cacheServerSection = crd.addSection();
+          cacheServerSection.setHeader("Cache-server attributes");
+
+          for (Map<String, String> cacheServerAttributes : cacheServerAttributesList) {
+            addSubSection(cacheServerSection, cacheServerAttributes);
+          }
+        }
+        result = ResultBuilder.buildResult(crd);
+

MOV8 MOV60 INS54 MOV41 MOV8 MOV12 MOV12 MOV60 MOV25 MOV21 MOV59 MOV32 MOV32 MOV32 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 UPD42 DEL40 DEL26 DEL42 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL33 DEL27 DEL8 DEL25 DEL54 DEL8