Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import com.gemstone.gemfire.cache.query.internal.types.ObjectTypeImpl;
+import com.gemstone.gemfire.cache.query.types.ObjectType;
+import com.gemstone.gemfire.cache.query.Struct;
-  private transient Collection<Collection> resultCollector = new ArrayList<Collection>();
+  private transient List<Collection> resultCollector = new ArrayList<Collection>();
+  private transient boolean isTraceInfoIteration = false;
+  private transient boolean isStructType = false;
+    
+        if(this.isTraceInfoIteration && this.currentResultIterator != null) {
+          this.isTraceInfoIteration = false;
+        }
-    return this.currentResultIterator.next();
+    Object data = this.currentResultIterator.next();
+    boolean isPostGFE_8_1 = this.getSender().getVersionObject().compareTo(Version.GFE_81) > 0 ;
+    //Asif: There is a bug in older versions of GFE such that the query node expects the structs to have
+    // type as ObjectTypes only & not specific types. So the new version needs to send the inaccurate 
+    //struct type for backward compatibility.
+    if(this.isStructType && !this.isTraceInfoIteration && isPostGFE_8_1) {
+      return ((Struct)data).getFieldValues(); 
+    }else if(this.isStructType && !this.isTraceInfoIteration) {
+      Struct s = (Struct)data;
+      ObjectType[] fieldTypes = s.getStructType().getFieldTypes();
+      for(int i = 0; i < fieldTypes.length; ++i) {
+        fieldTypes[i] = new ObjectTypeImpl(Object.class);
+      }
+      return data;
+    }else {
+      return data;
+    }
-    DefaultQuery query = new DefaultQuery(this.queryString, r.getCache());
+    DefaultQuery query = new DefaultQuery(this.queryString, r.getCache(), false);
-
+    boolean isQueryTraced = false;
-
+      isQueryTraced = query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0;
-      if (query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0) {
+      if (isQueryTraced) {
+        this.isTraceInfoIteration = true;
-        this.resultCollector.add(queryTraceList);
+        
-      qp.executeQuery(this.resultCollector);
+      this.isStructType = qp.executeQuery(this.resultCollector);
+      //Add the trace info list object after the NWayMergeResults is created so as to 
+      //exclude it from the sorted collection of NWayMergeResults
+      if(isQueryTraced) {
+        this.resultCollector.add(0,queryTraceList);
+      }
-      if (query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0) {
+      if (isQueryTraced) {
-      if (query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0) {
+      if (isQueryTraced) {

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 UPD74 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 UPD43 INS42 INS9 INS42 INS9 INS60 INS60 INS25 INS60 UPD42 INS43 INS59 INS39 INS59 INS27 INS8 INS25 INS39 INS59 INS42 INS42 MOV32 INS42 INS27 INS22 INS38 INS42 MOV41 INS27 INS8 INS8 INS42 INS9 INS21 INS25 INS32 INS34 INS52 INS42 INS22 INS32 INS22 INS38 INS60 INS60 INS24 INS41 INS41 INS9 INS7 INS42 INS7 INS42 INS8 INS42 INS42 INS25 INS32 INS42 INS40 INS52 INS42 INS36 INS42 INS52 INS42 INS22 INS43 INS59 INS5 INS59 INS58 INS27 INS38 INS8 INS42 INS42 INS42 MOV27 INS21 INS22 MOV32 MOV21 INS27 INS8 INS32 INS42 INS11 INS52 INS42 INS42 INS42 INS11 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS21 INS7 INS52 INS42 INS22 INS27 INS21 INS52 INS42 INS43 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS34 INS7 INS22 INS9 INS34 INS52 INS42 INS22 INS33 INS7 INS42 INS42 INS42 INS42 INS2 INS14 INS52 INS42 INS52 INS42 INS22 INS9 INS42 INS42 INS43 INS57 INS52 INS42 INS42 INS43 INS42 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL40 DEL32 DEL34 DEL27 DEL27 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL40 DEL32 DEL34 DEL27 DEL27