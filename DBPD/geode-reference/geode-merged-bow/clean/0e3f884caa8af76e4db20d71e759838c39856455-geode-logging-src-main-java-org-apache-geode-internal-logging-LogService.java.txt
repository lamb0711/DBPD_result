GEODE-7177: Extract LogService to a separate submodule

- Extracting LogService and it's dependencies to a separate geode-logging
submodule so that other modules not in geode-core can still use LogService to
get a Logger.

- Removing the use of the logging SPI from LogService
LogService had a dependency on the logging SPI in geode-core. However, this
dependency was unecessary - the LoggingProvider loaded statically in this class
never had `configure` called on it. In addition, the getLogger methods of this
class are merely creating FastLoggers which can live inside geode-logging and
do not need to be pluggable.

- Moved executors that are not dependent on geode-core to geode-logging and
renamed the remaining executors to be CoreLoggingExecutors.

- Refactor the marker interface from Loggable to EntriesCollection
-import org.apache.geode.annotations.Immutable;
-import org.apache.geode.annotations.VisibleForTesting;
-import org.apache.geode.logging.internal.LoggingProviderLoader;
-import org.apache.geode.logging.internal.spi.LoggingProvider;
+import org.apache.geode.internal.logging.log4j.FastLogger;
+import org.apache.geode.internal.logging.log4j.message.GemFireParameterizedMessageFactory;
-public class LogService extends LogManager {
+public class LogService {
-  @Immutable
-  private static final LoggingProvider loggingProvider = new LoggingProviderLoader().load();
-    return loggingProvider.getLogger(name);
+    return getLogger(name);
-    return loggingProvider.getLogger(name);
-  }
-
-  @VisibleForTesting
-  static LoggingProvider getLoggingProvider() {
-    return loggingProvider;
+    return new FastLogger(LogManager.getLogger(name, GemFireParameterizedMessageFactory.INSTANCE));

UPD40 UPD40 INS14 INS43 INS32 INS42 UPD42 MOV42 MOV42 MOV42 INS40 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL78 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL42 DEL32 DEL59 DEL23 DEL42 DEL32 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31