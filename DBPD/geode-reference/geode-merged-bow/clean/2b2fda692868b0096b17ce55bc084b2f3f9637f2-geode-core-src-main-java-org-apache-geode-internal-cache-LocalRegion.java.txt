GEODE-6195 putIfAbsent may get a returned value caused by the same operation due to retry

Moving the check for a retried putIfAbsent to be under the RegionEntry
lock.  This allows the operation to propagate throughout the cluster and
allows the client to receive a valid version tag, if concurrency checks
are enabled.

-      // we may see a non null result possibly due to retry
-      if (event.hasRetried() && putIfAbsentResultHasSameValue(true, value, result)) {
-        if (logger.isDebugEnabled()) {
-          logger.debug("retried putIfAbsent and result is the value to be put,"
-              + " treat as a successful putIfAbsent");
-        }
-      } else {
-        // customers don't see this exception
-        throw new EntryNotFoundException("entry existed for putIfAbsent");
-      }
+      throw new EntryNotFoundException("entry existed for putIfAbsent");
-  @VisibleForTesting
-  boolean putIfAbsentResultHasSameValue(boolean isClient, Object valueToBePut, Object result) {
-    if (Token.isInvalid(result) || result == null) {
-      return valueToBePut == null;
-    }
-
-    boolean isCompressedOffHeap =
-        isClient ? false : getAttributes().getOffHeap() && getAttributes().getCompressor() != null;
-    return ValueComparisonHelper.checkEquals(valueToBePut, result, isCompressedOffHeap, getCache());
-  }
-
-  @VisibleForTesting
-  boolean bridgePutIfAbsentResultHasSameValue(byte[] valueToBePut, boolean isValueToBePutObject,
-      Object result) {
-    if (Token.isInvalid(result) || result == null) {
-      return valueToBePut == null;
-    }
-
-    boolean isCompressedOffHeap =
-        getAttributes().getOffHeap() && getAttributes().getCompressor() != null;
-    if (isValueToBePutObject) {
-      return ValueComparisonHelper.checkEquals(EntryEventImpl.deserialize(valueToBePut), result,
-          isCompressedOffHeap, getCache());
-    }
-    return ValueComparisonHelper.checkEquals(valueToBePut, result, isCompressedOffHeap, getCache());
-  }
-
-          Object result = event.getOldValue();
-          if (event.isPossibleDuplicate() && putIfAbsentResultHasSameValue(false, value, result)) {
-            if (logger.isDebugEnabled()) {
-              logger.debug("possible duplicate putIfAbsent event and result is the value to be put,"
-                  + " treat this as a successful putIfAbsent");
-            }
-            return null;
-          }
-          return result;
+          return event.getOldValue();
+      event.setPossibleDuplicate(clientEvent.isPossibleDuplicate());
-        if (value != null) {
-          assert (value instanceof byte[]);
-        }
-        if (event.isPossibleDuplicate()
-            && bridgePutIfAbsentResultHasSameValue((byte[]) value, isObject, oldValue)) {
-          // result is possibly due to the retry
-          if (logger.isDebugEnabled()) {
-            logger.debug("retried putIfAbsent and got oldValue as the value to be put,"
-                + " treat this as a successful putIfAbsent");
-          }
-          return null;
-        }
-

INS8 MOV25 MOV27 MOV8 INS21 INS32 MOV8 INS42 INS42 INS32 MOV25 INS42 INS42 MOV8 MOV32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL9 DEL42 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL78 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL27 DEL42 DEL33 DEL27 DEL41 DEL8 DEL25 DEL39 DEL42 DEL42 DEL9 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL33 DEL27 DEL27 DEL16 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL42 DEL78 DEL39 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL27 DEL42 DEL33 DEL27 DEL41 DEL8 DEL25 DEL39 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL33 DEL27 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL33 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL9 DEL42 DEL42 DEL32 DEL27 DEL25 DEL42 DEL41 DEL8 DEL42 DEL39 DEL85 DEL5 DEL62 DEL36 DEL6 DEL42 DEL33 DEL27 DEL25 DEL42 DEL42 DEL32 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL33 DEL41 DEL8 DEL25 DEL8