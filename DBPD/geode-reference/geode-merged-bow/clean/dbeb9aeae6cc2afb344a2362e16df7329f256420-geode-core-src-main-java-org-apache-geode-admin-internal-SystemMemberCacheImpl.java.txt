Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * @since GemFire     3.5
+ * @since GemFire 3.5
-  /** Maps the id of a bridge server to its SystemMemberBridgeServer */ 
+  /** Maps the id of a bridge server to its SystemMemberBridgeServer */
-  
+
-  public SystemMemberCacheImpl(GemFireVM vm)
-    throws CacheDoesNotExistException
-  {
+  public SystemMemberCacheImpl(GemFireVM vm) throws CacheDoesNotExistException {
-      throw new CacheDoesNotExistException(LocalizedStrings.SystemMemberCacheImpl_THE_VM_0_DOES_NOT_CURRENTLY_HAVE_A_CACHE.toLocalizedString(vm.getId()));
+      throw new CacheDoesNotExistException(
+          LocalizedStrings.SystemMemberCacheImpl_THE_VM_0_DOES_NOT_CURRENTLY_HAVE_A_CACHE
+              .toLocalizedString(vm.getId()));
-  
+
+
+
+
+
+
+
+
+
+
-  public GemFireMemberStatus getSnapshot()
-  {
-	  //System.out.println(">>>SystemMemberCacheJmxImpl::getSnapshot:pre::: " + this.vm);
-	  GemFireMemberStatus stat = this.vm.getSnapshot();
-	  //System.out.println(">>>SystemMemberCacheJmxImpl::getSnapshot:post::: " + stat);
-	  return stat;
+  public GemFireMemberStatus getSnapshot() {
+    // System.out.println(">>>SystemMemberCacheJmxImpl::getSnapshot:pre::: " + this.vm);
+    GemFireMemberStatus stat = this.vm.getSnapshot();
+    // System.out.println(">>>SystemMemberCacheJmxImpl::getSnapshot:post::: " + stat);
+    return stat;
-  public RegionSubRegionSnapshot getRegionSnapshot()
-  {
-	  //System.out.println(">>>SystemMemberCacheJmxImpl::getRegionSnapshot:pre::: " + this.vm);
-	  RegionSubRegionSnapshot snap = this.vm.getRegionSnapshot();
-	  //System.out.println(">>>SystemMemberCacheJmxImpl::getRegionSnapshot:post::: " + snap);
-	  return snap;
+  public RegionSubRegionSnapshot getRegionSnapshot() {
+    // System.out.println(">>>SystemMemberCacheJmxImpl::getRegionSnapshot:pre::: " + this.vm);
+    RegionSubRegionSnapshot snap = this.vm.getRegionSnapshot();
+    // System.out.println(">>>SystemMemberCacheJmxImpl::getRegionSnapshot:post::: " + snap);
+    return snap;
-  
+
-  public SystemMemberRegion getRegion(String path)
-    throws org.apache.geode.admin.AdminException
-  {
+  public SystemMemberRegion getRegion(String path) throws org.apache.geode.admin.AdminException {
-  public SystemMemberRegion createRegion(String name,
-                                         RegionAttributes attrs)
-    throws AdminException
-  {
+  public SystemMemberRegion createRegion(String name, RegionAttributes attrs)
+      throws AdminException {
-  
-  public SystemMemberRegion createVMRegion(String name,
-                                           RegionAttributes attrs)
-    throws AdminException
-  {
+
+  public SystemMemberRegion createVMRegion(String name, RegionAttributes attrs)
+      throws AdminException {
-    
+
+
-    
+
-        ((StatisticImpl)this.statistics[i]).setStat(stat);
+        ((StatisticImpl) this.statistics[i]).setStat(stat);
-   * Returns the <code>CacheInfo</code> that describes this cache.
-   * Note that this operation does not {@link #refresh} the
-   * <code>CacheInfo</code>. 
+   * Returns the <code>CacheInfo</code> that describes this cache. Note that this operation does not
+   * {@link #refresh} the <code>CacheInfo</code>.
+
-    throws org.apache.geode.admin.AdminException
-  {
+      throws org.apache.geode.admin.AdminException {
-  public SystemMemberCacheServer addCacheServer()
-    throws AdminException {
+  public SystemMemberCacheServer addCacheServer() throws AdminException {
-    SystemMemberCacheServer admin =
-      createSystemMemberBridgeServer(bridge);
+    SystemMemberCacheServer admin = createSystemMemberBridgeServer(bridge);
-  private Collection getCacheServersCollection()
-    throws AdminException {
+  private Collection getCacheServersCollection() throws AdminException {
-      SystemMemberBridgeServer bridge =
-        (SystemMemberBridgeServer) bridgeServers.get(id);
+      SystemMemberBridgeServer bridge = (SystemMemberBridgeServer) bridgeServers.get(id);
-  public SystemMemberCacheServer[] getCacheServers()
-    throws AdminException {
+  public SystemMemberCacheServer[] getCacheServers() throws AdminException {
-    SystemMemberCacheServer[] array =
-      new SystemMemberCacheServer[bridges.size()];
+    SystemMemberCacheServer[] array = new SystemMemberCacheServer[bridges.size()];
-   * Creates a new instance of <Code>SystemMemberBridgeServer</code>
-   * with the given configuration.
+   * Creates a new instance of <Code>SystemMemberBridgeServer</code> with the given configuration.
-  protected SystemMemberBridgeServerImpl
-    createSystemMemberBridgeServer(AdminBridgeServer bridge) 
-    throws AdminException {
+  protected SystemMemberBridgeServerImpl createSystemMemberBridgeServer(AdminBridgeServer bridge)
+      throws AdminException {
-  
-  
+
+
-	return getName();
+    return getName();

UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66