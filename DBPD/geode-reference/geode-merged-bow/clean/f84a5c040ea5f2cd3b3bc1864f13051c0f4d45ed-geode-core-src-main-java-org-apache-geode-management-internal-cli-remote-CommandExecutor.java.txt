Merge branch 'develop' into GEODE-5407

+import static org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommand.GROUP_STATUS_SECTION;
+
+import java.util.Arrays;
+import java.util.List;
+import java.util.stream.Collectors;
+
+import org.apache.commons.lang3.StringUtils;
-import org.apache.geode.distributed.ConfigurationPersistenceService;
+import org.apache.geode.distributed.internal.InternalConfigurationPersistenceService;
+import org.apache.geode.management.cli.UpdateAllConfigurationGroupsMarker;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
+  protected Object callInvokeMethod(Object command, GfshParseResult parseResult) {
+    return ReflectionUtils.invokeMethod(parseResult.getMethod(), command,
+        parseResult.getArguments());
+  }
+
-    Object result =
-        ReflectionUtils.invokeMethod(parseResult.getMethod(), command, parseResult.getArguments());
+    Object result = callInvokeMethod(command, parseResult);
-    ConfigurationPersistenceService ccService = gfshCommand.getConfigurationPersistenceService();
+    InternalConfigurationPersistenceService ccService =
+        (InternalConfigurationPersistenceService) gfshCommand.getConfigurationPersistenceService();
+    List<String> groupsToUpdate;
-    if (groupInput == null) {
-      groupInput = "cluster";
+    TabularResultModel table = null;
+
+    if (!StringUtils.isBlank(groupInput)) {
+      groupsToUpdate = Arrays.asList(groupInput.split(","));
+    } else if (gfshCommand instanceof UpdateAllConfigurationGroupsMarker) {
+      groupsToUpdate = ccService.getGroups().stream().collect(Collectors.toList());
+      table = resultModel.addTable(GROUP_STATUS_SECTION);
+      table.setColumnHeader("Group", "Status");
+    } else {
+      groupsToUpdate = Arrays.asList("cluster");
-    String[] groups = groupInput.split(",");
-    for (String group : groups) {
+
+    final TabularResultModel finalTable = table;
+    for (String group : groupsToUpdate) {
-          gfshCommand.updateClusterConfig(group, cc, resultModel.getConfigObject());
-          infoResultModel
-              .addLine("Changes to configuration for group '" + group + "' are persisted.");
+          if (gfshCommand.updateConfigForGroup(group, cc, resultModel.getConfigObject())) {
+            if (finalTable != null) {
+              finalTable.addRow(group, "Cluster Configuration Updated");
+            } else {
+              infoResultModel
+                  .addLine("Changes to configuration for group '" + group + "' are persisted.");
+            }
+          } else {
+            if (finalTable != null) {
+              finalTable.addRow(group, "Cluster Configuration not updated");
+
+            } else {
+              infoResultModel
+                  .addLine("No changes were made to the configuration for group '" + group + "'");
+            }
+          }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS31 INS83 MOV43 INS42 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS41 INS60 INS60 INS42 INS42 MOV32 INS43 UPD43 INS74 INS59 INS43 INS59 INS38 INS8 INS25 INS83 INS43 UPD42 INS42 INS32 UPD42 INS11 INS43 MOV43 INS42 INS42 INS42 INS33 INS32 INS21 INS62 INS8 MOV8 INS42 UPD42 INS42 INS42 INS42 INS42 INS43 MOV32 INS42 INS42 INS42 INS42 INS7 INS42 INS43 INS21 INS21 INS21 INS42 INS42 INS32 INS42 INS7 INS7 INS32 INS42 INS42 MOV32 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS45 UPD42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS8 INS42 INS42 INS25 INS32 INS8 INS8 INS42 INS42 INS42 INS42 MOV32 INS25 INS25 INS27 INS8 MOV8 INS27 INS8 INS8 INS42 INS33 INS21 INS42 INS33 INS21 INS21 INS32 INS32 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS27 INS45 INS42 INS45 DEL45 DEL42 DEL33 DEL27 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21