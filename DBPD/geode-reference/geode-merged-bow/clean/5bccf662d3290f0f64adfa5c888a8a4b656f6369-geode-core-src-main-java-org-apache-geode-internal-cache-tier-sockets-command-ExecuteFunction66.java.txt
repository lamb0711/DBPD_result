GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-      logger.warn(LocalizedMessage.create(
-          LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-          function), exception);
+      logger.warn(String.format("Exception on server while executing function: %s",
+          function),
+          exception);
-          LocalizedStrings.ExecuteFunction_THE_INPUT_FUNCTION_FOR_THE_EXECUTE_FUNCTION_REQUEST_IS_NULL
-              .toLocalizedString();
-      logger.warn(LocalizedMessage.create(LocalizedStrings.TWO_ARG_COLON,
-          new Object[] {serverConnection.getName(), message}));
+          "The input function for the execute function request is null";
+      logger.warn("{} : {}",
+          new Object[] {serverConnection.getName(), message});
-          final String message = LocalizedStrings.ExecuteFunction_FUNCTION_NAMED_0_IS_NOT_REGISTERED
-              .toLocalizedString(function);
+          final String message =
+              String.format("Function named %s is not registered to FunctionService",
+                  function);
-                LocalizedStrings.FunctionService_FUNCTION_ATTRIBUTE_MISMATCH_CLIENT_SERVER
-                    .toLocalizedString(function);
+                "Function attributes at client and server don't match for " +
+                    function;
-      logger.warn(LocalizedMessage.create(
-          LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-          function), ioException);
+      logger.warn(String.format("Exception on server while executing function: %s",
+          function),
+          ioException);
-          LocalizedStrings.ExecuteFunction_SERVER_COULD_NOT_SEND_THE_REPLY.toLocalizedString();
+          "Server could not send the reply";
-        logger.debug(LocalizedMessage.create(
-            LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-            new Object[] {function}), internalfunctionException);
+        logger.debug(String.format("Exception on server while executing function: %s",
+            new Object[] {function}),
+            internalfunctionException);
-      logger.warn(LocalizedMessage.create(
-          LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-          function), e);
+      logger.warn(String.format("Exception on server while executing function: %s",
+          function),
+          e);
-            LocalizedStrings.ExecuteFunction_THE_FUNCTION_0_DID_NOT_SENT_LAST_RESULT
-                .toString(fn.getId()));
+            String.format("The function, %s, did not send last result",
+                fn.getId()));
-              if (cache.getLoggerI18n().warningEnabled() && !ASYNC_TX_WARNING_ISSUED) {
+              if (cache.getLogger().warningEnabled() && !ASYNC_TX_WARNING_ISSUED) {
-                cache.getLoggerI18n().warning(
-                    LocalizedStrings.ExecuteFunction66_TRANSACTIONAL_FUNCTION_WITHOUT_RESULT);
+                cache.getLogger().warning(
+                    "Function invoked within transactional context, but hasResults() is false; ordering of transactional operations cannot be guaranteed.  This message is only issued once by a server.");
-              logger.debug(LocalizedMessage.create(
-                  LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-                  new Object[] {fn}), internalfunctionException);
+              logger.debug(String.format("Exception on server while executing function: %s",
+                  new Object[] {fn}),
+                  internalfunctionException);
-            logger.warn(LocalizedMessage.create(
-                LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-                fn), functionException);
+            logger.warn(String.format("Exception on server while executing function: %s",
+                fn),
+                functionException);
-            logger.warn(LocalizedMessage.create(
-                LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0,
-                fn), exception);
+            logger.warn(String.format("Exception on server while executing function: %s",
+                fn),
+                exception);

MOV32 INS45 UPD42 UPD42 INS45 INS45 UPD42 UPD42 INS45 UPD42 UPD42 INS45 UPD42 UPD42 INS45 UPD42 INS42 INS45 UPD42 UPD42 INS45 UPD42 INS42 INS45 INS27 INS45 INS42 UPD42 UPD42 INS45 UPD42 UPD42 INS45 UPD42 INS45 UPD42 UPD42 INS45 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL40 DEL40 DEL42 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40