GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-      // TODO: Suranjan .separate asynceventqueue from gatewaysender
-      // GatewaySenderFactory senderFactory = this.cache.createGatewaySenderFactory();
-      // senderFactory.setMaximumQueueMemory(attrs.getMaximumQueueMemory());
-      // senderFactory.setBatchSize(attrs.getBatchSize());
-      // senderFactory.setBatchTimeInterval(attrs.getBatchTimeInterval());
-      // if (attrs.isPersistenceEnabled()) {
-      // senderFactory.setPersistenceEnabled(true);
-      // }
-      // senderFactory.setDiskStoreName(attrs.getDiskStoreName());
-      // senderFactory.setDiskSynchronous(attrs.isDiskSynchronous());
-      // senderFactory.setBatchConflationEnabled(attrs.isBatchConflationEnabled());
-      // senderFactory.setParallel(attrs.isParallel());
-      // senderFactory.setDispatcherThreads(attrs.getDispatcherThreads());
-      // if OrderPolicy is not null, set it, otherwise, let the default OrderPolicy take the charge
-      // if (attrs.getOrderPolicy() != null) {
-      // senderFactory.setOrderPolicy(attrs.getOrderPolicy());
-      // }
-      // for (GatewayEventFilter filter : attrs.eventFilters) {
-      // senderFactory.addGatewayEventFilter(filter);
-      // }
-      // senderFactory.setGatewayEventSubstitutionFilter(attrs.getGatewayEventSubstitutionFilter());
-      // Type cast to GatewaySenderFactory implementation impl to add the async event listener
-      // and set the isForInternalUse to true. These methods are not exposed on GatewaySenderFactory
-      // GatewaySenderFactory factoryImpl = (GatewaySenderFactoryImpl) senderFactory;
-      // senderFactory.setForInternalUse(true);
-      // senderFactory.addAsyncEventListener(listener);
-      // senderFactory.setBucketSorted(attrs.isBucketSorted());
-      // add member id to differentiate between this region and the redundant bucket
-      // region created for this queue.
-      // GatewaySender sender =
-      // senderFactory.create(
-      // AsyncEventQueueImpl.getSenderIdFromAsyncEventQueueId(asyncQueueId));
-      ((GemFireCacheImpl) cache).addAsyncEventQueue(queue);
+      this.cache.addAsyncEventQueue(queue);
-        ((GemFireCacheImpl) this.cache).addGatewaySender(sender);
+        this.cache.addGatewaySender(sender);
-      // if (this.attrs.getOrderPolicy() != null) {
-      // if (this.attrs.getDispatcherThreads() == GatewaySender.DEFAULT_DISPATCHER_THREADS) {
-      // throw new AsyncEventQueueConfigurationException(
-      // LocalizedStrings.AsyncEventQueue_INVALID_ORDER_POLICY_CONCURRENCY_0
-      // .toLocalizedString(id));
-      // }
-      // }
-        ((GemFireCacheImpl) this.cache).addGatewaySender(sender);
+        this.cache.addGatewaySender(sender);

INS22 INS52 INS42 MOV22 MOV22 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL43 DEL11 DEL36 DEL42 DEL43 DEL11 DEL36