GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-          LocalizedStrings.TXManager_NO_WRITER_ON_CLIENT.toLocalizedString());
+          "A TransactionWriter cannot be registered on a client");
-            LocalizedStrings.TXManagerImpl_MORE_THAN_ONE_TRANSACTION_LISTENER_EXISTS
-                .toLocalizedString());
+            "More than one transaction listener exists.");
-          LocalizedStrings.TXManagerImpl_ADDLISTENER_PARAMETER_WAS_NULL.toLocalizedString());
+          "addListener parameter was null");
-          LocalizedStrings.TXManagerImpl_REMOVELISTENER_PARAMETER_WAS_NULL.toLocalizedString());
+          "removeListener parameter was null");
-              LocalizedStrings.TXManagerImpl_INITLISTENERS_PARAMETER_HAD_A_NULL_ELEMENT
-                  .toLocalizedString());
+              "initListeners parameter had a null element");
-            LocalizedStrings.TXManagerImpl_TRANSACTION_0_ALREADY_IN_PROGRESS
-                .toLocalizedString(tid));
+            String.format("Transaction  %s  already in progress",
+                tid));
-          LocalizedStrings.TXManagerImpl_THREAD_DOES_NOT_HAVE_AN_ACTIVE_TRANSACTION
-              .toLocalizedString());
+          "Thread does not have an active transaction");
-        LocalizedStrings.TXManagerImpl_CAN_NOT_COMMIT_THIS_TRANSACTION_BECAUSE_IT_IS_ENLISTED_WITH_A_JTA_TRANSACTION_USE_THE_JTA_MANAGER_TO_PERFORM_THE_COMMIT
-            .toLocalizedString());
+        "Can not commit this transaction because it is enlisted with a JTA transaction, use the JTA manager to perform the commit.");
-          LocalizedStrings.TXManagerImpl_THREAD_DOES_NOT_HAVE_AN_ACTIVE_TRANSACTION
-              .toLocalizedString());
+          "Thread does not have an active transaction");
-        LocalizedStrings.TXManagerImpl_CAN_NOT_COMMIT_THIS_TRANSACTION_BECAUSE_IT_IS_ENLISTED_WITH_A_JTA_TRANSACTION_USE_THE_JTA_MANAGER_TO_PERFORM_THE_COMMIT
-            .toLocalizedString());
+        "Can not commit this transaction because it is enlisted with a JTA transaction, use the JTA manager to perform the commit.");
-            logger.error(LocalizedMessage.create(
-                LocalizedStrings.TXManagerImpl_EXCEPTION_OCCURRED_IN_TRANSACTIONLISTENER), t);
+            logger.error("Exception occurred in TransactionListener", t);
-            logger.error(LocalizedMessage.create(
-                LocalizedStrings.TXManagerImpl_EXCEPTION_OCCURRED_IN_TRANSACTIONLISTENER), t);
+            logger.error("Exception occurred in TransactionListener", t);
-          LocalizedStrings.TXManagerImpl_THREAD_DOES_NOT_HAVE_AN_ACTIVE_TRANSACTION
-              .toLocalizedString());
+          "Thread does not have an active transaction");
-        LocalizedStrings.TXManagerImpl_CAN_NOT_ROLLBACK_THIS_TRANSACTION_IS_ENLISTED_WITH_A_JTA_TRANSACTION_USE_THE_JTA_MANAGER_TO_PERFORM_THE_ROLLBACK
-            .toLocalizedString());
+        "Can not rollback this transaction is enlisted with a JTA transaction, use the JTA manager to perform the rollback.");
-            logger.error(LocalizedMessage.create(
-                LocalizedStrings.TXManagerImpl_EXCEPTION_OCCURRED_IN_TRANSACTIONLISTENER), t);
+            logger.error("Exception occurred in TransactionListener", t);
-      logger.error(LocalizedMessage
-          .create(LocalizedStrings.TXManagerImpl_EXCEPTION_OCCURRED_IN_TRANSACTIONLISTENER), t);
+      logger.error("Exception occurred in TransactionListener", t);
-            LocalizedStrings.TXManagerImpl_TRANSACTION_0_ALREADY_IN_PROGRESS
-                .toLocalizedString(tid));
+            String.format("Transaction  %s  already in progress",
+                tid));
-          LocalizedStrings.TXState_CONFLICT_DETECTED_IN_GEMFIRE_TRANSACTION_0
-              .toLocalizedString(txId));
+          String.format("Conflict detected in GemFire transaction  %s",
+              txId));
-          LocalizedStrings.PartitionedRegion_TRANSACTIONAL_DATA_MOVED_DUE_TO_REBALANCING
-              .toLocalizedString());
+          "Transactional data moved, due to rebalancing.");
-          LocalizedStrings.ClientTXStateStub_COMMIT_FAILED_ON_SERVER.toLocalizedString());
+          "Commit failed on cache server");
-          LocalizedStrings.TXManagerImpl_UNKNOWN_TRANSACTION_OR_RESUMED.toLocalizedString());
+          "Trying to resume unknown transaction, or transaction resumed by another thread");
-          LocalizedStrings.TXManagerImpl_TRANSACTION_ACTIVE_CANNOT_RESUME.toLocalizedString());
+          "Cannot resume transaction, current thread has an active transaction");
-          LocalizedStrings.TXManagerImpl_UNKNOWN_TRANSACTION_OR_RESUMED.toLocalizedString());
+          "Trying to resume unknown transaction, or transaction resumed by another thread");
-          logger.warn(LocalizedMessage
-              .create(LocalizedStrings.TXManagerImpl_EXCEPTION_IN_TRANSACTION_TIMEOUT, txId), e);
+          logger.warn(String.format(
+              "Exception occurred while rolling back timed out transaction %s", txId), e);
-          LocalizedStrings.TXManagerImpl_CANNOT_CHANGE_TRANSACTION_MODE_WHILE_TRANSACTIONS_ARE_IN_PROGRESS
-              .toLocalizedString());
+          "Transaction mode cannot be changed when the thread has an active transaction");

MOV25 MOV25 MOV27 MOV27 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 INS45 UPD42 INS42 INS45 INS45 UPD42 UPD42 INS45 INS45 INS45 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32