GEODE-3337: Refactoring LauncherLifecycleCommandsDUnitTest

This closes #701

-public class StartServerCommand implements GfshCommand {
+public class StartServerCommand extends StartMemberCommand implements GfshCommand {
-        memberName = StartMemberUtils.getNameGenerator().generate('-');
+        memberName = getNameGenerator().generate('-');
-      workingDirectory = StartMemberUtils.resolveWorkingDir(workingDirectory, memberName);
+      workingDirectory = resolveWorkingDir(workingDirectory, memberName);
-      final int oldPid = StartMemberUtils.readPid(serverPidFile);
+      readPid(serverPidFile);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.BIND_ADDRESS,
-          bindAddress);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.CACHE_XML_FILE, cacheXmlPathname);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.ENABLE_TIME_STATISTICS, enableTimeStatistics);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.GROUPS,
-          group);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.BIND_ADDRESS, bindAddress);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.CACHE_XML_FILE,
+          cacheXmlPathname);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.ENABLE_TIME_STATISTICS,
+          enableTimeStatistics);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.GROUPS, group);
+      setPropertyIfNotNull(gemfireProperties,
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOCATORS,
-          locators);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.LOCATOR_WAIT_TIME, locatorWaitTime);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOG_LEVEL,
-          logLevel);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.MCAST_ADDRESS, mcastBindAddress);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.MCAST_PORT,
-          mcastPort);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.MEMCACHED_PORT, memcachedPort);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.MEMCACHED_PROTOCOL, memcachedProtocol);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.MEMCACHED_BIND_ADDRESS, memcachedBindAddress);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.REDIS_PORT,
-          redisPort);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.REDIS_BIND_ADDRESS, redisBindAddress);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.REDIS_PASSWORD, redisPassword);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.STATISTIC_ARCHIVE_FILE, statisticsArchivePathname);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.USE_CLUSTER_CONFIGURATION, requestSharedConfiguration);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOCK_MEMORY,
-          lockMemory);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.OFF_HEAP_MEMORY_SIZE, offHeapMemorySize);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.START_DEV_REST_API, startRestApi);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.HTTP_SERVICE_PORT, httpServicePort);
-      StartMemberUtils.setPropertyIfNotNull(gemfireProperties,
-          ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOCATORS, locators);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOCATOR_WAIT_TIME,
+          locatorWaitTime);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOG_LEVEL, logLevel);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.MCAST_ADDRESS,
+          mcastBindAddress);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.MCAST_PORT, mcastPort);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.MEMCACHED_PORT,
+          memcachedPort);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.MEMCACHED_PROTOCOL,
+          memcachedProtocol);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.MEMCACHED_BIND_ADDRESS,
+          memcachedBindAddress);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.REDIS_PORT, redisPort);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.REDIS_BIND_ADDRESS,
+          redisBindAddress);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.REDIS_PASSWORD,
+          redisPassword);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.STATISTIC_ARCHIVE_FILE,
+          statisticsArchivePathname);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.USE_CLUSTER_CONFIGURATION,
+          requestSharedConfiguration);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.LOCK_MEMORY, lockMemory);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.OFF_HEAP_MEMORY_SIZE,
+          offHeapMemorySize);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.START_DEV_REST_API,
+          startRestApi);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.HTTP_SERVICE_PORT,
+          httpServicePort);
+      setPropertyIfNotNull(gemfireProperties, ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS,
+          httpServiceBindAddress);
-        stderrReader.stopAsync(StartMemberUtils.PROCESS_STREAM_READER_ASYNC_STOP_TIMEOUT_MILLIS); // stop
-                                                                                                  // will
-                                                                                                  // close
+        stderrReader.stopAsync(PROCESS_STREAM_READER_ASYNC_STOP_TIMEOUT_MILLIS); // stop
+                                                                                 // will
+                                                                                 // close
-    commandLine.add(StartMemberUtils.getJavaPath());
+    commandLine.add(getJavaPath());
-    StartMemberUtils.addCurrentLocators(this, commandLine, gemfireProperties);
-    StartMemberUtils.addGemFirePropertyFile(commandLine, gemfirePropertiesFile);
-    StartMemberUtils.addGemFireSecurityPropertyFile(commandLine, gemfireSecurityPropertiesFile);
-    StartMemberUtils.addGemFireSystemProperties(commandLine, gemfireProperties);
-    StartMemberUtils.addJvmArgumentsAndOptions(commandLine, jvmArgsOpts);
+    addCurrentLocators(this, commandLine, gemfireProperties);
+    addGemFirePropertyFile(commandLine, gemfirePropertiesFile);
+    addGemFireSecurityPropertyFile(commandLine, gemfireSecurityPropertiesFile);
+    addGemFireSystemProperties(commandLine, gemfireProperties);
+    addJvmArgumentsAndOptions(commandLine, jvmArgsOpts);
-    StartMemberUtils.addInitialHeap(commandLine, initialHeap);
-    StartMemberUtils.addMaxHeap(commandLine, maxHeap);
+    addInitialHeap(commandLine, initialHeap);
+    addMaxHeap(commandLine, maxHeap);
-    jarFilePathnames.add(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME);
+    jarFilePathnames.add(CORE_DEPENDENCIES_JAR_PATHNAME);
-    return StartMemberUtils.toClasspath(includeSystemClasspath,
+    return toClasspath(includeSystemClasspath,

INS43 INS42 INS21 INS42 INS32 MOV42 MOV42 INS42 DEL42 DEL42 DEL83 DEL39 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42