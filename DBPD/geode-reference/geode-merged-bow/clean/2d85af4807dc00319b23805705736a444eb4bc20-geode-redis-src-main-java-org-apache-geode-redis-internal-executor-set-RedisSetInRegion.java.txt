GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

+import org.apache.geode.redis.internal.executor.RedisKeyInRegion;
-/**
- * This class still uses "synchronized" to protect the underlying HashSet even though all writers do
- * so under the {@link SynchronizedStripedExecutor}. The synchronization on this class can be
- * removed once readers are changed to also use the {@link SynchronizedStripedExecutor}.
- */
-public class RedisSetInRegion implements RedisSetCommands {
-  private final Region<ByteArrayWrapper, RedisData> region;
+public class RedisSetInRegion extends RedisKeyInRegion implements RedisSetCommands {
-    this.region = region;
+    super(region);
-    RedisSet redisSet = checkType(region.get(key));
+    RedisSet redisSet = checkType(getRedisData(key));
-    return checkType(region.getOrDefault(key, RedisSet.EMPTY));
+    return checkType(getRedisDataOrDefault(key, RedisSet.EMPTY));

INS26 INS40 INS43 UPD42 MOV42 INS46 INS42 UPD42 UPD42 DEL66 DEL66 DEL42 DEL65 DEL66 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42