GEODE-6918: Adding log message to denote end of startup (#3824)

Added a log message to InternalResourceManager to denote the end of startup
Added new test class to test the message occurs.

Co-authored-by: Kirk Lund <klund@pivotal.io>
Co-authored-by: Aaron Lindsey <alindsey@pivotal.io>
Co-authored-by: Michael Oleske <moleske@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>

+import java.util.function.Consumer;
+import org.apache.geode.internal.cache.control.InternalResourceManager;
+  private static final Logger logger = LogService.getLogger();
+  private final Runnable startupCompletionAction;
+  private final Consumer<Throwable> startupExceptionAction;
+    startupCompletionAction = builder.getStartupCompletionAction();
+    startupExceptionAction = builder.getStartupExceptionAction();
+    long startTime = System.currentTimeMillis();
-          startCacheServer(cache);
-          log.debug("Server is online");
+          startCacheServer(cache, startTime);
+
+   * @param startTime the system clock time at which the start method was called
-  void startCacheServer(final Cache cache) throws IOException {
+  @VisibleForTesting
+  void startCacheServer(final Cache cache, long startTime) throws IOException {
+
+    Runnable afterStartup = startupCompletionAction == null
+        ? () -> logStartCompleted(startTime) : startupCompletionAction;
+
+    Consumer<Throwable> exceptionAction = startupExceptionAction == null
+        ? (throwable) -> logStartCompletedWithError(startTime, throwable) : startupExceptionAction;
+
+    ((InternalResourceManager) cache.getResourceManager())
+        .runWhenStartupTasksComplete(afterStartup, exceptionAction);
+  }
+
+  private void logStartCompleted(long startTime) {
+    long startupDuration = System.currentTimeMillis() - startTime;
+    log.info("Server {} startup completed in {} ms", memberName, startupDuration);
+  }
+
+  private void logStartCompletedWithError(long startTime, Throwable throwable) {
+    long startupDuration = System.currentTimeMillis() - startTime;
+    log.error("Server {} startup completed in {} ms with error: {}", memberName, startupDuration,
+        throwable, throwable);
+    private Runnable startupCompletionAction;
+    private Consumer<Throwable> startupExceptionAction;
-            "The hostname used by clients to connect to the Server must have an argument if the --hostname-for-clients command-line option is specified!");
+            "The hostname used by clients to connect to the Server must have an argument if the "
+                + "--hostname-for-clients command-line option is specified!");
+
+    /**
+     * Sets the action to run when the server is online.
+     *
+     * @param startupCompletionAction the action to run
+     * @return this builder
+     */
+    Builder setStartupCompletionAction(Runnable startupCompletionAction) {
+      this.startupCompletionAction = startupCompletionAction;
+      return this;
+    }
+
+    /**
+     * Gets the action to run when the server is online.
+     *
+     * @return the action to run
+     */
+    Runnable getStartupCompletionAction() {
+      return startupCompletionAction;
+    }
+
+    /**
+     * Sets the action to run when server startup completes with errors.
+     *
+     * @param startupExceptionAction the action to run
+     * @return this builder
+     */
+    Builder setStartupExceptionAction(Consumer<Throwable> startupExceptionAction) {
+      this.startupExceptionAction = startupExceptionAction;
+      return this;
+    }
+
+    /**
+     * Gets the action to run when server startup completed with errors.
+     *
+     * @return the action to run
+     */
+    Consumer<Throwable> getStartupExceptionAction() {
+      return this.startupExceptionAction;
+    }

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS78 INS44 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS23 INS23 INS31 INS31 INS31 INS31 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS21 INS21 INS60 INS65 INS42 INS39 INS42 INS60 INS60 INS21 INS39 INS42 INS60 INS21 INS39 INS42 INS43 INS42 INS60 INS21 INS83 INS43 INS59 INS83 INS74 INS59 INS29 INS43 INS42 INS44 INS8 INS29 INS43 INS42 INS8 INS29 INS43 INS42 INS44 INS8 INS29 INS74 INS42 INS8 INS42 INS42 INS42 INS42 INS7 INS7 INS39 INS59 INS42 INS66 INS43 INS59 INS74 INS59 INS32 INS39 INS59 INS32 INS42 INS39 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS21 INS41 INS65 INS65 INS42 INS41 INS65 INS65 INS65 INS42 INS74 INS42 INS21 INS41 INS65 INS65 INS43 INS43 INS41 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS16 INS43 INS43 INS42 INS16 INS36 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS66 INS42 INS66 INS66 INS42 INS7 INS52 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS43 INS43 INS7 INS52 INS66 INS66 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS86 INS42 INS42 INS42 INS27 INS86 INS42 INS11 INS32 INS42 INS32 INS42 INS22 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS42 INS33 INS32 INS42 INS33 INS59 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS45 INS42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL45