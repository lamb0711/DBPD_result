Feature/geode 7796: CI hang in LocatorDUnitTest.testCrashLocatorMultipleTimes (#4706)

* GEODE-7796: CI failure in LocatorDUnitTest

The new test hung during a CI run due to a flaw in Geode.  I'm disabling
it until the flaw is corrected.

* reduce locator-wait-time (seconds, not millis)

also several other changes to fix the underlying failure:
  1) add a synchronization to the services restart thread so only one
  thread is active at a time
  2) shut down membership cleanup executor and avoid creating multiple
  TcpServer executors on auto-reconnect
  3) remove setting the locator as a dependent of the
  InternalDistributedSystem.  This was causing locator.stop() to be
  invoked multiple times (as Dale noticed in his analysis)
  4) when stopping a locator for auto-reconnect wait for it to stop in
  order to avoid creating multiple restart threads when there are
  cascading failures.

+  // synchronization lock that ensures we only have one thread performing location services
+  // restart at a time
+  private final Object servicesRestartLock = new Object();
-
-      internalDistributedSystem.setDependentLocator(this);
-      if (!stopForReconnect && waitForDisconnect) {
+      if (waitForDisconnect) {
-    if (stoppedForReconnect) {
-      if (internalDistributedSystem != null) {
-        launchRestartThread();
-      }
+    if (stopForReconnect) {
+      launchRestartThread();
-    if (internalDistributedSystem != null) {
-      internalDistributedSystem.setDependentLocator(null);
-    }
-
-      boolean restarted = false;
-      try {
-        restarted = attemptReconnect();
-        logger.info("attemptReconnect returned {}", restarted);
-      } catch (InterruptedException e) {
-        logger.info("attempt to restart location services was interrupted", e);
-      } catch (IOException e) {
-        logger.info("attempt to restart location services terminated", e);
-      } finally {
-        shutdownHandled.set(false);
-        if (!restarted) {
-          stoppedForReconnect = false;
+      synchronized (servicesRestartLock) {
+        stoppedForReconnect = true;
+        boolean restarted = false;
+        try {
+          restarted = attemptReconnect();
+          logger.info("attemptReconnect returned {}", restarted);
+        } catch (InterruptedException e) {
+          logger.info("attempt to restart location services was interrupted", e);
+        } catch (IOException e) {
+          logger.info("attempt to restart location services terminated", e);
+        } finally {
+          shutdownHandled.set(false);
+          if (!restarted) {
+            stoppedForReconnect = false;
+          }
+          reconnected = restarted;
+          restartThread = null;
-        reconnected = restarted;
-        restartThread = null;
-    internalDistributedSystem.setDependentLocator(this);

INS23 INS83 INS83 INS43 INS59 INS42 INS42 INS14 MOV25 INS43 INS42 INS42 INS42 INS8 INS51 INS42 MOV8 INS21 INS7 INS42 INS9 DEL42 DEL42 DEL52 DEL32 DEL21 DEL42 DEL38 DEL42 DEL27 DEL42 DEL33 DEL27 DEL42 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL33 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL52 DEL32 DEL21