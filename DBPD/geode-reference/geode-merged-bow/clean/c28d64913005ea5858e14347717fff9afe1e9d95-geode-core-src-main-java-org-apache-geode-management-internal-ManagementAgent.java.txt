Merge branch 'release/1.4.0'

+import com.healthmarketscience.rmiio.exporter.RemoteStreamExporter;
+import org.apache.geode.management.internal.beans.FileUploader;
+  private RMIClientSocketFactory rmiClientSocketFactory;
+  private RMIServerSocketFactory rmiServerSocketFactory;
+  private int port;
+  private RemoteStreamExporter remoteStreamExporter = null;
+
-      } else if (securityService.isIntegratedSecurity()) {
-        System.setProperty("spring.profiles.active", "pulse.authentication.gemfire");
+      } else {
+        String pwFile = this.config.getJmxManagerPasswordFile();
+        if (securityService.isIntegratedSecurity() || StringUtils.isNotBlank(pwFile)) {
+          System.setProperty("spring.profiles.active", "pulse.authentication.gemfire");
+        }
-    final int port = this.config.getJmxManagerPort();
+    port = this.config.getJmxManagerPort();
-    RMIClientSocketFactory rmiClientSocketFactory = ssl ? new SslRMIClientSocketFactory() : null;
-    RMIServerSocketFactory rmiServerSocketFactory =
-        new GemFireRMIServerSocketFactory(socketCreator, bindAddr);
+    rmiClientSocketFactory = ssl ? new SslRMIClientSocketFactory() : null;
+    rmiServerSocketFactory = new GemFireRMIServerSocketFactory(socketCreator, bindAddr);
-      registerAccessControlMBean();
+    registerAccessControlMBean();
+    registerFileUploaderMBean();
+  private void registerFileUploaderMBean() {
+    try {
+      ObjectName mbeanON = new ObjectName(ManagementConstants.OBJECTNAME__FILEUPLOADER_MBEAN);
+      MBeanServer platformMBeanServer = ManagementFactory.getPlatformMBeanServer();
+
+      Set<ObjectName> names = platformMBeanServer.queryNames(mbeanON, null);
+      if (names.isEmpty()) {
+        platformMBeanServer.registerMBean(new FileUploader(getRemoteStreamExporter()), mbeanON);
+        logger.info("Registered FileUploaderMBean on " + mbeanON);
+      }
+    } catch (InstanceAlreadyExistsException | MBeanRegistrationException
+        | NotCompliantMBeanException | MalformedObjectNameException e) {
+      throw new GemFireConfigException("Error while configuring FileUploader MBean", e);
+    }
+  }
+
+  public synchronized RemoteStreamExporter getRemoteStreamExporter() {
+    if (remoteStreamExporter == null) {
+      remoteStreamExporter =
+          new GeodeRemoteStreamExporter(port, rmiClientSocketFactory, rmiServerSocketFactory);
+    }
+    return remoteStreamExporter;
+  }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS83 MOV43 INS59 INS83 MOV43 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS8 INS83 INS83 INS43 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS21 MOV21 INS21 INS54 INS42 INS25 INS41 INS7 INS7 INS7 INS32 INS8 INS12 INS27 INS8 INS42 INS42 MOV32 INS42 MOV16 INS42 MOV14 INS42 INS60 INS60 INS60 INS25 INS44 INS8 INS42 INS33 INS21 INS8 INS43 INS59 INS43 INS59 INS74 INS59 INS32 INS8 INS84 INS42 INS53 INS7 INS60 MOV25 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS21 INS21 INS43 INS43 INS43 INS43 INS14 INS42 INS14 INS43 INS59 INS27 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS32 MOV32 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS27 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS43 INS32 INS45 INS42 INS52 INS42 INS42 INS42 DEL83 DEL39 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60