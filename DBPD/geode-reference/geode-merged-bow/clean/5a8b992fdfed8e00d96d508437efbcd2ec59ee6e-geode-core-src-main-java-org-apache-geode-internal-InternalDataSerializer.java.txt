GEODE-7698: Extracting a superclass of InternalDistributedMember

GEODE-7698: Extracting a superclass of InternalDistributedMember

We need a concrete MemberIdentifier implementation in geode-membership
to test membership.

Extracting a superclass of InternalDistributedMember,
MemberIdentifierImpl, which contains pretty much all of the
InternalDistributedMember logic. InternalDistributedMember now just
extends that class and implements DistributedMember.

Removing unecessary use of SocketCreator during IDM deserialization. We were 
using flags and methods on SocketCreator to either change or cache the hostName
that we read off the wire from the remote member. We don't want to do either of
those things during deserialization. We should just keep the hostname we read
as is. This logic was used to change the toString value of ids that come from
clients to use the ip address instead of the hostname. Instead of changing the
deserialization logic, we change the addFixedToString logic.

Check for IP address rather than SocketCreator.resolve_dns in addFixedToString. 
InternalDistributedMember has a dependency on this mutable static flag in it's
to string, which is not ideal. It looks like the intention was to only shorten
the hostname if it is dns name, not an ip address.

-      Version v = InternalDataSerializer.getVersionForDataStreamOrNull(out);
+      Version v = StaticSerialization.getVersionForDataStreamOrNull(out);
-      Version v = InternalDataSerializer.getVersionForDataStreamOrNull(in);
+      Version v = StaticSerialization.getVersionForDataStreamOrNull(in);
-  /**
-   * Get the {@link Version} of the peer or disk store that created this
-   * {@link DataInput}.
-   */
-  public static Version getVersionForDataStream(DataInput in) {
-    // check if this is a versioned data input
-    if (in instanceof VersionedDataStream) {
-      final Version v = ((VersionedDataStream) in).getVersion();
-      return v != null ? v : Version.CURRENT;
-    } else {
-      // assume latest version
-      return Version.CURRENT;
-    }
-  }
-
-  /**
-   * Get the {@link Version} of the peer or disk store that created this
-   * {@link DataInput}. Returns
-   * null if the version is same as this member's.
-   */
-  public static Version getVersionForDataStreamOrNull(DataInput in) {
-    // check if this is a versioned data input
-    if (in instanceof VersionedDataStream) {
-      return ((VersionedDataStream) in).getVersion();
-    } else {
-      // assume latest version
-      return null;
-    }
-  }
-
-  /**
-   * Get the {@link Version} of the peer or disk store that created this
-   * {@link DataOutput}.
-   */
-  public static Version getVersionForDataStream(DataOutput out) {
-    // check if this is a versioned data output
-    if (out instanceof VersionedDataStream) {
-      final Version v = ((VersionedDataStream) out).getVersion();
-      return v != null ? v : Version.CURRENT;
-    } else {
-      // assume latest version
-      return Version.CURRENT;
-    }
-  }
-
-  /**
-   * Get the {@link Version} of the peer or disk store that created this
-   * {@link DataOutput}. Returns
-   * null if the version is same as this member's.
-   */
-  public static Version getVersionForDataStreamOrNull(DataOutput out) {
-    // check if this is a versioned data output
-    if (out instanceof VersionedDataStream) {
-      return ((VersionedDataStream) out).getVersion();
-    } else {
-      // assume latest version
-      return null;
-    }
-  }
-

UPD42 UPD42 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL40 DEL16 DEL41 DEL8 DEL40 DEL41 DEL8 DEL25 DEL8 DEL31 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL41 DEL8 DEL33 DEL41 DEL8 DEL25 DEL8 DEL31 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL40 DEL16 DEL41 DEL8 DEL40 DEL41 DEL8 DEL25 DEL8 DEL31 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL41 DEL8 DEL33 DEL41 DEL8 DEL25 DEL8 DEL31