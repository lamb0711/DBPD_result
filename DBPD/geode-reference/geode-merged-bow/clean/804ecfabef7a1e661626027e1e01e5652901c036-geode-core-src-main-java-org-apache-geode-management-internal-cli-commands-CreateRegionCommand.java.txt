GEODE-4625: name collision check when create region through gfsh (#1483)




+import java.util.Collections;
+import org.apache.commons.lang.StringUtils;
+import org.apache.geode.management.internal.cli.exceptions.EntityExistsException;
-    // validating the region path
+    // adding name collision check for regions created with regionShortcut only
+    DistributedRegionMXBean regionBean =
+        getManagementService().getDistributedRegionMXBean(regionPath);
+
+    if (regionBean != null && regionShortcut != null) {
+      // when creating a non-proxy region and there is already a non empty node
+      if (!regionShortcut.isProxy() && regionBean.getMemberCount() > regionBean.getEmptyNodes()) {
+        throw new EntityExistsException(
+            String.format("Region %s already exists on the cluster.", regionPath), ifNotExists);
+      }
+
+      // proxy regions can only be created on members not having this regionName already defined
+      if (regionShortcut.isProxy()) {
+        Set<String> membersWithThisRegion =
+            Arrays.stream(regionBean.getMembers()).collect(Collectors.toSet());
+        Set<String> membersWithinGroup = findMembers(groups, null).stream()
+            .map(DistributedMember::getName).collect(Collectors.toSet());
+        if (!Collections.disjoint(membersWithinGroup, membersWithThisRegion)) {
+          throw new EntityExistsException(String.format(
+              "Region %s already exists on these members: %s. You can only create "
+                  + "proxy regions with the same name on other members.",
+              regionPath, StringUtils.join(membersWithThisRegion, ",")), ifNotExists);
+        }
+      }
+
+      // then check if the existing region's data policy is compatible
+      if (regionShortcut.isPartition() && !regionBean.getRegionType().contains("PARTITION")) {
+        throw new EntityExistsException("The existing region is not a partitioned region",
+            ifNotExists);
+      }
+      if (regionShortcut.isReplicate() && !(regionBean.getRegionType().equals("EMPTY")
+          || regionBean.getRegionType().contains("REPLICATE"))) {
+        throw new EntityExistsException("The existing region is not a replicate region",
+            ifNotExists);
+      }
+    }
+
+    // validating the parent region
-    if (isPersistentShortcut(functionArgs.getRegionShortcut())
+    if ((functionArgs.getRegionShortcut() != null
+        && functionArgs.getRegionShortcut().isPersistent())
-  private boolean isPersistentShortcut(RegionShortcut shortcut) {
-    return shortcut == RegionShortcut.LOCAL_PERSISTENT
-        || shortcut == RegionShortcut.LOCAL_PERSISTENT_OVERFLOW
-        || shortcut == RegionShortcut.PARTITION_PERSISTENT
-        || shortcut == RegionShortcut.PARTITION_PERSISTENT_OVERFLOW
-        || shortcut == RegionShortcut.PARTITION_REDUNDANT_PERSISTENT
-        || shortcut == RegionShortcut.PARTITION_REDUNDANT_PERSISTENT_OVERFLOW
-        || shortcut == RegionShortcut.REPLICATE_PERSISTENT
-        || shortcut == RegionShortcut.REPLICATE_PERSISTENT_OVERFLOW;
-  }
-

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS25 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS27 INS27 INS25 INS25 INS25 INS25 INS36 INS32 INS42 INS42 INS42 INS33 INS42 INS33 INS27 INS8 INS32 INS8 INS27 INS8 INS27 INS8 INS27 INS42 INS38 INS27 INS53 INS42 INS42 INS60 INS60 INS25 INS32 INS38 INS53 INS32 INS38 INS53 INS27 MOV32 INS32 INS32 INS32 INS14 INS74 INS59 INS74 INS59 INS38 INS8 INS42 INS42 INS32 INS14 INS42 INS42 INS36 INS14 MOV32 INS33 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS32 INS53 INS32 INS42 INS45 INS43 INS45 INS42 INS27 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS90 INS42 INS42 INS43 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS45 INS45 INS42 INS42 INS42 INS45 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL41 DEL8 DEL31