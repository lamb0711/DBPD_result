Merge branch 'release/1.1.0'

-* Licensed to the Apache Software Foundation (ASF) under one or more
-* contributor license agreements.  See the NOTICE file distributed with
-* this work for additional information regarding copyright ownership.
-* The ASF licenses this file to You under the Apache License, Version 2.0
-* (the "License"); you may not use this file except in compliance with
-* the License.  You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
-  private String[] postArgs = new String[]{};
+  private String[] postArgs = new String[] {};
-   * After processing the command line arguments, this method may be used to
-   * return all arguments which were excluded from processing by their placement
-   * after the "<code>--</code>" psuedo-argument.
+   * After processing the command line arguments, this method may be used to return all arguments
+   * which were excluded from processing by their placement after the "<code>--</code>"
+   * psuedo-argument.
-   * @param arg         argument
+   * @param arg argument
-   * Counts the number of arguments defined on the command line which are in the
-   * list provided.
+   * Counts the number of arguments defined on the command line which are in the list provided.
-   * @param ofThese the arguments to search for, or null to count all supplied
-   *                arguments
+   * @param ofThese the arguments to search for, or null to count all supplied arguments
-   * Returns whetheror not the command line argument was actually provided on
-   * the command line.
+   * Returns whetheror not the command line argument was actually provided on the command line.
-   * @return true if the argument is defined by the command line, false
-   * otherwise
+   * @return true if the argument is defined by the command line, false otherwise
-   * Returns all results for the specified argument.  If a command line option
-   * is specified more than once, this is the method to use to get all values.
+   * Returns all results for the specified argument. If a command line option is specified more than
+   * once, this is the method to use to get all values.
-   * Convenience method to retrieve the first instance of the command line
-   * argument's values.
+   * Convenience method to retrieve the first instance of the command line argument's values.
-   * Convenience method to return the first value of the first instance of the
-   * command line argument values for the specified argument.
+   * Convenience method to return the first value of the first instance of the command line argument
+   * values for the specified argument.
-   * Convenience method to return the result of getFirstResult method as an
-   * integer.
+   * Convenience method to return the result of getFirstResult method as an integer.
-   * @param arg            argument to query
-   * @param undefinedValue value to return when argument is not defined or is
-   *                       illegally defined
+   * @param arg argument to query
+   * @param undefinedValue value to return when argument is not defined or is illegally defined
-  public int getFirstResultAsInt(
-      final Argument arg, final int undefinedValue) {
+  public int getFirstResultAsInt(final Argument arg, final int undefinedValue) {

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66