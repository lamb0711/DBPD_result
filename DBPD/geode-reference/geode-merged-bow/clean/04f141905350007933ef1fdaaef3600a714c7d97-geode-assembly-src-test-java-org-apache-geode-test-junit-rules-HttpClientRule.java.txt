GEODE-4087 modify SocketCreator to not set the default SSLContext for the JVM

Removed setting of the default SSLContext in SocketCreator.
Modified PulseSecurityWithSSLTest to use SSL in its HTTP client.
Added a new unit test that failed before making the change to SocketCreator.

This closes pull request #1204

+import java.security.cert.CertificateException;
+import java.security.cert.X509Certificate;
+import javax.net.ssl.SSLContext;
+import javax.net.ssl.X509TrustManager;
+
+import org.apache.http.client.protocol.HttpClientContext;
+import org.apache.http.conn.ssl.NoopHostnameVerifier;
+import org.apache.http.impl.client.HttpClientBuilder;
+import org.apache.geode.internal.net.SocketCreatorFactory;
+import org.apache.geode.internal.security.SecurableCommunicationChannel;
+
+  private boolean useSSL;
+  public HttpClientRule withSSL() {
+    this.useSSL = true;
+    return this;
+  }
+
-    host = new HttpHost(hostName, portSupplier.get());
-    httpClient = HttpClients.createDefault();
+    host = new HttpHost(hostName, portSupplier.get(), useSSL ? "https" : "http");
+    if (useSSL) {
+      HttpClientBuilder clientBuilder = HttpClients.custom();
+      SSLContext ctx = SocketCreatorFactory
+          .getSocketCreatorForComponent(SecurableCommunicationChannel.WEB).getSslContext();
+      clientBuilder.setSSLContext(ctx);
+      clientBuilder.setSSLHostnameVerifier(new NoopHostnameVerifier());
+      httpClient = clientBuilder.build();
+    } else {
+      httpClient = HttpClients.createDefault();
+    }
+  }
+
+  private static class DefaultTrustManager implements X509TrustManager {
+
+    @Override
+    public void checkClientTrusted(X509Certificate[] arg0, String arg1)
+        throws CertificateException {}
+
+    @Override
+    public void checkServerTrusted(X509Certificate[] arg0, String arg1)
+        throws CertificateException {}
+
+    @Override
+    public X509Certificate[] getAcceptedIssuers() {
+      return null;
+    }
-    return httpClient.execute(host, buildHttpGet(uri, params));
+    HttpClientContext clientContext = HttpClientContext.create();
+    return httpClient.execute(host, buildHttpGet(uri, params), clientContext);
-    return httpClient.execute(host, buildHttpPost(uri, params));
+    HttpClientContext clientContext = HttpClientContext.create();
+    return httpClient.execute(host, buildHttpPost(uri, params), clientContext);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS55 INS83 INS39 INS59 INS83 INS43 INS42 INS8 INS8 INS83 INS83 INS42 INS43 INS31 INS31 INS31 INS42 INS42 INS21 INS41 MOV21 INS25 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS5 INS42 INS8 INS60 INS60 INS7 INS52 INS42 INS8 MOV8 INS42 INS5 INS42 INS43 INS42 INS42 INS42 INS5 INS42 INS43 INS42 INS42 INS42 INS43 INS85 INS41 INS43 INS59 INS43 INS59 INS22 INS9 INS60 INS60 INS21 INS21 INS21 INS43 INS85 INS42 INS43 INS85 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS52 INS42 INS16 INS43 INS59 INS43 INS59 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS40 INS42