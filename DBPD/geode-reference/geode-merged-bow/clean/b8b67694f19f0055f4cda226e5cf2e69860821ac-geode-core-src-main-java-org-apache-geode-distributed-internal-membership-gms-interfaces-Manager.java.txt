Merge branch 'develop' into feature/GEODE-7049

-import java.io.NotSerializableException;
-import java.util.Set;
-import org.apache.geode.distributed.DistributedMember;
-import org.apache.geode.distributed.internal.DistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.distributed.internal.membership.NetView;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
+import org.apache.geode.distributed.internal.membership.gms.Services;
+import org.apache.geode.internal.serialization.DataSerializableFixedID;
-public interface Manager extends Service, MessageHandler<DistributionMessage> {
+public interface Manager extends Service, MessageHandler<GMSMessage> {
-   * Sends a message using a selected distribution channel (e.g. Messenger or DirectChannel)
-   *
-   * @return a set of recipients that did not receive the message
-   */
-  Set<InternalDistributedMember> send(DistributionMessage m) throws NotSerializableException;
-
-  /**
-  void quorumLost(Collection<InternalDistributedMember> failures, NetView view);
-
-  /**
-   * Notifies the manager that a member has contacted us who is not in the current membership view
-   *
-   */
-  void addSurpriseMemberForTesting(DistributedMember mbr, long birthTime);
-
-  /**
-   * Tests to see if the given member has been put into "shunned" state, meaning that it has left
-   * the distributed system and we should no longer process requests from it. Shunned status
-   * eventually times out.
-   *
-   * @return true if the member is shunned
-   */
-  boolean isShunned(DistributedMember mbr);
-
-  /**
-   * returns the lead member from the current membership view. This is typically the oldest member
-   * that is not an Admin or Locator member.
-   *
-   * @return the ID of the lead member
-   */
-  DistributedMember getLeadMember();
-
-  /**
-   * returns the coordinator of the current membership view. This is who created and distributed the
-   * view. See NetView.
-   */
-  DistributedMember getCoordinator();
+  void quorumLost(Collection<GMSMember> failures, GMSMembershipView view);
-   * Returns the reason for a shutdown.
-   */
-  Throwable getShutdownCause();
-
-  /**
-   * If this.isReconnectingDS() then this method will inform whether the reconnect
-   * has completed
+   * When Messenger receives a message from another node it may be in a form that
+   * Messenger can't deal with, depending on what payload was serialized. It may
+   * be a GMSMessage already or it may be a message wrapped in an adapter class
+   * that serializes a non-GMSMessage payload. (See GMSMessageAdapter, which
+   * wraps Geode DistributionMessages)
-  boolean isReconnectCompleted();
+  GMSMessage wrapMessage(Object receivedMessage);
+
+  /**
+   * When Messenger is going to transmit a message it gets the actual payload to serialize
+   * from this method
+   */
+  DataSerializableFixedID unwrapMessage(GMSMessage messageToSend);
+
+  /**
+   * Return the Services object owning this Manager service
+   */
+  Services getServices();

MOV31 MOV31 UPD40 UPD40 UPD40 UPD40 UPD74 INS31 UPD43 INS43 INS42 MOV29 INS43 INS42 MOV44 UPD43 UPD42 UPD42 UPD74 UPD43 INS65 UPD42 MOV42 UPD43 UPD42 UPD42 MOV42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD66 MOV66 INS66 INS66 UPD66 MOV66 INS66 UPD42 UPD66 INS66 UPD42 UPD66 UPD42 DEL40 DEL26 DEL40 DEL26 DEL39 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL31 DEL66 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL31 DEL66 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL31 DEL65 DEL65 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL66 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31