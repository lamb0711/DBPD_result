GEODE-17: Why do we need a Logger passed in to ManagementInterceptor constructor

-import com.gemstone.gemfire.internal.logging.InternalLogWriter;
+import org.apache.logging.log4j.LogManager;
-	private Logger logger;
+	private static final Logger logger = LogManager.getLogger(ManagementInterceptor.class);
-  public ManagementInterceptor(Cache gemFireCacheImpl, Logger logger) {
+  public ManagementInterceptor(Cache gemFireCacheImpl) {
-		this.logger = logger;
-    this.cachedAuthZCallback = new ConcurrentHashMap<Principal, AccessControl>();
-    this.cachedPostAuthZCallback = new ConcurrentHashMap<Principal, AccessControl>();
-		registerAccessContorlMbean();
+    this.cachedAuthZCallback = new ConcurrentHashMap<>();
+    this.cachedPostAuthZCallback = new ConcurrentHashMap<>();
+		registerAccessControlMBean();
-	private void registerAccessContorlMbean() {
+	private void registerAccessControlMBean() {
-			username = (String) aCredentials[0];
-			password = (String) aCredentials[1];
+			username = aCredentials[0];
+			password = aCredentials[1];
-    auth.init(gfSecurityProperties,(InternalLogWriter) this.cache.getLogger(), (InternalLogWriter) this.cache.getSecurityLogger());
+    auth.init(gfSecurityProperties, this.cache.getLogger(), this.cache.getSecurityLogger());

MOV26 UPD40 INS83 INS83 UPD42 INS32 INS42 INS42 INS57 INS43 UPD42 MOV32 MOV32 INS42 UPD74 UPD74 MOV2 MOV2 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11 DEL42 DEL43 DEL11