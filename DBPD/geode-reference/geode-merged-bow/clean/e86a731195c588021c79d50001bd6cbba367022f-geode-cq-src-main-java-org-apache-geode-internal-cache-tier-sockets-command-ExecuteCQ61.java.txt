Merge branch 'release/1.3.0'

+import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.security.ResourcePermission.Operation;
+import org.apache.geode.security.ResourcePermission.Resource;
+import org.apache.geode.security.ResourcePermission.Target;
-  private final static ExecuteCQ61 singleton = new ExecuteCQ61();
+  private static final ExecuteCQ61 singleton = new ExecuteCQ61();
-  private ExecuteCQ61() {}
+  private ExecuteCQ61() {
+    // nothing
+  }
-  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-      throws IOException, InterruptedException {
+  public void cmdExecute(final Message clientMessage, final ServerConnection serverConnection,
+      final SecurityService securityService, long start) throws IOException, InterruptedException {
-    boolean isDurable = (isDurableByte == null || isDurableByte[0] == 0) ? false : true;
+    boolean isDurable = !(isDurableByte == null || isDurableByte[0] == 0);
+      query = qService.newQuery(cqQueryString);
+      cqRegionNames = ((DefaultQuery) query).getRegionsInQuery(null);
-        query = qService.newQuery(cqQueryString);
-        cqRegionNames = ((DefaultQuery) query).getRegionsInQuery(null);
-      // test hook to trigger vMotion during CQ registration
+      // auth check to see if user can create CQ or not
+      ((DefaultQuery) query).getRegionsInQuery(null).forEach((regionName) -> securityService
+          .authorize(Resource.DATA, Operation.READ, (String) regionName));
+      // test hook to trigger vMotion during CQ registration
-    long oldstart = start;
-    boolean successQuery = false;
-    if (sendResults || (CqServiceImpl.EXECUTE_QUERY_DURING_INIT && CqServiceProvider.MAINTAIN_KEYS
-        && !cqQuery.isPR())) {
+    boolean successQuery = false;
+    if (sendResults || CqServiceImpl.EXECUTE_QUERY_DURING_INIT && CqServiceProvider.MAINTAIN_KEYS
+        && !cqQuery.isPR()) {
-            cqQuery, executeCQContext, serverConnection, sendResults);
+            cqQuery, executeCQContext, serverConnection, sendResults, securityService);
-        cqQuery.getVsdStats().setCqInitialResultsTime((DistributionStats.getStatTime()) - oldstart);
-        stats.incProcessExecuteCqWithIRTime((DistributionStats.getStatTime()) - oldstart);
+        cqQuery.getVsdStats().setCqInitialResultsTime(DistributionStats.getStatTime() - start);
+        stats.incProcessExecuteCqWithIRTime(DistributionStats.getStatTime() - start);
-          } catch (Exception ex) {
+          } catch (Exception ignored) {
-      stats.incProcessCreateCqTime(start2 - oldstart);
+      stats.incProcessCreateCqTime(start2 - start);
-

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS83 INS44 MOV60 INS83 INS83 INS83 INS43 INS42 INS42 INS38 MOV21 MOV21 INS21 MOV27 MOV36 INS32 MOV21 INS32 INS42 INS86 INS36 INS42 INS33 INS59 INS32 UPD42 INS11 INS42 INS42 INS42 INS40 INS40 INS11 MOV32 UPD42 INS42 UPD42 INS43 INS42 INS43 INS42 INS42 MOV32 UPD42 MOV32 UPD42 INS42 INS42 UPD42 DEL83 DEL9 DEL9 DEL16 DEL39 DEL42 DEL42 DEL59 DEL60 DEL36 DEL42 DEL36 DEL36