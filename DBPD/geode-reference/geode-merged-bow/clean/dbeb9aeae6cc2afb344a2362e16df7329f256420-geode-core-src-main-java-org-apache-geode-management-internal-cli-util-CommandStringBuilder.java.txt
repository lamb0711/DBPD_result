Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-/**-
- * Helper class to build command strings, used in the Dunits for testing gfsh
- * commands
+/**
+ * - Helper class to build command strings, used in the Dunits for testing gfsh commands
-  private final String OPTION_MARKER    = SyntaxConstants.LONG_OPTION_SPECIFIER;
-  private final String EQUAL_TO         = SyntaxConstants.OPTION_VALUE_SPECIFIER;
-  private final String ARG_SEPARATOR    = SyntaxConstants.OPTION_SEPARATOR;
+  private final String OPTION_MARKER = SyntaxConstants.LONG_OPTION_SPECIFIER;
+  private final String EQUAL_TO = SyntaxConstants.OPTION_VALUE_SPECIFIER;
+  private final String ARG_SEPARATOR = SyntaxConstants.OPTION_SEPARATOR;
-  private final String SINGLE_SPACE     = " ";
+  private final String SINGLE_SPACE = " ";
-  private final    StringBuffer buffer;
-  private volatile boolean      hasOptions;
+  private final StringBuffer buffer;
+  private volatile boolean hasOptions;
-      throw new IllegalStateException("Arguments can't be specified after options. Built String is: "+buffer.toString());
+      throw new IllegalStateException(
+          "Arguments can't be specified after options. Built String is: " + buffer.toString());
-  
+
-    if (!StringUtils.isBlank(value)){
+    if (!StringUtils.isBlank(value)) {
-  
+

UPD66 DEL66 DEL66