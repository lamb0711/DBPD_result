Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-import org.apache.geode.redis.internal.CoderException;
-import org.apache.geode.redis.internal.RedisConstants;
-    if (commandElems.size() != 2) {
+    if (commandElems.size() < 2) {
+    @SuppressWarnings("unchecked")
+    Region<ByteArrayWrapper, Boolean> keyRegion =
+        (Region<ByteArrayWrapper, Boolean>) context.getRegionProvider().getRegion(key);
-    Set<ByteArrayWrapper> members;
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
-
-      // companies:ea64fe8c-e0a0-4439-a05d-d0738dd5ef80:idx
-      Set<ByteArrayWrapper> set = region.get(key);
-
-      if (set == null) {
-        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-        return;
-      }
-
-      members = new HashSet<>(set); // Emulate copy on read
-
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
+    if (keyRegion == null) {
+      command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-    try {
-      command.setResponse(Coder.getArrayResponse(context.getByteBufAllocator(), members));
-    } catch (CoderException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          RedisConstants.SERVER_ERROR_MESSAGE));
-    }
+    Set<ByteArrayWrapper> members = new HashSet(keyRegion.keySet()); // Emulate copy on read
+    respondBulkStrings(command, context, members);

INS60 MOV25 MOV60 MOV21 UPD27 INS79 INS74 INS59 INS42 INS45 UPD43 MOV43 MOV43 INS43 UPD42 MOV42 INS11 UPD42 UPD42 INS14 UPD42 UPD42 MOV42 MOV42 MOV42 UPD42 UPD42 MOV42 UPD74 MOV74 INS32 MOV43 INS32 UPD43 MOV43 INS32 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL74 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL74 DEL42 DEL59 DEL60 DEL43 DEL42 DEL32 DEL59 DEL58 DEL42 DEL32 DEL59 DEL60 DEL42 DEL74 DEL42 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL40 DEL32 DEL32 DEL21 DEL8 DEL12 DEL54