GEODE-7863: Reduce ServerCQImpl Contention (#4798)

We don't need to lock the entire internal cache for Partitioned
regions so the implementation is now split by region type, this will
us to improve/change them independently in the future.

- Removed redundant checks.
- Keep current behavior for Replicate Regions.
- Use ConcurrentMap instead of locking the entire internal cache on
every operation for Partition Regions.
- Keep the lock on ServerCQImpl instance only while executing the
query and leave stats operations outside of the synchronized block.
-              synchronized (cQuery) {
-                // Apply query on new value.
-                if (!cqUnfilteredEventsSet_newValue.isEmpty()) {
-                  executionStartTime = this.stats.startCqQueryExecution();
+              // Apply query on new value.
+              if (!cqUnfilteredEventsSet_newValue.isEmpty()) {
+                executionStartTime = this.stats.startCqQueryExecution();
+                synchronized (cQuery) {
-                  this.stats.endCqQueryExecution(executionStartTime);
+
+                this.stats.endCqQueryExecution(executionStartTime);
-                if (cQuery.cqResultKeysInitialized) {
+                if (cQuery.isCqResultsCacheInitialized()) {
-                  synchronized (cQuery) {
-                    // Apply query on old value.
-                    if (!cqUnfilteredEventsSet_oldValue.isEmpty()) {
-                      executionStartTime = this.stats.startCqQueryExecution();
+                  // Apply query on old value.
+                  if (!cqUnfilteredEventsSet_oldValue.isEmpty()) {
+                    executionStartTime = this.stats.startCqQueryExecution();
+
+                    synchronized (cQuery) {
-                      this.stats.endCqQueryExecution(executionStartTime);
-                    } else {
-                      if (isDebugEnabled) {
-                        logger.debug(
-                            "old value for event with key {} is null - query execution not performed",
-                            eventKey);
-                      }
+                    }
+
+                    this.stats.endCqQueryExecution(executionStartTime);
+                  } else {
+                    if (isDebugEnabled) {
+                      logger.debug(
+                          "old value for event with key {} is null - query execution not performed",
+                          eventKey);
-

MOV8 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 INS24 MOV58 MOV27 MOV37 MOV8 MOV60 MOV25 MOV60 MOV25 MOV60 MOV25 MOV25 MOV25 MOV60 INS70 MOV25 MOV44 MOV32 MOV8 MOV60 MOV60 MOV21 MOV21 MOV21 MOV25 MOV60 MOV60 MOV25 MOV60 MOV25 MOV32 MOV8 INS8 MOV8 MOV60 INS8 MOV60 MOV60 MOV25 MOV21 INS54 MOV25 UPD42 MOV8 MOV32 MOV8 MOV12 INS8 MOV21 MOV42 MOV42 UPD42 MOV25 INS25 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS8 MOV25 INS51 MOV25 INS25 INS25 INS21 INS42 INS42 INS8 INS32 INS42 MOV8 INS42 UPD42 MOV42 INS8 MOV8 INS32 INS21 INS21 MOV21 INS42 INS42 MOV25 INS21 INS42 INS42 INS42 MOV7 INS32 MOV7 INS42 INS42 INS42 INS51 INS42 INS42 INS8 MOV21 DEL42 DEL8 DEL51 DEL40 DEL42 DEL51 DEL54 DEL25 DEL8 DEL70 DEL8 DEL24 DEL8