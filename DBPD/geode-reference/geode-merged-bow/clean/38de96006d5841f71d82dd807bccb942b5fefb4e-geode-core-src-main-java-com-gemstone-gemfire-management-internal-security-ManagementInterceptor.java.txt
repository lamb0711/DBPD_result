GEODE-17: refactor ManagementIntercepter and MBeanServerWrapper

-import com.gemstone.gemfire.management.internal.ManagementConstants;
-import javax.management.Attribute;
-import javax.management.AttributeList;
-import java.util.List;
-import java.util.Map.Entry;
-public class ManagementInterceptor implements JMXAuthenticator {
+public class ManagementInterceptor implements JMXAuthenticator{
-		this.logger = logger;		
+		this.logger = logger;
+
-	  
+
-   *
-   * @param name
-   * @param methodName
-   * @param params
-   *
-  public ResourceOperationContext authorize(ObjectName name, final String methodName, Object[] params) {
+  public void authorize(ResourceOperationContext context) {
+    if(context==null){
+      return;
+    }
-      return com.gemstone.gemfire.management.internal.security.AccessControlContext.ACCESS_GRANTED_CONTEXT;
-      }
-
-    if (name.equals(accessControlMBeanON)) {
-      return com.gemstone.gemfire.management.internal.security.AccessControlContext.ACCESS_GRANTED_CONTEXT;
+      return;
-	  
-    if (!ManagementConstants.OBJECTNAME__DEFAULTDOMAIN.equals(name.getDomain()))
-      return com.gemstone.gemfire.management.internal.security.AccessControlContext.ACCESS_GRANTED_CONTEXT;
-		AccessControlContext acc = AccessController.getContext();		
+		AccessControlContext acc = AccessController.getContext();
-      return com.gemstone.gemfire.management.internal.security.AccessControlContext.ACCESS_GRANTED_CONTEXT;
-		}
-
-    if (methodName.equals(ResourceConstants.CREATE_MBEAN) || methodName.equals(ResourceConstants.UNREGISTER_MBEAN)) {
-      throw new SecurityException(ACCESS_DENIED_MESSAGE);
+      return;
-		
+
-		}		
-	
+		}
+
-		
-    if (logger.isDebugEnabled()) {
-      logger.debug("Name=" + name + " methodName=" + methodName + " principal=" + principal.getName());
-    }
-		
-    String method = methodName;
-    if (methodName.equals(GET_ATTRIBUTE)) {
-      method = GET_PREFIX + (String) params[0];
-    } else if(methodName.equals(GET_ATTRIBUTES)) {
-      //Pass to first attribute getter
-      String[] attrs = (String[]) params[0];
-      method = GET_PREFIX + attrs[0];
-    } else if(methodName.equals(SET_ATTRIBUTE)) {
-      Attribute attribute = (Attribute) params[0];
-      method = SET_PREFIX + attribute.getName();
-    }
-    if (methodName.equals(SET_ATTRIBUTES)) {
-      AttributeList attrList = (AttributeList) params[0];
-      List<Attribute> list = attrList.asList();
-      ResourceOperationContext setterContext = null;
-      SetAttributesOperationContext resourceContext = new SetAttributesOperationContext();
-      for (int i = 0; i < list.size(); i++) {
-        Attribute attribute = list.get(i);
-        String setter = SET_PREFIX + attribute.getName();
-        setterContext = buildContext(name, setter, null);
-        boolean authorized = accessControl.authorizeOperation(null, setterContext);
-        if (logger.isDebugEnabled()) {
-          logger.debug(
-              "Name=" + name + " methodName=" + methodName + " result=" + authorized + " principal=" + principal.getName());
-        }
-        if (!authorized) {
-          throw new SecurityException(ACCESS_DENIED_MESSAGE);
-        } else {
-          resourceContext.addAttribute(attribute.getName(), setterContext);
-        }
-      }
-      return resourceContext;
-    } else {
-      ResourceOperationContext resourceContext = buildContext(name, method, params);
-      boolean authorized = accessControl.authorizeOperation(null, resourceContext);
-      if (logger.isDebugEnabled()) {
-        logger.debug(
-            "Name=" + name + " methodName=" + methodName + " result=" + authorized + " principal=" + principal.getName());
-      }
-
-      if (!authorized) throw new SecurityException(ACCESS_DENIED_MESSAGE);
-      return resourceContext;
+    if (!accessControl.authorizeOperation(null, context)) {
+      throw new SecurityException(ACCESS_DENIED_MESSAGE);
-  private ResourceOperationContext buildContext(ObjectName name, String methodName, Object[] params) {
-    String service = name.getKeyProperty("service");
-    if (service == null && PROCESS_COMMAND.equals(methodName)) {
-      Object[] array = (Object[]) params[0];
-      String command = (String) array[0];
-      CLIOperationContext context = new CLIOperationContext(command);
-      return context;
-    } else {
-      ResourceOperationContext context = new JMXOperationContext(name, methodName);
-      return context;
-    }
-  }
-
-  public void postAuthorize(ObjectName name, final String methodName, ResourceOperationContext context, Object result) {
+  public void postAuthorize(ResourceOperationContext context) {
+
+    if(context==null){
+      return;
+    }
-    context.setPostOperationResult(result);
-
-    if (context.equals(com.gemstone.gemfire.management.internal.security.AccessControlContext.ACCESS_GRANTED_CONTEXT))
-      return;
-    if (context instanceof SetAttributesOperationContext) {
-      SetAttributesOperationContext setterContext = (SetAttributesOperationContext) context;
-      for (Entry<String, ResourceOperationContext> e : setterContext.getAttributesContextMap().entrySet()) {
-        //TODO : Retrieve proper values from AttributeList and set to its jmxContext
-        e.getValue().setPostOperationResult(result);
-        boolean authorized = accessControl.authorizeOperation(null, e.getValue());
-        if (!authorized)
-          throw new SecurityException(ACCESS_DENIED_MESSAGE);
-      }
-    } else {
-      boolean authorized = accessControl.authorizeOperation(null, context);
-      if (logger.isDebugEnabled()) {
-        logger.debug("postAuthorize: Name=" + name + " methodName=" + methodName + " result=" + authorized
-            + " principal=" + principal.getName());
-      }
-      if (!authorized)
-        throw new SecurityException(ACCESS_DENIED_MESSAGE);
+    if (!accessControl.authorizeOperation(null, context)) {
+      throw new SecurityException(ACCESS_DENIED_MESSAGE);

INS39 MOV25 MOV25 INS43 UPD42 MOV25 UPD42 MOV42 INS27 INS38 MOV8 INS27 INS8 MOV8 INS42 INS33 INS32 INS42 INS33 INS41 MOV32 MOV42 MOV42 MOV33 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL40 DEL40 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL40 DEL41 DEL25 DEL40 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL27 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL34 DEL2 DEL11 DEL27 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL34 DEL2 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL34 DEL2 DEL27 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL34 DEL2 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL34 DEL2 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL33 DEL32 DEL7 DEL21 DEL39 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL38 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL33 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL38 DEL42 DEL43 DEL42 DEL14 DEL53 DEL25 DEL42 DEL41 DEL8 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL34 DEL2 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL34 DEL2 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL41 DEL42 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL42 DEL33 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL8 DEL70 DEL8 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL38 DEL42 DEL43 DEL42 DEL14 DEL53 DEL25 DEL8 DEL25