GEODE-8338: change redis commands not be repeated when a server dies (#5351)

The redis functions are no longer HA.
The product does have some cases when it can safely retry the function
but if a server dies the client will see a redis error containing "memberDeparted".
In that case the client app can check to see if the redis operation should be done
again, or if it already happened even though a server died.

Co-authored-by: Sarah Abbey <sabbey@vmware.com>
Co-authored-by: Darrel Schneider <darrel@vmware.com>
-import java.util.Collections;
-import org.apache.geode.cache.execute.FunctionService;
-import org.apache.geode.redis.internal.executor.CommandFunction;
-import org.apache.geode.redis.internal.executor.SingleResultCollector;
+import org.apache.geode.redis.internal.executor.RedisCommandsFunctionInvoker;
-public class RedisKeyCommandsFunctionInvoker implements RedisKeyCommands {
-  private final Region<ByteArrayWrapper, RedisData> region;
-
+public class RedisKeyCommandsFunctionInvoker extends RedisCommandsFunctionInvoker
+    implements RedisKeyCommands {
-    this.region = region;
+    super(region);
-    return CommandFunction.invoke(DEL, key, null, region);
+    return invokeCommandFunction(key, DEL);
-    return CommandFunction.invoke(EXISTS, key, null, region);
+    return invokeCommandFunction(key, EXISTS);
-    return CommandFunction.invoke(PTTL, key, null, region);
+    return invokeCommandFunction(key, PTTL);
-    return CommandFunction.invoke(PEXPIREAT, key, timestamp, region);
+    return invokeCommandFunction(key, PEXPIREAT, timestamp);
-    return CommandFunction.invoke(PERSIST, key, null, region);
+    return invokeCommandFunction(key, PERSIST);
-    return CommandFunction.invoke(TYPE, key, null, region);
+    return invokeCommandFunction(key, TYPE);
+
-    SingleResultCollector<Boolean> rc = new SingleResultCollector<>();
-
-    FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(keysToOperateOn.get(0)))
-        .setArguments(
-            new Object[] {oldKey, newKey, keysToOperateOn, new ArrayList<>(), new ArrayList<>()})
-        .withCollector(rc)
-        .execute(RenameFunction.ID)
-        .getResult();
-
-    return rc.getResult();
+    return invoke(RenameFunction.ID, oldKey, oldKey, newKey, keysToOperateOn, new ArrayList<>(),
+        new ArrayList<>());

UPD40 INS43 UPD42 MOV42 MOV78 MOV44 MOV78 MOV44 MOV78 MOV44 MOV78 MOV44 INS46 INS41 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 INS40 UPD42 MOV42 INS42 INS42 INS42 MOV14 MOV14 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL43 DEL74 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL33 DEL42 DEL42 DEL33 DEL42 DEL42 DEL33 DEL42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL42 DEL33 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL32 DEL32 DEL32 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL4 DEL3 DEL32 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41