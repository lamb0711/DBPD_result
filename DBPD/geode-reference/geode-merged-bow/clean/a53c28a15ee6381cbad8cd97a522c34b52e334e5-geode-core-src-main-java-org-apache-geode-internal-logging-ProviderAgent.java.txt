GEODE-6122: Make log4j core optional (#2944)

* Add Logging ProviderAgent support for ServiceLoader
* Test for availability of Log4j Core before defaulting to Log4jAgent
* Change optional ProviderAgent methods to have default impls
* Extract LogLevelUpdateOccurs enum to top level class
* Extract LogLevelUpdateScope enum to top level class
* Move Banner to internal.logging package
* Break Banner's hard dependency on Log4J Core
* Improve javadocs
* Add field type to TestingOnly annotation
* Replace use of InternalLogWriter constants with LogWriterLevel enum

-import org.apache.geode.internal.logging.Configuration.LogLevelUpdateOccurs;
-import org.apache.geode.internal.logging.Configuration.LogLevelUpdateScope;
+import org.apache.geode.distributed.ConfigurationProperties;
- * Provides custom configuration of the logging backend for Geode logging.
+ * Provides custom configuration of the logging backend for Geode Logging.
-   * Updates the logging backend with custom configuration.
+   * Updates the logging backend with any custom configuration. Invoked by Geode during
+   * {@code Cache} creation and anytime Geode configuration of logging changes, such as when
+   * {@link ConfigurationProperties#LOG_LEVEL} is adjusted.
-   * Removes any custom configuration from the logging backend.
+   * Removes any custom configuration from the logging backend. Invoked by Geode after closing
+   * the {@code Cache}.
-  void enableLoggingToStandardOutput();
+  /**
+   * Returns configuration info to be logged as part of the Geode Logging {@link Banner}. Default
+   * implementation returns the class name. Geode out-of-box returns the path to the log4j2.xml
+   * configuration file.
+   */
+  default String getConfigurationInfo() {
+    return getClass().getName();
+  }
-  void disableLoggingToStandardOutput();
+  /**
+   * Optional: Invoked by Geode during {@code Cache} creation if
+   * {@link ConfigurationProperties#LOG_FILE} is specified.
+   *
+   * <p>
+   * Geode out-of-box disables logging to stdout when {@code Cache} creation starts logging to a
+   * file.
+   */
+  default void disableLoggingToStandardOutput() {
+    // override to disable logging to stdout
+  }
+
+  /**
+   * Optional: Invoked by Geode when closing a {@code Cache} that was logging to a file.
+   *
+   * <p>
+   * Geode out-of-box re-enables logging to stdout after closing a {@code Cache} that was logging
+   * to a file.
+   */
+  default void enableLoggingToStandardOutput() {
+    // override to enable logging to stdout
+  }

UPD40 INS31 INS29 INS83 INS43 INS42 INS8 INS29 INS83 UPD42 INS8 INS29 INS83 UPD42 INS8 UPD66 INS65 INS42 INS41 INS65 INS65 UPD66 INS65 INS66 INS65 INS66 UPD66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS32 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS67 INS66 INS42 INS32 INS42 INS66 INS67 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26