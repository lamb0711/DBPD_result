GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-import com.gemstone.gemfire.management.internal.security.ResourceOperationContext;
+import com.gemstone.gemfire.cache.operations.internal.ResourceOperationContext;
-    authorize(new ResourceOperationContext(resource, operation, regionName));
+    authorize(new ResourceOperationContext(resource, operation, regionName, false));
-    if(context==null)
-      return;
+    if (context == null) return;
-    if(context.getResource()== Resource.NULL && context.getOperationCode()== OperationCode.NULL)
-      return;
+    if (context.getResource() == Resource.NULL && context.getOperationCode() == OperationCode.NULL) return;
-    if(currentUser==null)
-      return;
+    if (currentUser == null) return;
-    }
-    catch(ShiroException e){
+    } catch (ShiroException e) {
-  private static boolean isSecured(){
-    try{
+  private static boolean isSecured() {
+    try {
-    }
-    catch(UnavailableSecurityManagerException e){
+    } catch (UnavailableSecurityManagerException e) {
-    if(securityProps==null)
-      return;
+    if (securityProps == null) return;
-      IniSecurityManagerFactory factory = new IniSecurityManagerFactory("classpath:"+shiroConfig);
+      IniSecurityManagerFactory factory = new IniSecurityManagerFactory("classpath:" + shiroConfig);
-      if(!main.containsKey("iniRealm.permissionResolver")) {
+      if (!main.containsKey("iniRealm.permissionResolver")) {
-    }
-    else if (!com.gemstone.gemfire.internal.lang.StringUtils.isBlank(customAuthenticator)) {
+    } else if (!com.gemstone.gemfire.internal.lang.StringUtils.isBlank(customAuthenticator)) {
-    }
-    else{
+    } else {

UPD40 INS9