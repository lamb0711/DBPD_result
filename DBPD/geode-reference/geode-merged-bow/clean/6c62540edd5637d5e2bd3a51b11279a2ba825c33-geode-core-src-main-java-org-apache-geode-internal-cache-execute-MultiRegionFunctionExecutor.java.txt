GEODE-6588: Properly type Function execution related interfaces. (#3691)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Peter Tran <ptran@gmail.com>

* Extensions and implementations of Execution and ResultCollector and the 
classes and interfaces involved in the execution chain were lacking the
ability to apply Generic types.
* Typing issues starting from MemberConfigManager.java class were fixed.
* Trivial IDE warnings were fixed.
-public class MultiRegionFunctionExecutor extends AbstractExecution {
+public class MultiRegionFunctionExecutor<ArgumentT, ReturnT, AggregatorT>
+    extends AbstractExecution<ArgumentT, ReturnT, AggregatorT> {
-  private MultiRegionFunctionExecutor(MultiRegionFunctionExecutor drfe) {
-    super(drfe);
-    this.regions = drfe.regions;
-    if (drfe.filter != null) {
-      this.filter.clear();
-      this.filter.addAll(drfe.filter);
-    }
-    this.sender = drfe.sender;
-  }
-
-  private MultiRegionFunctionExecutor(Set<Region> regions, Set filter2, Object args,
-      MemberMappedArgument memberMappedArg, ServerToClientFunctionResultSender resultSender) {
-    if (args != null) {
-      this.args = args;
-    } else if (memberMappedArg != null) {
-      this.memberMappedArg = memberMappedArg;
-      this.isMemberMappedArgument = true;
-    }
-    this.sender = resultSender;
-    if (filter2 != null) {
-      this.filter.clear();
-      this.filter.addAll(filter2);
-    }
-    this.regions = regions;
-    this.isClientServerMode = true;
-  }
-
-  public InternalExecution withBucketFilter(Set<Integer> bucketIDs) {
+  public InternalExecution<ArgumentT, ReturnT, AggregatorT> withBucketFilter(
+      Set<Integer> bucketIDs) {
-        new HashSet<InternalDistributedMember>(memberToRegionMap.keySet());
+        new HashSet<>(memberToRegionMap.keySet());
+    assert cache != null;
-      Set<Region> regions = new HashSet<Region>();
+      Set<Region> regions = new HashSet<>();
-      boolean isTx = cache.getTxManager().getTXState() == null ? false : true;
+      boolean isTx = cache.getTxManager().getTXState() != null;
-          new HashMap<InternalDistributedMember, Object>();
+          new HashMap<>();
-    Map<InternalDistributedMember, Set<String>> memberToRegions =
-        new HashMap<InternalDistributedMember, Set<String>>();
+    Map<InternalDistributedMember, Set<String>> memberToRegions = new HashMap<>();
-    Set<InternalDistributedMember> nodes = new HashSet<InternalDistributedMember>();
+    Set<InternalDistributedMember> nodes = new HashSet<>();
-            regions = new HashSet<String>();
+            regions = new HashSet<>();
-              regions = new HashSet<String>();
+              regions = new HashSet<>();
-                regions = new HashSet<String>();
+                regions = new HashSet<>();
-              regions = new HashSet<String>();
+              regions = new HashSet<>();
-            regions = new HashSet<String>();
+            regions = new HashSet<>();
-          regions = new HashSet<String>();
+          regions = new HashSet<>();

INS73 INS73 INS73 INS74 INS42 INS42 INS42 MOV43 UPD43 MOV43 UPD43 MOV43 INS43 INS74 MOV8 UPD42 UPD42 UPD42 MOV42 MOV43 INS43 INS43 INS43 INS6 MOV60 MOV60 INS70 MOV41 INS42 INS42 INS42 INS59 INS27 MOV74 MOV44 INS42 MOV8 INS42 INS14 INS42 INS33 INS60 UPD42 MOV60 INS25 INS74 MOV32 MOV74 MOV59 UPD74 UPD74 MOV62 MOV8 MOV25 MOV43 UPD42 UPD27 MOV27 MOV62 INS8 UPD74 UPD74 INS25 MOV62 INS25 MOV27 MOV8 INS25 MOV25 MOV27 INS8 MOV32 INS8 INS21 INS25 MOV60 MOV60 MOV60 MOV25 MOV21 MOV21 INS7 MOV27 INS8 MOV25 INS42 INS14 INS21 INS74 INS7 MOV25 UPD74 MOV43 INS42 MOV14 UPD74 UPD74 UPD74 UPD74 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL46 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL40 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL74 DEL42 DEL44 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL8 DEL25 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL8 DEL31 DEL42 DEL43 DEL9 DEL9 DEL16 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL25 DEL25 DEL42 DEL59 DEL60 DEL42 DEL70 DEL8