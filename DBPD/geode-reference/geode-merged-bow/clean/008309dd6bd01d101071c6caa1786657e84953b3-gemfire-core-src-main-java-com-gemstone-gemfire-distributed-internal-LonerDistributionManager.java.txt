Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-import com.gemstone.gemfire.distributed.internal.membership.jgroup.GFJGBasicAdapter;
-import com.gemstone.gemfire.internal.logging.LogWriterImpl;
-import com.gemstone.org.jgroups.JChannel;
-    this.viewMembers = new Vector(allIds);
+    this.viewMembers = new ArrayList<InternalDistributedMember>(allIds);
-    JChannel.setDefaultGFFunctions(new GFJGBasicAdapter());
-  private final Vector viewMembers;// = new Vector(allIds);
+  private final List<InternalDistributedMember> viewMembers;
-  public Vector getViewMembers() {
+  
+  @Override
+  public List<InternalDistributedMember> getViewMembers() {
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
-    public int getDLockWaitsInProgress() {return 0;}
-    public int getDLockWaitsCompleted() {return 0;}
-    public long getDLockWaitTime() {return 0;}
-    public long startDLockWait() {return 0;}
-    public void endDLockWait(long start, boolean gotit) {}
-    public void incDLockVetosSent(int ops) {}
-    public void incDLockVetosReceived(int ops) {}
-    public void incDLockYesVotesSent(int ops) {}
-    public void incDLockYesVotesReceived(int ops) {}
-    public void incDLockNoVotesSent(int ops) {}
-    public void incDLockNoVotesReceived(int ops) {}
-    public void incDLockAbstainsSent(int ops) {}
-    public void incDLockAbstainsReceived(int ops) {}
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
-    public long startUcastWrite() { return 0; }
-    public void endUcastWrite(long start, int bytesWritten) {}
-    public void incUcastWrites(int bytesWritten) {}
-    public long startMcastWrite() { return 0; }
-    public void endMcastWrite(long start, int bytesWritten) {}
-    public void incMcastWrites(int bytesWritten) {}
+    @Override
+    public void incUcastWriteBytes(int bytesWritten) {}
+    @Override
+    public void incMcastWriteBytes(int bytesWritten) {}
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
-    public long startUcastFlush() { return 0; }
-    public void endUcastFlush(long start) {}
-    public void incFlowControlRequests() {}
-    public void incFlowControlResponses() {}
-    public long startFlowControlWait() { return 0; }
-    public void endFlowControlWait(long start) {}
-    public long startFlowControlThrottleWait() { return 0; }
-    public void endFlowControlThrottleWait(long start) {}
-    public void incUcastReadBytes(long amount) {}
-    public void incMcastReadBytes(long amount) {}
-    public void incJgUNICASTdataReceived(long amount) {}
-
-    public void setJgQueuedMessagesSize(long value) {}
-    public void setJgSTABLEreceivedMessagesSize(long value) {}
-    public void setJgSTABLEsentMessagesSize(long value) {}
-    public void incJgSTABLEsuspendTime(long value) {}
-    public void incJgSTABLEmessages(long value) {}
-    public void incJgSTABLEmessagesSent(long value) {}
-    public void incJgSTABILITYmessages(long value) {}
-
-    public void incjgDownTime(long value){}
-    public void incjgUpTime(long value){}
-    public void incjChannelUpTime(long value){}
-    
-    public void incThreadOwnedReceivers(long value, int dominoCount) {}
-
-    public void incJgFCsendBlocks(long value)
-    {}
-    public void incJgFCautoRequests(long value)
-    {}
-    public void incJgFCreplenish(long value)
-    {}
-    public void incJgFCresumes(long value)
-    {}
-    public void incJgFCsentCredits(long value)
-    {}
-    public void incJgFCsentThrottleRequests(long value)
-    {}
-    public void incJgFragmentationsPerformed()
-    {}
-    public void incJgFragmentsCreated(long numFrags)
-    {}
-    public void setJgUNICASTreceivedMessagesSize(long amount) {
-    }
-    public void setJgUNICASTsentMessagesSize(long amount) {
-    }
-    public void setJgUNICASTsentHighPriorityMessagesSize(long amount) {
-    }
+    @Override
+    public int getMcastReads() { return 0; }
+    @Override
+    public void incUcastReadBytes(int amount) {}
+    @Override
+    public void incMcastReadBytes(int amount) {}
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
-    public void incJgNAKACKwaits(long value) {}
-    public void incThreadOwnedReceivers(long value) {}
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    public void incThreadOwnedReceivers(long value, int dominoCount) {
+    }
+    @Override
+    public long getHeartbeatRequestsSent() {return 0;}
+    @Override
+    public void incHeartbeatRequestsSent() {}
+    @Override
+    public long getHeartbeatRequestsReceived() {return 0;}
+    @Override
+    public void incHeartbeatRequestsReceived() {}
+    @Override
+    public long getHeartbeatsSent() {return 0;}
+    @Override
+    public void incHeartbeatsSent() {}
+    @Override
+    public long getHeartbeatsReceived() {return 0;}
+    @Override
+    public void incHeartbeatsReceived() {}
+    @Override
+    public long getSuspectsSent() {return 0;}
+    @Override
+    public void incSuspectsSent() {}
+    @Override
+    public long getSuspectsReceived() {return 0;}
+    @Override
+    public void incSuspectsReceived() {}
+    @Override
+    public long getFinalCheckRequestsSent() {return 0;}
+    @Override
+    public void incFinalCheckRequestsSent() {}
+    @Override
+    public long getFinalCheckRequestsReceived() {return 0;}
+    @Override
+    public void incFinalCheckRequestsReceived() {}
+    @Override
+    public long getFinalCheckResponsesSent() {return 0;}
+    @Override
+    public void incFinalCheckResponsesSent() {}
+    @Override
+    public long getFinalCheckResponsesReceived() {return 0;}
+    @Override
+    public void incFinalCheckResponsesReceived() {}
+    @Override    
+    public long getTcpFinalCheckRequestsSent() {return 0;}
+    @Override
+    public void incTcpFinalCheckRequestsSent() {}
+    @Override
+    public long getTcpFinalCheckRequestsReceived() {return 0;}
+    @Override
+    public void incTcpFinalCheckRequestsReceived() {}
+    @Override
+    public long getTcpFinalCheckResponsesSent() {return 0;}
+    @Override
+    public void incTcpFinalCheckResponsesSent() {}
+    @Override
+    public long getTcpFinalCheckResponsesReceived() {return 0;}
+    @Override
+    public void incTcpFinalCheckResponsesReceived() {}
+    @Override
+    public long getUdpFinalCheckRequestsSent() {return 0;}
+    @Override
+    public void incUdpFinalCheckRequestsSent() {}
+    @Override
+    public long getUdpFinalCheckResponsesReceived() {return 0;}
+    @Override
+    public void incUdpFinalCheckResponsesReceived() {}
-      MemberAttributes.setDefaults(lonerPort,
-              com.gemstone.gemfire.internal.OSProcess.getId(),
-              DistributionManager.LONER_DM_TYPE, -1,
-              name,
-              MemberAttributes.parseGroups(config.getRoles(), config.getGroups()), dac);
-      result = new InternalDistributedMember(host, lonerPort, name, uniqueString);
+      result = new InternalDistributedMember(host, lonerPort, name, uniqueString, DistributionManager.LONER_DM_TYPE,
+          MemberAttributes.parseGroups(config.getRoles(), config.getGroups()), dac);
-    MemberAttributes.setDefaults(lonerPort,
-        MemberAttributes.DEFAULT.getVmPid(),
-        DistributionManager.LONER_DM_TYPE,
-        -1,
-        MemberAttributes.DEFAULT.getName(),
-        MemberAttributes.DEFAULT.getGroups(), MemberAttributes.DEFAULT.getDurableClientAttributes());
-    value.add(this.getId().getIpAddress());
+    value.add(this.getId().getInetAddress());

MOV31 MOV31 INS74 INS78 INS74 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS43 INS43 INS42 INS43 INS43 INS78 INS78 INS78 INS78 INS78 INS78 MOV8 INS78 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 INS78 MOV8 INS78 MOV83 MOV39 MOV42 MOV44 MOV8 INS78 MOV8 INS78 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV44 INS78 MOV8 INS78 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV44 INS78 MOV8 INS78 MOV8 INS78 MOV8 INS78 MOV8 INS78 INS78 INS78 MOV8 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 MOV8 INS78 INS8 INS78 INS78 INS78 MOV44 INS78 MOV8 INS78 MOV44 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV8 INS78 MOV44 INS78 MOV44 INS78 MOV44 INS78 MOV44 INS78 MOV44 INS78 MOV83 MOV39 UPD42 MOV42 MOV44 MOV8 INS78 MOV83 MOV39 UPD42 MOV42 MOV44 MOV8 INS78 INS78 INS78 INS78 MOV8 INS78 MOV8 INS78 UPD39 UPD42 MOV8 INS78 UPD42 INS78 UPD42 INS44 INS78 UPD39 UPD42 MOV8 INS78 UPD39 UPD42 MOV8 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV8 INS78 MOV83 INS39 INS42 MOV8 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD39 UPD42 MOV8 INS78 INS39 INS42 MOV8 INS78 INS39 INS42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD42 INS78 INS39 INS42 MOV8 INS78 UPD42 MOV44 INS78 INS39 INS42 MOV8 INS78 UPD42 INS78 INS39 INS42 MOV8 INS78 UPD42 INS78 INS39 INS42 MOV8 INS78 UPD42 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD42 MOV8 INS78 UPD42 MOV8 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV8 INS78 UPD39 UPD42 MOV44 INS8 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD39 UPD42 MOV44 INS8 INS78 INS83 INS39 INS42 MOV44 MOV44 INS8 INS78 UPD39 UPD42 MOV44 MOV44 INS8 INS78 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 INS78 UPD39 UPD42 MOV44 INS8 INS78 UPD42 MOV44 INS78 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 MOV44 INS8 INS78 UPD42 MOV44 INS78 UPD42 MOV8 INS78 UPD42 MOV44 INS78 UPD39 UPD42 INS8 INS78 INS78 UPD39 UPD42 MOV8 INS78 UPD39 UPD42 INS8 INS78 UPD39 UPD42 MOV8 INS78 UPD39 UPD42 INS8 INS78 UPD42 MOV8 INS78 UPD42 INS78 UPD42 MOV8 INS78 UPD42 INS78 UPD42 MOV8 INS78 UPD42 INS78 INS39 INS42 MOV8 INS78 UPD42 INS78 UPD39 UPD42 MOV8 INS78 UPD42 INS78 UPD42 MOV8 INS78 UPD42 INS78 UPD42 MOV8 INS78 UPD42 INS78 UPD39 UPD42 INS78 UPD42 INS78 UPD39 UPD42 INS8 INS78 UPD42 INS78 UPD39 UPD42 INS8 INS78 UPD42 INS78 UPD39 UPD42 INS8 INS78 UPD42 INS78 UPD39 UPD42 INS78 UPD42 INS78 UPD42 INS8 INS78 MOV83 MOV39 UPD42 MOV42 INS8 INS78 INS83 INS39 INS42 MOV8 INS78 UPD42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD39 UPD42 INS42 INS39 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS74 UPD42 INS43 INS43 INS42 UPD42 MOV42 INS40 MOV32 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL43 DEL43 DEL83 DEL39 DEL42 DEL31 DEL83 DEL39 DEL42 DEL31 DEL83 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL83 DEL42 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL31 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL31 DEL83 DEL39 DEL42 DEL8 DEL31 DEL39 DEL42 DEL44 DEL31 DEL83 DEL39 DEL42 DEL31 DEL83 DEL39 DEL42 DEL8 DEL31 DEL39 DEL42 DEL44 DEL31 DEL8 DEL39 DEL42 DEL44 DEL8 DEL83 DEL39 DEL42 DEL8 DEL31 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL31 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL8 DEL39 DEL42 DEL44 DEL31 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL40 DEL34 DEL38 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL40 DEL34 DEL38 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL32 DEL21