GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

-  private final int TIMEOUT_REMOVED = 1;
-
-  private final int KEY_NOT_EXIST_OR_NO_TIMEOUT = 0;
-
-    boolean canceled = context.getRegionProvider().cancelKeyExpiration(key);
-
-    if (canceled) {
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), TIMEOUT_REMOVED));
-    } else {
-      command.setResponse(
-          Coder.getIntegerResponse(context.getByteBufAllocator(), KEY_NOT_EXIST_OR_NO_TIMEOUT));
-    }
+    RedisKeyCommands redisKeyCommands = new RedisKeyCommandsFunctionExecutor(
+        context.getRegionProvider().getDataRegion());
+    int result = redisKeyCommands.persist(key);
+    command.setResponse(
+        Coder.getIntegerResponse(
+            context.getByteBufAllocator(),
+            result));

INS60 MOV21 INS43 INS39 INS59 INS42 UPD42 INS14 INS42 INS32 INS43 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 UPD42 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL39 DEL42 DEL42 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25