Merge remote-tracking branch 'upstream/develop' into develop

+import org.apache.geode.cache.Region;
+import org.apache.geode.cache.asyncqueue.AsyncEventQueueFactory;
+import org.apache.geode.connectors.jdbc.JdbcAsyncWriter;
+import org.apache.geode.connectors.jdbc.JdbcLoader;
+import org.apache.geode.connectors.jdbc.JdbcWriter;
+/**
+ * The Object[] must always be of size two.
+ * The first element must be a RegionMapping.
+ * The second element must be a Boolean that is true if synchronous.
+ */
-public class CreateMappingFunction extends CliFunction<RegionMapping> {
+public class CreateMappingFunction extends CliFunction<Object[]> {
-  public CliFunctionResult executeFunction(FunctionContext<RegionMapping> context)
+  public CliFunctionResult executeFunction(FunctionContext<Object[]> context)
-    RegionMapping regionMapping = context.getArguments();
+    Object[] arguments = context.getArguments();
+    RegionMapping regionMapping = (RegionMapping) arguments[0];
+    boolean synchronous = (boolean) arguments[1];
-    verifyRegionExists(context, regionMapping);
+    String regionName = regionMapping.getRegionName();
+    Region<?, ?> region = verifyRegionExists(context.getCache(), regionName);
+    String queueName = CreateMappingCommand.createAsyncEventQueueName(regionName);
+    if (!synchronous) {
+      createAsyncEventQueue(context.getCache(), queueName,
+          region.getAttributes().getDataPolicy().withPartitioning());
+    }
+    alterRegion(region, queueName, synchronous);
-  private void verifyRegionExists(FunctionContext<RegionMapping> context,
-      RegionMapping regionMapping) {
-    Cache cache = context.getCache();
-    String regionName = regionMapping.getRegionName();
-    if (cache.getRegion(regionName) == null) {
+  /**
+   * Change the existing region to have
+   * the JdbcLoader as its cache-loader
+   * and the given async-event-queue as one of its queues.
+   */
+  private void alterRegion(Region<?, ?> region, String queueName, boolean synchronous) {
+    region.getAttributesMutator().setCacheLoader(new JdbcLoader());
+    if (synchronous) {
+      region.getAttributesMutator().setCacheWriter(new JdbcWriter());
+    } else {
+      region.getAttributesMutator().addAsyncEventQueueId(queueName);
+    }
+  }
+
+  /**
+   * Create an async-event-queue with the given name.
+   * For a partitioned region a parallel queue is created.
+   * Otherwise a serial queue is created.
+   */
+  private void createAsyncEventQueue(Cache cache, String queueName, boolean isPartitioned) {
+    AsyncEventQueueFactory asyncEventQueueFactory = cache.createAsyncEventQueueFactory();
+    asyncEventQueueFactory.setParallel(isPartitioned);
+    asyncEventQueueFactory.create(queueName, new JdbcAsyncWriter());
+  }
+
+  private Region<?, ?> verifyRegionExists(Cache cache, String regionName) {
+    Region<?, ?> result = cache.getRegion(regionName);
+    if (result == null) {
+    return result;

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS29 INS74 INS31 INS31 INS65 MOV43 INS5 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS74 INS66 INS66 INS66 INS43 INS85 UPD74 INS60 INS60 INS60 INS60 INS60 INS25 INS21 INS65 INS74 INS42 INS43 INS42 INS39 INS42 INS21 INS25 INS65 MOV43 INS42 INS43 INS42 INS39 INS42 INS60 INS21 INS21 INS43 INS76 INS76 INS43 UPD42 UPD43 UPD42 INS41 INS42 INS5 INS5 MOV43 INS59 INS39 INS59 MOV43 INS59 INS74 INS59 INS43 INS59 INS38 INS8 INS32 INS66 INS66 INS66 UPD43 MOV43 INS76 INS76 INS42 INS32 INS42 INS8 INS8 INS66 INS66 INS66 INS42 INS43 INS59 INS32 INS32 INS42 UPD42 MOV42 UPD42 INS74 INS42 INS43 INS85 INS43 INS85 UPD42 INS42 INS11 INS42 INS11 INS42 INS42 MOV32 INS43 INS76 INS76 INS42 INS32 INS42 INS42 INS32 INS42 MOV21 INS42 INS42 INS42 INS42 UPD42 INS32 INS42 INS14 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS76 INS76 UPD42 MOV32 INS42 UPD42 MOV42 INS42 INS43 INS2 INS39 INS2 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS42 INS42 INS43 UPD42 MOV42 INS42 INS42 INS34 INS42 INS34 UPD42 INS32 INS42 INS32 INS42 INS32 INS42 INS14 INS32 INS42 INS42 INS42 MOV42 INS42 INS32 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 INS42 DEL74 DEL43 DEL39 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL60