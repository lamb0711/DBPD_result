GEODE-4372: clean up RemoteOperationMessage classes (#1338)


* throw RemoteOperationException instead of ForceReattemptException when cache is closing. All ForceReattemptException throwing by RemoteOperationMessage has been removed.

* now uses SERIAL_EXECUTOR for all RemoteOperationMessages.
Previously most of these messages where processed in the partitioned message
thread pool even though most all of these messages where not partitioned.
It is possible that RemotePutAll and RemoteRemoveAll will have some trouble
being SERIAL_EXECUTOR.

* added comments for all RemoteOperationMessages describing what
they are used for

* Improved RemoteOperationMessageTest

* added a BucketTXRegionStub to calculate bucket region size on a stub.

* removed GemFireCacheImpl.getInstance call

* added RemoteOperationResponse unit test

* renamed handleAsUnexpected to handleCause

* renamed waitForCacheException to waitForRemoteResponse

* moved RemoteOperation classes to tx package


-package org.apache.geode.internal.cache;
+package org.apache.geode.internal.cache.tx;
-import java.util.Collections;
+import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.internal.cache.PartitionedRegion;
+import org.apache.geode.internal.cache.RemoteOperationException;
-    Assert.assertTrue(recipient != null,
-        "PRDistribuedRemoteContainsKeyValueMessage NULL reply message");
+    Assert.assertTrue(recipient != null, "recipient can not be NULL");
-        new RemoteContainsKeyValueResponse(r.getSystem(), Collections.singleton(recipient), key);
+        new RemoteContainsKeyValueResponse(r.getSystem(), recipient, key);
-    Set failures = r.getDistributionManager().putOutgoing(m);
+    Set<?> failures = r.getDistributionManager().putOutgoing(m);
-  public boolean isSevereAlertCompatible() {
-    // allow forced-disconnect processing for all cache op messages
-    return true;
-  }
-
-  @Override
-   * {@link org.apache.geode.internal.cache.RemoteContainsKeyValueMessage.RemoteContainsKeyValueReplyMessage}
+   * {@link org.apache.geode.internal.cache.tx.RemoteContainsKeyValueMessage.RemoteContainsKeyValueReplyMessage}
-    public RemoteContainsKeyValueResponse(InternalDistributedSystem ds, Set recipients,
-        Object key) {
-      super(ds, recipients, false);
+    public RemoteContainsKeyValueResponse(InternalDistributedSystem ds,
+        InternalDistributedMember recipient, Object key) {
+      super(ds, recipient, false);
-     * @throws PrimaryBucketException if the instance of the bucket that received this operation was
-     *         not primary
-    public boolean waitForContainsResult() throws PrimaryBucketException, RemoteOperationException {
+    public boolean waitForContainsResult() throws RemoteOperationException {
-        waitForCacheException();
-      } catch (RemoteOperationException rce) {
-        rce.checkKey(key);
-        throw rce;
+        waitForRemoteResponse();
-        logger.debug("ContainsKeyValueResponse got remote CacheException; forcing reattempt.", ce);
+        logger.debug("ContainsKeyValueResponse got remote CacheException", ce);

MOV26 INS26 INS26 UPD40 INS40 UPD40 INS40 INS74 UPD43 UPD42 UPD45 MOV43 INS76 UPD40 UPD42 UPD42 INS42 UPD42 UPD45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL78 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31 DEL42 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12