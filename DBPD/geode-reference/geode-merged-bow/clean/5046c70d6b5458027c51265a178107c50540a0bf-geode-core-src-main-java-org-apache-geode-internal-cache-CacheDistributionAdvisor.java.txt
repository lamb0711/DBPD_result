Merge pull request #4086 from Nordix/feature/GEODE-6807

GEODE-6807: cache adviseUpdate and adviseAllEventsOrCached
+  private Set<InternalDistributedMember> adviseSetforAllEvents = Collections.emptySet();
+  private volatile long adviseAllEventsVersion = -1;
+
+  private Set<InternalDistributedMember> adviseSetforUpdate = Collections.emptySet();
+  private volatile long adviseUpdateVersion = -1;
+
+  private volatile long inRecoveryVersion = 0;
+  private volatile long adviseInRecoveryVersion = -1;
+
+  public synchronized void incInRecoveryVersion() {
+    inRecoveryVersion++;
+  }
+
-   * @param excludeInRecovery if true then members in recovery are excluded
-  private Set<InternalDistributedMember> adviseAllEventsOrCached(final boolean excludeInRecovery)
+  Set<InternalDistributedMember> adviseAllEventsOrCached()
-    return adviseFilter(profile -> {
-      assert profile instanceof CacheProfile;
-      CacheProfile cp = (CacheProfile) profile;
-      if (excludeInRecovery && cp.inRecovery) {
-        return false;
+
+    // minimize volatile reads by copying ref to local var
+    long tempProfilesVersion = profilesVersion; // volatile read
+    long tempInRecoveryVersion = inRecoveryVersion; // volatile read
+
+    if (adviseAllEventsVersion != tempProfilesVersion
+        || adviseInRecoveryVersion != tempInRecoveryVersion) {
+      synchronized (adviseSetforAllEvents) {
+        if (adviseAllEventsVersion != tempProfilesVersion
+            || adviseInRecoveryVersion != tempInRecoveryVersion) {
+
+          adviseSetforAllEvents = Collections.unmodifiableSet(adviseFilter(profile -> {
+            CacheProfile cp = (CacheProfile) profile;
+            if (cp.getInRecovery()) {
+              return false;
+            }
+            return cp.cachedOrAllEventsWithListener();
+          }));
+          adviseAllEventsVersion = tempProfilesVersion;
+          adviseInRecoveryVersion = tempInRecoveryVersion;
+        }
-      return cp.cachedOrAllEventsWithListener();
-    });
+    }
+    return adviseSetforAllEvents;
+
-      return adviseAllEventsOrCached(true/* fixes 41147 */);
+      return adviseAllEventsOrCached();
-      return adviseFilter(profile -> {
-        assert profile instanceof CacheProfile;
-        CacheProfile cp = (CacheProfile) profile;
-        DataPolicy dp = cp.dataPolicy;
-        return dp.withReplication()
-            || (cp.allEvents() && (dp.withStorage() || cp.hasCacheListener));
-      });
+
+      // minimize volatile reads by copying ref to local var
+      long tempProfilesVersion = profilesVersion; // volatile read
+
+      if (adviseUpdateVersion != tempProfilesVersion) {
+        synchronized (adviseSetforUpdate) {
+          if (adviseUpdateVersion != tempProfilesVersion) {
+
+            adviseSetforUpdate = Collections.unmodifiableSet(adviseFilter(profile -> {
+              CacheProfile cp = (CacheProfile) profile;
+              DataPolicy dp = cp.getDataPolicy();
+              return dp.withReplication()
+                  || (cp.allEvents() && (dp.withStorage() || cp.hasCacheListener));
+            }));
+            adviseUpdateVersion = tempProfilesVersion;
+          }
+        }
+      }
+      return adviseSetforUpdate;
-    return adviseAllEventsOrCached(true);
+    return adviseAllEventsOrCached();
-      return !cp.inRecovery;
+      return !cp.getInRecovery();
-      if (prof.inRecovery) {
+      if (prof.getInRecovery()) {
-      if (profile.inRecovery) {
+      if (profile.getInRecovery()) {
+
-    public boolean inRecovery = false;
+    private boolean inRecovery = false;
+    public boolean getInRecovery() {
+      return inRecovery;
+    };
+
+    public void setInRecovery(boolean recovery) {
+      inRecovery = recovery;
+    };
+
+    public DataPolicy getDataPolicy() {
+      return dataPolicy;
+    }
+

INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS83 INS74 INS59 INS83 INS83 INS39 INS59 INS83 INS74 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS42 INS8 INS8 INS8 INS31 INS31 INS31 INS43 INS43 INS42 INS32 INS42 INS38 INS43 INS43 INS42 INS32 INS42 INS38 INS42 INS34 INS42 INS38 INS21 MOV21 INS60 INS60 INS25 INS41 INS25 UPD83 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS34 INS34 INS37 INS39 INS59 INS39 INS59 INS27 INS8 INS42 MOV27 INS8 INS8 INS41 INS39 INS42 INS21 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS51 INS41 INS60 INS25 INS41 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS32 INS39 INS59 INS27 INS8 INS42 INS32 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS51 INS42 INS42 INS27 MOV8 INS42 MOV8 INS32 INS27 INS27 INS21 INS21 INS21 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 MOV32 INS7 INS7 INS42 INS32 INS42 INS42 INS42 INS42 MOV32 INS32 INS42 INS42 INS32 INS42 INS42 DEL42 DEL66 DEL65 DEL83 DEL83 DEL39 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL6 DEL42 DEL40 DEL27 DEL41 DEL42 DEL9 DEL32 DEL41 DEL8 DEL42 DEL42 DEL43 DEL62 DEL6 DEL40 DEL41 DEL9 DEL40 DEL40 DEL40