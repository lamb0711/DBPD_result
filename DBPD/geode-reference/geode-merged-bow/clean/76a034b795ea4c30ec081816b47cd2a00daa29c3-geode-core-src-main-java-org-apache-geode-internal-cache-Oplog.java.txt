Revert "GEODE-8337: git mv Version.java->KnownVersion.java"

This reverts commit 17d66791

-import org.apache.geode.internal.serialization.KnownVersion;
+import org.apache.geode.internal.serialization.Version;
-  protected KnownVersion gfversion;
+  protected Version gfversion;
-  protected KnownVersion dataVersion;
+  protected Version dataVersion;
-      this.gfversion = KnownVersion.CURRENT;
+      this.gfversion = Version.CURRENT;
-    KnownVersion dataVersion = getDataVersionIfOld();
+    Version dataVersion = getDataVersionIfOld();
-      dataVersion = KnownVersion.CURRENT;
+      dataVersion = Version.CURRENT;
-      writeProductVersionRecord(KnownVersion.TOKEN, olf);
+      writeProductVersionRecord(Version.TOKEN, olf);
-  private void writeProductVersionRecord(KnownVersion version, OplogFile olf) throws IOException {
+  private void writeProductVersionRecord(Version version, OplogFile olf) throws IOException {
-  public KnownVersion currentRecoveredGFVersion() {
+  public Version currentRecoveredGFVersion() {
-      final KnownVersion version = getProductVersionIfOld();
+      final Version version = getProductVersionIfOld();
-      final KnownVersion version = getProductVersionIfOld();
+      final Version version = getProductVersionIfOld();
-      final HeapDataOutputStream hdos = new HeapDataOutputStream(KnownVersion.CURRENT);
+      final HeapDataOutputStream hdos = new HeapDataOutputStream(Version.CURRENT);
-    KnownVersion recoveredGFVersion = readProductVersionRecord(dis, f);
+    Version recoveredGFVersion = readProductVersionRecord(dis, f);
-    if ((hasDataVersion = (recoveredGFVersion == KnownVersion.TOKEN))) {
+    if ((hasDataVersion = (recoveredGFVersion == Version.TOKEN))) {
-  private KnownVersion readProductVersionRecord(DataInput dis, File f) throws IOException {
+  private Version readProductVersionRecord(DataInput dis, File f) throws IOException {
-    final KnownVersion recoveredGFVersion =
+    final Version recoveredGFVersion =
-      KnownVersion version, ByteArrayDataInput in) {
+      Version version, ByteArrayDataInput in) {
-    if (KnownVersion.GFE_70.compareTo(currentRecoveredGFVersion()) <= 0) {
+    if (Version.GFE_70.compareTo(currentRecoveredGFVersion()) <= 0) {
-      boolean recoverValue, final LocalRegion currentRegion, KnownVersion version,
-      ByteArrayDataInput in,
+      boolean recoverValue, final LocalRegion currentRegion, Version version, ByteArrayDataInput in,
-      boolean recoverValue, LocalRegion currentRegion, KnownVersion version, ByteArrayDataInput in,
+      boolean recoverValue, LocalRegion currentRegion, Version version, ByteArrayDataInput in,
-  private void validateValue(byte[] valueBytes, byte userBits, KnownVersion version,
+  private void validateValue(byte[] valueBytes, byte userBits, Version version,
-      KnownVersion version, ByteArrayDataInput in, HeapDataOutputStream hdos) throws IOException {
+      Version version, ByteArrayDataInput in, HeapDataOutputStream hdos) throws IOException {
-    KnownVersion dataVersion = getDataVersionIfOld();
+    Version dataVersion = getDataVersionIfOld();
-      dataVersion = KnownVersion.CURRENT;
+      dataVersion = Version.CURRENT;
-      VersioningIO.writeOrdinal(this.krf.dos, KnownVersion.TOKEN.ordinal(), false);
+      VersioningIO.writeOrdinal(this.krf.dos, Version.TOKEN.ordinal(), false);
-              final KnownVersion version = getProductVersionIfOld();
+              final Version version = getProductVersionIfOld();
-    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);
+    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);
-    HeapDataOutputStream out = new HeapDataOutputStream(4 + 8 + 4 + 8 + 4, KnownVersion.CURRENT);
+    HeapDataOutputStream out = new HeapDataOutputStream(4 + 8 + 4 + 8 + 4, Version.CURRENT);
-  private Object deserializeKey(byte[] keyBytes, final KnownVersion version,
+  private Object deserializeKey(byte[] keyBytes, final Version version,
-   * {@link KnownVersion} else
+   * {@link Version} else
-  public KnownVersion getProductVersionIfOld() {
-    final KnownVersion version = this.gfversion;
+  public Version getProductVersionIfOld() {
+    final Version version = this.gfversion;
-        return KnownVersion.GFE_66;
+        return Version.GFE_66;
-    } else if (version == KnownVersion.CURRENT) {
+    } else if (version == Version.CURRENT) {
-   * {@link KnownVersion} else return null.
+   * {@link Version} else return null.
-  public KnownVersion getDataVersionIfOld() {
-    final KnownVersion version = this.dataVersion;
+  public Version getDataVersionIfOld() {
+    final Version version = this.dataVersion;
-        return KnownVersion.GFE_66;
+        return Version.GFE_66;
-    } else if (version == KnownVersion.CURRENT) {
+    } else if (version == Version.CURRENT) {
-        final KnownVersion version) {
+        final Version version) {

UPD40 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42