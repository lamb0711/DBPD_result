Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-import com.gemstone.gemfire.cache.client.internal.BridgeServerLoadMessage;
+import com.gemstone.gemfire.cache.client.internal.CacheServerLoadMessage;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.LocatorJoinMessage;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.RemoteLocatorJoinRequest;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.RemoteLocatorJoinResponse;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.RemoteLocatorPingRequest;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.RemoteLocatorPingResponse;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.RemoteLocatorRequest;
-import com.gemstone.gemfire.cache.client.internal.locator.wan.RemoteLocatorResponse;
+import com.gemstone.gemfire.cache.hdfs.internal.HDFSGatewayEventImpl;
+import com.gemstone.gemfire.cache.query.internal.CumulativeNonDistinctResults;
+import com.gemstone.gemfire.cache.query.internal.NWayMergeResults;
+import com.gemstone.gemfire.distributed.internal.membership.NetView;
+import com.gemstone.gemfire.distributed.internal.membership.gms.GMSMember;
+import com.gemstone.gemfire.distributed.internal.membership.gms.locator.FindCoordinatorRequest;
+import com.gemstone.gemfire.distributed.internal.membership.gms.locator.FindCoordinatorResponse;
+import com.gemstone.gemfire.distributed.internal.membership.gms.locator.GetViewRequest;
+import com.gemstone.gemfire.distributed.internal.membership.gms.locator.GetViewResponse;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.InstallViewMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.JoinRequestMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.JoinResponseMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.LeaveRequestMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.HeartbeatRequestMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.HeartbeatMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.NetworkPartitionMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.RemoveMemberMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.SuspectMembersMessage;
+import com.gemstone.gemfire.distributed.internal.membership.gms.messages.ViewAckMessage;
+import com.gemstone.gemfire.internal.admin.remote.ShutdownAllGatewayHubsRequest;
-import com.gemstone.gemfire.internal.cache.BridgeRegionEventImpl;
-import com.gemstone.gemfire.internal.cache.BridgeServerAdvisor.BridgeServerProfile;
+import com.gemstone.gemfire.internal.cache.ClientRegionEventImpl;
+import com.gemstone.gemfire.internal.cache.CacheServerAdvisor.CacheServerProfile;
+import com.gemstone.gemfire.internal.cache.DistTXPrecommitMessage;
+import com.gemstone.gemfire.internal.cache.DistTXCommitMessage;
+import com.gemstone.gemfire.internal.cache.DistTXRollbackMessage;
+import com.gemstone.gemfire.internal.cache.ServerPingMessage;
+import com.gemstone.gemfire.internal.cache.TXEntryState;
+import com.gemstone.gemfire.internal.cache.partitioned.BucketCountLoadProbe;
+import com.gemstone.gemfire.internal.cache.partitioned.DestroyRegionOnDataStoreMessage;
+import com.gemstone.gemfire.internal.cache.tx.DistTxEntryEvent;
-import com.gemstone.org.jgroups.View;
-import com.gemstone.org.jgroups.protocols.pbcast.JoinRsp;
-import com.gemstone.org.jgroups.stack.IpAddress;
+    registerDSFID(NETWORK_PARTITION_MESSAGE, NetworkPartitionMessage.class);
+    registerDSFID(REMOVE_MEMBER_REQUEST, RemoveMemberMessage.class);
+    registerDSFID(HEARTBEAT_REQUEST, HeartbeatRequestMessage.class);
+    registerDSFID(HEARTBEAT_RESPONSE, HeartbeatMessage.class);
+    registerDSFID(SUSPECT_MEMBERS_MESSAGE, SuspectMembersMessage.class);
+    registerDSFID(LEAVE_REQUEST_MESSAGE, LeaveRequestMessage.class);
+    registerDSFID(VIEW_ACK_MESSAGE, ViewAckMessage.class);
+    registerDSFID(INSTALL_VIEW_MESSAGE, InstallViewMessage.class);
+    registerDSFID(GMSMEMBER, GMSMember.class);
+    registerDSFID(NETVIEW, NetView.class);
+    registerDSFID(GET_VIEW_REQ, GetViewRequest.class);
+    registerDSFID(GET_VIEW_RESP, GetViewResponse.class);
+    registerDSFID(FIND_COORDINATOR_REQ, FindCoordinatorRequest.class);
+    registerDSFID(FIND_COORDINATOR_RESP, FindCoordinatorResponse.class);
+    registerDSFID(JOIN_RESPONSE, JoinResponseMessage.class);
+    registerDSFID(JOIN_REQUEST, JoinRequestMessage.class);
-    registerDSFID(IP_ADDRESS, IpAddress.class);
+    registerDSFID(DISTTX_ROLLBACK_MESSAGE, DistTXRollbackMessage.class);
+    registerDSFID(DISTTX_COMMIT_MESSAGE, DistTXCommitMessage.class);
+    registerDSFID(DISTTX_PRE_COMMIT_MESSAGE, DistTXPrecommitMessage.class);
+    registerDSFID(DISTTX_ROLLBACK_REPLY_MESSAGE, DistTXRollbackMessage.DistTXRollbackReplyMessage.class);
+    registerDSFID(DISTTX_COMMIT_REPLY_MESSAGE, DistTXCommitMessage.DistTXCommitReplyMessage.class);
+    registerDSFID(DISTTX_PRE_COMMIT_REPLY_MESSAGE, DistTXPrecommitMessage.DistTXPrecommitReplyMessage.class);
+    registerDSFID(NWAY_MERGE_RESULTS, NWayMergeResults.class);
+    registerDSFID(CUMULATIVE_RESULTS, CumulativeNonDistinctResults.class);
-    registerDSFID(BRIDGE_REGION_EVENT, BridgeRegionEventImpl.class);
+    registerDSFID(CLIENT_REGION_EVENT, ClientRegionEventImpl.class);
-    registerDSFID(BRIDGE_SERVER_LOAD_MESSAGE, BridgeServerLoadMessage.class);
-    registerDSFID(BRIDGE_SERVER_PROFILE, BridgeServerProfile.class);
+    registerDSFID(CACHE_SERVER_LOAD_MESSAGE, CacheServerLoadMessage.class);
+    registerDSFID(CACHE_SERVER_PROFILE, CacheServerProfile.class);
-    registerDSFID(JGROUPS_VIEW, View.class);
-    registerDSFID(JGROUPS_JOIN_RESP, JoinRsp.class);
+    registerDSFID(HDFS_GATEWAY_EVENT_IMPL, HDFSGatewayEventImpl.class);
+    
+    registerDSFID(DIST_TX_OP, DistTxEntryEvent.class);
+    registerDSFID(DIST_TX_PRE_COMMIT_RESPONSE, DistTXPrecommitMessage.DistTxPrecommitResponse.class);
+    registerDSFID(DIST_TX_THIN_ENTRY_STATE, TXEntryState.DistTxThinEntryState.class);
+    registerDSFID(SERVER_PING_MESSAGE, ServerPingMessage.class);
+    registerDSFID(PR_DESTROY_ON_DATA_STORE_MESSAGE,
+        DestroyRegionOnDataStoreMessage.class);
+    registerDSFID(SHUTDOWN_ALL_GATEWAYHUBS_REQUEST,
+        ShutdownAllGatewayHubsRequest.class);
+    registerDSFID(BUCKET_COUNT_LOAD_PROBE, BucketCountLoadProbe.class);
+	  case PR_DESTROY_ON_DATA_STORE_MESSAGE:
+        return readDestroyOnDataStore(in);
+  private static DataSerializableFixedID readDestroyOnDataStore(DataInput in) 
+      throws IOException, ClassNotFoundException {
+    DataSerializableFixedID serializable = new DestroyRegionOnDataStoreMessage();
+    serializable.fromData(in);
+    return serializable;
+  }

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 UPD40 UPD40 UPD40 INS40 INS40 UPD40 UPD40 UPD40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 UPD40 UPD40 UPD40 UPD40 INS40 INS40 INS40 INS40 INS40 INS31 MOV21 MOV21 MOV21 INS83 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS43 INS42 INS42 INS42 INS60 INS21 INS41 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS41 INS49 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 UPD42 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS43 UPD43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 UPD43 UPD43 UPD43 UPD43 UPD43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS40 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS40 INS40 INS42 INS42 INS42 INS42 INS42