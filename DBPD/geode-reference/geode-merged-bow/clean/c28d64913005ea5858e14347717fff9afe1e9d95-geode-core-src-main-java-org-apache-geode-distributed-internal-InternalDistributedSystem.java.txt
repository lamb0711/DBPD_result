Merge branch 'release/1.4.0'

+import java.util.HashMap;
+import java.util.Map;
+import java.util.ServiceLoader;
-import org.apache.logging.log4j.Logger;
-
-import java.io.File;
-import java.io.IOException;
-import java.io.Reader;
-import java.lang.reflect.Array;
-import java.net.InetAddress;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Properties;
-import java.util.Set;
-import java.util.SortedSet;
-import java.util.StringTokenizer;
-import java.util.TreeSet;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.CopyOnWriteArrayList;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicLong;
-import java.util.concurrent.atomic.AtomicReference;
- * 
+ *
+  /** services provided by other modules */
+  private Map<Class, DistributedSystemService> services = new HashMap<>();
+
-  public final static String SHUTDOWN_HOOK_NAME = "Distributed system shutdown hook";
+  public static final String SHUTDOWN_HOOK_NAME = "Distributed system shutdown hook";
-  public final static String DISABLE_SHUTDOWN_HOOK_PROPERTY =
+  public static final String DISABLE_SHUTDOWN_HOOK_PROPERTY =
-  public final static String APPEND_TO_LOG_FILE = DistributionConfig.GEMFIRE_PREFIX + "append-log";
+  public static final String APPEND_TO_LOG_FILE = DistributionConfig.GEMFIRE_PREFIX + "append-log";
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
+   * Initialize any services that provided as extensions to the cache using the service loader
+   * mechanism.
+   */
+  private void initializeServices() {
+    ServiceLoader<DistributedSystemService> loader =
+        ServiceLoader.load(DistributedSystemService.class);
+    for (DistributedSystemService service : loader) {
+      service.init(this);
+      services.put(service.getInterface(), service);
+    }
+  }
+
+
+  /**
+      initializeServices();
+      InternalDataSerializer.initialize(config, services.values());
+
-        this.id = this.dm.getChannelId();
+        this.id = this.dm.getMembershipPort();
-        // to fix bug 42527 we need a sampler
-        // even if sampling is not enabled.
-      // this.logger.info("ds created", new RuntimeException("DEBUG: STACK"));
-
-    resourceListeners = new CopyOnWriteArrayList<ResourceEventsListener>();
+    resourceListeners = new CopyOnWriteArrayList<>();
-      this.startedLocator =
-          InternalLocator.createLocator(locId.getPort(), null, null, this.logWriter, // LOG: this is
-                                                                                     // after IDS
-                                                                                     // has created
-                                                                                     // LogWriterLoggers
-                                                                                     // and
-                                                                                     // Appenders
-              this.securityLogWriter, // LOG: this is after IDS has created LogWriterLoggers and
-                                      // Appenders
-              locId.getHost().getAddress(), locId.getHostnameForClients(),
-              this.originalConfig.toProperties(), false);
+      this.startedLocator = InternalLocator.createLocator(locId.getPort(), null, this.logWriter,
+          this.securityLogWriter, locId.getHost().getAddress(), locId.getHostnameForClients(),
+          this.originalConfig.toProperties(), false);
-        this.startedLocator.startPeerLocation(true);
+        this.startedLocator.startPeerLocation();
-   * 
+   *
-   * 
+   *
-   * 
+   *
-  static private final long MAX_DISCONNECT_WAIT =
+  private static final long MAX_DISCONNECT_WAIT =
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-  static public void loadEmergencyClasses() {
+  public static void loadEmergencyClasses() {
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
-   * @see org.apache.geode.distributed.internal.DistributionChannel#getId
+   *
-   * 
+   *
-   * 
+   *
-  private final static StatisticsTypeFactory tf = StatisticsTypeFactoryImpl.singleton();
+  private static final StatisticsTypeFactory tf = StatisticsTypeFactoryImpl.singleton();
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-  private volatile static int reconnectAttemptCounter = 0;
+  private static volatile int reconnectAttemptCounter = 0;
-   * 
+   *
-   * 
+   *
-   * 
+   *
-    DistributionManager.isCommandLineAdminVM = adminOnly;
-   * 
+   *

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 INS23 INS31 INS29 INS83 INS74 INS59 INS83 INS83 INS83 INS29 INS83 INS39 INS42 INS8 INS83 UPD83 UPD83 INS83 UPD83 UPD83 INS65 INS43 INS43 INS43 INS42 INS14 INS65 INS60 INS70 INS66 INS42 INS42 INS42 INS74 INS66 INS66 INS74 INS59 INS44 INS42 INS8 INS43 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS32 INS32 INS32 INS32 UPD74 INS43 INS42 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL33 DEL9 DEL83 DEL40 DEL42 DEL67 DEL65 DEL83 DEL40 DEL42 DEL7 DEL21