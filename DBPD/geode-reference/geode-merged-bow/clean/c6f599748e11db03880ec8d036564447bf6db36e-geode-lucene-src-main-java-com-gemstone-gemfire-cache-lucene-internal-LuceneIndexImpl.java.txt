Merge branch 'develop' into feature/GEODE-420

+import com.gemstone.gemfire.cache.DataPolicy;
+import com.gemstone.gemfire.cache.asyncqueue.internal.AsyncEventQueueFactoryImpl;
+import com.gemstone.gemfire.internal.cache.LocalRegion;
-  protected final FileSystemStats fileSystemStats;
-  protected Region<String, File> fileRegion;
-  protected Region<ChunkKey, byte[]> chunkRegion;
-
+  protected LocalRegion dataRegion;
+    
-    this.fileSystemStats = new FileSystemStats(cache.getDistributedSystem(), statsName);
+ 
+  protected LocalRegion getDataRegion() {
+    return (LocalRegion)cache.getRegion(regionPath);
+  }
+
+  protected boolean withPersistence() {
+    RegionAttributes ra = dataRegion.getAttributes();
+    DataPolicy dp = ra.getDataPolicy();
+    final boolean withPersistence = dp.withPersistence();
+    return withPersistence;
+  }
+  public Cache getCache() {
+    return this.cache;
+  }
+  
-  public FileSystemStats getFileSystemStats() {
-    return fileSystemStats;
+  protected void initialize() {
+    if (!hasInitialized) {
+      /* create index region */
+      dataRegion = getDataRegion();
+      //assert dataRegion != null;
+
+      repositoryManager = createRepositoryManager();
+      
+      // create AEQ, AEQ listener and specify the listener to repositoryManager
+      createAEQ(dataRegion);
+
+      addExtension(dataRegion);
+      hasInitialized = true;
+    }
+  }
+  
+  protected abstract RepositoryManager createRepositoryManager();
+  
+  protected AsyncEventQueue createAEQ(Region dataRegion) {
+    return createAEQ(createAEQFactory(dataRegion));
-  protected abstract void initialize();
-  
-  /**
+  private AsyncEventQueueFactoryImpl createAEQFactory(final Region dataRegion) {
+    AsyncEventQueueFactoryImpl factory = (AsyncEventQueueFactoryImpl) cache.createAsyncEventQueueFactory();
+    if (dataRegion instanceof PartitionedRegion) {
+      factory.setParallel(true); // parallel AEQ for PR
+    } else {
+      factory.setParallel(false); // TODO: not sure if serial AEQ working or not
+    }
+    factory.setMaximumQueueMemory(1000);
+    factory.setDispatcherThreads(10);
+    factory.setIsMetaQueue(true);
+    if (dataRegion.getAttributes().getDataPolicy().withPersistence()) {
+      factory.setPersistent(true);
+    }
+    factory.setDiskStoreName(dataRegion.getAttributes().getDiskStoreName());
+    factory.setDiskSynchronous(dataRegion.getAttributes().isDiskSynchronous());
+    factory.setForwardExpirationDestroy(true);
+    return factory;
+  }
+
+  private AsyncEventQueue createAEQ(AsyncEventQueueFactoryImpl factory) {
+    LuceneEventListener listener = new LuceneEventListener(repositoryManager);
+    String aeqId = LuceneServiceImpl.getUniqueIndexName(getName(), regionPath);
+    AsyncEventQueue indexQueue = factory.create(aeqId, listener);
+    return indexQueue;
+  }
+
+/**
-  protected void addExtension(PartitionedRegion dataRegion) {
+  protected void addExtension(LocalRegion dataRegion) {

INS26 INS26 INS26 MOV23 MOV31 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 UPD43 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 UPD43 UPD42 INS8 INS83 INS83 INS43 INS42 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 UPD42 UPD42 UPD42 MOV42 INS41 INS60 INS60 INS60 INS41 UPD42 INS25 INS42 INS42 MOV43 INS42 INS41 INS42 INS83 MOV43 INS42 INS60 INS25 INS21 INS21 INS21 INS25 INS21 INS21 INS21 INS41 INS42 INS43 INS42 INS60 INS60 INS60 INS41 INS43 INS11 INS43 INS59 INS43 INS59 INS83 INS39 INS59 INS42 INS22 INS38 INS8 INS32 INS43 INS59 INS62 INS8 INS8 INS32 INS32 INS32 INS32 INS8 INS32 INS32 INS32 INS42 INS42 INS43 INS59 MOV43 INS59 INS43 INS59 INS42 INS42 INS43 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 UPD42 MOV42 INS32 INS52 INS42 INS42 INS21 INS21 INS21 INS21 INS21 INS42 INS32 INS42 INS42 INS11 INS42 MOV43 INS21 INS21 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS9 INS32 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS32 INS32 INS7 INS42 INS42 INS43 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL43 DEL74 DEL42 DEL59 DEL23 DEL83 DEL43 DEL39 DEL85 DEL5 DEL74 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL7 DEL21 DEL42 DEL83