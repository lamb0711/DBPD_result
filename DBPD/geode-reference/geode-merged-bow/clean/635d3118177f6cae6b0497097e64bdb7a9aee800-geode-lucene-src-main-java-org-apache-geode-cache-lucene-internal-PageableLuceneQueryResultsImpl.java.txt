Merge branch 'develop' of https://git-wip-us.apache.org/repos/asf/geode into develop

* 'develop' of https://git-wip-us.apache.org/repos/asf/geode: (57 commits)
  GEODE-2551 Fix code issues found by AppChecker
  Revert "GEODE-1887: Now Size api goes through ServerProxy when cache is of type client and DataPolicy is Empty."
  GEODE-2538: Don't deserialize values on the server when getting results
  GEODE-2461: remove json4s-ast_2.10 as explicit dependency
  GEODE-2547: Interest registration no longer causes a CacheLoader to be invoked
  GEODE-2526: Enhance log statement to include ResourceTypeName
  GEODE-880 Remove unused classes
  GEODE-2460: update dependency versions
  GEODE-1995: Removed ReliableMessageQueue, ReliableMessageQueueFactory, ReliableMessageQueueFactoryImpl and it's usage in the code from GemfireCacheImpl and DistributedRegion.
  GEODE-2550 Improve README and BUILDING
  GEODE-2538: Don't invoke a cache loader when fetching values for a lucene query
  GEODE-2404: Added support for destroying lucene indexes
  GEODE-2545: NPE during lucene query execution when cache is closing or region is destroyed
  GEODE-2515: Disabling BaseLineAndCompareQueryPerfJUnitTest
  GEODE-2142: Removing JSON licence stuff from NOTICE files
  GEODE-2142: removing tests so run precheckin
  GEODE-2142: final compiling build
  GEODE-2142: cyclical dependency in gradle build
  GEODE-2142: spotless
  GEODE-2142: Refactoring of tests to work with new JSONObject class. Changing file export to use Base64 encoding.
  ...

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.geode.cache.execute.Execution;
+import org.apache.geode.cache.execute.FunctionService;
+import org.apache.geode.cache.execute.ResultCollector;
+import org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunction;
+import org.apache.geode.cache.lucene.internal.results.MapResultCollector;
-    ArrayList<K> keys = new ArrayList<K>(scores.size());
+    Set<K> keys = new HashSet<K>(scores.size());
-    Map<K, V> values = userRegion.getAll(keys);
+    Map<K, V> values = getValues(keys);
-        new ArrayList<LuceneResultStruct<K, V>>(scores.size());
+        new ArrayList<LuceneResultStruct<K, V>>(values.size());
+  protected Map<K, V> getValues(final Set<K> keys) {
+    ResultCollector resultCollector = onRegion().withFilter(keys)
+        .withCollector(new MapResultCollector()).execute(LuceneGetPageFunction.ID);
+    return (Map<K, V>) resultCollector.getResult();
+  }
+
+  protected Execution onRegion() {
+    return FunctionService.onRegion(userRegion);
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS83 INS74 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS43 INS43 INS43 INS83 INS74 INS42 INS60 INS41 INS42 INS41 UPD74 MOV74 MOV74 INS42 INS42 INS42 INS43 INS43 INS43 INS59 INS11 INS32 UPD43 INS42 INS42 INS42 INS42 INS32 INS74 INS32 INS42 INS42 INS42 UPD42 UPD74 MOV74 UPD42 MOV74 INS32 INS42 INS40 INS43 INS43 INS43 INS42 INS42 UPD43 UPD42 INS32 INS42 INS14 INS42 INS42 INS42 UPD42 INS32 INS42 INS42 INS43 INS42 INS42 DEL42