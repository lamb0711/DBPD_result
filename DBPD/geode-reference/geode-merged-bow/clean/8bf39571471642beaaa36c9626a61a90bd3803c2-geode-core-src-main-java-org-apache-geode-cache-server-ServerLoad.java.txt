Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A data object containing the load information for a cache server. This object
- * is returned from {@link ServerLoadProbe#getLoad(ServerMetrics)} and indicates
- * how heavily loaded the server is.
+ * A data object containing the load information for a cache server. This object is returned from
+ * {@link ServerLoadProbe#getLoad(ServerMetrics)} and indicates how heavily loaded the server is.
- * The values returned by {@link #getConnectionLoad()} and
- * {@link #getSubscriptionConnectionLoad()} can be any number greater than 0. A
- * larger load value means that the server has more load.
+ * The values returned by {@link #getConnectionLoad()} and {@link #getSubscriptionConnectionLoad()}
+ * can be any number greater than 0. A larger load value means that the server has more load.
- * The values returned by getLoadPerConnection() and
- * getLoadPerSubscriptionConnection are used to estimate the effect of new
- * connections before the connects are actually made to this server. The load is
- * estimated as <code> 
+ * The values returned by getLoadPerConnection() and getLoadPerSubscriptionConnection are used to
+ * estimate the effect of new connections before the connects are actually made to this server. The
+ * load is estimated as <code> 
-  
-  public ServerLoad(float connectionLoad, float loadPerConnection,
-      float subscriptionConnectionLoad, float loadPerSubscriptionConnection) {
+
+  public ServerLoad(float connectionLoad, float loadPerConnection, float subscriptionConnectionLoad,
+      float loadPerSubscriptionConnection) {
-  
+
-    
+
+   * 
-  
+
-   * Get an estimate of the how much load each new
-   * connection will add to this server. The locator uses
-   * this information to estimate the load on the server
-   * before it receives a new load snapshot.
+   * Get an estimate of the how much load each new connection will add to this server. The locator
+   * uses this information to estimate the load on the server before it receives a new load
+   * snapshot.
+   * 
+   * 
-  
+
-   * Get an estimate of the how much load each new
-   * subscriber will add to this server. The locator uses
-   * this information to estimate the load on the server
-   * before it receives a new load snapshot.
+   * Get an estimate of the how much load each new subscriber will add to this server. The locator
+   * uses this information to estimate the load on the server before it receives a new load
+   * snapshot.
-   * Set the estimated load per subscription connection. 
+   * Set the estimated load per subscription connection.
-  
+
-    if (Float.floatToIntBits(connectionLoad) != Float
-        .floatToIntBits(other.connectionLoad))
+    if (Float.floatToIntBits(connectionLoad) != Float.floatToIntBits(other.connectionLoad))
-    if (Float.floatToIntBits(loadPerConnection) != Float
-        .floatToIntBits(other.loadPerConnection))
+    if (Float.floatToIntBits(loadPerConnection) != Float.floatToIntBits(other.loadPerConnection))
-    if (Float.floatToIntBits(loadPerSubscriber) != Float
-        .floatToIntBits(other.loadPerSubscriber))
+    if (Float.floatToIntBits(loadPerSubscriber) != Float.floatToIntBits(other.loadPerSubscriber))
-    if (Float.floatToIntBits(subscriberLoad) != Float
-        .floatToIntBits(other.subscriberLoad))
+    if (Float.floatToIntBits(subscriberLoad) != Float.floatToIntBits(other.subscriberLoad))
-  
+
-    return "Load(" + connectionLoad + ", " + loadPerConnection + ", " + subscriberLoad + ", " + loadPerSubscriber + ")";
+    return "Load(" + connectionLoad + ", " + loadPerConnection + ", " + subscriberLoad + ", "
+        + loadPerSubscriber + ")";

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66