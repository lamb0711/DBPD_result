Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The endpoint manager keeps track of which servers we 
- * are connected to. Other parts of the client code can register
- * listeners that will be notified about when endpoints are created
- * or died. For example the connection manager registers a listener
- * to be notified if a server dies and closes all of it's connections.
+ * The endpoint manager keeps track of which servers we are connected to. Other parts of the client
+ * code can register listeners that will be notified about when endpoints are created or died. For
+ * example the connection manager registers a listener to be notified if a server dies and closes
+ * all of it's connections.
-   * Get the endpoint for this server and create it if it does not already exist.
-   * This increments the reference count for the endpoint,
-   *  so you should call {@link Endpoint#removeReference()} after
-   *  the endpoint is no longer in use.
+   * Get the endpoint for this server and create it if it does not already exist. This increments
+   * the reference count for the endpoint, so you should call {@link Endpoint#removeReference()}
+   * after the endpoint is no longer in use.
-   * Indicate that a particular server has crashed. All of the listeners will be notified
-   * that the server has crashed.
+   * Indicate that a particular server has crashed. All of the listeners will be notified that the
+   * server has crashed.
+   * 
+   * 
-  /** Add a listener which will be notified when the state of
-   * an endpoint changes.
+  /**
+   * Add a listener which will be notified when the state of an endpoint changes.
-   * Remove a listener. 
+   * Remove a listener.
-  
+
+   * 
-    
+
-    
+
-    
+
-  
-    public void endpointCrashed(Endpoint endpoint) {
-    }
-  
-    public void endpointNoLongerInUse(Endpoint endpoint) {
-    }
-  
-    public void endpointNowInUse(Endpoint endpoint) {
-    }
+
+    public void endpointCrashed(Endpoint endpoint) {}
+
+    public void endpointNoLongerInUse(Endpoint endpoint) {}
+
+    public void endpointNowInUse(Endpoint endpoint) {}

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66