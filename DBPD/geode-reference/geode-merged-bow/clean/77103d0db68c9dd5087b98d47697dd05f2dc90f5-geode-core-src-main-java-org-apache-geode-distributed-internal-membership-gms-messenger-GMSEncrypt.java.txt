GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier (#4230)

* GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier

Initial refactor: removal of NetMember, MemberAttributes and other classes that subordinated GMS
identifiers.  Repurposing GMSMember as a data packet to hold information required in a membership
identifer.

* fixing failing tests

* fixing failing unit tests

* picking up a change that IntelliJ didn't auto-save & fixing serializables test

* fixing problems with durable client ids

these identifiers morph after the client's membership identifier has been formed
so the member ID needs to be updated before serializing it

* fixing merge error

* updating sanctionedDataSerializables

* fixing lgtm complaint

* removing unnecessary serialization/deserialization methods in GMSUtil

* remove methods no longer needed for serializing an object with a different DSFID

* fixing serializables test

-import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.api.MemberIdentifier;
-  private final Map<GMSMember.GMSMemberWrapper, byte[]> memberToPublicKey =
+  private final Map<GMSMemberWrapper, byte[]> memberToPublicKey =
-  private final ConcurrentHashMap<GMSMember, GMSEncryptionCipherPool> peerEncryptors =
+  private final ConcurrentHashMap<MemberIdentifier, GMSEncryptionCipherPool> peerEncryptors =
-  private byte[] getPublicKeyIfIAmLocator(GMSMember mbr) {
+  private byte[] getPublicKeyIfIAmLocator(MemberIdentifier mbr) {
-  byte[] decryptData(byte[] data, GMSMember member) throws Exception {
+  byte[] decryptData(byte[] data, MemberIdentifier member) throws Exception {
-  byte[] encryptData(byte[] data, GMSMember member) throws Exception {
+  byte[] encryptData(byte[] data, MemberIdentifier member) throws Exception {
-  private byte[] lookupKeyByMember(GMSMember member) {
-    byte[] pk = memberToPublicKey.get(new GMSMember.GMSMemberWrapper(member));
+  private byte[] lookupKeyByMember(MemberIdentifier member) {
+    byte[] pk = memberToPublicKey.get(new GMSMemberWrapper(member));
-  protected byte[] getPublicKey(GMSMember member) {
+  protected byte[] getPublicKey(MemberIdentifier member) {
-      GMSMember localMbr = services.getMessenger().getMemberID();
+      MemberIdentifier localMbr = services.getMessenger().getMemberID();
-  protected void setPublicKey(byte[] publickey, GMSMember mbr) {
+  protected void setPublicKey(byte[] publickey, MemberIdentifier mbr) {
-      memberToPublicKey.put(new GMSMember.GMSMemberWrapper(mbr), publickey);
+      memberToPublicKey.put(new GMSMemberWrapper(mbr), publickey);
-  private GMSEncryptionCipherPool getPeerEncryptor(GMSMember member)
+  private GMSEncryptionCipherPool getPeerEncryptor(MemberIdentifier member)

MOV26 UPD40 UPD74 UPD74 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 INS42 UPD43 INS42 DEL40 DEL40 DEL40