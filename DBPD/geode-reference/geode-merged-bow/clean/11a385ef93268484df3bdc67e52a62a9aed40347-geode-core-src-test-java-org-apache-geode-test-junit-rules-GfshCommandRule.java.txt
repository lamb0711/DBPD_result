GEODE-3940: fix deadlock in backup messages

When backup sends FlushToDisk, PrepareBackup, and FinishBackup,
it will no longer wait for all other members to respond before
doing the same work on its own member.
In addition to preventing a distributed deadlock, this will
also improve how long it takes for a backup to complete.
As part of this work the backup classes and tests have been
moved into their own backup package.

-import org.apache.geode.test.junit.assertions.GfshShellConnectionRuleAssert;
+import org.apache.geode.test.junit.assertions.CommandResultAssert;
- * {@literal @}Rule GfshShellConnectionRule rule = new GfshShellConnectionRule();
+ * {@literal @}Rule GfshCommandRule rule = new GfshCommandRule();
- * {@literal @}ClassRule GfshShellConnectionRule rule = new GfshShellConnectionRule();
+ * {@literal @}ClassRule GfshCommandRule rule = new GfshCommandRule();
-public class GfshShellConnectionRule extends DescribedExternalResource {
+public class GfshCommandRule extends DescribedExternalResource {
-  public GfshShellConnectionRule() {
+  public GfshCommandRule() {
-  public GfshShellConnectionRule(Supplier<Integer> portSupplier, PortType portType) {
+  public GfshCommandRule(Supplier<Integer> portSupplier, PortType portType) {
-  public GfshShellConnectionRuleAssert executeAndAssertThat(String command) {
+  public CommandResultAssert executeAndAssertThat(String command) {
-    return new GfshShellConnectionRuleAssert(this, commandResult);
+    return new CommandResultAssert(gfsh.outputString, commandResult);

UPD40 UPD42 UPD42 UPD42 UPD43 UPD66 UPD66 UPD42 UPD43 INS40 UPD42 DEL52