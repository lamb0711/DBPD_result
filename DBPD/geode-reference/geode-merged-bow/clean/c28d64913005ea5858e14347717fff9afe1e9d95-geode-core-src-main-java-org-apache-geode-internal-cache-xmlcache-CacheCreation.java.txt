Merge branch 'release/1.4.0'

+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.LinkedHashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Properties;
+import java.util.Set;
+import java.util.concurrent.Executor;
+import java.util.concurrent.TimeUnit;
+
+import javax.naming.Context;
+import javax.transaction.TransactionManager;
+
-import org.apache.geode.internal.cache.InitialImageOperation;
-import org.apache.geode.internal.cache.event.EventTrackerExpiryTask;
+import org.apache.geode.internal.cache.InitialImageOperation;
+import org.apache.geode.internal.cache.backup.BackupManager;
+import org.apache.geode.internal.cache.event.EventTrackerExpiryTask;
-import org.apache.geode.internal.cache.BackupManager;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Properties;
-import java.util.Set;
-import java.util.concurrent.Executor;
-import java.util.concurrent.TimeUnit;
-import javax.naming.Context;
-import javax.transaction.TransactionManager;
-
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-  public void setReadSerialized(final boolean value) {
+  public void setReadSerializedForCurrentThread(final boolean value) {
+    throw new UnsupportedOperationException(LocalizedStrings.SHOULDNT_INVOKE.toLocalizedString());
+  }
+
+  @Override
+  public void setReadSerializedForTest(final boolean value) {
+  public Set<AsyncEventQueue> getAsyncEventQueues(boolean visibleOnly) {
+    return this.asyncEventQueues;
+  }
+
+  @Override
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
+  public void invokeBeforeDestroyed(final LocalRegion region) {
+    throw new UnsupportedOperationException(LocalizedStrings.SHOULDNT_INVOKE.toLocalizedString());
+  }
+
+  @Override
+  public void invokeCleanupFailedInitialization(final LocalRegion region) {
+    throw new UnsupportedOperationException(LocalizedStrings.SHOULDNT_INVOKE.toLocalizedString());
+  }
+
+  @Override

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 INS31 INS31 INS31 INS31 UPD42 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS83 INS39 INS42 INS53 INS42 INS43 INS43 INS39 INS42 INS41 INS42 INS83 INS43 INS42 INS53 INS42 INS83 INS43 INS42 INS53 INS14 INS42 INS42 INS22 INS42 INS14 INS42 INS14 INS43 INS32 INS52 INS42 INS43 INS32 INS43 INS32 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42