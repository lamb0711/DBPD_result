Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The default behavior is to perform all I/O operations on the node where the
- * snapshot operations are invoked.  This will involve either collecting or
- * dispersing data over the network if the region is a partitioned region.
- * The snapshot behavior can be changed using {@link SnapshotOptions}. For example:
+ * The default behavior is to perform all I/O operations on the node where the snapshot operations
+ * are invoked. This will involve either collecting or dispersing data over the network if the
+ * region is a partitioned region. The snapshot behavior can be changed using
+ * {@link SnapshotOptions}. For example:
+ * 
- * Note that the snapshot does not provide a consistency guarantee. Updates to 
- * data during the course of import/export operations could result data 
- * inconsistencies.
+ * 
+ * Note that the snapshot does not provide a consistency guarantee. Updates to data during the
+ * course of import/export operations could result data inconsistencies.
-   * Creates a <code>SnapshotOptions</code> object configured with default
-   * settings. The options can be used to configure snapshot behavior.
+   * Creates a <code>SnapshotOptions</code> object configured with default settings. The options can
+   * be used to configure snapshot behavior.
-  
+
-  void save(File snapshot, SnapshotFormat format)
-  throws IOException;
+  void save(File snapshot, SnapshotFormat format) throws IOException;
-   * Exports the region data into the snapshot file by applying user-configured 
-   * options.
+   * Exports the region data into the snapshot file by applying user-configured options.
-  void save(File snapshot, SnapshotFormat format, SnapshotOptions<K, V> options) 
-  throws IOException;  
-  
+  void save(File snapshot, SnapshotFormat format, SnapshotOptions<K, V> options) throws IOException;
+
-   * Prior to loading data, the region should have been created and 
-   * any necessary serializers (either {@link DataSerializer} or 
-   * {@link PdxSerializer}) and {@link Instantiator}s should have been 
-   * registered.
+   * Prior to loading data, the region should have been created and any necessary serializers
+   * (either {@link DataSerializer} or {@link PdxSerializer}) and {@link Instantiator}s should have
+   * been registered.
-  void load(File snapshot, SnapshotFormat format) 
-  throws IOException, ClassNotFoundException;
-  
+  void load(File snapshot, SnapshotFormat format) throws IOException, ClassNotFoundException;
+
-   * Imports the snapshot file into the specified region by applying user-
-   * configured options.
+   * Imports the snapshot file into the specified region by applying user- configured options.
-   * Prior to loading data, the region should have been created and 
-   * any necessary serializers (either {@link DataSerializer} or 
-   * {@link PdxSerializer}) and {@link Instantiator}s should have been 
-   * registered.
+   * Prior to loading data, the region should have been created and any necessary serializers
+   * (either {@link DataSerializer} or {@link PdxSerializer}) and {@link Instantiator}s should have
+   * been registered.
-  void load(File snapshot, SnapshotFormat format, SnapshotOptions<K, V> options) 
-  throws IOException, ClassNotFoundException;
+  void load(File snapshot, SnapshotFormat format, SnapshotOptions<K, V> options)
+      throws IOException, ClassNotFoundException;

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66