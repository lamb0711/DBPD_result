GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-
+  private static final String LINE_SEPARATOR = System.getProperty("line.separator");
+
-      return (Long.parseLong(actualVersionDigits) >= Long.parseLong(expectedVersionDigits));
+      return Long.parseLong(actualVersionDigits) >= Long.parseLong(expectedVersionDigits);
-    return (jvmVendor != null && jvmVendor.contains(expectedJvmVendorName));
+    return jvmVendor != null && jvmVendor.contains(expectedJvmVendorName);
-  // @see java.lang.System#getProperty(String) with "java.vm.name".
+  /**
+   * Returns true if the expectedJvmName matches {@code System.getProperty("java.vm.name")}.
+   */
-    return (jvmName != null && jvmName.contains(expectedJvmName));
+    return jvmName != null && jvmName.contains(expectedJvmName);
-   * <code>System.getProperty("java.class.path")</code>.
+   * {@code System.getProperty("java.class.path")}.
-   * @throws MalformedURLException
-   * <code>System.getProperty("java.class.path")</code>.
+   * {@code System.getProperty("java.class.path")}.
-   * @throws MalformedURLException
-   * Returns the value of {code System.getProperty("os.name")}.
+   * Returns the value of {@code System.getProperty("os.name")}.
-   * Returns the value of {code System.getProperty("os.version")}.
+   * Returns the value of {@code System.getProperty("os.version")}.
-   * Returns the value of {code System.getProperty("os.arch")}.
+   * Returns the value of {@code System.getProperty("os.arch")}.
-   * Returns the value of {code System.getProperty("java.class.path")}.
+   * Returns the value of {@code System.getProperty("java.class.path")}.
-   * Returns the value of {code System.getProperty("sun.boot.class.path")}.
+   * Returns the value of {@code System.getProperty("sun.boot.class.path")}.
-  // @see java.lang.System#getProperty(String) with "os.name".
+  /**
+   * Returns true if expectedOsName matches {@code System.getProperty("os.name")}.
+   */
-    return (osName != null && osName.contains(expectedOsName));
+    return osName != null && osName.contains(expectedOsName);
+  /**
+   * Returns the value of {@code System.getProperty("line.separator")}.
+   */
+  public static String getLineSeparator() {
+    return LINE_SEPARATOR;
+  }

INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS29 INS29 INS29 INS83 INS83 INS43 INS42 INS8 INS42 INS42 INS32 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS41 INS42 INS42 INS45 MOV27 INS66 INS65 INS66 MOV27 INS65 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 MOV27 INS66 INS65 INS66 INS42 INS66 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 UPD66 MOV66 INS66 INS66 MOV27 DEL36 DEL36 DEL36 DEL42 DEL65 DEL42 DEL65 DEL65 DEL65 DEL65 DEL65 DEL65 DEL36