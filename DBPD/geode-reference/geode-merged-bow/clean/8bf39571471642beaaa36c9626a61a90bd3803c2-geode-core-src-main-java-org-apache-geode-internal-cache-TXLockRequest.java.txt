Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
-/** TXLockRequest represents all the locks that need to be made
- * for a single transaction.
+/**
+ * TXLockRequest represents all the locks that need to be made for a single transaction.
-  private IdentityArrayList localLocks;  // of TXRegionLockRequest
+  private IdentityArrayList localLocks; // of TXRegionLockRequest
-  public TXLockRequest()
-  {
+  public TXLockRequest() {
+
+
+
+
+
-      this.distLockId = TXLockService.createDTLS().txLock(this.distLocks,
-                                                          this.otherMembers);
+      this.distLockId = TXLockService.createDTLS().txLock(this.distLocks, this.otherMembers);
+
+
-        //IllegalStateException: TXLockService cannot be created 
-        //until connected to distributed system
-        //could be thrown if a jvm is disconnected from the ds, 
-        //and tries to createDTLS() during clean up
+        // IllegalStateException: TXLockService cannot be created
+        // until connected to distributed system
+        // could be thrown if a jvm is disconnected from the ds,
+        // and tries to createDTLS() during clean up
+
-  private static void txLocalLock(IdentityArrayList localLocks)
-    throws CommitConflictException
-  {
+  private static void txLocalLock(IdentityArrayList localLocks) throws CommitConflictException {
+

UPD66 DEL66