Merge branch 'release/1.4.0'

+   *
+   * Accesses must be locked by _clientHeartbeatsLock
-  protected volatile Map _clientHeartbeats = Collections.EMPTY_MAP;
+  private Map<ClientProxyMembershipID, Long> _clientHeartbeats = Collections.emptyMap();
-  final protected Object _clientHeartbeatsLock = new Object();
+  private final Object _clientHeartbeatsLock = new Object();
-  final protected Map _clientThreads;
+  private final Map _clientThreads;
-  final private Object _clientThreadsLock = new Object();
+  private final Object _clientThreadsLock = new Object();
-  final private ClientHealthMonitorThread _clientMonitor;
+  private final ClientHealthMonitorThread _clientMonitor;
-  private final static long DEFAULT_CLIENT_MONITOR_INTERVAL_IN_MILLIS = 1000;
+  private static final long DEFAULT_CLIENT_MONITOR_INTERVAL_IN_MILLIS = 1000;
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-  public synchronized static void shutdownInstance() {
+  public static synchronized void shutdownInstance() {
-   * 
+   *
-      Map oldClientHeartbeats = this._clientHeartbeats;
+      Map<ClientProxyMembershipID, Long> oldClientHeartbeats = this._clientHeartbeats;
-        Map newClientHeartbeats = new HashMap(oldClientHeartbeats);
-        newClientHeartbeats.put(proxyID, Long.valueOf(System.currentTimeMillis()));
+        Map<ClientProxyMembershipID, Long> newClientHeartbeats = new HashMap<>(oldClientHeartbeats);
+        newClientHeartbeats.put(proxyID, System.currentTimeMillis());
-   * Takes care of unregistering from the _clientHeatBeats map.
-   * 
+   * Takes care of unregistering from the _clientHeartBeats map.
+   *
-      Map oldClientHeartbeats = this._clientHeartbeats;
+      Map<ClientProxyMembershipID, Long> oldClientHeartbeats = this._clientHeartbeats;
-        Map newClientHeartbeats = new HashMap(oldClientHeartbeats);
+        Map<ClientProxyMembershipID, Long> newClientHeartbeats = new HashMap<>(oldClientHeartbeats);
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
+   *
+   *         Test hook only.
-  public Map getClientHeartbeats() {
-    return this._clientHeartbeats;
+  Map<ClientProxyMembershipID, Long> getClientHeartbeats() {
+    synchronized (this._clientHeartbeatsLock) {
+      return new HashMap<>(this._clientHeartbeats);
+    }
-   * 
+   *
-   * 
+   *
-    final protected int _maximumTimeBetweenPings;
+    protected final int _maximumTimeBetweenPings;
-     * 
+     *
-     * 
+     *

UPD83 INS74 INS83 INS83 INS83 INS83 INS83 UPD83 UPD83 INS74 INS8 MOV43 INS43 INS43 INS32 MOV43 INS43 INS43 INS51 INS83 INS66 INS42 INS42 INS42 INS42 UPD66 INS66 INS42 INS42 INS22 MOV8 INS52 INS42 INS74 INS74 INS14 MOV43 INS43 INS43 MOV43 INS43 INS43 INS74 MOV22 INS42 INS42 INS42 INS74 MOV32 INS42 INS42 INS42 INS74 INS43 MOV43 INS43 INS43 UPD42 UPD42 INS42 MOV43 INS43 INS43 INS42 UPD42 MOV42 INS42 INS74 UPD42 MOV42 INS42 INS74 MOV43 MOV43 DEL83 DEL40 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL42 DEL42 DEL32 DEL83 DEL83