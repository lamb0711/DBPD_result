GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long startparam)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long startparam)
-    CachedRegionHelper crHelper = servConn.getCachedRegionHelper();
-    CacheServerStats stats = servConn.getCacheServerStats();
+    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
+    CacheServerStats stats = serverConnection.getCacheServerStats();
-    servConn.setAsTrue(REQUIRES_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
-    int parts = msg.getNumberOfParts();
-    regionNamePart = msg.getPart(0);
-    keyPart = msg.getPart(1);
+    int parts = clientMessage.getNumberOfParts();
+    regionNamePart = clientMessage.getPart(0);
+    keyPart = clientMessage.getPart(1);
-      valuePart = msg.getPart(2);
+      valuePart = clientMessage.getPart(2);
-        writeException(msg, e, false, servConn);
+        writeException(clientMessage, e, false, serverConnection);
-        servConn.setAsTrue(RESPONDED);
+        serverConnection.setAsTrue(RESPONDED);
-      writeException(msg, e, false, servConn);
+      writeException(clientMessage, e, false, serverConnection);
-      servConn.setAsTrue(RESPONDED);
+      serverConnection.setAsTrue(RESPONDED);
-          servConn.getName(), msg.getPayloadLength(), servConn.getSocketString(), regionName, key,
-          msg.getTransactionId());
+          serverConnection.getName(), clientMessage.getPayloadLength(),
+          serverConnection.getSocketString(), regionName, key, clientMessage.getTransactionId());
-      logger.warn("{}: {}", servConn.getName(), s);
-      writeErrorResponse(msg, MessageType.REQUESTDATAERROR, s, servConn);
-      servConn.setAsTrue(RESPONDED);
+      logger.warn("{}: {}", serverConnection.getName(), s);
+      writeErrorResponse(clientMessage, MessageType.REQUESTDATAERROR, s, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-    Region region = servConn.getCache().getRegion(regionName);
+    Region region = serverConnection.getCache().getRegion(regionName);
-      writeRegionDestroyedEx(msg, regionName, reason, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeRegionDestroyedEx(clientMessage, regionName, reason, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-      AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-      writeException(msg, ex, false, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeException(clientMessage, ex, false, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-      entry = getEntry(region, key, callbackArg, servConn);
+      entry = getEntry(region, key, callbackArg, serverConnection);
-      writeException(msg, e, false, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeException(clientMessage, e, false, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-        AuthorizeRequestPP postAuthzRequest = servConn.getPostAuthzRequest();
+        AuthorizeRequestPP postAuthzRequest = serverConnection.getPostAuthzRequest();
-        writeException(msg, ex, false, servConn);
-        servConn.setAsTrue(RESPONDED);
+        writeException(clientMessage, ex, false, serverConnection);
+        serverConnection.setAsTrue(RESPONDED);
-          writeResponseWithRefreshMetadata(data, callbackArg, msg, isObject, servConn, pr,
-              pr.getNetworkHopType(), versionTag, keyNotPresent);
+          writeResponseWithRefreshMetadata(data, callbackArg, clientMessage, isObject,
+              serverConnection, pr, pr.getNetworkHopType(), versionTag, keyNotPresent);
-          writeResponse(data, callbackArg, msg, isObject, versionTag, keyNotPresent, servConn);
+          writeResponse(data, callbackArg, clientMessage, isObject, versionTag, keyNotPresent,
+              serverConnection);
-        writeResponse(data, callbackArg, msg, isObject, versionTag, keyNotPresent, servConn);
+        writeResponse(data, callbackArg, clientMessage, isObject, versionTag, keyNotPresent,
+            serverConnection);
-    servConn.setAsTrue(RESPONDED);
+    serverConnection.setAsTrue(RESPONDED);
-      logger.debug("{}: Wrote get response back to {} for region {} {}", servConn.getName(),
-          servConn.getSocketString(), regionName, entry);
+      logger.debug("{}: Wrote get response back to {} for region {} {}", serverConnection.getName(),
+          serverConnection.getSocketString(), regionName, entry);
-  protected void writeReply(Message origMsg, ServerConnection servConn) throws IOException {
+  protected void writeReply(Message origMsg, ServerConnection serverConnection) throws IOException {
-  protected void writeReplyWithRefreshMetadata(Message origMsg, ServerConnection servConn,
+  protected void writeReplyWithRefreshMetadata(Message origMsg, ServerConnection serverConnection,

UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42