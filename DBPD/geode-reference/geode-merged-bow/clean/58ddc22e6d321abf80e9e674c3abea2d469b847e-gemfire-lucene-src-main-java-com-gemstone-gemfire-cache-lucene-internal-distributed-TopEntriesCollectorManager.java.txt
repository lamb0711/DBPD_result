GEODE-11: Keep results in collector unmodified

Earlier TopEntriesCollectorManager.reduce method was modifying the hits
collected in TopEntriesCollector. As a result calling getResults twice will
fail. The collected entry set needs to be preserved without making a copy.

-    
+
-    Comparator<List<EntryScore>> entryListComparator = new Comparator<List<EntryScore>>() {
+    Comparator<ListScanner> entryListComparator = new Comparator<ListScanner>() {
-      public int compare(List<EntryScore> l1, List<EntryScore> l2) {
-        EntryScore o1 = l1.get(0);
-        EntryScore o2 = l2.get(0);
+      public int compare(ListScanner l1, ListScanner l2) {
+        EntryScore o1 = l1.peek();
+        EntryScore o2 = l2.peek();
-    PriorityQueue<List<EntryScore>> entryListsPriorityQueue;
-    entryListsPriorityQueue = new PriorityQueue<List<EntryScore>>(collectors.size(), Collections.reverseOrder(entryListComparator));
+    PriorityQueue<ListScanner> entryListsPriorityQueue;
+    entryListsPriorityQueue = new PriorityQueue<ListScanner>(collectors.size(),
+        Collections.reverseOrder(entryListComparator));
-        entryListsPriorityQueue.add(((TopEntriesCollector) collector).getEntries().getHits());
+        entryListsPriorityQueue.add(new ListScanner(((TopEntriesCollector) collector).getEntries().getHits()));
-      List<EntryScore> list = entryListsPriorityQueue.remove();
-      EntryScore entry = list.remove(0);
+      ListScanner scanner = entryListsPriorityQueue.remove();
+      EntryScore entry = scanner.next();
-      if (list.size() > 0) {
-        entryListsPriorityQueue.add(list);
+      if (scanner.hasNext()) {
+        entryListsPriorityQueue.add(scanner);
+  /*
+   * Utility class to iterate on hits without modifying it
+   */
+  static class ListScanner {
+    private List<EntryScore> hits;
+    private int index = 0;
+
+    ListScanner(List<EntryScore> hits) {
+      this.hits = hits;
+    }
+
+    boolean hasNext() {
+      return index < hits.size();
+    }
+
+    EntryScore peek() {
+      return hits.get(index);
+    }
+
+    EntryScore next() {
+      return hits.get(index++);
+    }
+  }
+

INS55 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS31 INS83 MOV74 INS59 INS83 INS39 INS59 INS42 INS44 INS8 INS39 INS42 INS8 INS43 INS42 INS8 INS43 INS42 INS8 UPD74 UPD74 INS42 INS42 INS34 MOV74 INS42 INS21 INS41 INS42 INS41 INS42 INS41 UPD43 MOV43 MOV43 UPD43 MOV43 INS7 INS27 INS32 INS32 UPD42 UPD74 UPD42 UPD74 INS43 INS32 INS22 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS37 UPD43 MOV43 MOV43 INS43 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 INS52 INS42 INS42 INS42 INS42 UPD42 INS42 UPD42 UPD42 INS43 INS43 INS14 UPD42 UPD42 MOV42 UPD42 MOV42 MOV43 MOV43 INS43 MOV32 INS42 UPD42 UPD42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL74 DEL43 DEL42 DEL43 DEL74 DEL43 DEL42 DEL43 DEL74 DEL34 DEL34 DEL42 DEL43 DEL74 DEL34 DEL32 DEL34 DEL27