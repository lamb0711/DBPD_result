Changing how PartitionRepositoryManager handles destroyed buckets

This class was using a weak hash map with BucketRegions as keys. Instead
of that, use the bucket id as the key. I added support to
IndexRepository for the repository to indicate if the underlying
BucketRegion has been destroyed. If the IndexRepository is destroyed, we
will create a new IndexRepository in PartitionRepositoryManager.

+import com.gemstone.gemfire.cache.Region;
+  private Region<?,?> region;
-  public IndexRepositoryImpl(IndexWriter writer, LuceneSerializer serializer) throws IOException {
+  public IndexRepositoryImpl(Region<?,?> region, IndexWriter writer, LuceneSerializer serializer) throws IOException {
+    this.region = region;
-  
-  
+
+  @Override
+  public boolean isClosed() {
+    return region.isDestroyed();
+  }

INS26 INS40 INS23 INS31 INS83 INS74 INS59 INS44 INS78 INS83 INS39 INS42 INS8 INS43 INS76 INS76 INS42 INS74 INS42 INS21 INS42 INS41 INS42 INS43 INS76 INS76 INS7 INS32 INS42 INS22 INS42 INS42 INS42 INS52 INS42