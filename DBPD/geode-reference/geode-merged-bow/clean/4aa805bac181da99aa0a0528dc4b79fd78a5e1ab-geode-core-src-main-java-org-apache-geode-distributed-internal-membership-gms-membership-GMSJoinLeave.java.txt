GEODE-7038: After auto-reconnect a server's multicat communications aren't working correctly

Ensure that a JoinResponseMessage is sent if multicast is enabled.  This
allows JGroupsMessenger to piggy-back a multicast message digest on the
response that the new process can install in its JGroups stack to ensure
that multicast messaging is properly initialized.

I've also replaced complex checks for whether UDP security is enabled
with a simpler check on ServiceConfig.  When UDP security is enabled we
are already sending a JoinResponseMessage and so we don't need to send
another one if multicast is enabled.

-        if (request instanceof JoinRequestMessage) {
-          if (isCoordinator
-              && !services.getConfig().getDistributionConfig().getSecurityUDPDHAlgo().isEmpty()) {
-            services.getMessenger().initClusterKey();
-            JoinRequestMessage jreq = (JoinRequestMessage) request;
-            // this will inform about cluster-secret key, as we have authenticated at this point
-            JoinResponseMessage response = new JoinResponseMessage(jreq.getSender(),
-                services.getMessenger().getClusterSecretKey(), jreq.getRequestId());
-            services.getMessenger().send(response);
-          }
-        }
-  private void sendDHKeys() {
-    if (isCoordinator
-        && !services.getConfig().getDistributionConfig().getSecurityUDPDHAlgo().isEmpty()) {
-      synchronized (viewRequests) {
-        for (DistributionMessage request : viewRequests) {
-          if (request instanceof JoinRequestMessage) {
-
-            services.getMessenger().initClusterKey();
-            JoinRequestMessage jreq = (JoinRequestMessage) request;
-            // this will inform about cluster-secret key, as we have authenticated at this point
-            JoinResponseMessage response = new JoinResponseMessage(jreq.getSender(),
-                services.getMessenger().getClusterSecretKey(), jreq.getRequestId());
-            services.getMessenger().send(response);
-          }
-        }
-      }
-    }
-  }
-
-    sendDHKeys();
+                if (services.getConfig().isUDPSecurityEnabled() ||
+                    services.getConfig().isMulticastEnabled()) {
+                  // send a join response so the new member can get the multicast messaging digest
+                  // and cluster key
+                  JoinResponseMessage response = new JoinResponseMessage(jmsg.getSender(),
+                      services.getMessenger().getClusterSecretKey(), jmsg.getRequestId());
+                  services.getMessenger().send(response);
+                }

INS8 MOV21 MOV21 MOV21 MOV25 MOV38 MOV8 INS25 MOV27 MOV8 MOV8 MOV21 MOV21 UPD27 MOV27 INS32 MOV32 MOV32 UPD42 MOV42 UPD42 MOV43 MOV42 UPD42 MOV43 UPD42 UPD42 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL38 DEL27 DEL42 DEL51 DEL8 DEL25 DEL8 DEL31 DEL42 DEL32 DEL21 DEL42 DEL32 DEL38 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL70 DEL8 DEL8 DEL25