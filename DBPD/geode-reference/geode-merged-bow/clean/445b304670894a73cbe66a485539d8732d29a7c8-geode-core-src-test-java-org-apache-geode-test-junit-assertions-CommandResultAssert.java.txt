GEODE-3341: Convert DiskStoreCommandsDUnitTest to use gfsh rules (#1062)

* GEODE-3341: Convert DiskStoreCommandsDUnitTest to use gfsh rules

* GEODE-3341: PR review updates

+import java.util.List;
-    GfJsonObject resultContentJSON = actual.getCommandResult().getContent();
-    Object content = getColumnContent(header, resultContentJSON);
-
-    if (content == null) {
-      failWithMessage(
-          "Command result did not contain <" + header + ">: " + resultContentJSON.toString());
-    }
-
-    Object[] actualValues = toArray((JSONArray) content);
+    List<Object> actualValues = actual.getCommandResult().getColumnValues(header);
-    GfJsonObject resultContentJSON = actual.getCommandResult().getContent();
-    Object content = getColumnContent(header, resultContentJSON);
-
-    if (content == null) {
-      failWithMessage("Command result did not contain a table with column header <" + header + ">: "
-          + resultContentJSON.toString());
-    }
-
-    Object[] actualValues = toArray((JSONArray) content);
+    List<Object> actualValues = actual.getCommandResult().getColumnValues(header);
-    GfJsonObject resultContentJSON = actual.getCommandResult().getContent();
-    Object content = getColumnContent(header, resultContentJSON);
-
-    if (content == null) {
-      failWithMessage("Command result did not contain a table with column header <" + header + ">: "
-          + resultContentJSON.toString());
-    }
-
-    Object[] actualValues = toArray((JSONArray) content);
+    List<Object> actualValues = actual.getCommandResult().getColumnValues(header);
-
-    GfJsonObject resultContentJSON = actual.getCommandResult().getContent();
-    Object content = getColumnContent(header, resultContentJSON);
-
-    if (content == null) {
-      failWithMessage("Command result did not contain a table with column header <" + header + ">: "
-          + resultContentJSON.toString());
-    }
-
-    Object[] actualValues = toArray((JSONArray) content);
+    List<Object> actualValues = actual.getCommandResult().getColumnValues(header);
-    return this;
-  }
-  private Object getColumnContent(String header, GfJsonObject resultContentJSON) {
-    if (resultContentJSON.get(header) != null) {
-      return resultContentJSON.get(header);
-    }
-    try {
-      // Sometimes, the output is buried in a most questionable way.
-      return resultContentJSON.getJSONObject("__sections__-0").getJSONObject("__tables__-0")
-          .getJSONObject("content").get(header);
-    } catch (NullPointerException ignored) {
-    }
-    return null;
+    return this;

INS26 INS40 INS8 MOV60 MOV60 MOV21 MOV41 INS74 INS74 INS74 INS74 INS43 MOV43 UPD42 INS43 MOV43 INS43 MOV43 UPD42 INS43 MOV43 UPD42 INS42 UPD42 INS42 UPD42 MOV42 MOV32 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 UPD42 MOV42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL11 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL59 DEL60 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL59 DEL60 DEL8 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL42 DEL45 DEL32 DEL42 DEL45 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL33 DEL41 DEL8 DEL31