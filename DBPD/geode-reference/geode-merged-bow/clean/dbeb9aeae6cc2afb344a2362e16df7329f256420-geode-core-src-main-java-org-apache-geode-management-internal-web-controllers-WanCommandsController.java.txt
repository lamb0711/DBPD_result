Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The WanCommandsController class implements the GemFire Management REST API web service endpoints for the
- * Gfsh WAN Commands.
+ * The WanCommandsController class implements the GemFire Management REST API web service endpoints
+ * for the Gfsh WAN Commands.
-  public String listGateways(@RequestParam(value = CliStrings.LIST_GATEWAY__GROUP, required = false) final String[] groups,
-                             @RequestParam(value = CliStrings.LIST_GATEWAY__MEMBER, required = false) final String[] members)
-  {
+  public String listGateways(
+      @RequestParam(value = CliStrings.LIST_GATEWAY__GROUP, required = false) final String[] groups,
+      @RequestParam(value = CliStrings.LIST_GATEWAY__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.LIST_GATEWAY__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.LIST_GATEWAY__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.LIST_GATEWAY__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.LIST_GATEWAY__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-  public String createGatewayReceiver(@RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__GROUP, required = false) final String[] groups,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__MANUALSTART, required = false) final Boolean manualStart,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__MEMBER, required = false) final String[] members,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__STARTPORT, required = false) final Integer startPort,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__ENDPORT, required = false) final Integer endPort,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__BINDADDRESS, required = false) final String bindAddress,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__MAXTIMEBETWEENPINGS, required = false) final Integer maximumTimeBetweenPings,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__SOCKETBUFFERSIZE, required = false) final Integer socketBufferSize,
-                                      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__GATEWAYTRANSPORTFILTER, required = false) final String[] gatewayTransportFilters)
-  {
+  public String createGatewayReceiver(
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__MANUALSTART,
+          required = false) final Boolean manualStart,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__MEMBER,
+          required = false) final String[] members,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__STARTPORT,
+          required = false) final Integer startPort,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__ENDPORT,
+          required = false) final Integer endPort,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__BINDADDRESS,
+          required = false) final String bindAddress,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__MAXTIMEBETWEENPINGS,
+          required = false) final Integer maximumTimeBetweenPings,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__SOCKETBUFFERSIZE,
+          required = false) final Integer socketBufferSize,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYRECEIVER__GATEWAYTRANSPORTFILTER,
+          required = false) final String[] gatewayTransportFilters) {
-      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__GROUP, StringUtils.concat(groups,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__MANUALSTART, String.valueOf(manualStart));
+      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__MANUALSTART,
+          String.valueOf(manualStart));
-    
+
-      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__MEMBER, StringUtils.concat(members,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__MAXTIMEBETWEENPINGS, String.valueOf(maximumTimeBetweenPings));
+      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__MAXTIMEBETWEENPINGS,
+          String.valueOf(maximumTimeBetweenPings));
-      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__SOCKETBUFFERSIZE, String.valueOf(socketBufferSize));
+      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__SOCKETBUFFERSIZE,
+          String.valueOf(socketBufferSize));
-      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__GATEWAYTRANSPORTFILTER, StringUtils.concat(
-        gatewayTransportFilters, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYRECEIVER__GATEWAYTRANSPORTFILTER,
+          StringUtils.concat(gatewayTransportFilters, StringUtils.COMMA_DELIMITER));
-  public String createGatewaySender(@RequestParam(CliStrings.CREATE_GATEWAYSENDER__ID) final String gatewaySenderId,
-                                    @RequestParam(CliStrings.CREATE_GATEWAYSENDER__REMOTEDISTRIBUTEDSYSTEMID) final Integer remoteDistributedSystemId,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__GROUP, required = false) final String[] groups,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__MEMBER, required = false) final String[] members,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__PARALLEL, required = false) final Boolean parallel,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__MANUALSTART, required = false) final Boolean manualStart,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__SOCKETBUFFERSIZE, required = false) final Integer socketBufferSize,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__SOCKETREADTIMEOUT, required = false) final Integer socketReadTimeout,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ENABLEBATCHCONFLATION, required = false) final Boolean enableBatchConflation,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__BATCHSIZE, required = false) final Integer batchSize,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__BATCHTIMEINTERVAL, required = false) final Integer batchTimeInterval,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ENABLEPERSISTENCE, required = false) final Boolean enablePersistence,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__DISKSTORENAME, required = false) final String diskStoreName,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__DISKSYNCHRONOUS, required = false) final Boolean diskSynchronous,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__MAXQUEUEMEMORY, required = false) final Integer maxQueueMemory,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ALERTTHRESHOLD, required = false) final Integer alertThreshold,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__DISPATCHERTHREADS, required = false) final Integer dispatcherThreads,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ORDERPOLICY, required = false) final String orderPolicy,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__GATEWAYEVENTFILTER, required = false) final String[] gatewayEventFilters,
-                                    @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__GATEWAYTRANSPORTFILTER, required = false) final String[] gatewayTransportFilters)
-  {
+  public String createGatewaySender(
+      @RequestParam(CliStrings.CREATE_GATEWAYSENDER__ID) final String gatewaySenderId,
+      @RequestParam(CliStrings.CREATE_GATEWAYSENDER__REMOTEDISTRIBUTEDSYSTEMID) final Integer remoteDistributedSystemId,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__MEMBER,
+          required = false) final String[] members,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__PARALLEL,
+          required = false) final Boolean parallel,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__MANUALSTART,
+          required = false) final Boolean manualStart,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__SOCKETBUFFERSIZE,
+          required = false) final Integer socketBufferSize,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__SOCKETREADTIMEOUT,
+          required = false) final Integer socketReadTimeout,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ENABLEBATCHCONFLATION,
+          required = false) final Boolean enableBatchConflation,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__BATCHSIZE,
+          required = false) final Integer batchSize,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__BATCHTIMEINTERVAL,
+          required = false) final Integer batchTimeInterval,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ENABLEPERSISTENCE,
+          required = false) final Boolean enablePersistence,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__DISKSTORENAME,
+          required = false) final String diskStoreName,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__DISKSYNCHRONOUS,
+          required = false) final Boolean diskSynchronous,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__MAXQUEUEMEMORY,
+          required = false) final Integer maxQueueMemory,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ALERTTHRESHOLD,
+          required = false) final Integer alertThreshold,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__DISPATCHERTHREADS,
+          required = false) final Integer dispatcherThreads,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__ORDERPOLICY,
+          required = false) final String orderPolicy,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__GATEWAYEVENTFILTER,
+          required = false) final String[] gatewayEventFilters,
+      @RequestParam(value = CliStrings.CREATE_GATEWAYSENDER__GATEWAYTRANSPORTFILTER,
+          required = false) final String[] gatewayTransportFilters) {
-    command.addOption(CliStrings.CREATE_GATEWAYSENDER__REMOTEDISTRIBUTEDSYSTEMID, String.valueOf(remoteDistributedSystemId));
+    command.addOption(CliStrings.CREATE_GATEWAYSENDER__REMOTEDISTRIBUTEDSYSTEMID,
+        String.valueOf(remoteDistributedSystemId));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__SOCKETBUFFERSIZE, String.valueOf(socketBufferSize));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__SOCKETBUFFERSIZE,
+          String.valueOf(socketBufferSize));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__SOCKETREADTIMEOUT, String.valueOf(socketReadTimeout));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__SOCKETREADTIMEOUT,
+          String.valueOf(socketReadTimeout));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__ENABLEBATCHCONFLATION, String.valueOf(enableBatchConflation));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__ENABLEBATCHCONFLATION,
+          String.valueOf(enableBatchConflation));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__BATCHTIMEINTERVAL, String.valueOf(batchTimeInterval));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__BATCHTIMEINTERVAL,
+          String.valueOf(batchTimeInterval));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__ENABLEPERSISTENCE, String.valueOf(enablePersistence));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__ENABLEPERSISTENCE,
+          String.valueOf(enablePersistence));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__DISKSYNCHRONOUS, String.valueOf(diskSynchronous));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__DISKSYNCHRONOUS,
+          String.valueOf(diskSynchronous));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__MAXQUEUEMEMORY, String.valueOf(maxQueueMemory));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__MAXQUEUEMEMORY,
+          String.valueOf(maxQueueMemory));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__ALERTTHRESHOLD, String.valueOf(alertThreshold));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__ALERTTHRESHOLD,
+          String.valueOf(alertThreshold));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__DISPATCHERTHREADS, String.valueOf(dispatcherThreads));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__DISPATCHERTHREADS,
+          String.valueOf(dispatcherThreads));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GATEWAYEVENTFILTER, StringUtils.concat(gatewayEventFilters,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GATEWAYEVENTFILTER,
+          StringUtils.concat(gatewayEventFilters, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GATEWAYTRANSPORTFILTER, StringUtils.concat(
-        gatewayTransportFilters, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GATEWAYTRANSPORTFILTER,
+          StringUtils.concat(gatewayTransportFilters, StringUtils.COMMA_DELIMITER));
-  @RequestMapping(method = RequestMethod.POST, value = "/gateways/senders/{id}", params = "op=load-balance")
+
+  @RequestMapping(method = RequestMethod.DELETE, value = "/gateways/senders/{id}")
+  @ResponseBody
+  public String destroyGatewaySender(@PathVariable("id") final String gatewaySenderId,
+      @RequestParam(value = CliStrings.DESTROY_GATEWAYSENDER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.DESTROY_GATEWAYSENDER__MEMBER,
+          required = false) final String[] members) {
+    CommandStringBuilder command = new CommandStringBuilder(CliStrings.DESTROY_GATEWAYSENDER);
+    command.addOption(CliStrings.CREATE_GATEWAYSENDER__ID, gatewaySenderId);
+
+    if (hasValue(groups)) {
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+    }
+
+    if (hasValue(members)) {
+      command.addOption(CliStrings.CREATE_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+    }
+    return processCommand(command.toString());
+  }
+
+
+  @RequestMapping(method = RequestMethod.POST, value = "/gateways/senders/{id}",
+      params = "op=load-balance")
-  @RequestMapping(method = RequestMethod.POST, value = "/gateways/senders/{id}", params = "op=pause")
+  @RequestMapping(method = RequestMethod.POST, value = "/gateways/senders/{id}",
+      params = "op=pause")
-                                   @RequestParam(value = CliStrings.PAUSE_GATEWAYSENDER__GROUP, required = false) final String[] groups,
-                                   @RequestParam(value = CliStrings.PAUSE_GATEWAYSENDER__MEMBER, required = false) final String[] members)
-  {
+      @RequestParam(value = CliStrings.PAUSE_GATEWAYSENDER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.PAUSE_GATEWAYSENDER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.PAUSE_GATEWAYSENDER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.PAUSE_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.PAUSE_GATEWAYSENDER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.PAUSE_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-  @RequestMapping(method = RequestMethod.POST, value = "/gateways/senders/{id}", params = "op=resume")
+  @RequestMapping(method = RequestMethod.POST, value = "/gateways/senders/{id}",
+      params = "op=resume")
-                                    @RequestParam(value = CliStrings.RESUME_GATEWAYSENDER__GROUP, required = false) final String[] groups,
-                                    @RequestParam(value = CliStrings.RESUME_GATEWAYSENDER__MEMBER, required = false) final String[] members)
-  {
+      @RequestParam(value = CliStrings.RESUME_GATEWAYSENDER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.RESUME_GATEWAYSENDER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.RESUME_GATEWAYSENDER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.RESUME_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.RESUME_GATEWAYSENDER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.RESUME_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-  public String startGatewayReceiver(@RequestParam(value = CliStrings.START_GATEWAYRECEIVER__GROUP, required = false) final String[] groups,
-                                     @RequestParam(value = CliStrings.START_GATEWAYRECEIVER__MEMBER, required = false) final String[] members)
-  {
+  public String startGatewayReceiver(
+      @RequestParam(value = CliStrings.START_GATEWAYRECEIVER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.START_GATEWAYRECEIVER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.START_GATEWAYRECEIVER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.START_GATEWAYRECEIVER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.START_GATEWAYRECEIVER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.START_GATEWAYRECEIVER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-  public String startGatewaySender(@RequestParam(CliStrings.START_GATEWAYSENDER__ID) final String gatewaySenderId,
-                                   @RequestParam(value = CliStrings.START_GATEWAYSENDER__GROUP, required = false) final String[] groups,
-                                   @RequestParam(value = CliStrings.START_GATEWAYSENDER__MEMBER, required = false) final String[] members)
-  {
+  public String startGatewaySender(
+      @RequestParam(CliStrings.START_GATEWAYSENDER__ID) final String gatewaySenderId,
+      @RequestParam(value = CliStrings.START_GATEWAYSENDER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.START_GATEWAYSENDER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.START_GATEWAYSENDER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.START_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.START_GATEWAYSENDER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.START_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-  public String statusGatewayReceivers(@RequestParam(value = CliStrings.STATUS_GATEWAYRECEIVER__GROUP, required = false) final String[] groups,
-                                       @RequestParam(value = CliStrings.STATUS_GATEWAYRECEIVER__MEMBER, required = false) final String[] members)
-  {
+  public String statusGatewayReceivers(
+      @RequestParam(value = CliStrings.STATUS_GATEWAYRECEIVER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.STATUS_GATEWAYRECEIVER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.STATUS_GATEWAYRECEIVER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STATUS_GATEWAYRECEIVER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.STATUS_GATEWAYRECEIVER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STATUS_GATEWAYRECEIVER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-                                     @RequestParam(value = CliStrings.STATUS_GATEWAYSENDER__GROUP, required = false) final String[] groups,
-                                     @RequestParam(value = CliStrings.STATUS_GATEWAYSENDER__MEMBER, required = false) final String[] members)
-  {
+      @RequestParam(value = CliStrings.STATUS_GATEWAYSENDER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.STATUS_GATEWAYSENDER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.STATUS_GATEWAYSENDER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STATUS_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.STATUS_GATEWAYSENDER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STATUS_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-  public String stopGatewayReceiver(@RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__GROUP, required = false) final String[] groups,
-                                    @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__MEMBER, required = false) final String[] members)
-  {
+  public String stopGatewayReceiver(
+      @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.STOP_GATEWAYRECEIVER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STOP_GATEWAYRECEIVER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.STOP_GATEWAYRECEIVER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STOP_GATEWAYRECEIVER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
-                                  @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__GROUP, required = false) final String[] groups,
-                                  @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__MEMBER, required = false) final String[] members)
-  {
+      @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__GROUP,
+          required = false) final String[] groups,
+      @RequestParam(value = CliStrings.STOP_GATEWAYRECEIVER__MEMBER,
+          required = false) final String[] members) {
-      command.addOption(CliStrings.STOP_GATEWAYSENDER__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STOP_GATEWAYSENDER__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.STOP_GATEWAYSENDER__MEMBER, StringUtils.concat(members, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.STOP_GATEWAYSENDER__MEMBER,
+          StringUtils.concat(members, StringUtils.COMMA_DELIMITER));

INS31 INS77 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS8 UPD66 UPD66 INS42 INS80 INS80 INS42 INS42 INS79 INS83 INS43 INS42 INS77 INS83 INS5 INS42 INS77 INS83 INS5 INS42 INS60 INS21 INS25 INS25 INS41 INS42 INS40 INS42 INS45 INS42 INS45 INS42 INS42 INS80 INS80 INS43 INS85 INS42 INS80 INS80 INS43 INS85 INS43 INS59 INS32 INS32 INS8 INS32 INS8 INS32 INS42 INS40 INS42 INS9 INS42 INS42 INS40 INS42 INS9 INS42 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS32 INS43 INS40 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40