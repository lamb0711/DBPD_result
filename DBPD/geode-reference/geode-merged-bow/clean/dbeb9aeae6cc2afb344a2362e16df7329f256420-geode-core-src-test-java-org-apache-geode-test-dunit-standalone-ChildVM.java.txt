Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+import org.apache.geode.test.dunit.VM;
+import org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase;
-  
+
-  
+
+      String geodeVersion = System.getProperty(DUnitLauncher.VM_VERSION_PARAM);
-      logger.info("VM" + vmNum + " is launching" + (pid > 0? " with PID " + pid : ""));
-      MasterRemote holder = (MasterRemote) Naming.lookup("//localhost:" + namingPort + "/" + DUnitLauncher.MASTER_PARAM);
+      logger.info("VM" + vmNum + " is launching" + (pid > 0 ? " with PID " + pid : ""));
+      if (!VersionManager.isCurrentVersion(geodeVersion)) {
+        logger.info("This VM is using Geode version {}", geodeVersion);
+      }
+      MasterRemote holder = (MasterRemote) Naming
+          .lookup("//localhost:" + namingPort + "/" + DUnitLauncher.MASTER_PARAM);
-      Naming.rebind("//localhost:" + namingPort + "/vm" + vmNum, dunitVM);
+      final String name = "//localhost:" + namingPort + "/vm" + vmNum;
+      Naming.rebind(name, dunitVM);
+      JUnit4DistributedTestCase.initializeBlackboard();
-      //This loop is here so this VM will die even if the master is mean killed.
+      // This loop is here so this VM will die even if the master is mean killed.

INS26 INS26 INS40 INS40 INS60 INS25 INS60 INS21 INS43 INS59 INS38 INS8 INS83 INS43 INS59 INS32 INS42 INS42 INS32 INS32 INS21 INS42 INS42 MOV27 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42