GEODE-6380: Making some static fields immutable

Making some static fields immutable. Changes consist of
 - Marking fields final
 - Initializing during static intializer
 - Wrapping collections in umodifiable collections
 - removing unneeded static fields.

+import java.util.Collections;
-import org.apache.geode.annotations.internal.MakeImmutable;
+import org.apache.geode.annotations.Immutable;
-  @MakeImmutable
-  private static final Map<String, Level> ANY_NAME_TO_LEVEL = new HashMap<>();
-  @MakeImmutable
-  private static final Map<String, LogWriterLevel> ANY_NAME_TO_LOGWRITERLEVEL = new HashMap<>();
+  @Immutable
+  private static final Map<String, Level> ANY_NAME_TO_LEVEL;
+  @Immutable
+  private static final Map<String, LogWriterLevel> ANY_NAME_TO_LOGWRITERLEVEL;
+    Map<String, Level> nameToLevel = new HashMap<>();
+    Map<String, LogWriterLevel> nameToLogLevel = new HashMap<>();
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.NONE.name(), LogWriterLevel.NONE);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.SEVERE.name(), LogWriterLevel.SEVERE);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.ERROR.name(), LogWriterLevel.ERROR);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.WARNING.name(), LogWriterLevel.WARNING);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.INFO.name(), LogWriterLevel.INFO);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.CONFIG.name(), LogWriterLevel.CONFIG);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.FINE.name(), LogWriterLevel.FINE);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.FINER.name(), LogWriterLevel.FINER);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.FINEST.name(), LogWriterLevel.FINEST);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(LogWriterLevel.ALL.name(), LogWriterLevel.ALL);
+    nameToLogLevel.put(LogWriterLevel.NONE.name(), LogWriterLevel.NONE);
+    nameToLogLevel.put(LogWriterLevel.SEVERE.name(), LogWriterLevel.SEVERE);
+    nameToLogLevel.put(LogWriterLevel.ERROR.name(), LogWriterLevel.ERROR);
+    nameToLogLevel.put(LogWriterLevel.WARNING.name(), LogWriterLevel.WARNING);
+    nameToLogLevel.put(LogWriterLevel.INFO.name(), LogWriterLevel.INFO);
+    nameToLogLevel.put(LogWriterLevel.CONFIG.name(), LogWriterLevel.CONFIG);
+    nameToLogLevel.put(LogWriterLevel.FINE.name(), LogWriterLevel.FINE);
+    nameToLogLevel.put(LogWriterLevel.FINER.name(), LogWriterLevel.FINER);
+    nameToLogLevel.put(LogWriterLevel.FINEST.name(), LogWriterLevel.FINEST);
+    nameToLogLevel.put(LogWriterLevel.ALL.name(), LogWriterLevel.ALL);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(Level.OFF.name(), LogWriterLevel.NONE);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(Level.FATAL.name(), LogWriterLevel.SEVERE);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(Level.WARN.name(), LogWriterLevel.WARNING);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(Level.DEBUG.name(), LogWriterLevel.FINE);
-    ANY_NAME_TO_LOGWRITERLEVEL.put(Level.TRACE.name(), LogWriterLevel.FINEST);
+    nameToLogLevel.put(Level.OFF.name(), LogWriterLevel.NONE);
+    nameToLogLevel.put(Level.FATAL.name(), LogWriterLevel.SEVERE);
+    nameToLogLevel.put(Level.WARN.name(), LogWriterLevel.WARNING);
+    nameToLogLevel.put(Level.DEBUG.name(), LogWriterLevel.FINE);
+    nameToLogLevel.put(Level.TRACE.name(), LogWriterLevel.FINEST);
-      ANY_NAME_TO_LEVEL.put(level.name(), level);
+      nameToLevel.put(level.name(), level);
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.SEVERE.name(),
+    nameToLevel.put(LogWriterLevel.SEVERE.name(),
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.WARNING.name(),
+    nameToLevel.put(LogWriterLevel.WARNING.name(),
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.CONFIG.name(),
+    nameToLevel.put(LogWriterLevel.CONFIG.name(),
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.FINE.name(),
+    nameToLevel.put(LogWriterLevel.FINE.name(),
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.FINER.name(),
+    nameToLevel.put(LogWriterLevel.FINER.name(),
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.FINEST.name(),
+    nameToLevel.put(LogWriterLevel.FINEST.name(),
-    ANY_NAME_TO_LEVEL.put(LogWriterLevel.NONE.name(),
+    nameToLevel.put(LogWriterLevel.NONE.name(),
+
+    ANY_NAME_TO_LOGWRITERLEVEL = Collections.unmodifiableMap(nameToLogLevel);
+    ANY_NAME_TO_LEVEL = Collections.unmodifiableMap(nameToLevel);

INS26 INS40 UPD40 INS59 INS59 UPD42 INS42 UPD42 INS42 INS60 INS60 INS21 INS21 INS74 MOV59 INS74 MOV59 INS7 INS7 INS43 INS43 INS43 UPD42 INS43 INS43 INS43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42