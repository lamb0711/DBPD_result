Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

-import com.gemstone.gemfire.GemFireIOException;
-import com.gemstone.gemfire.internal.cache.EntryEventImpl;
+import com.gemstone.gemfire.internal.security.IntegratedSecurityService;
+import com.gemstone.gemfire.internal.security.SecurityService;
+
+  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
-    ThreadState state = GeodeSecurityUtil.bindSubject(this.subject);
+    ThreadState state = this.securityService.bindSubject(this.subject);
-    if(GeodeSecurityUtil.needPostProcess()) {
+    if(this.securityService.needPostProcess()) {
-      if (clientMessage.valueIsObject()) {
-        Object newValue = GeodeSecurityUtil.postProcess(clientMessage.getRegionName(), clientMessage.getKeyOfInterest(), EntryEventImpl
-          .deserialize((byte[]) oldValue));
-        try {
-          clientMessage.setLatestValue(BlobHelper.serializeToBlob(newValue));
-        } catch (IOException e) {
-          throw new GemFireIOException("Exception serializing entry value", e);
-        }
-      } else {
-        Object newValue = GeodeSecurityUtil.postProcess(clientMessage.getRegionName(), clientMessage.getKeyOfInterest(), oldValue);
-        clientMessage.setLatestValue(newValue);
-      }
+      Object newValue = GeodeSecurityUtil.postProcess(clientMessage.getRegionName(), clientMessage.getKeyOfInterest(), oldValue, clientMessage.valueIsObject());
+      clientMessage.setLatestValue(newValue);
-     * @guarded.By _pausedLock
+     * guarded.By _pausedLock

MOV26 MOV26 UPD40 UPD40 INS23 INS83 INS43 INS59 INS42 INS42 INS32 INS42 INS42 MOV8 INS22 MOV60 MOV21 INS22 INS52 INS42 INS52 INS42 INS42 MOV32 DEL42 DEL42 DEL42 DEL42 DEL39 DEL85 DEL5 DEL42 DEL11 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25 DEL8