Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
-   
+
+
-//import org.apache.geode.internal.*;
-//import org.apache.geode.internal.admin.*;
+// import org.apache.geode.internal.*;
+// import org.apache.geode.internal.admin.*;
-//import java.util.*;
+// import java.util.*;
- * A message that is sent to a particular distribution manager to
- * add a health listener.
+ * A message that is sent to a particular distribution manager to add a health listener.
+ * 
-   * Returns a <code>AddHealthListenerRequest</code> to be sent to the
-   * specified recipient.
+   * Returns a <code>AddHealthListenerRequest</code> to be sent to the specified recipient.
-   * @throws NullPointerException
-   *         If <code>cfg</code> is <code>null</code>
+   * @throws NullPointerException If <code>cfg</code> is <code>null</code>
-      throw new NullPointerException(LocalizedStrings.AddHealthListenerRequest_NULL_GEMFIREHEALTHCONFIG.toLocalizedString());
+      throw new NullPointerException(
+          LocalizedStrings.AddHealthListenerRequest_NULL_GEMFIREHEALTHCONFIG.toLocalizedString());
-    friendlyName = LocalizedStrings.AddHealthListenerRequest_ADD_HEALTH_LISTENER.toLocalizedString();
+    friendlyName =
+        LocalizedStrings.AddHealthListenerRequest_ADD_HEALTH_LISTENER.toLocalizedString();
-  @Override  
+  @Override
-  @Override  
+  @Override
-  @Override  
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  @Override
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    this.cfg = (GemFireHealthConfig)DataSerializer.readObject(in);
+    this.cfg = (GemFireHealthConfig) DataSerializer.readObject(in);
-  @Override  
+  @Override

UPD66 UPD66 UPD66 DEL66 DEL66