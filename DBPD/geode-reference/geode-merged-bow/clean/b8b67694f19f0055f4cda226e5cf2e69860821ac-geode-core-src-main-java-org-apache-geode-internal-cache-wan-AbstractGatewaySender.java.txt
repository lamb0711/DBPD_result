Merge branch 'develop' into feature/GEODE-7049

+import static org.apache.geode.internal.statistics.StatisticsClockFactory.disabledClock;
+
+import org.apache.geode.internal.statistics.StatisticsClock;
+  protected boolean startEventProcessorInPausedState = false;
+
-  protected AbstractGatewaySender() {}
+  private final StatisticsClock statisticsClock;
-  public AbstractGatewaySender(InternalCache cache, GatewaySenderAttributes attrs) {
+  protected AbstractGatewaySender() {
+    statisticsClock = disabledClock();
+  }
+
+  public AbstractGatewaySender(InternalCache cache, StatisticsClock statisticsClock,
+      GatewaySenderAttributes attrs) {
+    this.statisticsClock = statisticsClock;
-        this.statistics = new GatewaySenderStats(cache.getDistributedSystem(), id);
+        this.statistics = new GatewaySenderStats(cache.getDistributedSystem(),
+            "gatewaySenderStats-", id, statisticsClock);
+  @Override
+  public StatisticsClock getStatisticsClock() {
+    return statisticsClock;
+  }
+
+  public boolean isStartEventProcessorInPausedState() {
+    return startEventProcessorInPausedState;
+  }
+
+  public void setStartEventProcessorInPausedState() {
+    startEventProcessorInPausedState = true;
+  }
+
+  /**
+   * This pause will set the pause flag even if the
+   * processor has not yet started.
+   */
+  public void pauseEvenIfProcessorStopped() {
+    if (this.eventProcessor != null) {
+      this.getLifeCycleLock().writeLock().lock();
+      try {
+        this.eventProcessor.pauseDispatching();
+        InternalDistributedSystem system =
+            (InternalDistributedSystem) this.cache.getDistributedSystem();
+        system.handleResourceEvent(ResourceEvent.GATEWAYSENDER_PAUSE, this);
+        logger.info("Paused {}", this);
+
+        enqueueTempEvents();
+      } finally {
+        this.getLifeCycleLock().writeLock().unlock();
+      }
+    }
+  }
+
-              "RegionStats-" + META_DATA_REGION_NAME);
+              "RegionStats-" + META_DATA_REGION_NAME, sender.statisticsClock);

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS83 INS43 INS59 INS44 INS78 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS42 INS9 INS42 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS41 INS41 INS21 INS65 INS25 INS7 INS42 INS7 INS42 INS42 INS7 INS66 INS66 INS27 INS8 INS42 INS32 INS22 INS42 INS42 INS9 INS22 INS33 INS21 INS54 INS42 INS52 INS42 INS52 INS42 INS32 INS8 INS8 INS32 INS42 INS21 INS60 INS21 INS21 INS21 INS21 INS32 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS52 INS42 INS22 INS42 INS42 INS42 INS11 INS42 INS42 INS40 INS52 INS42 INS42 INS45 INS52 INS42 INS32 INS42 INS45 INS42 INS52 INS42 INS43 INS32 INS32 INS42 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS40