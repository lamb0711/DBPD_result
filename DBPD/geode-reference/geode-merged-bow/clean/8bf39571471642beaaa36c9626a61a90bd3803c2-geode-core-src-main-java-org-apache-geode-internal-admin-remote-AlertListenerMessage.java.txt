Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
-   
+
+
-//import org.apache.geode.internal.*;
+// import org.apache.geode.internal.*;
- * A message that is sent to a particular console distribution manager
- * to notify it of an alert.
+ * A message that is sent to a particular console distribution manager to notify it of an alert.
-public final class AlertListenerMessage extends PooledDistributionMessage implements AdminMessageType {
-  //instance variables
+public final class AlertListenerMessage extends PooledDistributionMessage
+    implements AdminMessageType {
+  // instance variables
-  
-  public static AlertListenerMessage create(Object recipient,
-                                            int msgLevel,
-                                            Date msgDate,
-                                            String connectionName,
-                                            String threadName,
-                                            long tid,
-                                            String msg,
-                                            String exceptionText)
-  {
+
+  public static AlertListenerMessage create(Object recipient, int msgLevel, Date msgDate,
+      String connectionName, String threadName, long tid, String msg, String exceptionText) {
-    m.setRecipient((InternalDistributedMember)recipient);
+    m.setRecipient((InternalDistributedMember) recipient);
-  public void process(DistributionManager dm){
+  public void process(DistributionManager dm) {
-      if (mgr == null) return;
-      Alert alert = new RemoteAlert(mgr,
-                                    msgLevel,
-                                    msgDate,
-                                    connectionName,
-                                    threadName,
-                                    tid,
-                                    msg,
-                                    exceptionText,
-                                    getSender());
+      if (mgr == null)
+        return;
+      Alert alert = new RemoteAlert(mgr, msgLevel, msgDate, connectionName, threadName, tid, msg,
+          exceptionText, getSender());
-    }else{
+    } else {
-       * Its assumed that its a managing node and it has to emit any alerts
-       * emitted to it.
+       * Its assumed that its a managing node and it has to emit any alerts emitted to it.
-      AlertDetails alertDetail = new AlertDetails(msgLevel, msgDate,
-          connectionName, threadName, tid, msg, exceptionText, getSender());
+      AlertDetails alertDetail = new AlertDetails(msgLevel, msgDate, connectionName, threadName,
+          tid, msg, exceptionText, getSender());
-  
+
-  public void fromData(DataInput in) throws IOException,
-      ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    this.msgDate = (Date)DataSerializer.readObject(in);
+    this.msgDate = (Date) DataSerializer.readObject(in);
-    return "Alert \"" + this.msg + "\" level " +
-      AlertLevel.forSeverity(this.msgLevel);
+    return "Alert \"" + this.msg + "\" level " + AlertLevel.forSeverity(this.msgLevel);

UPD66 DEL66