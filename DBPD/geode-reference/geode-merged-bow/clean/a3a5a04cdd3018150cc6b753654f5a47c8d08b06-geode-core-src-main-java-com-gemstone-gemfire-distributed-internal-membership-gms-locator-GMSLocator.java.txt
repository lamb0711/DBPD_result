Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/test/java/com/gemstone/gemfire/cache30/DistributedMulticastRegionDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember.InternalDistributedMemberWrapper;
+  private final String securityUDPDHAlgo; 
+  public Map<InternalDistributedMemberWrapper, byte[]> registerMbrVsPK = new ConcurrentHashMap<>();
+   * @param securityUDPDHAlgo DF algorithm 
-                      boolean networkPartitionDetectionEnabled, LocatorStats stats) {
+                      boolean networkPartitionDetectionEnabled, LocatorStats stats, String securityUDPDHAlgo) {
+    this.securityUDPDHAlgo = securityUDPDHAlgo;
-  public boolean setMembershipManager(MembershipManager mgr) {
+  public synchronized boolean setMembershipManager(MembershipManager mgr) {
+      this.notifyAll();
-  private void findServices() {
+  private synchronized void findServices() {
-  }
+    if(services == null) {
+      try {
+        wait(2000);
+      } catch (InterruptedException e) {
+      }
+    }
+  }  
+      findServices();
-      
+      if(!findRequest.getDHAlgo().equals(securityUDPDHAlgo)) {
+        return new FindCoordinatorResponse("Rejecting findCoordinatorRequest, as member not configured same udp security(" + findRequest.getDHAlgo() + " )as locator (" + securityUDPDHAlgo + ")");
+      }
+      if(services != null) {
+        services.getMessenger().setPublicKey(findRequest.getMyPublicKey(), findRequest.getMemberID());
+      } else {
+        //GMSEncrypt.registerMember(findRequest.getMyPublicKey(), findRequest.getMemberID());
+        registerMbrVsPK.put(new InternalDistributedMemberWrapper(findRequest.getMemberID()), findRequest.getMyPublicKey());
+      }
+          byte[] coordPk = null; 
+          if(view != null) {
+            coordPk = (byte[])view.getPublicKey(coord);            
+          }
+          if (coordPk == null) {
+            if(services != null){
+              coordPk = services.getMessenger().getPublicKey(coord);
+            } else {
+              //coordPk = GMSEncrypt.getRegisteredPublicKey(coord);
+              coordPk = registerMbrVsPK.get(new InternalDistributedMemberWrapper(coord));
+            }
+          }
-              fromView, view, new HashSet<>(registrants),
-              this.networkPartitionDetectionEnabled, this.usePreferredCoordinators);
+              fromView, view, new HashSet<InternalDistributedMember>(registrants),
+              this.networkPartitionDetectionEnabled, this.usePreferredCoordinators, 
+              coordPk);
+  public byte[] getPublicKey(InternalDistributedMember mbr) {
+    return registerMbrVsPK.get(new InternalDistributedMemberWrapper(mbr));
+  }
+  
+    registerMbrVsPK.clear();

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS74 INS59 INS44 INS83 INS83 INS83 INS5 INS42 INS44 INS8 INS42 INS42 INS43 INS43 INS5 INS42 INS14 INS65 INS43 INS42 INS21 INS25 INS39 INS85 INS43 INS42 INS41 INS21 INS42 INS42 INS39 INS85 INS74 INS42 INS66 INS42 INS7 INS27 INS8 INS42 INS32 INS32 INS43 INS22 INS42 INS21 INS42 INS33 INS54 INS42 INS42 INS14 INS42 INS42 INS42 INS52 INS42 INS32 INS8 INS12 INS21 INS25 INS25 INS43 INS42 INS52 INS42 INS21 INS44 INS8 INS32 INS38 INS8 INS27 INS8 INS8 INS42 INS32 INS43 INS42 INS42 INS32 INS41 INS42 INS33 INS21 INS21 INS42 INS34 INS42 INS32 INS42 INS42 INS14 INS32 INS32 INS8 INS42 INS42 INS43 INS27 INS32 INS42 INS32 INS32 INS42 INS42 INS14 INS32 INS60 INS25 INS25 MOV21 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS5 INS59 INS27 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS33 INS42 INS33 INS21 INS42 INS33 INS25 INS7 INS27 INS8 INS8 INS42 INS42 INS11 INS42 INS33 INS21 INS21 UPD74 INS5 INS32 INS7 INS7 INS43 INS39 INS85 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS42 INS42 DEL8