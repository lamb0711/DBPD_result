GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-import static org.apache.geode.distributed.ConfigurationProperties.*;
-import static org.apache.geode.internal.i18n.LocalizedStrings.*;
-
-import java.security.Principal;
-import java.util.Properties;
+import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_PEER_AUTHENTICATOR;
+import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_PEER_AUTH_INIT;
+import static org.apache.geode.internal.i18n.LocalizedStrings.AUTH_PEER_AUTHENTICATION_FAILED;
+import static org.apache.geode.internal.i18n.LocalizedStrings.AUTH_PEER_AUTHENTICATION_FAILED_WITH_EXCEPTION;
+import static org.apache.geode.internal.i18n.LocalizedStrings.AUTH_PEER_AUTHENTICATION_MISSING_CREDENTIALS;
+import static org.apache.geode.internal.i18n.LocalizedStrings.HandShake_FAILED_TO_ACQUIRE_AUTHENTICATOR_OBJECT;
-
-import org.apache.geode.internal.security.IntegratedSecurityService;
+import org.apache.geode.internal.security.CallbackInstantiator;
+import java.security.Principal;
+import java.util.Properties;
+
-  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+    SecurityService securityService = this.services.getSecurityService();
+
-    // initialized here. We need to check
-    // if the passed in secProps has peer authenticator or not
+    // initialized here. We need to check if the passed in secProps has peer authenticator or not at
+    // this point
-    // at this point,
-      if (this.securityService.isIntegratedSecurity()) {
-        this.securityService.login(credentials);
-        this.securityService.authorizeClusterManage();
+      if (securityService.isIntegratedSecurity()) {
+        securityService.login(credentials);
+        securityService.authorizeClusterManage();
-      auth = SecurityService.getObjectOfType(authMethod,
+      auth = CallbackInstantiator.getObjectOfType(authMethod,
-      auth.init(this.securityProps, logWriter, securityLogWriter); // this.securityProps contains
-                                                                   // security-ldap-basedn but
-                                                                   // security-ldap-baseDomainName
-                                                                   // is expected
+
+      // this.securityProps contains security-ldap-basedn but security-ldap-baseDomainName is
+      // expected
+      auth.init(this.securityProps, logWriter, securityLogWriter);

MOV26 MOV26 INS26 INS26 INS26 INS26 INS40 UPD40 UPD40 INS40 INS40 INS40 UPD40 INS60 MOV43 INS59 INS42 INS32 INS22 INS42 INS52 INS42 INS42 UPD42 INS42 INS42 DEL83 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22