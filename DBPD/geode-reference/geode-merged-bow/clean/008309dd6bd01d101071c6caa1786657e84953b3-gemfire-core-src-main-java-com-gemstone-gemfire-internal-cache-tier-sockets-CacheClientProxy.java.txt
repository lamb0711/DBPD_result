Merge branch 'release/1.0.0-incubating.M1'

- * ========================================================================= 
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved. 
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- * =========================================================================
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-import com.gemstone.gemfire.internal.SocketCreator;
-import com.gemstone.gemfire.internal.cache.BridgeObserver;
-import com.gemstone.gemfire.internal.cache.BridgeObserverHolder;
+import com.gemstone.gemfire.internal.cache.ClientServerObserver;
+import com.gemstone.gemfire.internal.cache.ClientServerObserverHolder;
-import com.gemstone.org.jgroups.util.StringId;
+import com.gemstone.gemfire.i18n.StringId;
+  
+  private final AtomicBoolean _socketClosed = new AtomicBoolean();
-      this._commBuffer = ServerConnection.allocateCommBuffer(bufSize);
+      this._commBuffer = ServerConnection.allocateCommBuffer(bufSize, socket);
-        if (this._socket != null && !this._socket.isClosed()) {
-          SocketCreator.asyncClose(this._socket, this._remoteHostAddress, null);
-          getCacheClientNotifier().getAcceptorStats().decCurrentQueueConnections();
-        }
+        closeSocket();
-  private void closeTransientFields() {
-    // Close the socket
-    if (this._socket != null && !this._socket.isClosed()) {
-      try {
-        this._socket.close();
-        getCacheClientNotifier().getAcceptorStats().decCurrentQueueConnections();
-      } catch (IOException e) {/*ignore*/}
+  private void closeSocket() {
+    if (this._socketClosed.compareAndSet(false, true)) {
+      // Close the socket
+      this._cacheClientNotifier.getSocketCloser().asyncClose(this._socket, this._remoteHostAddress, null);
+      getCacheClientNotifier().getAcceptorStats().decCurrentQueueConnections();
+  }
+  
+  private void closeTransientFields() {
+    closeSocket();
-    this._commBuffer = null;
-    this._remoteHostAddress = null;
+    releaseCommBuffer();
+    {
+      String remoteHostAddress = this._remoteHostAddress;
+      if (remoteHostAddress != null) {
+        this._cacheClientNotifier.getSocketCloser().releaseResourcesForAddress(remoteHostAddress);
+        this._remoteHostAddress = null;
+      }
+    }
+  
+  private void releaseCommBuffer() {
+    ByteBuffer bb = this._commBuffer;
+    if (bb != null) {
+      this._commBuffer = null;
+      ServerConnection.releaseCommBuffer(bb);
+    }
+  }
-          BridgeObserver bo = BridgeObserverHolder.getInstance();
+          ClientServerObserver bo = ClientServerObserverHolder.getInstance();

UPD40 UPD40 UPD40 INS23 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 MOV39 INS42 INS8 INS83 INS39 MOV42 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS14 MOV25 INS21 INS21 INS8 MOV54 MOV21 INS60 INS25 INS43 INS32 INS32 INS32 INS60 INS25 INS43 INS59 INS27 INS8 INS42 MOV22 UPD42 MOV42 INS9 INS9 INS42 INS42 INS43 INS59 INS27 INS8 UPD42 MOV42 INS42 INS22 INS42 INS33 MOV21 INS21 UPD42 INS42 INS42 INS22 INS42 INS33 MOV21 MOV21 INS52 INS42 INS32 INS42 INS32 MOV52 UPD42 MOV42 INS42 INS42 INS42 INS22 UPD42 MOV42 MOV32 INS42 UPD42 INS21 INS52 INS42 INS22 UPD42 UPD43 INS32 INS52 INS42 UPD42 INS42 UPD42 DEL40 DEL26 DEL52 DEL42 DEL22 DEL33 DEL27 DEL32 DEL38 DEL27 DEL83 DEL52 DEL42 DEL22 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL32 DEL38 DEL27 DEL22 DEL42 DEL32 DEL21 DEL8 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL31