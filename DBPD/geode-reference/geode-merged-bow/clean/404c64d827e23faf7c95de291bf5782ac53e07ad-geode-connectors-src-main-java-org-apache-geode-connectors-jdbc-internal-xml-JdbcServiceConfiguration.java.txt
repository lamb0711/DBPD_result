GEODE-5861: change jdbc connector to use jndi binding (#2650)

The jdbc connector now uses the existing "jndi-binding" xml/gfsh instead of adding "jdbc-connection" xml/gfsh. All the old "jdbc-connection" commands have been removed.

The create jndi-binding command has been changed in the following ways:
* the driver-class-name gfsh parameter is now optional.
* --url can be used as a replacement for --connnection-url
* the --type now defaults to SIMPLE (it used to not have a default).
* the --type=POOLED now defaults to creating a Hikari pool and an SPI exists to customize the class 
that implements the pool.

New External APIS:
  DataSourceFactoryTest: this is the SPI users can implement for the POOLED type.

Co-authored-by: @BenjaminPerryRoss 
-import org.apache.geode.connectors.jdbc.internal.ConnectionConfigExistsException;
-  private final List<ConnectorService.Connection> connections = new ArrayList<>();
-  void addConnectionConfig(ConnectorService.Connection config) {
-    connections.add(config);
-  }
-
-    connections.forEach(connection -> createConnectionConfig(service, connection));
-  private void createConnectionConfig(JdbcConnectorService service,
-      ConnectorService.Connection connectionConfig) {
-    try {
-      service.createConnectionConfig(connectionConfig);
-    } catch (ConnectionConfigExistsException e) {
-      throw new InternalGemFireException(e);
-    }
-  }
-

DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL40 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL23 DEL39 DEL42 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL42 DEL59 DEL42 DEL42 DEL42 DEL32 DEL86 DEL32 DEL21 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31