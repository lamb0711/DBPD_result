GEODE-4858: use FastPathScanner to register all the bind classes when câ€¦ (#1838)

* do not register bind class on demand. Register all custom element at service start time.

-import java.util.HashMap;
-import java.util.Map;
+import java.util.Arrays;
-import java.util.Set;
+import org.apache.commons.lang.StringUtils;
-import org.apache.geode.cache.configuration.CacheConfig;
+import org.apache.geode.cache.configuration.XSDRootElement;
-  public static String CACHE_SCHEMA =
-      "http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd";
-  Map<Class, String> classAndSchema = new HashMap<>();
-
-  // the default service will handle the cache.xsd validation and set's the cache schema location
-  public JAXBService() {
-    registerBindClassWithSchema(CacheConfig.class, CACHE_SCHEMA);
-    // find the local Cache-1.0.xsd
-    URL local_cache_xsd = ClassPathLoader.getLatest()
-        .getResource("META-INF/schemas/geode.apache.org/schema/cache/cache-1.0.xsd");
-    validateWith(local_cache_xsd);
+  public JAXBService(Class<?>... xsdRootClasses) {
+    try {
+      JAXBContext jaxbContext = JAXBContext.newInstance(xsdRootClasses);
+      marshaller = jaxbContext.createMarshaller();
+      unmarshaller = jaxbContext.createUnmarshaller();
+      marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
+
+      String schemas = Arrays.stream(xsdRootClasses).map(c -> {
+        XSDRootElement element = c.getAnnotation(XSDRootElement.class);
+        if (element != null && StringUtils.isNotEmpty(element.namespace())
+            && StringUtils.isNotEmpty(element.schemaLocation())) {
+          return (element.namespace() + " " + element.schemaLocation());
+        }
+        return null;
+      }).filter(Objects::nonNull).collect(Collectors.joining(" "));
+
+      marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION, schemas);
+    } catch (Exception e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
-  /**
-   * if you want the output xml have schemaLocation correctly set for your namespace, use this
-   * instead of registerBindClass(Class)
-   *
-   * @param c e.g CacheConfig.class
-   * @param nameSpaceAndSchemaLocation e.g "http://geode.apache.org/schema/cache
-   *        http://geode.apache.org/schema/cache/cache-1.0.xsd"
-   */
-  public void registerBindClassWithSchema(Class c, String nameSpaceAndSchemaLocation) {
-    // if this class is not in the map yet
-    if (!classAndSchema.keySet().contains(c)) {
-      classAndSchema.put(c, nameSpaceAndSchemaLocation);
-      try {
-        Set<Class> bindClasses = classAndSchema.keySet();
-        JAXBContext jaxbContext =
-            JAXBContext.newInstance(bindClasses.toArray(new Class[bindClasses.size()]));
-        marshaller = jaxbContext.createMarshaller();
-        unmarshaller = jaxbContext.createUnmarshaller();
-        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
-        updateSchema();
-      } catch (Exception e) {
-        throw new RuntimeException(e.getMessage(), e);
-      }
-      return;
-    }
-
-    // if this class is in the map already and we are simply adding/updating schema
-    String oldSchema = classAndSchema.get(c);
-    if (nameSpaceAndSchemaLocation == null) {
-      return;
-    }
-
-    if (!nameSpaceAndSchemaLocation.equals(oldSchema)) {
-      classAndSchema.put(c, nameSpaceAndSchemaLocation);
-      updateSchema();
-    }
-  }
-
-  void updateSchema() {
-    try {
-      String schemas = classAndSchema.values().stream().filter(Objects::nonNull)
-          .collect(Collectors.joining(" "));
-      marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION, schemas);
-    } catch (Exception e) {
-      throw new RuntimeException(e.getMessage(), e);
-    }
+  public void validateWithLocalCacheXSD() {
+    // find the local Cache-1.0.xsd
+    URL local_cache_xsd = ClassPathLoader.getLatest()
+        .getResource("META-INF/schemas/geode.apache.org/schema/cache/cache-1.0.xsd");
+    validateWith(local_cache_xsd);
-
-  public void registerBindClasses(Class clazz) {
-    registerBindClassWithSchema(clazz, null);
-  }

MOV26 MOV31 UPD40 UPD40 UPD40 INS31 INS83 INS42 MOV44 INS8 INS39 UPD42 INS74 UPD42 INS54 MOV43 INS76 INS8 MOV12 INS60 MOV21 MOV21 MOV21 INS60 MOV21 MOV43 INS59 MOV43 INS59 MOV42 INS32 INS42 INS32 MOV42 MOV42 UPD42 MOV42 INS32 INS42 MOV32 INS32 INS42 MOV90 INS32 UPD42 MOV42 INS86 UPD42 MOV42 INS42 UPD42 MOV42 INS59 INS8 INS42 MOV60 INS25 INS41 UPD43 INS27 INS8 INS33 UPD42 UPD42 INS27 INS32 INS41 UPD42 UPD42 INS57 INS27 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS36 INS43 UPD42 MOV42 MOV33 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS27 INS42 UPD42 MOV42 UPD42 MOV42 INS32 INS45 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL23 DEL42 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL21 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL32 DEL3 DEL32 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL8 DEL54 DEL41 DEL8 DEL25 DEL27 DEL41 DEL8 DEL25 DEL32 DEL38 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL39 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL33 DEL32 DEL21 DEL8 DEL31