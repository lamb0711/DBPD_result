GEODE-3967: fix the offheap memory leak in serial gateway sender's unprocessedEvents.

When ConcurrentCacheModificationException happened, GatewaySenderEventImpl
should save the status and notify gatewaysender if it hold primary queue,
because other member might have put the event into the secondary queue

Let event with CME only enqueue to primary, but not to dispatch. The old
logic does not allow CME event to  enqueue. This is wrong, because an event
without CME might have been added into the secondary queue.

We should not dispatch the CME event, otherwise it will cause remote site
data inconsistency since these CME events are misordered.

So we should enqueue it, but not to dispatch.

Also add rollingUpgradeTests

+import org.apache.geode.internal.VersionedDataSerializable;
+import org.apache.geode.internal.cache.tier.sockets.Message;
-    implements AsyncEvent, DataSerializableFixedID, Conflatable, Sizeable, Releasable {
+    implements AsyncEvent, DataSerializableFixedID, Conflatable, Sizeable, Releasable,
+    VersionedDataSerializable {
-  protected static final short VERSION = 0x11;
+  // It should use current version. But it was hard-coded to be 0x11, i.e. GEODE_120_ORDINAL,
+  // by mistake since 120 to pre-190
+  protected static final short VERSION = Version.GEODE_190.ordinal();
-   * @see org.apache.geode.internal.cache.tier.sockets.Message
+   * @see Message
+  private transient boolean isConcurrencyConflict = false;
+
+  private short version;
+
+    this.isConcurrencyConflict = event.isConcurrencyConflict();
+  @Override
+    toDataPre_GEODE_1_9_0_0(out);
+    DataSerializer.writeBoolean(this.isConcurrencyConflict, out);
+  }
+
+  public void toDataPre_GEODE_1_9_0_0(DataOutput out) throws IOException {
+  @Override
-    short version = in.readShort();
-    if (version != VERSION) {
-      // warning?`
+    fromDataPre_GEODE_1_9_0_0(in);
+    if (version >= Version.GEODE_190.ordinal()) {
+      this.isConcurrencyConflict = DataSerializer.readBoolean(in);
+  }
+
+  public void fromDataPre_GEODE_1_9_0_0(DataInput in) throws IOException, ClassNotFoundException {
+    version = in.readShort();
-        .append(";bucketId=").append(this.bucketId).append("]");
+        .append(";bucketId=").append(this.bucketId).append(";isConcurrencyConflict=")
+        .append(this.isConcurrencyConflict).append("]");
+  public boolean isConcurrencyConflict() {
+    return isConcurrencyConflict;
+  }
+
-    return null;
+    return new Version[] {Version.GEODE_190};

INS26 INS26 INS40 INS40 INS43 INS23 INS23 INS31 INS31 INS31 INS42 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS78 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 UPD42 INS83 INS39 INS42 INS8 INS32 INS42 INS9 INS42 INS21 INS42 INS43 INS42 INS42 INS21 INS21 INS42 INS43 INS42 INS42 INS42 INS21 INS25 INS21 INS41 INS40 INS42 INS42 INS7 INS42 INS32 INS32 INS42 INS32 INS27 INS8 INS7 INS32 INS42 INS3 INS22 INS32 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS32 INS21 INS42 MOV32 INS32 INS42 INS45 INS5 INS4 INS52 INS42 INS42 INS42 INS52 INS42 INS40 INS42 INS7 MOV32 INS42 INS22 INS43 INS85 INS40 INS22 INS32 UPD45 INS52 INS42 INS42 INS52 INS42 INS42 INS42 INS42 DEL34 DEL40 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL27 DEL8 DEL25 DEL33