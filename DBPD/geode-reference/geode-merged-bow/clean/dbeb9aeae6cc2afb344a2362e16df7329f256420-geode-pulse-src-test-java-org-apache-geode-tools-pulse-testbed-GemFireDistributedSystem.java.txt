Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * TODO
- * 0. SystemAlerts
- * 1. Operations like member-up/down/crash, region create/destroy [7.5 scope]
- * 2. Read events like member-up/down/crash, region create/destroy [7.5 scope]
- * 3. PropFile Writing
- * 4. Link to other remote systems, topology - multi-cluster [7.5] 
+ * TODO 0. SystemAlerts 1. Operations like member-up/down/crash, region create/destroy [7.5 scope]
+ * 2. Read events like member-up/down/crash, region create/destroy [7.5 scope] 3. PropFile Writing
+ * 4. Link to other remote systems, topology - multi-cluster [7.5]
-  
+
-  
-  
+
+
-  
-  public GemFireDistributedSystem(String name,Properties pr){
+
+  public GemFireDistributedSystem(String name, Properties pr) {
-  
-  public GemFireDistributedSystem(String name,String fileName) throws IOException{
+
+  public GemFireDistributedSystem(String name, String fileName) throws IOException {
-  
+
-    for(String serverName : serverStrings){
+    for (String serverName : serverStrings) {
-      server.init(propertiesFile,dsName,serverName);
+      server.init(propertiesFile, dsName, serverName);
-    }  
-    
+    }
+
-    for(String clientName : clientStrings){
+    for (String clientName : clientStrings) {
-      client.init(propertiesFile,dsName,clientName);
+      client.init(propertiesFile, dsName, clientName);
-    }  
-    
+    }
+
-    for(String locatorName : locatorStrings){
+    for (String locatorName : locatorStrings) {
-      locator.init(propertiesFile,dsName,locatorName);
+      locator.init(propertiesFile, dsName, locatorName);
-    
+
-    for(String peerName : peerStrings){
+    for (String peerName : peerStrings) {
-      peer.init(propertiesFile,dsName,peerName);
+      peer.init(propertiesFile, dsName, peerName);
-    
+
-    for(String hostName : hostsStrings){
+    for (String hostName : hostsStrings) {
-      host.init(propertiesFile,dsName,hostName);
+      host.init(propertiesFile, dsName, hostName);
-    
+
-    for(String regionName : regionsStrings){
+    for (String regionName : regionsStrings) {
-      region.init(propertiesFile,dsName,regionName);
+      region.init(propertiesFile, dsName, regionName);
-    
+
-    for(String functionName : functionStrings){
+    for (String functionName : functionStrings) {
-      function.init(propertiesFile,dsName,functionName);
+      function.init(propertiesFile, dsName, functionName);
-    }    
-    
+    }
+
-    for(String cqName : cqStrings){
+    for (String cqName : cqStrings) {
-      cq.init(propertiesFile,dsName,cqName);
+      cq.init(propertiesFile, dsName, cqName);
-    
+
-  
-  public List<Region> getRegions(String memberName) {    
+
+  public List<Region> getRegions(String memberName) {
-    for(Region r : regions){
-      if(r.getMembers().contains(memberName))
-          list.add(r);
+    for (Region r : regions) {
+      if (r.getMembers().contains(memberName))
+        list.add(r);
-   }
-  
+  }
+
-   return regions;
+    return regions;
-  
+
-  
+
-  
-  public List<Server> getServers(){
-    return servers;    
+
+  public List<Server> getServers() {
+    return servers;
-  
-  public List<Client> getClients(){
+
+  public List<Client> getClients() {
-  
-  public List<Peer> getPeers(){
-    return peers;    
+
+  public List<Peer> getPeers() {
+    return peers;
-  
-  public List<Locator> getLocators(){
-    return locators;    
+
+  public List<Locator> getLocators() {
+    return locators;
-  
-  public List<Host> getPhysicalHosts(){
-    return hosts;    
+
+  public List<Host> getPhysicalHosts() {
+    return hosts;
-  
-  public static class Base{
-    protected Map<String,String> properties=null;
+
+  public static class Base {
+    protected Map<String, String> properties = null;
-    
+
-      this.name = name;      
+      this.name = name;
-      Map<String,String> map = propertiesFile.readObject(leadingkey);
-      map.put("name",name);
+      Map<String, String> map = propertiesFile.readObject(leadingkey);
+      map.put("name", name);
-    
-    public String getName(){
+
+    public String getName() {
-    
+
-    
+
-      try{
+      try {
-      }catch(Exception e){
+      } catch (Exception e) {
-    
+
-      String values= properties.get(string);
+      String values = properties.get(string);
-      for(String s:array)
+      for (String s : array)
-    
+
-  
-  public static class Host extends Base{
-    
+
+  public static class Host extends Base {
+
-  
-  public static class Server extends Base{
-    public String toString(){
+
+  public static class Server extends Base {
+    public String toString() {
-    
-    public String getHost(){
-      return properties.get("host");
-    }
-  }
-  
-  public static class Client extends Base{
-    public String toString(){
-      return properties.get("name") ;//+ "[on host=" + properties.get("host");
-    }
-    
-    public String getHost(){
-      return properties.get("host");
-    }
-  }
-  
-  public static class Locator extends Base{
-    public String getHost(){
-      return properties.get("host");
-    }
-  }
-  
-  public static class Peer extends Base{
-    public String getHost(){
+    public String getHost() {
-  
-  public static class Region extends Base{
-    public String toString(){
+
+  public static class Client extends Base {
+    public String toString() {
+      return properties.get("name");// + "[on host=" + properties.get("host");
+    }
+
+    public String getHost() {
+      return properties.get("host");
+    }
+  }
+
+  public static class Locator extends Base {
+    public String getHost() {
+      return properties.get("host");
+    }
+  }
+
+  public static class Peer extends Base {
+
+    public String getHost() {
+      return properties.get("host");
+    }
+  }
+
+  public static class Region extends Base {
+    public String toString() {
-    
-    public String getType(){
+
+    public String getType() {
-    
-    public int getEntryCount(){
+
+    public int getEntryCount() {
-    
-    public List<String> getWanSenders(){
+
+    public List<String> getWanSenders() {
-    
-    public List<String> getMembers(){
+
+    public List<String> getMembers() {
-    
-  }
-  
-  public static class WanSender extends Base{
-    
+
-  public static class Function extends Base{
-    public String getMemberId(){
-      return key("memberId");
-    }    
+  public static class WanSender extends Base {
+
-  
-  public static class CQ extends Base{
-    public String getQuery(){
+
+  public static class Function extends Base {
+    public String getMemberId() {
+      return key("memberId");
+    }
+  }
+
+  public static class CQ extends Base {
+    public String getQuery() {
-    }    
-    
-    public String getClient(){
+    }
+
+    public String getClient() {
-  
-  public static class SystemAlert extends Base{
-    //TODO
+
+  public static class SystemAlert extends Base {
+    // TODO
-  
+
-    
+
-    System.out.println("Servers = " + ds.getServers());    
+    System.out.println("Servers = " + ds.getServers());
-  } 
-  
+  }
+

UPD66 UPD66 UPD66 DEL66 DEL66 DEL66