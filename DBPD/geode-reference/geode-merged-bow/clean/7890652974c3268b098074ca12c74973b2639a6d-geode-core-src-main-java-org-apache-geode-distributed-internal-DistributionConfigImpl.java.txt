GEODE-5338: Geode client to support Trust and Keystore rotation (#2244)

A new SSL property 'ssl-use-default-context' is added to let Geode use
default SSL context. When set to true Geode uses default SSL context as
returned by SSLContext.getInstance('Default') or uses the context as set
by using SSLContext.setDefault().

Hostname validation is enabled when using default context
-  private boolean sslEndpointIdentificationEnabled = DEFAULT_SSL_ENDPOINT_IDENTIFICATION_ENABLED;
+  private Boolean sslEndPointIdentificationEnabled = null;
+  private boolean sslUseDefaultSSLContext = DEFAULT_SSL_USE_DEFAULT_CONTEXT;
-    this.sslEndpointIdentificationEnabled = other.getSSLEndpointIdentificationEnabled();
+    this.sslEndPointIdentificationEnabled = other.getSSLEndPointIdentificationEnabled();
+    this.sslUseDefaultSSLContext = other.getSSLUseDefaultContext();
-  public boolean getSSLEndpointIdentificationEnabled() {
-    return sslEndpointIdentificationEnabled;
+  public boolean getSSLEndPointIdentificationEnabled() {
+    // sslEndPointIdentificationEnabled is a boxed boolean and no default value is set, so that
+    // we can differentiate between an assigned default vs user provided override. This is set
+    // to true when ssl-use-default-context is true or else its false. So return false if its null.
+    if (this.sslEndPointIdentificationEnabled == null) {
+      return false;
+    }
+    return sslEndPointIdentificationEnabled;
-  public void setSSLEndpointIdentificationEnabled(final boolean sslEnabledIdentification) {
-    this.sslEndpointIdentificationEnabled = sslEnabledIdentification;
+  public void setSSLEndPointIdentificationEnabled(final boolean sslEndPointIdentificationEnabled) {
+    this.sslEndPointIdentificationEnabled = sslEndPointIdentificationEnabled;
+  public boolean getSSLUseDefaultContext() {
+    return sslUseDefaultSSLContext;
+  }
+
+  @Override
+  public void setSSLUseDefaultContext(final boolean sslUseDefaultSSLContext) {
+    if (this.sslEndPointIdentificationEnabled == null) {
+      this.sslEndPointIdentificationEnabled = Boolean.TRUE;
+    }
+    this.sslUseDefaultSSLContext = sslUseDefaultSSLContext;
+  }
+
+  @Override

MOV23 INS23 INS31 INS31 INS83 INS43 INS59 MOV78 UPD42 MOV78 UPD42 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS33 UPD42 UPD42 INS21 INS25 UPD42 INS42 INS41 INS42 INS83 INS39 INS42 INS25 INS21 INS7 INS27 INS8 UPD42 INS42 INS27 INS8 INS7 INS22 INS32 INS22 INS33 INS41 UPD42 INS22 INS33 INS21 INS22 INS42 UPD42 UPD42 INS52 INS42 INS42 INS42 INS52 INS42 INS9 UPD42 INS52 INS42 INS7 INS52 INS42 INS22 INS40 INS52 INS42