Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A request send from an admin VM to all of the peers to indicate
- * that that should complete the backup operation.
+ * A request send from an admin VM to all of the peers to indicate that that should complete the
+ * backup operation.
-public class FinishBackupRequest  extends CliLegacyMessage {
+public class FinishBackupRequest extends CliLegacyMessage {
-  
+
-  
+
-  public FinishBackupRequest(File targetDir,File baselineDir, boolean abort) {
+  public FinishBackupRequest(File targetDir, File baselineDir, boolean abort) {
-  
-  public static Map<DistributedMember, Set<PersistentID>> send(DM dm, Set recipients, File targetDir, File baselineDir, boolean abort) {
-    FinishBackupRequest request = new FinishBackupRequest(targetDir,baselineDir, abort);
+
+  public static Map<DistributedMember, Set<PersistentID>> send(DM dm, Set recipients,
+      File targetDir, File baselineDir, boolean abort) {
+    FinishBackupRequest request = new FinishBackupRequest(targetDir, baselineDir, abort);
-      if(!(e.getCause() instanceof CancelException)) {
+      if (!(e.getCause() instanceof CancelException)) {
-    AdminResponse response = request.createResponse((DistributionManager)dm);
+    AdminResponse response = request.createResponse((DistributionManager) dm);
-  
+
-    if(cache == null || cache.getBackupManager() == null) {
+    if (cache == null || cache.getBackupManager() == null) {
-        logger.error(LocalizedMessage.create(LocalizedStrings.CliLegacyMessage_ERROR, this.getClass()), e);
+        logger.error(
+            LocalizedMessage.create(LocalizedStrings.CliLegacyMessage_ERROR, this.getClass()), e);
-    
+
-  
+
-    Map<DistributedMember, Set<PersistentID>> results = Collections.synchronizedMap(new HashMap<DistributedMember, Set<PersistentID>>());
+    Map<DistributedMember, Set<PersistentID>> results =
+        Collections.synchronizedMap(new HashMap<DistributedMember, Set<PersistentID>>());
+
-    
+
-    
-    
+
+
-      //Disable the 15 second warning if the backup is taking a long time
+      // Disable the 15 second warning if the backup is taking a long time
-      //Don't log severe alerts for backups either
+      // Don't log severe alerts for backups either
-      if(msg instanceof FinishBackupResponse) {
+      if (msg instanceof FinishBackupResponse) {
-        if(persistentIds != null && !persistentIds.isEmpty()) {
+        if (persistentIds != null && !persistentIds.isEmpty()) {
-    
-    
+
+

UPD66 UPD66