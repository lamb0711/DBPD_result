GEODE-3940: fix deadlock in backup messages

When backup sends FlushToDisk, PrepareBackup, and FinishBackup,
it will no longer wait for all other members to respond before
doing the same work on its own member.
In addition to preventing a distributed deadlock, this will
also improve how long it takes for a backup to complete.
As part of this work the backup classes and tests have been
moved into their own backup package.

-package org.apache.geode.admin.internal;
+package org.apache.geode.internal.cache.backup;
+import java.util.Set;
- * The response to the {@link PrepareBackupRequest}
- *
- *
+ * The response to a {@link PrepareBackupRequest} or {@link FinishBackupRequest}.
-public class PrepareBackupResponse extends AdminResponse {
+public class BackupResponse extends AdminResponse {
-  public PrepareBackupResponse() {
+  public BackupResponse() {
-  public PrepareBackupResponse(InternalDistributedMember sender,
-      HashSet<PersistentID> persistentIds) {
-    this.setRecipient(sender);
+  public BackupResponse(InternalDistributedMember sender, HashSet<PersistentID> persistentIds) {
+    setRecipient(sender);
-  public HashSet<PersistentID> getPersistentIds() {
+  public Set<PersistentID> getPersistentIds() {
-
-
-
-
-  protected Object clone() throws CloneNotSupportedException {
-    // TODO Auto-generated method stub
-    return super.clone();
-  }
-
-    return PREPARE_BACKUP_RESPONSE;
+    return BACKUP_RESPONSE;

INS26 UPD40 INS40 UPD42 UPD42 UPD42 UPD74 MOV78 UPD66 INS66 INS65 INS66 UPD43 INS42 UPD42 UPD42 DEL52 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL48 DEL41 DEL8 DEL31