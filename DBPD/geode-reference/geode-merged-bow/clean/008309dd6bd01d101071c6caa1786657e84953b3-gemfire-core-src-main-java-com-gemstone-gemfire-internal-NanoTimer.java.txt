Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.  
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+  private final TimeService timeService;
+  
+  private final static TimeService systemTimeService = new TimeService() {
+    @Override
+    public long getTime() {
+      return java.lang.System.nanoTime();
+    }
+  };
+  
-    this.lastResetTime = getTime();
+    this.timeService = systemTimeService;
+    this.lastResetTime = systemTimeService.getTime();
+    this.constructionTime = this.lastResetTime;
+  }
+  
+  /**
+   * For unit testing
+   */
+  NanoTimer(TimeService ts) {
+    this.timeService = ts;
+    this.lastResetTime = ts.getTime();
-    this.lastResetTime = getTime();
+    this.lastResetTime = this.timeService.getTime();
-    return getTime() - this.lastResetTime;
+    return this.timeService.getTime() - this.lastResetTime;
-    return getTime() - this.constructionTime;
+    return this.timeService.getTime() - this.constructionTime;
+  }
+  
+  /**
+   * Allows unit tests to insert a deterministic clock for testing.
+   */
+  interface TimeService {
+    /**
+     * Returns the current time.
+     */
+    public long getTime();

INS23 INS23 INS31 INS55 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS29 INS42 INS44 INS8 INS29 INS42 INS31 INS42 INS42 INS42 INS42 INS14 INS21 INS65 INS43 INS42 INS21 MOV21 INS21 INS21 INS65 INS29 INS83 INS39 INS42 INS43 INS1 INS7 INS66 INS42 INS7 INS7 INS7 INS66 INS65 INS42 INS31 INS22 INS42 INS22 INS42 INS22 INS22 INS22 INS32 INS66 INS78 INS83 INS39 INS42 INS8 INS52 INS42 INS42 INS52 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS42 INS22 INS22 INS42 INS41 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS40 INS42