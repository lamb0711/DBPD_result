Merge branch 'release/1.5.0'

+import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.DistributionManager;
-      // PlainConfigurator config = PlainConfigurator.getInstance(is);
-      // properties = config.getProtocolStackString();
-
-      // if (this.jgAddress == null) {
-      // String addr = udp.getLocalPhysicalAddress();
-      // int cidx = addr.lastIndexOf(':'); // IPv6 literals might have colons
-      // String host = addr.substring(0, cidx);
-      // int jgport = Integer.parseInt(addr.substring(cidx+1, addr.length()));
-      // try {
-      // this.jgAddress = new JGAddress(logicalAddress, new IpAddress(InetAddress.getByName(host),
-      // jgport));
-      // } catch (UnknownHostException e) {
-      // myChannel.disconnect();
-      // throw new SystemConnectException("unable to initialize jgroups address", e);
-      // }
-      // }
-    boolean isLocator =
-        (services.getConfig().getTransport().getVmKind() == DistributionManager.LOCATOR_DM_TYPE)
-            || !services.getConfig().getDistributionConfig().getStartLocator().isEmpty();
+    boolean isLocator = (services.getConfig().getTransport()
+        .getVmKind() == ClusterDistributionManager.LOCATOR_DM_TYPE)
+        || !services.getConfig().getDistributionConfig().getStartLocator().isEmpty();
-        // services.getManager().membershipFailure(channelClosed, problem);
-          // services.getManager().membershipFailure(channelClosed, problem);
-    if (gfmsg.getProcessorType() == DistributionManager.HIGH_PRIORITY_EXECUTOR
+    if (gfmsg.getProcessorType() == ClusterDistributionManager.HIGH_PRIORITY_EXECUTOR
-      // logger.info("JGroupsMessenger read ordinal {} version is {}. My version is {}",
-      // ordinal, Version.fromOrdinalOrCurrent(ordinal), Version.CURRENT);
-
-        // encrypt.setPublicKey(publickey, mbr);
-            .getVmKind() == DistributionManager.ADMIN_ONLY_DM_TYPE)
+            .getVmKind() == ClusterDistributionManager.ADMIN_ONLY_DM_TYPE)

MOV26 UPD40 UPD40 UPD40 UPD40