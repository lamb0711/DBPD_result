GEODE-2137 client membership IDs contain 17 bytes of useless information

Reverting the removal of UUIDs from fully serialized member IDs.  There is
administration code that caches serialized events containing these IDs.
The cached form is transmitted between nodes without regard to versioning
so it is impossible to track the chain of custody and know how to properly
deserialize a 1.1.0 ID with this change.  Version support needs to be
extended to CachedDeserializable classes if we're going to make this sort
of change, so that they know how to properly deserialize an object of
a versioned class.

Removal of UUIDs is still in effect for the compact form of membership ID
used in version tags and elsewhere since this information is not held in
serialized form in cache regions.

-  /** additional membership data */
-  private static final int NETMBR_DATA_BIT = 0x10;
-
-  private static final Version[] dsfidVersions = new Version[] {Version.GFE_71};
+  private static final Version[] dsfidVersions = new Version[] {Version.GFE_71, Version.GFE_90};
+    toDataPre_GFE_9_0_0_0(out);
+    if (netMbr.getVersionOrdinal() >= Version.GFE_90.ordinal()) {
+      getNetMember().writeAdditionalData(out);
+    }
+  }
+
+
+  public void toDataPre_GFE_9_0_0_0(DataOutput out) throws IOException {
-    boolean writeNetMbrData = netMbr.hasAdditionalData();
-    if (writeNetMbrData) {
-      flags |= NETMBR_DATA_BIT;
-    }
+
+
-
-    Version streamVersion = InternalDataSerializer.getVersionForDataStream(out);
-
-    if (streamVersion.ordinal() >= Version.GFE_90.ordinal() && version >= Version.GFE_90.ordinal()
-        && writeNetMbrData) {
-      getNetMember().writeAdditionalData(out);
-    }
+    fromDataPre_GFE_9_0_0_0(in);
+    // just in case this is just a non-versioned read
+    // from a file we ought to check the version
+    if (getNetMember().getVersionOrdinal() >= Version.GFE_90.ordinal()) {
+      try {
+        netMbr.readAdditionalData(in);
+      } catch (EOFException e) {
+        // nope - it's from a pre-GEODE client or WAN site
+      }
+    }
+  }
+
+  public void fromDataPre_GFE_9_0_0_0(DataInput in) throws IOException, ClassNotFoundException {
-
-    // just in case this is just a non-versioned read
-    // from a file we ought to check the version
-    Version streamVersion = InternalDataSerializer.getVersionForDataStream(in);
-
-    if (streamVersion.ordinal() >= Version.GFE_90.ordinal() && version >= Version.GFE_90.ordinal()
-        && (flags & NETMBR_DATA_BIT) == NETMBR_DATA_BIT) {
-      netMbr.readAdditionalData(in);
-    }

INS31 INS31 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 INS83 INS39 INS42 INS44 INS43 INS43 INS8 UPD42 INS43 INS42 INS42 INS21 MOV25 INS43 INS42 INS42 INS42 INS21 INS25 INS42 INS32 MOV27 INS42 INS32 MOV27 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS54 UPD42 UPD42 INS32 INS42 MOV8 INS12 INS42 INS44 INS8 INS43 INS42 INS42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL27 DEL42 DEL27 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL40 DEL42 DEL32 DEL27 DEL42 DEL40 DEL42 DEL32 DEL27 DEL27 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL27 DEL25