GEODE-1391 JsonFormatter javadocs need to be cleaned up

I've made another pass at JSONFormatter javadocs, putting the JSON <-> Java
types in a table and correcting a few grammatical errors.  I also found that
the class was being referred to as PdxFormatter in a lot of places and that
its test was also using this name instead of JSONFormatter.

- * PdxFormatter class has static method {@link JSONFormatter#fromJSON(String)} to convert JSON 
- * document into a {@link PdxInstance} and static method {@link JSONFormatter#toJSON(PdxInstance)} 
- * to convert back {@link PdxInstance} into a JSON Document.
- * 
- * Using this, application can put PdxInstance(a converted JSON document) in a geode cache. 
- * Application can define indexes on PdxInstance and then query those using OQL. Query will 
- * return the PdxInstances as a result, that needs to convert back into JSON document. 
- * 
- * This uses Jackson parser to parse the json document. Parser treats values in json document as 
- * number(byte, short, int, long..), string, array, object, 'true', 'false' or 'null'. Which
- * further treated as following java types in PdxInstance
- * 
- * JSON object is converted into {@link PdxInstance}
- * JSON arrays is converted into {@link java.util.LinkedList}
- * JSON BigDecimal is converted into {@link BigDecimal}
- * JSON BigInterger is converted into {@link BigInteger}
- * JSON Double is converted into java primitive double
- * JSON float is converted into java primitive float 
- * JSON boolean is converted into java primitive boolean
- * JSON Integer is converted based on its range to java byte, short or int.
- * JSON null is converted java null object.
+ * <p>
+ * JSONFormatter has a static method {@link JSONFormatter#fromJSON(String)} to convert a JSON
+ * document into a {@link PdxInstance} and a static method {@link JSONFormatter#toJSON(PdxInstance)}
+ * to convert a {@link PdxInstance} into a JSON Document.
+ * </p>
+ * <p>
+ * Using these methods an applications may convert a JSON document into a PdxInstance for storing in the cache.
+ * Indexes can then be defined on the PdxInstances so that queries can be performed using OQL. Queries will
+ * return PdxInstances and these can be turned back back into JSON documents using JSONFormatter.
+ * </p>
+ * <p>
+ * JSONFormatter treats values in a json document as
+ * number(byte, short, int, long..), string, array, object, 'true', 'false' or 'null'. These correspond
+ * to the following java types:
+ * </p>
+ *
+ * <table>
+ *   <th>JSON</th><th>Java</th>
+ * <tr> <td>object</td>      <td>{@link PdxInstance}</td> </tr>
+ * <tr> <td>arrays</td>      <td>{@link java.util.LinkedList}</td> </tr>
+ * <tr> <td>BigDecimal</td>  <td>{@link BigDecimal}</td> </tr>
+ * <tr> <td>BigInterger</td> <td>{@link BigInteger}</td> </tr>
+ * <tr> <td>Double</td>      <td>double</td> </tr>
+ * <tr> <td>float</td>       <td>float</td> </tr>
+ * <tr> <td>boolean</td>     <td>boolean</td> </tr>
+ * <tr> <td>Integer</td>     <td>byte, short or int</td> </tr>
+ * <tr> <td>null</td>        <td>null</td> </tr>
+ * </table>
-   * To create PdxInstance from JSON string
+   * Converts a JSON document into a PdxInstance
-   * @throws JSONFormatterException if unable to parse JSON doucment
+   * @throws JSONFormatterException if unable to parse the JSON document
-   * To create PdxInstance from JSON string
+   * Converts a JSON document into a PdxInstance
-   * @throws JSONFormatterException if unable to parse JSON doucment
+   * @throws JSONFormatterException if unable to parse the JSON document
-   *To create JSON string from PdxInstance
+   * Converts a PdxInstance into a JSON document
-   * @throws JSONFormatterException if unable to create JSON doucment from PdxInstance
+   * @throws JSONFormatterException if unable to create the JSON document
-      throw new JSONFormatterException("Could not create JSON document from PdxInstance ", e);
+      throw new JSONFormatterException("Could not create JSON document from PdxInstance", e);
-   *To create JSON byte array from PdxInstance
+   * Converts a PdxInstance into a JSON document in byte-array form
-   * @throws JSONFormatterException if unable to create JSON doucment from PdxInstance
+   * @throws JSONFormatterException if unable to create the JSON document
-      throw new JSONFormatterException("Could not create JSON document from PdxInstance ", e);
+      throw new JSONFormatterException("Could not create JSON document from PdxInstance", e);

INS66 UPD66 UPD66 UPD66 UPD66 INS66 INS66 UPD66 UPD66 UPD66 INS66 INS66 UPD66 UPD66 UPD66 INS66 INS66 INS66 UPD66 INS66 UPD66 INS66 UPD66 INS66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD45 UPD45 DEL66