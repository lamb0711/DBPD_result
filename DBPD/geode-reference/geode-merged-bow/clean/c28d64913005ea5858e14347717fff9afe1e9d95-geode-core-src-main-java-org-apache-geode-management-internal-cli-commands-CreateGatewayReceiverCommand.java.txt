Merge branch 'release/1.4.0'

-import java.util.concurrent.atomic.AtomicReference;
-import org.apache.geode.cache.execute.ResultCollector;
+import org.apache.geode.cache.wan.GatewayReceiver;
-import org.apache.geode.management.internal.cli.CliUtil;
-import org.apache.geode.management.internal.cli.LogWrapper;
+import org.apache.geode.management.internal.cli.AbstractCliAroundInterceptor;
+import org.apache.geode.management.internal.cli.GfshParseResult;
+import org.apache.geode.management.internal.cli.result.CommandResult;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
-  @CliMetaData(relatedTopic = CliStrings.TOPIC_GEODE_WAN)
+  @CliMetaData(relatedTopic = CliStrings.TOPIC_GEODE_WAN,
+      interceptor = "org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand$Interceptor")
-    Result result;
+    GatewayReceiverFunctionArgs gatewayReceiverFunctionArgs =
+        new GatewayReceiverFunctionArgs(manualStart, startPort, endPort, bindAddress,
+            socketBufferSize, maximumTimeBetweenPings, gatewayTransportFilters, hostnameForSenders);
-    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
-    try {
-      GatewayReceiverFunctionArgs gatewayReceiverFunctionArgs = new GatewayReceiverFunctionArgs(
-          manualStart, startPort, endPort, bindAddress, socketBufferSize, maximumTimeBetweenPings,
-          gatewayTransportFilters, hostnameForSenders);
+    Set<DistributedMember> membersToCreateGatewayReceiverOn = getMembers(onGroups, onMember);
-      Set<DistributedMember> membersToCreateGatewayReceiverOn =
-          CliUtil.findMembers(onGroups, onMember);
+    List<CliFunctionResult> gatewayReceiverCreateResults =
+        executeAndGetFunctionResult(GatewayReceiverCreateFunction.INSTANCE,
+            gatewayReceiverFunctionArgs, membersToCreateGatewayReceiverOn);
-      if (membersToCreateGatewayReceiverOn.isEmpty()) {
-        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-      }
-
-      ResultCollector<?, ?> resultCollector =
-          CliUtil.executeFunction(GatewayReceiverCreateFunction.INSTANCE,
-              gatewayReceiverFunctionArgs, membersToCreateGatewayReceiverOn);
-      @SuppressWarnings("unchecked")
-      List<CliFunctionResult> gatewayReceiverCreateResults =
-          (List<CliFunctionResult>) resultCollector.getResult();
-
-      TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
-      final String errorPrefix = "ERROR: ";
-
-      for (CliFunctionResult gatewayReceiverCreateResult : gatewayReceiverCreateResults) {
-        boolean success = gatewayReceiverCreateResult.isSuccessful();
-        tabularResultData.accumulate("Member", gatewayReceiverCreateResult.getMemberIdOrName());
-        tabularResultData.accumulate("Status",
-            (success ? "" : errorPrefix) + gatewayReceiverCreateResult.getMessage());
-
-        if (success && xmlEntity.get() == null) {
-          xmlEntity.set(gatewayReceiverCreateResult.getXmlEntity());
-        }
-      }
-      result = ResultBuilder.buildResult(tabularResultData);
-    } catch (IllegalArgumentException e) {
-      LogWrapper.getInstance().info(e.getMessage());
-      result = ResultBuilder.createUserErrorResult(e.getMessage());
+    CommandResult result = ResultBuilder.buildResult(gatewayReceiverCreateResults);
+    XmlEntity xmlEntity = findXmlEntity(gatewayReceiverCreateResults);
+    // no xml needs to be updated, simply return
+    if (xmlEntity == null) {
+      return result;
-    if (xmlEntity.get() != null) {
-      persistClusterConfiguration(result,
-          () -> getSharedConfiguration().addXmlEntity(xmlEntity.get(), onGroups));
+    // has xml but unable to persist to cluster config, need to print warning message and return
+    if (onMember != null || getSharedConfiguration() == null) {
+      result.setCommandPersisted(false);
+      return result;
+
+    // update cluster config
+    getSharedConfiguration().addXmlEntity(xmlEntity, onGroups);
+
+  public static class Interceptor extends AbstractCliAroundInterceptor {
+    @Override
+    public Result preExecution(GfshParseResult parseResult) {
+      Integer startPort = (Integer) parseResult.getParamValue("start-port");
+      Integer endPort = (Integer) parseResult.getParamValue("end-port");
+
+      if (startPort == null) {
+        startPort = GatewayReceiver.DEFAULT_START_PORT;
+      }
+
+      if (endPort == null) {
+        endPort = GatewayReceiver.DEFAULT_END_PORT;
+      }
+
+      if (startPort > endPort) {
+        return ResultBuilder.createUserErrorResult("start-port must be smaller than end-port.");
+      }
+
+      return ResultBuilder.createInfoResult("");
+    }
+  }

MOV26 UPD40 UPD40 UPD40 UPD40 INS55 INS83 INS83 INS42 INS43 INS31 INS80 MOV60 MOV60 MOV60 MOV60 MOV60 MOV25 INS25 MOV21 INS42 INS78 INS83 MOV43 INS42 INS44 INS8 INS42 INS45 MOV74 INS43 MOV43 INS27 INS27 INS8 INS32 INS42 INS43 INS42 INS60 INS60 INS25 INS25 INS25 INS41 UPD42 UPD42 MOV42 UPD42 INS32 UPD42 INS42 MOV33 INS41 INS27 INS27 MOV21 INS41 MOV32 MOV42 MOV42 MOV42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS27 INS8 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS33 INS32 INS33 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS42 INS41 INS42 INS42 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS9 INS43 INS32 INS43 INS32 INS7 INS7 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS40 INS42 INS40 INS42 INS42 INS45 DEL40 DEL26 DEL42 DEL42 DEL43 DEL76 DEL76 DEL74 DEL42 DEL42 DEL45 DEL79 DEL42 DEL43 DEL43 DEL74 DEL32 DEL11 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL86 DEL32 DEL42 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL16 DEL36 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL33 DEL27 DEL8 DEL25