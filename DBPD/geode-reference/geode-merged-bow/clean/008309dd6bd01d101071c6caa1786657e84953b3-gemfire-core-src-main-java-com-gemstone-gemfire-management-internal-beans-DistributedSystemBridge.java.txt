Merge branch 'release/1.0.0-incubating.M1'

- * =========================================================================
- *  Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- *  This product is protected by U.S. and international copyright
- *  and intellectual property laws. Pivotal products are covered by
- *  more patents listed at http://www.pivotal.io/patents.
- * ========================================================================+
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+  
+  
+  /**
+   *  @return A map of all {@link DistributedMember}s and their HDFSStore's.
+   */  
+  
+  public Map<String, String[]> getMemberHDFSStoreMap() {
+    Iterator<MemberMXBean> memberIterator = mapOfMembers.values().iterator();    
+    if (memberIterator != null) {
+      Map<String, String[]> mapOfHdfs = new HashMap<String, String[]>();
+      while (memberIterator.hasNext()) {
+        MemberMXBean bean = memberIterator.next();
+        mapOfHdfs.put(bean.getMember(), bean.getHDFSStores());
+      }
+
+      return mapOfHdfs;
+    }
+    return Collections.emptyMap();
+  }
+  
+
+  public long getOffHeapFreeSize() {
+    return memberMBeanMonitor.getOffHeapFreeMemory();
+  }
+
+
+  public long getOffHeapUsedSize() {
+    return memberMBeanMonitor.getOffHeapUsedMemory();
+  }

INS31 INS31 INS31 INS29 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS65 INS43 INS43 INS5 INS60 INS25 INS41 INS41 INS41 INS66 INS65 INS66 INS42 INS42 INS43 INS85 INS74 INS59 INS27 INS8 INS32 INS32 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS33 INS60 INS61 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS74 INS59 INS32 INS8 INS42 INS42 INS42 INS43 INS43 INS5 INS42 INS14 INS42 INS42 INS60 INS21 INS42 INS42 INS43 INS85 INS74 INS43 INS59 INS32 INS42 INS43 INS43 INS5 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42