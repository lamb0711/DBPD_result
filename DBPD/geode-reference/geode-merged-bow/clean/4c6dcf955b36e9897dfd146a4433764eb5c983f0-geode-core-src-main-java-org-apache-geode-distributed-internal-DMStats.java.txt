GEODE_6883: Creating membership api classes (#3985)

Creating a new membership API package. Starting that package out with
these classes:
* MembershipBuilder - created by moving NetMember and NetLocator factory stuff
  out of MembershipFactory and renaming MembershipFactory to MembershipBuilder
* Membership - Extracted an interface from MembershipManager
* Authenticator - Moved Authenticator to the API package
* MembershipStatistics - Extracted interface from DMStats
* MembershipListener and MessageListener - Creating these new membership
  specific interfaces by splitting up DistributedMembershipListener into two
  separate interfaces.
* MembershipConfig - Extracted interface from ServiceConfig

* Adding an archunit test for the membership API. Ensure that the API only
  depends on other API classes.

* Removing GMSMemberFactory and MemberServices
  These classes were adding another layer to creating a MembershipManager,
  but they didn't actually allow swapping in a different implementation.
  Inlining these methods into the respective NetLocatorFactory,
  NetMemberFactory, and MembershipManagerFactory.

* Removing getDM from DirectChannelListener - We want to get rid of this
  interface in favor of other membership
  specific interfaces that don't depend on core.

+import org.apache.geode.distributed.internal.membership.gms.api.MembershipStatistics;
+
-public interface DMStats {
+public interface DMStats extends MembershipStatistics {
-   * Increments the total number of message bytes sent by the distribution manager
-   */
-  void incSentBytes(long bytes);
-
-  /**
-  void incUDPDispatchRequestTime(long val);
-
-   * increments the number of unicast writes performed and the number of bytes written
-   *
-   * @since GemFire 5.0
-   */
-  void incUcastWriteBytes(int bytesWritten);
-
-  /**
-   * increment the number of unicast datagram payload bytes received and the number of unicast reads
-   * performed
-   */
-  void incUcastReadBytes(int amount);
-
-  /**
-   * increment the number of multicast datagrams sent and the number of multicast bytes transmitted
-   */
-  void incMcastWriteBytes(int bytesWritten);
-
-  /**
-   * increment the number of multicast datagram payload bytes received, and the number of mcast
-   * messages read
-   */
-  void incMcastReadBytes(int amount);
-
-  /**
-  long startMsgSerialization();
-
-  void endMsgSerialization(long start);
-
-  long startUDPMsgEncryption();
-
-  void endUDPMsgEncryption(long start);
-
-  long startUDPMsgDecryption();
-
-  void endUDPMsgDecryption(long start);
-
-  long startMsgDeserialization();
-
-  void endMsgDeserialization(long start);
-
-   * increment the number of unicast UDP retransmission requests received from other processes
-   *
-   * @since GemFire 5.0
-   */
-  void incUcastRetransmits();
-
-  /**
-   * increment the number of multicast UDP retransmissions sent to other processes
-   *
-   * @since GemFire 5.0
-   */
-  void incMcastRetransmits();
-
-  /**
-   * increment the number of multicast UDP retransmission requests sent to other processes
-   *
-   * @since GemFire 5.0
-   */
-  void incMcastRetransmitRequests();
-
-  /**
-  // Stats for GMSHealthMonitor
-  long getHeartbeatRequestsSent();
-
-  void incHeartbeatRequestsSent();
-
-  long getHeartbeatRequestsReceived();
-
-  void incHeartbeatRequestsReceived();
-
-  long getHeartbeatsSent();
-
-  void incHeartbeatsSent();
-
-  void incHeartbeatsReceived();
-
-
-  long getSuspectsSent();
-
-  void incSuspectsSent();
-
-  long getSuspectsReceived();
-
-  void incSuspectsReceived();
-
-
-  long getFinalCheckRequestsSent();
-
-  void incFinalCheckRequestsSent();
-
-  long getFinalCheckRequestsReceived();
-
-  void incFinalCheckRequestsReceived();
-
-  long getFinalCheckResponsesSent();
-
-  void incFinalCheckResponsesSent();
-
-  long getFinalCheckResponsesReceived();
-
-  void incFinalCheckResponsesReceived();
-
-
-  long getTcpFinalCheckRequestsSent();
-
-  void incTcpFinalCheckRequestsSent();
-
-  long getTcpFinalCheckRequestsReceived();
-
-  void incTcpFinalCheckRequestsReceived();
-
-  long getTcpFinalCheckResponsesSent();
-
-  void incTcpFinalCheckResponsesSent();
-
-  long getTcpFinalCheckResponsesReceived();
-
-  void incTcpFinalCheckResponsesReceived();
-
-  void incUdpFinalCheckRequestsSent();
-
-  // UDP final check is implemented using HeartbeatRequestMessage and HeartbeatMessage
-  // So the following code is commented out.
-
-  // public long getUdpFinalCheckRequestsReceived();
-  //
-  // public void incUdpFinalCheckRequestsReceived();
-  //
-  // public long getUdpFinalCheckResponsesSent();
-  //
-  // public void incUdpFinalCheckResponsesSent();
-
-  void incUdpFinalCheckResponsesReceived();

INS26 INS40 INS43 INS42 DEL66 DEL65 DEL29 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL66 DEL66 DEL65 DEL29 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL66 DEL65 DEL29 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL66 DEL66 DEL65 DEL29 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL39 DEL42 DEL44 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31 DEL39 DEL42 DEL31