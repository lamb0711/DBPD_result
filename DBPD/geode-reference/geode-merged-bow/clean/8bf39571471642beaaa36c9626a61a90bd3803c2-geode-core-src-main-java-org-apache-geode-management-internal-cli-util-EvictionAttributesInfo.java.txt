Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class EvictionAttributesInfo implements Serializable{
-	
-	/**
-	 * 
-	 */
-	private static final long	serialVersionUID	= 1L;
-	private String evictionAction = "";
-	private String evictionAlgorithm = "";
-	private int  evictionMaxValue = 0;
-	
-	public EvictionAttributesInfo(EvictionAttributes ea) {
-		EvictionAction evictAction = ea.getAction();
-		
-		if (evictAction != null) {
-				evictionAction = evictAction.toString();
-		}
-		EvictionAlgorithm evictionAlgo = ea.getAlgorithm();
-		if (evictionAlgo != null){
-			evictionAlgorithm = evictionAlgo.toString();
-		}
-			
-		evictionMaxValue = ea.getMaximum();
-	}
+public class EvictionAttributesInfo implements Serializable {
-	public String getEvictionAction() {
-		return evictionAction;
-	}
+  /**
+   * 
+   */
+  private static final long serialVersionUID = 1L;
+  private String evictionAction = "";
+  private String evictionAlgorithm = "";
+  private int evictionMaxValue = 0;
-	public String getEvictionAlgorithm() {
-		return evictionAlgorithm;
-	}
+  public EvictionAttributesInfo(EvictionAttributes ea) {
+    EvictionAction evictAction = ea.getAction();
-	public int getEvictionMaxValue() {
-		return evictionMaxValue;
-	}
+    if (evictAction != null) {
+      evictionAction = evictAction.toString();
+    }
+    EvictionAlgorithm evictionAlgo = ea.getAlgorithm();
+    if (evictionAlgo != null) {
+      evictionAlgorithm = evictionAlgo.toString();
+    }
+
+    evictionMaxValue = ea.getMaximum();
+  }
+
+  public String getEvictionAction() {
+    return evictionAction;
+  }
+
+  public String getEvictionAlgorithm() {
+    return evictionAlgorithm;
+  }
+
+  public int getEvictionMaxValue() {
+    return evictionMaxValue;
+  }

