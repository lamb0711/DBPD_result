Merge branch 'feature/GEODE-8' into develop

+import java.lang.reflect.Array;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.concurrent.RejectedExecutionException;
+import com.gemstone.gemfire.CancelException;
+import com.gemstone.gemfire.distributed.internal.InternalDistributedSystem;
+import com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventImpl;
+import com.gemstone.gemfire.internal.cache.OffHeapRegionEntry;
+import com.gemstone.gemfire.internal.offheap.OffHeapRegionEntryHelper;
-    final void clear() {
+    /**
+     * GemStone added the clearedEntries param and the result
+     */
+    final ArrayList<HashEntry<?,?>> clear(ArrayList<HashEntry<?,?>> clearedEntries) {
-          for (int i = 0; i < tab.length; i++) {
-            tab[i] = null;
+          // GemStone changes BEGIN
+          boolean collectEntries = clearedEntries != null;
+          if (!collectEntries) {
+            // see if we have a map with off-heap region entries
+            for (HashEntry<K, V> he : tab) {
+              if (he != null) {
+                collectEntries = he instanceof OffHeapRegionEntry;
+                if (collectEntries) {
+                  clearedEntries = new ArrayList<HashEntry<?, ?>>();
+                }
+                // after the first non-null entry we are done
+                break;
+              }
+            }
+          }
+          final boolean checkForGatewaySenderEvent = OffHeapRegionEntryHelper.doesClearNeedToCheckForOffHeap();
+          final boolean skipProcessOffHeap = !collectEntries && !checkForGatewaySenderEvent;
+          if (skipProcessOffHeap) {
+            Arrays.fill(tab, null);
+          } else {
+            for (int i = 0; i < tab.length; i++) {
+              HashEntry<K, V> he = tab[i];
+              if (he == null) continue;
+              tab[i] = null;
+              if (collectEntries) {
+                clearedEntries.add(he);
+              } else {
+                for (HashEntry<K, V> p = he; p != null; p = p.getNextEntry()) {
+                  if (p instanceof RegionEntry) {
+                    // It is ok to call GatewaySenderEventImpl release without being synced
+                    // on the region entry. It will not create an orphan.
+                    GatewaySenderEventImpl.release(((RegionEntry) p)._getValue()); // OFFHEAP _getValue ok
+                  }
+                }
+              }
+            }
+            // GemStone changes END
+      return clearedEntries; // GemStone change
-    for (int i = 0; i < this.segments.length; ++i) {
-      this.segments[i].clear();
+    ArrayList<HashEntry<?,?>> entries = null;
+    try {
+      for (int i = 0; i < this.segments.length; ++i) {
+        entries = this.segments[i].clear(entries);
+      }
+    } finally {
+      if (entries != null) {
+        final ArrayList<HashEntry<?,?>> clearedEntries = entries;
+        final Runnable runnable = new Runnable() {
+          public void run() {
+            for (HashEntry<?,?> he: clearedEntries) {
+              for (HashEntry<?, ?> p = he; p != null; p = p.getNextEntry()) {
+                synchronized (p) {
+                  ((OffHeapRegionEntry)p).release();
+                }
+              }
+            }
+          }
+        };
+        boolean submitted = false;
+        InternalDistributedSystem ids = InternalDistributedSystem.getConnectedInstance();
+        if (ids != null) {
+          try {
+            ids.getDistributionManager().getWaitingThreadPool().submit(runnable);
+            submitted = true;
+          } catch (RejectedExecutionException e) {
+            // fall through with submitted false
+          } catch (CancelException e) {
+            // fall through with submitted false
+          } catch (NullPointerException e) {
+            // fall through with submitted false
+          }
+        }
+        if (!submitted) {
+          String name = this.getClass().getSimpleName()+"@"+this.hashCode()+" Clear Thread";
+          Thread thread = new Thread(runnable, name);
+          thread.setDaemon(true);
+          thread.start();
+        }
+      }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS8 INS29 INS74 INS44 INS60 INS54 INS65 INS43 INS74 INS74 INS42 INS41 INS74 INS59 MOV8 INS8 INS66 INS42 INS43 INS76 INS76 INS43 INS74 INS42 INS43 INS74 INS42 INS33 INS25 INS42 INS42 INS43 INS76 INS76 INS42 INS43 INS76 INS76 INS27 INS8 INS42 INS8 INS42 INS42 INS33 INS60 INS60 INS60 INS60 INS25 INS25 MOV60 INS60 INS25 INS60 INS60 INS25 MOV21 MOV21 INS7 INS83 INS74 INS59 INS83 INS43 INS59 INS39 INS59 INS43 INS59 INS27 INS8 INS38 INS8 INS39 INS59 INS38 INS8 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS8 INS8 INS42 MOV32 INS43 INS74 INS42 INS42 INS42 INS42 INS14 INS42 INS9 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS60 INS60 INS21 INS21 INS42 INS27 INS42 INS70 INS42 INS32 INS42 INS27 INS21 INS24 INS42 INS42 INS43 INS76 INS76 INS43 INS1 INS42 INS42 INS8 INS12 INS12 INS12 INS43 INS59 INS43 INS59 INS32 INS32 INS42 INS33 INS44 INS42 INS8 INS42 INS42 INS38 INS38 INS32 MOV58 MOV27 MOV37 INS8 INS42 INS42 INS31 INS21 INS21 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS42 INS27 INS42 INS42 INS14 INS42 INS42 INS9 INS42 INS42 INS74 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS33 INS60 INS25 MOV21 INS25 INS83 INS39 INS42 INS8 INS32 INS7 INS43 INS42 INS43 INS42 INS43 INS42 INS32 INS45 INS32 INS45 INS43 INS42 INS42 INS43 INS43 INS43 INS27 INS8 INS74 INS59 INS27 INS18 INS42 INS8 INS8 INS70 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS25 INS10 INS43 INS43 INS43 INS42 INS2 INS42 INS33 INS21 MOV24 INS44 INS42 INS8 INS32 INS42 INS52 INS42 INS7 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS58 INS27 INS7 INS8 INS74 INS42 INS24 INS42 INS42 INS42 INS62 INS21 INS42 INS42 INS42 INS74 INS59 INS42 INS33 INS42 INS32 INS25 INS43 INS76 INS76 INS58 INS27 INS7 INS8 INS42 INS43 INS7 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS62 INS8 INS42 INS74 INS59 INS42 INS33 INS42 INS32 INS51 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS21 INS43 INS76 INS76 INS42 INS42 INS42 INS42 INS42 INS8 INS74 INS42 INS32 INS42 INS21 INS43 INS74 INS42 INS42 INS32 INS32 INS42 INS43 INS76 INS76 INS36 INS42 INS36 INS42 INS42 INS11 INS11 INS43 INS42 INS43 INS42 INS42 INS42 DEL39 DEL8 DEL8