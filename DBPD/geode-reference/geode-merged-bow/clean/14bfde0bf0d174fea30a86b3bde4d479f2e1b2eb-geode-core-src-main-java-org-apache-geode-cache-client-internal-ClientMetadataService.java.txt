Merge branch 'release/1.8.0'

+import org.apache.geode.internal.cache.LocalRegion;
-import org.apache.geode.internal.i18n.LocalizedStrings;
+  /** for testing - the current number of metadata refresh tasks running or queued to run */
+  /** for testing - the total number of scheduled metadata refreshes */
+  private long totalRefreshTaskCount = 0;
+
-            LocalizedStrings.PartitionedRegionHelper_THE_ROUTINGOBJECT_RETURNED_BY_PARTITIONRESOLVER_IS_NULL
-                .toLocalizedString());
+            "The RoutingObject returned by PartitionResolver is null.");
-            LocalizedStrings.PartitionedRegionHelper_FOR_REGION_0_PARTITIONRESOLVER_1_RETURNED_PARTITION_NAME_NULL
-                .toLocalizedString(prms));
+            String.format("For region %s, partition resolver %s returned partition name null",
+                prms));
-        groupByServerToBuckets(prAdvisor, bucketToKeysMap.keySet(), primaryMembersNeeded);
+        groupByServerToBuckets(prAdvisor, bucketToKeysMap.keySet(), primaryMembersNeeded, region);
+      if (logger.isDebugEnabled()) {
+        logger.debug("One or more primary bucket locations are unknown "
+            + "- scheduling metadata refresh for region {}", region.getFullPath());
+      }
+      scheduleGetPRMetaData((LocalRegion) region, false);
-    return groupByServerToBuckets(prAdvisor, allBucketIds, primaryOnly);
+    return groupByServerToBuckets(prAdvisor, allBucketIds, primaryOnly, region);
-      ClientPartitionAdvisor prAdvisor, Set<Integer> bucketSet, boolean primaryOnly) {
+      ClientPartitionAdvisor prAdvisor, Set<Integer> bucketSet, boolean primaryOnly,
+      Region region) {
+          logger.info("Primary for bucket {} is not known for Region {}.  "
+              + "Known server locations: {}", bucketId, region.getFullPath(),
+              prAdvisor.adviseServerLocations(bucketId));
-            LocalizedStrings.PartitionedRegionHelper_THE_ROUTINGOBJECT_RETURNED_BY_PARTITIONRESOLVER_IS_NULL
-                .toLocalizedString());
+            "The RoutingObject returned by PartitionResolver is null.");
-            LocalizedStrings.PartitionedRegionHelper_FOR_REGION_0_PARTITIONRESOLVER_1_RETURNED_PARTITION_NAME_NULL
-                .toLocalizedString(prms));
+            String.format("For region %s, partition resolver %s returned partition name null",
+                prms));
+        totalRefreshTaskCount++;
+        totalRefreshTaskCount++;
-            LocalizedStrings.PartitionedRegionHelper_THE_ROUTINGOBJECT_RETURNED_BY_PARTITIONRESOLVER_IS_NULL
-                .toLocalizedString());
+            "The RoutingObject returned by PartitionResolver is null.");
-            LocalizedStrings.PartitionedRegionHelper_FOR_REGION_0_PARTITIONRESOLVER_1_RETURNED_PARTITION_NAME_NULL
-                .toLocalizedString(prms));
+            String.format("For region %s, partition resolver %s returned partition name null",
+                prms));
-  public int getRefreshTaskCount() {
+  /** For Testing */
+  public int getRefreshTaskCount_TEST_ONLY() {
+
+  /** for testing */
+  public long getTotalRefreshTaskCount_TEST_ONLY() {
+    synchronized (fetchTaskCountLock) {
+      return totalRefreshTaskCount;
+    }
+  }

MOV26 UPD40 INS23 INS31 INS29 INS29 INS83 INS39 INS59 INS44 INS29 UPD42 INS29 INS83 INS39 INS42 INS8 INS65 INS65 INS42 INS34 INS25 INS43 INS42 INS65 INS65 INS51 INS66 INS66 MOV27 INS8 INS42 INS66 INS66 INS42 INS8 MOV25 INS21 MOV41 INS42 INS41 INS42 INS32 INS32 INS42 INS42 INS42 INS21 INS42 INS11 INS9 INS21 INS21 INS32 INS43 INS42 INS37 INS37 INS45 INS42 INS42 INS27 INS32 INS42 INS21 MOV43 INS45 MOV43 INS42 INS42 MOV43 INS45 MOV43 UPD42 INS42 INS45 INS45 INS45 INS42 INS42 INS32 UPD42 INS42 INS45 UPD42 INS42 INS45 INS42 INS42 INS27 INS42 INS32 INS32 INS45 INS45 INS42 INS42 INS42 INS42 INS42 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40