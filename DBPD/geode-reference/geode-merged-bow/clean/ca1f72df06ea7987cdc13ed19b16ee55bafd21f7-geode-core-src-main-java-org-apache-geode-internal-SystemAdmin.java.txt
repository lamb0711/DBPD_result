GEODE-5212: Ensure that MergeLogs closes its InputStreams (#2513)

- Other refactoring which converted a pair of linked structures (log filename
  and the associated InputStream) into a Map.
+import java.io.InputStream;
+import java.nio.file.Paths;
+import java.util.stream.Collectors;
+import org.apache.commons.lang.StringUtils;
+
-  public void mergeLogs(String outOption, List args) {
-    FileInputStream[] input = new FileInputStream[args.size()];
-    String[] inputNames = new String[args.size()]; // note we don't want any extra names printed.
+  public void mergeLogs(String outOption, List<String> args) {
+    Map<String, InputStream> inputs = new HashMap<>();
-    Iterator it = args.iterator();
-    int idx = 0;
+    List<String> normalizedFiles =
+        args.stream().map(f -> Paths.get(f).toAbsolutePath().toString()).collect(
+            Collectors.toList());
+    int prefixLength =
+        StringUtils.getCommonPrefix(normalizedFiles.toArray(new String[] {})).length();
+
-    while (it.hasNext()) {
-      String fileName = (String) it.next();
+
+    for (String fileName : normalizedFiles) {
-        input[idx] = new FileInputStream(fileName);
-        inputNames[idx] = (new File(fileName)).getAbsolutePath();
-        idx++;
+        String shortName = fileName.substring(prefixLength);
+        inputs.put(shortName, new FileInputStream(fileName));
-    if (idx > 0) {
-      // strip off any common filename prefix
-      boolean strip = true;
-      do {
-        if (inputNames[0].length() == 0) {
-          break;
-        }
-        if (inputNames[0].indexOf('/') == -1 && inputNames[0].indexOf('\\') == -1) {
-          // no more directories to strip off
-          break;
-        }
-        char c = inputNames[0].charAt(0);
-        for (int i = 1; i < idx; i++) {
-          if (inputNames[i].charAt(0) != c) {
-            strip = false;
-            break;
-          }
-        }
-        for (int i = 0; i < idx; i++) {
-          inputNames[i] = inputNames[i].substring(1);
-        }
-      } while (strip);
-    }
-
-    if (MergeLogFiles.mergeLogFiles(input, inputNames, mergedFile)) {
+    if (MergeLogFiles.mergeLogFiles(inputs, mergedFile)) {
-              new Object[] {Integer.valueOf(idx), ((outOption != null) ? outOption : "stdout")}));
+              new Object[] {Integer.valueOf(args.size()),
+                  ((outOption != null) ? outOption : "stdout")}));

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS74 INS60 INS60 INS70 MOV43 INS43 INS74 INS59 INS74 INS59 INS39 INS59 INS44 INS42 MOV8 INS42 INS43 INS43 INS43 INS42 INS14 INS43 INS43 UPD42 MOV42 INS32 UPD42 MOV42 INS32 MOV43 INS42 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 INS74 INS42 MOV42 INS32 INS42 INS32 INS32 INS42 INS43 INS32 INS42 INS86 INS42 UPD42 MOV42 INS42 INS42 INS32 INS60 INS42 MOV42 UPD42 MOV42 INS59 INS32 INS42 INS42 MOV3 MOV43 INS59 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS4 INS42 INS32 INS42 INS42 INS42 MOV14 INS32 INS42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 MOV32 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL59 DEL43 DEL85 DEL5 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL2 DEL7 DEL42 DEL42 DEL2 DEL42 DEL43 DEL42 DEL14 DEL36 DEL32 DEL7 DEL21 DEL42 DEL37 DEL21 DEL42 DEL42 DEL32 DEL61 DEL42 DEL34 DEL27 DEL39 DEL9 DEL59 DEL60 DEL42 DEL34 DEL2 DEL32 DEL34 DEL27 DEL10 DEL8 DEL25 DEL42 DEL34 DEL2 DEL13 DEL32 DEL34 DEL38 DEL27 DEL42 DEL34 DEL2 DEL13 DEL32 DEL34 DEL38 DEL27 DEL27 DEL10 DEL8 DEL25 DEL39 DEL42 DEL42 DEL34 DEL2 DEL34 DEL32 DEL59 DEL60 DEL39 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL34 DEL32 DEL42 DEL27 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL24 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL34 DEL32 DEL7 DEL21 DEL8 DEL24 DEL8 DEL42 DEL19 DEL8 DEL25 DEL42 DEL42