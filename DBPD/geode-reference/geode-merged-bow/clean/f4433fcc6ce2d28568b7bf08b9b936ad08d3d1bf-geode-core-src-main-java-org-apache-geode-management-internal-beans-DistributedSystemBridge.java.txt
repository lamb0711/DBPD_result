GEODE-4404: Move BackupWriter creation (#1521)

  * to facilitate future creation of backup plugins, the BackupWriter is created
    using generic information passed from gfsh

-import java.io.File;
+import java.util.Properties;
-import java.util.stream.Collectors;
-import org.apache.geode.internal.cache.backup.BackupDataStoreHelper;
-import org.apache.geode.internal.cache.backup.BackupDataStoreResult;
+import org.apache.geode.internal.cache.backup.BackupUtil;
-import org.apache.geode.internal.i18n.LocalizedStrings;
+import org.apache.geode.management.BackupStatus;
-  public DiskBackupStatus backupAllMembers(String targetDirPath, String baselineDirPath)
-      throws Exception {
-    if (BackupDataStoreHelper.obtainLock(dm)) {
-      try {
-
-        if (targetDirPath == null || targetDirPath.isEmpty()) {
-          throw new Exception(
-              ManagementStrings.TARGET_DIR_CANT_BE_NULL_OR_EMPTY.toLocalizedString());
-        }
-        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
-        File targetDir = new File(targetDirPath);
-        targetDir = new File(targetDir, format.format(new Date()));
-
-        File baselineDir = null;
-        if (baselineDirPath != null) {
-          baselineDir = new File(baselineDirPath);
-        }
-
-        DistributionManager dm = cache.getDistributionManager();
-        Set recipients = dm.getOtherDistributionManagerIds();
-
-        BackupDataStoreResult result =
-            BackupDataStoreHelper.backupAllMembers(dm, recipients, targetDir, baselineDir);
-
-
-        DiskBackupStatusImpl diskBackupStatus = new DiskBackupStatusImpl();
-        Map<DistributedMember, Set<PersistentID>> successfulMembers = result.getSuccessfulMembers();
-        diskBackupStatus.generateBackedUpDiskStores(successfulMembers);
-
-        // It's possible that when calling getMissingPersistentMembers, some
-        // members
-        // are
-        // still creating/recovering regions, and at FinishBackupRequest.send, the
-        // regions at the members are ready. Logically, since the members in
-        // successfulMembers
-        // should override the previous missingMembers
-        Set<PersistentID> successfulIds = result.getSuccessfulMembers().values().stream()
-            .flatMap(Set::stream).collect(Collectors.toSet());
-        Set<PersistentID> missingIds =
-            result.getExistingDataStores().values().stream().flatMap(Set::stream)
-                .filter((v) -> !successfulIds.contains(v)).collect(Collectors.toSet());
-
-        diskBackupStatus.generateOfflineDiskStores(missingIds);
-        return diskBackupStatus;
-      } finally {
-        BackupDataStoreHelper.releaseLock(dm);
-      }
-    } else {
-      throw new Exception(
-          LocalizedStrings.DistributedSystem_BACKUP_ALREADY_IN_PROGRESS.toLocalizedString());
+  public DiskBackupStatus backupAllMembers(String targetDirPath, String baselineDirPath) {
+    Properties properties = new Properties();
+    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
+    properties.setProperty("TIMESTAMP", format.format(new Date()));
+    properties.setProperty("TYPE", "FileSystem");
+    properties.setProperty("TARGET_DIRECTORY", targetDirPath);
+    if (baselineDirPath != null) {
+      properties.setProperty("BASELINE_DIRECTORY", baselineDirPath);
+    BackupStatus result = BackupUtil.backupAllMembers(dm, properties);
+    DiskBackupStatusImpl diskBackupStatus = new DiskBackupStatusImpl();
+    diskBackupStatus.generateBackedUpDiskStores(result.getBackedUpDiskStores());
+    diskBackupStatus.generateOfflineDiskStores(result.getOfflineDiskStores());
+    return diskBackupStatus;

MOV26 MOV26 UPD40 UPD40 UPD40 INS8 MOV60 MOV60 MOV21 INS21 MOV21 INS25 MOV60 MOV60 INS21 INS21 MOV41 UPD43 INS32 INS32 INS32 MOV27 INS8 UPD43 INS32 INS32 UPD42 UPD42 INS42 INS42 INS45 MOV32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS42 INS21 UPD42 MOV42 MOV42 MOV32 MOV42 MOV42 INS32 UPD43 INS32 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 UPD42 MOV42 INS45 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL40 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL90 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL90 DEL32 DEL42 DEL42 DEL59 DEL42 DEL42 DEL42 DEL32 DEL38 DEL86 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL8 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL42 DEL43 DEL40 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL8