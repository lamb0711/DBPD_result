GEODE-8098: Refactor CommandFunction (#5082)

* CommandFunction code is now cleaner.
* Added SingleResultRedisFunction and a new ResultCollector class
to simplify and ensure that our function only has a single result.
* StripedExecutor has been simplified to only take a Callable

-import org.apache.geode.cache.execute.ResultCollector;
-import org.apache.geode.redis.internal.RedisCommandType;
-@SuppressWarnings("unchecked")
-    ResultCollector<Object[], List<Long>> results = executeFunction(SADD, key, membersToAdd);
-    return results.getResult().get(0);
+    return CommandFunction.execute(SADD, key, membersToAdd, region);
+  @SuppressWarnings("unchecked")
-    ResultCollector<Object[], List<Long>> results = executeFunction(SREM, key, membersToRemove);
-    List<Long> resultList = results.getResult();
-    long membersRemoved = resultList.get(0);
-    long wasDeleted = resultList.get(1);
-    if (wasDeleted != 0) {
-      setWasDeleted.set(true);
-    }
+    Object[] resultList =
+        CommandFunction.execute(SREM, key, membersToRemove, region);
+
+    long membersRemoved = (long) resultList[0];
+    Boolean wasDeleted = (Boolean) resultList[1];
+    setWasDeleted.set(wasDeleted);
-    ResultCollector<Object[], List<Set<ByteArrayWrapper>>> results =
-        executeFunction(SMEMBERS, key, null);
-    return results.getResult().get(0);
+    return CommandFunction.execute(SMEMBERS, key, null, region);
-    ResultCollector<Object[], List<Boolean>> results =
-        executeFunction(DEL, key, RedisDataType.REDIS_SET);
-    return results.getResult().get(0);
+    return CommandFunction.execute(DEL, key, RedisDataType.REDIS_SET, region);
-    ResultCollector<Object[], List<Integer>> results = executeFunction(SCARD, key, null);
-    return results.getResult().get(0);
+    return CommandFunction.execute(SCARD, key, null, region);
-    ResultCollector<Object[], List<Boolean>> results = executeFunction(SISMEMBER, key, member);
-    return results.getResult().get(0);
+    return CommandFunction.execute(SISMEMBER, key, member, region);
-    ResultCollector<Object[], List<Collection<ByteArrayWrapper>>> results =
-        executeFunction(SRANDMEMBER, key, count);
-    return results.getResult().get(0);
+    return CommandFunction.execute(SRANDMEMBER, key, count, region);
-    ResultCollector<Object[], List<Collection<ByteArrayWrapper>>> results =
-        executeFunction(SPOP, key, popCount);
-    return results.getResult().get(0);
+    return CommandFunction.execute(SPOP, key, popCount, region);
-    ResultCollector<Object[], List<List<Object>>> results =
-        executeFunction(SSCAN, key, new Object[] {matchPattern, count, cursor});
-    return results.getResult().get(0);
-  }
-
-  private ResultCollector executeFunction(RedisCommandType command,
-      ByteArrayWrapper key,
-      Object commandArguments) {
-    return CommandFunction.execute(region, command, key, commandArguments);
+    return CommandFunction.execute(SSCAN, key, new Object[] {matchPattern, count, cursor}, region);

MOV79 MOV78 MOV44 MOV78 MOV44 MOV78 MOV44 MOV78 MOV44 INS41 MOV21 INS41 INS41 INS41 INS41 INS41 INS41 INS32 MOV5 MOV43 INS32 INS32 INS32 INS32 INS32 INS32 MOV32 INS42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 INS11 INS11 INS42 INS42 UPD42 MOV42 MOV42 MOV42 MOV33 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 MOV42 MOV40 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 MOV42 MOV33 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS39 INS2 MOV43 INS2 INS42 INS34 INS42 INS34 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL34 DEL32 DEL39 DEL42 DEL42 DEL34 DEL32 DEL9 DEL42 DEL34 DEL27 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL34 DEL32 DEL41 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL74 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL34 DEL32 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31