 GEODE-2668: build tabular command result from a list of function results  (#1127)

* GEODE-2668: build tabular command result from a list of function results

* reduce duplicate code to create the tabular results
* promote presentation consistency
* Add more validation for CreateGatewaySender/Receiver command and reworked the tests

-import java.util.HashMap;
-import java.util.Map;
-import java.util.TreeSet;
-import java.util.concurrent.atomic.AtomicReference;
-import org.apache.geode.cache.execute.ResultCollector;
-import org.apache.geode.management.internal.cli.CliUtil;
-import org.apache.geode.management.internal.cli.result.ErrorResultData;
-import org.apache.geode.management.internal.cli.result.InfoResultData;
-    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
-
-    final ResultCollector<?, ?> rc =
-        createIndexOnMember(indexName, indexedExpression, regionPath, indexType, targetMembers);
+    IndexInfo indexInfo = new IndexInfo(indexName, indexedExpression, regionPath, indexType);
+    List<CliFunctionResult> functionResults =
+        executeAndGetFunctionResult(createIndexFunction, indexInfo, targetMembers);
+    result = ResultBuilder.buildResult(functionResults);
+    XmlEntity xmlEntity = findXmlEntity(functionResults);
-    final List<Object> funcResults = (List<Object>) rc.getResult();
-    final Set<String> successfulMembers = new TreeSet<>();
-    final Map<String, Set<String>> indexOpFailMap = new HashMap<>();
-
-    for (final Object funcResult : funcResults) {
-      if (funcResult instanceof CliFunctionResult) {
-        final CliFunctionResult cliFunctionResult = (CliFunctionResult) funcResult;
-
-        if (cliFunctionResult.isSuccessful()) {
-          successfulMembers.add(cliFunctionResult.getMemberIdOrName());
-
-          if (xmlEntity.get() == null) {
-            xmlEntity.set(cliFunctionResult.getXmlEntity());
-          }
-        } else {
-          final String exceptionMessage = cliFunctionResult.getMessage();
-          Set<String> failedMembers = indexOpFailMap.get(exceptionMessage);
-
-          if (failedMembers == null) {
-            failedMembers = new TreeSet<>();
-          }
-          failedMembers.add(cliFunctionResult.getMemberIdOrName());
-          indexOpFailMap.put(exceptionMessage, failedMembers);
-        }
-      }
-    }
-
-    if (!successfulMembers.isEmpty()) {
-      final InfoResultData infoResult = ResultBuilder.createInfoResultData();
-      infoResult.addLine(CliStrings.CREATE_INDEX__SUCCESS__MSG);
-      infoResult.addLine(CliStrings.format(CliStrings.CREATE_INDEX__NAME__MSG, indexName));
-      infoResult
-          .addLine(CliStrings.format(CliStrings.CREATE_INDEX__EXPRESSION__MSG, indexedExpression));
-      infoResult.addLine(CliStrings.format(CliStrings.CREATE_INDEX__REGIONPATH__MSG, regionPath));
-      infoResult.addLine(CliStrings.CREATE_INDEX__MEMBER__MSG);
-
-      int num = 0;
-
-      for (final String memberId : successfulMembers) {
-        ++num;
-        infoResult.addLine(
-            CliStrings.format(CliStrings.CREATE_INDEX__NUMBER__AND__MEMBER, num, memberId));
-      }
-      result = ResultBuilder.buildResult(infoResult);
-
-    } else {
-      // Group members by the exception thrown.
-      final ErrorResultData erd = ResultBuilder.createErrorResultData();
-      erd.addLine(CliStrings.format(CliStrings.CREATE_INDEX__FAILURE__MSG, indexName));
-      final Set<String> exceptionMessages = indexOpFailMap.keySet();
-
-      for (final String exceptionMessage : exceptionMessages) {
-        erd.addLine(exceptionMessage);
-        erd.addLine(CliStrings.CREATE_INDEX__EXCEPTION__OCCURRED__ON);
-        final Set<String> memberIds = indexOpFailMap.get(exceptionMessage);
-        int num = 0;
-        for (final String memberId : memberIds) {
-          ++num;
-          erd.addLine(
-              CliStrings.format(CliStrings.CREATE_INDEX__NUMBER__AND__MEMBER, num, memberId));
-        }
-      }
-      result = ResultBuilder.buildResult(erd);
-    }
-
-    if (xmlEntity.get() != null) {
+    if (xmlEntity != null) {
-          () -> getSharedConfiguration().addXmlEntity(xmlEntity.get(), group));
+          () -> getSharedConfiguration().addXmlEntity(xmlEntity, group));
-
-  ResultCollector<?, ?> createIndexOnMember(String indexName, String indexedExpression,
-      String regionPath, IndexType indexType, Set<DistributedMember> targetMembers) {
-    IndexInfo indexInfo = new IndexInfo(indexName, indexedExpression, regionPath, indexType);
-    return CliUtil.executeFunction(createIndexFunction, indexInfo, targetMembers);
-  }

MOV21 MOV60 MOV43 UPD74 MOV43 UPD42 MOV14 UPD43 UPD42 INS32 UPD42 INS42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL83 DEL43 DEL76 DEL76 DEL74 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL32 DEL11 DEL83 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL62 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL42 DEL42 DEL32 DEL38 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL38 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL38 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL76 DEL76 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31