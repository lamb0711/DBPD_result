GEODE-4863: refactor jdbc commands to use this public cluster configuration api (#1776)

   * refactored jdbc connector commands to use public cc service
   * removed JdbcConnectorServiceXmlGenerator
   * removed RegionMappingBuilder & ConnectionConfigBuilder
   * if cc service is running then user can only alter whats available in CC
   * describe & List commands now list entries from cc service
   * converted some integration tests to junits
   * removed unwanted functions, tests

Signed-off-by: Jinmei Liao <jiliao@pivotal.io>

-import java.util.Map;
+import java.util.List;
-import org.apache.geode.connectors.jdbc.internal.RegionMapping;
+import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
-import org.apache.geode.management.internal.configuration.domain.XmlEntity;
-public class AlterMappingFunction extends JdbcCliFunction<RegionMapping, CliFunctionResult> {
+public class AlterMappingFunction
+    extends JdbcCliFunction<ConnectorService.RegionMapping, CliFunctionResult> {
-      FunctionContext<RegionMapping> context) throws Exception {
-    RegionMapping mapping = context.getArguments();
-    RegionMapping existingMapping = service.getMappingForRegion(mapping.getRegionName());
+      FunctionContext<ConnectorService.RegionMapping> context) throws Exception {
+    ConnectorService.RegionMapping mapping = context.getArguments();
+    ConnectorService.RegionMapping existingMapping =
+        service.getMappingForRegion(mapping.getRegionName());
-    RegionMapping alteredMapping = alterRegionMapping(mapping, existingMapping);
+    ConnectorService.RegionMapping alteredMapping = alterRegionMapping(mapping, existingMapping);
-    String member = getMember(context);
-    XmlEntity xmlEntity = createXmlEntity(context);
-    CliFunctionResult result = createSuccessResult(mapping.getRegionName(), member, xmlEntity);
-    return result;
+    return new CliFunctionResult(context.getMemberName(), alteredMapping, null);
-  RegionMapping alterRegionMapping(RegionMapping regionMapping, RegionMapping existingMapping) {
-    String connectionName = regionMapping.getConnectionConfigName() == null
-        ? existingMapping.getConnectionConfigName() : regionMapping.getConnectionConfigName();
+  ConnectorService.RegionMapping alterRegionMapping(ConnectorService.RegionMapping regionMapping,
+      ConnectorService.RegionMapping existingMapping) {
+    String connectionName = getValue(regionMapping.getConnectionConfigName(),
+        existingMapping.getConnectionConfigName());
-    Map<String, String> fieldMappings = regionMapping.getFieldToColumnMap();
-    if (fieldMappings == null) {
-      fieldMappings = existingMapping.getFieldToColumnMap();
+    List<ConnectorService.RegionMapping.FieldMapping> fieldMappings =
+        regionMapping.getFieldMapping();
+    if (!regionMapping.isFieldMappingModified()) {
+      fieldMappings = existingMapping.getFieldMapping();
-    RegionMapping alteredMapping = new RegionMapping(existingMapping.getRegionName(), pdxClassName,
-        table, connectionName, keyInValue, fieldMappings);
+    ConnectorService.RegionMapping alteredMapping = new ConnectorService.RegionMapping(
+        existingMapping.getRegionName(), pdxClassName, table, connectionName, keyInValue);
+    alteredMapping.getFieldMapping().addAll(fieldMappings);
-
-  private CliFunctionResult createSuccessResult(String connectionName, String member,
-      XmlEntity xmlEntity) {
-    String message = "Altered JDBC connection " + connectionName + " on " + member;
-    return new CliFunctionResult(member, xmlEntity, message);
-  }

MOV26 UPD40 UPD40 UPD74 UPD43 UPD43 INS40 UPD74 INS41 INS40 UPD43 UPD43 INS21 UPD43 UPD43 UPD43 UPD43 INS14 INS40 INS40 UPD74 INS38 UPD43 INS32 INS40 INS40 INS40 INS40 MOV43 INS32 INS42 INS33 INS32 UPD43 UPD43 INS32 INS40 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 MOV32 UPD42 INS40 UPD42 INS42 INS42 UPD43 INS42 INS42 INS40 UPD42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL41 DEL42 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL16 DEL42 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL41 DEL8 DEL31