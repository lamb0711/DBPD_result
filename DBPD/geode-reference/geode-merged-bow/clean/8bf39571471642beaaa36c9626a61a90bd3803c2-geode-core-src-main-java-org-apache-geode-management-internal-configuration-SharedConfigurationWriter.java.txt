Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Class for writing configuration changes to the Shared Configuration at the Locator(s).
- * This class is used in the Gfsh commands, to persist the configuration changes to the shared configuration hosted on locators.
+ * Class for writing configuration changes to the Shared Configuration at the Locator(s). This class
+ * is used in the Gfsh commands, to persist the configuration changes to the shared configuration
+ * hosted on locators.
-  
+
-    isSharedConfigEnabled = cache.getDistributionManager().isSharedConfigurationServiceEnabledForDS();
+    isSharedConfigEnabled =
+        cache.getDistributionManager().isSharedConfigurationServiceEnabledForDS();
-  
-//  /***
-//   * Adds or replaces the xml entity in the cache-xml for the specified groups in the shared configuration.
-//   * @param xmlEntity XmlEntity that is to be added/replaced in the shared configuration
-//   * @param groups target groups
-//   * @return true on adding the xml-entity in the shared configuration
-//   */
+
+  // /***
+  // * Adds or replaces the xml entity in the cache-xml for the specified groups in the shared
+  // configuration.
+  // * @param xmlEntity XmlEntity that is to be added/replaced in the shared configuration
+  // * @param groups target groups
+  // * @return true on adding the xml-entity in the shared configuration
+  // */
-  
-//  /*****
-//   * Removes an xml entity from the cache-xml for the specified groups in the shared configuration.
-//   * @param xmlEntity
-//   * @param groups
-//   * @return true on successful deletion
-//   */
-  public boolean deleteXmlEntity (XmlEntity xmlEntity, String[] groups) {
+
+  // /*****
+  // * Removes an xml entity from the cache-xml for the specified groups in the shared
+  // configuration.
+  // * @param xmlEntity
+  // * @param groups
+  // * @return true on successful deletion
+  // */
+  public boolean deleteXmlEntity(XmlEntity xmlEntity, String[] groups) {
-  
-  
-  public boolean modifyPropertiesAndCacheAttributes(Properties properties, XmlEntity xmlEntity, String[] groups) {
+
+
+  public boolean modifyPropertiesAndCacheAttributes(Properties properties, XmlEntity xmlEntity,
+      String[] groups) {
-  
-//  /*****
-//   * Adds the deployed jars to the shared configuration on all the locators
-//   * @param jarNames Name of jar files to be added
-//   * @param jarBytes Contents of jar files 
-//   * @param groups   member groups on which these jars were deployed
-//   * @return true when the jar files are saved on all the locators.
-//   */
-  public boolean addJars(String[] jarNames, byte[][]jarBytes, String[] groups) {
-    Object [] args =  new Object[3];
+
+  // /*****
+  // * Adds the deployed jars to the shared configuration on all the locators
+  // * @param jarNames Name of jar files to be added
+  // * @param jarBytes Contents of jar files
+  // * @param groups member groups on which these jars were deployed
+  // * @return true when the jar files are saved on all the locators.
+  // */
+  public boolean addJars(String[] jarNames, byte[][] jarBytes, String[] groups) {
+    Object[] args = new Object[3];
-//  /****
-//   * Deletes the jar files from the shared configuration on all the locators
-//   * @param jarNames Name of the jar files to be deleted
-//   * @param groups member groups on which these jars were undeployed
-//   * @return true when the jar files are deleted from shared configuration on all the locators.
-//   */
+  // /****
+  // * Deletes the jar files from the shared configuration on all the locators
+  // * @param jarNames Name of the jar files to be deleted
+  // * @param groups member groups on which these jars were undeployed
+  // * @return true when the jar files are deleted from shared configuration on all the locators.
+  // */
-    Object [] args =  new Object[3];
+    Object[] args = new Object[3];
-  
-  
-  private boolean saveConfigChanges(Function function, Object[] args ) {
+
+
+  private boolean saveConfigChanges(Function function, Object[] args) {
-    Set<DistributedMember> locators = new HashSet<DistributedMember>(cache.getDistributionManager().getAllHostedLocatorsWithSharedConfiguration().keySet());
-   
+    Set<DistributedMember> locators = new HashSet<DistributedMember>(
+        cache.getDistributionManager().getAllHostedLocatorsWithSharedConfiguration().keySet());
+
-  
-  
+
+
-    Set<DistributedMember> locators = new HashSet<DistributedMember>(cache.getDistributionManager().getAllHostedLocatorsWithSharedConfiguration().keySet());
+    Set<DistributedMember> locators = new HashSet<DistributedMember>(
+        cache.getDistributionManager().getAllHostedLocatorsWithSharedConfiguration().keySet());
-      ResultCollector<?,?> rc = CliUtil.executeFunction(function, args, locators);
+      ResultCollector<?, ?> rc = CliUtil.executeFunction(function, args, locators);

UPD66 UPD66 INS66