Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

+import org.apache.geode.cache.query.internal.InternalQueryService;
+import org.apache.geode.cache.query.internal.MethodInvocationAuthorizer;
+import org.apache.geode.cache.query.internal.RestrictedMethodInvocationAuthorizer;
+import org.apache.geode.internal.cache.wan.GatewaySenderQueueEntrySynchronizationListener;
-import org.apache.geode.internal.cache.event.EventTrackerExpiryTask;
-import org.apache.geode.internal.security.SecurityServiceFactory;
+  private final Set<RegionEntrySynchronizationListener> synchronizationListeners =
+      new ConcurrentHashSet<>();
+
+          system.setCache(instance);
+        } else {
+          system.setCache(instance);
+
+      addRegionEntrySynchronizationListener(new GatewaySenderQueueEntrySynchronizationListener());
+  @Override
-  public QueryService getQueryService() {
+  public InternalQueryService getQueryService() {
-    return defaultPool.getQueryService();
+    return (InternalQueryService) defaultPool.getQueryService();
+
+  public void addRegionEntrySynchronizationListener(RegionEntrySynchronizationListener listener) {
+    this.synchronizationListeners.add(listener);
+  }
+
+  public void removeRegionEntrySynchronizationListener(
+      RegionEntrySynchronizationListener listener) {
+    this.synchronizationListeners.remove(listener);
+  }
+
+  public void invokeRegionEntrySynchronizationListenersAfterSynchronization(
+      InternalDistributedMember sender, LocalRegion region,
+      List<InitialImageOperation.Entry> entriesToSynchronize) {
+    for (RegionEntrySynchronizationListener listener : this.synchronizationListeners) {
+      try {
+        listener.afterSynchronization(sender, region, entriesToSynchronize);
+      } catch (Throwable t) {
+        logger.warn(LocalizedMessage.create(
+            LocalizedStrings.GemFireCacheImpl_CAUGHT_EXCEPTION_SYNCHRONIZING_EVENTS,
+            new Object[] {sender, region.getFullPath(), entriesToSynchronize}), t);
+      }
+    }
+  }

MOV26 MOV26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS74 INS59 INS78 UPD43 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS43 INS43 INS42 INS14 INS42 UPD42 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS74 INS42 INS70 INS42 INS42 INS74 INS11 INS42 INS32 INS42 INS32 INS42 INS42 INS43 INS43 INS44 INS22 INS8 INS43 INS21 INS43 MOV32 INS22 INS42 INS42 INS22 INS42 INS42 INS42 INS40 INS43 INS42 INS52 INS42 INS54 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS42 INS8 INS12 INS42 INS14 INS21 INS44 INS8 INS8 INS43 INS32 INS43 INS42 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS3 INS5 INS4 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS42