Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-    this.queryRateAverageLatency = new StatsAverageLatency(
-        StatsKey.QUERIES, StatType.INT_TYPE, StatsKey.QUERY_TIME, this);
+    this.queryRateAverageLatency =
+        new StatsAverageLatency(StatsKey.QUERIES, StatType.INT_TYPE, StatsKey.QUERY_TIME, this);
-    this.updateRateAverageLatency = new StatsAverageLatency(
-        StatsKey.UPDATES, StatType.INT_TYPE, StatsKey.UPDATE_TIME, this);
+    this.updateRateAverageLatency =
+        new StatsAverageLatency(StatsKey.UPDATES, StatType.INT_TYPE, StatsKey.UPDATE_TIME, this);
-    this.commitRateAverageLatency = new StatsAverageLatency(
-        StatsKey.COMMITS, StatType.INT_TYPE, StatsKey.COMMIT_TIME, this);
+    this.commitRateAverageLatency =
+        new StatsAverageLatency(StatsKey.COMMITS, StatType.INT_TYPE, StatsKey.COMMIT_TIME, this);
-    return new LuceneIndexMetrics(index.getRegionPath(), index.getName(), queryExecutions, queryExecutionTime,
-        queryRateValue, queryRateAverageLatencyValue, queryExecutionsInProgress, queryExecutionTotalHits,
-        updates, updateTime, updateRateValue, updateRateAverageLatencyValue, updatesInProgress, commits,
-        commitTime, commitRateValue, commitRateAverageLatencyValue, commitsInProgress, documents);
+    return new LuceneIndexMetrics(index.getRegionPath(), index.getName(), queryExecutions,
+        queryExecutionTime, queryRateValue, queryRateAverageLatencyValue, queryExecutionsInProgress,
+        queryExecutionTotalHits, updates, updateTime, updateRateValue,
+        updateRateAverageLatencyValue, updatesInProgress, commits, commitTime, commitRateValue,
+        commitRateAverageLatencyValue, commitsInProgress, documents);

