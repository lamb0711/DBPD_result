GEODE-3072: Events do not get removed from the client queue for 1.0 clients

EventID and ThreadIdentifier hold the serialized form of portions of an
InternalDistributedMember identifier.  This serialized form changed in
v1.0.0 and was causing .equals and .hashCode for these objects to return
false when they should have returned true owing to additional data being
in the serialized form of the identifier.

This change set modifies the equals and hashCode methods of the classes
to ensure that they return the correct results in the presence of this
additional ID data.

I created a dunit test to reproduce the problem but I think the behavior
of HARegionQueues isn't reliable enough to check in that test.  I'm
afraid that it would end up being a "flaky" test that fails periodically.
Instead, I'm relying on a new junit test and the test that Barry already
checked in.

Note: I've also included two other things in this change set.

First, LocalRegion.dumpBackingMap() is a test-hook that should log its
results at "info" level.  I used it in debugging this problem.

Second, I've added a new backward-compatibility version so now we have
100 and 110.

(cherry picked from commit ff6cbf317ab24bb0e582a3eca01c23e7b435ef35)

+import org.apache.logging.log4j.Logger;
+
+import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.internal.logging.LogService;
-    return (this.threadID == ((ThreadIdentifier) obj).threadID
-        && Arrays.equals(this.membershipID, ((ThreadIdentifier) obj).membershipID));
+    ThreadIdentifier other = (ThreadIdentifier) obj;
+    return (this.threadID == other.threadID
+        && EventID.equalMembershipIds(this.membershipID, other.membershipID));
-  // TODO: Asif : Check this implementation
-    int result = 17;
-    if (this.membershipID != null && this.membershipID.length > 0) {
-      for (int i = 0; i < this.membershipID.length; i++) {
-        result = mult * result + this.membershipID[i];
-      }
-    }
+    int result = EventID.hashCodeMemberId(membershipID);
+    sb.append("id=").append(membershipID.length).append("bytes; ");

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS60 INS21 INS43 INS59 MOV39 INS59 INS32 INS42 INS42 MOV11 MOV42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS40 INS40 INS42 INS42 INS40 INS42 INS42 INS45 DEL36 DEL42 DEL22 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL22 DEL34 DEL59 DEL60 DEL52 DEL42 DEL22 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL22 DEL34 DEL27 DEL27 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL52 DEL42 DEL22 DEL42 DEL22 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL27 DEL52 DEL42 DEL22 DEL42 DEL2 DEL27 DEL7 DEL21 DEL8 DEL24 DEL8 DEL25