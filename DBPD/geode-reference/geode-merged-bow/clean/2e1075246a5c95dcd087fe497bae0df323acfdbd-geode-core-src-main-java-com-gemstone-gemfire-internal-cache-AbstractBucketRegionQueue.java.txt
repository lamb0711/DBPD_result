Merge branch 'release/1.0.0-incubating.M3'

-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.BlockingQueue;
-import java.util.concurrent.atomic.AtomicReference;
-import java.util.concurrent.locks.ReentrantReadWriteLock;
-
-import org.apache.logging.log4j.Logger;
-
-import com.gemstone.gemfire.cache.CacheWriterException;
-import com.gemstone.gemfire.cache.EntryNotFoundException;
-import com.gemstone.gemfire.cache.Operation;
-import com.gemstone.gemfire.cache.RegionAttributes;
-import com.gemstone.gemfire.cache.RegionDestroyedException;
-import com.gemstone.gemfire.cache.TimeoutException;
-import com.gemstone.gemfire.cache.hdfs.internal.HDFSBucketRegionQueue;
-import com.gemstone.gemfire.cache.hdfs.internal.HDFSGatewayEventImpl;
+import com.gemstone.gemfire.cache.*;
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
+import com.gemstone.gemfire.internal.offheap.annotations.Released;
+import org.apache.logging.log4j.Logger;
+
+import java.util.*;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.atomic.AtomicReference;
+import java.util.concurrent.locks.ReentrantReadWriteLock;
-  private final long maximumSize = 1024 * 1024 * Long.getLong("gemfire.GATEWAY_QUEUE_THROTTLE_SIZE_MB", -1);
-  private final long throttleTime = Long.getLong("gemfire.GATEWAY_QUEUE_THROTTLE_TIME_MS", 100);
+  private final long maximumSize = 1024 * 1024 * Long.getLong(DistributionConfig.GEMFIRE_PREFIX + "GATEWAY_QUEUE_THROTTLE_SIZE_MB", -1);
+  private final long throttleTime = Long.getLong(DistributionConfig.GEMFIRE_PREFIX + "GATEWAY_QUEUE_THROTTLE_TIME_MS", 100);
-    EntryEventImpl event = getPartitionedRegion().newDestroyEntryEvent(key,
+    @Released EntryEventImpl event = getPartitionedRegion().newDestroyEntryEvent(key,
-    int sizeOfHdfsEvent = -1;
-      if (this instanceof HDFSBucketRegionQueue) {
-        // need to fetch the size before event is inserted in queue.
-        // fix for #50016
-        if (this.getBucketAdvisor().isPrimary()) {
-          HDFSGatewayEventImpl hdfsEvent = (HDFSGatewayEventImpl)event.getValue();
-          sizeOfHdfsEvent = hdfsEvent.getSizeOnHDFSInBytes(!((HDFSBucketRegionQueue)this).isBucketSorted);
-        }
-      }
-      
+
-      addToEventQueue(key, didPut, event, sizeOfHdfsEvent);
+      addToEventQueue(key, didPut, event);
-  protected abstract void addToEventQueue(Object key, boolean didPut, EntryEventImpl event, 
-      int sizeOfHdfsEvent);
+  protected abstract void addToEventQueue(Object key, boolean didPut, EntryEventImpl event);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 INS27 INS78 INS8 INS27 INS40 INS45 INS42 MOV21 MOV21 INS40 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL45 DEL45 DEL39 DEL42 DEL34 DEL38 DEL59 DEL60 DEL52 DEL42 DEL43 DEL62 DEL52 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL43 DEL52 DEL11 DEL36 DEL42 DEL22 DEL38 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL39 DEL42 DEL44