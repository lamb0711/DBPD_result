GEODE-3798: Refactor backup script code (#932)

* GEODE-3798: Refactor backup script code

  * Add tests for classes with low code coverage
  * Remove use of PrintWriter
  * General cleanup and attempts a seprarating concerns

+import java.io.BufferedWriter;
-import java.io.FileNotFoundException;
-import java.io.PrintWriter;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
-  private final Map<File, File> baselineFiles = new HashMap<File, File>();
-  private final Map<File, File> backedUpFiles = new LinkedHashMap<File, File>();
-  private final List<File> existenceTests = new ArrayList<File>();
-
-  private PrintWriter writer;
-  private File outputDir;
+  private final Map<File, File> baselineFiles = new HashMap<>();
+  private final Map<File, File> backedUpFiles = new LinkedHashMap<>();
+  private final List<File> existenceTests = new ArrayList<>();
-  RestoreScript(final ScriptGenerator generator) {
+  private RestoreScript(final ScriptGenerator generator) {
-  public void generate(final File outputDir) throws FileNotFoundException {
-    this.outputDir = outputDir;
+  public void generate(final File outputDir) throws IOException {
-    generateScript(outputFile);
-  }
+    try (BufferedWriter writer = Files.newBufferedWriter(outputFile.toPath())) {
-  private void generateScript(final File outputFile) throws FileNotFoundException {
-    writer = new PrintWriter(outputFile);
-    try {
-
-      writePreamble();
-      writeAbout();
-      writeExistenceTest();
-      writeRestoreData();
-      writeIncrementalData();
+      writePreamble(writer);
+      writeAbout(writer);
+      writeExistenceTest(writer);
+      writeRestoreData(writer, outputDir.toPath());
+      writeIncrementalData(writer);
-
-    } finally {
-      writer.close();
-  private void writePreamble() {
+  private void writePreamble(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
-  private void writeAbout() {
+  private void writeAbout(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
-  private void writeExistenceTest() {
+  private void writeExistenceTest(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
-  private void writeRestoreData() {
+  private void writeRestoreData(BufferedWriter writer, Path outputDir) throws IOException {
-      boolean backupHasFiles = backup.isDirectory() && backup.list().length != 0;
-      backup = outputDir.toPath().relativize(backup.toPath()).toFile();
+      String[] backupFiles = backup.list();
+      boolean backupHasFiles =
+          backup.isDirectory() && backupFiles != null && backupFiles.length != 0;
+      backup = outputDir.relativize(backup.toPath()).toFile();
-  private void writeIncrementalData() {
+  private void writeIncrementalData(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
+
+  public void addUserFile(File original, File dest) {
+    addExistenceTest(original);
+    addFile(original, dest);
+  }

INS26 INS26 INS40 UPD40 INS40 UPD40 INS31 INS31 INS83 MOV83 MOV39 MOV42 MOV44 UPD43 MOV43 INS8 INS44 INS43 INS44 INS43 INS44 INS43 INS44 INS44 INS43 INS44 INS43 INS83 INS39 INS42 MOV44 INS44 INS8 UPD42 MOV60 INS54 MOV21 INS43 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS42 UPD42 MOV43 INS42 MOV21 MOV21 UPD74 UPD74 UPD74 INS58 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 UPD42 UPD42 UPD42 INS60 INS21 UPD42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 MOV42 INS42 INS32 MOV32 MOV32 INS5 INS59 INS7 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS43 INS85 INS42 MOV32 INS42 INS32 INS42 INS42 INS42 INS27 INS32 INS42 MOV32 INS27 INS40 INS42 INS42 MOV32 INS42 INS33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL59 DEL23 DEL42 DEL42 DEL32 DEL7 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL8 DEL54 DEL8 DEL31 DEL42 DEL22 DEL83