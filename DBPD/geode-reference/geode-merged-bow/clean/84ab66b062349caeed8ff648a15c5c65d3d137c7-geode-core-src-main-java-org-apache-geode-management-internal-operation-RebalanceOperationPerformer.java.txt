GEODE-8272 Refactor Restore Redundancy Command (#5249)

Co-authored-by: Jinmei Liao <jiliao@pivotal.io>
Co-authored-by: Mark Hanson <mhanson@pivotal.io>

* Reimplement the RestoreRedundancyCommand using OperationPerformer
-    if (includeRegions.size() != 0) {
+    if (!includeRegions.isEmpty()) {
-      Function rebalanceFunction = new RebalanceFunction();
-      List resultList = null;
+      List<String> resultList = null;
-        resultList = (ArrayList) ManagementUtils
-            .executeFunction(rebalanceFunction, functionArgs, Collections.singleton(member))
+        resultList = (List<String>) ManagementUtils
+            .executeFunction(new RebalanceFunction(), functionArgs, Collections.singleton(member))
-      } catch (Exception ex) {
+      } catch (Exception ignored) {
-      if (resultList != null && resultList.size() > 0) {
-        List<String> rstList = Arrays.asList(((String) resultList.get(0)).split(","));
+      if (resultList != null && !resultList.isEmpty()) {
+        List<String> rstList = Arrays.asList(resultList.get(0).split(","));
-        result = (RebalanceRegionResultImpl) toRebalanceRegionResut(rstList);
+        result = toRebalanceRegionResult(rstList);
-  public static DistributedMember getAssociatedMembers(String region, final InternalCache cache) {
+  public static DistributedMember getAssociatedMembers(String region, InternalCache cache) {
-    Iterator it = dsMembers.iterator();
+    Iterator<DistributedMember> it = dsMembers.iterator();
-        DistributedMember dsmember = (DistributedMember) it.next();
+        DistributedMember dsMember = it.next();
-          if (MBeanJMXAdapter.getMemberNameOrUniqueId(dsmember).equals(memberName)) {
-            member = dsmember;
+          if (MBeanJMXAdapter.getMemberNameOrUniqueId(dsMember).equals(memberName)) {
+            member = dsMember;
-    final Set<DistributedMember> dsMembers = ManagementUtils.getAllMembers(cache);
+    Set<DistributedMember> dsMembers = ManagementUtils.getAllMembers(cache);
-      for (String aListExcludedRegion : listExcludedRegion) {
-        // this is needed since region name may start with / or without it
-        // also
-        String excludedRegion = aListExcludedRegion.trim();
-        if (regionName.startsWith(SEPARATOR)) {
-          if (!excludedRegion.startsWith(SEPARATOR)) {
+      if (listExcludedRegion != null) {
+        for (String aListExcludedRegion : listExcludedRegion) {
+          // this is needed since region name may start with / or without it
+          String excludedRegion = aListExcludedRegion.trim();
+          if (regionName.startsWith(SEPARATOR) && !excludedRegion.startsWith(SEPARATOR)) {
-        }
-        if (excludedRegion.startsWith(SEPARATOR)) {
-          if (!regionName.startsWith(SEPARATOR)) {
+
+          if (excludedRegion.startsWith(SEPARATOR) && !regionName.startsWith(SEPARATOR)) {
-        }
-        if (excludedRegion.equals(regionName)) {
-          excludedRegionMatch = true;
-          break;
+          if (excludedRegion.equals(regionName)) {
+            excludedRegionMatch = true;
+            break;
+          }
-          for (DistributedMember dsmember : dsMembers) {
+          for (DistributedMember dsMember : dsMembers) {
-              if (MBeanJMXAdapter.getMemberNameOrUniqueId(dsmember).equals(memberName)) {
+              if (MBeanJMXAdapter.getMemberNameOrUniqueId(dsMember).equals(memberName)) {
-                memberAndItsPRRegions.dsMemberList.add(dsmember);
+                memberAndItsPRRegions.dsMemberList.add(dsMember);
-                  listMember.dsMemberList.add(dsmember);
+                  listMember.dsMemberList.add(dsMember);
-    if (listMemberRegion.size() == 0) {
+    if (listMemberRegion.isEmpty()) {
-            Function rebalanceFunction = new RebalanceFunction();
+            RebalanceFunction rebalanceFunction = new RebalanceFunction();
-                rebalanceRegionResults.add(toRebalanceRegionResut(rstList));
+                rebalanceRegionResults.add(toRebalanceRegionResult(rstList));
-            rebalanceRegionResults.add(toRebalanceRegionResut(rstList));
+            rebalanceRegionResults.add(toRebalanceRegionResult(rstList));
-    if (0 == rebalanceRegionResults.size()) {
+    if (rebalanceRegionResults.isEmpty()) {
-  private static RebalanceRegionResult toRebalanceRegionResut(List<String> rstList) {
+  private static RebalanceRegionResult toRebalanceRegionResult(List<String> rstList) {
-        return this.region.equals(((MemberPRInfo) o2).region);
+        return region.equals(((MemberPRInfo) o2).region);
-      return this.region.hashCode();
+      return region.hashCode();

UPD42 INS38 INS74 INS32 INS32 INS32 MOV43 INS43 INS25 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS74 INS42 INS27 INS8 INS42 INS43 INS43 INS38 INS42 INS33 MOV70 INS42 INS42 UPD42 INS32 MOV43 INS42 MOV42 UPD42 MOV42 INS32 UPD42 MOV32 MOV25 MOV25 INS74 UPD42 MOV42 MOV42 INS27 INS27 MOV43 INS43 INS32 MOV32 MOV38 MOV32 INS38 UPD42 UPD42 MOV42 INS14 MOV42 MOV42 MOV34 UPD42 MOV32 UPD43 INS43 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL32 DEL34 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL43 DEL42 DEL32 DEL34 DEL27 DEL42 DEL43 DEL32 DEL11 DEL36 DEL42 DEL43 DEL32 DEL11 DEL83 DEL42 DEL43 DEL11 DEL83 DEL38 DEL8 DEL25 DEL8 DEL25 DEL32 DEL34 DEL27 DEL34 DEL32 DEL27 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22