Merge branch 'release/1.5.0'

-import java.util.Properties;
-import org.apache.geode.cache.Cache;
-  public String getName();
+  String getName();
-  public int getSocketConnectTimeout();
+  int getSocketConnectTimeout();
-  public int getFreeConnectionTimeout();
+  int getFreeConnectionTimeout();
-  public int getLoadConditioningInterval();
+  int getLoadConditioningInterval();
-  public int getSocketBufferSize();
+  int getSocketBufferSize();
-  public int getReadTimeout();
+  int getReadTimeout();
-  public int getMinConnections();
+  int getMinConnections();
-  public int getMaxConnections();
+  int getMaxConnections();
-  public long getIdleTimeout();
+  long getIdleTimeout();
-  public long getPingInterval();
+  long getPingInterval();
-  public int getStatisticInterval();
+  int getStatisticInterval();
-  public int getRetryAttempts();
+  int getRetryAttempts();
-  public boolean getThreadLocalConnections();
+  boolean getThreadLocalConnections();
-  public boolean getSubscriptionEnabled();
+  boolean getSubscriptionEnabled();
-  public boolean getPRSingleHopEnabled();
+  boolean getPRSingleHopEnabled();
-  public int getSubscriptionRedundancy();
+  int getSubscriptionRedundancy();
-  public int getSubscriptionMessageTrackingTimeout();
+  int getSubscriptionMessageTrackingTimeout();
-  public int getSubscriptionAckInterval();
+  int getSubscriptionAckInterval();
-  public String getServerGroup();
+  String getServerGroup();
-  public boolean getMultiuserAuthentication();
+  boolean getMultiuserAuthentication();
-  public java.util.List<InetSocketAddress> getLocators();
+  java.util.List<InetSocketAddress> getLocators();
-  public java.util.List<InetSocketAddress> getOnlineLocators();
+  java.util.List<InetSocketAddress> getOnlineLocators();
-  public java.util.List<InetSocketAddress> getServers();
+  java.util.List<InetSocketAddress> getServers();
-  public void destroy(boolean keepAlive);
+  void destroy(boolean keepAlive);
-  public void destroy();
+  void destroy();
-  public boolean isDestroyed();
+  boolean isDestroyed();
-  public void releaseThreadLocalConnection();
+  void releaseThreadLocalConnection();
-  public QueryService getQueryService();
+  QueryService getQueryService();
-  public int getPendingEventCount();
+  int getPendingEventCount();
+  /**
+   * A server has an inactivity monitor that ensures a message is sent to a client at least once a
+   * minute (60,000 milliseconds). If a subscription timeout multipler is set in the client it
+   * enables timing out of the subscription feed with failover to another server.
+   *
+   * @see PoolFactory#setSubscriptionTimeoutMultiplier(int)
+   *
+   * @return The timeout multiplier
+   */
+  int getSubscriptionTimeoutMultiplier();

INS31 INS29 INS39 INS42 INS65 INS65 INS65 INS66 INS66 INS66 INS68 INS66 INS42 INS42 INS69 INS39 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83