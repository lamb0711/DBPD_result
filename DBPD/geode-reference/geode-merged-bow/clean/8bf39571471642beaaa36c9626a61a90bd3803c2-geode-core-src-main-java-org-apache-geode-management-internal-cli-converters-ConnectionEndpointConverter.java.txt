Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  static final String DEFAULT_JMX_HOST      = "localhost";
-  static final int    DEFAULT_JMX_PORT      = 1099;
-  static final String DEFAULT_JMX_ENDPOINTS = DEFAULT_JMX_HOST+"["+DEFAULT_JMX_PORT+"]";
-  
-  public static final String DEFAULT_LOCATOR_HOST      = "localhost";
-  public static final int    DEFAULT_LOCATOR_PORT      = 10334;
-  public static final String DEFAULT_LOCATOR_ENDPOINTS = DEFAULT_LOCATOR_HOST+"["+DEFAULT_LOCATOR_PORT+"]";
+  static final String DEFAULT_JMX_HOST = "localhost";
+  static final int DEFAULT_JMX_PORT = 1099;
+  static final String DEFAULT_JMX_ENDPOINTS = DEFAULT_JMX_HOST + "[" + DEFAULT_JMX_PORT + "]";
+
+  public static final String DEFAULT_LOCATOR_HOST = "localhost";
+  public static final int DEFAULT_LOCATOR_PORT = 10334;
+  public static final String DEFAULT_LOCATOR_ENDPOINTS =
+      DEFAULT_LOCATOR_HOST + "[" + DEFAULT_LOCATOR_PORT + "]";
-  public ConnectionEndpoint convertFromText(String value, Class<?> targetType, String optionContext) {
-    //expected format host[port], port is optional
+  public ConnectionEndpoint convertFromText(String value, Class<?> targetType,
+      String optionContext) {
+    // expected format host[port], port is optional
-    
+
-    int port       = DEFAULT_JMX_PORT;
-    
+    int port = DEFAULT_JMX_PORT;
+
-      int openIndex  = endpointStr.indexOf("[");
+      int openIndex = endpointStr.indexOf("[");
-      if (openIndex != -1) {//might have a port
+      if (openIndex != -1) {// might have a port
-          throw new IllegalArgumentException("Expected input: host[port] or host. Invalid value specified endpoints : "+value);
+          throw new IllegalArgumentException(
+              "Expected input: host[port] or host. Invalid value specified endpoints : " + value);
-        
+
-          throw new IllegalArgumentException("Expected input: host[port] or host. Invalid value specified endpoints : "+value);
+          throw new IllegalArgumentException(
+              "Expected input: host[port] or host. Invalid value specified endpoints : " + value);
-          throw new IllegalArgumentException("Expected input: host[port], Port should be a valid number between 1024-65536. Invalid value specified endpoints : "+value);
+          throw new IllegalArgumentException(
+              "Expected input: host[port], Port should be a valid number between 1024-65536. Invalid value specified endpoints : "
+                  + value);
-        
-        
-      } else if (closeIndex != -1) { //shouldn't be there if opening brace was not there
-        throw new IllegalArgumentException("Expected input: host[port] or host. Invalid value specified endpoints : "+value);
-      } else {//doesn't contain brackets, assume only host name is given & assume default port
+
+
+      } else if (closeIndex != -1) { // shouldn't be there if opening brace was not there
+        throw new IllegalArgumentException(
+            "Expected input: host[port] or host. Invalid value specified endpoints : " + value);
+      } else {// doesn't contain brackets, assume only host name is given & assume default port
-  public boolean getAllPossibleValues(List<Completion> completions,
-      Class<?> targetType, String existingData, String optionContext,
-      MethodTarget target) {
+  public boolean getAllPossibleValues(List<Completion> completions, Class<?> targetType,
+      String existingData, String optionContext, MethodTarget target) {
-    
+
-  
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
-    
+
+

