Merge branch 'release/1.4.0'

- * 
+ *
- * 
+ *
+import java.util.Collection;
+import java.util.Collections;
+import org.apache.geode.cache.lucene.LuceneIndex;
+import org.apache.geode.cache.lucene.LuceneSerializer;
-   * The set of indexed fields for this mapper
-   */
-  private String[] indexedFields;
-
-  /**
-   * 
+   *
-  public HeterogeneousLuceneSerializer(String[] indexedFields) {
-    this.indexedFields = indexedFields;
-    pdxMapper = new PdxLuceneSerializer(indexedFields);
+  public HeterogeneousLuceneSerializer() {
+    final PrimitiveSerializer primitiveSerializer = new PrimitiveSerializer();
+    SerializerUtil.supportedPrimitiveTypes().stream()
+        .forEach(type -> mappers.put(type, primitiveSerializer));
-
-    addSerializersForPrimitiveValues();
-  }
-
-  /**
-   * Add serializers for the primitive value types (String, Number, etc.) if the user has requested
-   * that the whole value be serialized
-   */
-  private void addSerializersForPrimitiveValues() {
-    if (Arrays.asList(indexedFields).contains(LuceneService.REGION_VALUE_FIELD)) {
-      final PrimitiveSerializer primitiveSerializer = new PrimitiveSerializer();
-      SerializerUtil.supportedPrimitiveTypes().stream()
-          .forEach(type -> mappers.put(type, primitiveSerializer));
-    }
+    pdxMapper = new PdxLuceneSerializer();
-  public void toDocument(Object value, Document doc) {
+  public Collection<Document> toDocuments(LuceneIndex index, Object value) {
-      return;
+      return Collections.emptyList();
-    LuceneSerializer mapper = getFieldMapper(value);
+    LuceneSerializer mapper = getFieldMapper(value, index.getFieldNames());
-    mapper.toDocument(value, doc);
+    Collection<Document> docs = mapper.toDocuments(index, value);
-      logger.debug("HeterogeneousLuceneSerializer.toDocument:" + doc);
+      logger.debug("HeterogeneousLuceneSerializer.toDocuments:" + docs);
+
+    return docs;
-  private LuceneSerializer getFieldMapper(Object value) {
+  private LuceneSerializer getFieldMapper(Object value, String[] indexedFields) {
-

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 UPD83 UPD42 MOV8 MOV78 INS83 INS74 UPD42 MOV42 MOV44 MOV44 MOV8 MOV44 MOV21 INS43 INS43 INS43 INS42 INS60 INS41 UPD42 MOV42 INS42 INS42 INS74 INS59 INS42 INS43 MOV43 INS42 INS32 INS32 INS32 INS42 MOV42 UPD42 MOV42 INS42 MOV42 INS42 INS42 INS42 INS42 UPD45 UPD42 DEL66 DEL65 DEL29 DEL83 DEL43 DEL85 DEL5 DEL42 DEL59 DEL23 DEL83 DEL42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL66 DEL65 DEL29 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL25 DEL8 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL31