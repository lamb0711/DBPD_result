GEODE-77: faster network-partition detection, bugfixes for auto-reconnect

network-partition-detection was taking too long to initiate.  This adds checks for IOExceptions to the Transport class to initiate member checks, shrinking the time to detect partitions.

There were still problems with auto-reconnect not being able to join while the old member ID was still in the view.  It would also sometimes install a view and think it had joined when it had not, causing other members to reject messages from the new "member" and resulting in a hung test.  GMSJoinLeave now rejects view messages that don't contain an appropriate member ID during the join process, and installView is smarter about what views it will accept as well.

The view creator was being stubborn about exiting during shutdown.  I've added additional checks to it so that it won't accidentally create another view when GMSJoinLeave is in the process of stopping.

-      // establish TCP connection
-//      for (Map.Entry<InternalDistributedMember, InetSocketAddress> entry : socketInfo.entrySet()) {
-//        logger.info("socketInfo member:" + entry.getKey() + " port:" + entry.getValue().getPort());
-//      }
-      throw new GemFireConfigException("Unable to allocate a failure detection port in the membership-port range");
+      throw new GemFireConfigException("Unable to allocate a failure detection port in the membership-port range", e);
+            if (isStopping) {
+              return;
+            }
+          if (isStopping) {
+            return;
+          }
-    initiateSuspicion(localAddress, "beSick invoked on GMSHealthMonitor");
-    initiateSuspicion(localAddress, "playDead invoked on GMSHealthMonitor");

INS42 INS25 INS42 INS8 INS25 INS41 INS42 INS8 INS41 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21