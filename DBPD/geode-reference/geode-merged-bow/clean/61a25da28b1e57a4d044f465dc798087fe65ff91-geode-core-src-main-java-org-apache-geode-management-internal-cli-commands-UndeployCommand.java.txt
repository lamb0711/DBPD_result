GEODE-5971: Refactoring various commands (#3294)

* GEODE-5971: Refactoring various commands

- DeployCommand
- DestroyFunctionCommand
- ExecuteFunctionCommand
- ListDeployedCommand
- ListFunctionCommand
- UndeployCommand

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

+import java.util.Map;
-import org.apache.geode.SystemFailure;
-import org.apache.geode.cache.execute.ResultCollector;
+import org.apache.geode.management.cli.GfshCommand;
-import org.apache.geode.management.internal.cli.CliUtil;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.remote.CommandExecutor;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-public class UndeployCommand extends InternalGfshCommand {
+public class UndeployCommand extends GfshCommand {
-  public Result undeploy(
+  public ResultModel undeploy(
-    try {
-      TabularResultData tabularData = ResultBuilder.createTabularResultData();
-      boolean accumulatedData = false;
+    Set<DistributedMember> targetMembers = findMembers(groups, null);
-      Set<DistributedMember> targetMembers = findMembers(groups, null);
-
-      if (targetMembers.isEmpty()) {
-        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-      }
-
-      ResultCollector<?, ?> rc =
-          CliUtil.executeFunction(this.undeployFunction, new Object[] {jars}, targetMembers);
-      List<CliFunctionResult> results = CliFunctionResult.cleanResults((List<?>) rc.getResult());
-
-      for (CliFunctionResult result : results) {
-
-        if (result.getThrowable() != null) {
-          tabularData.accumulate("Member", result.getMemberIdOrName());
-          tabularData.accumulate("Un-Deployed JAR", "");
-          tabularData.accumulate("Un-Deployed JAR Location",
-              "ERROR: " + result.getThrowable().getClass().getName() + ": "
-                  + result.getThrowable().getMessage());
-          accumulatedData = true;
-          tabularData.setStatus(Result.Status.ERROR);
-        } else {
-          String[] strings = (String[]) result.getSerializables();
-          for (int i = 0; i < strings.length; i += 2) {
-            tabularData.accumulate("Member", result.getMemberIdOrName());
-            tabularData.accumulate("Un-Deployed JAR", strings[i]);
-            tabularData.accumulate("Un-Deployed From JAR Location", strings[i + 1]);
-            accumulatedData = true;
-          }
-        }
-      }
-
-      if (!accumulatedData) {
-        return ResultBuilder.createInfoResult(CliStrings.UNDEPLOY__NO_JARS_FOUND_MESSAGE);
-      }
-
-      Result result = ResultBuilder.buildResult(tabularData);
-      if (tabularData.getStatus().equals(Result.Status.OK)) {
-        persistClusterConfiguration(result,
-            () -> ((InternalConfigurationPersistenceService) getConfigurationPersistenceService())
-                .removeJars(jars, groups));
-      }
-      return result;
-    } catch (VirtualMachineError e) {
-      SystemFailure.initiateFailure(e);
-      throw e;
-    } catch (Throwable th) {
-      SystemFailure.checkFailure();
-      return ResultBuilder.createGemFireErrorResult("Exception while attempting to un-deploy: "
-          + th.getClass().getName() + ": " + th.getMessage());
+    if (targetMembers.isEmpty()) {
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+
+    List<CliFunctionResult> results =
+        executeAndGetFunctionResult(this.undeployFunction, new Object[] {jars}, targetMembers);
+
+    ResultModel result = new ResultModel();
+    TabularResultModel tabularData = result.addTable("jars");
+    for (CliFunctionResult cliResult : results) {
+      if (!cliResult.isSuccessful()) {
+        result.setStatus(Result.Status.ERROR);
+      }
+
+      Map<String, String> undeployedJars = (Map<String, String>) cliResult.getResultObject();
+      if (undeployedJars == null) {
+        continue;
+      }
+
+      for (String key : undeployedJars.keySet()) {
+        tabularData.accumulate("Member", cliResult.getMemberIdOrName());
+        tabularData.accumulate("Un-Deployed JAR", key);
+        tabularData.accumulate("Un-Deployed From JAR Location", undeployedJars.get(key));
+      }
+    }
+
+    if (tabularData.getRowSize() == 0) {
+      return ResultModel.createInfo(CliStrings.UNDEPLOY__NO_JARS_FOUND_MESSAGE);
+    }
+
+    if (result.getStatus() != Result.Status.OK) {
+      return result;
+    }
+    if (getConfigurationPersistenceService() == null) {
+      result.addInfo().addLine(CommandExecutor.SERVICE_NOT_RUNNING_CHANGE_NOT_PERSISTED);
+    } else {
+      ((InternalConfigurationPersistenceService) getConfigurationPersistenceService())
+          .removeJars(jars, groups);
+    }
+
+    return result;

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 MOV60 MOV25 MOV60 MOV60 INS60 INS70 MOV25 INS25 MOV25 MOV41 UPD74 INS43 INS43 INS59 MOV44 INS42 INS8 INS27 INS27 INS8 INS27 INS8 MOV43 MOV43 UPD42 UPD42 MOV42 UPD42 INS14 INS42 INS42 INS32 UPD42 INS25 MOV60 INS25 INS70 INS32 INS34 INS32 INS40 MOV41 INS32 INS33 INS21 UPD42 MOV42 UPD42 INS43 MOV42 UPD42 MOV42 UPD45 MOV45 INS38 INS8 INS74 INS27 INS8 INS44 INS32 INS8 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 MOV32 UPD42 UPD42 UPD42 MOV42 INS32 MOV21 INS43 INS43 INS43 UPD42 UPD42 MOV42 INS33 INS18 MOV43 INS42 INS42 INS42 MOV21 MOV21 MOV21 UPD42 UPD42 MOV32 UPD42 MOV42 UPD40 MOV40 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS74 UPD42 UPD42 UPD42 INS43 MOV43 INS43 UPD42 UPD42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 DEL76 DEL76 DEL42 DEL42 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL32 DEL11 DEL32 DEL85 DEL5 DEL85 DEL5 DEL42 DEL42 DEL2 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL38 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL32 DEL42 DEL42 DEL86 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL45 DEL42 DEL32 DEL32 DEL21 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL32 DEL32 DEL27 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL39 DEL42 DEL34 DEL59 DEL58 DEL40 DEL27 DEL42 DEL34 DEL7 DEL42 DEL9 DEL7 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54