Merge branch 'release/1.5.0'

-package org.apache.geode.internal.cache;
+package org.apache.geode.internal.cache.tx;
-import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.ClusterDistributionManager;
+import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.internal.cache.RegionEntry;
+import org.apache.geode.internal.cache.RemoteOperationException;
- * DistributedRegions with DataPolicy EMPTY, NORMAL, PRELOADED, can use this message to fetch
- * VersionTag for a key.
+ * DistributedRegions with DataPolicy NORMAL, PRELOADED, use this message to fetch VersionTag for a
+ * key when a tx is in progress (see TXEntryState.fetchRemoteVersionTag).
-  public boolean isSevereAlertCompatible() {
-    // allow forced-disconnect processing for all cache op messages
-    return true;
-  }
-
-  @Override
-  public int getProcessorType() {
-    return DistributionManager.SERIAL_EXECUTOR;
-  }
-
-  @Override
-  protected boolean operateOnRegion(DistributionManager dm, LocalRegion r, long startTime)
+  protected boolean operateOnRegion(ClusterDistributionManager dm, LocalRegion r, long startTime)
-    if (!(r instanceof PartitionedRegion)) {
-      r.waitOnInitialization();
-    }
-    VersionTag tag;
+    r.waitOnInitialization();
+    VersionTag<?> tag;
-    private VersionTag tag;
+    private VersionTag<?> tag;
-    private FetchVersionReplyMessage(int processorId, VersionTag tag) {
+    private FetchVersionReplyMessage(int processorId, VersionTag<?> tag) {
-    public static void send(InternalDistributedMember recipient, int processorId, VersionTag tag,
-        DM dm) {
+    public static void send(InternalDistributedMember recipient, int processorId, VersionTag<?> tag,
+        DistributionManager dm) {
-    public void process(DM dm, ReplyProcessor21 processor) {
+    public void process(DistributionManager dm, ReplyProcessor21 processor) {
-    private volatile VersionTag tag;
+    private volatile VersionTag<?> tag;
-    public VersionTag waitForResponse() throws RemoteOperationException {
+    public VersionTag<?> waitForResponse() throws RemoteOperationException {
-        waitForCacheException();
+        waitForRemoteResponse();

INS26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS40 INS44 UPD66 UPD66 INS43 INS42 MOV21 INS74 INS44 MOV44 MOV44 INS74 INS74 INS42 INS74 MOV43 INS76 INS74 INS42 INS74 UPD43 MOV43 INS76 MOV43 INS76 MOV43 INS76 MOV43 INS76 MOV43 INS76 UPD42 UPD42 DEL42 DEL78 DEL83 DEL39 DEL42 DEL9 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL40 DEL41 DEL8 DEL31 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL8 DEL25 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44