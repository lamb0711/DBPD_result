Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * MBean that provides access to information and management functionality for a
- * {@link DiskStore}.
+ * MBean that provides access to information and management functionality for a {@link DiskStore}.
-  
+
-  
+
-   * Returns the threshold at which an op-log may be compacted. Until it
-   * reaches this threshold the op-log will not be compacted. The threshold is
-   * a percentage in the range 0..100.
+   * Returns the threshold at which an op-log may be compacted. Until it reaches this threshold the
+   * op-log will not be compacted. The threshold is a percentage in the range 0..100.
-   * Returns the time (in milliseconds) that can elapse before unwritten
-   * data is saved to disk.
+   * Returns the time (in milliseconds) that can elapse before unwritten data is saved to disk.
-  
+
-   * Returns the size of the write buffer that this DiskStore will use when
-   * writing data to disk.
+   * Returns the size of the write buffer that this DiskStore will use when writing data to disk.
-   * Returns the path of the directories to which the region's data will be
-   * written.
+   * Returns the path of the directories to which the region's data will be written.
-   * Returns the maximum number of operations that can be asynchronously
-   * queued for saving to disk. When this limit is reached operations
-   * will block until they can be put in the queue.
+   * Returns the maximum number of operations that can be asynchronously queued for saving to disk.
+   * When this limit is reached operations will block until they can be put in the queue.
-   * Returns the average latency of disk reads in nanoseconds Its the average
-   * latency required to read a byte from disk.
+   * Returns the average latency of disk reads in nanoseconds Its the average latency required to
+   * read a byte from disk.
-   * Each entry in region has some overhead in terms of number of extra bytes
-   * while persisting data. So this rate won't match the number of bytes put in
-   * all regions.This is rate of actual bytes system is persisting.
+   * Each entry in region has some overhead in terms of number of extra bytes while persisting data.
+   * So this rate won't match the number of bytes put in all regions.This is rate of actual bytes
+   * system is persisting.
-   * Returns the average latency of disk writes in nanoseconds. Its the average
-   * latency required to write a byte to disk.
+   * Returns the average latency of disk writes in nanoseconds. Its the average latency required to
+   * write a byte to disk.
-   * Each entry in region has some overhead in terms of number of extra bytes
-   * while persisting data. So this rate won't match the number of bytes put in
-   * all regions. This is rate of actual bytes system is persisting.
+   * Each entry in region has some overhead in terms of number of extra bytes while persisting data.
+   * So this rate won't match the number of bytes put in all regions. This is rate of actual bytes
+   * system is persisting.
-   * Returns the disk reads average latency in nanoseconds. It depicts average
-   * time needed to read one byte of data from disk.
+   * Returns the disk reads average latency in nanoseconds. It depicts average time needed to read
+   * one byte of data from disk.
-   * Returns the disk writes average latency in nanoseconds. It depicts average
-   * time needed to write one byte of data to disk.
+   * Returns the disk writes average latency in nanoseconds. It depicts average time needed to write
+   * one byte of data to disk.
-   * Returns the number of entries in the asynchronous queue waiting to be written
-   * to disk.
+   * Returns the number of entries in the asynchronous queue waiting to be written to disk.
-  
+
-   * Requests the DiskStore to start writing to a new op-log. The old oplog will
-   * be asynchronously compressed if compaction is set to true. The new op-log will
-   * be created in the next available directory with free space. If there is no
-   * directory with free space available and compaction is set to false, then a
-   * DiskAccessException saying that the disk is full will be thrown. If
-   * compaction is true then the application will wait for the other op-logs to
-   * be compacted and additional space is available.
+   * Requests the DiskStore to start writing to a new op-log. The old oplog will be asynchronously
+   * compressed if compaction is set to true. The new op-log will be created in the next available
+   * directory with free space. If there is no directory with free space available and compaction is
+   * set to false, then a DiskAccessException saying that the disk is full will be thrown. If
+   * compaction is true then the application will wait for the other op-logs to be compacted and
+   * additional space is available.
-   * Requests the DiskStore to start compacting. The compaction is done even if
-   * automatic compaction is not configured. If the current, active op-log has
-   * had data written to it, and may be compacted, then an implicit  call to
-   * forceRoll will be made so that the active op-log can be compacted. This
-   * method will block until compaction finishes.
+   * Requests the DiskStore to start compacting. The compaction is done even if automatic compaction
+   * is not configured. If the current, active op-log has had data written to it, and may be
+   * compacted, then an implicit call to forceRoll will be made so that the active op-log can be
+   * compacted. This method will block until compaction finishes.
-   * @return True if one or more op-logs were compacted or false to indicate
-   *         that no op-logs were ready to be compacted or that a compaction was
-   *         already in progress.
+   * @return True if one or more op-logs were compacted or false to indicate that no op-logs were
+   *         ready to be compacted or that a compaction was already in progress.
-  
+
-   * Causes any data that is currently in the asynchronous queue to be written
-   * to disk. Does not return until the flush is complete.
+   * Causes any data that is currently in the asynchronous queue to be written to disk. Does not
+   * return until the flush is complete.
-   * Returns the warning threshold for disk usage as a percentage of the total 
-   * disk volume.
+   * Returns the warning threshold for disk usage as a percentage of the total disk volume.
-   * Returns the critical threshold for disk usage as a percentage of the total 
-   * disk volume.
+   * Returns the critical threshold for disk usage as a percentage of the total disk volume.
-  
+
-  
+

MOV77 MOV77 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66