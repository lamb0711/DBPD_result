Adding an implementation of LuceneQueryResults

This implementation does not support project fields yet, but it does
provide pagination by holding a set of all matching keys and fetching
the next set of values using the keys.

-import java.util.concurrent.TimeUnit;
+import java.util.Map;
-import com.gemstone.gemfire.cache.execute.FunctionException;
-import com.gemstone.gemfire.cache.execute.ResultCollector;
+import com.gemstone.gemfire.cache.Region;
-import com.gemstone.gemfire.distributed.DistributedMember;
+import com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScore;
-public class LuceneQueryResultsImpl implements LuceneQueryResults,
-    ResultCollector<LuceneQueryResults, List<LuceneQueryResults>> {
+/**
+ * Implementation of LuceneQueryResults that fetchs a page at a time
+ * from the server, given a set of EntryScores (key and score).
+ *
+ * @param <K> The type of the key
+ * @param <V> The type of the value
+ */
+public class LuceneQueryResultsImpl<K,V> implements LuceneQueryResults<K,V> {
-  // list of docs matching search query
-  private List<LuceneResultStruct> hits = new ArrayList<>();
+  /**
+   *  list of docs matching search query
+   */
+  private final List<EntryScore> hits;
+  
+  /**
+   * The maximum score. Lazily evaluated
+   */
-
-  @Override
-  public List<LuceneQueryResults> getResult() throws FunctionException {
-    // TODO Auto-generated method stub
-    return null;
+  
+  /**
+   * The user region where values are stored.
+   */
+  private final Region<K, V> userRegion;
+  
+  /**
+   * The start of the next page of results we want to fetch 
+   */
+  private int currentHit = 0;
+  
+  /**
+   * The page size the user wants.
+   */
+  private int pageSize;
+  
+  public LuceneQueryResultsImpl(List<EntryScore> hits, Region<K,V> userRegion, int pageSize) {
+    this.hits = hits;
+    this.userRegion = userRegion;
+    this.pageSize = pageSize;
-  public List<LuceneQueryResults> getResult(long timeout, TimeUnit unit) throws FunctionException, InterruptedException {
-    // TODO Auto-generated method stub
-    return null;
-  }
+  public List<LuceneResultStruct<K,V>> getNextPage() {
+    if(!hasNextPage()) {
+      return null;
+    }
+    
+    int end = currentHit + pageSize;
+    end = end > hits.size() ? hits.size() : end;
+    List<EntryScore> scores = hits.subList(currentHit, end);
+    
+    ArrayList<K> keys = new ArrayList<K>(hits.size());
+    for(EntryScore score : scores) {
+      keys.add((K) score.getKey());
+    }
+    
+    Map<K,V> values = userRegion.getAll(keys);
+    
+    ArrayList<LuceneResultStruct<K,V>> results = new ArrayList<LuceneResultStruct<K,V>>(hits.size());
+    for(EntryScore score : scores) {
+      V value = values.get(score.getKey());
+      results.add(new LuceneResultStructImpl(score.getKey(), value, score.getScore()));
+    }
+    
-  @Override
-  public void addResult(DistributedMember memberID, LuceneQueryResults resultOfSingleExecution) {
-    // results.add(resultOfSingleExecution);
-  }
-
-  @Override
-  public void endResults() {
-    // TODO Auto-generated method stub
-
-  }
-
-  @Override
-  public void clearResults() {
-    // TODO Auto-generated method stub
-
-  }
-
-  @Override
-  public List<LuceneResultStruct> getNextPage() {
-    return null;
+    currentHit = end;
+    
+    return results;
-    return false;
-  }
-
-  @Override
-  public Object getID() {
-    // TODO Auto-generated method stub
-    return null;
+    return hits.size() > currentHit;
-    return maxScore;
-  }
-
-  /**
-   * Adds a result hit to the result set
-   * 
-   * @param hit
-   */
-  public void addHit(LuceneResultStruct hit) {
-    hits.add(hit);
-    if (hit.getScore() > maxScore) {
-      maxScore = hit.getScore();
+    if(maxScore == Float.MIN_VALUE) {
+      for(EntryScore score : hits) {
+        maxScore = Math.max(maxScore, score.getScore());
+      }
+    
+    return maxScore;

MOV23 UPD40 UPD40 UPD40 INS29 INS73 INS73 INS74 INS23 INS23 INS23 INS31 INS31 INS31 INS65 INS65 INS65 INS42 INS42 MOV43 INS43 UPD43 MOV43 INS29 INS83 INS83 UPD74 MOV74 INS59 INS29 INS29 INS83 INS83 INS74 INS59 INS29 INS39 INS29 INS83 INS39 INS59 MOV83 UPD42 MOV42 INS44 INS44 INS44 INS8 MOV78 MOV83 INS74 UPD42 MOV42 INS8 MOV78 MOV83 MOV39 MOV42 MOV8 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 UPD42 MOV42 UPD42 INS65 UPD43 INS42 INS65 INS65 UPD43 MOV43 UPD43 MOV43 INS43 INS42 INS65 UPD42 INS34 INS65 INS42 UPD74 MOV74 INS42 INS74 INS42 INS39 INS42 INS21 INS21 INS21 MOV43 INS74 INS25 INS60 INS21 INS60 INS60 INS70 INS60 INS60 INS70 INS21 MOV41 MOV41 INS66 UPD42 INS66 INS66 UPD42 UPD42 INS42 INS66 INS66 UPD43 INS43 INS43 INS43 INS7 INS7 INS7 MOV43 INS43 INS43 INS38 MOV8 INS39 INS59 INS7 UPD74 MOV74 INS59 UPD74 MOV74 INS59 INS44 INS42 INS8 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS7 INS42 INS27 INS27 INS8 UPD42 UPD42 MOV42 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS16 INS43 INS42 INS32 INS43 INS42 INS14 UPD43 MOV43 UPD42 MOV42 INS21 INS43 INS43 INS43 INS42 INS32 INS43 INS74 INS42 INS14 INS43 INS42 INS60 INS21 INS42 INS42 INS32 INS42 INS42 INS40 INS70 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS32 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS43 INS43 INS74 INS32 INS42 INS43 INS59 INS32 INS42 INS42 INS44 INS42 INS8 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS43 INS74 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS43 INS42 MOV21 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS42 MOV43 INS43 INS43 INS42 INS42 INS32 INS43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 UPD42 MOV42 MOV42 DEL40 DEL26 DEL43 DEL42 DEL43 DEL74 DEL74 DEL14 DEL33 DEL42 DEL78 DEL43 DEL33 DEL41 DEL8 DEL31 DEL42 DEL78 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL43 DEL43 DEL33 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL44 DEL42 DEL44 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL8 DEL31 DEL42 DEL78 DEL83 DEL74 DEL42 DEL8 DEL31 DEL9 DEL42 DEL43 DEL42 DEL31 DEL42 DEL42 DEL42 DEL32 DEL21 DEL32 DEL42 DEL42 DEL32 DEL42 DEL27 DEL8 DEL83 DEL8 DEL31 DEL66 DEL65 DEL42 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL44 DEL31