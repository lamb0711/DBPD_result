Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * @version     $Revision: 1.2 $
+ * @version $Revision: 1.2 $
-  
-  
+
+
-  
+
-  throws TypeMismatchException, AmbiguousNameException {
+      throws TypeMismatchException, AmbiguousNameException {
-    if (val.getType() == PATH && ((CompiledPath)val).getReceiver() == itr) {
+    if (val.getType() == PATH && ((CompiledPath) val).getReceiver() == itr) {
-  
+
-  
-  
-  
+
+
+
-  
+
-  public Set  computeDependencies(ExecutionContext context)
-  throws TypeMismatchException, AmbiguousNameException, NameResolutionException {
+  public Set computeDependencies(ExecutionContext context)
+      throws TypeMismatchException, AmbiguousNameException, NameResolutionException {
-  
-  public Object evaluate(ExecutionContext context)
-  throws FunctionDomainException, TypeMismatchException, NameResolutionException,
-          QueryInvocationTargetException {
+
+  public Object evaluate(ExecutionContext context) throws FunctionDomainException,
+      TypeMismatchException, NameResolutionException, QueryInvocationTargetException {
-      if (pr.getFullPath().equals(((Region)obj).getFullPath())) {
+      if (pr.getFullPath().equals(((Region) obj).getFullPath())) {
-  
+
-  throws AmbiguousNameException, TypeMismatchException, NameResolutionException {
+      throws AmbiguousNameException, TypeMismatchException, NameResolutionException {
-    
+
-  
-  
+
+

UPD66