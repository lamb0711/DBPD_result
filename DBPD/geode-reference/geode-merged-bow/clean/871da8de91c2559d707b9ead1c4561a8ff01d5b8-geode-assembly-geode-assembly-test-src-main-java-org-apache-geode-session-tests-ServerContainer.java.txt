GEODE-6396: Make ServerContainer tolerate IOExceptions while dumping logs

Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Michael Oleske <moleske@pivotal.io>

+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.util.stream.Stream;
-  public File logDir;
+  public File cargoLogDir;
-    logDir = new File(DEFAULT_LOG_DIR + description);
-    logDir.mkdirs();
+    cargoLogDir = new File(DEFAULT_LOG_DIR + description);
+    cargoLogDir.mkdirs();
-    gemfireLogFile = new File(logDir.getAbsolutePath() + "/gemfire.log");
+    gemfireLogFile = new File(cargoLogDir.getAbsolutePath() + "/gemfire.log");
-    container.setOutput(logDir.getAbsolutePath() + "/container.log");
+    container.setOutput(cargoLogDir.getAbsolutePath() + "/container.log");
-    setCacheXMLFile(new File(logDir.getAbsolutePath() + "/" + installXMLFile.getName()));
+    setCacheXMLFile(new File(cargoLogDir.getAbsolutePath() + "/" + installXMLFile.getName()));
-  public void dumpLogs() throws IOException {
+  public void dumpLogs() {
-    for (File file : logDir.listFiles()) {
-      dumpToStdOut(file);
-    }
-
-    for (File file : new File(containerConfigHome, "logs").listFiles()) {
-      dumpToStdOut(file);
-    }
-
+    dumpLogsInDir(cargoLogDir.toPath());
+    dumpLogsInDir(containerConfigHome.toPath().resolve("logs"));
+  private static void dumpLogsInDir(Path dir) {
+    try (Stream<Path> paths = Files.list(dir)) {
+      paths.forEach(ServerContainer::dumpToStdOut);
+    } catch (IOException thrown) {
+      System.out.println("-------------------------------------------");
+      System.out.println("Exception while dumping log files from directory to stdout.");
+      System.out.println("   Directory: " + dir.toAbsolutePath());
+      System.out.println("   Exception: " + thrown);
+      System.out.println("-------------------------------------------");
+    }
+  }
+
+  private static void dumpToStdOut(Path path) {
+    System.out.println("-------------------------------------------");
+    System.out.println(path.toAbsolutePath());
+    System.out.println("-------------------------------------------");
+    try {
+      Files.copy(path, System.out);
+    } catch (IOException thrown) {
+      System.out.println("Exception while dumping log file to stdout.");
+      System.out.println("   File: " + path.toAbsolutePath());
+      System.out.println("   Exception: " + thrown);
+    }
+    System.out.println("-------------------------------------------");
+    System.out.println();
+  }
+
-    System.out.println("");
-  }
-
-  private void dumpToStdOut(final File file) throws IOException {
-    System.out.println("-------------------------------------------");
-    System.out.println(file.getAbsolutePath());
-    System.out.println("-------------------------------------------");
-    FileUtils.copyFile(file, System.out);
-    System.out.println("-------------------------------------------");
-    System.out.println("");
+    System.out.println();
-   * directory specified by {@link #logDir}
+   * directory specified by {@link #cargoLogDir}

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS31 INS31 MOV83 MOV39 MOV42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 UPD42 MOV21 INS21 INS21 MOV21 UPD43 MOV43 UPD42 MOV42 INS54 UPD43 UPD42 INS54 INS21 INS32 INS32 UPD42 INS58 INS8 INS12 UPD42 INS8 INS12 INS32 UPD42 UPD42 INS42 INS32 INS42 INS32 INS74 INS59 MOV21 INS44 INS8 MOV21 INS44 INS8 INS40 INS42 INS42 INS42 INS32 INS42 INS45 INS43 INS43 INS42 INS32 MOV43 INS42 INS21 INS21 INS21 MOV21 INS21 UPD42 UPD42 MOV43 INS42 INS21 MOV21 INS21 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 UPD42 INS90 INS32 INS32 INS32 INS32 UPD42 UPD42 UPD42 INS32 INS32 UPD42 UPD42 INS42 INS42 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS27 INS40 UPD42 INS27 INS40 INS42 INS45 INS40 INS42 INS45 INS27 INS40 INS42 INS27 INS45 INS32 INS45 INS42 INS45 INS32 INS45 INS42 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL44 DEL32 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL14 DEL32 DEL8 DEL70 DEL8 DEL31 DEL83 DEL45 DEL45