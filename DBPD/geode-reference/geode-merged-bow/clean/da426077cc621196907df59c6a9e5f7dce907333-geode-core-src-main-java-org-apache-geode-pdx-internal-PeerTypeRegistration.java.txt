GEODE-4285: Get a distributed lock if we can't find a PDX type

If we are unable to find a PDX type during a get, will we get a
distributed lock and try again. This prevents races where the type may
be in the middle of distribution.

Adding a dunit test for the race condition that requires this fix.
+    return getById(typeId);
+  }
+
+  private <T> T getById(Object typeId) {
-      return (PdxType) getIdToType().get(typeId);
+      T pdxType = (T) getIdToType().get(typeId);
+      if (pdxType == null) {
+        lock();
+        try {
+          pdxType = (T) getIdToType().get(typeId);
+        } finally {
+          unlock();
+        }
+      }
+      return pdxType;
+
-          r.put(typeId, type);
+          r.putIfAbsent(typeId, type);
-    verifyConfiguration();
-    TXStateProxy currentState = suspendTX();
-    try {
-      return (EnumInfo) getIdToType().get(enumId);
-    } finally {
-      resumeTX(currentState);
-    }
+    return getById(enumId);

INS31 INS31 MOV83 MOV43 UPD42 MOV42 MOV44 INS8 UPD83 INS73 INS43 UPD42 INS44 INS83 MOV43 INS42 MOV44 INS8 MOV41 INS42 INS42 INS43 INS42 MOV60 INS41 INS32 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS60 INS25 UPD42 MOV42 UPD42 MOV42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 MOV11 INS42 INS33 INS21 INS54 UPD43 INS32 INS8 INS8 UPD42 INS42 INS21 INS21 INS7 INS32 INS42 INS11 INS42 UPD42 INS43 INS32 INS42 INS32 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL32 DEL32 DEL11 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31