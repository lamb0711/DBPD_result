GEODE-5013 Replace org.json with Jackson in GfJsonObject

This removes org.json as a dependency in geode-core and associated test
modules.  GfJsonObject and GfJsonArray are ported to use the same basic
Jackson ObjectMapper setup as QueryResultFormatter so that we now have a
uniform mechanism for managing JSON documents for querying/gfsh and
folks can use Jackson annotations like @JsonIgnore on their classes.

The geode-web-api and geode-pulse modules still use the geode-json
module in tests.  When/if they are ported to use GfJsonObject/Array we can delete
the geode-json module.

+import com.fasterxml.jackson.databind.JsonNode;
+import com.fasterxml.jackson.databind.node.ArrayNode;
-import org.json.JSONArray;
-import org.json.JSONObject;
-    String valueString = String.valueOf(object);
+    String valueString = "" + object;
-      Object object = columnNames.get(i);
+      Object object = columnNames.getString(i);
-      Object object = columnNames.get(i);
+      Object object = columnNames.getString(i);
-      dataRows[j].newLeftCol(accumulatedData.get(j));
+      dataRows[j].newLeftCol(accumulatedData.getString(j));
-    return toList(getTableContent(sectionId, tableId).getInternalJsonObject().getJSONArray(column));
+    return toList((ArrayNode) getTableContent(sectionId, tableId).get(column));
-    JSONObject table = getTableContent(sectionId, tableId).getInternalJsonObject();
-    for (String column : table.keySet()) {
-      result.put(column, toList(table.getJSONArray(column)));
+    JsonNode table = getTableContent(sectionId, tableId).getInternalJsonObject();
+    Iterator<String> fieldNames = table.fieldNames();
+    while (fieldNames.hasNext()) {
+      String column = fieldNames.next();
+      result.put(column, toList((ArrayNode) table.get(column)));
-  private List<String> toList(JSONArray array) {
-    Object[] values = new Object[array.length()];
+  private List<String> toList(ArrayNode array) {
+    Object[] values = new Object[array.size()];
-    for (int i = 0; i < array.length(); i++) {
-      values[i] = array.get(i);
+    for (int i = 0; i < array.size(); i++) {
+      values[i] = array.get(i).textValue();

MOV26 UPD40 UPD40 INS60 INS61 UPD43 MOV32 UPD43 INS74 INS59 INS32 INS8 UPD42 MOV5 INS27 UPD42 INS11 UPD42 INS43 INS43 INS42 INS32 INS42 INS42 INS60 MOV21 INS45 INS42 INS43 MOV32 INS42 MOV42 MOV42 UPD42 MOV42 INS43 INS59 MOV5 UPD42 INS42 UPD42 INS42 INS42 INS42 INS32 UPD42 INS32 UPD42 UPD42 UPD42 INS42 INS42 INS11 MOV32 INS42 INS43 INS32 INS42 MOV42 UPD42 MOV42 MOV42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL43 DEL42 DEL44 DEL32 DEL8 DEL70