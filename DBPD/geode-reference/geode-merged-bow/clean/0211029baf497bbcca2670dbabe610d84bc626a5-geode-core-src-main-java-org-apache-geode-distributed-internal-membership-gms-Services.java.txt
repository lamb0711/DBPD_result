GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-import org.apache.geode.distributed.internal.membership.gms.interfaces.*;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.Authenticator;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.HealthMonitor;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.JoinLeave;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.Locator;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.Manager;
+import org.apache.geode.distributed.internal.membership.gms.interfaces.Messenger;
+import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.internal.security.SecurityServiceFactory;
-  final private Manager manager;
-  final private JoinLeave joinLeave;
-  private Locator locator;
-  final private HealthMonitor healthMon;
-  final private Messenger messenger;
-  final private Authenticator auth;
-  final private ServiceConfig config;
-  final private DMStats stats;
-  final private Stopper cancelCriterion;
+  private final Manager manager;
+  private final JoinLeave joinLeave;
+  private final HealthMonitor healthMon;
+  private final Messenger messenger;
+  private final Authenticator auth;
+  private final ServiceConfig config;
+  private final DMStats stats;
+  private final Stopper cancelCriterion;
+  private final SecurityService securityService;
+
+  private Locator locator;
+
-
-
-
+    this.securityService = SecurityServiceFactory.create();
-      RemoteTransportConfig transport, DMStats stats) {
+      RemoteTransportConfig transport, DMStats stats, SecurityService securityService) {
+    this.securityService = securityService;
-    securityLogWriter = staticSecurityLogWriter;
+    this.securityLogWriter = staticSecurityLogWriter;
-    logWriter = staticLogWriter;
+    this.logWriter = staticLogWriter;
-    if (stopping) {
+    if (this.stopping) {
-    stopping = true;
+    this.stopping = true;
-    timer.cancel();
+    this.timer.cancel();
-      joinLeave.emergencyClose();
+      this.joinLeave.emergencyClose();
-        healthMon.emergencyClose();
+        this.healthMon.emergencyClose();
-          auth.emergencyClose();
+          this.auth.emergencyClose();
-            messenger.emergencyClose();
+            this.messenger.emergencyClose();
-              manager.emergencyClose();
+              this.manager.emergencyClose();
-              cancelCriterion.cancel("Membership services are shut down");
-              stopped = true;
+              this.cancelCriterion.cancel("Membership services are shut down");
+              this.stopped = true;
-    if (stopping) {
+    if (this.stopping) {
-    stopping = true;
+    this.stopping = true;
-      timer.cancel();
+      this.timer.cancel();
-        joinLeave.stop();
+        this.joinLeave.stop();
-          healthMon.stop();
+          this.healthMon.stop();
-            auth.stop();
+            this.auth.stop();
-              messenger.stop();
+              this.messenger.stop();
-                manager.stop();
+                this.manager.stop();
-                cancelCriterion.cancel("Membership services are shut down");
-                stopped = true;
+                this.cancelCriterion.cancel("Membership services are shut down");
+                this.stopped = true;
+  public SecurityService getSecurityService() {
+    return this.securityService;
+  }
+
-    return auth;
+    return this.auth;
-      auth.installView(v);
+      this.auth.installView(v);
-    if (locator != null) {
-      locator.installView(v);
+    if (this.locator != null) {
+      this.locator.installView(v);
-    healthMon.installView(v);
-    messenger.installView(v);
-    manager.installView(v);
+    this.healthMon.installView(v);
+    this.messenger.installView(v);
+    this.manager.installView(v);
-      joinLeave.memberSuspected(initiator, suspect, reason);
+      this.joinLeave.memberSuspected(initiator, suspect, reason);
-        healthMon.memberSuspected(initiator, suspect, reason);
+        this.healthMon.memberSuspected(initiator, suspect, reason);
-          auth.memberSuspected(initiator, suspect, reason);
+          this.auth.memberSuspected(initiator, suspect, reason);
-            messenger.memberSuspected(initiator, suspect, reason);
+            this.messenger.memberSuspected(initiator, suspect, reason);
-            manager.memberSuspected(initiator, suspect, reason);
+            this.manager.memberSuspected(initiator, suspect, reason);
-    return manager;
+    return this.manager;
-    return locator;
+    return this.locator;
-    return joinLeave;
+    return this.joinLeave;
-    return healthMon;
+    return this.healthMon;
-    return shutdownCause;
+    return this.shutdownCause;
-    return shutdownCause instanceof ForcedDisconnectException;
+    return this.shutdownCause instanceof ForcedDisconnectException;
-    if (locator != null) {
-      return ((GMSLocator) locator).getPublicKey(mbr);
+    if (this.locator != null) {
+      return ((GMSLocator) this.locator).getPublicKey(mbr);
-      return reasonForStopping;
+      return this.reasonForStopping;

INS26 INS26 INS26 INS26 INS26 INS26 INS26 MOV23 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS43 INS59 INS44 INS83 INS43 INS42 INS8 INS42 INS42 INS21 INS43 INS42 INS21 MOV25 MOV25 INS42 INS41 INS7 INS42 INS7 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS32 INS22 INS42 INS22 INS22 INS52 INS42 INS22 INS22 INS52 INS42 INS22 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS52 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS22 INS22 INS52 INS42 INS52 INS42 INS52 INS42 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42