Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalDistributedSystem.java

-                             boolean prSingleHopEnabled)
-  {
-    AbstractOp op = new PutOpImpl(region, key, value, deltaBytes, event,
+                             boolean prSingleHopEnabled) {
+    PutOpImpl op = new PutOpImpl(region, key, value, deltaBytes, event,
+          op.setAllowDuplicateMetadataRefresh(! onlyUseExistingCnx);
+
-                             boolean prSingleHopEnabled)
-  {
+                             boolean prSingleHopEnabled) {
+    
-//      processAck(msg, "put");
-//      if (prSingleHopEnabled) {
-//        byte version = 0;
-//        Part part = msg.getPart(0);
-//        byte[] bytesReceived = part.getSerializedForm();
-//        if (bytesReceived[0] != ClientMetadataService.INITIAL_VERSION
-//            && bytesReceived.length == ClientMetadataService.SIZE_BYTES_ARRAY_RECEIVED) { // nw hop
-//          if (this.region != null) {
-//            ClientMetadataService cms;
-//            try {
-//              cms = region.getCache().getClientMetadataService();
-//              version = cms.getMetaDataVersion(region, Operation.UPDATE,
-//                  key, value, callbackArg);
-//            }
-//            catch (CacheClosedException e) {
-//              return null;
-//            }
-//            if (bytesReceived[0] != version) {
-//              cms.scheduleGetPRMetaData(region, false,bytesReceived[1]);
-//            }
-//          }
-//        }
-//      }
-//      return null;
-      byte version = 0 ;
+
-            ClientMetadataService cms;
-              cms = region.getCache().getClientMetadataService();
-              version = cms.getMetaDataVersion(region, Operation.UPDATE,
-                  key, value, callbackArg);
-            if (bytesReceived[0] != version) {
+            ClientMetadataService cms = region.getCache().getClientMetadataService();
+            byte myVersion = cms.getMetaDataVersion(region, Operation.UPDATE,
+                               key, value, callbackArg);
+            if (myVersion != bytesReceived[0] || isAllowDuplicateMetadataRefresh()) {

UPD43 UPD42 INS21 INS32 INS60 INS60 INS42 INS42 INS38 MOV43 INS59 INS39 INS59 INS27 INS42 MOV42 INS32 INS42 MOV32 MOV27 MOV2 INS32 MOV32 MOV42 UPD42 INS42 DEL39 DEL42 DEL34 DEL59 DEL60 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL42 DEL7 DEL21