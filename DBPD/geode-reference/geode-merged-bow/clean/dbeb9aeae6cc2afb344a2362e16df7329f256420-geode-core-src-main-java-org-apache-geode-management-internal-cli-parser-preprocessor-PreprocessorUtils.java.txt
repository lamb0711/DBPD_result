Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The methods in this class will be used by the {@link Preprocessor} class to
- * perform various trivial operations
+ * The methods in this class will be used by the {@link Preprocessor} class to perform various
+ * trivial operations
-  
+
-   * This function will trim the given input string. It will not only remove the
-   * spaces and tabs at the end but also compress multiple spaces and tabs to a
-   * single space
+   * This function will trim the given input string. It will not only remove the spaces and tabs at
+   * the end but also compress multiple spaces and tabs to a single space
-   * @param input
-   *          The input string on which the trim operation needs to be performed
+   * @param input The input string on which the trim operation needs to be performed
-   * This function will trim the given input string. It will not only remove the
-   * spaces and tabs at the end but also compress multiple spaces and tabs to a
-   * single space
+   * This function will trim the given input string. It will not only remove the spaces and tabs at
+   * the end but also compress multiple spaces and tabs to a single space
-   * @param input
-   *          The input string on which the trim operation needs to be performed
-   * @param retainLineSeparator
-   *          whether to retain the line separator.
+   * @param input The input string on which the trim operation needs to be performed
+   * @param retainLineSeparator whether to retain the line separator.
-        
+
-   * This function just does the simple job of removing white spaces from the
-   * given input string
+   * This function just does the simple job of removing white spaces from the given input string
-   * @param input
-   *          The input String from which the spaces need to be removed
+   * @param input The input String from which the spaces need to be removed
-   * For e.g; '" input"' is valid but '" input' is not a valid input same is the
-   * case with input like a JSON string
+   * For e.g; '" input"' is valid but '" input' is not a valid input same is the case with input
+   * like a JSON string
-   * @param input
-   *          The input string which needs to be checked for proper syntax
+   * @param input The input string which needs to be checked for proper syntax
-  
+
-    if (ch == ' ' || ch == '\t' || ch == '\n' || (ch == '\r' && SystemUtils.isWindows()) ) {
+    if (ch == ' ' || ch == '\t' || ch == '\n' || (ch == '\r' && SystemUtils.isWindows())) {

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 DEL66 DEL66 DEL66