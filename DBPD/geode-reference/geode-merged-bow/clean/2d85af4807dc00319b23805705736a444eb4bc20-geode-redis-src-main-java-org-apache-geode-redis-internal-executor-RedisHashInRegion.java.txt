GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

-public class RedisHashInRegion implements RedisHashCommands {
-  private final Region<ByteArrayWrapper, RedisData> region;
+public class RedisHashInRegion extends RedisKeyInRegion implements RedisHashCommands {
-    this.region = region;
+    super(region);
-    RedisHash hash = checkType(region.get(key));
+    RedisHash hash = checkType(getRedisData(key));
-    RedisHash hash = checkType(region.get(key));
+    RedisHash hash = checkType(getRedisData(key));
-    RedisHash hash = checkType(region.get(key));
+    RedisHash hash = checkType(getRedisData(key));
-    return checkType(region.getOrDefault(key, RedisHash.EMPTY));
+    return checkType(getRedisDataOrDefault(key, RedisHash.EMPTY));

INS43 UPD42 MOV42 INS46 INS42 UPD42 UPD42 UPD42 UPD42 DEL83 DEL83 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42