GEODE-7953: Restore Redundancy Internal API (#5010)

- Add RestoreRedundancyOperation interface and Impl class
- Add RestoreRedundancyResults interface and Impl class
- Add RegionRedundancyStatus interface and Impl class
- Add accessor methods for RestoreRedundancyOperation to ResourceManager interface
- Replace manually-synchronized sets in InternalResourceManager with
ConcurrentHashMap
- Add stats for restore redundancy operations
- Add unit and DUnit tests for all the above

This commit restores the changes originally introduced in 0f9918510b24f2169189936a92951b9bb4f313f1 and reverted in 9fad2c0fba51f1a8beb24c311255dfa55a537c99

Authored-by: Donal Evans <doevans@pivotal.io>
-import java.util.HashSet;
+import java.util.concurrent.ConcurrentHashMap;
+import org.apache.geode.cache.control.RestoreRedundancyOperation;
+import org.apache.geode.cache.control.RestoreRedundancyResults;
-  private Map<ResourceType, Set<ResourceListener>> listeners =
-      new HashMap<ResourceType, Set<ResourceListener>>();
+  private Map<ResourceType, Set<ResourceListener>> listeners = new HashMap<>();
-  // The set of in progress rebalance operations.
-  private final Set<RebalanceOperation> inProgressOperations = new HashSet<RebalanceOperation>();
-  private final Object inProgressOperationsLock = new Object();
+  // A map of in progress rebalance operations. The value is Boolean because ConcurrentHashMap does
+  // not support null values.
+  private final Map<RebalanceOperation, Boolean> inProgressRebalanceOperations =
+      new ConcurrentHashMap<>();
+
+  // A map of in progress restore redundancy completable futures. The value is Boolean because
+  // ConcurrentHashMap does not support null values.
+  private final Map<CompletableFuture<RestoreRedundancyResults>, Boolean> inProgressRedundancyOperations =
+      new ConcurrentHashMap<>();
-    synchronized (this.inProgressOperationsLock) {
-      return new HashSet<RebalanceOperation>(this.inProgressOperations);
-    }
+    return Collections.unmodifiableSet(inProgressRebalanceOperations.keySet());
-    synchronized (this.inProgressOperationsLock) {
-      this.inProgressOperations.add(op);
-    }
+    inProgressRebalanceOperations.put(op, Boolean.TRUE);
-    synchronized (this.inProgressOperationsLock) {
-      this.inProgressOperations.remove(op);
-    }
+    inProgressRebalanceOperations.remove(op);
+  }
+  @Override
+  public RestoreRedundancyOperation createRestoreRedundancyOperation() {
+    return new RestoreRedundancyOperationImpl(cache);
+  }
+
+  @Override
+  public Set<CompletableFuture<RestoreRedundancyResults>> getRestoreRedundancyFutures() {
+    return Collections.unmodifiableSet(inProgressRedundancyOperations.keySet());
+  }
+
+  void addInProgressRestoreRedundancy(
+      CompletableFuture<RestoreRedundancyResults> completableFuture) {
+    inProgressRedundancyOperations.put(completableFuture, Boolean.TRUE);
+  }
+
+  void removeInProgressRestoreRedundancy(
+      CompletableFuture<RestoreRedundancyResults> completableFuture) {
+    inProgressRedundancyOperations.remove(completableFuture);
-   *
-     *
-     *
-     *
-     *
-     *

MOV26 INS26 INS26 MOV55 UPD40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 UPD74 INS74 MOV78 MOV83 MOV74 MOV42 INS8 INS39 INS42 MOV44 INS8 INS39 INS42 MOV44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS74 INS42 INS8 UPD42 INS44 INS8 UPD42 INS44 INS8 UPD43 MOV43 UPD43 UPD42 INS43 INS74 INS43 UPD42 INS41 INS21 INS21 INS42 INS42 INS41 INS42 MOV43 INS74 INS41 INS74 INS42 MOV21 INS74 INS42 MOV21 UPD74 UPD42 UPD42 UPD74 UPD42 MOV42 INS43 INS43 INS42 INS74 INS32 INS32 INS32 INS14 UPD43 MOV43 UPD43 MOV43 INS32 INS43 INS43 INS43 INS43 UPD43 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS43 INS42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS40 INS42 INS42 INS42 UPD42 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL43 DEL43 DEL52 DEL42 DEL22 DEL74 DEL52 DEL42 DEL22 DEL14 DEL41 DEL8 DEL51 DEL8 DEL31 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL8 DEL51 DEL8 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL8 DEL51 DEL8