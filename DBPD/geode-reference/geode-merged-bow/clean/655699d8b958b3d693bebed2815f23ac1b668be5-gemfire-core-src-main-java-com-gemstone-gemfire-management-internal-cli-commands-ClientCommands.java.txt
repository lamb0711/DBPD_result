Merge branch 'develop' into feature/GEODE-53

-                return ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DECRIBE_CLIENT_COULD_NOT_RETRIEVE_STATS_FOR_CLIENT_0, clientId));
+                return ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DESCRIBE_CLIENT_COULD_NOT_RETRIEVE_STATS_FOR_CLIENT_0, clientId));
-              return ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DECRIBE_CLIENT_COULD_NOT_RETRIEVE_STATS_FOR_CLIENT_0_REASON_1, clientId, eee.getMessage()));               
+              return ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DESCRIBE_CLIENT_COULD_NOT_RETRIEVE_STATS_FOR_CLIENT_0_REASON_1, clientId, eee.getMessage()));               
-            LogWrapper.getInstance().info(CliStrings.DECRIBE_CLIENT_ERROR_FETCHING_STATS_0 + " :: " + CliUtil.stackTraceAsString(e));
-            return ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DECRIBE_CLIENT_ERROR_FETCHING_STATS_0, e.getMessage()));            
+            LogWrapper.getInstance().info(CliStrings.DESCRIBE_CLIENT_ERROR_FETCHING_STATS_0 + " :: " + CliUtil.stackTraceAsString(e));
+            return ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DESCRIBE_CLIENT_ERROR_FETCHING_STATS_0, e.getMessage()));            
-        return ResultBuilder.createGemFireErrorResult(CliStrings.DECRIBE_CLIENT_NO_MEMBERS);
+        return ResultBuilder.createGemFireErrorResult(CliStrings.DESCRIBE_CLIENT_NO_MEMBERS);
-      result = ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DECRIBE_CLIENT_COULD_NOT_RETRIEVE_CLIENT_0, e.getMessage()));
+      result = ResultBuilder.createGemFireErrorResult(CliStrings.format(CliStrings.DESCRIBE_CLIENT_COULD_NOT_RETRIEVE_CLIENT_0, e.getMessage()));
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_PRIMARY_SERVERS, primServers);
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_SECONDARY_SERVERS, secondServers);
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_CPU, clientHealthStatus.getCpus());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_LISTNER_CALLS, clientHealthStatus.getNumOfCacheListenerCalls());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_GETS, clientHealthStatus.getNumOfGets());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_MISSES, clientHealthStatus.getNumOfMisses());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_PUTS, clientHealthStatus.getNumOfPuts());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_THREADS, clientHealthStatus.getNumOfThreads());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_PROCESS_CPU_TIME, clientHealthStatus.getProcessCpuTime());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_QUEUE_SIZE, clientHealthStatus.getQueueSize());
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_UP_TIME, clientHealthStatus.getUpTime());      
-      sectionResult.addData(CliStrings.DECRIBE_CLIENT_COLUMN_DURABLE, isDurable);      
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_PRIMARY_SERVERS, primServers);
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_SECONDARY_SERVERS, secondServers);
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_CPU, clientHealthStatus.getCpus());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_LISTNER_CALLS, clientHealthStatus.getNumOfCacheListenerCalls());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_GETS, clientHealthStatus.getNumOfGets());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_MISSES, clientHealthStatus.getNumOfMisses());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_PUTS, clientHealthStatus.getNumOfPuts());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_THREADS, clientHealthStatus.getNumOfThreads());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_PROCESS_CPU_TIME, clientHealthStatus.getProcessCpuTime());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_QUEUE_SIZE, clientHealthStatus.getQueueSize());
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_UP_TIME, clientHealthStatus.getUpTime());      
+      sectionResult.addData(CliStrings.DESCRIBE_CLIENT_COLUMN_DURABLE, isDurable);      
-          poolStatsResultTable.accumulate(CliStrings.DECRIBE_CLIENT_MIN_CONN, str[0].substring(str[0].indexOf("=")+1 ));
-          poolStatsResultTable.accumulate(CliStrings.DECRIBE_CLIENT_MAX_CONN, str[1].substring(str[1].indexOf("=")+1 ));
-          poolStatsResultTable.accumulate(CliStrings.DECRIBE_CLIENT_REDUDANCY,           str[2].substring(str[2].indexOf("=")+1 ));
-          poolStatsResultTable.accumulate(CliStrings.DECRIBE_CLIENT_CQs,       str[3].substring(str[3].indexOf("=")+1 ));          
+          poolStatsResultTable.accumulate(CliStrings.DESCRIBE_CLIENT_MIN_CONN, str[0].substring(str[0].indexOf("=")+1 ));
+          poolStatsResultTable.accumulate(CliStrings.DESCRIBE_CLIENT_MAX_CONN, str[1].substring(str[1].indexOf("=")+1 ));
+          poolStatsResultTable.accumulate(CliStrings.DESCRIBE_CLIENT_REDUDANCY,           str[2].substring(str[2].indexOf("=")+1 ));
+          poolStatsResultTable.accumulate(CliStrings.DESCRIBE_CLIENT_CQs,       str[3].substring(str[3].indexOf("=")+1 ));          

UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40