GEODE-3519 servers are not locking on some ops initiated by clients

While investigating dlocktoken cleanup I discovered that a number of
operations coming from a client were not locking entries for Scope.GLOBAL
regions on servers.  Only put, putIfAbsent and variants of replace were
obtaining locks.

+import org.apache.geode.cache.EntryExistsException;
+  public void basicBridgeRemove(Object key, Object expectedOldValue, Object p_callbackArg,
+      ClientProxyMembershipID memberId, boolean fromClient, EntryEventImpl clientEvent)
+      throws TimeoutException, EntryNotFoundException, CacheWriterException {
+    Lock lock = getDistributedLockIfGlobal(key);
+    try {
+      super.basicBridgeRemove(key, expectedOldValue, p_callbackArg, memberId, fromClient,
+          clientEvent);
+    } finally {
+      if (lock != null) {
+        logger.debug("releasing distributed lock on {}", key);
+        lock.unlock();
+        getLockService().freeResources(key);
+      }
+    }
+  }
+
+  @Override
+  public void basicBridgeDestroy(Object key, Object p_callbackArg, ClientProxyMembershipID memberId,
+      boolean fromClient, EntryEventImpl clientEvent)
+      throws TimeoutException, EntryNotFoundException, CacheWriterException {
+    Lock lock = getDistributedLockIfGlobal(key);
+    try {
+      super.basicBridgeDestroy(key, p_callbackArg, memberId, fromClient, clientEvent);
+    } finally {
+      if (lock != null) {
+        logger.debug("releasing distributed lock on {}", key);
+        lock.unlock();
+        getLockService().freeResources(key);
+      }
+    }
+  }
+
+  @Override
+  public void basicBridgeInvalidate(Object key, Object p_callbackArg,
+      ClientProxyMembershipID memberId, boolean fromClient, EntryEventImpl clientEvent)
+      throws TimeoutException, EntryNotFoundException, CacheWriterException {
+    Lock lock = getDistributedLockIfGlobal(key);
+    try {
+      super.basicBridgeInvalidate(key, p_callbackArg, memberId, fromClient, clientEvent);
+    } finally {
+      if (lock != null) {
+        logger.debug("releasing distributed lock on {}", key);
+        lock.unlock();
+      }
+    }
+  }
+
+  @Override

INS26 INS40 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS42 INS42 INS60 INS54 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS42 INS42 INS60 INS54 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS42 INS42 INS60 INS54 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS42 INS42 INS32 INS21 INS25 INS42 INS42 INS32 INS21 INS25 INS42 INS42 INS32 INS21 INS25 INS42 INS42 INS48 INS27 INS8 INS42 INS42 INS48 INS27 INS8 INS42 INS42 INS48 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42