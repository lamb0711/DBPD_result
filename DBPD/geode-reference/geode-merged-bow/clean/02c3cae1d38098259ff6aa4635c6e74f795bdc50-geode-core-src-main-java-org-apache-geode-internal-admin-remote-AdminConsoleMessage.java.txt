GEODE-2644: Make AlertAppender optional and support log4j2.xml

AlertAppender is now configured in log4j2.xml and it supports sessions
that correspond with Cache lifecycle. This allows Geode to pause and
resume AlertAppender without resorting to dynamically adding and
removing appenders.

List of changes:
* Change AlertAppender to be pausable and session-oriented
* Make AlertAppender support configuration from log4j2.xml
* Log4j2 Core dependency is now optional
* Internal Alerting interfaces allow Alerting service to be pluggable
* Reduce coupling between Alerting and the rest of Geode
* Greatly increase test coverage for Alerting

-
-
-import org.apache.geode.internal.logging.log4j.AlertAppender;
+import org.apache.geode.internal.alerting.AlertLevel;
- * administation console that just connected.
+ * administration console that just connected.
-  int level;
+  private int level;
-    if (this.level != Alert.OFF) {
-      AlertAppender.getInstance().addAlertListener(this.getSender(), this.level);
+    if (level != Alert.OFF) {
+      dm.getAlertingService().addAlertListener(getSender(), AlertLevel.find(level));
-    dm.addAdminConsole(this.getSender());
+    dm.addAdminConsole(getSender());
+  @Override
-    out.writeInt(this.level);
+    out.writeInt(level);
-    this.level = in.readInt();
+    level = in.readInt();
-    return "AdminConsoleMessage from " + this.getSender() + " level=" + level;
+    return "AdminConsoleMessage from " + getSender() + " level=" + level;

UPD40 INS83 INS78 UPD66 INS42 INS42 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL52 DEL52 DEL42 DEL22 DEL52 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52