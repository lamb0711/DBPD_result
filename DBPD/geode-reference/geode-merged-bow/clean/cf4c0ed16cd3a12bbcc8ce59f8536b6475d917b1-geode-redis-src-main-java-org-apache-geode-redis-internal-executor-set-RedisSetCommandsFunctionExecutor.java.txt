GEODE-8089: change redis set ops to use functions (#5058)

* scard now uses function
* sismember now uses function
* srandmember now uses a function
* spop now uses a function
* sscan now uses a function
+import static org.apache.geode.redis.internal.RedisCommandType.SCARD;
+import static org.apache.geode.redis.internal.RedisCommandType.SISMEMBER;
+import static org.apache.geode.redis.internal.RedisCommandType.SPOP;
+import static org.apache.geode.redis.internal.RedisCommandType.SRANDMEMBER;
+import static org.apache.geode.redis.internal.RedisCommandType.SSCAN;
+import java.util.Collection;
+import java.util.regex.Pattern;
-  public Set<ByteArrayWrapper> members(ByteArrayWrapper key) {
+  public Set<ByteArrayWrapper> smembers(ByteArrayWrapper key) {
+  @Override
+  public int scard(ByteArrayWrapper key) {
+    ResultCollector<Object[], List<Integer>> results = executeFunction(SCARD, key, null);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public boolean sismember(ByteArrayWrapper key, ByteArrayWrapper member) {
+    ResultCollector<Object[], List<Boolean>> results = executeFunction(SISMEMBER, key, member);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public Collection<ByteArrayWrapper> srandmember(ByteArrayWrapper key, int count) {
+    ResultCollector<Object[], List<Collection<ByteArrayWrapper>>> results =
+        executeFunction(SRANDMEMBER, key, count);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public Collection<ByteArrayWrapper> spop(ByteArrayWrapper key, int popCount) {
+    ResultCollector<Object[], List<Collection<ByteArrayWrapper>>> results =
+        executeFunction(SPOP, key, popCount);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public List<Object> sscan(ByteArrayWrapper key, Pattern matchPattern, int count, int cursor) {
+    ResultCollector<Object[], List<List<Object>>> results =
+        executeFunction(SSCAN, key, new Object[] {matchPattern, count, cursor});
+    return results.getResult().get(0);
+  }
+
-      ArrayList<ByteArrayWrapper> commandArguments) {
+      Object commandArguments) {

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 UPD42 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS78 INS83 UPD74 MOV74 INS42 INS44 INS44 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS44 INS44 INS8 INS42 INS43 INS42 INS60 INS41 INS42 INS43 INS42 INS43 INS42 INS60 INS41 INS42 UPD43 INS43 INS42 INS39 INS42 INS60 INS41 INS42 INS43 INS43 INS43 INS42 INS39 INS42 INS60 INS41 INS42 INS43 INS43 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS60 INS41 INS43 INS42 INS74 INS59 INS32 INS42 INS42 INS74 INS59 INS32 UPD42 INS42 INS74 INS59 INS32 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS43 INS5 INS74 INS42 INS32 INS32 INS42 INS34 INS43 INS5 INS74 INS42 INS32 INS32 INS42 INS34 INS43 INS5 INS74 INS42 INS32 INS32 INS42 INS34 INS43 INS5 INS74 INS42 INS32 INS32 INS42 INS34 INS43 INS5 INS74 INS42 INS32 INS32 INS42 INS34 INS42 INS43 INS85 INS43 INS43 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS43 INS85 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS43 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS43 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS43 INS74 INS42 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS5 INS4 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42