Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2005-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-public final class StructSet /*extends ObjectOpenCustomHashSet*/ implements Set, SelectResults, DataSerializableFixedID {
+public final class StructSet /*extends ObjectOpenCustomHashSet*/ implements Set, SelectResults, 
+DataSerializableFixedID, StructFields {
-    return new CollectionTypeImpl(java.util.Set.class, this.structType);
+    return new CollectionTypeImpl(StructSet.class, this.structType);
-    return this.contents;
+    return this;
-    return this.contents.toArray();
+    Struct[] structs = new Struct[this.contents.size()];
+    int i = 0;
+    for (Iterator iter = this.iterator(); iter.hasNext();) {      
+      structs[i++]  = (Struct)iter.next();
+    }
+    return structs;    
-  public Object[] toArray(Object[] a) {
-    return this.contents.toArray(a);
+  public Object[] toArray(Object[] a) {    
+    Object[] array = this.contents.toArray(a);
+    int i = 0;
+    for(Object o : array) {
+      array[i++] = new StructImpl((StructTypeImpl)this.structType, (Object[])o);
+    }
+    return array;
+    if(o instanceof Struct) {
+      o = ((Struct)o).getFieldValues();
+    }
+    //TODO: Asif : This is wrong ,we need to fix this.

INS43 INS42 INS5 INS60 INS60 INS24 INS43 INS85 INS60 INS60 INS70 INS25 INS52 INS5 INS59 INS39 INS59 INS58 INS32 INS8 INS42 INS42 MOV5 INS59 INS39 INS59 INS44 INS42 INS8 INS42 INS62 INS8 INS43 INS85 INS42 INS3 INS42 INS34 INS43 INS59 INS42 INS42 INS21 INS42 MOV32 INS42 INS34 INS43 INS42 INS21 INS42 INS43 INS21 UPD43 INS42 INS5 MOV32 INS42 INS42 INS32 INS7 INS42 INS7 INS42 INS7 INS42 INS43 INS85 UPD42 INS52 INS42 INS2 INS11 INS2 INS14 INS42 INS32 INS42 INS42 INS37 INS43 INS32 INS42 INS37 INS43 INS11 INS11 INS36 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS22 INS5 INS42 INS11 INS42 INS52 INS42 INS43 INS85 INS43 INS42 INS42 INS42 DEL40 DEL52 DEL42 DEL22