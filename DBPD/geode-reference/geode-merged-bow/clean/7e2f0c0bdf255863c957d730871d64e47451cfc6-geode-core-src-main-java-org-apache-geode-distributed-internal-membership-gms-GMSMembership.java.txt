GEODE-7456: Removed dependencies related to membership manager refactor (#4349)

* Making QuorumChecker part of the membership API

The Membership interface was returning a QuorumChecker, but that was not part
of the API package. Moving that to API package. Extracting an interface for
MembershipInformation, which is opaque to consumers of the membership system -
it should be returned from a QuorumChecker and passed back into the new
membership system.

* Making MembershipTestHook part of the Membership API

* Removing releaseQuorumChecker and dependency on InternalDistributedSystem from Membership

This releaseQuorumChecker method was using the system just to check some flags
on it and call close. Instead, have InternalDistributedSystem directly call
close on the QuorumChecker.

* Removed dependencies on LogMarker and Assert.

* Removed dependencies on InternalLocator and GMSLocatorAdapter by moving to the LifecycleListener.

* Removed dependency on deprecated SystemFailure.

* Removed dependency on SystemTimer and SystemTimer.TimerTask, using LoggingExecutor now.

* Fixing tests to use Distribution instead of a mocked out Membership and static method to connect locator to Services.

+import java.util.concurrent.ScheduledExecutorService;
-import org.apache.geode.distributed.Locator;
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.distributed.internal.InternalLocator;
-import org.apache.geode.distributed.internal.membership.MembershipTestHook;
-import org.apache.geode.distributed.internal.membership.QuorumChecker;
-import org.apache.geode.distributed.internal.membership.adapter.GMSLocatorAdapter;
-import org.apache.geode.distributed.internal.membership.adapter.GMSQuorumCheckerAdapter;
+import org.apache.geode.distributed.internal.membership.gms.api.MembershipTestHook;
+import org.apache.geode.distributed.internal.membership.gms.api.QuorumChecker;
-import org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumChecker;
-import org.apache.geode.internal.Assert;
-import org.apache.geode.internal.SystemTimer;
-import org.apache.geode.internal.logging.log4j.LogMarker;
+import org.apache.geode.logging.internal.executors.LoggingExecutors;
-          SystemFailure.initiateFailure(err);
-          // Whenever you catch Error or Throwable, you must also
-          // catch VirtualMachineError (see above). However, there is
-          // _still_ a possibility that you are dealing with a cascading
-          // error condition, so you also need to check to see if the JVM
-          // is still usable:
-          SystemFailure.checkFailure();
-          SystemFailure.initiateFailure(err);
-          // Whenever you catch Error or Throwable, you must also
-          // catch VirtualMachineError (see above). However, there is
-          // _still_ a possibility that you are dealing with a cascading
-          // error condition, so you also need to check to see if the JVM
-          // is still usable:
-          SystemFailure.checkFailure();
-  private SystemTimer cleanupTimer;
+  private ScheduledExecutorService cleanupTimer;
-    Assert.assertTrue(listener != null);
-    this.cleanupTimer = new SystemTimer(ds, true);
-    SystemTimer.SystemTimerTask st = new SystemTimer.SystemTimerTask() {
-      @Override
-      public void run2() {
-        cleanUpSurpriseMembers();
-      }
-    };
-    this.cleanupTimer.scheduleAtFixedRate(st, surpriseMemberTimeout, surpriseMemberTimeout / 3);
+    this.cleanupTimer =
+        LoggingExecutors.newScheduledThreadPool("GMSMembership.cleanupTimer", 1, false);
+
+    this.cleanupTimer.scheduleAtFixedRate(this::cleanUpSurpriseMembers, surpriseMemberTimeout,
+        surpriseMemberTimeout / 3, TimeUnit.MILLISECONDS);
-      if (logger.isTraceEnabled(LogMarker.DISTRIBUTION_VIEWS_VERBOSE)) {
-        logger.trace(LogMarker.DISTRIBUTION_VIEWS_VERBOSE,
-            "Membership: Ignoring message from shunned member <{}>:{}", m, msg);
+      if (logger.isTraceEnabled()) {
+        logger.trace("Membership: Ignoring message from shunned member <{}>:{}", m, msg);
-          SystemFailure.initiateFailure(err);
-          // Whenever you catch Error or Throwable, you must also
-          // catch VirtualMachineError (see above). However, there is
-          // _still_ a possibility that you are dealing with a cascading
-          // error condition, so you also need to check to see if the JVM
-          // is still usable:
-          SystemFailure.checkFailure();
-
-    GMSQuorumChecker impl = services.getMessenger().getQuorumChecker();
-    quorumChecker = new GMSQuorumCheckerAdapter(impl);
+    quorumChecker = services.getMessenger().getQuorumChecker();
-  @Override
-  public void releaseQuorumChecker(QuorumChecker checker,
-      InternalDistributedSystem system) {
-    checker.suspend();
-    if (system == null || !system.isConnected()) {
-      checker.close();
-    }
-  }
-
-
-
-      Assert.assertTrue(services != null);
-
-      // see if a locator was started and put it in GMS Services
-      InternalLocator l = (InternalLocator) org.apache.geode.distributed.Locator.getLocator();
-      if (l != null && l.getLocatorHandler() != null) {
-        if (l.getLocatorHandler().setServices(services)) {
-          services.setLocator(((GMSLocatorAdapter) l.getLocatorHandler()).getGMSLocator());
-        }
-      }
+      lifecycleListener.started();
-        cleanupTimer.cancel();
+        cleanupTimer.shutdown();
-        // stop server locators immediately since they may not have correct
-        // information. This has caused client failures in bridge/wan
-        // network-down testing
-        InternalLocator loc = (InternalLocator) Locator.getLocator();
-        if (loc != null) {
-          loc.stop(true, !services.getConfig().getDisableAutoReconnect(),
-              false);
-        }
+        lifecycleListener.forcedDisconnect();
+

MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 INS8 MOV21 MOV21 INS32 INS90 INS40 MOV32 INS32 INS42 INS42 INS45 INS34 INS9 INS52 INS42 INS42 UPD42 MOV42 UPD42 INS8 MOV21 MOV21 UPD42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL33 DEL27 DEL32 DEL21 DEL42 DEL43 DEL42 DEL9 DEL14 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL14 DEL59 DEL60 DEL42 DEL40 DEL40 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL42 DEL33 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL36 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL9 DEL42 DEL42 DEL32 DEL32 DEL38 DEL9 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8