GEODE-6529: Use EntryEventFactory instead of factory methods (#3334)

- rename previous EntryEventFactory as TxCallbackEventFactory
- create new EntryEventFactory for LocalRegion to use when
creating EntryEventImpl instances
- allows easier testing

Co-authored-by: Michael Oleske <moleske@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Kirk Lund <klund@pivotal.io>

-  private final EntryEventFactory entryEventFactory = new EntryEventFactoryImpl();
+  private final TxCallbackEventFactory txCallbackEventFactory = new TxCallbackEventFactoryImpl();
-              final EntryEventImpl callbackEvent = entryEventFactory
+              final EntryEventImpl callbackEvent = txCallbackEventFactory
-                    callbackEvent = entryEventFactory
+                    callbackEvent = txCallbackEventFactory
-              callbackEvent = entryEventFactory
+              callbackEvent = txCallbackEventFactory
-            entryEventFactory
+            txCallbackEventFactory
-                  callbackEvent = entryEventFactory.createCallbackEvent(owner,
+                  callbackEvent = txCallbackEventFactory.createCallbackEvent(owner,
-              callbackEvent = entryEventFactory.createCallbackEvent(owner,
+              callbackEvent = txCallbackEventFactory.createCallbackEvent(owner,
-              callbackEvent = entryEventFactory.createCallbackEvent(owner,
+              callbackEvent = txCallbackEventFactory.createCallbackEvent(owner,
-          callbackEvent = entryEventFactory.createCallbackEvent(owner,
+          callbackEvent = txCallbackEventFactory.createCallbackEvent(owner,
-    return entryEventFactory
+    return txCallbackEventFactory

UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42