GEODE-4863: refactor jdbc commands to use this public cluster configuration api (#1776)

   * refactored jdbc connector commands to use public cc service
   * removed JdbcConnectorServiceXmlGenerator
   * removed RegionMappingBuilder & ConnectionConfigBuilder
   * if cc service is running then user can only alter whats available in CC
   * describe & List commands now list entries from cc service
   * converted some integration tests to junits
   * removed unwanted functions, tests

Signed-off-by: Jinmei Liao <jiliao@pivotal.io>

-  private Throwable throwable;
+  private Object resultObject;
+  @Deprecated
+  @Deprecated
-
+  @Deprecated
-
+  @Deprecated
-
-
+  @Deprecated
-
+  @Deprecated
-
-  public CliFunctionResult(final String memberIdOrName, final Throwable throwable,
+  public CliFunctionResult(final String memberIdOrName, final Object resultObject,
-    this.throwable = throwable;
+    this.resultObject = resultObject;
+    if (resultObject instanceof Throwable) {
+      this.successful = false;
+    } else {
+      this.successful = true;
+    }
+  }
-    this.successful = false;
+  public CliFunctionResult(final String memberIdOrName, final Object resultObject) {
+    this(memberIdOrName, resultObject, null);
+  @Deprecated
-    if (message != null && (throwable == null || !throwable.getMessage().contains(message))) {
+    if (message != null
+        && (resultObject == null || !((Throwable) resultObject).getMessage().contains(message))) {
-    if (throwable != null) {
-      errorMessage = errorMessage.trim() + " " + throwable.getClass().getName() + ": "
-          + throwable.getMessage();
+    if (resultObject != null) {
+      errorMessage = errorMessage.trim() + " " + ((Throwable) resultObject).getClass().getName()
+          + ": " + ((Throwable) resultObject).getMessage();
+  @Deprecated
+  @Deprecated
-    return this.throwable;
+    if (successful) {
+      return null;
+    }
+    return ((Throwable) resultObject);
+  }
+
+  public Object getResultObject() {
+    return resultObject;
-    DataSerializer.writeObject(this.throwable, out);
+    DataSerializer.writeObject(this.resultObject, out);
-    DataSerializer.writeObject(this.throwable, out);
+    DataSerializer.writeObject(this.resultObject, out);
-    this.throwable = DataSerializer.readObject(in);
+    this.resultObject = DataSerializer.readObject(in);
-    this.throwable = DataSerializer.readObject(in);
+    this.resultObject = DataSerializer.readObject(in);
+  @Deprecated
+  @Deprecated
-        + ", throwable=" + this.throwable + ", byteData=" + Arrays.toString(this.byteData) + "]";
+        + ", throwable=" + this.resultObject + ", byteData=" + Arrays.toString(this.byteData) + "]";

INS31 INS31 INS43 INS78 INS78 INS78 INS78 INS78 INS78 INS83 INS42 INS44 INS44 INS8 INS78 INS78 INS78 INS83 INS43 INS42 INS8 MOV43 MOV43 INS78 INS78 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS25 INS83 INS43 INS42 INS83 INS43 INS42 INS17 INS42 INS42 INS42 INS25 INS42 INS41 INS21 MOV21 INS42 INS42 INS42 INS62 INS8 INS8 INS42 INS42 INS42 INS42 INS33 INS42 INS8 INS36 INS42 INS7 UPD42 INS42 MOV43 MOV21 INS21 UPD42 INS41 INS11 INS22 MOV32 UPD42 INS7 INS33 INS43 INS42 UPD42 UPD42 INS52 INS42 UPD42 UPD42 INS22 INS9 INS42 INS52 INS42 UPD42 INS36 INS36 INS36 INS11 INS11 INS11 INS43 INS42 MOV43 INS42 INS43 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL7 DEL21