Merge branch 'release/1.4.0'

-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.SystemFailure;
-import org.apache.geode.cache.CacheClosedException;
-import org.apache.geode.cache.execute.FunctionAdapter;
+import org.apache.geode.cache.execute.Function;
-import org.apache.geode.internal.logging.LogService;
- * 
+ *
-public class DestroyDiskStoreFunction extends FunctionAdapter implements InternalEntity {
-  private static final Logger logger = LogService.getLogger();
-
+public class DestroyDiskStoreFunction implements Function, InternalEntity {
-    String memberId = "";
+    String memberId;
+    final DestroyDiskStoreFunctionArgs args = (DestroyDiskStoreFunctionArgs) context.getArguments();
+
+    InternalCache cache = (InternalCache) context.getCache();
+
+    DistributedMember member = cache.getDistributedSystem().getDistributedMember();
+
+    memberId = member.getId();
+    // If they set a name use it instead
+    if (!member.getName().equals("")) {
+      memberId = member.getName();
+    }
+
+    DiskStore diskStore = cache.findDiskStore(args.getId());
+
+    CliFunctionResult result;
-      final Object[] args = (Object[]) context.getArguments();
-      final String diskStoreName = (String) args[0];
-
-      InternalCache cache = (InternalCache) context.getCache();
-
-      DistributedMember member = cache.getDistributedSystem().getDistributedMember();
-
-      memberId = member.getId();
-      // If they set a name use it instead
-      if (!member.getName().equals("")) {
-        memberId = member.getName();
-      }
-
-      DiskStore diskStore = cache.findDiskStore(diskStoreName);
-
-      CliFunctionResult result;
-        XmlEntity xmlEntity = new XmlEntity(CacheXml.DISK_STORE, "name", diskStoreName);
+        XmlEntity xmlEntity = new XmlEntity(CacheXml.DISK_STORE, "name", args.getId());
-        result = new CliFunctionResult(memberId, false, "Disk store not found on this member");
+        if (args.isIfExists()) {
+          result = new CliFunctionResult(memberId, true,
+              "Skipping: Disk store not found on this member");
+        } else {
+          result = new CliFunctionResult(memberId, false, "Disk store not found on this member");
+        }
-      context.getResultSender().lastResult(result);
-
-    } catch (IllegalStateException isex) {
-      CliFunctionResult result = new CliFunctionResult(memberId, false, isex.getMessage());
-      context.getResultSender().lastResult(result);
-
-    } catch (CacheClosedException cce) {
-      CliFunctionResult result = new CliFunctionResult(memberId, false, null);
-      context.getResultSender().lastResult(result);
-
-    } catch (VirtualMachineError e) {
-      SystemFailure.initiateFailure(e);
-      throw e;
-
-    } catch (Throwable th) {
-      SystemFailure.checkFailure();
-      logger.error("Could not destroy disk store: {}", th.getMessage(), th);
-
-      CliFunctionResult result = new CliFunctionResult(memberId, th, null);
-      context.getResultSender().lastResult(result);
+    } catch (IllegalStateException ex) {
+      result = new CliFunctionResult(memberId, false, ex.getMessage());
+    context.getResultSender().lastResult(result);
-  @Override
-  public String getId() {
-    return CreateDiskStoreFunction.class.getName();
-  }

UPD40 UPD43 UPD42 MOV8 MOV60 INS54 MOV43 INS43 INS8 INS12 UPD42 UPD42 MOV42 MOV25 INS44 INS8 INS43 INS32 INS8 MOV43 INS42 INS21 UPD42 MOV42 UPD42 MOV42 INS42 INS25 INS7 MOV43 INS32 INS8 MOV8 INS42 INS14 INS42 INS42 INS21 MOV43 INS42 INS9 INS32 MOV43 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS14 MOV43 INS42 INS9 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL34 DEL2 DEL11 DEL43 DEL85 DEL5 DEL43 DEL85 DEL5 DEL42 DEL42 DEL45 DEL59 DEL60 DEL42 DEL44 DEL42 DEL42 DEL9 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL9 DEL33 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL33 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL41 DEL8 DEL31