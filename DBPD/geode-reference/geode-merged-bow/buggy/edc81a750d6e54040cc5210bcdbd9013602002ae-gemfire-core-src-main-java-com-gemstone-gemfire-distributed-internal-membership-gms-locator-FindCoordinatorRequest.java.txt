GEODE-77 adding additional test coverage

Test coverage is now > 71% for all membership services.
This also fixes a problem in GMSJoinLeave.join where a member that
was shut down & restarted with a start-locator setting formed a
split-brain.  Now we send a collection of previously attempted
coordinators with FindCoordinator requests, and a member receiving
a join request will check to see if the new member ought to assume
the role of coordinator.  See LocatorDUnitTest.testCollocatedLocatorWithSecurity.

+import java.util.Collection;
-  public InternalDistributedMember memberID;
+  private InternalDistributedMember memberID;
+  private Collection<InternalDistributedMember> rejectedCoordinators;
+  public FindCoordinatorRequest(InternalDistributedMember myId, Collection<InternalDistributedMember> rejectedCoordinators) {
+    this.memberID = myId;
+    this.rejectedCoordinators = rejectedCoordinators;
+  }
+  
+  public Collection<InternalDistributedMember> getRejectedCoordinators() {
+    return rejectedCoordinators;
+  }
+  
-    return "FindCoordinatorRequest(memberID="+memberID+")";
+    if (rejectedCoordinators != null) {
+      return "FindCoordinatorRequest(memberID="+memberID
+          +", rejected="+rejectedCoordinators+")";
+    } else {
+      return "FindCoordinatorRequest(memberID="+memberID+")";
+    }
+    DataSerializer.writeObject(this.rejectedCoordinators, out);
-
+    this.rejectedCoordinators = DataSerializer.readObject(in);

INS26 INS40 INS23 INS31 INS31 UPD83 INS83 INS74 INS59 INS83 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS8 INS8 INS43 INS43 INS42 INS43 INS42 INS74 INS42 INS21 INS21 INS43 INS43 INS41 INS25 INS21 INS21 INS42 INS42 INS42 INS43 INS43 INS7 INS7 INS42 INS42 INS42 INS27 INS8 MOV8 INS32 INS7 INS42 INS42 INS22 INS42 INS22 INS42 INS42 INS33 INS41 INS42 INS42 INS22 INS42 INS22 INS32 INS52 INS42 INS52 INS42 INS27 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45