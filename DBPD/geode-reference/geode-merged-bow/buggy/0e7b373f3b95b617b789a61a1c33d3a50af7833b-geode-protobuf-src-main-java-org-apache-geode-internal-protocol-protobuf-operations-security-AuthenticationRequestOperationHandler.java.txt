GEODE-3894: Create HandshakeRequest

added connection state processors to inject protocol state specific
functionality refactored existing authentication and authorization flows to use
connection state processors added new handshake message, handler, and state
processor

Signed-off-by: Bruce Schuchardt <bschuchardt@pivotal.io>

+import org.apache.geode.internal.protocol.state.ConnectionAuthenticatingStateProcessor;
+import org.apache.geode.internal.protocol.state.ConnectionStateProcessor;
+import org.apache.geode.internal.protocol.state.exception.ConnectionStateException;
+import org.apache.geode.internal.protocol.protobuf.ConnectionAPI;
+import org.apache.geode.internal.protocol.protobuf.utilities.ProtobufResponseUtilities;
-import org.apache.geode.internal.protocol.protobuf.AuthenticationAPI;
-import org.apache.geode.internal.protocol.security.processors.AuthorizationSecurityProcessor;
-import org.apache.geode.internal.protocol.security.Authenticator;
-    OperationHandler<AuthenticationAPI.AuthenticationRequest, AuthenticationAPI.AuthenticationResponse, ClientProtocol.ErrorResponse> {
+    OperationHandler<ConnectionAPI.AuthenticationRequest, ConnectionAPI.AuthenticationResponse, ClientProtocol.ErrorResponse> {
-  public Result<AuthenticationAPI.AuthenticationResponse, ClientProtocol.ErrorResponse> process(
-      SerializationService serializationService, AuthenticationAPI.AuthenticationRequest request,
+  public Result<ConnectionAPI.AuthenticationResponse, ClientProtocol.ErrorResponse> process(
+      SerializationService serializationService, ConnectionAPI.AuthenticationRequest request,
+    ConnectionAuthenticatingStateProcessor stateProcessor;
-    if (messageExecutionContext.getAuthenticationToken() != null) {
-      return Failure.of(ClientProtocol.ErrorResponse.newBuilder()
-          .setError(buildAndLogError(ProtocolErrorCode.ALREADY_AUTHENTICATED,
-              "The user has already been authenticated for this connection. Re-authentication is not supported at this time.",
-              null))
-          .build());
+    try {
+      stateProcessor = messageExecutionContext.getConnectionStateProcessor().allowAuthentication();
+    } catch (ConnectionStateException e) {
+      return Failure.of(ProtobufResponseUtilities.makeErrorResponse(e));
-    Authenticator authenticator = messageExecutionContext.getAuthenticator();
-      Object authenticationToken = authenticator.authenticate(properties);
-      messageExecutionContext.setSecurityProcessor(new AuthorizationSecurityProcessor());
-      messageExecutionContext.setAuthenticationToken(authenticationToken);
+      messageExecutionContext.setConnectionStateProcessor(stateProcessor.authenticate(properties));
-          .of(AuthenticationAPI.AuthenticationResponse.newBuilder().setAuthenticated(true).build());
+          .of(ConnectionAPI.AuthenticationResponse.newBuilder().setAuthenticated(true).build());
-      return Success.of(
-          AuthenticationAPI.AuthenticationResponse.newBuilder().setAuthenticated(false).build());
+      return Success
+          .of(ConnectionAPI.AuthenticationResponse.newBuilder().setAuthenticated(false).build());

MOV26 MOV26 MOV26 INS26 INS26 UPD40 UPD40 INS40 UPD40 INS40 UPD74 UPD43 UPD43 UPD74 UPD40 UPD40 UPD43 UPD43 INS60 INS54 INS54 UPD40 UPD40 INS43 INS59 INS8 INS12 INS8 MOV12 MOV12 INS42 INS42 INS21 INS44 INS8 INS21 MOV41 INS7 INS43 INS42 INS41 INS32 INS42 INS32 UPD42 MOV42 INS32 MOV42 UPD42 MOV42 INS32 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD40 UPD40 DEL40 DEL32 DEL42 DEL40 DEL45 DEL33 DEL32 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL25 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL14 DEL32 DEL21 DEL32 DEL21 DEL8 DEL54