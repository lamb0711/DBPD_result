GEODE-6283: have the management rest controller call the internal management service

* GEODE-6283: have the management rest controller call the internal cluster management service to actually create the region

* inject cluster management service to the rest controller
* have the controller produce json string for response
* refactor the controller exception handler to always send back json string

+import org.apache.commons.lang3.tuple.ImmutablePair;
+import org.apache.commons.lang3.tuple.Pair;
+import org.eclipse.jetty.webapp.WebAppContext;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.internal.cache.InternalCacheForClientAccess;
+  private final InternalCache cache;
-  public ManagementAgent(DistributionConfig config, SecurityService securityService) {
+  public ManagementAgent(DistributionConfig config, InternalCache cache) {
-    this.securityService = securityService;
+    this.cache = cache;
+    this.securityService = cache.getSecurityService();
-  public static InternalCacheForClientAccess getCache() {
-    InternalCache cache = (InternalCache) CacheFactory.getAnyInstance();
-    if (cache != null) {
-      return cache.getCacheForProcessingClientRequests();
-    }
-    return null;
-  }
-
+  public WebAppContext addWebApplication(String webAppContext, String warFilePath,
+      Pair<String, Object>... attributeNameValuePairs) {
+    if (httpServer == null) {
+      logger.info(
+          String.format("unable to add %s webapp. Http service is not started on this member.",
+              webAppContext));
+      return null;
+    }
+
+    return JettyHelper
+        .addWebApplication(httpServer, webAppContext, warFilePath, attributeNameValuePairs);
+  }
+
-        .getManagementService(getCache());
+        .getManagementService(cache);
-              "Unable to find GemFire V1 Management REST API WAR file; the Management REST Interface for GemFire will not be accessible.");
-        }
-      }
-
-      // Find the V2 Management rest WAR file
-      final String gemfireManagementWar = agentUtil.findWarLocation("geode-web-management");
-      if (gemfireManagementWar == null) {
-        if (logger.isDebugEnabled()) {
-          logger.debug(
-              "Unable to find GemFire V2 Management REST API WAR file; the Management REST Interface for GemFire will not be accessible.");
+              "Unable to find Geode V1 Management REST API WAR file; the Management REST Interface for Geode will not be accessible.");
-            "Unable to find Pulse web application WAR file; Pulse for GemFire will not be accessible";
+            "Unable to find Pulse web application WAR file; Pulse for Geode will not be accessible";
-            "Unable to find GemFire Developer REST API WAR file; the Developer REST Interface for GemFire will not be accessible.";
+            "Unable to find Geode Developer REST API WAR file; the Developer REST Interface for Geode will not be accessible.";
-        if (agentUtil.isAnyWarFileAvailable(gemfireWar, gemfireManagementWar, pulseWar,
-            gemfireAPIWar)) {
+        if (agentUtil.isAnyWarFileAvailable(gemfireWar, pulseWar, gemfireAPIWar)) {
+          Pair<String, Object> securityServiceAttr =
+              new ImmutablePair<>(JettyHelper.SECURITY_SERVICE_SERVLET_CONTEXT_PARAM,
+                  securityService);
+          Pair<String, Object> sslConfigAttr =
+              new ImmutablePair<>(JettyHelper.GEODE_SSLCONFIG_SERVLET_CONTEXT_PARAM,
+                  createSslProps());
+
+          // if jmx manager is running, admin rest should be available, either on locator or server
-            this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/gemfire", gemfireWar,
-                securityService, null);
-            this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/geode-mgmt",
-                gemfireWar, securityService, null);
+            addWebApplication("/gemfire", gemfireWar, securityServiceAttr);
+            addWebApplication("/geode-mgmt", gemfireWar, securityServiceAttr);
-          if (agentUtil.isAnyWarFileAvailable(gemfireManagementWar)) {
-            this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/geode-management",
-                gemfireManagementWar, securityService, null);
-          }
-
+          // if jmx manager is running, pulse should be available, either on locator or server
+          // we need to pass in the sllConfig to pulse because it needs it to make jmx connection
-            this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/pulse", pulseWar,
-                securityService, createSslProps());
+            addWebApplication("/pulse", pulseWar, securityServiceAttr, sslConfigAttr);
+          // the dev rest api is only available on servers
-              this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/geode",
-                  gemfireAPIWar, securityService, null);
-              this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/gemfire-api",
-                  gemfireAPIWar, securityService, null);
+              addWebApplication("/geode", gemfireAPIWar, securityServiceAttr);
+              addWebApplication("/gemfire-api", gemfireAPIWar, securityServiceAttr);
-            InternalCache cache = getCache();
-
-          logger.error("Failed to properly release resources held by the HTTP service: {}",
+          logger.info("Failed to properly release resources held by the HTTP service: {}",

MOV26 MOV26 INS26 MOV31 UPD40 UPD40 INS40 INS23 INS83 INS83 MOV43 INS59 UPD43 UPD42 INS44 INS44 INS44 INS8 INS42 MOV43 UPD42 INS21 UPD42 INS43 INS42 INS43 INS42 INS74 INS42 MOV25 INS41 UPD42 MOV42 INS7 UPD42 MOV42 INS42 INS43 MOV43 INS43 UPD27 INS32 INS22 INS42 INS32 INS42 INS42 UPD42 INS21 MOV41 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS42 MOV32 UPD45 UPD45 INS60 INS60 INS74 INS59 INS74 INS59 MOV32 INS8 UPD45 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS14 INS21 MOV21 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS42 INS42 INS74 INS40 MOV32 INS32 INS32 INS32 UPD42 INS43 INS43 UPD42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 MOV42 UPD45 MOV45 UPD42 MOV42 UPD42 MOV42 MOV42 MOV45 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS32 MOV42 MOV45 MOV42 UPD42 MOV42 MOV42 MOV45 MOV42 UPD42 MOV42 DEL42 DEL83 DEL32 DEL41 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL32 DEL42 DEL42 DEL32 DEL83 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL52 DEL42 DEL22 DEL45 DEL42 DEL42 DEL33 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL52 DEL42 DEL22 DEL45 DEL42 DEL42 DEL33 DEL32 DEL7 DEL21 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL33 DEL32 DEL7 DEL32 DEL8 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL32 DEL7 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL33 DEL32 DEL7 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL33 DEL32 DEL7 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60