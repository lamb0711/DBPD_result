GEODE-155:
- Fixes intermittent failure in RegionWithHDFS*DUnitTest about incorrect number of hoplog files getting created.
- Caused due to an earlier test not cleaning up static variables in ParallelGatewaySenderQueue.
- These are indeed cleaned up during GemFireCacheImpl.close() if there are any GatewaySenders running in the system.
- But if a region with gateway-senders associated with it, is destroyed first before a cache.close(), then the gateway senders are only stopped,
    and removed from allGatewaySenders list. But the static variables are not cleaned up.
- Later, during GemFireCacheImpl.close(), as the allGatewaySenders list is empty, it skips cleaning the static variables.
- As a fix, invoking a static clean-up method of ParallelGatewaySenderQueue explicitly during cache.close().
- Retained the non-static ParallelGatewaySenderQueue.cleanUp(), if required in future development for performing instance-specific clean-up.
- Minor formatting changes in the unit tests.

-  private void cleanupConflationThreadPool() {
+  private static void cleanupConflationThreadPool(AbstractGatewaySender sender) {
-      if (!conflationExecutor.awaitTermination(1, TimeUnit.SECONDS))
-        logger.warn(LocalizedMessage.create(LocalizedStrings.ParallelGatewaySenderQueue_COULD_NOT_TERMINATE_CONFLATION_THREADPOOL, this.sender));
+        if (!conflationExecutor.awaitTermination(1, TimeUnit.SECONDS)) {
+          logger
+              .warn(LocalizedMessage
+                  .create(
+                      LocalizedStrings.ParallelGatewaySenderQueue_COULD_NOT_TERMINATE_CONFLATION_THREADPOOL,
+                      (sender == null ? "all" : sender)));
+        }
-    if(buckToDispatchLock != null){
-      this.buckToDispatchLock = null;
+    cleanUpStatics(this.sender);
+  }
+
+  /**
+   * @param sender
+   *          can be null.
+   */
+  public static void cleanUpStatics(AbstractGatewaySender sender) {
+    if (buckToDispatchLock != null) {
+      buckToDispatchLock = null;
-    if(regionToDispatchedKeysMapEmpty != null) {
-      this.regionToDispatchedKeysMapEmpty = null;
+    if (regionToDispatchedKeysMapEmpty != null) {
+      regionToDispatchedKeysMapEmpty = null;
-    this.regionToDispatchedKeysMap.clear();
+    regionToDispatchedKeysMap.clear();
-      if (this.removalThread != null) {
-        this.removalThread.shutdown();
-        this.removalThread = null;
+      if (removalThread != null) {
+        removalThread.shutdown();
+        removalThread = null;
-      cleanupConflationThreadPool();
-      this.conflationExecutor = null;
+      cleanupConflationThreadPool(sender);
+      conflationExecutor = null;
-  
+

INS31 INS83 INS44 MOV29 INS83 INS39 INS42 INS8 INS29 INS83 UPD42 INS44 INS43 INS42 MOV21 INS65 INS43 INS42 INS42 MOV32 INS42 INS66 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS36 INS16 INS27 INS45 INS42 INS42 INS33 DEL42 DEL40 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22