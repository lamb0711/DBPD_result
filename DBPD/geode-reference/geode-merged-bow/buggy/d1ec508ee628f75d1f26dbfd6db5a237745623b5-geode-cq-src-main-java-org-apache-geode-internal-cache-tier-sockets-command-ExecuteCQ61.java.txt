GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-    AcceptorImpl acceptor = servConn.getAcceptor();
-    CachedRegionHelper crHelper = servConn.getCachedRegionHelper();
-    ClientProxyMembershipID id = servConn.getProxyID();
-    CacheServerStats stats = servConn.getCacheServerStats();
+    AcceptorImpl acceptor = serverConnection.getAcceptor();
+    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
+    ClientProxyMembershipID id = serverConnection.getProxyID();
+    CacheServerStats stats = serverConnection.getCacheServerStats();
-    servConn.setAsTrue(REQUIRES_RESPONSE);
-    servConn.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
-    String cqName = msg.getPart(0).getString();
-    String cqQueryString = msg.getPart(1).getString();
-    int cqState = msg.getPart(2).getInt();
+    String cqName = clientMessage.getPart(0).getString();
+    String cqQueryString = clientMessage.getPart(1).getString();
+    int cqState = clientMessage.getPart(2).getInt();
-    Part isDurablePart = msg.getPart(3);
+    Part isDurablePart = clientMessage.getPart(3);
-    Part regionDataPolicyPart = msg.getPart(msg.getNumberOfParts() - 1);
+    Part regionDataPolicyPart = clientMessage.getPart(clientMessage.getNumberOfParts() - 1);
-      logger.debug("{}: Received {} request from {} CqName: {} queryString: {}", servConn.getName(),
-          MessageType.getString(msg.getMessageType()), servConn.getSocketString(), cqName,
-          cqQueryString);
+      logger.debug("{}: Received {} request from {} CqName: {} queryString: {}",
+          serverConnection.getName(), MessageType.getString(clientMessage.getMessageType()),
+          serverConnection.getSocketString(), cqName, cqQueryString);
-        sendCqResponse(MessageType.CQDATAERROR_MSG_TYPE, err, msg.getTransactionId(), null,
-            servConn);
+        sendCqResponse(MessageType.CQDATAERROR_MSG_TYPE, err, clientMessage.getTransactionId(),
+            null, serverConnection);
-      AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-      servConn.setCq(cqName, isDurable);
+      serverConnection.setCq(cqName, isDurable);
-      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, "", msg.getTransactionId(), cqe, servConn);
-      servConn.removeCq(cqName, isDurable);
+      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, "", clientMessage.getTransactionId(), cqe,
+          serverConnection);
+      serverConnection.removeCq(cqName, isDurable);
-      writeChunkedException(msg, e, false, servConn);
-      servConn.removeCq(cqName, isDurable);
+      writeChunkedException(clientMessage, e, serverConnection);
+      serverConnection.removeCq(cqName, isDurable);
-    if (msg.getMessageType() == MessageType.EXECUTECQ_WITH_IR_MSG_TYPE) {
+    if (clientMessage.getMessageType() == MessageType.EXECUTECQ_WITH_IR_MSG_TYPE) {
-        successQuery = processQuery(msg, query, cqQueryString, cqRegionNames, start, cqQuery,
-            executeCQContext, servConn, sendResults);
+        successQuery = processQuery(clientMessage, query, cqQueryString, cqRegionNames, start,
+            cqQuery, executeCQContext, serverConnection, sendResults);
-          msg.getTransactionId(), null, servConn);
+          clientMessage.getTransactionId(), null, serverConnection);
-    servConn.setAsTrue(RESPONDED);
+    serverConnection.setAsTrue(RESPONDED);

UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL9