GEODE-1426: remove sqlf code from GemFireCacheImpl

The sqlf instance variables in GemFireCacheImpl
and all subsequent callers of them have been removed.

-    if (cache != null && cache.isSqlfSystem()) {
-      String provider = GemFireCacheImpl.SQLF_ENTRY_FACTORY_PROVIDER;
-      try {
-        Class<?> factoryProvider = ClassPathLoader.getLatest().forName(provider);
-        Method method = factoryProvider.getDeclaredMethod(
-            "getRegionEntryFactory", new Class[] { Boolean.TYPE, Boolean.TYPE,
-                Boolean.TYPE, Object.class, InternalRegionArguments.class });
-        RegionEntryFactory ref = (RegionEntryFactory)method.invoke(null,
-            new Object[] { Boolean.valueOf(attr.statisticsEnabled),
-                Boolean.valueOf(isLRU), Boolean.valueOf(isDisk), owner,
-                internalRegionArgs });
-
-        // TODO need to have the SQLF entry factory support version stamp storage
-        setEntryFactory(ref);
-
-      }
-      catch (Exception e) {
-        throw new CacheRuntimeException(
-            "Exception in obtaining RegionEntry Factory" + " provider class ",
-            e) {
-        };
-      }
-    }
-    else {
-      setEntryFactory(new RegionEntryFactoryBuilder().getRegionEntryFactoryOrNull(attr.statisticsEnabled,isLRU,isDisk,withVersioning,offHeap));
-    }
+    setEntryFactory(new RegionEntryFactoryBuilder().getRegionEntryFactoryOrNull(attr.statisticsEnabled,isLRU,isDisk,withVersioning,offHeap));
-          throwExceptionForSqlFire(event);
-                throwExceptionForSqlFire(event);
-      if (event.hasDelta() || event.getOperation().guaranteesOldValue()
-          || GemFireCacheImpl.sqlfSystem()) {
+      if (event.hasDelta() || event.getOperation().guaranteesOldValue()) {
-          event.setOldValue(oldValueInVMOrDisk, requireOldValue
-              || GemFireCacheImpl.sqlfSystem());
+          event.setOldValue(oldValueInVMOrDisk, requireOldValue);
-          event.setOldValue(oldValueInVM,
-              requireOldValue || GemFireCacheImpl.sqlfSystem());
+          event.setOldValue(oldValueInVM, requireOldValue);
-  /**
-   * Asif: If the system is sqlfabric and the event has delta, then re == null 
-   * implies update on non existent row . Throwing ENFE in that case 
-   * As  returning a boolean etc has other complications in terms of PR reattempt etc  
-   */
-  private void throwExceptionForSqlFire(EntryEventImpl event) {
-    if (event.hasDelta() && _getOwner().getGemFireCache().isSqlfSystem()) {
-      throw new EntryNotFoundException(
-          "SqlFabric::No row found for update");
-    }
-  }
-

MOV21 MOV25 MOV25 INS42 INS42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL43 DEL85 DEL5 DEL40 DEL40 DEL40 DEL42 DEL43 DEL57 DEL42 DEL43 DEL57 DEL4 DEL3 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL33 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL4 DEL3 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL45 DEL27 DEL42 DEL1 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31