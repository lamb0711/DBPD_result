GEODE-2485: fix leak in tx suspend/resume

The CCPTimer is now purged for every 1000 cancels done.
So we will now no longer have more than 1000
cancelled tasks eating up memory.
Now uses internalSuspend in two places the previously used suspend.
Since internalSuspend does not schedule a timer task
these places will have no more issues with leaking memory
and these code paths will perform better.

renamed resume(TxStateProxy) to internalResume for clarity.

internalResume no longer checks for a TimerTask to cancel
since internalSuspend does not add one.
Instead the only code that checks for a TimerTask is "resume".

-          this.txMgr.resume(tx);
+          this.txMgr.internalResume(tx);
+   * For use by unit tests to inject a mocked ccpTimer
+   */
+  void setCCPTimer(SystemTimer ccpTimer) {
+    this.ccpTimer = ccpTimer;
+  }
+
+  static final int PURGE_INTERVAL = 1000;
+  private int cancelCount = 0;
+
+  /**
+   * Does a periodic purge of the CCPTimer to prevent a large number of cancelled tasks from
+   * building up in it. See GEODE-2485.
+   */
+  public void purgeCCPTimer() {
+    synchronized (ccpTimerMutex) {
+      if (ccpTimer != null) {
+        cancelCount++;
+        if (cancelCount == PURGE_INTERVAL) {
+          cancelCount = 0;
+          ccpTimer.timerPurge();
+        }
+      }
+    }
+  }
+
+  /**

INS31 INS23 INS23 INS31 INS29 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS8 INS65 INS43 INS42 INS21 INS42 INS34 INS42 INS34 INS65 INS51 INS66 INS42 INS7 INS66 INS66 INS42 INS8 INS22 INS42 INS25 INS52 INS42 INS27 INS8 INS42 INS33 INS21 INS25 INS37 INS27 INS8 INS42 INS42 INS42 INS21 INS21 INS7 INS32 UPD42 INS42 INS34 INS42 INS42