GEODE-5535: Upgrade FastClasspathScanner to 4.0.6 (#2310)

- Use less memory for scanning by reusing a single
  instance of ClassGraph.
-  private void loadUserCommands() {
-    final Set<String> userCommandPackages = new HashSet<String>();
+  private Set<String> getUserCommandPackages() {
+    final Set<String> userCommandPackages = new HashSet<>();
+    return userCommandPackages;
+  }
+
+  private void loadUserCommands(ClasspathScanLoadHelper scanner, Set<String> restrictedToPackages) {
+    if (restrictedToPackages.size() == 0) {
+      return;
+    }
+
-    for (String userCommandPackage : userCommandPackages) {
-      try {
-        Set<Class<?>> foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(
-            CommandMarker.class, userCommandPackage, GfshCommand.class.getPackage().getName());
-        for (Class<?> klass : foundClasses) {
-          try {
-            add((CommandMarker) klass.newInstance());
-          } catch (Exception e) {
-            logWrapper.warning("Could not load User Commands from: " + klass + " due to "
-                + e.getLocalizedMessage()); // continue
-          }
+    try {
+      Set<Class<?>> foundClasses = scanner.scanPackagesForClassesImplementing(CommandMarker.class,
+          restrictedToPackages.toArray(new String[] {}));
+      for (Class<?> klass : foundClasses) {
+        try {
+          add((CommandMarker) klass.newInstance());
+        } catch (Exception e) {
+          logWrapper.warning("Could not load User Commands from: " + klass + " due to "
+              + e.getLocalizedMessage()); // continue
-        raiseExceptionIfEmpty(foundClasses, "User Command");
-      } catch (IllegalStateException e) {
-        logWrapper.warning(e.getMessage(), e);
-        throw e;
+      raiseExceptionIfEmpty(foundClasses, "User Command");
+    } catch (IllegalStateException e) {
+      logWrapper.warning(e.getMessage(), e);
+      throw e;
-    loadUserCommands();
+    Set<String> userCommandPackages = getUserCommandPackages();
+    Set<String> packagesToScan = new HashSet<>(userCommandPackages);
+    packagesToScan.add("org.apache.geode.management.internal.cli.converters");
+    packagesToScan.add("org.springframework.shell.converters");
+    packagesToScan.add(GfshCommand.class.getPackage().getName());
+    packagesToScan.add(InternalGfshCommand.class.getPackage().getName());
+    // Create one scanner to be used everywhere
+    ClasspathScanLoadHelper scanner = new ClasspathScanLoadHelper(packagesToScan);
+
+    loadUserCommands(scanner, userCommandPackages);
-    loadGeodeCommands();
-    loadConverters();
+    loadGeodeCommands(scanner);
+    loadConverters(scanner);
-  private void loadConverters() {
+  private void loadConverters(ClasspathScanLoadHelper scanner) {
-      foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(Converter.class,
+      foundClasses = scanner.scanPackagesForClassesImplementing(Converter.class,
-      foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(Converter.class,
+      foundClasses = scanner.scanPackagesForClassesImplementing(Converter.class,
-  private void loadGeodeCommands() {
+  private void loadGeodeCommands(ClasspathScanLoadHelper scanner) {
-      foundClasses = ClasspathScanLoadHelper.scanPackagesForClassesImplementing(CommandMarker.class,
+      foundClasses = scanner.scanPackagesForClassesImplementing(CommandMarker.class,

INS31 MOV74 UPD42 INS83 INS39 INS42 INS44 INS44 MOV8 INS44 INS44 INS41 INS43 INS42 INS74 INS42 INS25 INS60 INS60 INS21 INS21 INS21 INS21 INS60 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS43 INS43 INS27 INS8 INS74 INS59 INS74 INS59 INS32 INS32 MOV32 INS32 INS43 INS59 INS42 MOV21 MOV21 INS42 INS43 INS43 INS42 INS42 INS32 INS34 INS41 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS45 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 UPD74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS32 INS42 INS43 INS42 INS32 INS43 INS57 INS42 INS42 INS42 INS42 MOV57 INS32 INS42 INS43 UPD42 UPD45 UPD42 UPD45 UPD42 INS42 INS42 INS3 INS42 INS5 INS4 MOV43 INS85 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL70 DEL42