GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-    CachedRegionHelper crHelper = servConn.getCachedRegionHelper();
-    GatewayReceiverStats stats = (GatewayReceiverStats) servConn.getCacheServerStats();
+    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
+    GatewayReceiverStats stats = (GatewayReceiverStats) serverConnection.getCacheServerStats();
-    stats.incBatchSize(msg.getPayloadLength());
+    stats.incBatchSize(clientMessage.getPayloadLength());
-    Part numberOfEventsPart = msg.getPart(0);
+    Part numberOfEventsPart = clientMessage.getPart(0);
-    Part batchIdPart = msg.getPart(1);
+    Part batchIdPart = clientMessage.getPart(1);
-    if (batchId <= servConn.getLatestBatchIdReplied()) {
+    if (batchId <= serverConnection.getLatestBatchIdReplied()) {
-        writeReply(msg, servConn, batchId, numberOfEvents);
+        writeReply(clientMessage, serverConnection, batchId, numberOfEvents);
-    if (batchId != servConn.getLatestBatchIdReplied() + 1) {
+    if (batchId != serverConnection.getLatestBatchIdReplied() + 1) {
-          new Object[] {batchId, servConn.getLatestBatchIdReplied()}));
+          new Object[] {batchId, serverConnection.getLatestBatchIdReplied()}));
-      servConn.incrementLatestBatchIdReplied(batchId);
+      serverConnection.incrementLatestBatchIdReplied(batchId);
-          servConn.getName(), batchId, numberOfEvents, msg.getPayloadLength(),
-          (earlyAck ? "early" : "normal"), servConn.getSocketString());
+          serverConnection.getName(), batchId, numberOfEvents, clientMessage.getPayloadLength(),
+          (earlyAck ? "early" : "normal"), serverConnection.getSocketString());
-            servConn.getName(), batchId, numberOfEvents, msg.getPayloadLength(),
-            (earlyAck ? "early" : "normal"), servConn.getSocketString());
+            serverConnection.getName(), batchId, numberOfEvents, clientMessage.getPayloadLength(),
+            (earlyAck ? "early" : "normal"), serverConnection.getSocketString());
-    int dsid = msg.getPart(partNumber++).getInt();
+    int dsid = clientMessage.getPart(partNumber++).getInt();
-        msg.getPart(partNumber++).getSerializedForm()[0] == 1 ? true : false;
+        clientMessage.getPart(partNumber++).getSerializedForm()[0] == 1 ? true : false;
-      Part actionTypePart = msg.getPart(partNumber);
+      Part actionTypePart = clientMessage.getPart(partNumber);
-        Part possibleDuplicatePart = msg.getPart(partNumber + 1);
+        Part possibleDuplicatePart = clientMessage.getPart(partNumber + 1);
-              new Object[] {servConn.getName(), Integer.valueOf(batchId),
+              new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-        regionNamePart = msg.getPart(partNumber + 2);
+        regionNamePart = clientMessage.getPart(partNumber + 2);
-        Part eventIdPart = msg.getPart(partNumber + 3);
-        eventIdPart.setVersion(servConn.getClientVersion());
+        Part eventIdPart = clientMessage.getPart(partNumber + 3);
+        eventIdPart.setVersion(serverConnection.getClientVersion());
-              new Object[] {servConn.getName(), Integer.valueOf(batchId),
+              new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-        keyPart = msg.getPart(partNumber + 4);
+        keyPart = clientMessage.getPart(partNumber + 4);
-              new Object[] {servConn.getName(), Integer.valueOf(batchId),
+              new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-            valuePart = msg.getPart(partNumber + 5);
+            valuePart = clientMessage.getPart(partNumber + 5);
-            callbackArgExistsPart = msg.getPart(index++); {
+            callbackArgExistsPart = clientMessage.getPart(index++); {
-              callbackArgPart = msg.getPart(index++);
+              callbackArgPart = clientMessage.getPart(index++);
-                    new Object[] {servConn.getName(), Integer.valueOf(batchId),
+                    new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-                  servConn.getName(), batchId, servConn.getSocketString(), regionName, key,
-                  valuePart, callbackArg, eventId);
+                  serverConnection.getName(), batchId, serverConnection.getSocketString(),
+                  regionName, key, valuePart, callbackArg, eventId);
-            versionTimeStamp = msg.getPart(index++).getLong();
+            versionTimeStamp = clientMessage.getPart(index++).getLong();
-              Object[] messageArgs = new Object[] {servConn.getName(), Integer.valueOf(batchId)};
+              Object[] messageArgs =
+                  new Object[] {serverConnection.getName(), Integer.valueOf(batchId)};
-              handleRegionNull(servConn, regionName, batchId);
+              handleRegionNull(serverConnection, regionName, batchId);
-                AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+                AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-                      servConn.getProxyID(), false, clientEvent, false);
+                      serverConnection.getProxyID(), false, clientEvent, false);
-                        servConn.getProxyID(), false, clientEvent);
+                        serverConnection.getProxyID(), false, clientEvent);
-                  servConn.setModificationInfo(true, regionName, key);
+                  serverConnection.setModificationInfo(true, regionName, key);
-                          .toLocalizedString(new Object[] {servConn.getName(), regionName, key,
-                              valuePart, callbackArg}));
+                          .toLocalizedString(new Object[] {serverConnection.getName(), regionName,
+                              key, valuePart, callbackArg}));
-                    new Object[] {servConn.getName(), Integer.valueOf(batchId),
+                    new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-            valuePart = msg.getPart(partNumber + 5);
+            valuePart = clientMessage.getPart(partNumber + 5);
-            callbackArgExistsPart = msg.getPart(index++); {
+            callbackArgExistsPart = clientMessage.getPart(index++); {
-              callbackArgPart = msg.getPart(index++);
+              callbackArgPart = clientMessage.getPart(index++);
-                    new Object[] {servConn.getName(), Integer.valueOf(batchId),
+                    new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-            versionTimeStamp = msg.getPart(index++).getLong();
+            versionTimeStamp = clientMessage.getPart(index++).getLong();
-                  servConn.getName(), batchId, servConn.getSocketString(), regionName, key,
-                  valuePart, callbackArg);
+                  serverConnection.getName(), batchId, serverConnection.getSocketString(),
+                  regionName, key, valuePart, callbackArg);
-              Object[] messageArgs = new Object[] {servConn.getName(), Integer.valueOf(batchId)};
+              Object[] messageArgs =
+                  new Object[] {serverConnection.getName(), Integer.valueOf(batchId)};
-              handleRegionNull(servConn, regionName, batchId);
+              handleRegionNull(serverConnection, regionName, batchId);
-                AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+                AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-                      servConn.getProxyID(), false, clientEvent);
+                      serverConnection.getProxyID(), false, clientEvent);
-                  servConn.setModificationInfo(true, regionName, key);
+                  serverConnection.setModificationInfo(true, regionName, key);
-                  final Object[] msgArgs =
-                      new Object[] {servConn.getName(), regionName, key, valuePart, callbackArg};
+                  final Object[] msgArgs = new Object[] {serverConnection.getName(), regionName,
+                      key, valuePart, callbackArg};
-                if (servConn.getCachedRegionHelper().getCache().getCancelCriterion()
+                if (serverConnection.getCachedRegionHelper().getCache().getCancelCriterion()
-                        servConn.getName(), MessageType.getString(msg.getMessageType()),
-                        servConn.getProxyID());
+                        serverConnection.getName(),
+                        MessageType.getString(clientMessage.getMessageType()),
+                        serverConnection.getProxyID());
-                  servConn.setFlagProcessMessagesAsFalse();
-                  servConn.setClientDisconnectedException(e);
+                  serverConnection.setFlagProcessMessagesAsFalse();
+                  serverConnection.setClientDisconnectedException(e);
-                    new Object[] {servConn.getName(), Integer.valueOf(batchId),
+                    new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-            callbackArgExistsPart = msg.getPart(index++); {
+            callbackArgExistsPart = clientMessage.getPart(index++); {
-              callbackArgPart = msg.getPart(index++);
+              callbackArgPart = clientMessage.getPart(index++);
-                    new Object[] {servConn.getName(), Integer.valueOf(batchId),
+                    new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-            versionTimeStamp = msg.getPart(index++).getLong();
+            versionTimeStamp = clientMessage.getPart(index++).getLong();
-                  servConn.getName(), batchId, servConn.getSocketString(), regionName, key);
+                  serverConnection.getName(), batchId, serverConnection.getSocketString(),
+                  regionName, key);
-              Object[] messageArgs = new Object[] {servConn.getName(), Integer.valueOf(batchId)};
+              Object[] messageArgs =
+                  new Object[] {serverConnection.getName(), Integer.valueOf(batchId)};
-              handleRegionNull(servConn, regionName, batchId);
+              handleRegionNull(serverConnection, regionName, batchId);
-                AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+                AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-                region.basicBridgeDestroy(key, callbackArg, servConn.getProxyID(), false,
+                region.basicBridgeDestroy(key, callbackArg, serverConnection.getProxyID(), false,
-                servConn.setModificationInfo(true, regionName, key);
+                serverConnection.setModificationInfo(true, regionName, key);
-                    new Object[] {servConn.getName(), key}));
+                    new Object[] {serverConnection.getName(), key}));
-              regionNamePart = msg.getPart(partNumber + 2);
+              regionNamePart = clientMessage.getPart(partNumber + 2);
-              eventIdPart = msg.getPart(partNumber + 3);
+              eventIdPart = clientMessage.getPart(partNumber + 3);
-              keyPart = msg.getPart(partNumber + 4);
+              keyPart = clientMessage.getPart(partNumber + 4);
-              callbackArgExistsPart = msg.getPart(index++);
+              callbackArgExistsPart = clientMessage.getPart(index++);
-                callbackArgPart = msg.getPart(index++);
+                callbackArgPart = clientMessage.getPart(index++);
-                  new Object[] {servConn.getName(), Integer.valueOf(batchId),
+                  new Object[] {serverConnection.getName(), Integer.valueOf(batchId),
-            versionTimeStamp = msg.getPart(index++).getLong();
+            versionTimeStamp = clientMessage.getPart(index++).getLong();
-                  servConn.getName(), batchId, servConn.getSocketString(), regionName, key,
-                  valuePart, callbackArg);
+                  serverConnection.getName(), batchId, serverConnection.getSocketString(),
+                  regionName, key, valuePart, callbackArg);
-              Object[] messageArgs = new Object[] {servConn.getName(), Integer.valueOf(batchId),
-                  Integer.valueOf(numberOfEvents)};
+              Object[] messageArgs = new Object[] {serverConnection.getName(),
+                  Integer.valueOf(batchId), Integer.valueOf(numberOfEvents)};
-                handleRegionNull(servConn, regionName, batchId);
+                handleRegionNull(serverConnection, regionName, batchId);
-                  region.basicBridgeUpdateVersionStamp(key, callbackArg, servConn.getProxyID(),
-                      false, clientEvent);
+                  region.basicBridgeUpdateVersionStamp(key, callbackArg,
+                      serverConnection.getProxyID(), false, clientEvent);
-                      new Object[] {servConn.getName(), key}));
+                      new Object[] {serverConnection.getName(), key}));
-                new Object[] {servConn.getName(), Integer.valueOf(actionType),
-                    servConn.getSocketString()}));
+                new Object[] {serverConnection.getName(), Integer.valueOf(actionType),
+                    serverConnection.getSocketString()}));
-              servConn.getName(), MessageType.getString(msg.getMessageType()),
-              servConn.getProxyID());
+              serverConnection.getName(), MessageType.getString(clientMessage.getMessageType()),
+              serverConnection.getProxyID());
-        servConn.setFlagProcessMessagesAsFalse();
-        servConn.setClientDisconnectedException(e);
+        serverConnection.setFlagProcessMessagesAsFalse();
+        serverConnection.setClientDisconnectedException(e);
-        checkForInterrupt(servConn, e);
+        checkForInterrupt(serverConnection, e);
-              new Object[] {servConn.getMembershipID()}), e.getCause());
+              new Object[] {serverConnection.getMembershipID()}), e.getCause());
-      servConn.incrementLatestBatchIdReplied(batchId);
-      writeFatalException(msg, fatalException, servConn, batchId);
-      servConn.setAsTrue(RESPONDED);
+      serverConnection.incrementLatestBatchIdReplied(batchId);
+      writeFatalException(clientMessage, fatalException, serverConnection, batchId);
+      serverConnection.setAsTrue(RESPONDED);
-      servConn.incrementLatestBatchIdReplied(batchId);
-      writeBatchException(msg, exceptions, servConn, batchId);
-      servConn.setAsTrue(RESPONDED);
+      serverConnection.incrementLatestBatchIdReplied(batchId);
+      writeBatchException(clientMessage, exceptions, serverConnection, batchId);
+      serverConnection.setAsTrue(RESPONDED);
-      servConn.incrementLatestBatchIdReplied(batchId);
+      serverConnection.incrementLatestBatchIdReplied(batchId);
-      writeReply(msg, servConn, batchId, numberOfEvents);
-      servConn.setAsTrue(RESPONDED);
+      writeReply(clientMessage, serverConnection, batchId, numberOfEvents);
+      serverConnection.setAsTrue(RESPONDED);
-            servConn.getName(), batchId, numberOfEvents, msg.getPayloadLength(),
-            (earlyAck ? "early" : "normal"), servConn.getSocketString());
+            serverConnection.getName(), batchId, numberOfEvents, clientMessage.getPayloadLength(),
+            (earlyAck ? "early" : "normal"), serverConnection.getSocketString());

