GEODE-1570: improve rest security framework

 * use annotations for authorization
 * consolidate tests
 * delete unused classes

-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.rest.internal.web.controllers.support.JSONTypes;
-import org.apache.geode.rest.internal.web.controllers.support.RegionData;
-import org.apache.geode.rest.internal.web.controllers.support.RegionEntryData;
-import org.apache.geode.rest.internal.web.exception.ResourceNotFoundException;
-import org.apache.geode.rest.internal.web.util.ArrayUtils;
+import org.springframework.security.access.prepost.PreAuthorize;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.rest.internal.web.controllers.support.JSONTypes;
+import org.apache.geode.rest.internal.web.controllers.support.RegionData;
+import org.apache.geode.rest.internal.web.controllers.support.RegionEntryData;
+import org.apache.geode.rest.internal.web.exception.ResourceNotFoundException;
+import org.apache.geode.rest.internal.web.util.ArrayUtils;
+
+  @PreAuthorize("@securityService.authorize('DATA', 'WRITE', #region)")
-    securityService.authorizeRegionWrite(region);
-    
-    if(logger.isDebugEnabled()){
-      logger.debug("Posting (creating/putIfAbsent) JSON document ({}) to Region ({}) with Key ({})...",
+
+    logger.debug("Posting (creating/putIfAbsent) JSON document ({}) to Region ({}) with Key ({})...",
-    }
+
+  @PreAuthorize("@securityService.authorize('DATA', 'READ', #region)")
-    securityService.authorizeRegionRead(region);
-    if(logger.isDebugEnabled()){
-      logger.debug("Reading all data in Region ({})...", region);
-    }
+    logger.debug("Reading all data in Region ({})...", region);
+
+  @PreAuthorize("@securityService.authorizeKeys('READ', #region, #keys)")
-
-    for (String key : keys)
-      securityService.authorizeRegionRead(region, key);
-    if(logger.isDebugEnabled()){
-      logger.debug("Reading data for keys ({}) in Region ({})",
+    logger.debug("Reading data for keys ({}) in Region ({})",
-    }
+  @PreAuthorize("@securityService.authorizeKeys('WRITE', #region, #keys)")
-    for (String key : keys)
-      securityService.authorizeRegionWrite(region, key);
-    if(logger.isDebugEnabled()){
-      logger.debug("updating key(s) for region ({}) ", region);
-    }
+    logger.debug("updating key(s) for region ({}) ", region);
+
+  @PreAuthorize("@securityService.authorize('DATA', 'READ', #region)")
-    securityService.authorizeRegionRead(region);
-    if(logger.isDebugEnabled()){
-      logger.debug("Determining the number of entries in Region ({})...", region);
-    }
+    logger.debug("Determining the number of entries in Region ({})...", region);
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 INS79 INS79 INS79 INS79 INS79 INS42 INS45 MOV21 INS42 INS45 MOV21 INS42 INS45 MOV21 INS42 INS45 MOV21 INS42 INS45 MOV21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL70 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL70 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25