GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

+
-import org.apache.geode.i18n.LogWriterI18n;
-import org.apache.geode.internal.i18n.LocalizedStrings;
+import org.apache.geode.LogWriter;
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-    LogWriterI18n log = TransactionUtils.getLogWriterI18n();
+    LogWriter log = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_BEGIN_NESTED_TRANSACTION_IS_NOT_SUPPORTED
-              .toLocalizedString();
+          "Nested transaction is not supported";
-      String exception = LocalizedStrings.TransactionManagerImpl_BEGIN__SYSTEMEXCEPTION_DUE_TO_0
-          .toLocalizedString(new Object[] {e});
+      String exception = String.format("SystemException due to %s",
+          new Object[] {e});
-        log.severe(LocalizedStrings.TransactionManagerImpl_BEGIN__SYSTEMEXCEPTION_DUE_TO_0,
-            new Object[] {e});
+        log.severe(String.format("SystemException due to %s",
+            new Object[] {e}));
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_COMMIT_TRANSACTION_IS_NULL_CANNOT_COMMIT_A_NULL_TRANSACTION
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "Transaction is null, cannot commit a null transaction";
+      LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_COMMIT_GLOBAL_TRANSACTION_IS_NULL_CANNOT_COMMIT_A_NULL_GLOBAL_TRANSACTION
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "Global Transaction is null, cannot commit a null global transaction";
+      LogWriter writer = TransactionUtils.getLogWriter();
-              LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_COMMIT_TRANSACTION_NOT_ACTIVE_CANNOT_BE_COMMITTED_TRANSACTION_STATUS_0
-                  .toLocalizedString(Integer.valueOf(status));
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+              String.format("transaction not active, cannot be committed. Transaction Status= %s",
+                  Integer.valueOf(status));
+          LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_COMMIT_TRANSACTION_IS_NOT_ACTIVE_AND_CANNOT_BE_COMMITTED
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "transaction is not active and cannot be committed";
+      LogWriter writer = TransactionUtils.getLogWriter();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionManagerImpl_EXCEPTION_IN_NOTIFY_AFTER_COMPLETION_DUE_TO__0,
-            ge.getMessage(), ge);
+            String.format("Exception in notify after completion due to %s",
+                ge.getMessage(), ge));
-              LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_COMMIT_TRANSACTION_ROLLED_BACK_BECAUSE_OF_EXCEPTION_IN_NOTIFYBEFORECOMPLETION_FUNCTION_CALL_ACTUAL_EXCEPTION_0
-                  .toLocalizedString();
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+              "Transaction rolled back because of Exception in notifyBeforeCompletion processing";
+          LogWriter writer = TransactionUtils.getLogWriter();
-              LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_COMMIT_TRANSACTION_ROLLED_BACK_BECAUSE_A_USER_MARKED_IT_FOR_ROLLBACK
-                  .toLocalizedString();
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+              "Transaction rolled back because a user marked it for Rollback";
+          LogWriter writer = TransactionUtils.getLogWriter();
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          LogWriter writer = TransactionUtils.getLogWriter();
-          LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-    LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+    LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_ROLLBACK_NO_TRANSACTION_EXISTS
-              .toLocalizedString();
+          "no transaction exists";
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_ROLLBACK_NO_GLOBAL_TRANSACTION_EXISTS
-              .toLocalizedString();
+          "no global transaction exists";
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_ROLLBACK_TRANSACTION_STATUS_DOES_NOT_ALLOW_ROLLBACK_TRANSACTIONAL_STATUS_0
-              .toLocalizedString(Integer.valueOf(status));
+          String.format("Transaction status does not allow Rollback .Transactional status, %s",
+              Integer.valueOf(status));
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_ROLLBACK_TRANSACTION_ALREADY_IN_A_ROLLING_BACK_STATE_TRANSACTIONAL_STATUS_0
-                .toLocalizedString(Integer.valueOf(status));
+            String.format("Transaction already in a Rolling Back state.Transactional status, %s",
+                Integer.valueOf(status));
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_ROLLBACK_TRANSACTION_STATUS_DOES_NOT_ALLOW_ROLLBACK
-                .toLocalizedString();
+            "Transaction status does not allow Rollback";
-            LocalizedStrings.TransactionManagerImpl_EXCEPTION_IN_NOTIFY_AFTER_COMPLETION_DUE_TO__0,
-            e1.getMessage(), e1);
+            String.format("Exception in notify after completion due to %s",
+                e1.getMessage(), e1));
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_SETROLLBACKONLY_NO_GLOBAL_TRANSACTION_EXISTS
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "no global transaction exists";
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_SETROLLBACKONLY_TRANSACTION_CANNOT_BE_MARKED_FOR_ROLLBACK_TRANSCATION_STATUS_0
-                .toLocalizedString(Integer.valueOf(status));
-        LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+            String.format("Transaction cannot be marked for rollback. Transcation status, %s",
+                Integer.valueOf(status));
+        LogWriter writer = TransactionUtils.getLogWriter();
-    LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+    LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_SETTRANSACTIONTIMEOUT_NO_GLOBAL_TRANSACTION_EXISTS
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "no global transaction exists";
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_SETTRANSACTIONTIMEOUT_TRANSACTION_HAS_EITHER_EXPIRED_OR_ROLLEDBACK_OR_COMMITTED
-                .toLocalizedString();
-        LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+            "Transaction has either expired or rolledback or committed";
+        LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPLSUSPENDTRANSACTION_SUSPENDED);
+            "Transaction suspended");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_RESUME_CANNOT_RESUME_A_NULL_TRANSACTION
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "cannot resume a null transaction";
+      LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_RESUME_CANNOT_RESUME_A_NULL_TRANSACTION
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "cannot resume a null transaction";
+      LogWriter writer = TransactionUtils.getLogWriter();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPLRESUMETRANSACTION_RESUMED);
+            "Transaction resumed");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_RESUME_ERROR_IN_LISTING_THREAD_TO_TRANSACTION_MAP_DUE_TO_0
-              .toLocalizedString(e);
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          String.format("Error in listing thread to transaction map due to %s",
+              e);
+      LogWriter writer = TransactionUtils.getLogWriter();
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGER_INVALID.toLocalizedString());
+          "TransactionManager invalid");
-          LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPL_GETGLOBALTRANSACTION_NO_TRANSACTION_EXISTS
-              .toLocalizedString();
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+          "no transaction exists";
+      LogWriter writer = TransactionUtils.getLogWriter();
-      LogWriterI18n logger = TransactionUtils.getLogWriterI18n();
+      LogWriter logger = TransactionUtils.getLogWriter();
-                LocalizedStrings.TransactionManagerImpl_TRANSACTIONTIMEOUTTHREAD__RUN_EXCEPTION_OCCURRED_WHILE_INSPECTING_GTX_FOR_EXPIRY,
+                "Exception occurred while inspecting global transaction for expiry",
-      LogWriterI18n writer = TransactionUtils.getLogWriterI18n();
+      LogWriter writer = TransactionUtils.getLogWriter();
-            LocalizedStrings.TransactionManagerImpl_TRANSACTIONMANAGERIMPLCLEANUPEXCEPTION_WHILE_CLEANING_THREAD_BEFORE_RE_STATRUP);
+            "Exception While cleaning thread before re statrup");

UPD40 MOV25 MOV60 UPD43 UPD43 UPD43 MOV27 MOV27 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD42 MOV8 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 INS45 INS45 INS45 INS45 UPD42 INS45 UPD42 INS45 UPD42 UPD43 INS45 INS45 INS45 INS45 INS45 UPD42 INS45 INS45 INS45 UPD42 INS45 UPD42 INS45 INS45 UPD42 INS45 UPD42 UPD42 UPD43 INS45 INS45 UPD42 UPD42 UPD43 INS32 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 INS42 INS45 MOV60 INS60 UPD42 UPD42 UPD43 UPD42 INS45 UPD42 UPD42 UPD42 INS45 UPD42 UPD42 UPD42 UPD42 INS42 INS45 INS42 INS42 MOV32 UPD42 INS32 INS45 UPD42 INS45 UPD42 UPD42 UPD42 MOV43 MOV43 INS59 INS32 INS45 UPD42 UPD42 INS42 INS45 UPD42 UPD42 INS45 UPD42 UPD42 INS45 INS42 INS42 INS45 MOV32 MOV42 UPD42 UPD42 UPD42 UPD42 INS42 INS45 INS42 INS42 INS45 MOV32 MOV42 UPD43 UPD42 UPD43 UPD42 INS42 INS45 UPD42 UPD42 UPD42 INS42 INS45 UPD42 UPD42 INS42 INS45 UPD42 INS45 DEL40 DEL26 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL40 DEL42 DEL32 DEL59 DEL60 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40 DEL40 DEL42 DEL32 DEL40 DEL42 DEL32 DEL40 DEL40