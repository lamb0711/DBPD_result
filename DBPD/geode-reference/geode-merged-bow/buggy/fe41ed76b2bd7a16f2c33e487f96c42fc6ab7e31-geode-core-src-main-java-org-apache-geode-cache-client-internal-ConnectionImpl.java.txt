GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import org.apache.geode.distributed.internal.DistributionConfig;
-import org.apache.geode.internal.net.SocketCreator;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.net.SocketCreator;
- *
+  // TODO: DEFAULT_CLIENT_FUNCTION_TIMEOUT should be private
+  public static final int DEFAULT_CLIENT_FUNCTION_TIMEOUT = 0;
+  // TODO: clientFunctionTimeout is not thread-safe and should be non-static
+  private static int clientFunctionTimeout;
+
-  // private int handShakeTimeout = AcceptorImpl.DEFAULT_HANDSHAKE_TIMEOUT_MS;
-  private short wanSiteVersion = -1;// In Gateway communication version of connected wan site
-                                    // will be stored after successful handshake
-  // private final CancelCriterion cancelCriterion;
+
+  // In Gateway communication version of connected wan site will be stored after successful
+  // handshake
+  private short wanSiteVersion = -1;
+
-    // this.cancelCriterion = cancelCriterion;
+    int time = Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "CLIENT_FUNCTION_TIMEOUT",
+        DEFAULT_CLIENT_FUNCTION_TIMEOUT);
+    clientFunctionTimeout = time >= 0 ? time : DEFAULT_CLIENT_FUNCTION_TIMEOUT;
+  }
+
+  public static int getClientFunctionTimeout() {
+    return clientFunctionTimeout;
-    } catch (IOException e) {
-      // ignore
-    } catch (RuntimeException e) {
+    } catch (IOException | RuntimeException ignore) {
-        this.getSocket().setSoTimeout(GemFireCacheImpl.getClientFunctionTimeout());
+        this.getSocket().setSoTimeout(getClientFunctionTimeout());

MOV26 MOV26 UPD40 INS23 INS23 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS42 INS8 INS42 INS34 INS42 INS60 INS21 INS41 INS39 INS59 INS7 INS42 INS42 INS32 INS42 INS16 INS42 INS42 INS27 INS42 INS27 INS42 INS42 INS84 UPD42 INS40 INS45 INS42 INS34 MOV43 MOV43 DEL42 DEL44 DEL8 DEL12 DEL42