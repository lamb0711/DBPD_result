GEODE-6283: expose HttpService on InternalCache so that different comâ€¦ (#3110)

* GEODE-6283: expose HttpService on InternalCache so that different component can add their own webapps independently.

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>

-package org.apache.geode.management.internal;
+package org.apache.geode.internal.cache;
+import java.util.ArrayList;
+import java.util.List;
-import java.util.concurrent.CountDownLatch;
+import org.apache.geode.management.internal.SSLUtil;
-/**
- * @since GemFire 8.1
- */
-@SuppressWarnings("unused")
-public class JettyHelper {
+public class HttpService {
-
+  private Server httpServer;
+  private String bindAddress = "0.0.0.0";
+  private int port;
+  private SSLConfig sslConfig;
-  private static String bindAddress = "0.0.0.0";
-
-  private static int port = 0;
-
-  public static Server initJetty(final String bindAddress, final int port, SSLConfig sslConfig) {
+  private List<WebAppContext> webApps = new ArrayList<>();
-    final Server jettyServer = new Server();
+  public HttpService(String bindAddress, int port, SSLConfig sslConfig) {
+    if (port == 0) {
+      return;
+    }
+    this.sslConfig = sslConfig;
+
+    this.httpServer = new Server();
-    jettyServer.setHandler(new HandlerCollection(true));
+    httpServer.setHandler(new HandlerCollection(true));
-
-      connector = new ServerConnector(jettyServer,
+      connector = new ServerConnector(httpServer,
-
-      connector = new ServerConnector(jettyServer, new HttpConnectionFactory(httpConfig));
+      connector = new ServerConnector(httpServer, new HttpConnectionFactory(httpConfig));
-    jettyServer.setConnectors(new Connector[] {connector});
+    httpServer.setConnectors(new Connector[] {connector});
-
-      JettyHelper.bindAddress = bindAddress;
+      this.bindAddress = bindAddress;
+    }
+    this.port = port;
+  }
+
+  public Server getHttpServer() {
+    return httpServer;
+  }
+
+  public synchronized void addWebApplication(String webAppContext, String warFilePath,
+      Pair<String, Object>... attributeNameValuePairs)
+      throws Exception {
+    if (httpServer == null) {
+      logger.info(
+          String.format("unable to add %s webapp. Http service is not started on this member.",
+              webAppContext));
+      return;
-    JettyHelper.port = port;
-
-    return jettyServer;
-  }
-
-
-  public static Server startJetty(final Server jetty) throws Exception {
-    jetty.start();
-    return jetty;
-  }
-
-  public static WebAppContext addWebApplication(final Server jetty, final String webAppContext,
-      final String warFilePath,
-      Pair<String, Object>... attributeNameValuePairs) {
-    ((HandlerCollection) jetty.getHandler()).addHandler(webapp);
-    // if we are adding this webapp after the jetty server has already started, we will need to
-    // manually start the webapp.
-    if (jetty.isStarted()) {
-      try {
-        webapp.start();
-      } catch (Exception e) {
-        logger.error(e.getMessage(), e);
-      }
+    logger.info("Adding webapp " + webAppContext);
+    ((HandlerCollection) httpServer.getHandler()).addHandler(webapp);
+
+    // if the server is not started yet start the server, otherwise, start the webapp alone
+    if (!httpServer.isStarted()) {
+      logger.info("Attempting to start HTTP service on port ({}) at bind-address ({})...",
+          this.port, this.bindAddress);
+      httpServer.start();
+    } else {
+      webapp.start();
-    return webapp;
+    webApps.add(webapp);
-  private static String getWebAppBaseDirectory(final String context) {
+  private String getWebAppBaseDirectory(final String context) {
-  private static final CountDownLatch latch = new CountDownLatch(1);
+  public void stop() {
+    if (this.httpServer == null) {
+      return;
+    }
-  private static String normalizeWebAppArchivePath(final String webAppArchivePath) {
-    return (webAppArchivePath.startsWith(File.separator) ? new File(webAppArchivePath)
-        : new File(".", webAppArchivePath)).getAbsolutePath();
+    logger.debug("Stopping the HTTP service...");
+    try {
+      for (WebAppContext webapp : webApps) {
+        webapp.stop();
+      }
+      this.httpServer.stop();
+    } catch (Exception e) {
+      logger.warn("Failed to stop the HTTP service because: {}", e.getMessage(), e);
+    } finally {
+      try {
+        this.httpServer.destroy();
+      } catch (Exception ignore) {
+        logger.info("Failed to properly release resources held by the HTTP service: {}",
+            ignore.getMessage(), ignore);
+      } finally {
+        this.httpServer = null;
+        System.clearProperty("catalina.base");
+        System.clearProperty("catalina.home");
+      }
+    }
-
-  private static String normalizeWebAppContext(final String webAppContext) {
-    return (webAppContext.startsWith("/") ? webAppContext : "/" + webAppContext);
-  }
-

MOV26 INS26 INS26 MOV23 MOV23 MOV23 UPD40 INS40 UPD40 INS40 INS83 INS42 INS23 INS23 INS31 MOV44 INS31 INS83 MOV43 INS59 INS83 INS43 INS59 INS74 INS42 UPD83 MOV83 MOV43 INS42 INS8 UPD83 INS39 MOV43 UPD83 MOV83 INS39 INS42 INS8 INS42 UPD42 MOV42 INS42 INS43 MOV43 UPD42 INS25 INS21 INS21 INS41 UPD42 UPD42 INS25 INS21 INS21 INS25 INS21 INS54 UPD42 MOV42 INS74 INS27 INS8 INS7 INS7 INS42 INS27 INS8 INS32 INS38 MOV8 INS32 INS27 INS8 INS32 INS8 MOV12 INS8 INS43 INS42 INS34 INS41 INS22 INS42 INS22 MOV14 UPD42 UPD42 INS22 INS42 INS42 INS33 INS21 INS41 INS42 INS42 INS27 INS32 INS21 INS21 INS42 INS42 INS42 INS22 INS33 INS41 INS42 INS42 INS45 INS70 INS21 INS54 UPD42 MOV42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS45 INS42 UPD42 MOV42 MOV42 INS32 INS32 INS52 INS42 INS44 INS42 INS8 INS32 INS8 INS12 INS8 INS22 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS22 INS22 INS42 INS42 UPD43 MOV43 UPD42 MOV42 INS21 INS22 INS42 INS21 INS44 INS8 INS21 INS21 INS21 UPD42 UPD42 INS52 INS42 INS42 INS42 INS45 INS42 UPD42 INS52 INS42 INS52 INS42 UPD42 INS32 INS52 INS42 UPD42 INS45 INS32 INS43 INS42 INS21 INS7 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS22 INS42 UPD42 MOV42 INS32 INS22 INS33 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS42 INS42 INS45 INS52 INS42 UPD42 MOV42 INS42 INS45 INS32 INS42 INS52 INS42 INS42 INS42 DEL66 DEL65 DEL29 DEL42 DEL45 DEL79 DEL83 DEL42 DEL83 DEL83 DEL34 DEL83 DEL83 DEL43 DEL43 DEL34 DEL83 DEL42 DEL43 DEL42 DEL83 DEL83 DEL83 DEL42 DEL59 DEL60 DEL40 DEL42 DEL40 DEL42 DEL42 DEL41 DEL83 DEL83 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL44 DEL83 DEL83 DEL32 DEL54 DEL42 DEL41 DEL83 DEL42 DEL43 DEL42 DEL83 DEL44 DEL40 DEL32 DEL42 DEL43 DEL42 DEL14 DEL43 DEL45 DEL42 DEL14 DEL16 DEL36 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL32 DEL42 DEL45 DEL42 DEL27 DEL16 DEL36 DEL41 DEL8 DEL31