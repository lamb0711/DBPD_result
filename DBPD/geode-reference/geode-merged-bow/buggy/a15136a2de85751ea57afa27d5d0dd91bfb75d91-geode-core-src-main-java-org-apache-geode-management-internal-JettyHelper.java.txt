GEODE-6283: have the management rest controller call the internal management service

* GEODE-6283: have the management rest controller call the internal cluster management service to actually create the region

* inject cluster management service to the rest controller
* have the controller produce json string for response
* refactor the controller exception handler to always send back json string

-import java.util.Properties;
+import java.util.Arrays;
+import org.apache.commons.lang3.tuple.Pair;
-import org.apache.geode.internal.security.SecurityService;
-  private static final String GEODE_SSLCONFIG_SERVLET_CONTEXT_PARAM = "org.apache.geode.sslConfig";
+  public static final String GEODE_SSLCONFIG_SERVLET_CONTEXT_PARAM = "org.apache.geode.sslConfig";
+  public static final String CLUSTER_MANAGEMENT_SERVICE_CONTEXT_PARAM =
+      "org.apache.geode.sslConfig";
-    jettyServer.setHandler(new HandlerCollection());
+    jettyServer.setHandler(new HandlerCollection(true));
-  public static Server addWebApplication(final Server jetty, final String webAppContext,
-      final String warFilePath, SecurityService securityService, Properties sslConfig) {
+  public static WebAppContext addWebApplication(final Server jetty, final String webAppContext,
+      final String warFilePath,
+      Pair<String, Object>... attributeNameValuePairs) {
-    webapp.setAttribute(SECURITY_SERVICE_SERVLET_CONTEXT_PARAM, securityService);
-    // This is only required for Pulse because in embedded mode, with SSL enabled, Pulse needs to
-    // know how to make SSL RMI connections.
-    webapp.setAttribute(GEODE_SSLCONFIG_SERVLET_CONTEXT_PARAM, sslConfig);
+    if (attributeNameValuePairs != null) {
+      Arrays.stream(attributeNameValuePairs)
+          .forEach(p -> webapp.setAttribute(p.getKey(), p.getValue()));
+    }
-
-
-    return jetty;
+    // if we are adding this webapp after the jetty server has already started, we will need to
+    // manually start the webapp.
+    if (jetty.isStarted()) {
+      try {
+        webapp.start();
+      } catch (Exception e) {
+        logger.error(e.getMessage(), e);
+      }
+    }
+    return webapp;

MOV26 UPD40 UPD40 INS23 UPD83 INS83 INS83 INS83 INS43 INS59 UPD43 INS44 INS42 INS42 INS45 UPD42 INS74 UPD42 MOV42 INS25 INS25 INS43 INS43 INS43 INS27 INS8 INS32 INS8 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS33 MOV21 INS42 INS42 INS54 INS9 INS32 INS8 INS12 INS32 INS42 INS86 INS21 INS44 INS8 INS42 INS42 INS42 INS59 INS32 INS32 INS43 INS42 MOV21 INS42 MOV42 MOV42 INS32 INS32 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 INS42 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 DEL43 DEL42 DEL44 DEL43 DEL44 DEL32