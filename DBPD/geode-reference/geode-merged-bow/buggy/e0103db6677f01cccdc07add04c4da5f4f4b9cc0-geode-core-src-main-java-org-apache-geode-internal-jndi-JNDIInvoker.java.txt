GEODE-5875: fix JNDIInvoker cleanup (#2610)

Dunit test was added that reproduces the bug.
JNDIInvoker was fixed to only call clearup on the data source being removed.
A concurrent map is now used instead of an array list to keep track of the
jndi-bindings in JNDIInvoker. This allows us to simply remove just one data source
by name when unmapDatasource(name) is called.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen@pivotal.io>

-import java.util.ArrayList;
-import java.util.Iterator;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
+import javax.sql.DataSource;
+import org.apache.logging.log4j.Logger;
+
+import org.apache.geode.internal.logging.LogService;
+  private static final Logger logger = LogService.getLogger();
+
-  private static List dataSourceList = new ArrayList();
+  private static final ConcurrentMap<String, Object> dataSourceMap = new ConcurrentHashMap<>();
-    int len = dataSourceList.size();
-    for (int i = 0; i < len; i++) {
-      if (dataSourceList.get(i) instanceof AbstractDataSource)
-        ((AbstractDataSource) dataSourceList.get(i)).clearUp();
-      else if (dataSourceList.get(i) instanceof ClientConnectionFactoryWrapper) {
-        ((ClientConnectionFactoryWrapper) dataSourceList.get(i)).clearUp();
-      }
-    }
-    dataSourceList.clear();
+    dataSourceMap.values().stream().forEach(JNDIInvoker::closeDataSource);
+    dataSourceMap.clear();
+  private static void closeDataSource(Object dataSource) {
+    if (dataSource instanceof AbstractDataSource) {
+      ((AbstractDataSource) dataSource).clearUp();
+    } else if (dataSource instanceof ClientConnectionFactoryWrapper) {
+      ((ClientConnectionFactoryWrapper) dataSource).clearUp();
+    }
+  }
+
-    Object ds = null;
+    DataSource ds = null;
-        dataSourceList.add(ds);
+        dataSourceMap.put(jndiName, ds);
-        dataSourceList.add(ds);
+        dataSourceMap.put(jndiName, ds);
-        dataSourceList.add(ds);
+        dataSourceMap.put(jndiName, ds);
-        dataSourceList.add(ds1);
+        dataSourceMap.put(jndiName, ds1);
-    for (Iterator it = dataSourceList.iterator(); it.hasNext();) {
-      Object obj = it.next();
-      if (obj instanceof AbstractDataSource) {
-        ((AbstractDataSource) obj).clearUp();
-      } else if (obj instanceof ClientConnectionFactoryWrapper) {
-        ((ClientConnectionFactoryWrapper) obj).clearUp();
-      }
-      it.remove();
-    }
+    Object removedDataSource = dataSourceMap.remove(jndiName);
+    closeDataSource(removedDataSource);
-    return dataSourceList.size();
+    return dataSourceMap.size();

MOV26 MOV26 INS26 INS26 INS26 MOV23 UPD40 UPD40 INS40 INS40 INS40 INS23 INS31 INS31 INS83 UPD43 MOV29 INS83 INS83 INS83 INS74 INS59 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 MOV44 MOV43 INS8 UPD42 UPD42 INS32 INS43 INS43 INS43 INS42 INS14 INS21 MOV43 INS42 MOV25 MOV21 INS60 MOV21 INS42 INS42 INS42 UPD42 MOV42 INS42 INS74 INS32 INS43 MOV43 INS59 INS43 INS32 UPD42 MOV42 INS90 UPD42 INS42 MOV43 INS42 INS42 INS32 UPD42 UPD42 UPD42 INS42 INS32 UPD42 MOV42 INS42 INS42 UPD42 MOV43 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV43 INS42 UPD42 UPD42 INS42 MOV43 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 DEL42 DEL43 DEL14 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL62 DEL42 DEL32 DEL11 DEL36 DEL32 DEL21 DEL42 DEL42 DEL32 DEL62 DEL42 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL24 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL83 DEL83 DEL39 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL24 DEL8 DEL31