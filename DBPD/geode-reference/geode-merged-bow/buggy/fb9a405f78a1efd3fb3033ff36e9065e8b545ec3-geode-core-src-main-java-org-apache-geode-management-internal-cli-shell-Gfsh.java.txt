GEODE-3472: Remove a great deal of commented-out code.

* this closes #748

+import org.apache.geode.management.internal.cli.converters.RegionPathConverter;
- * environment TODO
+ * environment
-  // TODO merge find a better place for these
-  // private static final String ANIMATION_SLOT = "A"; //see 46072
-  protected static ThreadLocal<Gfsh> gfshThreadLocal = new ThreadLocal<Gfsh>();
+  protected static ThreadLocal<Gfsh> gfshThreadLocal = new ThreadLocal<>();
-  private static ThreadLocal<Boolean> resultTypeTL = new ThreadLocal<Boolean>();
+  private static ThreadLocal<Boolean> resultTypeTL = new ThreadLocal<>();
-  private final Map<String, String> env = new TreeMap<String, String>();
-  private final List<String> readonlyAppEnv = new ArrayList<String>();
+  private final Map<String, String> env = new TreeMap<>();
+  private final List<String> readonlyAppEnv = new ArrayList<>();
-  private final Map<String, String> expandedPropCommandsMap = new HashMap<String, String>();
+  private final Map<String, String> expandedPropCommandsMap = new HashMap<>();
-  private boolean supressScriptCmdOutput;
+  private boolean suppressScriptCmdOutput;
-  protected Gfsh() throws ClassNotFoundException, IOException {
+  protected Gfsh() {
-  protected Gfsh(String[] args) throws ClassNotFoundException, IOException {
+  protected Gfsh(String[] args) {
-  protected Gfsh(boolean launchShell, String[] args, GfshConfig gfshConfig)
-      throws ClassNotFoundException, IOException {
+  protected Gfsh(boolean launchShell, String[] args, GfshConfig gfshConfig) {
-    this.ansiHandler = ANSIHandler.getInstance(this.gfshConfig.isANSISupported()); // TODO -
-    // Abhishek :
-    // should take it
-    // from
-    // ConsoleReader.terminal??
+    this.ansiHandler = ANSIHandler.getInstance(this.gfshConfig.isANSISupported());
-  public static Gfsh getInstance(boolean launchShell, String[] args, GfshConfig gfshConfig)
-      throws ClassNotFoundException, IOException {
+  public static Gfsh getInstance(boolean launchShell, String[] args, GfshConfig gfshConfig) {
-    String readLine = null;
+    String readLine;
-          // System.out.println(loggerName);
-        // If no spaces were found then there's no logical wayto split the string
+        // If no spaces were found then there's no logical way to split the string
-    env.put(ENV_APP_NAME, org.apache.geode.management.internal.cli.shell.Gfsh.GFSH_APP_NAME);
+    env.put(ENV_APP_NAME, Gfsh.GFSH_APP_NAME);
-    // flashMessage("\b"); // see 46072
-    // return Collections.singleton(ClassPathLoader.getLatest().getResource(resourceName));
-      // TODO: should there be a way to differentiate error in shell & error on
-      // server. May be by exception type.
-          } else if (!supressScriptCmdOutput) {
+          } else if (!suppressScriptCmdOutput) {
-    return !(OS.indexOf("win") >= 0);
+    return !(OS.contains("win"));
-    Result result = null;
+    Result result;
-        this.supressScriptCmdOutput = quiet;
+        this.suppressScriptCmdOutput = quiet;
-        String linesBufferString = ""; // used to check whether the string in a buffer contains a
-        // ";".
+        String linesBufferString = "";
-            // String command = null;
-    Map<String, String> map = new TreeMap<String, String>();
+    Map<String, String> map = new TreeMap<>();
-  @Override
-  public void setPromptPath(String currentContext) {
-    super.setPromptPath(currentContext);
-    // Enable when "use region" command is required. See #46110
-    // env.put(CliConstants.ENV_APP_CONTEXT_PATH, currentContext);
-  }
-
-    String contextPath = /* getEnvProperty(CliConstants.ENV_APP_CONTEXT_PATH) */ "";
+    String contextPath = "";
-      // //As "use region" is not in scope for 7.0, see 46110.
-      // if (contextPath == null) {
-      // contextPath = "." + CliConstants.DEFAULT_APP_CONTEXT_PATH;
-      // } else {
-      // contextPath = "." + contextPath;
-      // }
-      // } else {
-      // contextPath = "." + CliConstants.DEFAULT_APP_CONTEXT_PATH;
-    setPromptPath(
-        org.apache.geode.management.internal.cli.converters.RegionPathConverter.DEFAULT_APP_CONTEXT_PATH);
+    setPromptPath(RegionPathConverter.DEFAULT_APP_CONTEXT_PATH);
-    String foundInLine = null;
+    String foundInLine;
-    this.commandAndStatusList = new ArrayList<CommandAndStatus>();
+    this.commandAndStatusList = new ArrayList<>();
-        compositeResultData.setStatus(org.apache.geode.management.cli.Result.Status.ERROR);
+        compositeResultData.setStatus(Result.Status.ERROR);

INS26 INS40 UPD66 UPD42 UPD74 UPD74 UPD74 UPD74 UPD74 UPD40 UPD40 INS32 UPD74 UPD74 MOV42 UPD42 MOV42 MOV45 UPD40 UPD42 UPD42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL33 DEL32 DEL34 DEL27 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL48 DEL21 DEL8 DEL31 DEL33 DEL42 DEL43