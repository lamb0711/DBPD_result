GEODE-3799: Move backups towards a pluggable architecture (#1109)


  * This effort decouples the definition of files to be backed up
    from the destination of the backup. It will allow for the
    development of different, pluggable, strategies for conducting
    backups, such as compressed archive files of backups or backup
    to cloud providers.

  * A new BackupDestination interface is provided and the existing
    logic for saving a backup to the filesystem has been moved into
    an implementation of this interface, FileSystemBackupDestination.
    During a backup, all files are copied to a temporary directory
    and added to a definition of the backup. This definition is then
    used to send the files to their ultimate destination. In the
    current case of moving the files to a specified location on the
    filesystem, this is implemented by moving the files from the
    temporary location to the target backup directory.

+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.util.List;
+import java.util.stream.Collectors;
+import org.apache.commons.io.FileUtils;
+      cleanupOrphanedBackupDirectories();
+
+  private void cleanupOrphanedBackupDirectories() {
+    for (DirectoryHolder directoryHolder : getDirectoryHolders()) {
+      try {
+        List<Path> backupDirectories = Files.list(directoryHolder.getDir().toPath())
+            .filter((path) -> path.getFileName().toString()
+                .startsWith(BackupManager.DATA_STORES_TEMPORARY_DIRECTORY))
+            .filter(p -> Files.isDirectory(p)).collect(Collectors.toList());
+        for (Path backupDirectory : backupDirectories) {
+          try {
+            logger.info("Deleting orphaned backup temporary directory: " + backupDirectory);
+            FileUtils.deleteDirectory(backupDirectory.toFile());
+          } catch (IOException e) {
+            logger.warn("Failed to remove orphaned backup temporary directory: " + backupDirectory,
+                e);
+          }
+        }
+      } catch (IOException e) {
+        logger.warn(e);
+      }
+    }
+  }
+

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS83 INS39 INS42 INS8 INS70 INS44 INS32 INS8 INS21 INS43 INS42 INS42 INS54 INS32 INS42 INS8 INS12 INS42 INS60 INS70 INS44 INS8 INS74 INS59 INS44 INS42 INS8 INS43 INS42 INS21 INS43 INS43 INS42 INS32 INS43 INS42 INS54 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS8 INS12 INS42 INS42 INS42 INS32 INS42 INS86 INS42 INS42 INS21 INS21 INS44 INS8 INS32 INS42 INS86 INS59 INS32 INS32 INS32 INS43 INS42 INS21 INS42 INS42 INS32 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS40 INS45 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42