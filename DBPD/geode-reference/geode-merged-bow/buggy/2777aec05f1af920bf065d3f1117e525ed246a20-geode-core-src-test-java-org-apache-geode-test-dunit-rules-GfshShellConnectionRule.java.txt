GEODE-1955: fix flaky tests by properly closing the gfsh instance in ConnectToLocatorSSLDUnitTest

GEODE-1955: fix flaky tests by properly closing the gfsh instance in ConnectToLocatorSSLDUnitTest

GEODE-1955: fix flaky tests by properly closing the gfsh instance in ConnectToLocatorSSLDUnitTest

+import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.ErrorResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-  private boolean useHttp = false;
+  private PortType portType = null;
-  private boolean authenticated;
+  private boolean connected;
-  /**
-   * Rule constructor
-   */
-
-  public GfshShellConnectionRule(int port) {
-    this.useHttp = false;
+  public GfshShellConnectionRule(int port, PortType portType) {
+    this.portType = portType;
-  }
-
-  public GfshShellConnectionRule(int port, boolean useHttp) {
-    this.useHttp = useHttp;
-    this.port = port;
+    try {
+      this.gfsh = new HeadlessGfsh(getClass().getName(), 30, "gfsh_files");
+    } catch (Exception e) {
+      e.printStackTrace();
+    }
+    this.connected = false;
-    CliUtil.isGfshVM = true;
-    String shellId = getClass().getSimpleName() + "_" + description.getMethodName();
-    gfsh = new HeadlessGfsh(shellId, 30, "gfsh_files"); // TODO: move to TemporaryFolder
-
-    final CommandStringBuilder connectCommand = new CommandStringBuilder(CliStrings.CONNECT);
-
-      connectCommand.addOption(CliStrings.CONNECT__USERNAME, config.user());
-      connectCommand.addOption(CliStrings.CONNECT__PASSWORD, config.password());
+      connect(CliStrings.CONNECT__USERNAME, config.user(), CliStrings.CONNECT__PASSWORD,
+          config.password());
+    } else {
+      connect();
+  }
+
+  public void connect(String... options) throws Exception {
+    CliUtil.isGfshVM = true;
+    final CommandStringBuilder connectCommand = new CommandStringBuilder(CliStrings.CONNECT);
-    if (useHttp) {
+    if (portType == PortType.locator) {
+      // port is the locator port
+      endpoint = "localhost[" + port + "]";
+      connectCommand.addOption(CliStrings.CONNECT__LOCATOR, endpoint);
+    } else if (portType == PortType.http) {
-    System.out.println(getClass().getSimpleName() + " using endpoint: " + endpoint);
+
+    // add the extra options
+    if (options != null) {
+      for (int i = 0; i < options.length; i += 2) {
+        connectCommand.addOption(options[i], options[i + 1]);
+      }
+    }
-    if (result.getResultData() instanceof ErrorResultData) {
-      ErrorResultData errorResultData = (ErrorResultData) result.getResultData();
-      this.authenticated =
-          !(errorResultData.getErrorCode() == ResultBuilder.ERRORCODE_CONNECTION_ERROR);
-    } else {
-      this.authenticated = true;
-    }
+    connected = (result.getStatus() == Result.Status.OK);
+    close();
+  }
+
+  public void close() throws Exception {
-      gfsh.clearEvents();
-      gfsh.executeCommand("disconnect");
+      gfsh.clear();
-      gfsh.setThreadLocalInstance();
-  public boolean isAuthenticated() {
-    return authenticated;
+  public boolean isConnected() {
+    return connected;
+  }
+
+  public enum PortType {
+    locator, jmxManger, http

MOV26 UPD40 INS31 INS31 INS31 INS71 INS43 MOV83 MOV42 MOV44 MOV44 INS8 INS83 INS39 INS42 MOV44 MOV43 INS8 UPD83 UPD42 INS44 INS43 MOV29 INS83 INS39 INS42 MOV44 MOV43 INS8 UPD83 UPD42 INS43 UPD42 INS83 INS42 INS72 INS72 INS72 INS42 UPD42 INS33 UPD42 INS43 UPD42 INS21 MOV21 INS54 MOV21 MOV60 MOV25 MOV43 INS42 INS42 INS25 INS25 MOV21 INS21 INS42 INS42 INS42 INS42 INS42 INS7 INS8 INS12 INS8 INS8 INS27 INS8 MOV25 INS27 INS8 INS32 UPD42 INS22 INS42 MOV21 INS44 INS8 INS9 MOV21 MOV21 INS42 INS40 MOV21 MOV21 INS27 INS42 INS33 INS24 INS42 INS36 INS42 INS52 INS42 INS43 UPD42 MOV42 MOV21 UPD42 INS42 INS40 INS58 INS27 INS7 INS8 MOV27 INS14 INS42 INS32 UPD42 INS40 MOV32 UPD42 UPD42 INS27 UPD42 UPD42 MOV42 INS40 INS42 INS39 INS59 INS42 INS40 INS42 INS34 INS21 UPD40 UPD42 UPD42 MOV43 MOV32 INS34 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS34 INS32 UPD42 UPD42 UPD42 INS42 INS42 INS2 INS2 INS42 INS42 INS42 INS27 INS42 INS34 DEL40 DEL26 DEL39 DEL9 DEL39 DEL9 DEL52 DEL42 DEL22 DEL42 DEL7 DEL42 DEL42 DEL42 DEL40 DEL8 DEL66 DEL65 DEL29 DEL8 DEL31 DEL83 DEL42 DEL39 DEL44 DEL8 DEL31 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL34 DEL45 DEL14 DEL40 DEL32 DEL42 DEL32 DEL45 DEL42 DEL27 DEL42 DEL52 DEL42 DEL22 DEL36 DEL38 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21