GEODE-3096: pulling in refactoring work on HttpOperationInvoker

* Use HttpOperationInvoker to replace RestHttpOperationInvoker and SimpleHttpOperationInvoker
* Use one single ShellCommandController to replace all command controllers
* do not allow execution of commands that require client side file data gathering to be executed only on the locator/server
* deprecate CommandService and CommandStatement
* simplify CommandRequest, delete geode's ClientHttpRequest
* fix tests

+import java.io.File;
+import org.apache.geode.management.internal.cli.shell.Gfsh;
+  private File workingDir;
+
-    this.gfsh = new HeadlessGfsh(getClass().getName(), 30,
-        temporaryFolder.newFolder("gfsh_files").getAbsolutePath());
+    workingDir = temporaryFolder.newFolder("gfsh_files");
+    this.gfsh = new HeadlessGfsh(getClass().getName(), 30, workingDir.getAbsolutePath());
-      endpoint = "http://localhost:" + port + "/gemfire/v1";
+      endpoint = "http://localhost:" + port + "/geode-mgmt/v1";
-    // can not use Awaitility here because it starts another thead, but the Gfsh instance is in a
+    // can not use Awaitility here because it starts another thread, but the Gfsh instance is in a
-  public HeadlessGfsh getGfsh() {
+  public HeadlessGfsh getHeadlessGfsh() {
+  public Gfsh getGfsh() {
+    return gfsh.getGfsh();
+  }
+
-    assertThat(result.getStatus())
-        .describedAs("Failure in command: " + command + "\n Result " + result)
-        .isEqualTo(Result.Status.OK);
+    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);
+  public File getWorkingDir() {
+    return workingDir;
+  }
+

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS43 INS59 UPD42 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS42 INS42 INS21 INS42 INS41 INS42 INS41 INS7 INS32 MOV32 INS42 INS42 MOV32 INS42 INS42 UPD42 INS40 INS42 UPD45 DEL45 DEL42 DEL45 DEL42 DEL27 DEL42 DEL40 DEL32