GEODE-1893 remove ability to create a locator without all location services

Deprecated API options for creating a locator without peerLocation or
serverLocation handlers.  There will be documentation work to do since
the docs mention this in at least one place.

-   * @param peerLocator enable peer location services
-   * @param enableServerLocator enable server location services
-   * @param loadSharedConfigFromDir load the shared configuration from the shared configuration
-   *        directory
-   *
-      java.util.Properties dsProperties, boolean peerLocator, boolean enableServerLocator,
-      String hostnameForClients, boolean loadSharedConfigFromDir) throws IOException {
+      Properties dsProperties, String hostnameForClients) throws IOException {
-        dsProperties, peerLocator, enableServerLocator, hostnameForClients,
-        loadSharedConfigFromDir);
+        dsProperties, hostnameForClients);
-   * @param peerLocator enable peer location services
-   * @param enableServerLocator enable server location services
-   * @param loadSharedConfigFromDir TODO:CONFIG
-      boolean startDistributedSystem, java.util.Properties dsProperties, boolean peerLocator,
-      boolean enableServerLocator, String hostnameForClients, boolean loadSharedConfigFromDir)
+      boolean startDistributedSystem, Properties dsProperties, String hostnameForClients)
-    if (!peerLocator && !enableServerLocator) {
-      throw new IllegalArgumentException(
-          LocalizedStrings.InternalLocator_EITHER_PEER_LOCATOR_OR_SERVER_LOCATOR_MUST_BE_ENABLED
-              .toLocalizedString());
-    }
-
-      if (enableServerLocator) {
-        slocator.handler.willHaveServerLocator = true;
-      }
+      slocator.handler.willHaveServerLocator = true;
-        if (peerLocator) {
-          slocator.startPeerLocation(startDistributedSystem);
-        }
+        slocator.startPeerLocation(startDistributedSystem);
-      // during the period when the product is using only paper licenses we always
-      // start server location services in order to be able to log information
-      // about the use of cache servers
-      // if(enableServerLocator) {
-      // slocator.startServerLocation(InternalDistributedSystem.getConnectedInstance());
-      // }
+  /**
+   * For backward-compatibility we retain this method
+   * 
+   * @deprecated use a form of the method that does not have peerLocator/serverLocator parameters
+   */
+  public static InternalLocator startLocator(int locatorPort, File logFile, File stateFile,
+      InternalLogWriter logger, InternalLogWriter logger1, InetAddress addr,
+      Properties dsProperties, boolean peerLocator, boolean serverLocator, String s, boolean b1)
+      throws IOException {
+    return startLocator(locatorPort, logFile, stateFile, logger, logger1, addr, dsProperties, s);
+
+  }
+

INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 MOV44 INS44 INS44 INS44 INS43 INS8 UPD43 UPD43 INS65 INS65 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS42 INS41 INS42 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV21 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL40 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL40 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL38 DEL42 DEL38 DEL27 DEL42 DEL43 DEL40 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL42 DEL8 DEL25 DEL42 DEL8 DEL25