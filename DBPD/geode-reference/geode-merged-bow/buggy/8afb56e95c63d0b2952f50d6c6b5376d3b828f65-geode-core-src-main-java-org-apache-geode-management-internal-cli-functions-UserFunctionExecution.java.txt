GEODE-4252: User function execution produces correct errors (#1269)

* GEODE-4252: User function execution produces correct errors

- Also produce tabulated output

* GEODE-4252: Updates for recent internal function security check tests

- Also, additional review updates

+import java.util.ArrayList;
-import java.util.Optional;
-import org.apache.geode.management.internal.cli.GfshParser;
-public class UserFunctionExecution implements Function, InternalEntity {
+public class UserFunctionExecution implements Function<Object[]>, InternalEntity {
-  public void execute(FunctionContext context) {
+  public void execute(FunctionContext<Object[]> context) {
+    Cache cache = context.getCache();
+    DistributedMember member = cache.getDistributedSystem().getDistributedMember();
+
-      Cache cache = context.getCache();
-      DistributedMember member = cache.getDistributedSystem().getDistributedMember();
-      Object[] args = (Object[]) context.getArguments();
+      Object[] args = context.getArguments();
-        context.getResultSender()
-            .lastResult(CliStrings.EXECUTE_FUNCTION__MSG__COULD_NOT_RETRIEVE_ARGUMENTS);
+        context.getResultSender().lastResult(new CliFunctionResult(member.getId(), false,
+            CliStrings.EXECUTE_FUNCTION__MSG__COULD_NOT_RETRIEVE_ARGUMENTS));
-          context.getResultSender().lastResult(CliStrings.format(
-              CliStrings.EXECUTE_FUNCTION__MSG__DOES_NOT_HAVE_FUNCTION_0_REGISTERED, functionId));
+          context.getResultSender()
+              .lastResult(new CliFunctionResult(member.getId(), false,
+                  (CliStrings.format(
+                      CliStrings.EXECUTE_FUNCTION__MSG__DOES_NOT_HAVE_FUNCTION_0_REGISTERED,
+                      functionId))));
-            context.getResultSender().lastResult(onRegion + "does not exist.");
+            context.getResultSender().lastResult(
+                new CliFunctionResult(member.getId(), false, onRegion + " does not exist"));
-              .lastResult(CliStrings.format(
-                  CliStrings.EXECUTE_FUNCTION__MSG__ERROR_IN_EXECUTING_0_ON_MEMBER_1_ON_REGION_2_DETAILS_3,
-                  functionId, member.getId(), onRegion,
-                  CliStrings.EXECUTE_FUNCTION__MSG__ERROR_IN_RETRIEVING_EXECUTOR));
+              .lastResult(new CliFunctionResult(member.getId(), false,
+                  CliStrings.format(
+                      CliStrings.EXECUTE_FUNCTION__MSG__ERROR_IN_EXECUTING_0_ON_MEMBER_1_ON_REGION_2_DETAILS_3,
+                      functionId, member.getId(), onRegion,
+                      CliStrings.EXECUTE_FUNCTION__MSG__ERROR_IN_RETRIEVING_EXECUTOR)));
-        List<Object> results = (List<Object>) execution.execute(function).getResult();
+        List<Object> results = (List<Object>) execution.execute(function.getId()).getResult();
+        List<String> resultMessage = new ArrayList<>();
+        boolean functionSuccess = true;
-        StringBuilder resultMessage = new StringBuilder();
-              if (resultObj instanceof String) {
-                resultMessage.append(((String) resultObj));
-                resultMessage.append(GfshParser.LINE_SEPARATOR);
-              } else if (resultObj instanceof Exception) {
-                resultMessage.append(((IllegalArgumentException) resultObj).getMessage());
+              if (resultObj instanceof Exception) {
+                resultMessage.add(((Exception) resultObj).getMessage());
+                functionSuccess = false;
-                resultMessage.append(resultObj);
-                resultMessage.append(GfshParser.LINE_SEPARATOR);
+                resultMessage.add(resultObj.toString());
-        context.getResultSender().lastResult(resultMessage);
+        context.getResultSender().lastResult(
+            new CliFunctionResult(member.getId(), functionSuccess, resultMessage.toString()));
-            .lastResult(CliStrings.format(
-                CliStrings.EXECUTE_FUNCTION__MSG__RESULT_COLLECTOR_0_NOT_FOUND_ERROR_1,
-                resultCollectorName, e.getMessage()));
+            .lastResult(new CliFunctionResult(member.getId(), false,
+                CliStrings.format(
+                    CliStrings.EXECUTE_FUNCTION__MSG__RESULT_COLLECTOR_0_NOT_FOUND_ERROR_1,
+                    resultCollectorName, e.getMessage())));
-        context.getResultSender()
-            .lastResult(CliStrings.format(
-                CliStrings.EXECUTE_FUNCTION__MSG__ERROR_IN_EXECUTING_ON_MEMBER_1_DETAILS_2,
-                functionId, member.getId(), e.getMessage()));
+        context.getResultSender().lastResult(
+            new CliFunctionResult(member.getId(), false, "Exception: " + e.getMessage()));
-      context.getResultSender().lastResult(ex.getMessage());
+      context.getResultSender()
+          .lastResult(new CliFunctionResult(member.getId(), false, ex.getMessage()));

MOV26 UPD40 INS74 MOV43 INS5 INS43 INS85 INS74 MOV60 MOV60 INS42 MOV43 MOV5 MOV5 MOV32 INS60 MOV74 INS74 INS39 INS59 INS14 INS14 INS43 MOV43 INS42 INS9 INS14 MOV32 INS43 INS32 INS9 MOV32 INS43 INS32 INS9 INS40 MOV74 UPD42 MOV42 INS74 INS43 INS32 INS42 INS32 INS14 MOV32 UPD42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS14 INS43 INS42 INS42 INS42 MOV42 INS42 INS43 INS32 INS9 MOV32 INS43 MOV32 INS9 INS27 INS43 INS32 INS9 INS36 INS43 INS32 INS9 MOV32 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 INS45 MOV32 INS42 INS42 INS42 MOV32 INS14 INS42 INS42 INS42 MOV42 INS42 INS43 INS32 INS9 INS27 MOV62 MOV8 INS42 INS42 INS42 MOV42 UPD45 MOV45 INS7 UPD42 INS32 INS42 INS9 UPD42 MOV36 INS42 INS42 UPD42 UPD43 UPD42 DEL40 DEL26 DEL11 DEL40 DEL27 DEL43 DEL43 DEL42 DEL62 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL42 DEL42 DEL32