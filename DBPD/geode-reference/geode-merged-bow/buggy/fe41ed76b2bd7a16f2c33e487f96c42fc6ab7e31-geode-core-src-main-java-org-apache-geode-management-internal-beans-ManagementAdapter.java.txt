GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
- * 
- * 
- * 
-  private GemFireCacheImpl cacheImpl;
+  private InternalCache internalCache;
-
-
-
-
-
-
-
-
-
-   * 
+   *
-  public void handleCacheCreation(GemFireCacheImpl cache) throws ManagementException {
+  public void handleCacheCreation(InternalCache cache) throws ManagementException {
-      this.cacheImpl = (GemFireCacheImpl) cache;
-      this.service = (SystemManagementService) ManagementService.getManagementService(cacheImpl);
+      this.internalCache = cache;
+      this.service =
+          (SystemManagementService) ManagementService.getManagementService(internalCache);
-      this.memberMBeanBridge = new MemberMBeanBridge(cacheImpl, service).init();
+      this.memberMBeanBridge = new MemberMBeanBridge(internalCache, service).init();
-
-          .getMemberNameOrId(cacheImpl.getDistributedSystem().getDistributedMember());
-
+          .getMemberNameOrId(internalCache.getDistributedSystem().getDistributedMember());
-
-
-
-      /** For situations where locator is created before any cache is created **/
+      // For situations where locator is created before any cache is created
-
-
-    /**
+    /*
-
-
-
-
-   * 
-
-      /** Bridge is responsible for extracting data from GemFire Layer **/
+      // Bridge is responsible for extracting data from GemFire Layer
-          cacheImpl.getDistributedSystem().getDistributedMember(), region.getFullPath());
+          internalCache.getDistributedSystem().getDistributedMember(), region.getFullPath());
-
-
-
-
-        cacheImpl.getDistributedSystem().getDistributedMember(), disk.getName());
+        internalCache.getDistributedSystem().getDistributedMember(), disk.getName());
-
-    /** Internal Locks Should not be exposed to client for monitoring **/
+    // Internal Locks Should not be exposed to client for monitoring
-        cacheImpl.getDistributedSystem().getDistributedMember(), lockService.getName());
+        internalCache.getDistributedSystem().getDistributedMember(), lockService.getName());
-        cacheImpl.getDistributedSystem().getDistributedMember(), sender.getId());
+        internalCache.getDistributedSystem().getDistributedMember(), sender.getId());
-
-
-        .getGatewayReceiverMBeanName(cacheImpl.getDistributedSystem().getDistributedMember());
+        .getGatewayReceiverMBeanName(internalCache.getDistributedSystem().getDistributedMember());
-
-
-
-
-
-        cacheImpl.getDistributedSystem().getDistributedMember(), queue.getId());
+        internalCache.getDistributedSystem().getDistributedMember(), queue.getId());
-        cacheImpl.getDistributedSystem().getDistributedMember(), queue.getId());
+        internalCache.getDistributedSystem().getDistributedMember(), queue.getId());
-
-
-    String nameOrId = memberSource; // TODO Rishi/Abhishek - what if sender is
-    // null?
+    String nameOrId = memberSource; // TODO: what if sender is null?
-    CacheServerBridge cacheServerBridge = new CacheServerBridge(cacheServer, cacheImpl);
+    CacheServerBridge cacheServerBridge = new CacheServerBridge(cacheServer, internalCache);
-        cacheServer.getPort(), cacheImpl.getDistributedSystem().getDistributedMember());
+        cacheServer.getPort(), internalCache.getDistributedSystem().getDistributedMember());
-
-
-        cacheImpl.getDistributedSystem().getDistributedMember());
+        internalCache.getDistributedSystem().getDistributedMember());
-
+
-
+
-
-      this.cacheImpl = null;
+      this.internalCache = null;
-
-
-
-    Set<GatewaySender> senders = cacheImpl.getGatewaySenders();
+    Set<GatewaySender> senders = internalCache.getGatewaySenders();
-
-    List<CacheServer> servers = cacheImpl.getCacheServers();
+    List<CacheServer> servers = internalCache.getCacheServers();
-
-    /**
+    /*
-
-          cacheImpl.getDistributedSystem().getDistributedMember(), region.getFullPath());
+          internalCache.getDistributedSystem().getDistributedMember(), region.getFullPath());
-
-
-        cacheImpl.getDistributedSystem().getDistributedMember(), disk.getName());
+        internalCache.getDistributedSystem().getDistributedMember(), disk.getName());
-
-
-        cacheImpl.getDistributedSystem().getDistributedMember(), lockService.getName());
+        internalCache.getDistributedSystem().getDistributedMember(), lockService.getName());
-        .getLocatorMBeanName(cacheImpl.getDistributedSystem().getDistributedMember());
+        .getLocatorMBeanName(internalCache.getDistributedSystem().getDistributedMember());
-
-
-
-
-        cacheImpl.getInternalDistributedSystem().getDistributedMember();
+        internalCache.getInternalDistributedSystem().getDistributedMember();
-
-

UPD40 UPD43 UPD42 UPD42 UPD43 UPD42 MOV43 MOV43 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL43 DEL42 DEL11