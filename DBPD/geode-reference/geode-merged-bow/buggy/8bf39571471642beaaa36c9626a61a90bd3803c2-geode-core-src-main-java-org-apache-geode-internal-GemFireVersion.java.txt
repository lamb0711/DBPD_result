Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class provides build and version information about GemFire.
- * It gathers this information from the resource property file
- * for this class.
+ * This class provides build and version information about GemFire. It gathers this information from
+ * the resource property file for this class.
-  private GemFireVersion() {
-  }
+  private GemFireVersion() {}
-      String name = GemFireVersion.class.getPackage().getName()
-          .replace('.', '/') + "/" + RESOURCE_NAME;
+      String name =
+          GemFireVersion.class.getPackage().getName().replace('.', '/') + "/" + RESOURCE_NAME;
-  
+
-    return "geode-core-" + GemFireVersion.getGemFireVersion() +".jar";
+    return "geode-core-" + GemFireVersion.getGemFireVersion() + ".jar";
-  
+
-    java.security.CodeSource cs = 
-      GemFireVersion.class.getProtectionDomain().getCodeSource();
+    java.security.CodeSource cs = GemFireVersion.class.getProtectionDomain().getCodeSource();
-    StringTokenizer tokenizer = new StringTokenizer(System.getProperty("java.class.path"), File.pathSeparator);
-    while(tokenizer.hasMoreTokens()) {
+    StringTokenizer tokenizer =
+        new StringTokenizer(System.getProperty("java.class.path"), File.pathSeparator);
+    while (tokenizer.hasMoreTokens()) {
-        } catch (Exception e) {}
+        } catch (Exception e) {
+        }
-    while(tokenizer.hasMoreTokens()) {
+    while (tokenizer.hasMoreTokens()) {
-        } catch (Exception e) {}
+        } catch (Exception e) {
+        }
-  
+
-        error = Optional.of(LocalizedStrings.GemFireVersion_COULD_NOT_FIND_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_0.toLocalizedString(name));
+        error = Optional
+            .of(LocalizedStrings.GemFireVersion_COULD_NOT_FIND_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_0
+                .toLocalizedString(name));
-        error = Optional.of(LocalizedStrings.GemFireVersion_COULD_NOT_READ_PROPERTIES_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_0_BECAUSE_1.toLocalizedString(new Object[] {name, ex}));
+        error = Optional
+            .of(LocalizedStrings.GemFireVersion_COULD_NOT_READ_PROPERTIES_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_0_BECAUSE_1
+                .toLocalizedString(new Object[] {name, ex}));
-    
+
-    
+
-        for (Entry<?,?> props : new TreeMap<>(description).entrySet()) {
+        for (Entry<?, ?> props : new TreeMap<>(description).entrySet()) {
-        StringBuffer sb = new StringBuffer(SocketCreator.getLocalHost().toString())
-            .append(", ")
+        StringBuffer sb = new StringBuffer(SocketCreator.getLocalHost().toString()).append(", ")
-            .append(System.getProperty("os.arch")).append(' ')
-            .append(System.getProperty("os.name")).append(' ')
-            .append(System.getProperty("os.version")).append(' ');
+            .append(System.getProperty("os.arch")).append(' ').append(System.getProperty("os.name"))
+            .append(' ').append(System.getProperty("os.version")).append(' ');
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {PRODUCT_NAME, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {PRODUCT_NAME, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {GEMFIRE_VERSION, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {GEMFIRE_VERSION, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {SOURCE_DATE, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {SOURCE_DATE, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {SOURCE_REVISION, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {SOURCE_REVISION, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {SOURCE_REPOSITORY, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {SOURCE_REPOSITORY, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {BUILD_DATE, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {BUILD_DATE, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {BUILD_ID, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {BUILD_ID, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {BUILD_PLATFORM, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {BUILD_PLATFORM, RESOURCE_NAME}));
-        return Optional.of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1.toLocalizedString(new Object[] {BUILD_JAVA_VERSION, RESOURCE_NAME}));
+        return Optional
+            .of(LocalizedStrings.GemFireVersion_MISSING_PROPERTY_0_FROM_RESOURCE_COM_GEMSTONE_GEMFIRE_INTERNAL_1
+                .toLocalizedString(new Object[] {BUILD_JAVA_VERSION, RESOURCE_NAME}));

UPD66 UPD66 DEL66