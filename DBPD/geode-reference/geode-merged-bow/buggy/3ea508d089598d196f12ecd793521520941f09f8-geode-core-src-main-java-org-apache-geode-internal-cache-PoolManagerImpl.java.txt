GEODE-6580: Cleanup static analyzer warnings. (#3432)


-    this.normalManager = addListener;
+    normalManager = addListener;
-    return this.normalManager;
+    return normalManager;
-    return this.pools.get(name);
+    return pools.get(name);
-      for (Iterator<Map.Entry<String, Pool>> itr = pools.entrySet().iterator(); itr.hasNext();) {
-        Map.Entry<String, Pool> entry = itr.next();
+      for (Entry<String, Pool> entry : pools.entrySet()) {
-    // debugStack("getMap: " + this.pools);
-    return new HashMap<String, Pool>(this.pools);
+    return new HashMap<>(pools);
-    synchronized (this.poolLock) {
-      Map<String, Pool> copy = new HashMap<String, Pool>(pools);
+    synchronized (poolLock) {
+      Map<String, Pool> copy = new HashMap<>(pools);
-      this.pools = Collections.unmodifiableMap(copy);
-      this.itrForEmergencyClose = copy.entrySet().iterator();
+      pools = Collections.unmodifiableMap(copy);
+      itrForEmergencyClose = copy.entrySet().iterator();
-    synchronized (this.poolLock) {
-      Map<String, Pool> copy = new HashMap<String, Pool>(pools);
+    synchronized (poolLock) {
+      Map<String, Pool> copy = new HashMap<>(pools);
-        this.pools = Collections.unmodifiableMap(copy);
-        this.itrForEmergencyClose = copy.entrySet().iterator();
+        pools = Collections.unmodifiableMap(copy);
+        itrForEmergencyClose = copy.entrySet().iterator();
-    StringBuffer result = new StringBuffer();
-    result.append(super.toString()).append("-").append(this.normalManager ? "normal" : "xml");
-    return result.toString();
+    return super.toString() + "-" + (normalManager ? "normal" : "xml");
-    for (Iterator<Pool> itr = pools.values().iterator(); itr.hasNext();) {
-      PoolImpl p = (PoolImpl) itr.next();
+    for (Pool pool : pools.values()) {
+      PoolImpl p = (PoolImpl) pool;
-        if (!xmlPoolsOnly || p.getDeclaredInXML()) {
+        if (!xmlPoolsOnly) {
-    Instantiator[] instantiators = new Instantiator[1];
-    instantiators[0] = instantiator;
-    for (Iterator<Pool> itr = PoolManager.getAll().values().iterator(); itr.hasNext();) {
-      PoolImpl next = (PoolImpl) itr.next();
+    Instantiator[] instantiators = new Instantiator[] {instantiator};
+    for (Pool pool : PoolManager.getAll().values()) {
+      PoolImpl next = (PoolImpl) pool;
-        if (eventId == null) {
-          // cache must not exist, do nothing
-        } else {
-          RegisterInstantiatorsOp.execute(next, instantiators,
-              InternalInstantiator.generateEventId());
+        if (eventId != null) {
+          RegisterInstantiatorsOp.execute(next, instantiators, eventId);
-    InstantiatorAttributesHolder[] holders = new InstantiatorAttributesHolder[1];
-    holders[0] = holder;
-    for (Iterator<Pool> itr = PoolManager.getAll().values().iterator(); itr.hasNext();) {
-      PoolImpl next = (PoolImpl) itr.next();
+    InstantiatorAttributesHolder[] holders = new InstantiatorAttributesHolder[] {holder};
+    for (Pool pool : PoolManager.getAll().values()) {
+      PoolImpl next = (PoolImpl) pool;
-        if (eventId == null) {
-          // cache must not exist, do nothing
-        } else {
-          RegisterInstantiatorsOp.execute(next, holders, InternalInstantiator.generateEventId());
+        if (eventId != null) {
+          RegisterInstantiatorsOp.execute(next, holders, eventId);
-    DataSerializer[] dataSerializers = new DataSerializer[1];
-    dataSerializers[0] = dataSerializer;
-    for (Iterator<Pool> itr = PoolManager.getAll().values().iterator(); itr.hasNext();) {
-      PoolImpl next = (PoolImpl) itr.next();
+    DataSerializer[] dataSerializers = new DataSerializer[] {dataSerializer};
+    for (Pool pool : PoolManager.getAll().values()) {
+      PoolImpl next = (PoolImpl) pool;
-        if (eventId == null) {
-          // cache must not exist, do nothing
-        } else {
+        if (eventId != null) {
-    SerializerAttributesHolder[] holders = new SerializerAttributesHolder[1];
-    holders[0] = holder;
-    for (Iterator<Pool> itr = PoolManager.getAll().values().iterator(); itr.hasNext();) {
-      PoolImpl next = (PoolImpl) itr.next();
+    SerializerAttributesHolder[] holders = new SerializerAttributesHolder[] {holder};
+    for (Pool pool : PoolManager.getAll().values()) {
+      PoolImpl next = (PoolImpl) pool;
-        EventID eventId = (EventID) holder.getEventId();
+        EventID eventId = holder.getEventId();
-        if (eventId == null) {
-          // cache must not exist, do nothing
-        } else {
+        if (eventId != null) {

MOV31 MOV44 MOV44 INS41 INS70 MOV60 INS70 INS60 INS70 INS70 INS70 INS42 MOV14 INS42 INS42 INS27 INS44 MOV32 MOV8 MOV5 INS44 MOV32 MOV8 MOV5 INS59 INS44 MOV32 MOV8 MOV5 INS44 MOV32 MOV8 MOV5 INS44 MOV32 MOV8 INS42 INS42 INS70 UPD74 INS21 INS21 MOV48 INS45 INS36 INS43 INS42 INS43 INS42 INS42 INS3 INS43 INS42 INS43 INS42 INS43 INS42 INS44 MOV32 MOV8 INS7 INS7 INS16 MOV42 MOV43 MOV5 INS4 MOV42 UPD42 MOV42 MOV43 MOV5 INS4 MOV42 MOV43 MOV5 INS4 MOV42 MOV43 MOV5 INS4 MOV42 MOV43 UPD74 MOV74 INS42 INS14 INS42 MOV32 INS42 MOV32 MOV21 MOV21 INS42 MOV45 MOV45 INS42 INS42 INS42 INS42 UPD43 UPD74 MOV74 INS42 UPD74 MOV43 INS42 MOV38 MOV43 INS42 UPD27 UPD42 MOV42 MOV43 INS42 UPD27 MOV43 INS42 UPD27 MOV43 INS42 MOV43 UPD27 INS42 INS42 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL40 DEL40 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL14 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL52 DEL42 DEL22 DEL16 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL34 DEL42 DEL42 DEL32 DEL8 DEL42 DEL32 DEL42 DEL34 DEL3 DEL59 DEL60 DEL42 DEL34 DEL2 DEL42 DEL7 DEL21 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL32 DEL24 DEL42 DEL42 DEL32 DEL8 DEL42 DEL32 DEL42 DEL34 DEL2 DEL42 DEL7 DEL21 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL34 DEL42 DEL42 DEL32 DEL8 DEL42 DEL34 DEL2 DEL42 DEL7 DEL21 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL34 DEL42 DEL42 DEL32 DEL42 DEL43 DEL11 DEL8 DEL42 DEL34 DEL2 DEL42 DEL7 DEL21 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24