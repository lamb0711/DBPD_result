GEODE-11: Fixing bug that arises while using user defined analyzer in gfsh.

This closes #233

When we use an user defined analyzer class in gfsh, the cluster hangs because the create region message that is sent has a LuceneIndexCreationProfile has a user defined analyzer class. Fixed this by storing only the class name in LuceneIndexCreationProfile.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE-11: StandardAnalyzer is used when analyzer option is null

Using the string "null" in the analyzer option for create lucene index command will now set the field analyzer to be StandardAnalyzer.

GEODE-11: Added CliAvailabilityIndicator to lucene gfsh commands

The lucene gfsh commands were available offline. Changed this behavior by adding CliAvailabilityIndicator.

GEODE-11:Fix for "Comparison method violates general contract"

The search results are sorted by score and the compareTo method caused the "Comparison method violates general contract" error when it returned multiple results with same score.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE 11: Added a check to make sure StandardAnalyzer and NULL were considered the same.

LuceneIndexCreationProfile checks to makes sure the newly created index's field analyzers are consistent with existing indexes' field analyzers. However, when a field's analyzer is null and a new index is created with StandardAnalyzer on the same field, it failed. Fixed this issue by modifying the conditional checks. Added dunit tests to verify.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE 11: Added a check to make sure StandardAnalyzer and NULL were considered the same.

LuceneIndexCreationProfile checks to makes sure the newly created index's field analyzers are consistent with existing indexes' field analyzers. However, when a field's analyzer is null and a new index is created with StandardAnalyzer on the same field, it failed. Fixed this issue by modifying the conditional checks. Added dunit tests to verify.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE 11: Clean up of comparison code in LuceneIndexCreationProfile

Since the null in fieldAnalyzers are converted to Standard analyzer, a few checks become irrelevant. Modified the code and relevant tests.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

fix merge issue

+import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
+
+  @CliAvailabilityIndicator({LuceneCliStrings.LUCENE_SEARCH_INDEX, LuceneCliStrings.LUCENE_CREATE_INDEX,
+    LuceneCliStrings.LUCENE_DESCRIBE_INDEX, LuceneCliStrings.LUCENE_LIST_INDEX})
+  public boolean indexCommandsAvailable() {
+    return (!CliUtil.isGfshVM() || (getGfsh() != null && getGfsh().isConnectedAndReady()));
+  }

INS26 INS40 INS31 INS79 INS83 INS39 INS42 INS8 INS42 INS4 INS41 INS40 INS40 INS40 INS40 INS36 INS27 INS38 INS36 INS32 INS27 INS42 INS42 INS27 INS32 INS32 INS33 INS32 INS42 INS42 INS42