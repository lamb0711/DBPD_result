GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

+import org.apache.geode.internal.cache.eviction.EvictableEntry;
-import org.apache.geode.internal.cache.lru.LRUEntry;
-public class LocalRegion extends AbstractRegion implements InternalRegion, LoaderHelperFactory,
+public class LocalRegion extends AbstractRegion implements LoaderHelperFactory,
+  @Override
-  boolean evictDestroy(LRUEntry entry) {
+  boolean evictDestroy(EvictableEntry entry) {
-      entry.setRecentlyUsed();
+      entry.setRecentlyUsed(this);
-            if (regionEntry instanceof DiskEntry && regionEntry instanceof LRUEntry) {
-              LRUEntry le = (LRUEntry) regionEntry;
-              if (le.testEvicted()) {
+            if (regionEntry instanceof DiskEntry && regionEntry instanceof EvictableEntry) {
+              EvictableEntry le = (EvictableEntry) regionEntry;
+              if (le.isEvicted()) {
-  /*****************************************************************************
-   * INNER CLASSES
-   ****************************************************************************/
+  @Override
+  public void incRecentlyUsed() {
+    // nothing
+    this.entries.incRecentlyUsed();
+  }
+  /*****************************************************************************
+   * INNER CLASSES
+   ****************************************************************************/
+
-       * If this is tx, do removeEntry, unless it is a local region?
+       * If this is tx, do destroyEntry, unless it is a local region?
+  /**
+   * Returns the number of LRU evictions done by this region.
+   */
+  @Override
+  public long getEvictions() {
+    return this.entries.getEvictions();
+  }
+

MOV26 UPD40 INS31 INS31 INS78 INS78 INS83 INS39 INS42 INS8 MOV29 INS29 INS78 INS83 INS39 INS42 INS8 INS42 UPD43 INS42 INS21 INS65 INS42 INS41 UPD42 INS32 INS66 INS32 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 UPD43 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 DEL42 DEL43