Adding an implementation of LuceneQueryResults

This implementation does not support project fields yet, but it does
provide pagination by holding a set of all matching keys and fetching
the next set of values using the keys.

-public class LuceneResultStructImpl implements LuceneResultStruct {
-  Object key;
+public class LuceneResultStructImpl<K,V> implements LuceneResultStruct<K,V> {
+  K key;
+  V value;
-  public LuceneResultStructImpl(Object key, float score) {
+  public LuceneResultStructImpl(K key, V value, float score) {
+    this.value = value;
-    // TODO Auto-generated method stub
-    return null;
+    throw new UnsupportedOperationException();
-  public Object getKey() {
+  public K getKey() {
-  public Object getValue() {
-    // TODO Auto-generated method stub
-    return null;
+  public V getValue() {
+    return value;
-    // TODO Auto-generated method stub
-    return null;
+    throw new UnsupportedOperationException();
-    // TODO Auto-generated method stub
-    return null;
+    throw new UnsupportedOperationException();
+  }
+
+  @Override
+  public int hashCode() {
+    final int prime = 31;
+    int result = 1;
+    result = prime * result + ((key == null) ? 0 : key.hashCode());
+    result = prime * result + Float.floatToIntBits(score);
+    result = prime * result + ((value == null) ? 0 : value.hashCode());
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj)
+      return true;
+    if (obj == null)
+      return false;
+    if (getClass() != obj.getClass())
+      return false;
+    LuceneResultStructImpl other = (LuceneResultStructImpl) obj;
+    if (key == null) {
+      if (other.key != null)
+        return false;
+    } else if (!key.equals(other.key))
+      return false;
+    if (Float.floatToIntBits(score) != Float.floatToIntBits(other.score))
+      return false;
+    if (value == null) {
+      if (other.value != null)
+        return false;
+    } else if (!value.equals(other.value))
+      return false;
+    return true;
+  }
+
+  @Override
+  public String toString() {
+    return "LuceneResultStructImpl [key=" + key + ", value=" + value
+        + ", score=" + score + "]";

INS73 INS73 INS74 INS23 INS31 INS31 INS31 INS42 INS42 MOV43 INS43 INS43 UPD43 INS43 INS59 INS44 INS44 UPD43 MOV78 UPD43 MOV78 INS83 MOV5 INS42 INS8 MOV78 INS83 MOV5 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS39 INS42 MOV44 INS8 INS78 INS43 INS42 INS42 INS42 UPD42 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS53 UPD42 UPD42 INS53 INS53 INS42 INS60 INS60 INS21 INS21 INS21 INS41 INS42 UPD42 INS25 INS25 INS25 INS60 INS25 INS25 INS25 INS41 INS42 INS42 INS42 INS42 INS7 INS14 INS42 INS14 INS14 INS83 INS39 INS59 INS39 INS59 INS7 INS7 INS7 INS42 INS27 INS41 INS27 INS41 INS27 INS41 INS43 INS59 INS27 INS8 INS25 INS27 INS41 INS27 INS8 INS25 INS9 INS27 INS22 INS42 INS43 INS43 INS43 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS52 INS42 INS9 INS42 INS33 INS9 INS32 INS32 INS9 INS42 INS42 INS11 INS42 INS33 INS25 INS38 INS41 INS32 INS32 INS9 INS42 INS33 INS25 INS38 INS41 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS52 INS42 INS42 INS42 INS42 INS27 INS36 INS27 INS32 INS27 INS36 INS42 INS42 INS42 INS43 INS42 INS27 INS41 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS40 INS27 INS41 INS32 INS9 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS36 INS34 INS32 INS36 INS34 INS32 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS33 INS42 INS33 DEL33 DEL41 DEL33 DEL42 DEL33 DEL41 DEL8 DEL42 DEL33