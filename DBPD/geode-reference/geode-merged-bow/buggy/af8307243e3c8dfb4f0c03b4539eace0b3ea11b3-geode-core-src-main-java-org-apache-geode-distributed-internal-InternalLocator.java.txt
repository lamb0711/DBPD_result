GEODE-7760: NPE in Locator during auto-reconnect (#4668)

* GEODE-7760: NPE in Locator during auto-reconnect

* empty commit

* fixes for stress-testing

* working on another stresstest failure

This test passes all the time outside of stress testing

* ignoring test that seems to have trouble with workingDir/configDir and temporary folders in stress testing

* remove use of static locator variable in InternalLocator.  added crash test.  unset shutdownHandled after locator restarts

* fixing stresstest issues

-  private void startClusterManagementService() throws IOException {
+  @VisibleForTesting
+  void startClusterManagementService() throws IOException {
-    if (internalCache == null) {
+    InternalCache myCache = this.internalCache;
+
+    if (myCache == null) {
-    clusterManagementService = new LocatorClusterManagementService(locator.internalCache,
-        locator.configurationPersistenceService);
+    clusterManagementService = new LocatorClusterManagementService(myCache,
+        configurationPersistenceService);
-        internalCache.getSecurityService());
+        myCache.getSecurityService());
-      internalCache.getOptionalService(HttpService.class).ifPresent(x -> {
+      myCache.getOptionalService(HttpService.class).ifPresent(x -> {
+    // stop the TCPServer
+        shutdownHandled.set(false);
+        restartThread = null;
-      restartThread = null;
-          quorumChecker = internalDistributedSystem.getQuorumChecker();
+          quorumChecker = system.getQuorumChecker();
-              .checkForQuorum(3L * internalDistributedSystem.getConfig().getMemberTimeout());
+              .checkForQuorum(3L * system.getConfig().getMemberTimeout());
-          logger.info("Attempt to reconnect failed and further attempts have been terminated");
-          stoppedForReconnect = false;
-          return false;
+          continue; // DistributedSystem failed to restart - loop until it gives up
-    if (locator.configurationPersistenceService == null) {
+    if (configurationPersistenceService == null) {
-      locator.configurationPersistenceService =
-          new InternalConfigurationPersistenceService(locator.internalCache, workingDirectory,
+      configurationPersistenceService =
+          new InternalConfigurationPersistenceService(internalCache, workingDirectory,
-    locator.configurationPersistenceService
-        .initSharedConfiguration(locator.loadFromSharedConfigDir());
+    configurationPersistenceService
+        .initSharedConfiguration(loadFromSharedConfigDir());
-      if (locator.configurationPersistenceService != null) {
-        response = locator.configurationPersistenceService.createStatusResponse();
+      if (configurationPersistenceService != null) {
+        response = configurationPersistenceService.createStatusResponse();

INS78 INS42 INS60 INS43 INS59 INS42 INS42 INS22 UPD42 INS42 INS42 INS52 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 INS21 MOV21 INS18 INS32 INS42 INS42 INS9 UPD42 UPD42 DEL83 DEL40 DEL40 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL9 DEL41 DEL40 DEL40 DEL40 DEL40 DEL42 DEL40 DEL40