client server

client server

+import java.security.Principal;
+import com.gemstone.gemfire.security.PostProcessor;
+  public static void authorizeRegionManage(String regionName, String key) {
+    authorize("DATA", "MANAGE", regionName, key);
+  }
+
+  public static void authorizeRegionWrite(String regionName, String key) {
+    authorize("DATA", "WRITE", regionName, key);
+  }
+
+  public static void authorizeRegionRead(String regionName, String key) {
+    authorize("DATA", "READ", regionName, key);
+  }
+
-  private static void authorize(String resource, String operation, String regionName) {
+  private static void authorize(String resource, String operation, String regionName){
+    authorize(resource, operation, regionName, null);
+  }
+
+  private static void authorize(String resource, String operation, String regionName, String key) {
-    authorize(new GeodePermission(resource, operation, regionName));
+    authorize(new GeodePermission(resource, operation, regionName, key));
-      logger.info(currentUser.getPrincipal() + " not authorized for " + context);
-      throw new NotAuthorizedException(e.getMessage(), e);
+      String msg = currentUser.getPrincipal() + " not authorized for " + context;
+      throw new NotAuthorizedException(msg, e);
+  private static PostProcessor postProcessor;
+
-    Object auth = getAuthenticatorObject(customAuthenticator);
-
+    Object authenticatorObject = getObject(customAuthenticator);
+
-    else if (auth != null && auth instanceof ExternalSecurity) {
-      ExternalSecurity externalSecurity = (ExternalSecurity) auth;
-      externalSecurity.init(securityProps);
-      Realm realm = new CustomAuthRealm(externalSecurity);
+    else if (authenticatorObject != null && authenticatorObject instanceof ExternalSecurity) {
+      ExternalSecurity authenticator = (ExternalSecurity) authenticatorObject;
+      authenticator.init(securityProps);
+      Realm realm = new CustomAuthRealm(authenticator);
+
+    // this initializes the post processor
+    String customPostProcessor = securityProps.getProperty(SECURITY_CLIENT_ACCESSOR_PP);
+    Object postProcessObject = getObject(customPostProcessor);
+    if(postProcessObject instanceof PostProcessor){
+      postProcessor = (PostProcessor) postProcessObject;
+      postProcessor.init(securityProps);
+    }
-  public static Object getAuthenticatorObject(String authenticatorFactoryName) {
-    if (StringUtils.isBlank(authenticatorFactoryName)) {
+  public static Object postProcess(String regionPath, Object key, Object result){
+    if(postProcessor == null)
+      return result;
+
+    Subject subject = getSubject();
+
+    if(subject == null)
+      return result;
+
+    return postProcessor.processRegionValue((Principal)subject.getPrincipal(), regionPath, key,  result);
+  }
+
+  public static Object getObject(String factoryName) {
+    if (StringUtils.isBlank(factoryName)) {
-
-      Method instanceGetter = ClassLoadUtil.methodFromName(authenticatorFactoryName);
+      Method instanceGetter = ClassLoadUtil.methodFromName(factoryName);
-    Object auth = getAuthenticatorObject(authenticatorFactoryName);
+    Object auth = getObject(authenticatorFactoryName);

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS23 INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS44 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 UPD42 INS43 INS42 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS43 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS60 INS25 INS41 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS43 INS59 INS62 INS8 INS42 INS42 INS42 INS27 INS41 INS43 INS59 INS27 INS41 INS32 INS42 INS45 INS45 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS33 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS21 INS21 INS42 INS33 INS42 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS11 INS42 INS42 INS42 UPD42 INS42 INS60 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS43 INS32 UPD42 INS43 INS59 UPD42 UPD42 MOV43 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV27 INS42 UPD42 UPD42 INS43 INS42 UPD42 MOV43 UPD42 UPD42 INS42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32