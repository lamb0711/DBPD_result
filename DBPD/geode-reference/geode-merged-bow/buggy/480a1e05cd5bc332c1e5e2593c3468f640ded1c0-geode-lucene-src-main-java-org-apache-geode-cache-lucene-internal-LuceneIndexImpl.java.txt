GEODE-2828: AEQ created before the Lucene user regions

	* AEQ is being created before the Lucene user region
	* A countdown latch prevents the index repository computation until the user regions are ready
	* Integration tests do not use a Dummy executor because we need a thread pool for afterPrimary call.

	This closes #481

-import org.apache.geode.internal.cache.PartitionedRegion;
+  protected boolean hasInitializedAEQ = false;
-      // assert dataRegion != null;
-
-      repositoryManager = createRepositoryManager();
-
-      // create AEQ, AEQ listener and specify the listener to repositoryManager
-      createAEQ(dataRegion);
-
+      createLuceneListenersAndFileChunkRegions(
+          (AbstractPartitionedRepositoryManager) repositoryManager);
-  protected abstract RepositoryManager createRepositoryManager();
-
-  protected AsyncEventQueue createAEQ(Region dataRegion) {
-    return createAEQ(createAEQFactory(dataRegion));
+  protected void initializeAEQ(RegionAttributes attributes, String aeqId) {
+    if (!hasInitializedAEQ) {
+      repositoryManager = createRepositoryManager();
+      createAEQ(attributes, aeqId);
+      hasInitializedAEQ = true;
+    }
-  private AsyncEventQueueFactoryImpl createAEQFactory(final Region dataRegion) {
+  protected abstract RepositoryManager createRepositoryManager();
+
+  protected abstract void createLuceneListenersAndFileChunkRegions(
+      AbstractPartitionedRepositoryManager partitionedRepositoryManager);
+
+  protected AsyncEventQueue createAEQ(Region dataRegion) {
+    String aeqId = LuceneServiceImpl.getUniqueIndexName(getName(), regionPath);
+    return createAEQ(createAEQFactory(dataRegion.getAttributes()), aeqId);
+  }
+
+  protected AsyncEventQueue createAEQ(RegionAttributes attributes, String aeqId) {
+    return createAEQ(createAEQFactory(attributes), aeqId);
+  }
+
+  private AsyncEventQueueFactoryImpl createAEQFactory(final RegionAttributes attributes) {
-    if (dataRegion instanceof PartitionedRegion) {
-      PartitionedRegion pr = (PartitionedRegion) dataRegion;
-      if (pr.getPartitionAttributes().getLocalMaxMemory() == 0) {
+    if (attributes.getPartitionAttributes() != null) {
+
+      if (attributes.getPartitionAttributes().getLocalMaxMemory() == 0) {
-    if (dataRegion.getAttributes().getDataPolicy().withPersistence()) {
+    if (attributes.getDataPolicy().withPersistence()) {
-    factory.setDiskStoreName(dataRegion.getAttributes().getDiskStoreName());
+    factory.setDiskStoreName(attributes.getDiskStoreName());
-  private AsyncEventQueue createAEQ(AsyncEventQueueFactoryImpl factory) {
+  private AsyncEventQueue createAEQ(AsyncEventQueueFactoryImpl factory, String aeqId) {
-    String aeqId = LuceneServiceImpl.getUniqueIndexName(getName(), regionPath);

INS23 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS83 MOV43 INS42 MOV44 INS8 INS43 INS44 INS44 INS44 INS42 INS9 INS43 INS42 INS43 INS42 INS25 INS43 INS42 MOV60 INS41 INS42 INS43 INS42 INS43 INS42 UPD43 UPD42 INS43 INS42 INS42 INS42 INS38 INS8 INS42 MOV32 MOV32 INS42 INS42 UPD42 INS27 INS32 INS42 INS42 MOV21 INS21 INS21 UPD42 MOV32 INS42 INS42 INS32 INS33 INS32 INS42 INS32 INS7 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 INS11 INS42 INS42 INS42 INS42 INS9 INS43 INS42 INS42 UPD42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL32