GEODE-4765: Add retries when retrieving cluster config (#1539)

- This helps when a locator is reconnecting to the distributed system and isn't
  fully ready yet.
- During reconnect, pass a fresh cache to the ClusterConfigurationService -
  this fixes the 'DLock destroyed' issue.
- Also fixes GEODE-4730

+import org.apache.geode.cache.execute.Function;
+import org.apache.geode.cache.execute.FunctionException;
+import org.apache.geode.cache.execute.FunctionInvocationTargetException;
+import org.apache.geode.distributed.LockServiceDestroyedException;
+  private static final Function GET_CLUSTER_CONFIG_FUNCTION = new GetClusterConfigurationFunction();
+
-    for (InternalDistributedMember locator : locatorList) {
-      ResultCollector resultCollector =
-          FunctionService.onMember(locator).setArguments(groups).execute(function);
-      Object result = ((ArrayList) resultCollector.getResult()).get(0);
-      if (result instanceof ConfigurationResponse) {
-        response = (ConfigurationResponse) result;
-        response.setMember(locator);
-        break;
-      } else {
-        logger.error("Received invalid result from {}: {}", locator.toString(), result);
-        if (result instanceof Throwable) {
-          // log the stack trace.
-          logger.error(result.toString(), result);
+
+    int attempts = 6;
+    OUTER: while (attempts > 0) {
+      for (InternalDistributedMember locator : locatorList) {
+        logger.info("Attempting to retrieve cluster configuration from {} - {} attempts remaining",
+            locator.getName(), attempts);
+        response = requestConfigurationFromOneLocator(locator, groups);
+        if (response != null) {
+          break OUTER;
+
+      try {
+        Thread.sleep(10000);
+      } catch (InterruptedException ex) {
+        break;
+      }
+
+      attempts--;
+  private ConfigurationResponse requestConfigurationFromOneLocator(
+      InternalDistributedMember locator, Set<String> groups) {
+    ConfigurationResponse configResponse = null;
+
+    try {
+      ResultCollector resultCollector = FunctionService.onMember(locator).setArguments(groups)
+          .execute(GET_CLUSTER_CONFIG_FUNCTION);
+      Object result = ((ArrayList) resultCollector.getResult()).get(0);
+      if (result instanceof ConfigurationResponse) {
+        configResponse = (ConfigurationResponse) result;
+        configResponse.setMember(locator);
+      } else {
+        logger.error("Received invalid result from {}: {}", locator.toString(), result);
+        if (result instanceof Throwable) {
+          // log the stack trace.
+          logger.error(result.toString(), result);
+        }
+      }
+    } catch (FunctionException fex) {
+      // Rethrow unless we're possibly reconnecting
+      if (!(fex.getCause() instanceof LockServiceDestroyedException
+          || fex.getCause() instanceof FunctionInvocationTargetException)) {
+        throw fex;
+      }
+    }
+
+    return configResponse;
+  }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 MOV29 INS83 MOV43 INS42 MOV44 MOV44 MOV43 MOV43 INS8 UPD83 INS43 UPD42 MOV44 INS44 INS42 INS42 INS14 MOV60 MOV60 MOV60 INS60 INS30 MOV25 MOV41 INS42 INS74 INS42 INS60 INS54 INS41 INS43 INS39 INS59 INS42 INS61 INS43 INS43 INS43 INS59 MOV8 INS12 INS42 INS42 INS42 INS34 INS27 INS8 INS42 INS42 INS42 INS42 INS33 INS44 INS8 INS42 INS34 INS70 INS54 INS21 INS43 INS42 INS25 INS44 INS42 INS8 INS8 INS12 INS37 INS42 INS38 INS8 INS43 INS42 INS21 INS21 INS25 INS21 INS44 INS8 INS42 UPD42 INS36 INS53 INS42 INS32 INS7 INS27 INS8 INS32 INS43 INS42 INS10 UPD42 UPD42 INS27 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS33 INS10 INS42 INS42 INS34 INS42 INS62 INS62 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 DEL10 DEL42 DEL70