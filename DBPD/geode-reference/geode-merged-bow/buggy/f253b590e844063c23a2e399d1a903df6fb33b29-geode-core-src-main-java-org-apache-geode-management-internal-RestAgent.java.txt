GEODE-6283: expose HttpService on InternalCache so that different comâ€¦ (#3110)

* GEODE-6283: expose HttpService on InternalCache so that different component can add their own webapps independently.

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>

-import org.eclipse.jetty.server.Server;
-import org.eclipse.jetty.server.ServerConnector;
+import org.apache.geode.internal.cache.HttpService;
-import org.apache.geode.internal.net.SSLConfigurationFactory;
-import org.apache.geode.internal.security.SecurableCommunicationChannel;
-import org.apache.geode.management.ManagementService;
-  private boolean isManagementRestServiceRunning(InternalCache cache) {
-    final SystemManagementService managementService =
-        (SystemManagementService) ManagementService.getManagementService(cache);
-    return (managementService.getManagementAgent() != null
-        && managementService.getManagementAgent().isHttpServiceRunning());
-  }
-    if (!this.running && this.config.getHttpServicePort() != 0
-        && !isManagementRestServiceRunning(cache)) {
+    if (!this.running && this.config.getHttpServicePort() != 0) {
-        startHttpService();
+        startHttpService(cache);
-  public synchronized void stop() {
-    if (this.running) {
-      stopHttpService();
-      if (logger.isDebugEnabled()) {
-        logger.debug("Gemfire Rest Http service stopped");
-      }
-      this.running = false;
-    } else {
-      if (logger.isDebugEnabled()) {
-        logger.debug("Attempt to stop Gemfire Rest Http service which is not running");
-      }
-    }
-  }
-
-  private Server httpServer;
-  public void startHttpService() {
-    // TODO: add a check that will make sure that we start HTTP service on
-    // non-manager data node
-    String httpServiceBindAddress = getBindAddressForHttpService(this.config);
-    logger.info("Attempting to start HTTP service on port ({}) at bind-address ({})...",
-        this.config.getHttpServicePort(), httpServiceBindAddress);
-
+  public void startHttpService(InternalCache cache) {
-        final int port = this.config.getHttpServicePort();
-
-        this.httpServer = JettyHelper.initJetty(httpServiceBindAddress, port,
-            SSLConfigurationFactory.getSSLConfigForComponent(SecurableCommunicationChannel.WEB));
-
-            new ImmutablePair<>(JettyHelper.SECURITY_SERVICE_SERVLET_CONTEXT_PARAM,
+            new ImmutablePair<>(HttpService.SECURITY_SERVICE_SERVLET_CONTEXT_PARAM,
-        JettyHelper
-            .addWebApplication(httpServer, "/gemfire-api", gemfireAPIWar, securityServiceAttr);
-        JettyHelper.addWebApplication(httpServer, "/geode", gemfireAPIWar, securityServiceAttr);
-
-        if (logger.isDebugEnabled()) {
-          logger.debug("Starting HTTP embedded server on port ({}) at bind-address ({})...",
-              ((ServerConnector) this.httpServer.getConnectors()[0]).getPort(),
-              httpServiceBindAddress);
-        }
-
-        JettyHelper.startJetty(this.httpServer);
-        logger.info("HTTP service started successfully...!!");
+        HttpService httpService = cache.getHttpService();
+        httpService
+            .addWebApplication("/gemfire-api", gemfireAPIWar, securityServiceAttr);
+        httpService.addWebApplication("/geode", gemfireAPIWar, securityServiceAttr);
-      stopHttpService();// Jetty needs to be stopped even if it has failed to
-                        // start. Some of the threads are left behind even if
-                        // server.start() fails due to an exception
-  private void stopHttpService() {
-    if (this.httpServer != null) {
-      logger.info("Stopping the HTTP service...");
-      try {
-        this.httpServer.stop();
-      } catch (Exception e) {
-        logger.warn("Failed to stop the HTTP service because: {}", e.getMessage(), e);
-      } finally {
-        try {
-          this.httpServer.destroy();
-        } catch (Exception ignore) {
-          logger.error("Failed to properly release resources held by the HTTP service: {}",
-              ignore.getMessage(), ignore);
-        } finally {
-          this.httpServer = null;
-          System.clearProperty("catalina.base");
-          System.clearProperty("catalina.home");
-        }
-      }
-    }
-  }
-

MOV26 UPD40 MOV44 MOV27 MOV60 INS42 INS43 INS42 UPD42 UPD42 UPD42 UPD40 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL36 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL38 DEL27 DEL83 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL7 DEL21 DEL83 DEL39 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL32 DEL34 DEL2 DEL11 DEL36 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL12 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL12 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL54 DEL8 DEL54 DEL8 DEL25 DEL8 DEL31