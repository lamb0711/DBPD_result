GEODE-3231: withLogFile does not imply withWorkingDir anymore

-  protected transient TemporaryFolder temporaryFolder;
+  protected transient TemporaryFolder temporaryFolder;
-    this(null);
-  }
-
-  // Not meant to be public, only used by LocatorServerStartupRule
-  MemberStarterRule(File workDir) {
-    workingDir = workDir;
-    if (workDir != null) {
-      withWorkingDir();
-    }
+
+  public T withWorkingDir(File workingDir) {
+    this.workingDir = workingDir;
+    if (workingDir != null) {
+      System.setProperty("user.dir", workingDir.toString());
+    }
+    return (T) this;
+  }
+
+  /**
+   * create a working dir using temporaryFolder. Use with caution, this sets "user.dir" system
+   * property that not approved by JDK
+   */
+  public T withWorkingDir() {
+    temporaryFolder = new TemporaryFolder();
+    try {
+      temporaryFolder.create();
+    } catch (IOException e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
+    withWorkingDir(temporaryFolder.getRoot().getAbsoluteFile());
+    return (T) this;
+  }
+
+  /**
+   * All the logs are written in the logfile instead on the console. this is usually used with
+   * withWorkingDir so that logs are accessible and will be cleaned up afterwards.
+   */
+  public T withLogFile() {
+    this.logFile = true;
+    return (T) this;
+  }
+
+    if (temporaryFolder != null) {
+      temporaryFolder.delete();
+    }
+
-
-    if (temporaryFolder != null) {
-      temporaryFolder.delete();
-    }
-  /**
-   * this will make the logging to into a log file instead of on the console.
-   *
-   * Use with caution, the logs files are created in a temp working directory. this is achieved by
-   * dynamically changing the "user.dir" system property.
-   * 
-   * @return
-   */
-  public T withLogFile() {
-    this.logFile = true;
-    return (T) this;
-  }
-
-  // Not meant to be public, only used by LocatorServerStartupRule
-  T withLogFile(boolean logFile) {
-    this.logFile = logFile;
-    return (T) this;
-  }
-
-  /**
-   * create the working dir using temporaryFolder. Use with caution, this sets "user.dir" system
-   * property that not approved by JDK
-   */
-  public T withWorkingDir() {
-    if (workingDir == null) {
-      temporaryFolder = new TemporaryFolder();
-      try {
-        temporaryFolder.create();
-      } catch (IOException e) {
-        throw new RuntimeException(e.getMessage(), e);
-      }
-      workingDir = temporaryFolder.getRoot().getAbsoluteFile();
-    }
-
-    System.setProperty("user.dir", workingDir.toString());
-    return (T) this;
-  }
-
-    // do it here since only here, we can gurantee the name is present
+    // do it here since only here, we can guarantee the name is present
-      // if working dir is not created yet, creates it.
-      if (workingDir == null) {
-        withWorkingDir();
-      }

MOV23 MOV31 MOV31 INS31 INS83 MOV83 MOV43 UPD42 MOV42 MOV44 MOV8 MOV8 MOV25 UPD42 INS25 MOV41 INS27 INS8 UPD66 INS32 UPD66 UPD66 UPD42 INS42 INS33 MOV21 INS42 MOV32 UPD42 DEL42 DEL33 DEL17 DEL8 DEL31 DEL42 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL7 DEL42 DEL33 DEL27 DEL25 DEL8 DEL66 DEL65 DEL39 DEL42 DEL44 DEL31 DEL42 DEL33 DEL27 DEL42 DEL32 DEL21 DEL8 DEL25