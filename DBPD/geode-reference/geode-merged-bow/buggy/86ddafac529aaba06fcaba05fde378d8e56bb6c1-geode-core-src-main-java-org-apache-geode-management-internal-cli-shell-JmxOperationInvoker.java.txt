GEODE-4131: Do not reference deployed jars as byte arrays anymore (#1212)

* GEODE-4131: Do not reference deployed jars as byte arrays anymore

- All jars are streamed between locators and servers using the RMIIO library.
- Whenever an upload happens (either deploying jars or importing cluster
  config) we stage the files initially and then proceed with the command.
+import java.io.File;
+import java.io.FileInputStream;
+import java.util.List;
+import com.healthmarketscience.rmiio.RemoteInputStream;
+import com.healthmarketscience.rmiio.SimpleRemoteInputStream;
+
-import org.apache.geode.internal.util.ArrayUtils;
+import org.apache.geode.management.internal.beans.FileUploaderMBean;
+  private FileUploaderMBean fileUploadMBeanProxy;
+          this.fileUploadMBeanProxy = JMX.newMBeanProxy(mbsc,
+              new ObjectName(ManagementConstants.OBJECTNAME__FILEUPLOADER_MBEAN),
+              FileUploaderMBean.class);
-  public Object processCommand(final CommandRequest commandRequest) throws JMXInvocationException {
-    Byte[][] binaryData = null;
-    if (commandRequest.hasFileData()) {
-      binaryData = ArrayUtils.toByteArray(commandRequest.getFileData());
+  public Object processCommand(final CommandRequest commandRequest) {
+    // upload the files first
+
+    List<String> stagedFilePaths = null;
+    try {
+      if (commandRequest.hasFileList()) {
+        Map<String, RemoteInputStream> remoteFiles = new HashMap<>();
+
+        for (File file : commandRequest.getFileList()) {
+          RemoteInputStream ris = new SimpleRemoteInputStream(new FileInputStream(file)).export();
+          remoteFiles.put(file.getName(), ris);
+        }
+
+        stagedFilePaths = fileUploadMBeanProxy.uploadFile(remoteFiles);
+      }
+    } catch (IOException e) {
+      throw new JMXInvocationException("Unable to upload file", e);
-    return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
-        commandRequest.getEnvironment(), binaryData);
+
+    try {
+      return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
+          commandRequest.getEnvironment(), stagedFilePaths);
+    } finally {
+      if (stagedFilePaths != null) {
+        fileUploadMBeanProxy.deleteFiles(stagedFilePaths);
+      }
+    }

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS23 INS83 INS43 INS59 INS8 INS42 INS42 INS60 INS54 INS54 INS74 INS59 INS8 INS12 MOV8 INS8 INS43 INS43 INS42 INS33 INS25 INS44 INS8 INS25 INS42 INS42 INS32 INS8 INS43 INS42 INS53 INS27 INS8 INS42 INS42 INS60 INS70 INS21 INS42 INS14 UPD42 INS42 INS33 INS21 INS74 INS59 INS44 INS32 INS8 INS7 MOV43 INS45 INS42 INS32 INS21 INS43 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS60 INS21 INS42 INS32 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS74 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS22 INS32 INS43 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS42 INS14 INS57 INS42 INS14 INS42 INS42 INS42 INS43 INS40 INS43 INS43 INS14 INS42 INS42 INS42 INS43 INS42 INS42 DEL42 DEL43 DEL85 DEL85 DEL5 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25