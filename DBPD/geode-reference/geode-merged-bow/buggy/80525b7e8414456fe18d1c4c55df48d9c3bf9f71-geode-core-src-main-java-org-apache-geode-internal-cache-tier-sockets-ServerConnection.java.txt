[GEODE-2144] Improve error message when no security credentials are provided.

- Improve error message when no security credentials are provided.
- Add tests for the code paths exposing this message.
- Refactor making those code paths more testable.

This closes #310

+  private MessageIdExtractor messageIdExtractor = new MessageIdExtractor();
+
+  public void setRequestMsg(Message requestMsg) {
+    this.requestMsg = requestMsg;
+  }
+
-    if (this.communicationMode == Acceptor.CLIENT_TO_SERVER
-        || this.communicationMode == Acceptor.GATEWAY_TO_GATEWAY
+    if (this.communicationMode == Acceptor.CLIENT_TO_SERVER || isGatewayConnection()
-  private static class AuthIds {
-    private long connectionId;
-    private long uniqueId;
-
-    public AuthIds(byte[] bytes) throws Exception {
-      DataInputStream dis = new DataInputStream(new ByteArrayInputStream(bytes));
-      if (bytes.length == 8) {
-        // only connectionid
-        connectionId = dis.readLong();
-      } else if (bytes.length == 16) {
-        // first connectionId and then uniqueID
-        connectionId = dis.readLong();
-        uniqueId = dis.readLong();
-      } else {
-        throw new Exception("Auth ids are not in right form");
-      }
-    }
-
-
-    public long getConnectionId() {
-      return connectionId;
-    }
-
-    public long getUniqueId() {
-      return this.uniqueId;
-    }
-  }
-
-    if (this.handshake.getVersion().compareTo(Version.GFE_65) < 0
-        || this.communicationMode == Acceptor.GATEWAY_TO_GATEWAY) {
+    if (this.handshake.getVersion().isPre65() || isGatewayConnection()) {
+    } else if (this.requestMsg.isSecureMode()) {
+      uniqueId = messageIdExtractor.getUniqueIdFromMessage(this.requestMsg,
+          (HandShake) this.handshake, this.connectionId);
-      try {
-        // this.logger.fine("getAuthzRequest() isSecureMode = " + this.requestMsg.isSecureMode());
-        if (this.requestMsg.isSecureMode()) {
-          // get uniqueID from message
-          byte[] secureBytes = this.requestMsg.getSecureBytes();
-
-          secureBytes = ((HandShake) this.handshake).decryptBytes(secureBytes);
-          AuthIds aIds = new AuthIds(secureBytes);
-
-          if (this.connectionId != aIds.getConnectionId()) {
-            throw new AuthenticationRequiredException(
-                LocalizedStrings.HandShake_NO_SECURITY_PROPERTIES_ARE_PROVIDED.toLocalizedString());
-          } else {
-            uniqueId = aIds.getUniqueId();
-          }
-
-        } else {
-          throw new AuthenticationRequiredException(
-              LocalizedStrings.HandShake_NO_SECURITY_PROPERTIES_ARE_PROVIDED.toLocalizedString());
-        }
-      } catch (AuthenticationRequiredException are) {
-        throw are;
-      } catch (Exception ex) {
-        throw new AuthenticationRequiredException(
-            LocalizedStrings.HandShake_NO_SECURITY_PROPERTIES_ARE_PROVIDED.toLocalizedString());
-      }
+      throw new AuthenticationRequiredException(
+          LocalizedStrings.HandShake_NO_SECURITY_CREDENTIALS_ARE_PROVIDED.toLocalizedString());
+  private boolean isGatewayConnection() {
+    return getCommunicationMode() == Acceptor.GATEWAY_TO_GATEWAY;
+  }
+
+
+  public void setMessageIdExtractor(MessageIdExtractor messageIdExtractor) {
+    this.messageIdExtractor = messageIdExtractor;
+  }
+
+  public MessageIdExtractor getMessageIdExtractor() {
+    return this.messageIdExtractor;
+  }

INS23 INS31 INS31 INS31 INS31 INS83 INS43 INS59 MOV83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 MOV83 INS43 UPD42 MOV42 MOV8 INS42 UPD42 MOV42 INS14 INS43 INS42 MOV21 INS41 INS43 INS42 MOV21 INS42 INS43 UPD42 MOV42 UPD27 MOV27 INS25 INS27 INS42 INS42 MOV22 INS42 INS32 MOV32 MOV8 MOV8 INS32 UPD40 MOV40 INS22 INS42 UPD42 INS32 UPD42 INS42 MOV21 INS42 INS52 INS42 INS42 UPD42 MOV43 UPD42 UPD42 INS22 MOV11 MOV22 UPD40 INS52 INS42 DEL42 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL40 DEL27 DEL83 DEL83 DEL42 DEL83 DEL39 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL59 DEL60 DEL40 DEL34 DEL27 DEL8 DEL34 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL25 DEL8 DEL31 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL31 DEL55 DEL40 DEL34 DEL52 DEL42 DEL22 DEL40 DEL27 DEL27 DEL36 DEL40 DEL42 DEL32 DEL14 DEL53 DEL42 DEL43 DEL39 DEL85 DEL5 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL42 DEL32