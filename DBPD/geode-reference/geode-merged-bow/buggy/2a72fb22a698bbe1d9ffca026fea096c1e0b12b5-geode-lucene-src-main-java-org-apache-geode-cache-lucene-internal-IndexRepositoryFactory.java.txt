GEODE-4717: Refactor computeRepository

	* Extracted the code to reindex the region entries to an different method

-import java.io.Serializable;
-import org.apache.geode.distributed.LockServiceDestroyedException;
-import org.apache.geode.internal.cache.ColocationHelper;
-        Set<IndexRepository> affectedRepos = new HashSet<IndexRepository>();
-
-        Iterator keysIterator = dataBucket.keySet().iterator();
-        while (keysIterator.hasNext()) {
-          Object key = keysIterator.next();
-          Object value = getValue(userRegion.getEntry(key));
-          if (value != null) {
-            repo.update(key, value);
-          } else {
-            repo.delete(key);
-          }
-          affectedRepos.add(repo);
-        }
-
-        for (IndexRepository affectedRepo : affectedRepos) {
-          affectedRepo.commit();
-        }
-        // fileRegion ops (get/put) need bucketId as a callbackArg for PartitionResolver
-        fileRegion.put(APACHE_GEODE_INDEX_COMPLETE, APACHE_GEODE_INDEX_COMPLETE, bucketId);
-        success = true;
+        success =
+            reindexUserDataRegion(bucketId, userRegion, fileRegion, dataBucket, success, repo);
+  private boolean reindexUserDataRegion(Integer bucketId, PartitionedRegion userRegion,
+      PartitionedRegion fileRegion, BucketRegion dataBucket, boolean success, IndexRepository repo)
+      throws IOException {
+    Set<IndexRepository> affectedRepos = new HashSet<IndexRepository>();
+
+    Iterator keysIterator = dataBucket.keySet().iterator();
+    while (keysIterator.hasNext()) {
+      Object key = keysIterator.next();
+      Object value = getValue(userRegion.getEntry(key));
+      if (value != null) {
+        repo.update(key, value);
+      } else {
+        repo.delete(key);
+      }
+      affectedRepos.add(repo);
+    }
+
+    for (IndexRepository affectedRepo : affectedRepos) {
+      affectedRepo.commit();
+    }
+    // fileRegion ops (get/put) need bucketId as a callbackArg for PartitionResolver
+    fileRegion.put(APACHE_GEODE_INDEX_COMPLETE, APACHE_GEODE_INDEX_COMPLETE, bucketId);
+    success = true;
+    return success;
+  }
+

INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 MOV8 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS21 INS7 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26