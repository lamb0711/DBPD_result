GEODE-1469: correctly handle the step arguements in http request

-import com.gemstone.gemfire.cache.Cache;
-import com.gemstone.gemfire.distributed.internal.DistributionConfig;
-import com.gemstone.gemfire.internal.logging.LogService;
-import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
-import com.gemstone.gemfire.management.internal.security.ResourceConstants;
-import com.gemstone.gemfire.security.Authenticator;
-import org.apache.logging.log4j.Logger;
-import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+
+import com.gemstone.gemfire.cache.Cache;
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
+import com.gemstone.gemfire.internal.logging.LogService;
+import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
+import com.gemstone.gemfire.management.internal.cli.multistep.CLIMultiStepHelper;
+import com.gemstone.gemfire.management.internal.security.ResourceConstants;
+import com.gemstone.gemfire.management.internal.web.util.UriUtils;
+import com.gemstone.gemfire.security.Authenticator;
+
+import org.apache.logging.log4j.Logger;
+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
-
+        String requestValue = request.getParameter(requestParameter);
+        //GEODE-1469: since we enced stepArgs, we will need to decode it here. See #ClientHttpRequest
+        if(requestParameter.contains(CLIMultiStepHelper.STEP_ARGS)){
+          requestValue = UriUtils.decode(requestValue);
+        }
-          request.getParameter(requestParameter));
+          requestValue);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS40 INS40 INS60 INS25 INS43 INS59 INS32 INS8 INS42 INS42 MOV32 INS42 INS42 INS40 INS21 INS42 INS7 INS42 INS32 INS42 INS42 INS42