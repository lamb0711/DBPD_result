GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-              LocalizedStrings.ParallelAsyncEventQueue_0_CAN_NOT_BE_USED_WITH_REPLICATED_REGION_1
-                  .toLocalizedString(new Object[] {
+              String.format(
+                  "Parallel Async Event Queue %s can not be used with replicated region %s",
+                  new Object[] {
-            LocalizedStrings.ParallelGatewaySender_0_CAN_NOT_BE_USED_WITH_REPLICATED_REGION_1
-                .toLocalizedString(new Object[] {this.sender.getId(), userRegion.getFullPath()}));
+            String.format("Parallel gateway sender %s can not be used with replicated region %s",
+                new Object[] {this.sender.getId(), userRegion.getFullPath()}));
-          logger.fatal(LocalizedMessage.create(
-              LocalizedStrings.SingleWriteSingleReadRegionQueue_UNEXPECTED_EXCEPTION_DURING_INIT_OF_0,
-              this.getClass()), veryUnLikely);
+          logger.fatal("Unexpected Exception during init of " +
+              this.getClass(),
+              veryUnLikely);
-          logger.fatal(LocalizedMessage.create(
-              LocalizedStrings.SingleWriteSingleReadRegionQueue_UNEXPECTED_EXCEPTION_DURING_INIT_OF_0,
-              this.getClass()), alsoUnlikely);
+          logger.fatal("Unexpected Exception during init of " +
+              this.getClass(),
+              alsoUnlikely);
-            LocalizedStrings.ParallelGatewaySenderQueue_NON_PERSISTENT_GATEWAY_SENDER_0_CAN_NOT_BE_ATTACHED_TO_PERSISTENT_REGION_1
-                .toLocalizedString(new Object[] {this.sender.getId(), userPR.getFullPath()}));
+            String.format(
+                "Non persistent gateway sender %s can not be attached to persistent region %s",
+                new Object[] {this.sender.getId(), userPR.getFullPath()}));
-          logger.fatal(LocalizedMessage.create(
-              LocalizedStrings.SingleWriteSingleReadRegionQueue_UNEXPECTED_EXCEPTION_DURING_INIT_OF_0,
-              this.getClass()), veryUnLikely);
+          logger.fatal("Unexpected Exception during init of " +
+              this.getClass(),
+              veryUnLikely);
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.ParallelGatewaySenderQueue_COULD_NOT_TERMINATE_CONFLATION_THREADPOOL,
-              (sender == null ? "all" : sender)));
+          logger.warn("Conflation thread pool did not terminate for the GatewaySender : {}",
+              (sender == null ? "all" : sender));
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.NOT_QUEUING_AS_USERPR_IS_NOT_YET_CONFIGURED, value));
+      logger.warn(
+          "GatewaySender: Not queuing the event {}, as the region for which this event originated is not yet configured in the GatewaySender",
+          value);
-        logger.info(
-            LocalizedMessage.create(LocalizedStrings.HARegionQueue_THE_QUEUEREMOVALTHREAD_IS_DONE));
+        logger.info("The QueueRemovalThread is done.");
-        logger.warn(LocalizedMessage
-            .create(LocalizedStrings.HARegionQueue_QUEUEREMOVALTHREAD_IGNORED_CANCELLATION));
+        logger.warn("QueueRemovalThread ignored cancellation");

INS45 MOV42 INS45 INS45 UPD42 INS42 INS45 UPD42 INS42 INS45 MOV32 UPD42 UPD42 INS45 UPD42 INS42 INS45 INS27 INS27 INS27 INS45 MOV32 INS45 MOV32 INS45 MOV32 DEL40 DEL26 DEL40 DEL26 DEL40 DEL40 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL42 DEL40 DEL32 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32