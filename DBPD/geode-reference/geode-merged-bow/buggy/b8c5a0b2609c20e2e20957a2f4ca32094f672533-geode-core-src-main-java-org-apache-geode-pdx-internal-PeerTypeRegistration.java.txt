GEODE-7083: Adds statistics to PeerTypeRegistration

* Adds stats class usable by other TypeRegistration implementation.
* Adds tests

+  private static final int MAX_TYPE_ID = 0xFFFFFF;
-  private int distributedSystemId;
-  private final int maxTypeId;
-  private volatile DistributedLockService dls;
+  private final TypeRegistrationStatistics statistics;
+
+  private final int typeIdPrefix;
-  private InternalCache cache;
+  private final InternalCache cache;
+
+  private volatile DistributedLockService dls;
-  private Map<PdxType, Integer> typeToId = Collections.synchronizedMap(new HashMap<>());
+  private final Map<PdxType, Integer> typeToId = Collections.synchronizedMap(new HashMap<>());
-  private Map<EnumInfo, EnumId> enumToId = Collections.synchronizedMap(new HashMap<>());
+  private final Map<EnumInfo, EnumId> enumToId = Collections.synchronizedMap(new HashMap<>());
-  public PeerTypeRegistration(InternalCache cache) {
+  public PeerTypeRegistration(final InternalCache cache) {
-    int distributedSystemId =
-        cache.getInternalDistributedSystem().getDistributionManager().getDistributedSystemId();
+    final InternalDistributedSystem internalDistributedSystem =
+        cache.getInternalDistributedSystem();
+    typeIdPrefix = getDistributedSystemId(internalDistributedSystem) << 24;
+    statistics =
+        new TypeRegistrationStatistics(internalDistributedSystem.getStatisticsManager(), this);
+  }
+
+  private static int getDistributedSystemId(
+      final InternalDistributedSystem internalDistributedSystem) {
+    final int distributedSystemId =
+        internalDistributedSystem.getDistributionManager().getDistributedSystemId();
-      distributedSystemId = 0;
+      return 0;
-    this.distributedSystemId = distributedSystemId << 24;
-    maxTypeId = 0xFFFFFF;
+    return distributedSystemId;
-    int newTypeId = id | distributedSystemId;
+    int newTypeId = id | typeIdPrefix;
-      int maxTry = maxTypeId;
+      int maxTry = MAX_TYPE_ID;
-                  + maxTypeId);
+                  + MAX_TYPE_ID);
-        if (id > maxTypeId) {
+        if (id > MAX_TYPE_ID) {
-        newTypeId = id | distributedSystemId;
+        newTypeId = id | typeIdPrefix;
-    int newEnumId = id | distributedSystemId;
+    int newEnumId = id | typeIdPrefix;
-      int maxTry = maxTypeId;
+      int maxTry = MAX_TYPE_ID;
-                  + maxTypeId);
+                  + MAX_TYPE_ID);
-        if (id > maxTypeId) {
+        if (id > MAX_TYPE_ID) {
-        newEnumId = id | distributedSystemId;
+        newEnumId = id | typeIdPrefix;
+    statistics.typeDefined();
+    statistics.typeCreated();
+    statistics.enumCreated();
-          if (tmpDsId == distributedSystemId) {
+          if (tmpDsId == typeIdPrefix) {
-      if (totalPdxTypeIdInDS == maxTypeId) {
+      if (totalPdxTypeIdInDS == MAX_TYPE_ID) {
-                + maxTypeId);
+                + MAX_TYPE_ID);
-          if (tmpDsId == distributedSystemId) {
+          if (tmpDsId == typeIdPrefix) {
-      if (totalEnumIdInDS == maxTypeId) {
+      if (totalEnumIdInDS == MAX_TYPE_ID) {
-                + maxTypeId);
+                + MAX_TYPE_ID);
-    verifyConfiguration();
-    EnumInfo ei = new EnumInfo(v);
-    EnumId existingId = enumToId.get(ei);
-    if (existingId != null) {
-      return existingId.intValue();
-    }
-    lock();
-    try {
-      EnumId id = getExistingIdForEnum(ei);
-      if (id != null) {
-        return id.intValue();
-      }
-
-      id = allocateEnumId(ei);
-
-      updateIdToEnumRegion(id, ei);
-
-      enumToId.put(ei, id);
-
-      return id.intValue();
-    } finally {
-      unlock();
-    }
+    return defineEnum(new EnumInfo(v));
-  public int defineEnum(EnumInfo newInfo) {
+  public int defineEnum(final EnumInfo newInfo) {
+    statistics.enumDefined();
-    EnumId existingId = enumToId.get(newInfo);
+    final EnumId existingId = enumToId.get(newInfo);

MOV23 INS23 INS31 INS31 INS83 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS83 UPD83 MOV83 MOV39 UPD42 MOV42 INS44 INS8 MOV78 INS83 INS39 INS42 MOV44 INS8 UPD42 INS34 INS42 INS42 UPD42 INS83 INS83 INS43 INS42 MOV60 MOV25 MOV41 INS21 INS21 INS21 MOV41 INS83 INS21 INS83 INS43 UPD42 MOV42 INS83 INS39 INS42 INS32 INS32 INS32 INS32 INS83 INS42 INS42 MOV32 INS42 INS42 INS14 UPD42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV14 INS42 INS42 INS32 INS43 INS32 INS52 INS32 UPD42 INS34 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL39 DEL42 DEL42 DEL32 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL42 DEL34 DEL42 DEL43 DEL42 DEL34 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL43 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31