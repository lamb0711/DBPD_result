GEODE-467: fix race in off-heap memory monitor tests

I think this may have been caused by the monitor thread
continuing to run after the unit tests call stopMonitor.
They now call a flavor of the method that joins on the
monitor thread.

+  private Thread memoryListenerThread;
-      Thread memoryListenerThread = new Thread(group, this.offHeapMemoryUsageListener);
-      memoryListenerThread.setName(memoryListenerThread.getName() + " OffHeapMemoryListener");
-      memoryListenerThread.setPriority(Thread.MAX_PRIORITY);
-      memoryListenerThread.setDaemon(true);
-      memoryListenerThread.start();
+      Thread t = new Thread(group, this.offHeapMemoryUsageListener);
+      t.setName(t.getName() + " OffHeapMemoryListener");
+      t.setPriority(Thread.MAX_PRIORITY);
+      t.setDaemon(true);
+      t.start();
+      this.memoryListenerThread = t;
+    stopMonitoring(false);
+  }
+  public void stopMonitoring(boolean waitForThread) {
+      if (waitForThread && this.memoryListenerThread != null) {
+        try {
+          this.memoryListenerThread.join();
+        } catch (InterruptedException e) {
+          Thread.currentThread().interrupt();
+        }
+      }
+      this.memoryListenerThread = null;

INS23 INS31 INS83 INS43 INS59 MOV29 MOV78 INS83 INS39 INS42 INS8 INS44 INS42 INS42 INS21 INS39 INS42 INS32 INS21 INS42 INS9 INS25 INS21 INS7 INS27 INS8 INS7 UPD42 UPD42 UPD42 UPD42 UPD42 INS22 INS42 INS42 INS27 INS54 INS22 INS33 INS52 INS42 INS22 INS33 INS8 INS12 INS52 INS42 UPD42 INS52 INS42 INS21 INS44 INS8 INS32 INS43 INS42 INS21 INS22 INS42 INS42 INS32 INS52 INS42 INS32 INS42 INS42 INS42