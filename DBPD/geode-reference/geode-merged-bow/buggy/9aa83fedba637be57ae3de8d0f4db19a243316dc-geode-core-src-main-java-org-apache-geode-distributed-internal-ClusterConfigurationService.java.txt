GEODE-4830: use POJOs to represent cache configuration allowed by cache-1.0.xsd

* add methods in ClusterConfigurationService to use POJOs to manipulate the cache xml content.

+import java.io.StringReader;
+import java.net.URL;
+import java.util.function.UnaryOperator;
+import javax.xml.XMLConstants;
+import javax.xml.bind.JAXBContext;
+import javax.xml.bind.Marshaller;
+import javax.xml.bind.Unmarshaller;
+import javax.xml.validation.Schema;
+import javax.xml.validation.SchemaFactory;
+import org.apache.geode.annotations.TestingOnly;
+import org.apache.geode.internal.cache.configuration.CacheConfig;
+  @TestingOnly
+  ClusterConfigurationService() {
+    configDirPath = null;
+    configDiskDirPath = null;
+    cache = null;
+  }
+
+  public CacheConfig getCacheConfig(String group, Class... additionalBindClass) {
+    return unMarshall(getConfiguration(group).getCacheXmlContent(), additionalBindClass);
+  }
+
+  public void updateCacheConfig(String group, UnaryOperator<CacheConfig> mutator,
+      Class... additionalBindClass) {
+    lockSharedConfiguration();
+    try {
+      CacheConfig cacheConfig = getCacheConfig(group, additionalBindClass);
+      cacheConfig = mutator.apply(cacheConfig);
+      if (cacheConfig == null) {
+        // mutator returns a null config, indicating no change needs to be persisted
+        return;
+      }
+      Configuration configuration = getConfiguration(group);
+      configuration.setCacheXmlContent(marshall(cacheConfig, additionalBindClass));
+      getConfigurationRegion().put(group, configuration);
+    } finally {
+      unlockSharedConfiguration();
+    }
+  }
+
+  String marshall(CacheConfig config, Class... additionalClass) {
+    List<Class> classes = new ArrayList<>(Arrays.asList(additionalClass));
+    classes.add(0, CacheConfig.class);
+    StringWriter sw = new StringWriter();
+    try {
+      JAXBContext jaxbContext = JAXBContext.newInstance(classes.toArray(new Class[classes.size()]));
+      Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
+      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
+      Schema schema =
+          factory.newSchema(new URL("http://geode.apache.org/schema/cache/cache-1.0.xsd"));
+      jaxbMarshaller.setSchema(schema);
+
+      jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
+      jaxbMarshaller.marshal(config, sw);
+    } catch (Exception e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
+    return sw.toString();
+  }
+
+  CacheConfig unMarshall(String xml, Class... additionalClass) {
+    List<Class> classes = new ArrayList<>(Arrays.asList(additionalClass));
+    classes.add(0, CacheConfig.class);
+    try {
+      JAXBContext jaxbContext = JAXBContext.newInstance(classes.toArray(new Class[classes.size()]));
+      Unmarshaller jaxUnmarshaller = jaxbContext.createUnmarshaller();
+      return (CacheConfig) jaxUnmarshaller.unmarshal(new StringReader(xml));
+    } catch (Exception e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS78 INS42 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS43 INS42 INS44 INS44 INS8 INS43 INS42 INS44 INS44 INS8 INS42 INS21 INS21 INS21 INS42 INS43 INS42 INS43 INS42 INS41 INS43 INS42 INS74 INS42 INS43 INS42 INS21 INS54 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS60 INS54 INS41 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS54 INS7 INS7 INS7 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS32 INS8 INS8 INS42 INS42 INS74 INS59 INS32 INS43 INS59 INS8 INS12 INS32 INS42 INS42 INS74 INS59 INS32 INS8 INS12 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS42 INS60 INS21 INS25 INS60 INS21 INS21 INS21 INS43 INS43 INS42 INS14 INS42 INS42 INS34 INS57 INS42 INS42 INS14 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS44 INS8 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS34 INS57 INS60 INS60 INS41 INS44 INS8 INS32 INS42 INS43 INS59 INS7 INS27 INS8 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS74 INS32 INS43 INS43 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS43 INS42 INS53 INS42 INS42 INS74 INS32 INS43 INS43 INS59 INS43 INS59 INS11 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS9 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS14 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS32 INS42 INS42 INS42 INS3 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS3 INS43 INS42 INS42 INS42 INS42 INS5 INS32 INS42 INS5 INS32 INS42 INS43 INS85 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42