GEODE-599: fix clear with concurrent writes

Cache modification lock was being released before operation distribution to other members.
This provided a small window in which an operation from another thread could update the
region prior to the other members receiving notification (i.e. down leveled)

This closes #232

+import com.gemstone.gemfire.internal.cache.AbstractRegionMap.ARMLockTestHook;
-  
-
+    LocalRegion lr = event.getLocalRegion();
+    AbstractRegionMap arm = ((AbstractRegionMap) lr.getRegionMap());
-      if (!hasSeenEvent(event)) {
-        super.basicUpdateEntryVersion(event);
+      arm.lockForCacheModification(lr, event);
+      try {
+        if (!hasSeenEvent(event)) {
+          super.basicUpdateEntryVersion(event);
+        }
+        return;
+      } finally {
+        if (!getConcurrencyChecksEnabled() || event.hasValidVersionTag()) {
+          distributeUpdateEntryVersion(event);
+        }
-      return;
-      if (!getConcurrencyChecksEnabled() || event.hasValidVersionTag()) {
-        distributeUpdateEntryVersion(event);
-      }
+      arm.releaseCacheModificationLock(lr, event);
-    lockLocallyForClear(getDistributionManager(), getMyId());
+    lockLocallyForClear(getDistributionManager(), getMyId(), regionEvent);
-  public void lockLocallyForClear(DM dm, InternalDistributedMember locker) {
+  public void lockLocallyForClear(DM dm, InternalDistributedMember locker, CacheEvent event) {
+    
+    ARMLockTestHook alth = getRegionMap().getARMLockTestHook();
+    if(alth!=null) alth.beforeLock(this, event);
+    
-      // wait for current operations to 
-      if (!locker.equals(dm.getDistributionManagerId())) {
+      // Only need to flush if NOACK at this point
+      if (this.getAttributes().getScope().isDistributedNoAck()) {
-      }
+      }      
+    
+    if(alth!=null) alth.afterLock(this, null);
+
+    
+    ARMLockTestHook alth = getRegionMap().getARMLockTestHook();
+    if(alth!=null) alth.beforeRelease(this, regionEvent);
+    
+    
+    if(alth!=null) alth.afterRelease(this, regionEvent);
+

INS26 INS40 INS8 INS44 INS60 INS60 INS54 INS43 INS42 INS60 INS25 INS25 INS60 INS25 INS25 INS43 INS59 INS43 INS59 MOV8 INS8 INS42 INS43 INS59 INS27 INS21 INS27 INS21 INS43 INS59 INS27 INS21 INS27 INS21 INS42 INS42 INS32 INS42 INS42 INS36 INS21 INS21 INS42 INS42 INS42 INS32 INS42 INS33 INS32 INS42 INS33 INS32 INS42 INS42 INS32 INS42 INS33 INS32 INS42 INS33 INS32 INS42 INS42 INS11 INS32 INS32 INS32 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS52 INS33 INS32 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS52 UPD42 MOV42 DEL42 DEL32 DEL32 DEL38