GEODE-1912: make ServerStarter and LocatorStarter as regular rules so that it's easier to use them in a RuleChain

-package org.apache.geode.management.internal.security;
-
-import org.junit.runner.Description;
+package org.apache.geode.test.dunit.rules;
-import org.apache.geode.test.dunit.rules.ConnectionConfiguration;
+import org.junit.runner.Description;
- * Class which eases the creation of MBeans for security testing. When combined with
- * {@link ConnectionConfiguration} it allows for the creation of per-test connections with different
- * user/password combinations.
+ * Class which eases the connection to the jmxManager {@link ConnectionConfiguration} it allows for
+ * the creation of per-test connections with different user/password combinations, or no username
+ * and password
-  private int jmxPort = 0;
-  private int httpPort = 0;
+  private int port = 0;
-  public GfshShellConnectionRule(int jmxPort, int httpPort, boolean useHttp) {
-    this.jmxPort = jmxPort;
-    this.httpPort = httpPort;
-    this.useHttp = useHttp;
+
+  public GfshShellConnectionRule(int port) {
+    this.useHttp = false;
+    this.port = port;
-  public GfshShellConnectionRule(int jmxPort) {
-    this.jmxPort = jmxPort;
+  public GfshShellConnectionRule(int port, boolean useHttp) {
+    this.useHttp = useHttp;
+    this.port = port;
-    ConnectionConfiguration config = description.getAnnotation(ConnectionConfiguration.class);
-    if (config == null)
-      return;
-
-    connectCommand.addOption(CliStrings.CONNECT__USERNAME, config.user());
-    connectCommand.addOption(CliStrings.CONNECT__PASSWORD, config.password());
+
+    ConnectionConfiguration config = description.getAnnotation(ConnectionConfiguration.class);
+    if (config != null) {
+      connectCommand.addOption(CliStrings.CONNECT__USERNAME, config.user());
+      connectCommand.addOption(CliStrings.CONNECT__PASSWORD, config.password());
+    }
-      endpoint = "http://localhost:" + httpPort + "/gemfire/v1";
+      endpoint = "http://localhost:" + port + "/gemfire/v1";
-      endpoint = "localhost[" + jmxPort + "]";
+      endpoint = "localhost[" + port + "]";

MOV26 UPD40 MOV44 MOV60 MOV25 UPD66 INS66 UPD66 UPD66 UPD42 UPD42 UPD42 MOV21 UPD27 INS8 INS9 UPD42 UPD42 MOV21 MOV21 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL39 DEL42 DEL44 DEL42 DEL41