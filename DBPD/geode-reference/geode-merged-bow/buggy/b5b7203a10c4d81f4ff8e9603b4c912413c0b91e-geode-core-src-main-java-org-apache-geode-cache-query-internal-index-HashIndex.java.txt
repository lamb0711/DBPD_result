GEODE-1944: Reevaluation of index regionPath catches EntryDestroyedException

  * Force removal of region entry from index if entry destroyed exception is caught
  * Renamed and recategorized tests

+import org.apache.geode.cache.EntryNotFoundException;
-import org.apache.geode.cache.query.internal.AttributeDescriptor;
-import org.apache.geode.cache.query.internal.CompiledComparison;
-import org.apache.geode.internal.offheap.annotations.Released;
-import org.apache.geode.internal.offheap.annotations.Retained;
-import org.apache.geode.pdx.internal.PdxString;
+      } catch (TypeMismatchException tme) {
+        if (tme.getRootCause() instanceof EntryDestroyedException) {
+          //This code relies on current implementation of remove mapping, relying on behavior that will force a
+          //crawl through the index to remove the entry if it exists, even if it is not present at the provided key
+          entriesSet.remove(QueryService.UNDEFINED, target, -1);
+        }
+        else {
+          throw new IMQException(tme);
+        }
-    private ExecutionContext createExecutionContext(RegionEntry target) {
+    private ExecutionContext createExecutionContext(RegionEntry target) throws NameResolutionException, TypeMismatchException {
-      } catch (Exception e) {
-        e.printStackTrace(System.out);
-        throw new Error("Unable to reevaluate, this should not happen");
-
-      if (object instanceof RegionEntry) {
-        RegionEntry regionEntry = (RegionEntry) object;
-        newContext = createExecutionContext(regionEntry);
-        value = getTargetObjectForUpdate(regionEntry);
-      }
-
-      // context we use is the update context, from IMQEvaluator
-      List iterators = newContext.getCurrentIterators();
-      RuntimeIterator itr = (RuntimeIterator) iterators.get(0);
-      itr.setCurrent(value);
-
+        if (object instanceof RegionEntry) {
+          RegionEntry regionEntry = (RegionEntry) object;
+          newContext = createExecutionContext(regionEntry);
+          value = getTargetObjectForUpdate(regionEntry);
+        }
+
+        // context we use is the update context, from IMQEvaluator
+        List iterators = newContext.getCurrentIterators();
+        RuntimeIterator itr = (RuntimeIterator) iterators.get(0);
+        itr.setCurrent(value);
+
+        throw new Error("Could not reevaluate key for hash index", e);

MOV26 UPD40 INS43 INS43 INS42 INS42 INS12 INS8 INS44 INS8 MOV25 MOV60 MOV60 MOV21 INS43 INS42 INS25 MOV53 INS42 INS62 INS8 INS8 INS32 INS43 INS21 INS53 UPD45 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS40 INS42 INS38 INS43 INS42 INS34 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL12 DEL8