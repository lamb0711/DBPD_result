GEODE-6166: Improves put performance (#2970)

* Encode Operation ordinal in Message Part directly
* Don't allocate hashmap until we need it.
* Add putByte to Part and pre-allocate serialized form.
* Use Deque to avoid allocating lots of LinkedList.Node objects

-import org.apache.geode.internal.cache.tier.CachedRegionHelper;
-    Part regionNamePart = null, keyPart = null, valuePart = null, callbackArgPart = null;
-    String regionName = null;
-    Object callbackArg = null, key = null;
-    Part eventPart = null;
-    StringBuilder errMessage = new StringBuilder();
-    boolean isDelta = false;
-    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
-    CacheServerStats stats = serverConnection.getCacheServerStats();
+    final StringBuilder errMessage = new StringBuilder();
+    final CacheServerStats stats = serverConnection.getCacheServerStats();
-    regionNamePart = clientMessage.getPart(idx++);
-    Operation operation;
+
+    final Part regionNamePart = clientMessage.getPart(idx++);
+
+    final Operation operation;
-      operation = (Operation) clientMessage.getPart(idx++).getObject();
-      if (operation == null) { // native clients send a null since the op is java-serialized
-        operation = Operation.UPDATE;
-      }
-    } catch (ClassNotFoundException e) {
+      operation = getOperation(clientMessage.getPart(idx++), Operation.UPDATE);
+    } catch (Exception e) {
-    int flags = clientMessage.getPart(idx++).getInt();
-    boolean requireOldValue = ((flags & 0x01) == 0x01);
-    boolean haveExpectedOldValue = ((flags & 0x02) == 0x02);
-    Object expectedOldValue = null;
+
+    final int flags = clientMessage.getPart(idx++).getInt();
+    final boolean requireOldValue = ((flags & 0x01) == 0x01);
+    final boolean haveExpectedOldValue = ((flags & 0x02) == 0x02);
+    final Object expectedOldValue;
+    } else {
+      expectedOldValue = null;
-    keyPart = clientMessage.getPart(idx++);
+
+    final Part keyPart = clientMessage.getPart(idx++);
+
+    final boolean isDelta;
-      isDelta = ((Boolean) clientMessage.getPart(idx).getObject()).booleanValue();
+      isDelta = ((Boolean) clientMessage.getPart(idx).getObject());
-    valuePart = clientMessage.getPart(idx++);
-    eventPart = clientMessage.getPart(idx++);
+
+    final Part valuePart = clientMessage.getPart(idx++);
+    final Part eventPart = clientMessage.getPart(idx++);
+
+    Object callbackArg = null;
-      callbackArgPart = clientMessage.getPart(idx++);
+      final Part callbackArgPart = clientMessage.getPart(idx++);
-    regionName = regionNamePart.getString();
+    final Object key;
+    final String regionName = regionNamePart.getString();
+
-        String putMsg = " The input key for the put request is null";
+        final String putMsg = " The input key for the put request is null";
-        String putMsg = " The input region name for the put request is null";
+        final String putMsg = " The input region name for the put request is null";
-    LocalRegion region = (LocalRegion) serverConnection.getCache().getRegion(regionName);
+    final LocalRegion region = (LocalRegion) serverConnection.getCache().getRegion(regionName);
-      String reason = " was not found during put request";
+      final String reason = " was not found during put request";
-      String putMsg = " Attempted to put a null value for existing key " + key;
+      final String putMsg = " Attempted to put a null value for existing key " + key;
-    ByteBuffer eventIdPartsBuffer = ByteBuffer.wrap(eventPart.getSerializedForm());
-    long threadId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
-    long sequenceId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
+    final ByteBuffer eventIdPartsBuffer = ByteBuffer.wrap(eventPart.getSerializedForm());
+    final long threadId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
+    final long sequenceId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
-    EventIDHolder clientEvent = new EventIDHolder(
+    final EventIDHolder clientEvent = new EventIDHolder(

MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 MOV60 INS60 INS60 INS83 INS83 INS83 INS83 INS8 INS83 INS83 INS83 INS83 MOV43 INS8 INS83 INS83 INS83 UPD43 INS83 INS43 INS83 INS43 INS59 INS83 MOV43 INS59 INS83 INS83 INS83 INS83 INS83 MOV32 MOV21 UPD42 INS21 UPD42 MOV32 UPD42 UPD42 MOV32 INS42 UPD42 MOV32 INS60 INS42 INS42 INS42 MOV32 UPD43 INS7 INS83 INS43 INS59 INS83 INS83 UPD42 INS32 UPD42 INS42 INS33 MOV36 INS42 INS42 MOV32 INS42 MOV32 INS40 INS83 INS83 DEL40 DEL26 DEL33 DEL42 DEL33 DEL59 DEL42 DEL33 DEL59 DEL42 DEL33 DEL59 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL8 DEL33 DEL33 DEL9 DEL42 DEL7 DEL21 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL42 DEL33 DEL59 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21