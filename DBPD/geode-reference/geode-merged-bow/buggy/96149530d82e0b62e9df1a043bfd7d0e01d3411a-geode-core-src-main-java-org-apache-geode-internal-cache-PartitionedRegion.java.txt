GEODE-3647: Fix race condition

  Partitioned region attributes mutation can fail to be applied to
  buckets created concurrently. Preventing bucket creation during the
  mutation of attributes solves this issue.

+import org.apache.geode.cache.partition.PartitionRegionHelper;
-    // Set to Bucket regions as well
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setEntryTimeToLive(timeToLive);
-      }
-    }
+
+    /*
+     * All buckets must be created to make this change, otherwise it is possible for
+     * updatePRConfig(...) to make changes that cause bucket creation to live lock
+     */
+    PartitionRegionHelper.assignBucketsToPartitions(this);
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setEntryTimeToLive(timeToLive));
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setCustomEntryTimeToLive(custom);
-      }
-    }
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setCustomEntryTimeToLive(custom));
+    /*
+     * All buckets must be created to make this change, otherwise it is possible for
+     * updatePRConfig(...) to make changes that cause bucket creation to live lock
+     */
+    PartitionRegionHelper.assignBucketsToPartitions(this);
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setEntryIdleTimeout(idleTimeout);
-      }
-    }
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setEntryIdleTimeout(idleTimeout));
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setCustomEntryIdleTimeout(custom);
-      }
-    }
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setCustomEntryIdleTimeout(custom));

INS26 INS40 INS8 INS8 INS8 INS8 MOV60 INS21 INS21 MOV21 MOV41 MOV60 INS21 MOV41 MOV60 INS21 INS21 MOV21 MOV41 MOV60 INS21 MOV41 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 MOV52 UPD42 MOV42 UPD42 MOV42 INS86 UPD42 MOV42 UPD42 MOV42 INS86 INS42 INS42 MOV52 UPD42 MOV42 UPD42 MOV42 INS86 UPD42 MOV42 UPD42 MOV42 INS86 INS59 INS59 INS32 INS59 INS59 INS32 INS59 INS59 INS32 INS59 INS59 INS32 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 MOV42 UPD42 UPD42 UPD42 UPD42 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL32 DEL32 DEL40 DEL43 DEL40 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL52 DEL32 DEL32 DEL40 DEL43 DEL40 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL32 DEL32 DEL40 DEL43 DEL40 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL52 DEL32 DEL32 DEL40 DEL43 DEL40 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8