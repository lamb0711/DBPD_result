GEODE-77: improve restart locator error handling on corrupted state file

+import com.gemstone.gemfire.InternalGemFireException;
-import com.gemstone.gemfire.distributed.internal.tcpserver.TcpHandler;
-import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
+import static com.gemstone.gemfire.internal.i18n.LocalizedStrings.LOCATOR_UNABLE_TO_RECOVER_VIEW;
+
-  private static final int LOCATOR_FILE_STAMP = 0x7b8cf741;
+  /* package */ static final int LOCATOR_FILE_STAMP = 0x7b8cf741;
-  public void init(TcpServer server) {
+  public void init(TcpServer server) throws InternalGemFireException {
-  public void recover() {
+  public void recover() throws InternalGemFireException {
-    } catch (IOException e) {
-      // ignore
-    } catch (ClassNotFoundException e) {
-      // hmm - odd response?
-    }
+    } catch (IOException | ClassNotFoundException ignore) {}
-  
-  private boolean recoverFromFile(File file) {
+
+  /* package */ boolean recoverFromFile(File file) throws InternalGemFireException {
+
-    FileInputStream fis = null;
-    try {
-      fis = new FileInputStream(file);
-      ObjectInput ois = new ObjectInputStream(fis);
-      
-      int magic = ois.readInt();
-      if (magic != LOCATOR_FILE_STAMP) {
+    try (ObjectInput ois = new ObjectInputStream(new FileInputStream(file))) {
+      if (ois.readInt() != LOCATOR_FILE_STAMP) {
-      
+
-      if (geodeVersion != null  &&  version != Version.CURRENT_ORDINAL) {
+      if (geodeVersion != null  &&  version == Version.CURRENT_ORDINAL) {
-        ois = new VersionedObjectInput(ois, geodeVersion);
-      } else {
-        return false;
+        ObjectInput ois2 = new VersionedObjectInput(ois, geodeVersion);
+        this.view = DataSerializer.readObject(ois2);
+        logger.info("Initial membership is " + view);
+        return true;
-
-      this.view = DataSerializer.readObject(ois);
-
-      logger.info("Initial membership is " + view);
-      return true;
-    }
-    catch (Exception e) {
-      e.printStackTrace();
-      logger.warn(LocalizedStrings.Locator_unable_to_recover_view_0
-          .toLocalizedString(file), e);
-      try {
-        fis.close();
-      } catch (IOException ex) {
-        // ignore
-      }
+      return false;
+    } catch (Exception e) {
+      String msg = LOCATOR_UNABLE_TO_RECOVER_VIEW.toLocalizedString(file.toString());
+      logger.warn(msg, e);
+      throw new InternalGemFireException(msg, e);
-    finally {
-      try { fis.close(); } catch (IOException e) { }
-    }
-    return false;

MOV26 MOV26 UPD40 UPD40 INS43 INS43 INS43 INS42 INS42 INS42 INS58 MOV43 INS59 MOV41 INS84 UPD42 INS42 INS14 INS8 INS60 MOV21 INS53 MOV43 MOV43 MOV43 MOV14 MOV32 UPD27 MOV21 INS60 MOV21 MOV21 MOV41 INS43 INS59 INS14 INS43 INS59 UPD9 INS42 INS42 INS32 UPD42 INS42 INS42 UPD42 INS43 INS42 INS42 INS42 INS42 MOV14 MOV22 INS32 UPD42 MOV42 MOV42 INS32 UPD42 MOV42 INS42 INS42 INS42 MOV42 UPD42 MOV42 DEL83 DEL42 DEL44 DEL8 DEL12 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL42 DEL14 DEL59 DEL60 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL8 DEL8 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL40 DEL32 DEL32 DEL21 DEL8 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8