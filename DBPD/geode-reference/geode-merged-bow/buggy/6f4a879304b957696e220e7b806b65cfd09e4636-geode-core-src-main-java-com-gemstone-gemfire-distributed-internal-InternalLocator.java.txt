GEODE-1243: Locator can start on ephemeral port

-import java.util.concurrent.ExecutionException;
-import com.gemstone.gemfire.InternalGemFireException;
-  
-  
+
-    this.port = port;
-    
-
-      this.locatorListener.setPort(this.port);
+      // We defer setting the port until the handler is init'd - that way we'll have an actual port in the
+      // case where we're starting with port = 0.
-    this.handler = new PrimaryHandler(this.port, this, locatorListener);
+    this.handler = new PrimaryHandler(this, locatorListener);
-    server = new TcpServer(this.port, this.bindAddress, null, this.config,
+    server = new TcpServer(port, this.bindAddress, null, this.config,
-        sb.append('[').append(port).append(']');
+        sb.append('[').append(getPort()).append(']');
-      this.locatorDiscoverer.discover(this.port, config, locatorListener);
+      this.locatorDiscoverer.discover(getPort(), config, locatorListener);
-    ServerLocator sl = new ServerLocator(this.port, 
+    ServerLocator sl = new ServerLocator(getPort(),
-        stopLocator(this.port, this.bindAddress);
+        stopLocator(getPort(), this.bindAddress);
-  
+
+  /**
+   * Return the port on which the locator is actually listening. If called before the locator has actually
+   * started, this method will return null.
+   *
+   * @return the port the locator is listening on or null if it has not yet been started
+   */
+  public Integer getPort() {
+    if (server != null) {
+      return server.getPort();
+    }
+    return null;
+  }
-    InternalLocator interalLocator;
+    private InternalLocator internalLocator;
-    public PrimaryHandler(int port, InternalLocator locator,
+    public PrimaryHandler(InternalLocator locator,
-      interalLocator = locator;
+      internalLocator = locator;
+      if (this.locatorListener != null) {
+        // This is deferred until now as the initial requested port could have been 0
+        this.locatorListener.setPort(internalLocator.getPort());
+      }
-        this.interalLocator.handleShutdown();
+        this.internalLocator.handleShutdown();

INS31 INS29 INS83 INS43 INS42 INS8 INS65 INS65 INS42 INS25 INS41 INS83 INS66 INS66 INS66 INS27 INS8 INS33 UPD42 INS25 INS42 INS33 INS41 INS27 INS8 INS52 INS42 INS32 INS32 UPD42 MOV22 INS33 INS21 INS32 INS42 INS42 INS42 INS32 INS42 INS22 INS42 INS32 INS32 INS32 INS52 INS42 INS42 INS42 UPD42 UPD42 MOV42 INS42 DEL40 DEL26 DEL40 DEL26 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL52 DEL42 DEL22 DEL32 DEL21 DEL52 DEL42 DEL22 DEL52 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL39 DEL42 DEL44