GEODE-6186: Reduced the number of EntryNotFoundExceptions thrown during wan conflation



-  private void removeIndex(Long qkey) {
+  protected boolean removeIndex(Long qkey) {
+    boolean entryFound;
-    if (o instanceof Conflatable) {
-      Conflatable object = (Conflatable) o;
-      if (object.shouldBeConflated()) {
-        // Otherwise, remove the index from the indexes map.
-        String rName = object.getRegionToConflate();
-        Object key = object.getKeyToConflate();
-        Map latestIndexesForRegion = (Map) this.indexes.get(rName);
-        if (latestIndexesForRegion != null) {
-          // Remove the index if appropriate. Verify the qKey is actually the one being referenced
-          // in the index. If it isn't, then another event has been received for the real key. In
-          // that case, don't remove the index since it has already been overwritten.
-          if (latestIndexesForRegion.get(key) == qkey) {
-            Long index = (Long) latestIndexesForRegion.remove(key);
-            if (index != null) {
-              this.getPartitionedRegion().getParallelGatewaySender().getStatistics()
-                  .decConflationIndexesMapSize();
-              if (logger.isDebugEnabled()) {
-                logger.debug("{}: Removed index {} for {}", this, index, object);
+    if (o == null) {
+      entryFound = false;
+    } else {
+      entryFound = true;
+      if (o instanceof Conflatable) {
+        Conflatable object = (Conflatable) o;
+        if (object.shouldBeConflated()) {
+          // Otherwise, remove the index from the indexes map.
+          String rName = object.getRegionToConflate();
+          Object key = object.getKeyToConflate();
+          Map latestIndexesForRegion = (Map) this.indexes.get(rName);
+          if (latestIndexesForRegion != null) {
+            // Remove the index if appropriate. Verify the qKey is actually the one being referenced
+            // in the index. If it isn't, then another event has been received for the real key. In
+            // that case, don't remove the index since it has already been overwritten.
+            if (latestIndexesForRegion.get(key) == qkey) {
+              Long index = (Long) latestIndexesForRegion.remove(key);
+              if (index != null) {
+                this.getPartitionedRegion().getParallelGatewaySender().getStatistics()
+                    .decConflationIndexesMapSize();
+                if (logger.isDebugEnabled()) {
+                  logger.debug("{}: Removed index {} for {}", this, index, object);
+                }
+    return entryFound;
+    boolean indexEntryFound = true;
-      removeIndex((Long) event.getKey());
+      indexEntryFound = containsKey(event.getKey()) && removeIndex((Long) event.getKey());
-      super.basicDestroy(event, cacheWrite, expectedOldValue);
+      if (indexEntryFound) {
+        super.basicDestroy(event, cacheWrite, expectedOldValue);
+      } else {
+        throw new EntryNotFoundException(event.getKey().toString());
+      }

UPD83 UPD39 INS8 INS60 MOV60 INS25 INS41 INS60 INS39 INS59 INS27 INS8 MOV8 INS42 INS39 INS59 INS8 INS42 INS42 INS33 INS21 INS21 INS42 INS9 INS25 INS7 INS7 INS7 INS42 MOV8 INS8 INS42 INS9 INS42 INS9 INS42 INS27 INS53 INS32 MOV32 INS14 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42