GEODE-2367: Lucene indexes do not handle ha scenarios

* Added afterSecondary callback to partition listener to allow cleaning up
  of the index repo when the bucket losses primary
* Added lock prior to creating the bucket indexes to prevent multiple index
  writers from being available at a time
* Changed single point of lucene index creation, no longer creating on the fly

+import org.apache.geode.distributed.DistributedLockService;
+import org.apache.geode.internal.cache.DistributedRegion;
+import org.apache.geode.distributed.LockNotHeldException;
+  private DistributedLockService lockService;
+  private String lockName;
-  public IndexRepositoryImpl(Region<?, ?> region, IndexWriter writer, LuceneSerializer serializer,
+  // For test purposes
+  IndexRepositoryImpl(Region<?, ?> region, IndexWriter writer, LuceneSerializer serializer,
+    this(region, writer, serializer, stats, userRegion,
+        ((DistributedRegion) region).getLockService(), "NoLockFile");
+  }
+
+  public IndexRepositoryImpl(Region<?, ?> region, IndexWriter writer, LuceneSerializer serializer,
+      LuceneIndexStats stats, Region<?, ?> userRegion, DistributedLockService lockService,
+      String lockName) throws IOException {
+    this.lockService = lockService;
+    this.lockName = lockName;
-    return userRegion.isDestroyed();
+    return userRegion.isDestroyed() || !writer.isOpen();
-    stats.removeDocumentsSupplier(documentCountSupplier);
-      writer.close();
-    } catch (IOException e) {
-      logger.warn("Unable to clean up index repository", e);
+      stats.removeDocumentsSupplier(documentCountSupplier);
+      try {
+        writer.close();
+      } catch (IOException e) {
+        logger.warn("Unable to clean up index repository", e);
+      }
+    } finally {
+      try {
+        if (lockService != null) {
+          lockService.unlock(lockName);
+        }
+      } catch (LockNotHeldException e) {
+        logger.debug("Tried to unlock file region lock(" + lockName + ") that we did not hold", e);
+      }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS44 INS8 INS42 INS42 INS42 INS42 INS74 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS17 INS43 INS42 INS43 INS42 INS21 INS21 INS54 INS43 INS76 INS76 INS42 INS42 INS42 INS43 INS76 INS76 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS42 INS7 INS7 INS27 MOV8 INS8 INS42 INS42 INS36 INS42 INS22 INS42 INS22 INS42 MOV32 INS38 INS54 INS11 INS52 INS42 INS52 INS42 INS32 INS8 INS12 INS43 INS42 INS42 INS42 INS25 INS44 INS8 INS42 INS27 INS8 INS43 INS42 INS21 INS42 INS33 INS21 INS42 INS32 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS45