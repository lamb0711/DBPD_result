GEODE-77 adding additional test coverage

Test coverage is now > 71% for all membership services.
This also fixes a problem in GMSJoinLeave.join where a member that
was shut down & restarted with a start-locator setting formed a
split-brain.  Now we send a collection of previously attempted
coordinators with FindCoordinator requests, and a member receiving
a join request will check to see if the new member ought to assume
the role of coordinator.  See LocatorDUnitTest.testCollocatedLocatorWithSecurity.

+import java.util.Collection;
+import java.util.Collections;
+
+import com.gemstone.gemfire.distributed.internal.LocatorStats;
+  private final LocatorStats stats;
+   * @param stats the locator statistics object
-                      boolean networkPartitionDetectionEnabled) {
+                      boolean networkPartitionDetectionEnabled, LocatorStats stats) {
+    this.stats = stats;
-      this.view = services.getJoinLeave().getView();
+      NetView newView = services.getJoinLeave().getView();
+      if (newView != null) {
+        this.view = newView;
+      }
-    if (logger.isDebugEnabled()) {
-      logger.debug("Peer locator processing " + request);
+    if (logger.isInfoEnabled()) {
+      logger.info("Peer locator processing {}", request);
-          coord = view.getCoordinator();
+          coord = view.getCoordinator(findRequest.getRejectedCoordinators());
+          logger.info("Peer locator: coordinator from view is {}", coord);
+          Collection<InternalDistributedMember> rejections = findRequest.getRejectedCoordinators();
+          if (rejections == null) {
+            rejections = Collections.emptyList();
+          }
-                if (mbr.getNetMember().preferredForCoordinator() || !mbr.getNetMember().splitBrainEnabled()) {
+                if (!rejections.contains(mbr)
+                    && (mbr.getNetMember().preferredForCoordinator() || !mbr.getNetMember().splitBrainEnabled())) {
+            logger.info("Peer locator: coordinator from registrations is {}", coord);
-    // place holder for statistics
+    stats.endLocatorRequest(startTime);
-    // place holder for statistics
+    stats.endLocatorResponse(startTime);
+    // nothing to do for GMSLocator
-    if (locators.isEmpty()) {
-      return false;
-    }
-
-    } catch (IOException | ClassNotFoundException ignore) {}
+    } catch (IOException | ClassNotFoundException ignore) {
+      logger.info("Peer locator could not recover membership view from {}: {}", other, ignore.getMessage());
+    }
-      int version = ois.readInt();
-      Version geodeVersion = Version.fromOrdinalNoThrow((short)version, false);
-      if (geodeVersion != null  &&  version == Version.CURRENT_ORDINAL) {
+      ObjectInput ois2 = ois;
+      int version = ois2.readInt();
+      if (version != Version.CURRENT_ORDINAL) {
+        Version geodeVersion = Version.fromOrdinalNoThrow((short)version, false);
-        ObjectInput ois2 = new VersionedObjectInput(ois, geodeVersion);
-        this.view = DataSerializer.readObject(ois2);
-        logger.info("Initial membership is " + view);
-        return true;
+        ois2 = new VersionedObjectInput(ois2, geodeVersion);
-      return false;
+    
+      this.view = DataSerializer.readObject(ois2);
+      logger.info("Peer locator initial membership is " + view);
+      return true;
+

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS23 INS83 INS83 INS43 INS59 INS44 UPD42 UPD42 INS42 INS42 INS65 INS43 INS42 INS21 INS21 INS21 INS42 INS66 INS42 INS7 INS32 INS32 INS22 INS42 INS60 INS25 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS25 MOV21 MOV21 MOV41 INS52 INS42 INS43 INS59 INS27 INS8 INS21 MOV43 INS59 INS27 INS8 INS42 INS42 MOV32 INS42 INS33 MOV21 UPD42 INS45 INS42 INS32 INS42 INS42 MOV42 MOV40 MOV60 MOV21 INS21 INS42 INS42 INS45 INS42 INS32 UPD42 INS7 UPD45 INS42 INS42 INS42 INS42 MOV14 INS21 INS60 INS25 UPD42 INS32 INS74 INS59 INS27 INS8 INS42 INS42 INS45 INS42 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS32 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS38 INS36 INS32 MOV27 INS42 INS42 INS42 DEL45 DEL42 DEL27 DEL42 DEL42 DEL32 DEL9 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL27 DEL27 DEL42 DEL59 DEL60 DEL8 DEL25 DEL9 DEL41