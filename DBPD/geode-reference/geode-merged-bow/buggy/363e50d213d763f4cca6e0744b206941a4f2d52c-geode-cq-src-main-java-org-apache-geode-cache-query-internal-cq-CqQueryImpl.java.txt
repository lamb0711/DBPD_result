GEODE-2632: refactor code to use InternalCache instead of GemFireCacheImpl

* minor cleanup also

-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.query.CqExistsException;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
-  protected static final Object TOKEN = new Object();
+  static final Object TOKEN = new Object();
-  protected LocalRegion cqBaseRegion;
+  LocalRegion cqBaseRegion;
-  protected InternalLogWriter securityLogWriter;
+  InternalLogWriter securityLogWriter;
-  // Stats counters
-  protected CqStatisticsImpl cqStats;
+  /** Stats counters */
+  private CqStatisticsImpl cqStats;
-  protected ExecutionContext queryExecutionContext = null;
+  private ExecutionContext queryExecutionContext = null;
+  @Override
+  @Override
-  public void updateCqCreateStats() {
+  void updateCqCreateStats() {
-    this.cqService.stats.incCqsStopped();
-    this.cqService.stats.incCqsCreated();
-    this.cqService.stats.incCqsOnClient();
+    this.cqService.stats().incCqsStopped();
+    this.cqService.stats().incCqsCreated();
+    this.cqService.stats().incCqsOnClient();
-  public void validateCq() {
-    Cache cache = cqService.getCache();
-    DefaultQuery locQuery =
-        (DefaultQuery) ((GemFireCacheImpl) cache).getLocalQueryService().newQuery(this.queryString);
+  void validateCq() {
+    InternalCache cache = cqService.getInternalCache();
+    DefaultQuery locQuery = (DefaultQuery) cache.getLocalQueryService().newQuery(this.queryString);
-   * 
-   * @throws CqException
-  protected void removeFromCqMap() throws CqException {
+  void removeFromCqMap() throws CqException {
+  @Override
+  @Override
-
-  /**
-   * @see org.apache.geode.cache.query.CqQuery#getStatistics()
-   */
+  @Override
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.cache.query.internal.InternalCqQuery2#getCqBaseRegion()
-   */
-  public String getBaseRegionName() {
+  String getBaseRegionName() {
+  @Override
+  @Override
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.cache.query.internal.InternalCqQuery2#setCqState(int)
-   */
-        if (this.isRunning()) {
-          // throw new
-          // IllegalStateException(LocalizedStrings.CqQueryImpl_CQ_IS_NOT_IN_RUNNING_STATE_STOP_CQ_DOES_NOT_APPLY_CQNAME_0
-          // .toLocalizedString(this.cqName));
-        }
-        this.cqService.stats.incCqsActive();
-        this.cqService.stats.decCqsStopped();
+        this.cqService.stats().incCqsActive();
+        this.cqService.stats().decCqsStopped();
-        this.cqService.stats.incCqsStopped();
-        this.cqService.stats.decCqsActive();
+        this.cqService.stats().incCqsStopped();
+        this.cqService.stats().decCqsActive();
-  public void updateStats(CqEvent cqEvent) {
+  void updateStats(CqEvent cqEvent) {
+  @Override
-   * Return true if the CQ is in Sstopped state
+   * Return true if the CQ is in stopped state
+  @Override
+  @Override
+  @Override
-  public ExecutionContext getQueryExecutionContext() {
+  ExecutionContext getQueryExecutionContext() {
-  public void setQueryExecutionContext(ExecutionContext queryExecutionContext) {
+  private void setQueryExecutionContext(ExecutionContext queryExecutionContext) {
-    public void pauseUntilReady();
+    void pauseUntilReady();
-    public void ready();
+    void ready();
-    public int numQueuedEvents();
+    int numQueuedEvents();
-    public void setEventCount(int count);
+    void setEventCount(int count);

UPD40 INS29 UPD83 UPD83 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 INS78 UPD83 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS66 INS32 INS32 INS32 UPD43 UPD66 MOV32 INS42 MOV32 INS42 MOV32 INS42 UPD42 MOV22 INS42 MOV22 INS42 MOV22 INS42 UPD42 INS21 INS42 INS32 INS32 MOV21 INS32 UPD42 MOV42 MOV32 INS42 INS32 INS32 MOV22 INS42 MOV22 INS42 MOV32 INS42 MOV32 INS42 MOV22 INS42 MOV22 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL83 DEL42 DEL22 DEL42 DEL42 DEL22 DEL42 DEL42 DEL22 DEL42 DEL83 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL65 DEL83 DEL40 DEL42 DEL68 DEL65 DEL29 DEL83 DEL52 DEL32 DEL8 DEL25 DEL42 DEL22 DEL42 DEL42 DEL22 DEL42 DEL42 DEL22 DEL42 DEL42 DEL22 DEL42 DEL32 DEL21 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83