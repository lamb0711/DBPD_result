GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-import org.apache.geode.internal.security.IntegratedSecurityService;
-import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.management.internal.cli.functions.DataCommandFunction.SelectExecStep;
-  final int resultItemCount = 9;
+  private final int resultItemCount = 9;
-  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+  @Override
+  public Gfsh getGfsh() {
+    return Gfsh.getCurrentInstance();
+  }
+
+  @Override
+  public InternalCache getCache() {
+    return (InternalCache) CacheFactory.getAnyInstance();
+  }
-    public ExecuteRebalanceWithTimeout(String[] includedRegions, String[] excludedRegions,
+    ExecuteRebalanceWithTimeout(String[] includedRegions, String[] excludedRegions,
-    public Result executeRebalanceWithTimeout(String[] includeRegions, String[] excludeRegions,
+    Result executeRebalanceWithTimeout(String[] includeRegions, String[] excludeRegions,
-  public boolean checkMemberPresence(DistributedMember dsMember, InternalCache cache) {
+  private boolean checkMemberPresence(DistributedMember dsMember, InternalCache cache) {
-  public String listOfAllMembers(ArrayList<DistributedMember> dsMemberList) {
+  private String listOfAllMembers(ArrayList<DistributedMember> dsMemberList) {
-  protected CompositeResultData toCompositeResultData(CompositeResultData rebalanceResulteData,
+  private CompositeResultData toCompositeResultData(CompositeResultData rebalanceResulteData,
-  public DistributedMember getAssociatedMembers(String region, final InternalCache cache) {
+  private DistributedMember getAssociatedMembers(String region, final InternalCache cache) {
-    this.securityService.authorizeRegionRead(regionName);
+    getCache().getSecurityService().authorizeRegionRead(regionName);
-    this.securityService.authorizeRegionWrite(regionName);
+    getCache().getSecurityService().authorizeRegionWrite(regionName);
-    this.securityService.authorizeRegionWrite(regionPath);
+    cache.getSecurityService().authorizeRegionWrite(regionPath);
-    this.securityService.authorizeRegionRead(regionPath, key);
+    cache.getSecurityService().authorizeRegionRead(regionPath, key);
-        Subject subject = this.securityService.getSubject();
+        Subject subject = cache.getSecurityService().getSubject();
-      dataResult = getfn.get(null, key, keyClass, valueClass, regionPath, loadOnCacheMiss);
+      dataResult = getfn.get(null, key, keyClass, valueClass, regionPath, loadOnCacheMiss,
+          cache.getSecurityService());
-    this.securityService.authorizeRegionRead(regionPath, key);
+    getCache().getSecurityService().authorizeRegionRead(regionPath, key);
-      this.securityService.authorizeRegionWrite(regionPath);
+      cache.getSecurityService().authorizeRegionWrite(regionPath);
-      this.securityService.authorizeRegionWrite(regionPath, key);
+      cache.getSecurityService().authorizeRegionWrite(regionPath, key);
-    CLIStep exec = new DataCommandFunction.SelectExecStep(arguments);
+    CLIStep exec = new SelectExecStep(arguments);
-    public ArrayList<DistributedMember> dsMemberList;
+    ArrayList<DistributedMember> dsMemberList;
-    public MemberPRInfo() {
+    MemberPRInfo() {
+    @Override

MOV26 UPD40 INS31 INS31 INS83 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 UPD83 UPD83 UPD83 UPD83 MOV21 MOV21 INS42 INS42 INS41 INS42 UPD42 MOV42 INS41 INS78 INS32 INS11 INS42 INS42 INS42 INS43 INS32 INS32 INS32 INS32 INS32 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 UPD43 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL40 DEL26 DEL83 DEL43 DEL42 DEL32 DEL59 DEL23 DEL83 DEL83 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL40 DEL83 DEL83