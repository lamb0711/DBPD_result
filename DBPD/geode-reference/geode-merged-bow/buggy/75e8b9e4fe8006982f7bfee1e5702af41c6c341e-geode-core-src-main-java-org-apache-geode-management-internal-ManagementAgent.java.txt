GEODE-5230: Pulse does not work when SSL is enabled for JMX (#1976)


+import java.util.Properties;
-                securityService);
+                securityService, null);
-                gemfireWar, securityService);
+                gemfireWar, securityService, null);
-            this.httpServer =
-                JettyHelper.addWebApplication(this.httpServer, "/pulse", pulseWar, securityService);
+            this.httpServer = JettyHelper.addWebApplication(this.httpServer, "/pulse", pulseWar,
+                securityService, createSslProps());
-                  gemfireAPIWar, securityService);
+                  gemfireAPIWar, securityService, null);
-                  gemfireAPIWar, securityService);
+                  gemfireAPIWar, securityService, null);
+  private Properties createSslProps() {
+    Properties sslProps = new Properties();
+    if (StringUtils.isNotEmpty(config.getSSLKeyStore())) {
+      sslProps.put(SSLConfigurationFactory.JAVAX_KEYSTORE, config.getSSLKeyStore());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLKeyStorePassword())) {
+      sslProps.put(SSLConfigurationFactory.JAVAX_KEYSTORE_PASSWORD,
+          config.getSSLKeyStorePassword());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLKeyStoreType())) {
+      sslProps.put(SSLConfigurationFactory.JAVAX_KEYSTORE_TYPE, config.getSSLKeyStoreType());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLTrustStore())) {
+      sslProps.put(SSLConfigurationFactory.JAVAX_TRUSTSTORE, config.getSSLTrustStore());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLTrustStorePassword())) {
+      sslProps.put(SSLConfigurationFactory.JAVAX_TRUSTSTORE_PASSWORD,
+          config.getSSLTrustStorePassword());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLTrustStoreType())) {
+      sslProps.put(SSLConfigurationFactory.JAVAX_TRUSTSTORE_TYPE, config.getSSLTrustStoreType());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLCiphers())
+        && !config.getSSLCiphers().equalsIgnoreCase("any")) {
+      sslProps.put("javax.rmi.ssl.client.enabledCipherSuites", config.getSSLCiphers());
+    }
+    if (StringUtils.isNotEmpty(config.getSSLProtocols())
+        && !config.getSSLProtocols().equalsIgnoreCase("any")) {
+      sslProps.put("javax.rmi.ssl.client.enabledProtocols", config.getSSLProtocols());
+    }
+
+    return sslProps;
+  }
+

INS26 INS40 INS31 INS83 INS43 INS42 INS8 INS42 INS60 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS41 INS43 INS59 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS27 INS8 INS27 INS8 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS32 INS38 INS21 INS32 INS38 INS21 INS43 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS33 INS32 INS42 INS33 INS33