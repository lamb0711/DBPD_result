Refactoring LuceneFunction, LuceneQueryProvider, and LuceneQueryFactory

LuceneFunction had a static RepositoryManager, I changed the code to get
look up the RepositoryManager from the LuceneService.

As part of that work, I noticed StringQueryProvider really needed access
to the index to lookup the field names, analyzer, etc. So I changed the
getQuery method to take an index, and removed the unneeded string
parameters.

Finally, I removed some of the mocking from
LuceneFunctionReadPathDUnitTest, which exposed some other issues:

* I switched RepositoryManager.getRepositories back to using a
RegionFunctionContext, because apparently context.getDataSet is *not*
the local data set.

* I canonicalized the regionPaths in LuceneService

+import com.gemstone.gemfire.cache.lucene.LuceneService;
+import com.gemstone.gemfire.cache.lucene.LuceneServiceProvider;
+import com.gemstone.gemfire.cache.lucene.internal.InternalLuceneIndex;
-  private static RepositoryManager repoManager;
-
+    
+    LuceneService service = LuceneServiceProvider.get(region.getCache());
+    InternalLuceneIndex index = (InternalLuceneIndex) service.getIndex(searchContext.getIndexName(), region.getFullPath());
+    RepositoryManager repoManager = index.getRepositoryManager();
-      query = queryProvider.getQuery();
+      query = queryProvider.getQuery(index);
+    int resultLimit = searchContext.getLimit();
-      int resultLimit = (searchContext == null ? LuceneQueryFactory.DEFAULT_LIMIT : searchContext.getLimit());
-      Collection<IndexRepository> repositories = getIndexRepositories(ctx, region);
+      Collection<IndexRepository> repositories = repoManager.getRepositories(ctx);
-        repo.query(query, 0, collector);
+        repo.query(query, resultLimit, collector);
-  private Collection<IndexRepository> getIndexRepositories(RegionFunctionContext ctx, Region region) throws BucketNotFoundException {
-    synchronized (LuceneFunction.class) {
-      return repoManager.getRepositories(region);
-    }
-  }
-
-  static synchronized void setRepositoryManager(RepositoryManager manager) {
-    repoManager = manager;
-  }

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS60 INS60 INS60 INS43 INS59 INS43 INS59 MOV43 INS59 INS39 INS59 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS32 INS42 MOV32 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL39 DEL42 DEL42 DEL33 DEL27 DEL40 DEL16 DEL36 DEL59 DEL60 DEL42 DEL34 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL57 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL51 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31