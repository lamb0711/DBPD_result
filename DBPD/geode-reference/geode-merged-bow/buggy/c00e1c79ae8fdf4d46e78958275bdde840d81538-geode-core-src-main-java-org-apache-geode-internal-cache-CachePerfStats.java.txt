GEODE-6425: Fixes rollover in some cache stats (#3214)

Changes the following CachePerfStats to long:
 - gets
 - misses
 - put
 - update
 - create
 - destroys
 - invalidates 
 - clear

Handles the error caused by attempting to retrieve a long type stat as an
int. Returns the long value as an int with overflow. This is consistent
with previous behavior of the stats

Co-authored-by: Helena Bales <hbales@pivotal.io>
Co-authored-by: Jacob Barrett <jbarrett@pivotal.io>

-  static final int putallsId;
-  static final int putallTimeId;
+  static final int putAllsId;
+  static final int putAllTimeId;
-            f.createIntCounter("destroys", destroysDesc, "operations"),
-            f.createIntCounter("updates", updatesDesc, "operations"),
+            f.createLongCounter("destroys", destroysDesc, "operations"),
+            f.createLongCounter("updates", updatesDesc, "operations"),
-            f.createIntCounter("invalidates", invalidatesDesc, "operations"),
-            f.createIntCounter("gets", getsDesc, "operations"),
-            f.createIntCounter("misses", missesDesc, "operations"),
-            f.createIntCounter("creates", createsDesc, "operations"),
-            f.createIntCounter("puts", putsDesc, "operations"),
+            f.createLongCounter("invalidates", invalidatesDesc, "operations"),
+            f.createLongCounter("gets", getsDesc, "operations"),
+            f.createLongCounter("misses", missesDesc, "operations"),
+            f.createLongCounter("creates", createsDesc, "operations"),
+            f.createLongCounter("puts", putsDesc, "operations"),
-            f.createIntCounter("clears", clearsDesc, "operations"),
+            f.createLongCounter("clears", clearsDesc, "operations"),
-    putallsId = type.nameToId("putalls");
-    putallTimeId = type.nameToId("putallTime");
+    putAllsId = type.nameToId("putalls");
+    putAllTimeId = type.nameToId("putallTime");
-  public int getDestroys() {
-    return stats.getInt(destroysId);
+  public long getDestroys() {
+    return stats.getLong(destroysId);
-  public int getCreates() {
-    return stats.getInt(createsId);
+  public long getCreates() {
+    return stats.getLong(createsId);
-  public int getPuts() {
-    return stats.getInt(putsId);
+  public long getPuts() {
+    return stats.getLong(putsId);
-    return stats.getInt(putallsId);
+    return stats.getInt(putAllsId);
-  public int getUpdates() {
-    return stats.getInt(updatesId);
+  public long getUpdates() {
+    return stats.getLong(updatesId);
-  public int getInvalidates() {
-    return stats.getInt(invalidatesId);
+  public long getInvalidates() {
+    return stats.getLong(invalidatesId);
-  public int getGets() {
-    return stats.getInt(getsId);
+  public long getGets() {
+    return stats.getLong(getsId);
-  public int getMisses() {
-    return stats.getInt(missesId);
+  public long getMisses() {
+    return stats.getLong(missesId);
-    stats.incInt(destroysId, 1);
+    stats.incLong(destroysId, 1L);
-    stats.incInt(createsId, 1);
+    stats.incLong(createsId, 1L);
-    stats.incInt(invalidatesId, 1);
+    stats.incLong(invalidatesId, 1L);
-    stats.incInt(getsId, 1);
+    stats.incLong(getsId, 1L);
-      stats.incInt(missesId, 1);
+      stats.incLong(missesId, 1L);
-      stats.incInt(updatesId, 1);
+      stats.incLong(updatesId, 1L);
-      stats.incInt(putsId, 1);
+      stats.incLong(putsId, 1L);
-    stats.incInt(putallsId, 1);
+    stats.incInt(putAllsId, 1);
-      stats.incLong(putallTimeId, getClockTime() - start);
+      stats.incLong(putAllTimeId, getClockTime() - start);
-  public int getClearCount() {
-    return stats.getInt(clearsId);
+  public long getClearCount() {
+    return stats.getLong(clearsId);
-    stats.incInt(clearsId, 1);
+    stats.incLong(clearsId, 1L);

UPD39 UPD39 UPD39 UPD39 UPD39 UPD39 UPD39 UPD39 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD34 UPD42 UPD34 UPD42 UPD34 UPD42 UPD34 UPD42 UPD42 UPD42 UPD34 UPD42 UPD42 UPD34 UPD42 UPD34 UPD42 UPD34 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42