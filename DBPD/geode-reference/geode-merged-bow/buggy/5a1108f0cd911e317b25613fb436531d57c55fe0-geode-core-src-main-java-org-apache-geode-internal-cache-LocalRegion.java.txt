GEODE-3521: Allow region set operations to bootstrap a transaction. (#891)

* GEODE-3521: Allow region set operations to bootstrap a transaction.

  * Now Geode will bootstrap a transaction on a region set op even though
    it is a first operation in the transaction.
 * Add a SystemPropertyHelper class to held system properties to be set.
  * User needs to set a system property to disable this new behavior.
  * Do not allow an accessor to bootstrap a transaction.
  * Add a PausedTXStateProxyImpl state to allow product to know if a transaction is paused.
   *Product now detects if only same thread can unpause a paused transaction.
  * Do not bootstrap a new transaction again when transaction is paused.
  * Add a test case for testing pause and unpause.
  * A thread can not pause a transaction and start a new transaction - use suspend and resume instead.
 * Handle a situation that RegionEntry can be set in the KeyInfo when iterate through keys.

+import org.apache.geode.internal.lang.SystemPropertyHelper;
+    if (!restoreSetOperationTransactionBehavior) {
+      discoverJTA();
+    }
+    if (!restoreSetOperationTransactionBehavior) {
+      discoverJTA();
+    }
+    if (!restoreSetOperationTransactionBehavior) {
+      discoverJTA();
+    }
-    final TXStateProxy tx = this.cache.getTXMgr().internalSuspend();
+    final TXStateProxy tx = this.cache.getTXMgr().pauseTransaction();
-      this.cache.getTXMgr().internalResume(tx);
+      this.cache.getTXMgr().unpauseTransaction(tx);
+  protected final boolean restoreSetOperationTransactionBehavior =
+      SystemPropertyHelper.restoreSetOperationTransactionBehavior();
+
+  private boolean isTransactionPaused() {
+    TXManagerImpl txMgr = (TXManagerImpl) getCache().getCacheTransactionManager();
+    return txMgr.isTransactionPaused();
+  }
+
-    final TXStateProxy tx = this.cache.getTXMgr().internalSuspend();
+    final TXStateProxy tx = this.cache.getTXMgr().pauseTransaction();
-      this.cache.getTXMgr().internalResume(tx);
+      this.cache.getTXMgr().unpauseTransaction(tx);
+          if (isTransactionPaused()) {
+            // Do not bootstrap JTA again, if the transaction has been paused.
+            return null;
+          }
-              TXStateProxy txState = this.cache.getTXMgr().internalSuspend();
+              TXStateProxy txState = this.cache.getTXMgr().pauseTransaction();
-                this.cache.getTXMgr().internalResume(txState);
+                this.cache.getTXMgr().unpauseTransaction(txState);
+  public boolean canStoreDataLocally() {
+    return this.dataPolicy.withStorage();
+  }
+

INS26 INS40 INS23 INS31 INS31 INS83 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS25 INS25 INS25 INS42 INS32 INS60 INS41 INS41 INS38 INS8 INS38 INS8 INS38 INS8 INS42 INS42 INS43 INS59 INS32 INS32 INS42 INS21 INS42 INS21 INS42 INS21 INS42 INS42 INS11 INS42 INS42 INS22 INS42 INS32 INS32 INS32 UPD42 INS43 INS32 UPD42 INS52 INS42 INS42 INS42 INS42 UPD42 INS42 INS32 INS42 UPD42 INS42 INS25 INS32 INS8 INS42 INS41 INS33 MOV32 UPD42 MOV32 UPD42 INS42 DEL42