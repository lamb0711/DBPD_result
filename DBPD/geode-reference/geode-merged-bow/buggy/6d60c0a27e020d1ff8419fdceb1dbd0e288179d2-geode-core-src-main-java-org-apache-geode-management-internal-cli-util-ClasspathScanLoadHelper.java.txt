GEODE-5535: Upgrade FastClasspathScanner to 4.0.6 (#2310)

- Use less memory for scanning by reusing a single
  instance of ClassGraph.
-import java.lang.reflect.Modifier;
-import java.util.HashSet;
+import java.util.Arrays;
+import java.util.Collection;
-import io.github.lukehutch.fastclasspathscanner.FastClasspathScanner;
-
+import io.github.classgraph.ClassGraph;
+import io.github.classgraph.ClassInfoList;
+import io.github.classgraph.ScanResult;
-  public static Set<Class<?>> scanPackagesForClassesImplementing(Class<?> implementedInterface,
-      String... packagesToScan) {
-    Set<Class<?>> classesImplementing = new HashSet<>();
-    new FastClasspathScanner(packagesToScan)
-        .matchClassesImplementing(implementedInterface, classesImplementing::add).scan();
-    return classesImplementing.stream().filter(ClasspathScanLoadHelper::isInstantiable)
-        .collect(toSet());
+  private final ScanResult scanResult;
+
+  public ClasspathScanLoadHelper(Collection<String> packagesToScan) {
+    scanResult = new ClassGraph().whitelistPackages(packagesToScan.toArray(new String[] {}))
+        .enableClassInfo()
+        .enableAnnotationInfo().scan();
-  public static Set<Class<?>> scanClasspathForAnnotation(Class<?> annotation,
-      String... packagesToScan) {
-    Set<Class<?>> classesWithAnnotation = new HashSet<>();
-    new FastClasspathScanner(packagesToScan)
-        .matchClassesWithAnnotation(annotation, classesWithAnnotation::add).scan();
-    return classesWithAnnotation;
+  public Set<Class<?>> scanPackagesForClassesImplementing(Class<?> implementedInterface,
+      String... onlyFromPackages) {
+    ClassInfoList classInfoList = scanResult.getClassesImplementing(implementedInterface.getName())
+        .filter(ci -> !ci.isAbstract() && !ci.isInterface() && ci.isPublic());
+
+    classInfoList = classInfoList
+        .filter(ci -> Arrays.stream(onlyFromPackages).anyMatch(p -> ci.getName().startsWith(p)));
+
+    return classInfoList.loadClasses().stream().collect(toSet());
-  private static boolean isInstantiable(Class<?> klass) {
-    int modifiers = klass.getModifiers();
+  public Set<Class<?>> scanClasspathForAnnotation(Class<?> annotation, String... onlyFromPackages) {
+    ClassInfoList classInfoList = scanResult.getClassesWithAnnotation(annotation.getName());
-    return !Modifier.isAbstract(modifiers) && !Modifier.isInterface(modifiers)
-        && Modifier.isPublic(modifiers);
+    classInfoList = classInfoList
+        .filter(ci -> Arrays.stream(onlyFromPackages).anyMatch(p -> ci.getName().startsWith(p)));
+
+    return classInfoList.loadClasses().stream().collect(toSet());
+

INS26 INS26 UPD40 UPD40 UPD40 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS83 MOV74 INS42 MOV44 MOV44 INS8 UPD83 MOV74 UPD42 MOV44 INS42 INS42 INS74 INS42 INS21 UPD42 INS60 INS21 MOV41 INS43 UPD42 INS21 INS41 UPD43 MOV43 UPD43 MOV43 INS7 INS43 INS59 INS7 INS32 UPD42 MOV42 INS43 INS7 INS32 UPD42 UPD42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 MOV32 INS42 UPD42 INS42 INS32 INS32 INS42 INS32 MOV32 MOV42 MOV32 MOV42 INS86 INS42 INS42 INS86 INS32 INS42 INS42 UPD42 INS32 INS42 INS42 INS86 INS32 UPD42 MOV42 INS42 INS32 INS42 INS42 UPD42 INS32 INS59 INS27 INS59 INS32 INS42 INS42 INS42 UPD42 MOV42 INS59 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS38 INS38 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS86 INS42 INS32 INS42 INS86 INS14 INS42 INS32 INS32 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 INS59 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS59 INS32 UPD43 MOV43 UPD42 MOV42 UPD42 MOV42 INS3 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS32 UPD42 MOV42 INS42 UPD42 INS5 INS4 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV43 INS85 DEL42 DEL14 DEL42 DEL42 DEL90 DEL42 DEL83 DEL83 DEL42 DEL42 DEL44 DEL76 DEL74 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL32 DEL21 DEL42 DEL42 DEL90 DEL32 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL74 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL42 DEL90 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL43 DEL76 DEL74 DEL39 DEL32 DEL38 DEL32 DEL38 DEL32 DEL27 DEL41