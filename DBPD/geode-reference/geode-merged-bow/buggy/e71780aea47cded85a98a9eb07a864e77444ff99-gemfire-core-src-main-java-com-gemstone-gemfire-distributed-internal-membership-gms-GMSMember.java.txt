Enabling creation of stand-alone GMSLocator & adding 2-phase view casting

The locator work will let us unit-test this component while the
view-casting work is in preparation for the health-monitor impl that is
coming soon & will allow us to start testing HA features.

+import com.gemstone.gemfire.internal.InternalDataSerializer;
+  // whether to show UUID info in toString()
+  private final static boolean SHOW_UUIDS = Boolean.getBoolean("gemfire.show_UUIDs");
+  
-  private boolean shouldNotBeCoordinator;
+  private boolean preferredForCoordinator;
-    shouldNotBeCoordinator=m.shouldNotBeCoordinator;
+    preferredForCoordinator=m.preferredForCoordinator;
-   * @param canBeCoordinator whether the member can be group coordinator
-   * @param version TODO
+   * @param preferredForCoordinator whether the member can be group coordinator
+   * @param version the member's version ordinal
+   * @param msbs - most significant bytes of UUID
+   * @param lsbs - least significant bytes of UUID
-  public GMSMember(InetAddress i, int p, boolean splitBrainEnabled, boolean canBeCoordinator, short version) {
+  public GMSMember(InetAddress i, int p, boolean splitBrainEnabled, boolean preferredForCoordinator,
+      short version,
+      long msbs, long lsbs) {
-    this.shouldNotBeCoordinator = !canBeCoordinator;
+    this.preferredForCoordinator = preferredForCoordinator;
+    this.uuidMSBs = msbs;
+    this.uuidLSBs = lsbs;
-    return !this.shouldNotBeCoordinator;
+    return this.preferredForCoordinator;
+  }
+  
+  public void setPreferredForCoordinator(boolean preferred) {
+    this.preferredForCoordinator = preferred;
+    String uuid = SHOW_UUIDS? (";uuid=" + getUUID().toStringLong()) 
+        : ((this.uuidLSBs == 0 && this.uuidMSBs == 0)? "; no uuid" : "; uuid set");
+
+      .append(uuid)
-  public boolean isShouldNotBeCoordinator() {
-    return shouldNotBeCoordinator;
-  }
-
-  public void setShouldNotBeCoordinator(boolean shouldNotBeCoordinator) {
-    this.shouldNotBeCoordinator = shouldNotBeCoordinator;
-  }
-
-  static final int SHOULD_NOT_BE_COORD = 0x02;
+  static final int PREFERRED_FOR_COORD = 0x02;
-    if (shouldNotBeCoordinator) flags |= SHOULD_NOT_BE_COORD;
+    if (preferredForCoordinator) flags |= PREFERRED_FOR_COORD;
-    out.writeLong(uuidLSBs);
+    out.writeLong(uuidLSBs);
+//    InternalDataSerializer.writeSignedVL(uuidLSBs, out);
+//    InternalDataSerializer.writeSignedVL(uuidMSBs, out);
-    this.shouldNotBeCoordinator = (flags & SHOULD_NOT_BE_COORD) != 0;
+    this.preferredForCoordinator = (flags & PREFERRED_FOR_COORD) != 0;
+//    this.uuidLSBs = InternalDataSerializer.readUnsignedVL(in);
+//    this.uuidMSBs = InternalDataSerializer.readUnsignedVL(in);
-    out.writeLong(uuidLSBs);
+    out.writeLong(uuidLSBs);
+//    InternalDataSerializer.writeSignedVL(uuidLSBs, out);
+//    InternalDataSerializer.writeSignedVL(uuidMSBs, out);
-    this.uuidLSBs = in.readLong();
+    this.uuidLSBs = in.readLong();
+//    this.uuidLSBs = InternalDataSerializer.readUnsignedVL(in);
+//    this.uuidMSBs = InternalDataSerializer.readUnsignedVL(in);

INS26 MOV23 MOV31 MOV31 INS40 INS23 INS83 INS83 INS83 INS39 INS59 INS44 INS44 UPD42 UPD42 MOV21 MOV78 MOV21 MOV78 MOV21 UPD42 INS32 INS42 INS65 INS65 UPD42 INS39 INS42 INS39 INS42 INS21 INS21 UPD42 INS60 UPD42 INS42 INS42 INS45 UPD42 UPD66 INS42 INS66 INS42 INS66 INS7 INS7 INS22 INS43 INS59 INS32 UPD42 UPD42 UPD40 INS42 INS22 INS42 INS22 INS42 INS52 INS42 UPD42 INS42 INS42 INS16 MOV32 INS42 INS45 UPD42 INS52 INS42 INS52 INS42 UPD42 INS42 INS36 INS36 INS42 UPD42 UPD42 INS27 INS16 INS45 INS32 INS36 INS45 INS45 UPD42 INS32 INS42 INS27 INS42 INS27 INS27 INS22 INS34 INS22 INS34 INS52 INS42 INS52 INS42 DEL42 DEL38 DEL42 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL38 DEL41 DEL8 DEL31 DEL45