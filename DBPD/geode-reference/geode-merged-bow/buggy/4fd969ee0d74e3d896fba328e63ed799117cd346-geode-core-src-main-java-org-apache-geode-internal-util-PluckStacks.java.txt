GEODE-4695 PluckStacks utility is confused by Attach Listener thread dump

Adding unit tests for the PluckStacks utility and fixing it to work
with gfsh-exported dumps as well as jstack-generated dumps.

This closes #1471

+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.geode.management.internal.cli.commands.ExportStackTraceCommand;
+
-  public static void main(String[] args) {
+  public static void main(String[] args) throws Exception {
-  private void examineLog(File log) {
+  private void examineLog(File log) throws IOException {
-    StringBuffer buffer = new StringBuffer();
+    try {
+      Map<String, List<ThreadStack>> dumps = getThreadDumps(reader, log.getName());
+
+      StringBuffer buffer = new StringBuffer();
+      for (Map.Entry<String, List<ThreadStack>> dump : dumps.entrySet()) {
+        if (dump.getValue().size() > 0) {
+          buffer.append(dump.getKey());
+          for (ThreadStack stack : dump.getValue()) {
+            stack.appendToBuffer(buffer);
+            buffer.append("\n");
+          }
+          buffer.append("\n\n");
+        }
+        if (ONE_STACK) {
+          break;
+        }
+      }
+      String output = buffer.toString();
+      if (output.length() > 0) {
+        System.out.println(output);
+      }
+    } finally {
+      reader.close();
+    }
+  }
+
+  public Map<String, List<ThreadStack>> getThreadDumps(LineNumberReader reader,
+      String logFileName) {
+    Map<String, List<ThreadStack>> result = new HashMap<>();
-        if (line.startsWith("Full thread dump")) {
+        if (line.startsWith("Full thread dump")
+            || line.startsWith(ExportStackTraceCommand.STACK_TRACE_FOR_MEMBER)) {
+            StringBuffer buffer = new StringBuffer();
-                .append(" from " + log + " line " + lineNumber + "]\n").append(line).append("\n");
-            for (ThreadStack stack : stacks) {
-              stack.appendToBuffer(buffer);
-              buffer.append("\n");
-            }
-            buffer.append("\n\n");
+                .append(" from " + logFileName + " line " + lineNumber + "]\n").append(line)
+                .append("\n");
+            result.put(buffer.toString(), stacks);
-      return;
-    } finally {
-      if (reader != null)
-        try {
-          reader.close();
-        } catch (IOException ignore) {
-        }
+      throw new RuntimeException("Something went wrong processing " + logFileName, ioe);
-    String output = buffer.toString();
-    if (output.length() > 0) {
-      System.out.println(output);
-    }
+    return result;
-      while ((line = reader.readLine()) != null) {
+      do {
+        reader.mark(100000);
+        if ((line = reader.readLine()) == null) {
+          break;
+        }
+        if (line.startsWith(ExportStackTraceCommand.STACK_TRACE_FOR_MEMBER)) {
+          reader.reset();
+          Collections.sort(result);
+          return result;
+        }
-      }
+      } while (true);
-      if (!line.startsWith("\tat ")) {
-        Collections.sort(result);
-        return result;
-      }
+      if (lastStack.getThreadName().equals("VM Thread")) {
+        Collections.sort(result);
+        return result;
+      }
-      while ((line = reader.readLine()) != null && line.trim().length() > 0) {
+      do {
+        reader.mark(100000);
+        line = reader.readLine();
+        if (line == null || line.trim().length() == 0) {
+          break;
+        }
+        if (line.startsWith("\"")) {
+          reader.reset();
+          break;
+        }
-      }
+      } while (true);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS43 MOV43 INS83 INS74 INS42 INS44 INS44 INS8 INS42 INS54 INS43 INS43 INS74 INS43 INS42 INS43 INS42 INS60 MOV60 MOV60 MOV54 INS41 INS8 MOV8 INS42 INS42 INS43 INS43 INS42 INS42 INS74 INS59 INS12 INS42 MOV25 INS19 INS60 MOV60 INS70 MOV60 MOV25 INS42 INS42 INS43 INS43 INS74 INS42 INS14 MOV44 INS8 INS19 INS8 INS9 INS74 INS59 INS44 INS32 INS8 INS42 INS42 INS43 INS43 INS74 INS53 MOV8 INS9 INS32 INS21 INS21 INS25 INS25 MOV21 INS43 INS43 INS74 INS42 INS32 INS74 INS42 INS42 INS42 INS25 INS25 INS42 INS42 INS43 INS14 INS21 INS25 INS25 INS32 INS42 UPD45 MOV45 INS32 INS7 UPD27 MOV27 INS8 INS32 INS8 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS43 INS74 INS27 MOV8 INS42 INS8 INS42 INS27 INS43 INS27 INS42 INS32 INS27 INS8 INS32 INS8 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS34 INS42 INS32 UPD27 UPD27 INS10 INS42 INS42 INS45 INS21 INS10 INS42 INS42 INS42 INS42 INS40 INS42 INS43 INS43 INS32 INS34 INS21 INS10 MOV32 INS32 INS42 INS45 UPD42 MOV42 INS42 INS42 INS34 INS36 INS33 INS10 INS42 INS42 INS40 INS21 INS21 INS41 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS40 INS8 INS7 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS60 MOV21 INS21 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 UPD42 DEL42 DEL41 DEL8 DEL12 DEL33 DEL27 DEL42 DEL44 DEL8 DEL12 DEL54 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL33 DEL27 DEL61 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL8 DEL61