GEODE-954: display HostnameForClient in the member list view

* retrieve the hostnameforClient and bindAddress attributes from the mbean
* add a column in the member list view to display it. If hostnameforclient is empty, use bindAddress
* have the tooltip show the entire content of the cell in case the cell is too short
* modify the ui tests to reflect the ui change
* refactor if/else into switch statement

GEODE-913: modifiable

-import java.io.IOException;
-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.lang.management.ManagementFactory;
-import java.net.Inet4Address;
-import java.net.Inet6Address;
-import java.net.InetAddress;
-import java.net.UnknownHostException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.ResourceBundle;
-import java.util.Set;
+import com.vmware.gemfire.tools.pulse.internal.controllers.PulseController;
+import com.vmware.gemfire.tools.pulse.internal.data.JmxManagerFinder.JmxManagerInfo;
+import com.vmware.gemfire.tools.pulse.internal.json.JSONException;
+import com.vmware.gemfire.tools.pulse.internal.json.JSONObject;
+import com.vmware.gemfire.tools.pulse.internal.log.PulseLogWriter;
+import com.vmware.gemfire.tools.pulse.internal.util.StringUtils;
-
-import com.vmware.gemfire.tools.pulse.internal.controllers.PulseController;
-import com.vmware.gemfire.tools.pulse.internal.data.JmxManagerFinder.JmxManagerInfo;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONException;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONObject;
-import com.vmware.gemfire.tools.pulse.internal.log.PulseLogWriter;
-import com.vmware.gemfire.tools.pulse.internal.util.StringUtils;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.lang.management.ManagementFactory;
+import java.net.Inet4Address;
+import java.net.Inet6Address;
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.ResourceBundle;
+import java.util.Set;
-        // member regions
-        if (memMBean.getKeyProperty(PulseConstants.MBEAN_KEY_PROPERTY_SERVICE) != null) {
-          if (memMBean
-              .getKeyProperty(PulseConstants.MBEAN_KEY_PROPERTY_SERVICE)
-              .equals(PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_REGION)) {
-
+        String service = memMBean.getKeyProperty(PulseConstants.MBEAN_KEY_PROPERTY_SERVICE);
+        if(service==null){
+          // Cluster Member
+          updateClusterMember(memMBean);
+        }
+        else {
+          switch (service) {
+          case PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_REGION:
-
-          } else if (memMBean.getKeyProperty(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE).equals(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_CACHESERVER)) {
+            break;
+          case PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_CACHESERVER:
-          }
-          // Gateway Receiver Attributes
-          else if (memMBean.getKeyProperty(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE).equals(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_GATEWAYRECEIVER)) {
+            break;
+          case PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_GATEWAYRECEIVER:
-          } else if (memMBean.getKeyProperty(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE).equals(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_GATEWAYSENDER)) {
-              updateGatewaySender(memMBean);
-          } else if(memMBean.getKeyProperty(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE).equals(
-              PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_ASYNCEVENTQUEUE)){
-
-              // AsyncEventQueue
-              updateAsyncEventQueue(memMBean);
+            break;
+          case PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_GATEWAYSENDER:
+            updateGatewaySender(memMBean);
+            break;
+          case PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_ASYNCEVENTQUEUE:
+            updateAsyncEventQueue(memMBean);
+            break;
+          case PulseConstants.MBEAN_KEY_PROPERTY_SERVICE_VALUE_LOCATOR:
+            updateClusterMember(memMBean);
+            break;
-        } else {
-          // Cluster Member
-          updateClusterMember(memMBean);
-
-        if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_MEMBERCOUNT)) {
+        String name = attribute.getName();
+        switch (name){
+        case PulseConstants.MBEAN_ATTRIBUTE_MEMBERCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMCLIENTS)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMCLIENTS:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISTRIBUTEDSYSTEMID)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISTRIBUTEDSYSTEMID:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_LOCATORCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_LOCATORCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMRUNNIGFUNCTION)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMRUNNIGFUNCTION:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_REGISTEREDCQCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_REGISTEREDCQCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMSUBSCRIPTIONS)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMSUBSCRIPTIONS:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMTXNCOMMITTED)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMTXNCOMMITTED:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMTXNROLLBACK)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMTXNROLLBACK:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_TOTALHEAPSIZE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_TOTALHEAPSIZE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_USEDHEAPSIZE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_USEDHEAPSIZE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_TOTALREGIONENTRYCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_TOTALREGIONENTRYCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_CURRENTENTRYCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_CURRENTENTRYCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_TOTALDISKUSAGE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_TOTALDISKUSAGE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_AVERAGEWRITES)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_AVERAGEWRITES:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_AVERAGEREADS)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_AVERAGEREADS:
-
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_QUERYREQUESTRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_QUERYREQUESTRATE:
-
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_JVMPAUSES)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_JVMPAUSES:
-
-        }
-
-        // For SQLfire or Gemfire
-        if (PulseConstants.PRODUCT_NAME_SQLFIRE
-            .equalsIgnoreCase(PulseController.getPulseProductSupport())) {
-          // For SQLfire
-          // Do nothing
-        } else {
-          // For Gemfire
-          if (attribute.getName().equals(
-              PulseConstants.MBEAN_ATTRIBUTE_TOTALREGIONCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_TOTALREGIONCOUNT:
+          if (!PulseConstants.PRODUCT_NAME_SQLFIRE
+              .equalsIgnoreCase(PulseController.getPulseProductSupport())){
+            // for Gemfire
+          break;
-
-      if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_EVENTRECEIVEDDATE)) {
+      String name = attribute.getName();
+      switch (name){
+      case PulseConstants.MBEAN_ATTRIBUTE_EVENTRECEIVEDDATE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_BATCHSIZE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_BATCHSIZE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_SENDERID)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_SENDERID:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_EVENTQUEUESIZE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_EVENTQUEUESIZE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_RUNNING)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_RUNNING:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_PRIMARY)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_PRIMARY:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_PERSISTENCEENABLED)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_PERSISTENCEENABLED:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_PARALLEL)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_PARALLEL:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_REMOTE_DS_ID)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_REMOTE_DS_ID:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_EVENTS_EXCEEDING_ALERT_THRESHOLD)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_EVENTS_EXCEEDING_ALERT_THRESHOLD:
+        break;
-      if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_ASYNCEVENTID)) {
+      String name = attribute.getName();
+      switch (name){
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_ASYNCEVENTID:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_ASYNC_EVENT_LISTENER)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_ASYNC_EVENT_LISTENER:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_BATCH_CONFLATION_ENABLED)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_BATCH_CONFLATION_ENABLED:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_BATCH_TIME_INTERVAL)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_BATCH_TIME_INTERVAL:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_BATCH_SIZE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_BATCH_SIZE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_EVENT_QUEUE_SIZE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_EVENT_QUEUE_SIZE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_PARALLEL)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_PARALLEL:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AEQ_PRIMARY)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AEQ_PRIMARY:
+        break;
+        this.mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_HOSTNAMEFORCLIENTS_ALT);
+        existingMember.setHostnameForClients((String)this.mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_HOSTNAMEFORCLIENTS_ALT));
+        existingMember.setBindAddress((String)this.mbs.getAttribute(mbeanName, PulseConstants.MBEAN_ATTRIBUTE_BINDADDRESS));
+
-                  if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE)) {
-                    anRom.setEntrySize(getLongAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getEntrySize() = " + anRom.getEntrySize());
-                  } else if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_ENTRYCOUNT)) {
-                    anRom.setEntryCount(getLongAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getEntryCount() = " + anRom.getEntryCount());
-                  } else if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE)) {
-                    anRom.setPutsRate(getFloatAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getPutsRate() = " + anRom.getPutsRate());
-                  } else if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_GETSRATE)) {
-                    anRom.setGetsRate(getFloatAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getGetsRate() = " + anRom.getGetsRate());
-                  } else if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE)) {
-                    anRom.setDiskGetsRate(getFloatAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getDiskGetsRate() = " + anRom.getDiskGetsRate());
-                  } else if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE)) {
-                    anRom.setDiskPutsRate(getFloatAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getDiskPutsRate() = " + anRom.getDiskPutsRate());
-                  } else if (attribute.getName().equals(
-                      PulseConstants.MBEAN_ATTRIBUTE_LOCALMAXMEMORY)) {
-                    anRom.setLocalMaxMemory(getIntegerAttribute(attribute.getValue(),
-                        attribute.getName()));
-                    LOGGER.fine("updateRegionOnMembers : anRom.getLocalMaxMemory() = " + anRom.getLocalMaxMemory());
-                  }
+                String name = attribute.getName();
+                switch(name){
+                case PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE:
+                  anRom.setEntrySize(getLongAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getEntrySize() = " + anRom.getEntrySize());
+                  break;
+                case PulseConstants.MBEAN_ATTRIBUTE_ENTRYCOUNT:
+                  anRom.setEntryCount(getLongAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getEntryCount() = " + anRom.getEntryCount());
+                  break;
+                case PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE:
+                  anRom.setPutsRate(getFloatAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getPutsRate() = " + anRom.getPutsRate());
+                  break;
+                case PulseConstants.MBEAN_ATTRIBUTE_GETSRATE:
+                  anRom.setGetsRate(getFloatAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getGetsRate() = " + anRom.getGetsRate());
+                  break;
+                case PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE:
+                  anRom.setDiskGetsRate(getFloatAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getDiskGetsRate() = " + anRom.getDiskGetsRate());
+                  break;
+                case PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE:
+                  anRom.setDiskPutsRate(getFloatAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getDiskPutsRate() = " + anRom.getDiskPutsRate());
+                  break;
+                case PulseConstants.MBEAN_ATTRIBUTE_LOCALMAXMEMORY:
+                  anRom.setLocalMaxMemory(getIntegerAttribute(attribute.getValue(),
+                      attribute.getName()));
+                  LOGGER.fine("updateRegionOnMembers : anRom.getLocalMaxMemory() = " + anRom.getLocalMaxMemory());
+                  break;
+                }
-              if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE)) {
-                regionOnMember.setEntrySize(getLongAttribute(attribute.getValue(),
-                    attribute.getName()));
-              } else if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_ENTRYCOUNT)) {
-                regionOnMember.setEntryCount(getLongAttribute(attribute.getValue(),
-                    attribute.getName()));
-              } else if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE)) {
-                regionOnMember.setPutsRate(getFloatAttribute(attribute.getValue(),
-                    attribute.getName()));
-              } else if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_GETSRATE)) {
-                regionOnMember.setGetsRate(getFloatAttribute(attribute.getValue(),
-                    attribute.getName()));
-              } else if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE)) {
-                regionOnMember.setDiskGetsRate(getFloatAttribute(attribute.getValue(),
-                    attribute.getName()));
-              } else if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE)) {
-                regionOnMember.setDiskPutsRate(getFloatAttribute(attribute.getValue(),
-                    attribute.getName()));
-              } else if (attribute.getName().equals(
-                  PulseConstants.MBEAN_ATTRIBUTE_LOCALMAXMEMORY)) {
-                regionOnMember.setLocalMaxMemory(getIntegerAttribute(attribute.getValue(),
-                    attribute.getName()));
-              }
+            String name=attribute.getName();
+            switch (name){
+            case PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE:
+              regionOnMember.setEntrySize(getLongAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            case PulseConstants.MBEAN_ATTRIBUTE_ENTRYCOUNT:
+              regionOnMember.setEntryCount(getLongAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            case PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE:
+              regionOnMember.setPutsRate(getFloatAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            case PulseConstants.MBEAN_ATTRIBUTE_GETSRATE:
+              regionOnMember.setGetsRate(getFloatAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            case PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE:
+              regionOnMember.setDiskGetsRate(getFloatAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            case PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE:
+              regionOnMember.setDiskPutsRate(getFloatAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            case PulseConstants.MBEAN_ATTRIBUTE_LOCALMAXMEMORY:
+              regionOnMember.setLocalMaxMemory(getIntegerAttribute(attribute.getValue(),
+                  attribute.getName()));
+              break;
+            }
-        if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_MEMBERS)) {
+        String name = attribute.getName();
+        switch (name){
+        case PulseConstants.MBEAN_ATTRIBUTE_MEMBERS:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_FULLPATH)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_FULLPATH:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_EMPTYNODES)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_EMPTYNODES:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_GETSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_GETSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_LRUEVICTIONRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_LRUEVICTIONRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_REGIONTYPE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_REGIONTYPE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_SYSTEMREGIONENTRYCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_SYSTEMREGIONENTRYCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_MEMBERCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_MEMBERCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_PERSISTENTENABLED)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_PERSISTENTENABLED:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NAME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NAME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_GATEWAYENABLED)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_GATEWAYENABLED:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKUSAGE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKUSAGE:
+          break;
-
-
-        if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMTIMESCOMPILED)) {
+        String name = attribute.getName();
+        switch (name){
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMTIMESCOMPILED:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMEXECUTION)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMEXECUTION:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMEXECUTIONSINPROGRESS)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMEXECUTIONSINPROGRESS:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMTIMESGLOBALINDEXLOOKUP)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMTIMESGLOBALINDEXLOOKUP:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NUMROWSMODIFIED)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NUMROWSMODIFIED:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_PARSETIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_PARSETIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_BINDTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_BINDTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_OPTIMIZETIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_OPTIMIZETIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_ROUTINGINFOTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_ROUTINGINFOTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_GENERATETIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_GENERATETIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_TOTALCOMPILATIONTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_TOTALCOMPILATIONTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_EXECUTIONTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_EXECUTIONTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_PROJECTIONTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_PROJECTIONTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_TOTALEXECUTIONTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_TOTALEXECUTIONTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_ROWSMODIFICATIONTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_ROWSMODIFICATIONTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_QNNUMROWSSEEN)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_QNNUMROWSSEEN:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_QNMSGSENDTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_QNMSGSENDTIME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_QNMSGSERTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_QNMSGSERTIME:
-        }
-        if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_QNRESPDESERTIME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_QNRESPDESERTIME:
+          break;
-      ReflectionException, IOException {
+                                    ReflectionException, IOException {
-
-      if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_GEMFIREVERSION)) {
+      String name = attribute.getName();
+      switch (name) {
+      case PulseConstants.MBEAN_ATTRIBUTE_GEMFIREVERSION:
-      } else if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_MANAGER)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_MANAGER:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_TOTALREGIONCOUNT)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_TOTALREGIONCOUNT:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_LOCATOR)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_LOCATOR:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_TOTALDISKUSAGE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_TOTALDISKUSAGE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_SERVER)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_SERVER:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_TOTALFILEDESCRIPTOROPEN)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_TOTALFILEDESCRIPTOROPEN:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_LOADAVERAGE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_LOADAVERAGE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_JVMPAUSES)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_JVMPAUSES:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_USEDMEMORY)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_USEDMEMORY:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_MAXMEMORY)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_MAXMEMORY:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_NUMTHREADS)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_NUMTHREADS:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_MEMBERUPTIME)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_MEMBERUPTIME:
-      } else if (attribute.getName()
-          .equals(PulseConstants.MBEAN_ATTRIBUTE_HOST)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_HOST:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_TOTALBYTESONDISK)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_HOSTNAMEFORCLIENTS:
+        member.setHostnameForClients(getStringAttribute(attribute.getValue(),
+                attribute.getName()));
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_BINDADDRESS:
+        member.setBindAddress(getStringAttribute(attribute.getValue(),
+            attribute.getName()));
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_TOTALBYTESONDISK:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_CPUUSAGE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_CPUUSAGE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_HOSTCPUUSAGE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_HOSTCPUUSAGE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_MEMBER)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_MEMBER:
-      } else if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_ID)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_ID:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AVERAGEREADS)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AVERAGEREADS:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_AVERAGEWRITES)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_AVERAGEWRITES:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_OFFHEAPFREESIZE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_OFFHEAPFREESIZE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_OFFHEAPUSEDSIZE)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_OFFHEAPUSEDSIZE:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_SERVERGROUPS)) {
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_SERVERGROUPS:
-      } else if (attribute.getName().equals(
-          PulseConstants.MBEAN_ATTRIBUTE_REDUNDANCYZONES)) {
-        /*String rzValues[] = (String[]) attribute.getValue();
-        member.getRedundancyZones().clear();
-        for (int k = 0; k < rzValues.length; k++) {
-          member.getRedundancyZones().add(rzValues[k]);
-        }*/
-
+        break;
+      case PulseConstants.MBEAN_ATTRIBUTE_REDUNDANCYZONES:
+        break;
-
-        if (attribute.getName().equals(PulseConstants.MBEAN_ATTRIBUTE_FULLPATH)) {
+        String name = attribute.getName();
+        switch (name){
+        case PulseConstants.MBEAN_ATTRIBUTE_FULLPATH:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKREADSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_DISKWRITESRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_GETSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_GETSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_LRUEVICTIONRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_LRUEVICTIONRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_PUTSRATE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_REGIONTYPE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_REGIONTYPE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_MEMBERCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_MEMBERCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_ENTRYSIZE:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_ENTRYCOUNT)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_ENTRYCOUNT:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_NAME)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_NAME:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_PERSISTENTENABLED)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_PERSISTENTENABLED:
-        } else if (attribute.getName().equals(
-            PulseConstants.MBEAN_ATTRIBUTE_GATEWAYENABLED)) {
+          break;
+        case PulseConstants.MBEAN_ATTRIBUTE_GATEWAYENABLED:
+          break;

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV8 INS54 MOV8 MOV12 MOV12 MOV12 INS60 INS50 INS60 INS50 MOV60 MOV60 MOV60 MOV60 MOV60 MOV25 MOV21 INS70 MOV21 MOV21 INS70 MOV21 MOV21 INS60 INS50 MOV8 INS43 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS43 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 MOV44 INS42 MOV8 MOV44 INS42 INS8 INS43 INS59 INS42 INS49 MOV25 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV60 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV60 MOV21 MOV24 INS10 INS49 MOV60 MOV25 MOV21 MOV25 INS10 INS60 INS60 INS50 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS21 INS21 INS21 INS70 MOV60 MOV60 MOV60 MOV21 MOV21 MOV60 INS24 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 INS60 INS50 INS60 INS50 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS32 INS40 INS32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS60 INS50 INS43 INS59 INS27 MOV8 INS43 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV54 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV54 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV54 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV54 MOV21 INS10 INS49 MOV54 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV60 MOV21 MOV21 INS10 INS49 MOV25 INS10 INS32 INS32 INS32 MOV44 INS42 MOV8 MOV58 MOV27 MOV37 INS8 INS43 INS59 INS42 INS49 MOV60 MOV21 MOV24 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS43 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV32 INS43 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS42 INS42 MOV32 INS42 INS33 MOV21 INS50 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS38 INS22 INS42 INS42 INS40 INS42 INS42 INS11 INS42 INS42 INS11 MOV25 MOV60 INS60 INS50 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS32 INS42 INS32 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS49 MOV25 INS10 INS49 INS21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 INS21 INS10 MOV32 INS52 INS42 INS43 INS32 INS43 INS32 MOV32 INS8 INS43 INS59 INS42 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 INS49 MOV21 INS10 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS40 INS40 INS32 INS40 INS40 INS40 INS40 INS32 INS42 INS22 INS42 INS42 INS40 INS42 INS22 INS42 INS42 INS40 MOV21 MOV21 MOV60 MOV60 MOV21 MOV60 INS24 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 INS10 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 MOV58 MOV27 MOV37 INS8 MOV60 INS60 INS50 UPD42 MOV42 UPD42 MOV42 INS43 INS59 INS42 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS49 MOV21 MOV21 INS10 INS42 INS42 MOV32 INS40 INS40 INS40 INS40 INS40 INS40 INS40 MOV32 UPD42 MOV42 MOV42 UPD42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL40 DEL32 DEL33 DEL27 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL8 DEL8 DEL25 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL40 DEL32 DEL8 DEL40 DEL32 DEL8 DEL40 DEL32 DEL8 DEL40 DEL32 DEL8 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL40 DEL32 DEL8 DEL25 DEL24 DEL10 DEL25 DEL42 DEL70 DEL42 DEL70 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL8 DEL24 DEL8 DEL70 DEL8 DEL54 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL40 DEL40 DEL8 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL32 DEL42 DEL40 DEL32 DEL8 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25