GEODE-249: Retry on local node does not overwrite previously retrieved results

If a query on a remote node fails and buckets are determined to have moved to
the local node, a retry of the query is executed on the local node.  However
the code currently will overwrite any results the local node had already
correctly retrieved.

Added new junit test for PartitionedRegionQueryEvaluator and renamed existing
test to PartitionedRegionQueryEvaluatorIntegrationTest

-        processor = new StreamingQueryPartitionResponse(this.sys, n2b.keySet());
+        processor = createStreamingQueryPartitionResponse(this.sys, n2b);
-          Set notReceivedMembers = this.sys.getDistributionManager().putOutgoing(m);
+          Set notReceivedMembers = sendMessage(m);
+  protected Set sendMessage(DistributionMessage m) {
+    return this.sys.getDistributionManager().putOutgoing(m);
+  }
+
+  protected StreamingQueryPartitionResponse createStreamingQueryPartitionResponse(InternalDistributedSystem system,HashMap<InternalDistributedMember, List<Integer>> n2b) {
+    return new StreamingQueryPartitionResponse(system, n2b.keySet());
+  }
+
-  // (package access, and returns map for unit test purposes)
+  // (package access for unit test purposes)
-    final List allNodes = new ArrayList(this.pr.getRegionAdvisor().adviseDataStore());
+    final List allNodes = getAllNodes();
-          final Set owners = pr.getRegionAdvisor().getBucketOwners(bid.intValue());
+          final Set owners = getBucketOwners(bid);
+  protected Set<InternalDistributedMember> getBucketOwners(Integer bid) {
+    return pr.getRegionAdvisor().getBucketOwners(bid.intValue());
+  }
+
+  protected ArrayList getAllNodes() {
+    return new ArrayList(this.pr.getRegionAdvisor().adviseDataStore());
+  }
+
-        PRQueryProcessor qp = new PRQueryProcessor(this.pr, query, parameters, bucketList);
+        PRQueryProcessor qp = createLocalPRQueryProcessor(bucketList);
-        // Add results to the results-list.
-        this.resultsPerMember.put(me, resultCollector);
+        // Add results to the results-list.  If prior successfully completed
+        //results exist from previous executions on different buckets, add (to) those results as well.
+        MemberResultsList otherResults = (MemberResultsList)this.resultsPerMember.put(me, resultCollector);
+        if (otherResults != null) {
+          resultCollector.addAll(otherResults);
+        } 
+  protected PRQueryProcessor createLocalPRQueryProcessor(List<Integer> bucketList) {
+    return new PRQueryProcessor(this.pr, query, parameters, bucketList);
+  }
+

INS31 INS31 INS31 INS31 INS31 INS83 MOV43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 MOV43 INS42 INS44 INS8 INS43 INS42 INS41 INS42 INS43 INS42 INS74 INS42 INS41 INS43 INS43 INS43 INS42 INS41 INS42 INS41 INS74 INS42 INS41 INS42 MOV32 INS42 INS43 INS43 INS74 MOV14 INS42 INS42 INS42 MOV32 MOV14 INS43 INS43 MOV14 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS60 INS25 INS42 MOV22 INS42 INS43 INS43 INS43 INS59 INS27 INS8 INS42 INS32 INS42 INS32 INS42 INS42 INS11 INS42 INS33 MOV21 INS42 INS42 INS42 INS42 INS43 MOV32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42