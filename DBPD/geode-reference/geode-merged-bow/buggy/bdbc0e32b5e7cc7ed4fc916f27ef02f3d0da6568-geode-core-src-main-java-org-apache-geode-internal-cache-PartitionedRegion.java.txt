GEODE-4919: Update the PRConfig (#1666)

        * Before adding any gateway sender or AEQ now do the following
	* Assign buckets to the partition region
	* Update the PartitionRegionConfig for the region with the updated set of gateway senders
	* For Lucene reindex AEQs will be created at this point.
	* Mutators then add the gateway senders to the internal region attributes.
+import static java.util.stream.Collectors.toSet;
+  public void updatePRConfigWithNewSetOfGatewaySenders(Set<String> gatewaySendersToAdd) {
+    PartitionRegionHelper.assignBucketsToPartitions(this);
+    PartitionRegionConfig prConfig = this.prRoot.get(getRegionIdentifier());
+    prConfig.setGatewaySenderIds(gatewaySendersToAdd);
+    updatePRConfig(prConfig, false);
+  }
+
+  public void updatePRConfigWithNewGatewaySender(String aeqId) {
+    PartitionRegionHelper.assignBucketsToPartitions(this);
+    PartitionRegionConfig prConfig = this.prRoot.get(getRegionIdentifier());
+    Set<String> newGateWayIds;
+    if (prConfig.getGatewaySenderIds() != null) {
+      newGateWayIds = new HashSet<>(prConfig.getGatewaySenderIds());
+    } else {
+      newGateWayIds = new HashSet<>();
+    }
+    newGateWayIds.add(aeqId);
+    prConfig.setGatewaySenderIds(newGateWayIds);
+    updatePRConfig(prConfig, false);
+  }
+
-        validateParalleGatewaySenderIds();
+        validateParallelGatewaySenderIds();
-  public void validateParalleGatewaySenderIds() throws PRLocallyDestroyedException {
-    for (String senderId : this.getParallelGatewaySenderIds()) {
+  public void validateParallelGatewaySenderIds() throws PRLocallyDestroyedException {
+    validateParallelGatewaySenderIds(this.getParallelGatewaySenderIds());
+  }
+
+  /*
+   * filterOutNonParallelGatewaySenders takes in a set of gateway sender IDs and returns
+   * a set of parallel gateway senders present in the input set.
+   */
+  public Set<String> filterOutNonParallelGatewaySenders(Set<String> senderIds) {
+    Set<String> allParallelSenders = cache.getAllGatewaySenders().parallelStream()
+        .filter(GatewaySender::isParallel).map(GatewaySender::getId).collect(toSet());
+    Set<String> parallelSenders = new HashSet<>();
+    senderIds.parallelStream().forEach(gatewaySenderId -> {
+      if (allParallelSenders.contains(gatewaySenderId)) {
+        parallelSenders.add(gatewaySenderId);
+      }
+    });
+    return parallelSenders;
+  }
+
+  public void validateParallelGatewaySenderIds(Set<String> parallelGatewaySenderIds)
+      throws PRLocallyDestroyedException {
+    for (String senderId : parallelGatewaySenderIds) {
+          if (this.getFullPath().equals(config.getFullPath())) {
+            // The sender is already attached to this region
+            continue;
+          }
-

INS26 INS40 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS43 INS8 INS83 INS74 INS42 INS44 INS8 UPD42 INS44 INS74 INS42 INS21 INS60 INS21 INS21 INS43 INS42 INS21 INS60 INS60 INS25 INS21 INS21 INS21 INS42 INS21 INS43 INS43 INS74 INS42 INS60 INS60 INS21 INS41 INS74 INS42 INS43 INS43 INS32 INS43 INS59 INS32 INS32 INS42 INS32 INS43 INS59 INS74 INS59 INS27 INS8 INS8 INS32 INS32 INS32 INS32 INS42 INS42 INS43 INS43 INS74 INS59 INS74 INS59 INS32 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS52 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 MOV32 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS32 INS42 INS86 INS42 INS42 INS22 INS42 INS32 INS22 INS42 INS32 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS74 INS42 INS42 INS59 INS8 INS52 INS42 INS42 INS52 INS42 INS42 INS42 INS14 INS42 INS14 INS32 INS42 INS90 INS42 INS43 INS42 INS25 INS74 INS32 INS74 INS32 INS42 INS90 INS42 INS42 INS42 INS32 INS8 INS43 INS42 INS42 INS43 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS25 INS42 INS42 INS42 INS42 INS32 INS32 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS18 INS52 INS42 INS42 INS42