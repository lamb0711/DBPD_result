GEODE-2404: Added gfsh support for destroying a lucene index

+import org.apache.geode.internal.Version;
+import org.apache.geode.internal.VersionedDataSerializable;
-import org.apache.geode.DataSerializable;
-public class XmlEntity implements DataSerializable {
+public class XmlEntity implements VersionedDataSerializable {
+  private String childPrefix;
+
+  private String childNamespace;
+
+    initializeSearchString(parentKey, parentValue, this.prefix, childKey, childValue);
+    // no init();
+  }
+
+  /****
+   * Construct a new XmlEntity while creating Xml from the cache using the element which has
+   * attributes matching those given
+   *
+   * @param parentType Parent type of the XML element to search for. Should be one of the constants
+   *        from the {@link CacheXml} class. For example, CacheXml.REGION.
+   *
+   * @param parentKey Identifier for the parent elements such "name/id"
+   * @param parentValue Value of the identifier
+   * @param childPrefix Namespace prefix for the child element such as "lucene"
+   * @param childNamespace Namespace for the child element such as
+   *        "http://geode.apache.org/schema/lucene"
+   * @param childType Child type of the XML element to search for within the parent . Should be one
+   *        of the constants from the {@link CacheXml} class. For example, CacheXml.INDEX.
+   * @param childKey Identifier for the child element such as "name/id"
+   * @param childValue Value of the child element identifier
+   */
+  public XmlEntity(final String parentType, final String parentKey, final String parentValue,
+      final String childPrefix, final String childNamespace, final String childType,
+      final String childKey, final String childValue) {
+    // Note: Do not invoke init
+    this.parentType = parentType;
+    this.type = childType;
+    this.childPrefix = childPrefix;
+    this.childNamespace = childNamespace;
+    initializeSearchString(parentKey, parentValue, childPrefix, childKey, childValue);
+  }
+
+  private void initializeSearchString(final String parentKey, final String parentValue,
+      final String childPrefix, final String childKey, final String childValue) {
-    sb.append("//").append(prefix).append(':').append(parentType);
+    sb.append("//").append(this.prefix).append(':').append(this.parentType);
-    sb.append("/").append(prefix).append(':').append(childType);
+    sb.append("/").append(childPrefix).append(':').append(this.type);
-
-    // no init();
-
+  /**
+   * Gets the prefix for the child element.
+   *
+   * @return XML element prefix for the child element
+   */
+  public String getChildPrefix() {
+    return this.childPrefix;
+  }
+
+  /**
+   * Gets the namespace for the child element.
+   * 
+   * @return XML element namespace for the child element
+   */
+  public String getChildNamespace() {
+    return this.childNamespace;
+  }
+
+    toDataPre_GFE_9_1_0_0(out);
+    DataSerializer.writeString(this.childPrefix, out);
+    DataSerializer.writeString(this.childNamespace, out);
+  }
+
+  public void toDataPre_GFE_9_1_0_0(DataOutput out) throws IOException {
+    fromDataPre_GFE_9_1_0_0(in);
+    this.childPrefix = DataSerializer.readString(in);
+    this.childNamespace = DataSerializer.readString(in);
+  }
+
+  public void fromDataPre_GFE_9_1_0_0(DataInput in) throws IOException, ClassNotFoundException {
+  @Override
+  public Version[] getSerializationVersions() {
+    return new Version[] {Version.GFE_91};
+  }
+

MOV26 INS26 INS40 UPD40 UPD43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD42 INS83 INS43 INS59 INS83 INS43 INS59 MOV29 INS83 INS42 MOV44 INS44 INS44 MOV44 INS44 INS44 INS8 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 UPD83 INS39 UPD42 INS44 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 MOV78 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 MOV78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 UPD42 INS78 INS83 INS5 INS42 INS8 INS42 INS42 INS42 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 MOV21 MOV21 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS83 INS43 INS42 INS65 INS65 INS42 INS41 INS65 INS65 INS42 INS41 INS43 INS42 INS42 INS21 INS21 INS21 INS43 INS42 INS42 INS42 INS21 INS21 INS21 INS42 INS43 INS85 INS41 INS42 INS42 INS42 INS42 INS32 INS66 INS66 INS42 INS66 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 INS32 INS42 INS66 INS66 INS22 INS66 INS66 INS22 INS42 INS32 INS32 INS32 INS42 INS32 INS7 INS7 INS42 INS3 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS22 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS22 INS32 INS22 INS32 INS5 INS4 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS43 INS85 INS40 INS22 UPD42 INS42 INS52 INS42 DEL42 DEL42 DEL42