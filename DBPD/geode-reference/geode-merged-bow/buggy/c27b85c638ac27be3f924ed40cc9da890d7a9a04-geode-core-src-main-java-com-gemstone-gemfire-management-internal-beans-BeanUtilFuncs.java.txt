GEODE-420: Initial Alias defintion and removal of deprecated SSL-ENABLED properties

+
+import java.io.BufferedReader;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.RandomAccessFile;
+import java.util.Set;
+import java.util.zip.GZIPInputStream;
+import java.util.zip.GZIPOutputStream;
+
-import java.io.*;
-import java.util.Set;
-import java.util.zip.GZIPInputStream;
-import java.util.zip.GZIPOutputStream;
-
- * 
- * 
-   * 
-      throws IOException {
+    throws IOException
+  {
-        : new byte[(int) fileLength];
+      : new byte[(int) fileLength];
-      } else {
+      }
+      else {
-  
- 
- 
+
-   * 
-  
+
-      String memberNameOrId) {
+    String memberNameOrId)
+  {
-            || memberNameOrId.equals(member.getName())) {
+          || memberNameOrId.equals(member.getName())) {
-  
+
-        .getHostAddress());
+      .getHostAddress());
-        .getAbsolutePath());
+      .getAbsolutePath());
-        .getStatisticSamplingEnabled());
+      .getStatisticSamplingEnabled());
-        .getStatisticArchiveFile().getAbsolutePath());
+      .getStatisticArchiveFile().getAbsolutePath());
-        .getAckSevereAlertThreshold());
+      .getAckSevereAlertThreshold());
-        .getArchiveFileSizeLimit());
+      .getArchiveFileSizeLimit());
-        .getArchiveDiskSpaceLimit());
+      .getArchiveDiskSpaceLimit());
-    gemFirePropertyData.setSslEnabled(config.getSSLEnabled());
-    gemFirePropertyData.setSslCiphers(config.getSSLCiphers());
-    gemFirePropertyData.setSslProtocols(config.getSSLProtocols());
-    gemFirePropertyData.setSslRequireAuthentication(config
-        .getSSLRequireAuthentication());
-    
-    
+
-    
+
-    
+
-    
+
-    
+
-        .getByteAllowance());
+      .getByteAllowance());
-        .getRechargeThreshold());
+      .getRechargeThreshold());
-        .getRechargeBlockMs());
+      .getRechargeBlockMs());
-        .getEnableTimeStatistics());
+      .getEnableTimeStatistics());
-        .getEnableNetworkPartitionDetection());
+      .getEnableNetworkPartitionDetection());
-        .getMaxWaitTimeForReconnect());
+      .getMaxWaitTimeForReconnect());
-        .getMaxNumReconnectTries());
+      .getMaxNumReconnectTries());
-        .getAsyncDistributionTimeout());
+      .getAsyncDistributionTimeout());
-        .getDurableClientTimeout());
+      .getDurableClientTimeout());
-        .getSecurityClientAuthInit());
+      .getSecurityClientAuthInit());
-        .getSecurityClientAuthenticator());
+      .getSecurityClientAuthenticator());
-        .getSecurityClientDHAlgo());
+      .getSecurityClientDHAlgo());
-        .getSecurityPeerAuthInit());
+      .getSecurityPeerAuthInit());
-        .getSecurityPeerAuthenticator());
+      .getSecurityPeerAuthenticator());
-        .getSecurityClientAccessor());
+      .getSecurityClientAccessor());
-        .getSecurityClientAccessorPP());
+      .getSecurityClientAccessorPP());
-        .getAbsolutePath());
+      .getAbsolutePath());
-        .getSecurityPeerMembershipTimeout());
+      .getSecurityPeerMembershipTimeout());
-        .getRemoveUnresponsiveClient());
+      .getRemoveUnresponsiveClient());
-    gemFirePropertyData.setJmxManagerSSL(config.getJmxManagerSSL());
-  
+
-   * 
-   * @param str
-   *          String to be compressed.
+   * @param str String to be compressed.
-   * 
-   * @param bytes
-   *          bytes to be decompressed
+   * @param bytes bytes to be decompressed
-    BufferedReader bf = new BufferedReader(new InputStreamReader(gis,"UTF-8"));
+    BufferedReader bf = new BufferedReader(new InputStreamReader(gis, "UTF-8"));
-  
+

MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 UPD66 UPD66 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21