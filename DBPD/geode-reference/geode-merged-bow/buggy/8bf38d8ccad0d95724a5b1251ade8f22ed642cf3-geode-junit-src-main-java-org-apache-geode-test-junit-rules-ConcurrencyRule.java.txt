GEODE-5684: refactor callAndValidate

* rename flag from outcomeSet to expectedResultIsSet
* refactor callAndValidate to use try/catch blocks for checking expected
results and exceptions and throwing up assertion errors to the error
collector, for the purpose of readability and reducing repetition.

-import static org.assertj.core.api.Assertions.catchThrowable;
-    private Boolean outcomeSet;
+    private Boolean expectedResultIsSet;
-      this.outcomeSet = false;
+      this.expectedResultIsSet = false;
-      this.outcomeSet = false;
+      this.expectedResultIsSet = false;
-      if (outcomeSet) {
+      if (expectedResultIsSet) {
-      this.outcomeSet = true;
+      this.expectedResultIsSet = true;
-      this.outcomeSet = true;
+      this.expectedResultIsSet = true;
-      this.outcomeSet = true;
+      this.expectedResultIsSet = true;
-      if (this.outcomeSet) {
+      if (this.expectedResultIsSet) {
-      this.outcomeSet = true;
+      this.expectedResultIsSet = true;
-      if (expectedValue != null) {
-        assertThat(this.callable.call()).isEqualTo(this.expectedValue);
-      } else if (expectedException != null) {
-        Throwable thrown = catchThrowable(() -> this.callable.call());
-        checkThrown(this.expectedException, thrown);
-      } else if (expectedExceptionType != null && expectedExceptionCauseType != null) {
-        Throwable thrown = catchThrowable(() -> this.callable.call());
-        assertThat(thrown).isInstanceOf(expectedExceptionType)
-            .hasCauseInstanceOf(expectedExceptionCauseType);
-      } else if (expectedExceptionType != null) {
-        Throwable thrown = catchThrowable(() -> this.callable.call());
-        assertThat(thrown).isInstanceOf(this.expectedExceptionType);
-      } else if (expectedExceptionCauseType != null) {
-        Throwable thrown = catchThrowable(() -> this.callable.call());
-        assertThat(thrown.getCause()).isInstanceOf(this.expectedExceptionCauseType);
-      } else {
-        this.callable.call();
+      Exception exception = null;
+
+      try {
+        T retVal = this.callable.call();
+
+        if (this.expectedValue != null) {
+          assertThat(retVal).isEqualTo(this.expectedValue);
+        }
+      } catch (Exception e) {
+        exception = e;
+
+      if (this.expectedExceptionCauseType != null && this.expectedExceptionType != null) {
+        assertThat(exception).isInstanceOf(this.expectedExceptionType)
+            .hasCauseInstanceOf(this.expectedExceptionCauseType);
+      } else if (this.expectedExceptionType != null) {
+        assertThat(exception).isInstanceOf(this.expectedExceptionType);
+      } else if (this.expectedExceptionCauseType != null) {
+        assertThat(exception).hasCauseInstanceOf(this.expectedExceptionCauseType);
+      } else if (this.expectedException != null) {
+        checkThrown(exception, this.expectedException);
+      } else {
+        if (exception != null) {
+          throw exception; // rethrow if we weren't expecting any exception and got one
+        }
+      }
+
-    private void checkThrown(Throwable expected, Throwable actual) {
+    private void checkThrown(Throwable actual, Throwable expected) {
-        checkThrown(expected.getCause(), actual.getCause());
+        checkThrown(actual.getCause(), expected.getCause());

MOV44 UPD42 INS60 INS54 INS25 UPD42 INS43 INS59 INS8 INS12 MOV27 MOV8 MOV25 UPD42 INS42 INS42 INS33 INS60 INS25 INS44 INS8 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 INS59 MOV27 MOV8 INS43 INS42 MOV21 INS22 INS22 INS22 INS25 MOV32 INS42 INS42 MOV32 INS22 UPD42 MOV42 INS7 INS52 INS42 INS52 INS42 INS22 INS52 INS42 INS22 INS27 MOV8 INS8 INS52 INS42 INS42 INS42 INS22 INS52 INS42 INS52 INS42 MOV22 INS33 INS25 UPD42 INS52 INS42 UPD42 UPD42 INS27 INS8 INS42 UPD42 MOV42 INS42 INS42 INS42 INS33 INS53 UPD42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL86 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL86 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL86 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL33 DEL27 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL86 DEL32 DEL59 DEL60 DEL8 DEL25 DEL25 DEL25