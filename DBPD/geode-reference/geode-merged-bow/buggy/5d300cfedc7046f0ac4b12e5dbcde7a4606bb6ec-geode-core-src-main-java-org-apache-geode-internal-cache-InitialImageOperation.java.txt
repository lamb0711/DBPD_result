GEODE-6802: Execute region synchronization on newly joined member. (#3623)

 * Region sync will be invoked to avoid data inconsistency on a newly joined/restarted member
   if it received a region synchronization request from other members due to timed task.
 * Use a flag in RegionVersionHolder to ensure only one such call is executed.
 * Make sure RVV exception is filled for persistent member requesting region sync. (This may
   leads to CommitConflictException on some transactions on persistent regions due to this
   region sync operation. But it should be rare and is acceptable compared to data inconsistency
   issue.)

-
+      DistributedRegion targetRegion = null;
+        if (lostMemberID != null) {
+          targetRegion = rgn;
+        }
+        if (lostMemberID != null && targetRegion != null) {
+          if (lostMemberVersionID == null) {
+            lostMemberVersionID = lostMemberID;
+          }
+          // check to see if the region in this cache needs to synchronize with others
+          // it is possible that the cache is recover/restart of a member and not
+          // scheduled to synchronize with others
+          synchronizeIfNotScheduled(targetRegion, lostMemberID, lostMemberVersionID);
+        }
+
+    /**
+     * If there is no region sync scheduled after checking region version holder holding the
+     * lost member. Region sync requests are sent to members hosting the region.
+     * This is only executed when processing region sync requests from other members hosting the
+     * region.
+     * Region sync is triggered by a member departed event. If this member exists during the
+     * event, region sync would be scheduled. This method is only handles the case when
+     * node is recently joining the cluster or restarted, and does not get the member departed
+     * event.
+     */
+    void synchronizeIfNotScheduled(DistributedRegion region,
+        InternalDistributedMember lostMember, VersionSource lostVersionSource) {
+      if (region.setRegionSynchronizedWithIfNotScheduled(lostVersionSource)) {
+        // if region synchronization has not been scheduled or performed,
+        // we do synchronization with others right away as we received the synchronization request
+        // indicating timed task has been triggered on other nodes
+        region.synchronizeForLostMember(lostMember, lostVersionSource);
+      }
+    }

INS31 INS29 INS39 INS42 INS44 INS44 INS44 INS8 INS60 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS43 INS59 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS32 INS8 INS42 INS42 INS33 INS25 INS25 INS42 INS42 INS42 INS21 INS27 INS8 INS27 INS8 INS32 INS42 INS33 INS21 INS27 INS27 INS25 INS21 INS42 INS42 INS42 INS42 INS7 INS42 INS33 INS42 INS33 INS27 INS8 INS32 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS7 INS42 INS42