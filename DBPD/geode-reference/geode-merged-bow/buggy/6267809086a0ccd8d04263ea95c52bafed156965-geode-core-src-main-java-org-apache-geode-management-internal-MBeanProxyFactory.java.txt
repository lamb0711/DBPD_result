GEODE-3290: Removed effectively-dead classes FilterChain, LocalFilterChain, and RemoteFilterChain.

* this closes #653

-  /**
-   * For Future release
-   */
-  private RemoteFilterChain remoteFilterChain;
-   * 
-   * @param remoteFilterChain remote chain to filter out remote members
-  public MBeanProxyFactory(RemoteFilterChain remoteFilterChain, MBeanJMXAdapter jmxAdapter,
-      SystemManagementService service) {
+  public MBeanProxyFactory(MBeanJMXAdapter jmxAdapter, SystemManagementService service) {
-    this.remoteFilterChain = remoteFilterChain;
-   * @throws ManagementException
-      /*
-       * Check the complete filter chain to evaluate the applicability of the MBean
-       */
-
-      if (remoteFilterChain.isFiltered(objectName, member, "")) {
-        if (logger.isTraceEnabled()) {
-          logger.trace("Returning from filter");
-        }
-
-        return;
-      }
-
-    } catch (ClassNotFoundException e) {
+    } catch (ClassNotFoundException | IntrospectionException e) {
-    } catch (IntrospectionException e) {
-      throw new ManagementException(e);
-    } catch (ManagementException e) {
-      throw e;
-    /*
-     * Check for member and server group filters if the member is filtered no need to proceed
-     * further
-     */
-
-    if (remoteFilterChain.isServerGroupFiltered("")) {
-      if (logger.isTraceEnabled()) {
-        logger.trace("Returning from server group filter");
-      }
-      return;
-
-    }
-    if (remoteFilterChain.isManagedNodeFiltered(member)) {
-      if (logger.isTraceEnabled()) {
-        logger.trace("returning from managed node filter");
-      }
-      return;
-    }
-    Iterator<String> it = mbeanNames.iterator();
-
-    while (it.hasNext()) {
+    for (String mbeanName : mbeanNames) {
-      /*
-       * This is for MBean filter check. If filtered MBean wont be registered
-       */
-
-      if (remoteFilterChain.isRemoteMBeanFiltered(objectName)) {
-        if (logger.isTraceEnabled()) {
-          logger.trace("continue  from remote MBEan node filter");
-        }
-
-        continue;
-      }
-        objectName = ObjectName.getInstance(it.next());
+        objectName = ObjectName.getInstance(mbeanName);
-      } catch (ManagementException e) {
-        logger.warn("Create Proxy failed for {} with exception {}", objectName, e.getMessage(), e);
-        continue;
-        continue;
-      Object val = null;
+      Object val;
-        continue;
-      if (!remoteFilterChain.isRemoteMBeanFiltered(objectName)) {
-        ProxyInfo proxyInfo = proxyRepo.findProxyInfo(objectName);
-        proxyRepo.removeProxy(member, objectName);
-        if (proxyInfo != null) {
-          service.afterRemoveProxy(objectName, proxyInfo.getProxyInterface(),
-              proxyInfo.getProxyInstance(), (FederationComponent) oldVal);
-        }
-        jmxAdapter.unregisterMBean(objectName);
-        if (logger.isDebugEnabled()) {
-          logger.debug("Removed proxy for ObjectName: {}", objectName);
-        }
+      ProxyInfo proxyInfo = proxyRepo.findProxyInfo(objectName);
+      proxyRepo.removeProxy(member, objectName);
+      if (proxyInfo != null) {
+        service.afterRemoveProxy(objectName, proxyInfo.getProxyInterface(),
+            proxyInfo.getProxyInstance(), (FederationComponent) oldVal);
+      }
+      jmxAdapter.unregisterMBean(objectName);
+
+      if (logger.isDebugEnabled()) {
+        logger.debug("Removed proxy for ObjectName: {}", objectName);

MOV8 INS70 INS54 INS44 INS42 MOV8 MOV8 MOV12 MOV43 INS42 MOV25 INS84 MOV43 MOV43 MOV44 MOV42 UPD42 MOV42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL65 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL41 DEL8 DEL25 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL18 DEL8 DEL25 DEL42 DEL32 DEL18 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL18 DEL8 DEL12 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL61 DEL33 DEL18 DEL42 DEL32 DEL54 DEL8