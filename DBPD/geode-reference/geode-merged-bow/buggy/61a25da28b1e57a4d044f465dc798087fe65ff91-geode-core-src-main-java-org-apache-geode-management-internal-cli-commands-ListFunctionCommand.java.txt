GEODE-5971: Refactoring various commands (#3294)

* GEODE-5971: Refactoring various commands

- DeployCommand
- DestroyFunctionCommand
- ExecuteFunctionCommand
- ListDeployedCommand
- ListFunctionCommand
- UndeployCommand

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

-import org.apache.geode.SystemFailure;
-import org.apache.geode.cache.execute.ResultCollector;
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.CliUtil;
+import org.apache.geode.management.cli.GfshCommand;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-public class ListFunctionCommand extends InternalGfshCommand {
+public class ListFunctionCommand extends GfshCommand {
-  public Result listFunction(
+  public ResultModel listFunction(
-    TabularResultData tabularData = ResultBuilder.createTabularResultData();
-    boolean accumulatedData = false;
-
-      return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-    try {
-      ResultCollector<?, ?> rc =
-          CliUtil.executeFunction(this.listFunctionFunction, new Object[] {matches}, targetMembers);
-      List<CliFunctionResult> results = CliFunctionResult.cleanResults((List<?>) rc.getResult());
+    List<CliFunctionResult> results = executeAndGetFunctionResult(this.listFunctionFunction,
+        new Object[] {matches}, targetMembers);
-      for (CliFunctionResult result : results) {
-        if (result.getThrowable() != null) {
-          tabularData.accumulate("Member", result.getMemberIdOrName());
-          tabularData.accumulate("Function", "<ERROR: " + result.getThrowable().getMessage() + ">");
-          accumulatedData = true;
-          tabularData.setStatus(Result.Status.ERROR);
-        } else if (result.isSuccessful()) {
-          String[] strings = (String[]) result.getSerializables();
-          Arrays.sort(strings);
-          for (String string : strings) {
-            tabularData.accumulate("Member", result.getMemberIdOrName());
-            tabularData.accumulate("Function", string);
-            accumulatedData = true;
-          }
-        }
+    ResultModel result = new ResultModel();
+    TabularResultModel tabularData = result.addTable("functions");
+    for (CliFunctionResult cliResult : results) {
+      String[] strings = ((Set<String>) cliResult.getResultObject()).toArray(new String[0]);
+      Arrays.sort(strings);
+      for (String string : strings) {
+        tabularData.accumulate("Member", cliResult.getMemberIdOrName());
+        tabularData.accumulate("Function", string);
-
-      if (!accumulatedData) {
-        return ResultBuilder
-            .createInfoResult(CliStrings.LIST_FUNCTION__NO_FUNCTIONS_FOUND_ERROR_MESSAGE);
-      }
-      return ResultBuilder.buildResult(tabularData);
-    } catch (VirtualMachineError e) {
-      SystemFailure.initiateFailure(e);
-      throw e;
-    } catch (Throwable th) {
-      SystemFailure.checkFailure();
-      return ResultBuilder.createGemFireErrorResult(
-          "Exception while attempting to list functions: " + th.getMessage());
+
+    if (tabularData.getRowSize() == 0) {
+      return ResultModel.createInfo(CliStrings.LIST_FUNCTION__NO_FUNCTIONS_FOUND_ERROR_MESSAGE);
+    }
+    return result;
+

UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 MOV8 UPD42 MOV60 INS25 INS60 INS60 MOV32 INS8 UPD74 INS43 INS59 INS43 INS59 MOV8 INS27 INS42 INS41 MOV43 UPD43 UPD42 UPD42 MOV42 UPD42 MOV42 INS14 INS42 INS42 INS32 UPD42 INS32 INS34 INS32 UPD42 UPD42 INS43 UPD42 MOV42 UPD42 MOV42 INS45 MOV5 INS42 INS42 INS42 INS42 INS40 INS42 INS32 UPD42 UPD42 INS36 INS42 INS3 INS11 MOV5 INS34 INS74 MOV32 UPD42 INS43 INS43 UPD42 UPD42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL76 DEL76 DEL42 DEL42 DEL42 DEL42 DEL43 DEL76 DEL74 DEL32 DEL11 DEL32 DEL59 DEL60 DEL11 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL25 DEL25 DEL8 DEL42 DEL38 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL41 DEL8 DEL12 DEL54 DEL8