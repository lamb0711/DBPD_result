GEODE-3096: pulling in refactoring work on HttpOperationInvoker

* Use HttpOperationInvoker to replace RestHttpOperationInvoker and SimpleHttpOperationInvoker
* Use one single ShellCommandController to replace all command controllers
* do not allow execution of commands that require client side file data gathering to be executed only on the locator/server
* deprecate CommandService and CommandStatement
* simplify CommandRequest, delete geode's ClientHttpRequest
* fix tests

+import org.apache.commons.lang.StringUtils;
-import org.apache.geode.SystemFailure;
-    try {
-      ResultCollector<?, ?> rc =
-          CliUtil.executeFunction(this.exportConfigFunction, null, targetMembers);
-      List<CliFunctionResult> results = CliFunctionResult.cleanResults((List<?>) rc.getResult());
+    ResultCollector<?, ?> rc =
+        CliUtil.executeFunction(this.exportConfigFunction, null, targetMembers);
+    List<CliFunctionResult> results = CliFunctionResult.cleanResults((List<?>) rc.getResult());
-      for (CliFunctionResult result : results) {
-        if (result.getThrowable() != null) {
-          infoData.addLine(CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__EXCEPTION,
-              result.getMemberIdOrName(), result.getThrowable()));
-        } else if (result.isSuccessful()) {
-          String cacheFileName = result.getMemberIdOrName() + "-cache.xml";
-          String propsFileName = result.getMemberIdOrName() + "-gf.properties";
-          String[] fileContent = (String[]) result.getSerializables();
-          infoData.addAsFile(cacheFileName, fileContent[0], "Downloading Cache XML file: {0}",
-              false);
-          infoData.addAsFile(propsFileName, fileContent[1], "Downloading properties file: {0}",
-              false);
-        }
+    for (CliFunctionResult result : results) {
+      if (result.getThrowable() != null) {
+        infoData.addLine(CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__EXCEPTION,
+            result.getMemberIdOrName(), result.getThrowable()));
+      } else if (result.isSuccessful()) {
+        String cacheFileName = result.getMemberIdOrName() + "-cache.xml";
+        String propsFileName = result.getMemberIdOrName() + "-gf.properties";
+        String[] fileContent = (String[]) result.getSerializables();
+        infoData.addAsFile(cacheFileName, fileContent[0], "Downloading Cache XML file: {0}", false);
+        infoData.addAsFile(propsFileName, fileContent[1], "Downloading properties file: {0}",
+            false);
-      return ResultBuilder.buildResult(infoData);
-    } catch (VirtualMachineError e) {
-      SystemFailure.initiateFailure(e);
-      throw e;
-    } catch (Throwable th) {
-      SystemFailure.checkFailure();
-      th.printStackTrace(System.err);
-      return ResultBuilder
-          .createGemFireErrorResult(CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__EXCEPTION,
-              th.getClass().getName() + ": " + th.getMessage()));
+    return ResultBuilder.buildResult(infoData);
+
-      dir = (dir == null) ? null : dir.trim();
-
-      File saveDirFile = new File(".");
-      if (dir != null && !dir.isEmpty()) {
-        saveDirFile = new File(dir);
-        if (saveDirFile.exists()) {
-          if (!saveDirFile.isDirectory())
-            return ResultBuilder.createGemFireErrorResult(
-                CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__NOT_A_DIRECTORY, dir));
-        } else if (!saveDirFile.mkdirs()) {
-          return ResultBuilder.createGemFireErrorResult(
-              CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__CANNOT_CREATE_DIR, dir));
-        }
+      if (StringUtils.isBlank(dir)) {
+        saveDirString = new File(".").getAbsolutePath();
+        return ResultBuilder.createInfoResult("OK");
+
+      File saveDirFile = new File(dir.trim());
+
+      if (!saveDirFile.exists() && !saveDirFile.mkdirs()) {
+        return ResultBuilder.createGemFireErrorResult(
+            CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__CANNOT_CREATE_DIR, dir));
+      }
+
+      if (!saveDirFile.isDirectory()) {
+        return ResultBuilder.createGemFireErrorResult(
+            CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__NOT_A_DIRECTORY, dir));
+      }
+

MOV26 UPD40 MOV8 MOV60 MOV60 MOV25 INS25 INS60 MOV25 MOV25 INS32 INS8 MOV43 INS59 INS27 INS8 INS42 INS42 INS42 INS21 INS41 INS42 INS14 INS38 MOV38 MOV41 INS7 INS32 MOV43 MOV32 MOV32 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS45 MOV14 INS42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL32 DEL41 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL33 DEL27 DEL36 DEL33 DEL16 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL32 DEL38 DEL27 DEL42 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25