GEODE-4096: Fixed race condition for connection global variable

	* Information on how the race condition occurs is provided in the GEODE-4096 ticket.
	* getConnection before returning null and clearing out the global variable connection calls stop on the dispatcher.
	* This makes sure that AckReaderThreads for the dispatcher is shutdown and prevents lingering threads holding the connection life cycle lock.

-  private final AbstractGatewaySenderEventProcessor processor;
+  protected final AbstractGatewaySenderEventProcessor processor;
+  void setAckReaderThread(AckReaderThread ackReaderThread) {
+    this.ackReaderThread = ackReaderThread;
+  }
+
+
+  GatewaySenderEventRemoteDispatcher(AbstractGatewaySenderEventProcessor processor,
+      Connection connection) {
+    this.processor = processor;
+    this.sender = processor.getSender();
+    this.connection = connection;
+  }
+
+      stop();
-      ackReaderThread.shutDownAckReaderConnection();
+      ackReaderThread.shutDownAckReaderConnection(connection);
+    boolean isShutdown() {
+      return shutdown;
+    }
+
-        shutDownAckReaderConnection();
+        shutDownAckReaderConnection(conn);
-    private void shutDownAckReaderConnection() {
+    private void shutDownAckReaderConnection(Connection connection) {
-      ackReaderThread.shutDownAckReaderConnection();
+      ackReaderThread.shutDownAckReaderConnection(connection);

INS31 INS31 UPD83 INS39 INS42 INS44 INS8 INS42 INS44 INS44 INS8 INS31 INS43 INS42 INS21 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS39 INS42 INS8 INS44 INS42 INS7 INS42 INS42 INS7 INS7 INS7 INS41 INS43 INS42 INS22 INS42 INS22 INS42 INS22 INS32 INS22 INS42 INS21 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS42