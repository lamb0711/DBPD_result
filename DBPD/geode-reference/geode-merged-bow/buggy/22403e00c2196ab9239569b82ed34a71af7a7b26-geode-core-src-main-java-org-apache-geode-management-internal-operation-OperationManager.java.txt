GEODE-7799: Distribute rebalance status to other locators (#4692)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>

-import java.util.Date;
-import java.util.UUID;
-import java.util.concurrent.ExecutorService;
-import org.apache.geode.management.internal.operation.OperationHistoryManager.OperationInstance;
-  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationInstance<A, V> submit(
+  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationState<A, V> submit(
-    String opId = UUID.randomUUID().toString();
-
-    CompletableFuture<V> future =
-        CompletableFuture.supplyAsync(() -> performer.apply(cache, op), executor);
+    String opId = historyManager.recordStart(op);
-    OperationInstance<A, V> inst = new OperationInstance<>(future, opId, op, new Date());
+    CompletableFuture.supplyAsync(() -> performer.apply(cache, op), executor)
+        .whenComplete((result, exception) -> {
+          Throwable cause = exception == null ? null : exception.getCause();
+          historyManager.recordEnd(opId, result, cause);
+        });
-    // save the Future so we can check on it later
-    return historyManager.save(inst);
+    return historyManager.get(opId);
-    Class<? extends ClusterManagementOperation> aClass = op.getClass();
-
-    if (op instanceof TaggedWithOperator
-        && ClusterManagementOperation.class.isAssignableFrom(aClass.getSuperclass())) {
-      aClass = (Class<? extends ClusterManagementOperation>) aClass.getSuperclass();
-    }
-
-    return performers.get(aClass);
+    return performers.get(op.getClass());
-  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationInstance<A, V> getOperationInstance(
+  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationState<A, V> get(
-    return historyManager.getOperationInstance(opId);
+    return historyManager.get(opId);
-  public <A extends ClusterManagementOperation<V>, V extends OperationResult> List<OperationInstance<A, V>> listOperationInstances(
+  public <A extends ClusterManagementOperation<V>, V extends OperationResult> List<OperationState<A, V>> list(
-    return historyManager.listOperationInstances(opType);
+    return historyManager.list(opType);
-  public void close() {
-    if (executor instanceof ExecutorService) {
-      ((ExecutorService) executor).shutdownNow();
-    }
-  }
+  public void close() {}

UPD74 MOV60 UPD74 MOV74 UPD42 UPD74 UPD42 INS8 UPD43 INS21 UPD43 UPD74 MOV74 UPD42 INS32 UPD42 UPD43 MOV32 INS42 INS86 UPD42 UPD42 MOV32 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 INS59 INS59 INS8 INS42 INS42 INS60 INS21 INS43 INS59 INS32 UPD42 MOV42 UPD42 MOV42 INS16 INS42 INS42 INS42 INS42 INS42 INS27 INS33 INS32 INS42 INS33 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL32 DEL42 DEL43 DEL43 DEL74 DEL59 DEL60 DEL42 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL43 DEL14 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL57 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8