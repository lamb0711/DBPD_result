GEODE-6283: have the management rest controller call the internal management service

* GEODE-6283: have the management rest controller call the internal cluster management service to actually create the region

* inject cluster management service to the rest controller
* have the controller produce json string for response
* refactor the controller exception handler to always send back json string

+import org.apache.commons.lang3.tuple.ImmutablePair;
+import org.apache.commons.lang3.tuple.Pair;
+import org.eclipse.jetty.webapp.WebAppContext;
+import org.apache.geode.internal.GemFireVersion;
+import org.apache.geode.management.internal.AgentUtil;
+import org.apache.geode.management.internal.JettyHelper;
+import org.apache.geode.management.internal.ManagementAgent;
+import org.apache.geode.management.internal.SystemManagementService;
+  private WebAppContext managementWebapp;
-    startSharedConfigurationService();
-    clusterManagementService = new LocatorClusterManagementService(locator.myCache,
-        locator.configurationPersistenceService);
+    startClusterManagementService();
+  }
+
+  private void startClusterManagementService() {
+    startConfigurationPersistenceService();
+
+    if (myCache == null) {
+      return;
+    }
+
+    clusterManagementService =
+        new LocatorClusterManagementService(locator.myCache.getDistributionManager(),
+            locator.configurationPersistenceService);
+
+    // start management rest service
+    AgentUtil agentUtil = new AgentUtil(GemFireVersion.getGemFireVersion());
+    // Find the V2 Management rest WAR file
+    final String gemfireManagementWar = agentUtil.findWarLocation("geode-web-management");
+    if (gemfireManagementWar == null) {
+      logger.info(
+          "Unable to find GemFire V2 Management REST API WAR file; the Management REST Interface for Geode will not be accessible.");
+      return;
+    }
+
+    ManagementAgent managementAgent =
+        ((SystemManagementService) SystemManagementService.getExistingManagementService(myCache))
+            .getManagementAgent();
+
+    if (managementAgent == null) {
+      logger.info(
+          "management service needs to be started for ClusterManagementService to be running.");
+      return;
+    }
+
+    Pair<String, Object> securityServiceAttr =
+        new ImmutablePair<>(JettyHelper.SECURITY_SERVICE_SERVLET_CONTEXT_PARAM,
+            myCache.getSecurityService());
+    Pair<String, Object> cmServiceAttr =
+        new ImmutablePair<>(JettyHelper.CLUSTER_MANAGEMENT_SERVICE_CONTEXT_PARAM,
+            clusterManagementService);
+    managementWebapp =
+        managementAgent
+            .addWebApplication("/geode-management", gemfireManagementWar, securityServiceAttr,
+                cmServiceAttr);
+    // stop the managementwebapp
+    if (managementWebapp != null) {
+      try {
+        managementWebapp.stop();
+      } catch (Exception e) {
+        logger.error("unable to stop the management webapp.", e);
+      }
+    }
+
+
-        startSharedConfigurationService();
+        startClusterManagementService();
-      this.clusterManagementService = new LocatorClusterManagementService(this.myCache,
-          this.configurationPersistenceService);
-  private void startSharedConfigurationService() {
+  private void startConfigurationPersistenceService() {

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS39 INS42 INS8 UPD42 INS42 INS42 INS21 INS25 INS21 INS60 INS60 INS25 INS60 INS25 INS60 INS60 INS21 INS25 INS32 INS27 INS8 INS7 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS74 INS59 INS74 INS59 INS7 INS27 INS8 UPD42 INS42 INS42 INS33 INS41 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS14 INS42 INS32 INS42 INS33 INS54 MOV43 INS32 INS40 INS43 INS32 INS42 INS42 INS45 INS32 INS36 INS42 INS32 INS42 INS42 INS42 INS74 INS40 INS32 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS8 INS12 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS11 INS42 INS42 INS45 INS43 INS42 INS42 INS43 INS21 INS44 INS8 INS43 INS32 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS45 INS42 DEL42 DEL40 DEL40 DEL14 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL14 DEL7 DEL21