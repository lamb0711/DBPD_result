GEODE-1984: Fix Issue Make GatewaySender destroy a public API

    1. Making destory API public
    2. Added a new gfsh WAN command destroyGatewaySender
    3. Impleted GatewaySenderDestroyFunction, which first stop gatewaysender
       and then call destroy on the same.
    4. Added a WAN Rest Controller for destroy gatewaysender
    5. Removed the need of explicit casting of sender to AbstractGatewaySender for calling
       destroy API
    6. Renamed Test WanCommandCreateGatewaySenderDUnitTest to WanCommandCreateDestroyGatewaySenderDUnitTest
    7. Each applicable test now also calls destroy gfsh command and verfies the result
    8. Minor changes in the logging for each tests

-import org.apache.geode.management.internal.cli.functions.CliFunctionResult;
-import org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction;
-import org.apache.geode.management.internal.cli.functions.GatewayReceiverFunctionArgs;
-import org.apache.geode.management.internal.cli.functions.GatewaySenderCreateFunction;
-import org.apache.geode.management.internal.cli.functions.GatewaySenderFunctionArgs;
+import org.apache.geode.management.internal.cli.functions.*;
+
+  @CliCommand(value = CliStrings.DESTROY_GATEWAYSENDER,
+      help = CliStrings.DESTROY_GATEWAYSENDER__HELP)
+  @CliMetaData(relatedTopic = CliStrings.TOPIC_GEODE_WAN, writesToSharedConfiguration = true)
+  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
+  public Result destroyGatewaySender(
+      @CliOption(key = CliStrings.DESTROY_GATEWAYSENDER__GROUP,
+          optionContext = ConverterHint.MEMBERGROUP,
+          help = CliStrings.DESTROY_GATEWAYSENDER__GROUP__HELP) @CliMetaData(
+              valueSeparator = ",") String[] onGroups,
+      @CliOption(key = CliStrings.DESTROY_GATEWAYSENDER__MEMBER,
+          optionContext = ConverterHint.MEMBERIDNAME,
+          unspecifiedDefaultValue = CliMetaData.ANNOTATION_NULL_VALUE,
+          help = CliStrings.DESTROY_GATEWAYSENDER__MEMBER__HELP) @CliMetaData(
+              valueSeparator = ",") String onMember,
+      @CliOption(key = CliStrings.DESTROY_GATEWAYSENDER__ID, mandatory = true,
+          optionContext = ConverterHint.GATEWAY_SENDER_ID,
+          help = CliStrings.DESTROY_GATEWAYSENDER__ID__HELP) String id) {
+    Result result = null;
+    try {
+      GatewaySenderDestroyFunctionArgs gatewaySenderDestroyFunctionArgs =
+          new GatewaySenderDestroyFunctionArgs(id);
+
+      Set<DistributedMember> membersToDestroyGatewaySenderOn =
+          CliUtil.findAllMatchingMembers(onGroups, onMember == null ? null : onMember.split(","));
+
+      ResultCollector<?, ?> resultCollector =
+          CliUtil.executeFunction(GatewaySenderDestroyFunction.INSTANCE,
+              gatewaySenderDestroyFunctionArgs, membersToDestroyGatewaySenderOn);
+      @SuppressWarnings("unchecked")
+      List<CliFunctionResult> gatewaySenderDestroyResults =
+          (List<CliFunctionResult>) resultCollector.getResult();
+
+      TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
+      final String errorPrefix = "ERROR: ";
+      for (CliFunctionResult gatewaySenderDestroyResult : gatewaySenderDestroyResults) {
+        boolean success = gatewaySenderDestroyResult.isSuccessful();
+        tabularResultData.accumulate("Member", gatewaySenderDestroyResult.getMemberIdOrName());
+        tabularResultData.accumulate("Status",
+            (success ? "" : errorPrefix) + gatewaySenderDestroyResult.getMessage());
+      }
+      result = ResultBuilder.buildResult(tabularResultData);
+    } catch (IllegalArgumentException e) {
+      LogWrapper.getInstance().info(e.getMessage());
+      result = ResultBuilder.createUserErrorResult(e.getMessage());
+    } catch (CommandResultException crex) {
+      result = handleCommandResultException(crex);
+    }
+    return result;
+  }
+
-      CliStrings.LOAD_BALANCE_GATEWAYSENDER})
+      CliStrings.LOAD_BALANCE_GATEWAYSENDER, CliStrings.DESTROY_GATEWAYSENDER})

UPD40 INS31 INS77 INS77 INS77 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS42 INS80 INS80 INS42 INS80 INS80 INS42 INS80 INS80 INS42 INS77 INS77 INS5 INS42 INS77 INS77 INS43 INS42 INS77 INS43 INS42 INS60 INS54 INS41 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS9 INS42 INS40 INS42 INS40 INS42 INS80 INS80 INS80 INS42 INS80 INS43 INS85 INS42 INS80 INS80 INS80 INS80 INS42 INS80 INS42 INS42 INS80 INS80 INS80 INS80 INS42 INS43 INS59 INS8 INS12 INS12 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS45 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS45 INS42 INS40 INS42 INS9 INS42 INS40 INS42 INS40 INS42 INS42 INS33 INS60 INS60 INS60 INS60 INS60 INS60 INS70 INS21 INS44 INS8 INS44 INS8 INS43 INS59 INS74 INS59 INS74 INS59 INS79 INS74 INS59 INS43 INS59 INS83 INS43 INS59 INS44 INS42 INS8 INS7 INS43 INS42 INS21 INS21 INS43 INS42 INS21 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS76 INS76 INS42 INS32 INS42 INS45 INS43 INS43 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS45 INS43 INS42 INS60 INS21 INS21 INS42 INS32 INS42 INS32 INS7 INS42 INS7 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS74 INS32 INS42 INS42 INS42 INS39 INS59 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS27 INS33 INS32 INS43 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS32 INS42 INS42 INS16 INS42 INS42 INS42 INS45 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26