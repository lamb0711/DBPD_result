GEODE-6283: expose HttpService on InternalCache so that different comâ€¦ (#3110)

* GEODE-6283: expose HttpService on InternalCache so that different component can add their own webapps independently.

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>

+import org.apache.geode.internal.cache.HttpService;
-import org.apache.geode.management.internal.JettyHelper;
-import org.apache.geode.management.internal.ManagementAgent;
-import org.apache.geode.management.internal.SystemManagementService;
-   * @param loggingSession the LoggingSession to use, may be a NullLoggingSession which does nothing
+   * @param loggingSession the LoggingSession to use, may be a NullLoggingSession which does
+   *        nothing
-      InternalLogWriter securityLogger, InetAddress bindAddress, String hostnameForClients,
-      Properties distributedSystemProperties, boolean startDistributedSystem) {
+      InternalLogWriter securityLogger,
+      InetAddress bindAddress, String hostnameForClients,
+      Properties distributedSystemProperties,
+      boolean startDistributedSystem) {
-      InternalLogWriter securityLogger, InetAddress bindAddress, boolean startDistributedSystem,
-      Properties dsProperties, String hostnameForClients) throws IOException {
+      InternalLogWriter securityLogger,
+      InetAddress bindAddress,
+      boolean startDistributedSystem,
+      Properties dsProperties, String hostnameForClients)
+      throws IOException {
-      InetAddress bindAddress, String hostnameForClients, Properties distributedSystemProperties,
+      InetAddress bindAddress, String hostnameForClients,
+      Properties distributedSystemProperties,
-      InternalLogWriter logger, InternalLogWriter logger1, InetAddress addr,
-      Properties dsProperties, boolean peerLocator, boolean serverLocator, String s, boolean b1)
+      InternalLogWriter logger, InternalLogWriter logger1,
+      InetAddress addr,
+      Properties dsProperties, boolean peerLocator,
+      boolean serverLocator, String s, boolean b1)
-
-    ManagementAgent managementAgent =
-        ((SystemManagementService) SystemManagementService.getExistingManagementService(myCache))
-            .getManagementAgent();
-
-    if (managementAgent == null) {
-      logger.info(
-          "management service needs to be started for ClusterManagementService to be running.");
-      return;
-    }
-
-        new ImmutablePair<>(JettyHelper.SECURITY_SERVICE_SERVLET_CONTEXT_PARAM,
+        new ImmutablePair<>(HttpService.SECURITY_SERVICE_SERVLET_CONTEXT_PARAM,
-        new ImmutablePair<>(JettyHelper.CLUSTER_MANAGEMENT_SERVICE_CONTEXT_PARAM,
+        new ImmutablePair<>(HttpService.CLUSTER_MANAGEMENT_SERVICE_CONTEXT_PARAM,
-    managementWebapp =
-        managementAgent
-            .addWebApplication("/geode-management", gemfireManagementWar, securityServiceAttr,
-                cmServiceAttr);
+
+    try {
+      myCache.getHttpService()
+          .addWebApplication("/geode-management", gemfireManagementWar, securityServiceAttr,
+              cmServiceAttr);
+    } catch (Exception e) {
+      logger.error(e.getMessage(), e);
+    }
-   *
-   *

MOV26 UPD40 INS54 UPD66 INS66 INS8 INS12 INS21 INS44 INS8 UPD40 UPD40 INS32 INS43 INS42 MOV21 INS32 UPD42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL43 DEL32 DEL11 DEL36 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL41 DEL8 DEL25 DEL42 DEL45 DEL32 DEL7