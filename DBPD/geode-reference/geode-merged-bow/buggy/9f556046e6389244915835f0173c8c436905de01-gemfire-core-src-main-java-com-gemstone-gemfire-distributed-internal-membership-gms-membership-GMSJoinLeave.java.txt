GEODE-77: minor bug fixes

Member weights were not being installed into member identifiers, nor serialized with them.  This wasn't an issue with GemFire because the weights were only important for JGroups IpAddresses but we now use Geode member IDs in membership views so the weights need to be included.

During startup if a member was told to become the membership coordinator it wasn't correctly setting its membership ID's view ID.  This caused some unnecessary confusion in other members.

During view preparation we don't wait for acks from members who are going to be removed in the next view but we weren't aborting the view when this happened.  This caused us to not detect a network partition.  The reply processor now adds these member IDs to the set of members that didn't respond to view preparation.

Multicast testing showed that JGroups was not dispatching a received message, probably due to problems with the message digest installed during startup.  We now send all messages out-of-band so NAKACK2 will not queue them for ordered delivery.  We also turn off bundling so that all messages are immediatly sent (no jitter for cache operations).

Other changes are in tests, which had timing issues or misspelled identifiers (this affected some constants in CliStrings, too).

+import static com.gemstone.gemfire.internal.DataSerializableFixedID.FIND_COORDINATOR_REQ;
+import static com.gemstone.gemfire.internal.DataSerializableFixedID.FIND_COORDINATOR_RESP;
+import static com.gemstone.gemfire.internal.DataSerializableFixedID.NETWORK_PARTITION_MESSAGE;
-import static com.gemstone.gemfire.internal.DataSerializableFixedID.FIND_COORDINATOR_REQ;
-import static com.gemstone.gemfire.internal.DataSerializableFixedID.FIND_COORDINATOR_RESP;
-import static com.gemstone.gemfire.internal.DataSerializableFixedID.NETWORK_PARTITION_MESSAGE;
-        this.birthViewId = response.getMemberID().getVmViewId();
-        this.localAddress.setVmViewId(this.birthViewId);
-        GMSMember me = (GMSMember)this.localAddress.getNetMember();
-        me.setBirthViewId(birthViewId);
-        installView(response.getCurrentView());
-
+        } else {
+          this.birthViewId = response.getMemberID().getVmViewId();
+          this.localAddress.setVmViewId(this.birthViewId);
+          GMSMember me = (GMSMember)this.localAddress.getNetMember();
+          me.setBirthViewId(birthViewId);
+          installView(response.getCurrentView());
+          if (this.localAddress.getVmViewId() < 0) {
+            this.localAddress.setVmViewId(viewNumber);
+          }
+
-  
-    List<InternalDistributedMember> recipients = new ArrayList(v.getMembers());
+    List<InternalDistributedMember> recipients = new ArrayList<>(v.getMembers());
-      synchronized(this.pendingRemovals) {
-        this.pendingRemovals.addAll(pendingRemovals);
+      for (InternalDistributedMember mbr: pendingLeaves) {
+        notRepliedYet.remove(mbr);
+      }
+      for (InternalDistributedMember mbr: pendingRemovals) {
+        if (this.notRepliedYet.contains(mbr)) {
+          this.pendingRemovals.add(mbr);
+        }
-        pendingRemovals.add(suspect);
-        checkIfDone();
+        if (notRepliedYet.contains(suspect) && !pendingRemovals.contains(suspect)) {
+          pendingRemovals.add(suspect);
+          checkIfDone();
+        }
-          result = Collections.emptySet();
+          result = pendingRemovals;
+          result.addAll(pendingRemovals);
-        
-        if (msg instanceof JoinRequestMessage) {
+        switch (msg.getDSFID()) {
+        case JOIN_REQUEST:
-        }
-        else if (msg instanceof LeaveRequestMessage) {
+          break;
+        case LEAVE_REQUEST_MESSAGE:
-        }
-        else if (msg instanceof RemoveMemberMessage) {
+          break;
+        case REMOVE_MEMBER_REQUEST:
-        }
-        else {
+          break;
+        default: 
+          break;

MOV26 MOV26 MOV26 INS8 INS70 INS70 INS44 INS42 INS8 INS44 INS42 MOV8 INS8 INS74 INS43 INS42 INS21 INS43 INS42 INS25 MOV21 INS25 INS50 MOV43 INS42 INS32 INS42 INS32 MOV8 INS27 MOV8 INS32 INS49 MOV21 MOV70 MOV25 INS10 INS49 MOV21 MOV25 INS10 INS49 MOV21 MOV25 INS10 INS49 MOV21 INS10 INS8 INS42 INS42 INS42 INS22 INS42 INS42 INS32 INS38 INS21 INS42 INS42 INS42 INS42 INS42 MOV21 MOV21 MOV60 MOV21 MOV21 INS25 MOV52 UPD42 MOV42 INS42 INS42 INS42 INS32 INS32 INS27 INS8 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS21 INS22 INS42 INS32 INS52 INS42 INS22 INS42 INS42 INS52 INS42 DEL22 DEL51 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL43 DEL62 DEL8 DEL8 DEL25 DEL25 DEL25