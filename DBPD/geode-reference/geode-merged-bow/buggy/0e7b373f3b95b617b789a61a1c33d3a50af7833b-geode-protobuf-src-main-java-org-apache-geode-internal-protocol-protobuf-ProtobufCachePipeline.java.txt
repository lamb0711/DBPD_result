GEODE-3894: Create HandshakeRequest

added connection state processors to inject protocol state specific
functionality refactored existing authentication and authorization flows to use
connection state processors added new handshake message, handler, and state
processor

Signed-off-by: Bruce Schuchardt <bschuchardt@pivotal.io>

+import org.apache.geode.internal.protocol.protobuf.state.ProtobufConnectionHandshakeStateProcessor;
+import org.apache.geode.internal.protocol.state.ConnectionStateProcessor;
-import org.apache.geode.internal.protocol.security.Authenticator;
-import org.apache.geode.internal.protocol.security.Authorizer;
-import org.apache.geode.internal.protocol.security.SecurityProcessor;
+import org.apache.geode.internal.security.SecurityService;
-
+  private final ConnectionStateProcessor initialCacheConnectionStateProcessor;
-      ProtocolClientStatistics statistics, Cache cache, Authenticator authenticator,
-      Authorizer authorizer, SecurityProcessor securityProcessor) {
+      ProtocolClientStatistics statistics, Cache cache, SecurityService securityService) {
-    this.messageExecutionContext = new MessageExecutionContext(cache, authenticator, authorizer,
-        null, statistics, securityProcessor);
+    this.initialCacheConnectionStateProcessor =
+        new ProtobufConnectionHandshakeStateProcessor(securityService);
+    this.messageExecutionContext =
+        new MessageExecutionContext(cache, statistics, initialCacheConnectionStateProcessor);

MOV26 MOV26 UPD40 UPD40 UPD40 INS23 INS83 INS83 INS43 INS59 INS42 INS42 UPD43 UPD42 INS21 UPD42 INS7 INS22 INS14 INS52 INS42 INS43 INS42 UPD42 INS42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL33