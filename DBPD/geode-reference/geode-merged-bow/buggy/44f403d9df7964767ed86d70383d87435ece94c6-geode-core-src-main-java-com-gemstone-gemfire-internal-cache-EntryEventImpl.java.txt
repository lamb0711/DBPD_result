GEODE-1304: remove TODO OFFHEAP comments

Tickets have been filed with the information from the removed comments.

This checkin does change LocalRegion validatedCreate/Put/Destroy
to no longer do an offheap release; instead the calling method does.

-        // TODO OFFHEAP: returns off-heap PdxInstance
-   * TODO OFFHEAP: to prevent the heap copy use getRawNewValue instead
+   * Note: to prevent the heap copy use getRawNewValue instead
-      // TODO OFFHEAP currently we copy offheap new value to the heap here. Check callers of this method to see if they can be optimized to use offheap values.
-      // TODO OFFHEAP: returns off-heap PdxInstance
-        // TODO OFFHEAP can we handle offheap byte[] better?
-            // TODO OFFHEAP: returns off-heap PdxInstance which is not ok since isUnretainedNewReferenceOk returned false
-            // TODO OFFHEAP: returns off-heap PdxInstance which is not ok since isUnretainedNewReferenceOk returned false
-      tx.setPendingValue(OffHeapHelper.copyIfNeeded(v)); // TODO OFFHEAP optimize
+      tx.setPendingValue(OffHeapHelper.copyIfNeeded(v));
-        // TODO OFFHEAP can we handle offheap byte[] better?
-      // TODO OFFHEAP: returns off-heap PdxInstance
-      // TODO OFFHEAP: returns off-heap PdxInstance
-      // TODO OFFHEAP: returns off-heap PdxInstance
-//    LocalRegion lr = getLocalRegion();
-//    if (lr != null) {
-//      if (lr.isCacheClosing()) {
-//        // to fix races during closing and recreating cache (see bug 47883) don't bother
-//        // trying to decrement reference counts if we are closing the cache.
-//        // TODO OFFHEAP: this will cause problems once offheap lives longer than a cache.
-//        this.offHeapOk = false;
-//        return;
-//      }
-//    }

UPD66