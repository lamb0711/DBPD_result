GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-
+import java.util.Map;
+import java.util.Properties;
+import org.apache.geode.cache.Declarable;
+import org.apache.geode.cache.DiskStore;
+import org.apache.geode.cache.DiskStoreFactory;
+import org.apache.geode.cache.asyncqueue.AsyncEventQueue;
+import org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueImpl;
+import org.apache.geode.cache.query.internal.QueryMonitor;
+import org.apache.geode.cache.server.CacheServer;
+import org.apache.geode.cache.wan.GatewayReceiver;
-import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.distributed.internal.CacheTime;
+import org.apache.geode.distributed.internal.DistributionAdvisor;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.cache.persistence.BackupManager;
+import org.apache.geode.internal.logging.InternalLogWriter;
+import org.apache.geode.management.internal.JmxManagerAdvisor;
+import org.apache.geode.management.internal.RestAgent;
+import org.apache.geode.pdx.PdxInstanceFactory;
-public interface InternalCache extends Cache, Extensible<Cache> {
+public interface InternalCache extends Cache, Extensible<Cache>, CacheTime {
-  DistributedMember getMyId();
+  InternalDistributedMember getMyId();
-  Collection<DiskStoreImpl> listDiskStores();
+  Collection<DiskStore> listDiskStores();
-  Collection<DiskStoreImpl> listDiskStoresIncludingRegionOwned();
+  Collection<DiskStore> listDiskStoresIncludingRegionOwned();
-  void addRegionListener(RegionListener l);
+  void addRegionListener(RegionListener regionListener);
-  void removeRegionListener(RegionListener l);
+  void removeRegionListener(RegionListener regionListener);
+
+  boolean getPdxReadSerializedByAnyGemFireServices();
+
+  BackupManager getBackupManager();
+
+  void setDeclarativeCacheConfig(CacheConfig cacheConfig);
+
+  void initializePdxRegistry();
+
+  void readyDynamicRegionFactory();
+
+  void setBackupFiles(List<File> backups);
+
+  void addDeclarableProperties(final Map<Declarable, Properties> mapOfNewDeclarableProps);
+
+  void setInitializer(Declarable initializer, Properties initializerProps);
+
+  boolean hasPool();
+
+  DiskStoreFactory createDiskStoreFactory(DiskStoreAttributes attrs);
+
+  void determineDefaultPool();
+
+  <K, V> Region<K, V> basicCreateRegion(String name, RegionAttributes<K, V> attrs)
+      throws RegionExistsException, TimeoutException;
+
+  BackupManager startBackup(InternalDistributedMember sender) throws IOException;
+
+  Throwable getDisconnectCause();
+
+  void addPartitionedRegion(PartitionedRegion region);
+
+  void removePartitionedRegion(PartitionedRegion region);
+
+  void addDiskStore(DiskStoreImpl dsi);
+
+  TXEntryStateFactory getTXEntryStateFactory();
+
+  EventTracker.ExpiryTask getEventTrackerTask();
+
+  void removeDiskStore(DiskStoreImpl diskStore);
+
+  void addGatewaySender(GatewaySender sender);
+
+  void addAsyncEventQueue(AsyncEventQueueImpl asyncQueue);
+
+  void removeAsyncEventQueue(AsyncEventQueue asyncQueue);
+
+  QueryMonitor getQueryMonitor();
+
+  void close(String reason, Throwable systemFailureCause, boolean keepAlive, boolean keepDS);
+
+  JmxManagerAdvisor getJmxManagerAdvisor();
+
+  List<Properties> getDeclarableProperties(final String className);
+
+  int getUpTime();
+
+  Set<Region<?, ?>> rootRegions(boolean includePRAdminRegions);
+
+  Set<LocalRegion> getAllRegions();
+
+  DistributedRegion getRegionInDestroy(String path);
+
+  void addRegionOwnedDiskStore(DiskStoreImpl dsi);
+
+  DiskStoreMonitor getDiskStoreMonitor();
+
+  void close(String reason, Throwable optionalCause);
+
+  LocalRegion getRegionByPathForProcessing(String path);
+
+  List getCacheServersAndGatewayReceiver();
+
+  boolean isGlobalRegionInitializing(String fullPath);
+
+  DistributionAdvisor getDistributionAdvisor();
+
+  void setQueryMonitorRequiredForResourceManager(boolean required);
+
+  boolean isQueryMonitorDisabledForLowMemory();
+
+  boolean isRESTServiceRunning();
+
+  InternalLogWriter getInternalLogWriter();
+
+  InternalLogWriter getSecurityInternalLogWriter();
+
+  Set<LocalRegion> getApplicationRegions();
+
+  void removeGatewaySender(GatewaySender sender);
+
+  DistributedLockService getGatewaySenderLockService();
+
+  RestAgent getRestAgent();
+
+  Properties getDeclarableProperties(final Declarable declarable);
+
+  void setRESTServiceRunning(boolean isRESTServiceRunning);
+
+  void close(String reason, boolean keepAlive, boolean keepDS);
+
+  void addGatewayReceiver(GatewayReceiver receiver);
+
+  CacheServer addCacheServer(boolean isGatewayReceiver);
+
+  void setReadSerialized(boolean value);
+
+  PdxInstanceFactory createPdxInstanceFactory(String className, boolean expectDomainClass);
+
+  void waitForRegisterInterestsInProgress();

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 MOV31 MOV31 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS43 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 UPD43 UPD74 UPD42 UPD74 UPD42 UPD42 UPD42 INS39 INS42 INS43 INS42 INS39 INS42 INS44 INS39 INS42 INS39 INS42 INS39 INS42 INS44 INS39 INS42 INS44 INS39 INS42 INS44 INS44 INS39 INS42 INS43 INS42 INS44 INS39 INS42 INS73 INS73 INS74 INS42 INS44 INS44 INS43 INS43 INS43 INS42 INS44 INS43 INS43 INS42 INS39 INS42 INS44 INS39 INS42 INS44 INS39 INS42 INS44 INS43 INS42 INS43 INS42 INS39 INS42 INS44 INS39 INS42 INS44 INS39 INS42 INS44 INS39 INS42 INS44 INS43 INS42 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS42 INS74 INS42 INS44 INS39 INS42 INS74 INS42 INS44 INS74 INS42 INS43 INS42 INS44 INS39 INS42 INS44 INS43 INS42 INS39 INS42 INS44 INS44 INS43 INS42 INS44 INS43 INS42 INS39 INS42 INS44 INS43 INS42 INS39 INS42 INS44 INS39 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS44 INS43 INS42 INS43 INS42 INS43 INS42 INS44 INS39 INS42 INS44 INS39 INS42 INS44 INS44 INS44 INS39 INS42 INS44 INS43 INS42 INS44 INS39 INS42 INS44 INS43 INS42 INS44 INS44 INS39 INS42 UPD42 INS43 INS43 UPD42 UPD42 INS42 INS43 INS42 INS74 INS42 INS83 INS74 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS74 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS43 INS42 MOV43 INS42 INS42 INS40 MOV43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS43 INS43 INS83 INS43 INS42 INS43 INS74 INS39 INS42 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS39 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS83 INS43 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS42 INS39 INS42 INS39 INS42 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS76 INS76 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42