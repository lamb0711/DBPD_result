GEODE-4876: Move VM APIs from Host to VM

Deprecate Host.

-import java.util.HashMap;
+ *
+ * @deprecated Please use similar static APIs on {@link VM} instead.
+@Deprecated
-  protected static List hosts = new ArrayList();
+  private static final List<Host> hosts = new ArrayList<>();
-  /** Indicates an unstarted RMI registry */
-  protected static int NO_REGISTRY = -1;
-
-  private String hostName;
+  private final String hostName;
-  private List<VM> vms;
-
-  /** The GemFire systems that are available on this host */
-  private List systems;
-
-  /** Key is system name, value is GemFireSystem instance */
-  private HashMap systemNames;
+  private final List<VM> vms;
-   * @param n A zero-based identifier of the host
+   * @param whichHost A zero-based identifier of the host
-  public static Host getHost(int n) {
+  public static Host getHost(int whichHost) {
-    if (n >= size) {
-      String s = "Cannot request host " + n + ".  There are only " + size + " hosts.";
-      throw new IllegalArgumentException(s);
+    if (whichHost >= size) {
+      String message = "Cannot request host " + whichHost + ".  There are only " + size + " hosts.";
+      throw new IllegalArgumentException(message);
-      return (Host) hosts.get(n);
+      return hosts.get(whichHost);
-
-  ///////////////////// Constructors //////////////////////
-
-      String s = "Cannot create a Host with a null name";
-      throw new NullPointerException(s);
+      String message = "Cannot create a Host with a null name";
+      throw new NullPointerException(message);
-    this.vms = new ArrayList();
-    this.systems = new ArrayList();
-    this.systemNames = new HashMap();
+    vms = new ArrayList<>();
-  //////////////////// Instance Methods ////////////////////
-
-    return this.hostName;
+    return hostName;
-    return this.vms.size();
+    return vms.size();
-      VM vm = (VM) vms.get(n);
+      VM vm = vms.get(n);
-    this.vms.add(vm);
+    vms.add(vm);
-  /**
-   * Returns the number of GemFire systems that run on this host
-   */
-  public int getSystemCount() {
-    return this.systems.size();
-  }
-
+  @Override
-    sb.append(this.getHostName());
+    sb.append(getHostName());
-  /**
-   * Two {@code Host}s are considered equal if they have the same name.
-   */
+  @Override
-      return ((Host) o).getHostName().equals(this.getHostName());
+      return ((Host) o).getHostName().equals(getHostName());
-  /**
-   * A {@code Host}'s hash code is based on the hash code of its name.
-   */
+  @Override
-    return this.getHostName().hashCode();
+    return getHostName().hashCode();

INS78 INS31 INS65 INS42 UPD83 INS83 INS74 INS83 INS83 INS78 INS78 INS78 MOV83 MOV39 MOV42 MOV8 INS66 INS65 INS66 MOV43 MOV43 UPD42 INS42 INS42 INS42 INS42 MOV42 INS74 UPD42 INS42 MOV43 UPD42 INS42 INS42 INS42 INS32 INS74 MOV43 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV43 MOV32 UPD42 DEL40 DEL26 DEL43 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL34 DEL38 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL32 DEL11 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL14 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL43 DEL14 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL11 DEL52 DEL42 DEL22 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL41 DEL8 DEL31 DEL52 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL52 DEL52 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL31