GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-  // this needs to be static so that it won't get serialized
-  private static SecurityService securityService = SecurityService.getSecurityService();
-
-        result = get(request);
+        result = get(request, cache.getSecurityService());
-  public DataCommandResult get(DataCommandRequest request) {
+  public DataCommandResult get(DataCommandRequest request, SecurityService securityService) {
-    return get(request.getPrincipal(), key, keyClass, valueClass, regionName, loadOnCacheMiss);
+    return get(request.getPrincipal(), key, keyClass, valueClass, regionName, loadOnCacheMiss,
+        securityService);
-      object = securityService.postProcess(principal, null, null, object, false);
+      object = getCache().getSecurityService().postProcess(principal, null, null, object, false);
-      String regionName, Boolean loadOnCacheMiss) {
+      String regionName, Boolean loadOnCacheMiss, SecurityService securityService) {
-  private static DataCommandResult cachedResult = null;
+  static DataCommandResult cachedResult = null;
+    private static final Logger logger = LogService.getLogger();
-    private static SecurityService securityService = SecurityService.getSecurityService();
-
-      super(SELECT_STEP_EXEC, arguments);
+      super(DataCommandFunction.SELECT_STEP_EXEC, arguments);
-      cachedResult = result;
+      DataCommandFunction.cachedResult = result;
-        endCount = getPageSize();
+        endCount = DataCommandFunction.getPageSize();
-        return result.pageResult(0, endCount, SELECT_STEP_DISPLAY);
+        return result.pageResult(0, endCount, DataCommandFunction.SELECT_STEP_DISPLAY);
-            SELECT_STEP_END);
+            DataCommandFunction.SELECT_STEP_END);
-          securityService.authorizeRegionRead(region);
+          cache.getSecurityService().authorizeRegionRead(region);
-            Subject subject = securityService.getSubject();
+            Subject subject = cache.getSecurityService().getSubject();
-      return query + " limit " + getFetchSize();
+      return query + " limit " + DataCommandFunction.getFetchSize();
-  private static int getFetchSize() {
+  static int getFetchSize() {

MOV23 INS44 INS44 MOV43 INS42 INS43 INS42 INS83 UPD43 INS42 UPD42 UPD42 INS42 UPD42 UPD42 INS40 INS40 INS42 INS32 INS40 INS40 INS32 UPD42 MOV42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 DEL83 DEL83 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL83 DEL42 DEL42 DEL42 DEL42 DEL83