GEODE-4678: Remove ServerHandshakeProcessor and refactor handshake creation (#1456)



+import java.io.DataOutputStream;
+import java.io.OutputStream;
+import org.apache.geode.DataSerializer;
+import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.internal.HeapDataOutputStream;
-            ServerHandshakeProcessor.refuse(socket.getOutputStream(),
+            refuseHandshake(socket.getOutputStream(),
-                    .toLocalizedString(Integer.valueOf(this.maxConnections)));
+                    .toLocalizedString(Integer.valueOf(this.maxConnections)),
+                REPLY_REFUSED);
-          ServerHandshakeProcessor.refuse(socket.getOutputStream(),
+          refuseHandshake(socket.getOutputStream(),
-                  .toLocalizedString(Integer.valueOf(this.maxConnections)));
+                  .toLocalizedString(Integer.valueOf(this.maxConnections)),
+              REPLY_REFUSED);
+  static final byte REPLY_REFUSED = (byte) 60;
+  static final byte REPLY_INVALID = (byte) 61;
+
+  void refuseHandshake(OutputStream out, String message, byte exception) throws IOException {
+
+    HeapDataOutputStream hdos = new HeapDataOutputStream(32, Version.CURRENT);
+    DataOutputStream dos = new DataOutputStream(hdos);
+    // Write refused reply
+    dos.writeByte(exception);
+
+    // write dummy endpointType
+    dos.writeByte(0);
+    // write dummy queueSize
+    dos.writeInt(0);
+
+    // Write the server's member
+    DistributedMember member = InternalDistributedSystem.getAnyInstance().getDistributedMember();
+    HeapDataOutputStream memberDos = new HeapDataOutputStream(Version.CURRENT);
+    DataSerializer.writeObject(member, memberDos);
+    DataSerializer.writeByteArray(memberDos.toByteArray(), dos);
+    memberDos.close();
+
+    // Write the refusal message
+    if (message == null) {
+      message = "";
+    }
+    dos.writeUTF(message);
+
+    // Write dummy delta-propagation property value. This will never be read at
+    // receiver because the exception byte above will cause the receiver code
+    // throw an exception before the below byte could be read.
+    dos.writeBoolean(Boolean.TRUE);
+
+    out.write(hdos.toByteArray());
+    out.flush();
+  }
+

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS11 INS42 INS11 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS60 INS21 INS21 INS21 INS60 INS60 INS21 INS21 INS21 INS25 INS21 INS21 INS21 INS21 INS39 INS34 INS39 INS34 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS27 INS8 INS32 INS32 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS43 INS34 INS40 INS43 INS42 INS32 INS42 INS43 INS40 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 MOV42 MOV42 UPD42 UPD42 UPD42 UPD42