jgroups source is now removed from asf branch GEODE-77 and is a downloaded dependency.  Able to start/stop a locator and a server via gfsh but there is no HA or authentication in the membership system.

-package com.gemstone.gemfire.distributed.internal.membership.jgroup;
+package com.gemstone.gemfire.distributed.internal.membership.gms;
+import com.gemstone.gemfire.ForcedDisconnectException;
-import com.gemstone.org.jgroups.Event;
-import com.gemstone.org.jgroups.JChannel;
-import com.gemstone.org.jgroups.stack.Protocol;
+import com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember;
+import com.gemstone.gemfire.distributed.internal.membership.MembershipManager;
+import com.gemstone.gemfire.distributed.internal.membership.gms.interfaces.Manager;
+import com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager;
-  /** returns the JGroups channel for the given distributed system */
-  public static JChannel getJChannel(DistributedSystem sys) {
-    return getMembershipManager(sys).channel;
-  }
-  public static JGroupMembershipManager getMembershipManager(DistributedSystem sys) {
+  public static MembershipManager getMembershipManager(DistributedSystem sys) {
-    JGroupMembershipManager mgr = (JGroupMembershipManager)dm.getMembershipManager();
+    MembershipManager mgr = dm.getMembershipManager();
-    getMembershipManager(sys).beSick();
+    ((Manager)getMembershipManager(sys)).beSick();
-      getMembershipManager(sys).playDead();
+      ((Manager)getMembershipManager(sys)).playDead();
-    getMembershipManager(sys).beHealthy();
+    ((Manager)getMembershipManager(sys)).beHealthy();
-    return getMembershipManager(sys).getCoordinator();
+    return ((Manager)getMembershipManager(sys)).getCoordinator();
-    return getMembershipManager(sys).getLeadMember();
+    return ((Manager)getMembershipManager(sys)).getLeadMember();
-  /** register a test hook with the manager */
-  public static void addTestHook(DistributedSystem sys,
-      com.gemstone.org.jgroups.debug.JChannelTestHook hook) {
-    getMembershipManager(sys).registerTestHook(hook);
-  }
-  
-  /** remove a registered test hook */
-  public static void removeTestHook(DistributedSystem sys,
-      com.gemstone.org.jgroups.debug.JChannelTestHook hook) {
-    getMembershipManager(sys).unregisterTestHook(hook);
-  }
-  
-    return getMembershipManager(sys).isShunned(mbr);
+    return ((Manager)getMembershipManager(sys)).isShunned(mbr);
-    getMembershipManager(sys).addSurpriseMemberForTesting(mbr, birthTime);
+    ((Manager)getMembershipManager(sys)).addSurpriseMemberForTesting(mbr, birthTime);
-    JGroupMembershipManager.inhibitForcedDisconnectLogging(b);
+    GMSMembershipManager.inhibitForcedDisconnectLogging(b);
-        return !getMembershipManager(sys).getView().contains(member);
+        return !getMembershipManager(sys).getView().contains((InternalDistributedMember)member);
-    JChannel c = MembershipManagerHelper.getJChannel(msys);
-    Protocol udp = c.getProtocolStack().findProtocol("UDP");
-    udp.stop();
-    udp.passUp(new Event(Event.EXIT, new RuntimeException("killing members ds")));
-    try {
-      MembershipManagerHelper.getJChannel(msys).waitForClose();
-    }
-    catch (InterruptedException ie) {
-      Thread.currentThread().interrupt();
-      // attempt rest of work with interrupt bit set
-    }
-//    LogWriter bLogger =
-//      new LocalLogWriter(LogWriterImpl.ALL_LEVEL, System.out);
+    getMembershipManager(msys).uncleanShutdown("test is forcing disconnect", new ForcedDisconnectException("test is forcing disconnect"));

MOV26 INS26 INS26 MOV31 MOV31 UPD40 UPD40 INS40 UPD40 UPD40 INS40 UPD43 INS8 MOV29 MOV43 INS42 MOV44 MOV8 MOV29 MOV43 INS42 MOV44 MOV8 MOV29 INS39 UPD42 MOV44 MOV44 UPD42 INS21 INS41 INS21 UPD43 INS32 MOV8 MOV32 INS32 UPD42 MOV32 INS36 INS42 INS36 INS36 UPD42 INS36 UPD42 INS36 UPD42 MOV42 UPD42 INS36 UPD42 INS32 INS42 UPD45 MOV45 INS14 INS11 INS11 INS11 INS11 INS11 INS11 UPD42 MOV42 MOV42 UPD43 MOV43 UPD45 MOV45 INS43 MOV32 INS36 INS42 INS43 MOV32 INS43 MOV32 INS43 MOV32 INS43 MOV32 INS43 MOV32 UPD42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS43 MOV32 INS42 INS11 INS43 INS42 INS42 DEL42 DEL43 DEL11 DEL42 DEL42 DEL32 DEL21 DEL8 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL22 DEL41 DEL8 DEL42 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL42 DEL32 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL43 DEL42 DEL44 DEL31 DEL83 DEL83 DEL39 DEL42 DEL31 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL40 DEL14 DEL14 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54