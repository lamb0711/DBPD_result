GEODE-2267: Enhance server/locator startup rules to include workingDir

+import static org.apache.geode.distributed.ConfigurationProperties.LOG_FILE;
+import org.apache.commons.io.FileUtils;
+import java.io.File;
+import java.nio.file.Files;
-  private Properties properties;
+  private File workingDir;
+  private String oldUserDir;
-  public ServerStarterRule(Properties properties) {
-    this.properties = properties;
+  public ServerStarterRule(File workingDir) {
+    this.workingDir = workingDir;
-  public void startServer() throws Exception {
-    startServer(0, false);
+  public void before() throws Exception {
+    oldUserDir = System.getProperty("user.dir");
+    if (workingDir == null) {
+      workingDir = Files.createTempDirectory("server").toAbsolutePath().toFile();
+    }
+    System.setProperty("user.dir", workingDir.toString());
-  public void startServer(int locatorPort) throws Exception {
-    startServer(locatorPort, false);
+  public Server startServer() throws Exception {
+    return startServer(new Properties(), -1, false);
-  public void startServer(int locatorPort, boolean pdxPersistent) throws Exception {
-    startServer(properties, locatorPort, pdxPersistent);
+  public Server startServer(int locatorPort) throws Exception {
+    return startServer(new Properties(), locatorPort, false);
-  public void startServer(Properties properties) throws Exception {
-    startServer(properties, 0, false);
+  public Server startServer(int locatorPort, boolean pdxPersistent) throws Exception {
+    return startServer(new Properties(), locatorPort, pdxPersistent);
-  public void startServer(Properties properties, int locatorPort) throws Exception {
-    startServer(properties, locatorPort, false);
+  public Server startServer(Properties properties) throws Exception {
+    return startServer(properties, -1, false);
-  public void startServer(Properties properties, int locatorPort, boolean pdxPersistent)
+  public Server startServer(Properties properties, int locatorPort) throws Exception {
+    return startServer(properties, locatorPort, false);
+  }
+
+  public Server startServer(Properties properties, int locatorPort, boolean pdxPersistent)
+    if (!properties.containsKey(NAME)) {
+      properties.setProperty(NAME, "server");
+    }
+    String name = properties.getProperty(NAME);
+    if (!properties.containsKey(LOG_FILE)) {
+      properties.setProperty(LOG_FILE, new File(name + ".log").getAbsolutePath().toString());
+    }
+
-    if (!properties.containsKey(NAME)) {
-      properties.setProperty(NAME, this.getClass().getName());
-    }
+
-  }
-
-  /**
-   * if you use this class as a rule, the default startServer will be called in the before. You need
-   * to make sure your properties to start the server with has the locator information it needs to
-   * connect to, otherwise, this server won't connect to any locator
-   */
-  protected void before() throws Throwable {
-    if (properties != null)
-      startServer();
+    return new Server(server.getPort(), workingDir, name);
+    FileUtils.deleteQuietly(workingDir);
+    if (oldUserDir == null) {
+      System.clearProperty("user.dir");
+    } else {
+      System.setProperty("user.dir", oldUserDir);
+    }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS43 INS83 INS43 INS59 MOV83 MOV39 INS42 MOV43 INS8 INS83 INS43 MOV42 INS43 MOV8 INS43 MOV44 MOV43 INS43 MOV44 INS43 MOV43 INS43 INS43 MOV25 INS42 UPD42 INS42 INS42 UPD43 UPD42 INS21 INS25 INS21 INS42 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS25 INS60 INS41 INS21 INS25 UPD42 INS7 INS27 INS8 INS32 INS32 INS32 INS32 INS32 MOV32 MOV38 INS8 INS43 INS59 INS38 INS14 INS32 INS27 INS8 INS8 UPD42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS45 INS32 MOV42 INS14 INS38 MOV9 MOV42 INS14 MOV42 MOV9 MOV42 INS14 MOV42 MOV42 MOV42 MOV42 INS38 MOV9 INS21 INS42 INS42 INS32 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 UPD42 INS42 INS42 INS45 INS7 INS42 INS42 MOV43 INS34 INS43 INS43 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 UPD42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS32 INS42 UPD42 INS32 INS42 INS14 UPD42 INS42 INS42 INS45 INS43 INS27 INS42 INS42 INS45 DEL34 DEL32 DEL21 DEL31 DEL39 DEL32 DEL21 DEL39 DEL42 DEL32 DEL21 DEL39 DEL34 DEL32 DEL21 DEL39 DEL21 DEL39 DEL52 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL32 DEL21 DEL25 DEL8 DEL31