GEODE-11: Use ResultCollector in LuceneFunction

Shards will not use LuceneQueryResults object to send result to coordinator.
Replace this dependency with EntryScore and related objects.

-import java.util.List;
-import com.gemstone.gemfire.cache.lucene.LuceneQueryResults;
-import com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImpl;
-import com.gemstone.gemfire.cache.lucene.internal.LuceneResultStructImpl;
-import com.gemstone.gemfire.cache.lucene.internal.mergers.TopDocsResultMerger;
-    ResultSender<LuceneQueryResults> resultSender = ctx.getResultSender();
+    ResultSender<TopEntries> resultSender = ctx.getResultSender();
-    Set<Integer> buckets = args == null ? null : args.getBuckets();
+    Set<Integer> buckets = (args == null ? null : args.getBuckets());
-    List<LuceneQueryResults> results = new ArrayList<>();
+    CollectorManager<TopEntries, TopEntriesCollector> manager = new TopEntriesCollectorManager();
+
+    Collection<IndexResultCollector> results = new ArrayList<>();
-        ShardResultCollector collector = new ShardResultCollector();
-        logger.debug("Executing search on repo: " + repo);
+        TopEntriesCollector collector = manager.newCollector(repo.toString());
+        logger.debug("Executing search on repo: " + repo.toString());
-        results.add(collector.getResult());
+        results.add(collector);
-    TopDocsResultMerger merger = new TopDocsResultMerger();
-    LuceneQueryResults merged = merger.mergeResults(results);
-    resultSender.lastResult(merged);
-  }
-
-  /**
-   * Collects and merges results from {@link IndexRepository}s
-   */
-  class ShardResultCollector implements IndexResultCollector {
-    LuceneQueryResultsImpl result = new LuceneQueryResultsImpl();
-    
-    @Override
-    public void collect(Object key, float score) {
-      result.addHit(new LuceneResultStructImpl(key, score));
-    }
-
-    public LuceneQueryResults getResult() {
-      return result;
+    TopEntries mergedResult;
+    try {
+      mergedResult = manager.reduce(results);
+      resultSender.lastResult(mergedResult);
+    } catch (IOException e) {
+      logger.warn("", e);
+      resultSender.sendException(e);
+      return;

MOV60 INS60 INS54 UPD74 INS74 UPD74 UPD43 MOV43 INS59 INS8 INS12 UPD43 INS36 INS43 INS43 INS43 UPD42 UPD43 MOV43 UPD42 UPD42 MOV42 INS21 MOV21 INS44 INS8 UPD42 MOV16 INS42 INS42 UPD42 MOV42 UPD43 UPD42 UPD42 MOV42 INS7 INS43 INS42 INS21 INS21 INS41 UPD42 INS42 INS32 UPD42 INS42 INS32 INS32 UPD43 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 UPD42 INS32 MOV42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL43 DEL42 DEL43 DEL14 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL55