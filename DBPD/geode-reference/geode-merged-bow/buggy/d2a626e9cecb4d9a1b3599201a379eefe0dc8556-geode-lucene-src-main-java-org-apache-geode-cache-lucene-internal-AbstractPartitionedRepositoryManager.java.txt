GEODE-2410: Lucene afterPrimary and afterSecondary calls pass through the same crit section.

	* afterPrimary and afterSecondary calls are passed through the same critical section.
	* If the caller is primary bucket, it will try to acquire a Dlock on the bucket and create the index repo.
	* If it is secondary it will clean up the repo - close the writer and release the locks.
	* If the primary changes to secondary while waiting for indexes to be created, it will exit from the critical section without acquiring the lock.

-import java.util.concurrent.Callable;
-import java.util.concurrent.Future;
-import java.util.concurrent.FutureTask;
-  public abstract IndexRepository createOneIndexRepository(final Integer bucketId,
-      LuceneSerializer serializer, LuceneIndexImpl index, PartitionedRegion userRegion)
-      throws IOException;
+  public abstract IndexRepository computeRepository(final Integer bucketId,
+      LuceneSerializer serializer, LuceneIndexImpl index, PartitionedRegion userRegion,
+      IndexRepository oldRepository) throws IOException;
-  protected IndexRepository createRepository(Integer bucketId) throws BucketNotFoundException {
+  protected IndexRepository computeRepository(Integer bucketId) throws BucketNotFoundException {
-      if (oldRepository != null && !oldRepository.isClosed()) {
-        return oldRepository;
-      }
-      if (oldRepository != null) {
-        oldRepository.cleanup();
-      }
-
-        return createOneIndexRepository(bucketId, serializer, index, userRegion);
+        return computeRepository(bucketId, serializer, index, userRegion, oldRepository);
-    throw new BucketNotFoundException(
-        "Colocated index buckets not found for bucket id " + bucketId);
-  }
+    repo = computeRepository(bucketId);
-  protected void cleanRepository(Integer bucketId) throws BucketNotFoundException {
-    IndexRepository repo = indexRepositories.remove(bucketId);
-    if (repo != null) {
-      repo.cleanup();
+    if (repo == null) {
+      throw new BucketNotFoundException(
+          "Unable to create lucene index because no longer primary for bucket " + bucketId);
+    return repo;

INS42 INS44 UPD42 MOV43 INS42 INS21 INS25 INS41 INS7 INS27 INS8 INS42 INS42 INS32 INS42 INS33 MOV53 INS42 INS42 UPD45 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31