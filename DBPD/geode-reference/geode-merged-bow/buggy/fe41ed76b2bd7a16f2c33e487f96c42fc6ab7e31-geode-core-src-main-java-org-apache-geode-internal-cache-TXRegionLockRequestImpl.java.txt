GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-
+import org.apache.geode.internal.cache.locks.TXRegionLockRequest;
- * 
- * 
-public class TXRegionLockRequestImpl
-    implements org.apache.geode.internal.cache.locks.TXRegionLockRequest {
+public class TXRegionLockRequestImpl implements TXRegionLockRequest {
+
+
-  public final void fromData(DataInput in) throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    final GemFireCacheImpl cache = getCache(false);
+    final InternalCache cache = getCache(false);
-    } catch (CacheClosedException cce) {
+    } catch (CacheClosedException ignore) {
-  private final Set<Object> readEntryKeySet(final int size, final DataInput in)
+  private Set<Object> readEntryKeySet(final int size, final DataInput in)
-    if (logger.isDebugEnabled()) {
+    if (logger.isTraceEnabled()) {
-  public static final TXRegionLockRequestImpl createFromData(DataInput in)
+  public static TXRegionLockRequestImpl createFromData(DataInput in)
-  public final String getRegionFullPath() {
+  public String getRegionFullPath() {
-  public final Set<Object> getKeys() {
+  public Set<Object> getKeys() {
-  private final GemFireCacheImpl getCache(boolean throwIfClosing) {
-    final GemFireCacheImpl cache = GemFireCacheImpl.getInstance();
+  private InternalCache getCache(boolean throwIfClosing) {
+    final InternalCache cache = GemFireCacheImpl.getInstance();
-  public final LocalRegion getLocalRegion() {
+  public LocalRegion getLocalRegion() {

INS26 INS40 UPD43 INS42 UPD43 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 DEL40 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83