Revert "GEODE-7938: added keys query param to GET, PUT, and DELETE /{region} endpoints (#4901)"

This reverts commit 6263f1f9a4782433d013c6b759bda8c84216b595.

-import java.net.URLEncoder;
+import javax.servlet.http.HttpServletRequest;
+
-  URI toUriWithKeys(String[] keys, final String... pathSegments) {
-    return ServletUriComponentsBuilder.fromCurrentContextPath().path(getRestApiVersion())
-        .pathSegment(pathSegments)
-        .queryParam("keys", StringUtils.arrayToCommaDelimitedString(keys))
-        .build(true).toUri();
-  }
-
-  String encode(String value) {
-    if (value == null) {
-      throw new GemfireRestException("could not process null value specified in query String");
-    }
-    return encode(value, DEFAULT_ENCODING);
-  }
-
-  String[] decode(String[] values) {
-    String[] result = new String[values.length];
-    for (int i = 0; i < values.length; i++) {
-      result[i] = decode(values[i]);
-    }
-    return result;
-  }
-
-  String[] encode(String[] values) {
-    String[] result = new String[values.length];
-    for (int i = 0; i < values.length; i++) {
-      result[i] = encode(values[i]);
-    }
-    return result;
-  }
-
-      if (domainObject != null && NumberUtils.isNumeric(newKey) && domainObjectId == null) {
+      if (NumberUtils.isNumeric(newKey) && domainObjectId == null) {
-  private String encode(final String value, final String encoding) {
-    try {
-      return URLEncoder.encode(value, encoding);
-    } catch (UnsupportedEncodingException e) {
-      throw new GemfireRestException("Server has encountered unsupported encoding!");
-    }
-  }
-
+  List<String> checkForMultipleKeysExist(String region, String... keys) {
+    List<String> unknownKeys = new ArrayList<>();
+    for (String key : keys) {
+      if (!getRegion(region).containsKey(key)) {
+        unknownKeys.add(key);
+      }
+    }
+    return unknownKeys;
+  }
+
-  /**
-   * @return if the opValue is CAS then the existingValue; otherwise null
-   */
-  String updateSingleKey(final String region, final String key, final String json,
+  ResponseEntity<String> updateSingleKey(final String region, final String key, final String json,
+          // putValue(region, key, convertJsonIntoPdxCollection(json));
-    return existingValue;
+
+    final HttpHeaders headers = new HttpHeaders();
+    headers.setLocation(toUri(region, key));
+    return new ResponseEntity<>(existingValue, headers,
+        (existingValue == null ? HttpStatus.OK : HttpStatus.CONFLICT));
-  void updateMultipleKeys(final String region, final String[] keys, final String json) {
+  ResponseEntity<String> updateMultipleKeys(final String region, final String[] keys,
+      final String json) {
+
+
+    HttpHeaders headers = new HttpHeaders();
+    headers.setLocation(toUri(region, StringUtils.arrayToCommaDelimitedString(keys)));
+    return new ResponseEntity<>(headers, HttpStatus.OK);
+
+  protected String[] parseKeys(HttpServletRequest request, String region) {
+    String uri = request.getRequestURI();
+    int regionIndex = uri.indexOf("/" + region + "/");
+    if (regionIndex == -1) {
+      throw new IllegalStateException(
+          String.format("Could not find the region (%1$s) in the URI (%2$s)", region, uri));
+    }
+    int keysIndex = regionIndex + region.length() + 2;
+    String keysString = uri.substring(keysIndex);
+    return keysString.split(",");
+  }

MOV26 MOV31 UPD40 INS31 INS74 UPD42 MOV44 INS74 INS74 INS83 MOV5 UPD42 MOV42 INS44 MOV44 INS8 INS43 MOV43 UPD42 MOV43 INS60 INS70 INS41 INS43 MOV43 INS60 INS21 INS43 MOV43 INS60 INS21 INS41 INS43 INS42 INS43 UPD42 MOV60 INS60 INS25 INS60 INS60 INS41 UPD42 MOV42 INS74 INS59 MOV44 INS42 INS8 INS42 INS42 INS83 INS43 INS59 INS32 INS14 INS42 INS43 INS59 INS32 INS14 UPD42 MOV42 MOV42 INS43 INS39 INS59 INS27 INS8 INS39 INS59 INS43 INS59 INS32 INS43 MOV43 INS42 INS14 UPD42 INS25 INS42 INS42 INS14 INS42 INS42 INS32 INS74 INS42 INS42 INS36 INS42 INS42 INS14 INS42 INS42 INS32 INS74 INS42 INS40 MOV42 INS42 INS32 INS42 INS32 INS42 INS38 INS53 UPD42 MOV42 INS27 INS42 INS42 INS32 INS42 INS42 INS45 MOV27 INS42 INS74 INS38 INS8 INS43 INS42 INS42 INS42 INS43 INS16 INS43 INS42 INS42 MOV32 INS43 INS42 INS42 UPD42 MOV42 INS42 INS27 INS34 INS14 INS42 INS32 INS34 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV27 INS43 INS32 INS21 INS42 INS42 INS27 INS40 INS40 INS42 INS42 INS45 INS42 INS45 INS43 INS32 UPD42 MOV42 INS42 UPD42 MOV42 MOV33 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS33 UPD42 MOV42 INS42 INS42 INS45 INS42 INS42 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL33 DEL27 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL85 DEL5 DEL42 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL32 DEL7 DEL21 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL85 DEL5 DEL42 DEL40 DEL3 DEL59 DEL60 DEL39 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL32 DEL7 DEL21 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL27 DEL83 DEL42 DEL83 DEL42 DEL44 DEL83 DEL42 DEL44 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL43 DEL42 DEL43 DEL85 DEL5 DEL83 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL45 DEL32 DEL9 DEL32 DEL32 DEL41 DEL66 DEL65 DEL29 DEL42 DEL39 DEL43 DEL85 DEL5 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3