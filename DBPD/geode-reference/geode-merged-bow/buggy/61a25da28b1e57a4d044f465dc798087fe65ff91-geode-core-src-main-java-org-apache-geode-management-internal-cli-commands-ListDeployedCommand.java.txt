GEODE-5971: Refactoring various commands (#3294)

* GEODE-5971: Refactoring various commands

- DeployCommand
- DestroyFunctionCommand
- ExecuteFunctionCommand
- ListDeployedCommand
- ListFunctionCommand
- UndeployCommand

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

+import java.util.Map;
-import org.apache.geode.SystemFailure;
-import org.apache.geode.cache.execute.ResultCollector;
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.CliUtil;
+import org.apache.geode.management.cli.GfshCommand;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-public class ListDeployedCommand extends InternalGfshCommand {
+public class ListDeployedCommand extends GfshCommand {
-  public Result listDeployed(@CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
+  public ResultModel listDeployed(@CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-    try {
-      TabularResultData tabularData = ResultBuilder.createTabularResultData();
-      boolean accumulatedData = false;
-
-      Set<DistributedMember> targetMembers = findMembers(group, null);
-
-      if (targetMembers.isEmpty()) {
-        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-      }
-
-      ResultCollector<?, ?> rc =
-          CliUtil.executeFunction(this.listDeployedFunction, null, targetMembers);
-      List<CliFunctionResult> results = CliFunctionResult.cleanResults((List<?>) rc.getResult());
-
-      for (CliFunctionResult result : results) {
-        if (result.getThrowable() != null) {
-          tabularData.accumulate("Member", result.getMemberIdOrName());
-          tabularData.accumulate("JAR", "");
-          tabularData.accumulate("JAR Location",
-              "ERROR: " + result.getThrowable().getClass().getName() + ": "
-                  + result.getThrowable().getMessage());
-          accumulatedData = true;
-          tabularData.setStatus(Result.Status.ERROR);
-        } else {
-          String[] strings = (String[]) result.getSerializables();
-          for (int i = 0; i < strings.length; i += 2) {
-            tabularData.accumulate("Member", result.getMemberIdOrName());
-            tabularData.accumulate("JAR", strings[i]);
-            tabularData.accumulate("JAR Location", strings[i + 1]);
-            accumulatedData = true;
-          }
-        }
-      }
-
-      if (!accumulatedData) {
-        return ResultBuilder.createInfoResult(CliStrings.LIST_DEPLOYED__NO_JARS_FOUND_MESSAGE);
-      }
-      return ResultBuilder.buildResult(tabularData);
-
-    } catch (VirtualMachineError e) {
-      SystemFailure.initiateFailure(e);
-      throw e;
-    } catch (Throwable th) {
-      SystemFailure.checkFailure();
-      return ResultBuilder.createGemFireErrorResult("Exception while attempting to list deployed: "
-          + th.getClass().getName() + ": " + th.getMessage());
+    Set<DistributedMember> targetMembers = findMembers(group, null);
+    if (targetMembers.isEmpty()) {
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+
+    ResultModel result = new ResultModel();
+    TabularResultModel tabularData = result.addTable("jars");
+
+    List<CliFunctionResult> functionResults = executeAndGetFunctionResult(this.listDeployedFunction,
+        null, targetMembers);
+
+    for (CliFunctionResult cliResult : functionResults) {
+      Map<String, String> strings = (Map<String, String>) cliResult.getResultObject();
+      for (Map.Entry<String, String> jar : strings.entrySet()) {
+        tabularData.accumulate("Member", cliResult.getMemberIdOrName());
+        tabularData.accumulate("JAR", jar.getKey());
+        tabularData.accumulate("JAR Location", jar.getValue());
+      }
+    }
+
+    if (tabularData.getRowSize() == 0) {
+      return ResultModel.createInfo(CliStrings.LIST_DEPLOYED__NO_JARS_FOUND_MESSAGE);
+    }
+
+    return result;

MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 INS8 UPD42 MOV60 MOV25 MOV60 INS60 MOV60 INS70 MOV25 MOV41 INS43 INS43 INS59 UPD74 MOV44 INS42 INS8 INS27 INS42 UPD42 MOV42 UPD42 INS14 INS42 INS42 INS32 MOV43 UPD43 UPD42 UPD42 INS60 INS70 INS32 INS34 INS43 MOV42 UPD42 MOV42 INS45 UPD42 UPD42 INS74 INS59 INS44 INS32 INS8 INS42 INS42 UPD42 UPD42 UPD42 MOV42 INS43 INS43 INS43 INS42 INS11 INS74 INS42 UPD42 MOV42 INS42 MOV21 MOV21 MOV21 UPD42 UPD42 INS42 INS42 INS42 INS74 INS32 INS43 MOV43 INS43 INS43 MOV43 INS43 UPD42 MOV42 UPD42 MOV42 INS40 INS42 INS32 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL32 DEL11 DEL32 DEL76 DEL76 DEL42 DEL42 DEL42 DEL2 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL38 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL32 DEL32 DEL27 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL85 DEL5 DEL42 DEL85 DEL5 DEL42 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL34 DEL7 DEL42 DEL9 DEL7 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL70 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL41 DEL8 DEL12 DEL54 DEL8