GEODE-4650: Refactor Elder selection (#2393)

GEODE-4650: Resolve race condition in selection of the elder

* no longer cache the elder, re-compute the elder when needed
* extract elder logic to a new class to make unit testing possible
* adds tests for elder selection
* adds tests of DLock Grantor failover
* removes isAdam() - isAdam used to mean that the member was alone (that there were no non-surprise, non-admin members in the cluster) when it joined. This was only used in two places. The first, in the DLockService, protected against recovering dlocks when there isn't a cluster. This usage is replaced with a check for isLoner(). The other use of isAdam was in ElderInitProcessor and was redundant with an inner check if there were other members in the distributed system.
* fix testFairness so that it can be run repeatedly in the same JVM 

Signed-off-by: Dan Smith <dsmith@pivotal.io>
Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>
Signed-off-by: Ken Howe <khowe@pivotal.io>

-        logger.debug("state after looking for membership coordinator is {}", state);
+        logger.info("state after looking for membership coordinator is {}", state);
-          logger.debug("found possible coordinator {}", state.possibleCoordinator);
+          logger.info("found possible coordinator {}", state.possibleCoordinator);
-    if (logger.isDebugEnabled()) {
-      logger.debug("JoinLeave.processLeaveRequest invoked.  isCoordinator=" + isCoordinator
-          + "; isStopping=" + isStopping + "; cancelInProgress="
-          + services.getCancelCriterion().isCancelInProgress());
-    }
+    logger.info(() -> "JoinLeave.processLeaveRequest invoked.  isCoordinator=" + isCoordinator
+        + "; isStopping=" + isStopping + "; cancelInProgress="
+        + services.getCancelCriterion().isCancelInProgress());
-      logger.debug("ignoring leave request from old member");
+      logger.info("ignoring leave request from old member");
-      logger.debug("Checking to see if I should become coordinator");
+      logger.info("Checking to see if I should become coordinator");
+            logger.info("received {}", response);
-              logger.debug("Locator's address indicates it is part of a distributed system "
+              logger.info("Locator's address indicates it is part of a distributed system "
-    logger.debug("searching for coordinator in findCoordinatorFromView");
+    logger.info("searching for coordinator in findCoordinatorFromView");
+      logger.info("findCoordinatorFromView processing {}", resp);
+      logger.info("findCoordinatorFromView is selecting {}", coord);
-      if (((GMSMember) m.getNetMember()).equals(jgId)) {
+      if (m.getNetMember().equals(jgId)) {

MOV21 UPD42 INS86 UPD42 INS21 INS21 MOV27 INS32 INS32 UPD42 UPD42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 MOV32 UPD42 UPD42 INS21 INS32 INS42 INS42 INS45 INS42 UPD42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL43 DEL11 DEL36