GEODE-77(Sub-Task GEODE-205) After a network outage is fixed a former member can rejoin

-
-import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+import static com.gemstone.gemfire.internal.DataSerializableFixedID.JOIN_RESPONSE;
-import static com.gemstone.gemfire.internal.DataSerializableFixedID.JOIN_RESPONSE;
-
+import com.gemstone.gemfire.distributed.internal.membership.QuorumChecker;
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+
+  private GMSPingPonger pingPonger = new GMSPingPonger();
+
+  
-      
+      myChannel.setReceiver(null);
-      this.myChannel.close();
+      if ((services.isShutdownDueToForcedDisconnect() && services.isAutoReconnectEnabled()) || services.getManager().isReconnectingDS()) {
+        
+      }
+      else {
+        this.myChannel.close();
+      }
+    logicalAddress = logicalAddress.copy();
-          Throwable cause = services.getManager().getShutdownCause();
+          Throwable cause = services.getShutdownCause();
-            ne.initCause(services.getManager().getShutdownCause());
+            ne.initCause(services.getShutdownCause());
-      this.myChannel.disconnect();
+      if ((services.isShutdownDueToForcedDisconnect() && services.isAutoReconnectEnabled()) || services.getManager().isReconnectingDS()) {
+      }
+      else {
+        this.myChannel.disconnect();
+      }
+  public QuorumChecker getQuorumChecker() {    
+    GMSQuorumChecker qc = new GMSQuorumChecker(
+          services.getJoinLeave().getPreviousView(), services.getConfig().getLossThreshold(),
+          this.myChannel);
+    qc.initialize();
+    return qc;
+  }
+      //Respond to ping messages sent from other systems that are in a auto reconnect state
+      Object contents = jgmsg.getBuffer();
+      if (contents instanceof byte[]) {
+          byte[] msgBytes = (byte[]) contents;
+  	    if (pingPonger.isPingMessage(msgBytes)) {
+  	    	try {
+  	    	  pingPonger.sendPongMessage(myChannel, jgAddress, jgmsg.getSrc());
+            }
+            catch (Exception e) {
+              logger.info("Failed sending Pong message to " + jgmsg.getSrc());
+            }
+  	        return;
+  	    }
+      }
+      

MOV26 MOV26 INS26 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS42 INS42 INS14 INS21 INS42 INS60 INS21 INS41 INS43 INS8 INS7 INS8 INS43 INS59 INS32 INS42 INS60 INS25 INS42 INS21 INS25 INS42 INS32 INS25 INS42 INS42 INS14 INS42 INS42 INS43 INS59 INS62 INS8 INS32 INS27 INS8 MOV8 INS42 INS42 INS27 INS8 MOV8 INS43 INS32 INS32 INS22 INS42 INS42 INS32 INS42 INS5 INS60 INS25 INS42 INS42 INS33 INS36 INS32 INS36 MOV32 INS42 INS32 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS39 INS85 INS5 INS59 INS32 INS8 INS27 MOV32 INS42 INS27 UPD42 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS11 INS42 INS42 INS42 INS54 INS41 INS32 INS32 INS42 INS32 INS32 INS5 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS85 INS21 INS44 INS8 INS32 INS43 INS42 INS21 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS32 INS42 INS42