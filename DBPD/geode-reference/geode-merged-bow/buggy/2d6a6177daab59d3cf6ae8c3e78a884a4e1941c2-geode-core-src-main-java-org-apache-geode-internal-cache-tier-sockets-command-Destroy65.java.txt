GEODE-6166: Improves put performance (#2970)

* Encode Operation ordinal in Message Part directly
* Don't allocate hashmap until we need it.
* Add putByte to Part and pre-allocate serialized form.
* Use Deque to avoid allocating lots of LinkedList.Node objects

-import org.apache.geode.internal.cache.OpType;
-import org.apache.geode.internal.cache.tier.CachedRegionHelper;
-    Part regionNamePart;
-    Part keyPart;
-    Part callbackArgPart;
-    Part eventPart;
-    Part expectedOldValuePart;
-
-    Object operation = null;
-    Object expectedOldValue = null;
-
-    String regionName = null;
-    Object callbackArg = null, key = null;
-    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
-    regionNamePart = clientMessage.getPart(0);
-    keyPart = clientMessage.getPart(1);
-    expectedOldValuePart = clientMessage.getPart(2);
+    final Part regionNamePart = clientMessage.getPart(0);
+    final Part keyPart = clientMessage.getPart(1);
+    final Part expectedOldValuePart = clientMessage.getPart(2);
+
+    final Operation operation;
-
-      operation = clientMessage.getPart(3).getObject();
-
-      if (((operation instanceof Operation) && ((Operation) operation == Operation.REMOVE))
-          || ((operation instanceof Byte) && (Byte) operation == OpType.DESTROY))
-
-      {
-        expectedOldValue = expectedOldValuePart.getObject();
-      }
+      operation = getOperation(clientMessage.getPart(3), Operation.DESTROY);
-    eventPart = clientMessage.getPart(4);
+    Object expectedOldValue = null;
+    if (operation == Operation.REMOVE) {
+      try {
+        expectedOldValue = expectedOldValuePart.getObject();
+      } catch (Exception e) {
+        writeException(clientMessage, e, false, serverConnection);
+        serverConnection.setAsTrue(RESPONDED);
+        return;
+      }
+    }
+    final Part eventPart = clientMessage.getPart(4);
+
+    Object callbackArg = null;
-      callbackArgPart = clientMessage.getPart(5);
+      final Part callbackArgPart = clientMessage.getPart(5);
-    regionName = regionNamePart.getString();
+
+    final Object key;
+
+    final String regionName = regionNamePart.getString();
+
-    LocalRegion region = (LocalRegion) serverConnection.getCache().getRegion(regionName);
+    final LocalRegion region = (LocalRegion) serverConnection.getCache().getRegion(regionName);
-    ByteBuffer eventIdPartsBuffer = ByteBuffer.wrap(eventPart.getSerializedForm());
-    long threadId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
-    long sequenceId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
-    EventID eventId =
+    final ByteBuffer eventIdPartsBuffer = ByteBuffer.wrap(eventPart.getSerializedForm());
+    final long threadId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
+    final long sequenceId = EventID.readEventIdPartsFromOptmizedByteArray(eventIdPartsBuffer);
+    final EventID eventId =
-    EventIDHolder clientEvent = new EventIDHolder(eventId);
+    final EventIDHolder clientEvent = new EventIDHolder(eventId);

MOV60 MOV60 MOV21 MOV60 MOV21 INS54 INS25 INS60 INS60 INS60 INS83 MOV43 INS83 MOV43 INS83 MOV43 INS83 MOV43 INS8 INS12 INS27 INS8 INS83 MOV43 INS59 INS83 MOV43 INS59 INS83 MOV43 INS59 INS83 INS83 INS83 INS83 INS83 INS83 MOV32 MOV32 MOV32 MOV21 INS44 INS8 INS42 INS40 MOV54 INS42 MOV32 INS60 INS42 INS42 MOV32 INS43 INS42 INS21 MOV21 INS41 MOV8 INS83 MOV43 INS59 MOV32 UPD42 MOV42 INS32 INS32 INS42 MOV32 UPD42 INS40 UPD42 MOV42 INS42 INS42 INS9 UPD42 MOV42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60 DEL33 DEL42 DEL7 DEL42 DEL62 DEL36 DEL42 DEL43 DEL42 DEL11 DEL40 DEL27 DEL36 DEL27 DEL36 DEL42 DEL42 DEL43 DEL62 DEL36 DEL42 DEL43 DEL42 DEL11 DEL40 DEL27 DEL27 DEL36 DEL27 DEL25 DEL8 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL59 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21