GEODE-6195: Check if returned value is caused by a retried putIfAbsent operation (#2993)

* GEODE-6195: Check if returned value is caused by a retried putIfAbsent operation

  * Treats a retried putIfAbsent operation a successful one if returned value is the value to be put
  * Move the check value methods to ValueComparisonHelper class.

-      if (event.hasRetried() && putIfAbsentResultHasSameValue(value, result)) {
+      if (event.hasRetried() && putIfAbsentResultHasSameValue(true, value, result)) {
-  boolean putIfAbsentResultHasSameValue(Object value, Object result) {
-    if (Token.isInvalid(result)) {
-      return value == null;
+  boolean putIfAbsentResultHasSameValue(boolean isClient, Object valueToBePut, Object result) {
+    if (Token.isInvalid(result) || result == null) {
+      return valueToBePut == null;
-    return result.equals(value);
+
+    boolean isCompressedOffHeap =
+        isClient ? false : getAttributes().getOffHeap() && getAttributes().getCompressor() != null;
+    return ValueComparisonHelper.checkEquals(valueToBePut, result, isCompressedOffHeap, getCache());
+  }
+
+  boolean bridgePutIfAbsentResultHasSameValue(byte[] valueToBePut, boolean isValueToBePutObject,
+      Object result) {
+    if (Token.isInvalid(result) || result == null) {
+      return valueToBePut == null;
+    }
+
+    boolean isCompressedOffHeap =
+        getAttributes().getOffHeap() && getAttributes().getCompressor() != null;
+    if (isValueToBePutObject) {
+      return ValueComparisonHelper.checkEquals(EntryEventImpl.deserialize(valueToBePut), result,
+          isCompressedOffHeap, getCache());
+    }
+    return ValueComparisonHelper.checkEquals(valueToBePut, result, isCompressedOffHeap, getCache());
-
-
-        return event.getOldValue();
+        Object result = event.getOldValue();
+        if (event.isPossibleDuplicate() && putIfAbsentResultHasSameValue(false, value, result)) {
+          if (logger.isDebugEnabled()) {
+            logger.debug("possible duplicate putIfAbsent event and result is the value to be put,"
+                + " treat this as a successful putIfAbsent");
+          }
+          return null;
+        }
+        return result;
-      } else if (oldValue == null) {
-        // fix for 42189, putIfAbsent on server can return null if the
-        // operation was not performed (oldValue in cache was null).
-        // We return the INVALID token instead of null to distinguish
-        // this case from successful operation
-        return Token.INVALID;
-      }
+      } else {
+        if (value != null) {
+          assert (value instanceof byte[]);
+        }
+        if (event.isPossibleDuplicate()
+            && bridgePutIfAbsentResultHasSameValue((byte[]) value, isObject, oldValue)) {
+          // result is possibly due to the retry
+          if (logger.isDebugEnabled()) {
+            logger.debug("retried putIfAbsent and got oldValue as the value to be put,"
+                + " treat this as a successful putIfAbsent");
+          }
+          return null;
+        }
+        if (oldValue == null) {
+          // fix for 42189, putIfAbsent on server can return null if the
+          // operation was not performed (oldValue in cache was null).
+          // We return the INVALID token instead of null to distinguish
+          // this case from successful operation
+          return Token.INVALID;
+        }
+      }

INS31 INS44 INS39 INS42 INS44 INS44 INS44 INS8 INS39 INS42 UPD42 INS60 INS5 INS42 INS39 INS42 INS43 INS42 INS25 INS60 INS25 INS41 INS27 INS39 INS59 INS39 INS85 INS42 INS27 INS8 INS39 INS59 INS42 INS8 INS32 MOV32 INS27 INS42 INS16 INS42 INS42 INS42 UPD42 INS32 INS32 INS27 INS41 INS42 INS27 INS41 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS42 INS9 INS27 UPD42 MOV42 INS42 INS42 INS42 INS42 INS33 INS27 INS32 INS27 INS32 INS42 INS8 INS8 UPD42 INS32 INS27 INS42 INS33 INS32 INS42 INS32 INS33 INS42 INS42 INS32 INS42 INS42 INS32 INS60 INS25 INS41 INS25 INS25 MOV25 INS9 INS32 INS42 INS32 INS33 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 MOV8 INS42 INS27 INS8 INS27 INS8 INS42 INS32 INS42 INS42 INS42 INS42 MOV32 INS32 INS32 INS25 INS42 INS33 INS6 INS32 INS32 INS25 INS41 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS32 INS8 INS33 INS36 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS8 INS33 INS42 INS42 INS21 INS62 INS5 INS42 INS42 INS42 INS21 INS32 INS42 INS5 INS39 INS85 INS32 INS42 INS42 INS27 INS39 INS85 INS42 INS42 INS27 INS45 INS45 INS45 INS45