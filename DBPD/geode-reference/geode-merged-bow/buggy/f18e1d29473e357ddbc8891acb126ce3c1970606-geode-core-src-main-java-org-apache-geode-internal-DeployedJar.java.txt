GEODE-2912: Hot deploy for functions in deployed Jars

+import io.github.lukehutch.fastclasspathscanner.FastClasspathScanner;
+import io.github.lukehutch.fastclasspathscanner.scanner.ScanResult;
+import org.apache.commons.collections.CollectionUtils;
+import org.apache.geode.cache.CacheClosedException;
+import org.apache.geode.cache.CacheFactory;
+import org.apache.geode.cache.Declarable;
+import org.apache.geode.cache.execute.Function;
+import org.apache.geode.cache.execute.FunctionService;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.pdx.internal.TypeRegistry;
+import org.apache.logging.log4j.Logger;
+
+import java.util.function.Predicate;
-
-import io.github.lukehutch.fastclasspathscanner.FastClasspathScanner;
-import io.github.lukehutch.fastclasspathscanner.scanner.ScanResult;
-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.cache.CacheClosedException;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.cache.Declarable;
-import org.apache.geode.cache.execute.Function;
-import org.apache.geode.cache.execute.FunctionService;
-import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.pdx.internal.TypeRegistry;
+import java.util.stream.Stream;
-   * Scan the JAR file and attempt to load all classes and register any function classes found.
+   * Scan the JAR file and attempt to register any function classes found.
-  // This method will process the contents of the JAR file as stored in this.jarByteContent
-  // instead of reading from the original JAR file. This is done because we can't open up
-  // the original file and then close it without releasing the shared lock that was obtained
-  // in the constructor. Once this method is finished, all classes will have been loaded and
-  // there will no longer be a need to hang on to the original contents so they will be
-  // discarded.
-  synchronized void loadClassesAndRegisterFunctions() throws ClassNotFoundException {
+
+  public synchronized void registerFunctions() throws ClassNotFoundException {
-  synchronized void cleanUp() {
-    for (Function function : this.registeredFunctions) {
-      FunctionService.unregisterFunction(function.getId());
-    }
-    this.registeredFunctions.clear();
+  /**
+   * Unregisters all functions from this jar if it was undeployed (i.e. newVersion == null), or all
+   * functions not present in the new version if it was redeployed.
+   *
+   * @param newVersion The new version of this jar that was deployed, or null if this jar was
+   *        undeployed.
+   */
+  protected synchronized void cleanUp(DeployedJar newVersion) {
+    Stream<String> oldFunctions = this.registeredFunctions.stream().map(Function::getId);
+    Stream<String> removedFunctions;
+    if (newVersion == null) {
+      removedFunctions = oldFunctions;
+    } else {
+      Predicate<String> isRemoved =
+          (String oldFunctionId) -> !newVersion.hasFunctionWithId(oldFunctionId);
+
+      removedFunctions = oldFunctions.filter(isRemoved);
+    }
+
+    removedFunctions.forEach(FunctionService::unregisterFunction);
+    this.registeredFunctions.clear();
+  private boolean hasFunctionWithId(String id) {
+    if (CollectionUtils.isEmpty(this.registeredFunctions)) {
+      return false;
+    }
+
+    return this.registeredFunctions.stream().map(Function::getId)
+        .anyMatch(functionId -> functionId.equals(id));
+  }
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS83 UPD42 INS29 INS83 INS44 INS83 INS39 INS42 INS44 INS8 INS65 INS65 INS43 INS42 INS60 INS60 INS25 MOV21 INS43 INS42 INS25 INS41 UPD66 INS66 INS66 INS42 INS66 INS66 INS42 INS74 INS59 INS74 INS59 INS27 INS8 INS8 INS42 INS32 INS8 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS42 INS33 INS21 INS60 INS21 UPD42 UPD42 INS90 INS42 INS42 INS22 INS41 INS32 INS42 INS86 INS42 INS42 INS32 INS42 INS90 INS42 INS42 INS7 INS74 INS59 INS7 INS42 INS42 INS52 INS42 INS9 INS32 INS42 INS90 INS59 INS32 MOV22 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS86 INS42 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS38 INS42 INS42 INS42 INS52 INS42 UPD43 MOV43 UPD42 MOV42 INS32 UPD42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL44 DEL8 DEL70