GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

+import org.apache.geode.internal.security.SecurityServiceFactory;
-  private final SecurityService securityService = SecurityService.getSecurityService();
+  private final SecurityService securityService;
-  public static GemFireCacheImpl createClient(DistributedSystem system, PoolFactory pf,
+  public static GemFireCacheImpl createClient(InternalDistributedSystem system, PoolFactory pf,
-  public static GemFireCacheImpl create(DistributedSystem system, CacheConfig cacheConfig) {
+  public static GemFireCacheImpl create(InternalDistributedSystem system, CacheConfig cacheConfig) {
-  static GemFireCacheImpl createWithAsyncEventListeners(DistributedSystem system,
+  static GemFireCacheImpl createWithAsyncEventListeners(InternalDistributedSystem system,
-  public static Cache create(DistributedSystem system, boolean existingOk,
+  public static Cache create(InternalDistributedSystem system, boolean existingOk,
-  private static GemFireCacheImpl basicCreate(DistributedSystem system, boolean existingOk,
+  private static GemFireCacheImpl basicCreate(InternalDistributedSystem system, boolean existingOk,
-  private GemFireCacheImpl(boolean isClient, PoolFactory pf, DistributedSystem system,
+  private GemFireCacheImpl(boolean isClient, PoolFactory pf, InternalDistributedSystem system,
-      this.system = (InternalDistributedSystem) system;
+      this.system = system;
+
+      this.securityService = this.system.getSecurityService();
+
+  public SecurityService getSecurityService() {
+    return this.securityService;
+  }
+
+  @Override
-    // first initialize the security service using the security properties
-    this.securityService.initSecurity(this.system.getConfig().getSecurityProps());
-    // secondly if cacheConfig has a securityManager, use that instead
-    if (this.cacheConfig.getSecurityManager() != null) {
-      this.securityService.setSecurityManager(this.cacheConfig.getSecurityManager());
-    }
-    // if cacheConfig has a postProcessor, use that instead
-    if (this.cacheConfig.getPostProcessor() != null) {
-      this.securityService.setPostProcessor(this.cacheConfig.getPostProcessor());
-    }
-

INS26 INS40 INS23 INS31 MOV83 MOV83 MOV43 INS59 INS78 INS83 INS43 INS42 INS8 MOV42 UPD43 UPD43 UPD43 UPD43 UPD43 MOV43 INS42 INS42 INS41 UPD42 UPD42 UPD42 UPD42 UPD42 MOV22 INS21 INS7 INS42 MOV22 INS32 MOV22 INS42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL32 DEL33 DEL27 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL32 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25