GEODE-6580: Cleanup static analyzer warnings. (#3432)


+
-import org.apache.geode.internal.cache.tier.sockets.ChunkedMessage;
-          boolean onlyUseExistingCnx = ((poolImpl.getMaxConnections() != -1
-              && poolImpl.getConnectionCount() >= poolImpl.getMaxConnections()) ? true : false);
+          boolean onlyUseExistingCnx = (poolImpl.getMaxConnections() != -1
+              && poolImpl.getConnectionCount() >= poolImpl.getMaxConnections());
-        } catch (AllConnectionsInUseException e) {
+        } catch (AllConnectionsInUseException ignored) {
+      this(regionName, key, value, deltaBytes, event, op, requireOldValue, expectedOldValue,
+          callbackArg, respondingToInvalidDelta, respondingToInvalidDelta, prSingleHopEnabled);
+    }
+
+    PutOpImpl(Region region, Object key, Object value, byte[] deltaBytes,
+        EntryEventImpl event, Operation op, boolean requireOldValue, Object expectedOldValue,
+        Object callbackArg, boolean sendFullObj, boolean prSingleHopEnabled) {
+      this(region.getFullPath(), key, value, deltaBytes, event, op, requireOldValue,
+          expectedOldValue,
+          callbackArg, false, sendFullObj, prSingleHopEnabled);
+      this.region = (LocalRegion) region;
+    }
+
+    private PutOpImpl(String regionName, Object key, Object value, byte[] deltaBytes,
+        EntryEventImpl event, Operation op, boolean requireOldValue, Object expectedOldValue,
+        Object callbackArg, boolean respondingToInvalidDelta, boolean sendFullObj,
+        boolean prSingleHopEnabled) {
-        logger.debug("PutOpImpl constructing(1) message for {}; operation={}", event.getEventId(),
+        logger.debug("PutOpImpl constructing message for {}; operation={}", event.getEventId(),
-      if (!respondingToInvalidDelta && deltaBytes != null && op == Operation.UPDATE) {
-        getMessage().addObjPart(Boolean.TRUE);
-        getMessage().addBytesPart(deltaBytes);
-        this.deltaSent = true;
-        if (isDebugEnabled) {
-          logger.debug("PutOp: Sending delta for key {}", this.key);
-        }
-      } else if (value instanceof CachedDeserializable) {
-        CachedDeserializable cd = (CachedDeserializable) value;
-        if (!cd.isSerialized()) {
-          // it is a byte[]
-          getMessage().addObjPart(Boolean.FALSE);
-          getMessage().addObjPart(cd.getDeserializedForReading());
-        } else {
-          getMessage().addObjPart(Boolean.FALSE);
-          Object cdValue = cd.getValue();
-          if (cdValue instanceof byte[]) {
-            getMessage().addRawPart((byte[]) cdValue, true);
-          } else {
-            getMessage().addObjPart(cdValue);
-          }
-        }
-      } else {
-        getMessage().addObjPart(Boolean.FALSE);
-        getMessage().addObjPart(value);
-      }
-      getMessage().addBytesPart(event.getEventId().calcBytes());
-      if (callbackArg != null) {
-        getMessage().addObjPart(callbackArg);
-      }
-    }
-
-    public PutOpImpl(Region region, Object key, Object value, byte[] deltaBytes,
-        EntryEventImpl event, Operation op, boolean requireOldValue, Object expectedOldValue,
-        Object callbackArg, boolean sendFullObj, boolean prSingleHopEnabled) {
-      super(MessageType.PUT,
-          7 + (callbackArg != null ? 1 : 0) + (expectedOldValue != null ? 1 : 0));
-      this.key = key;
-      this.callbackArg = callbackArg;
-      this.event = event;
-      this.value = value;
-      this.region = (LocalRegion) region;
-      this.regionName = region.getFullPath();
-      this.prSingleHopEnabled = prSingleHopEnabled;
-      final boolean isDebugEnabled = logger.isDebugEnabled();
-      if (isDebugEnabled) {
-        logger.debug("PutOpImpl constructing message with operation={}", op);
-      }
-      getMessage().addStringPart(region.getFullPath());
-      getMessage().addBytePart(op.ordinal);
-      int flags = 0;
-      if (requireOldValue)
-        flags |= 0x01;
-      if (expectedOldValue != null)
-        flags |= 0x02;
-      getMessage().addIntPart(flags);
-      if (expectedOldValue != null) {
-        getMessage().addObjPart(expectedOldValue);
-      }
-      getMessage().addStringOrObjPart(key);
-      // Add message part for sending either delta or full value
-        this.deltaSent = true;
+        deltaSent = true;
-      processAck(msg, "put", con);
+      processAck(msg, con);
-          if (this.region != null) {
+          if (region != null) {
-          VersionTag tag = (VersionTag) msg.getPart(partIdx++).getObject();
+          VersionTag tag = (VersionTag) msg.getPart(partIdx).getObject();
-          this.event.setVersionTag(tag);
+          event.setVersionTag(tag);
-     * @param opName text describing this op
-    private void processAck(Message msg, String opName, Connection con) throws Exception {
+    private void processAck(Message msg, Connection con) throws Exception {
-      if (this.deltaSent && this.region != null) {
-        this.region.getCachePerfStats().incDeltasSent();
+      if (deltaSent && region != null) {
+        region.getCachePerfStats().incDeltasSent();
-      if (msgType == MessageType.REPLY) {
-        return;
-      } else {
+      if (msgType != MessageType.REPLY) {
-          AbstractOp op = new PutOpImpl(this.regionName, this.key, this.value, null, this.event,
-              Operation.CREATE, this.requireOldValue, this.expectedOldValue, this.callbackArg,
-              true /* send full obj */, this.prSingleHopEnabled);
+          AbstractOp op = new PutOpImpl(regionName, key, value, null, event,
+              Operation.CREATE, requireOldValue, expectedOldValue, callbackArg,
+              true /* send full obj */, prSingleHopEnabled);
-          if (this.region != null) {
-            this.region.getCachePerfStats().incDeltaFullValuesSent();
+          if (region != null) {
+            region.getCachePerfStats().incDeltaFullValuesSent();
-          String s = ": While performing a remote " + opName;
+          String s = ": While performing a remote " + "put";
-    /**
-     * Attempts to read a response to this operation by reading it from the given connection, and
-     * returning it.
-     *
-     * @param cnx the connection to read the response from
-     * @return the result of the operation or <code>null</code if the operation has no result.
-     * @throws Exception if the execute failed
-     */
-    @Override
-    protected Object attemptReadResponse(Connection cnx) throws Exception {
-      Message msg = createResponseMessage();
-      if (msg != null) {
-        msg.setComms(cnx.getSocket(), cnx.getInputStream(), cnx.getOutputStream(),
-            cnx.getCommBuffer(), cnx.getStats());
-        if (msg instanceof ChunkedMessage) {
-          try {
-            return processResponse(msg, cnx);
-          } finally {
-            msg.unsetComms();
-            processSecureBytes(cnx, msg);
-          }
-        } else {
-          try {
-            msg.receive();
-          } finally {
-            msg.unsetComms();
-            processSecureBytes(cnx, msg);
-          }
-          return processResponse(msg, cnx);
-        }
-      } else {
-        return null;
-      }
-    }

MOV31 MOV31 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS42 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS8 UPD83 INS44 INS43 INS42 INS43 INS42 INS43 INS42 INS5 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS17 INS17 MOV21 INS39 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 MOV27 MOV25 UPD27 MOV27 MOV8 INS42 MOV27 MOV42 MOV42 MOV43 INS42 UPD45 UPD42 INS42 MOV43 MOV8 MOV42 MOV42 MOV11 MOV32 MOV21 MOV60 MOV25 MOV40 MOV32 MOV42 MOV42 MOV43 INS42 UPD42 MOV43 MOV42 MOV42 MOV32 MOV59 MOV8 MOV42 MOV42 INS42 INS42 INS42 MOV43 MOV36 MOV42 MOV42 MOV32 MOV42 MOV40 MOV42 MOV42 MOV21 MOV21 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 MOV39 MOV32 INS45 MOV32 MOV11 MOV32 MOV42 MOV42 INS42 INS42 MOV42 MOV85 DEL40 DEL26 DEL9 DEL9 DEL16 DEL36 DEL40 DEL34 DEL42 DEL33 DEL27 DEL34 DEL34 DEL16 DEL36 DEL42 DEL33 DEL27 DEL34 DEL34 DEL16 DEL36 DEL27 DEL46 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL32 DEL42 DEL40 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL34 DEL7 DEL21 DEL25 DEL42 DEL33 DEL27 DEL42 DEL34 DEL7 DEL21 DEL25 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL40 DEL32 DEL21 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL9 DEL7 DEL21 DEL42 DEL42 DEL42 DEL45 DEL52 DEL42 DEL22 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL33 DEL41 DEL8 DEL25 DEL8 DEL52 DEL42 DEL22 DEL45 DEL52 DEL42 DEL22 DEL42 DEL37 DEL52 DEL42 DEL22 DEL42 DEL66 DEL65 DEL42 DEL44 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL41 DEL8 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42