GEODE-11: defined index will be saved and can be found.

This closes #217

GEODE-11: Adding a defined index field in LuceneServiceImpl

Added a definedIndexMap field in LuceneServiceImpl to store the uninitialized lucene indexes

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE-11: Added status to gfsh commands

Added a field status(initialized/defined wrt region creation) to list and describe lucene commands.
Added a dunit test for create index command to verify that the created index is stored in definedIndexMap.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE-11: Removed methods from LuceneService interface

Removed methods accessing definedIndexMap from the LuceneServiceInterface.
Made few other method and field name changes as per review comments.

+import com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationProfile;
-
-  private final Map<String, String> fieldAnalyzers;
+  private Map<String, String> fieldAnalyzers=null;
+  private boolean initialized;
-  public LuceneIndexDetails(final String indexName, final String regionPath, final String[] searchableFieldNames, Map<String, Analyzer> fieldAnalyzers, LuceneIndexStats indexStats) {
+  public LuceneIndexDetails(final String indexName, final String regionPath, final String[] searchableFieldNames, final Map<String, Analyzer> fieldAnalyzers, LuceneIndexStats indexStats, boolean initialized) {
-    this.fieldAnalyzers = getAnalyzerStrings(fieldAnalyzers);
+    this.fieldAnalyzers = getFieldAnalyzerStrings(fieldAnalyzers);
+    this.initialized = initialized;
-    this(index.getName(), index.getRegionPath(), index.getFieldNames(), index.getFieldAnalyzers(),index.getIndexStats());
+    this(index.getName(), index.getRegionPath(), index.getFieldNames(),index.getFieldAnalyzers(),index.getIndexStats(), true);
+  }
+
+  public LuceneIndexDetails(LuceneIndexCreationProfile indexProfile) {
+    this(indexProfile.getIndexName(), indexProfile.getRegionPath(), indexProfile.getFieldNames(), null, null, false);
+    this.fieldAnalyzers=getFieldAnalyzerStringsFromProfile(indexProfile.getFieldAnalyzers());
-  private Map<String, String> getAnalyzerStrings(Map<String, Analyzer> fieldAnalyzers) {
+  private Map<String, String> getFieldAnalyzerStrings(Map<String, Analyzer> fieldAnalyzers) {
+  private Map<String, String> getFieldAnalyzerStringsFromProfile(Map<String, Class <? extends Analyzer>> fieldAnalyzers) {
+    if(fieldAnalyzers == null) {
+      return Collections.emptyMap();
+
+    }
+
+    Map<String, String> results = new HashMap<>();
+
+    for (Entry<String, Class<? extends Analyzer>> entry : fieldAnalyzers.entrySet()) {
+      final String analyzer = entry.getValue().getSimpleName();
+      if(analyzer != null) {
+        results.put(entry.getKey(), analyzer);
+      }
+    }
+    return results;
+  }
+
+    buffer.append(",\tStatus =\n\t"+ getInitialized());
+  public boolean getInitialized() {
+    return initialized;
+  }

INS26 INS40 INS23 INS23 INS31 INS31 INS31 MOV83 INS74 INS59 INS83 INS39 INS59 INS44 INS83 INS42 INS44 INS8 UPD42 INS83 MOV74 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS43 INS43 INS43 INS42 INS33 INS42 INS83 INS39 INS42 INS21 INS43 INS42 INS17 INS21 INS74 INS42 INS25 INS60 INS70 INS41 INS21 INS41 INS42 INS42 INS42 INS7 INS9 INS42 INS32 INS32 INS32 INS33 INS33 INS9 INS7 INS43 INS43 INS74 INS27 INS8 INS74 INS59 INS44 INS32 INS8 INS42 INS32 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS32 INS42 INS42 INS43 INS76 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS74 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS27 UPD42 INS52 INS42 INS52 INS42 INS42 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS74 INS43 INS43 INS74 INS83 INS43 INS59 INS27 INS8 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS76 INS42 UPD42 MOV42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL83 DEL59 DEL23