GEODE-77: moving failure detection sockets into the membership view

+import java.util.Arrays;
-import com.gemstone.gemfire.distributed.internal.membership.gms.Services;
-  private static final long serialVersionUID = -8888347937416039434L;
+  private int[] failureDetectionPorts = new int[10];
+  
+    Arrays.fill(failureDetectionPorts, -1);
-    this.hashedMembers = new HashSet<>(members);
+    hashedMembers = new HashSet<>(members);
-    int seed = creator.hashCode() + (int) System.currentTimeMillis();
+    Arrays.fill(failureDetectionPorts, -1);
-    this.hashedMembers = new HashSet<InternalDistributedMember>(members);
+    this.hashedMembers = new HashSet<InternalDistributedMember>();
+    Arrays.fill(failureDetectionPorts, -1);
+    this.failureDetectionPorts = new int[other.failureDetectionPorts.length];
+    System.arraycopy(other.failureDetectionPorts, 0, this.failureDetectionPorts, 0, other.failureDetectionPorts.length);
+    this.failureDetectionPorts = new int[mbrs.size()+10];
+    Arrays.fill(this.failureDetectionPorts, -1);
+  
+  public int[] getFailureDetectionPorts() {
+    return this.failureDetectionPorts;
+  }
+  
+  public int getFailureDetectionPort(InternalDistributedMember mbr) {
+    int idx = members.indexOf(mbr);
+    if (idx < 0 || failureDetectionPorts == null || idx >= failureDetectionPorts.length) {
+      return -1;
+    }
+    return failureDetectionPorts[idx];
+  }
+  
+  public void setFailureDetectionPort(InternalDistributedMember mbr, int port) {
+    int idx = members.indexOf(mbr);
+    if (idx < 0) {
+      throw new IllegalArgumentException("element not found in members list:" + mbr);
+    }
+    ensureFDCapacity(idx);
+    failureDetectionPorts[idx] = port;
+  }
+  /**
+   * ensures that there is a slot at idx to store an int
+   */
+  private void ensureFDCapacity(int idx) {
+    if (failureDetectionPorts == null) {
+      failureDetectionPorts = new int[idx+10];
+      Arrays.fill(failureDetectionPorts, -1);
+    } else if (idx >= failureDetectionPorts.length) {
+      int[] p = new int[idx+10];
+      if (failureDetectionPorts.length > 0) {
+        System.arraycopy(failureDetectionPorts, 0, p, 0, failureDetectionPorts.length);
+      }
+      Arrays.fill(p, idx, idx+9, -1);
+      failureDetectionPorts = p;
+    }
+  }
+  
+    int idx = members.size()-1;
+    ensureFDCapacity(idx);
+    this.failureDetectionPorts[idx] = -1;
+    int idx = this.members.indexOf(mbr);
+    if (idx >= 0) {
+      System.arraycopy(failureDetectionPorts, idx+1, failureDetectionPorts, idx, failureDetectionPorts.length-idx-1);
+      failureDetectionPorts[failureDetectionPorts.length-1] = -1;
+    }
-    this.members.removeAll(ids);
+    for (InternalDistributedMember mbr: ids) {
+      remove(mbr);
+    }
+    DataSerializer.writeIntArray(failureDetectionPorts, out);
+    failureDetectionPorts = DataSerializer.readIntArray(in);

MOV26 UPD40 INS23 INS31 INS31 INS31 INS31 MOV83 INS5 INS59 INS83 INS5 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS8 INS8 INS39 INS85 INS42 INS3 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS39 INS85 INS41 INS43 INS42 INS60 INS25 INS41 INS43 INS42 INS39 INS42 INS60 INS25 INS21 INS21 INS65 INS39 INS42 INS25 INS60 INS21 INS21 MOV21 INS60 INS25 MOV41 MOV21 INS70 INS21 INS21 INS5 INS34 INS32 INS32 INS32 INS7 INS32 INS7 INS32 INS22 INS42 INS39 INS59 INS27 INS8 INS2 INS42 INS39 INS59 INS27 INS8 INS32 INS7 INS66 INS27 INS8 INS25 INS39 INS59 INS32 INS7 INS39 INS59 INS27 INS8 INS44 INS42 INS8 INS32 INS7 INS39 INS85 INS42 INS42 INS42 INS38 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS38 INS42 INS42 INS42 INS38 INS22 INS3 INS42 INS42 INS40 INS34 INS22 INS34 INS40 INS22 INS3 INS42 INS42 INS22 INS38 INS52 INS42 INS42 INS32 INS27 INS27 INS41 INS42 INS42 INS42 INS32 INS42 INS34 INS53 INS42 INS42 INS2 INS42 INS42 INS33 INS21 INS21 INS27 INS8 INS42 INS27 INS42 INS42 INS2 INS38 INS42 MOV32 INS42 INS34 INS21 INS21 INS43 INS42 MOV21 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS34 INS34 INS52 INS42 INS5 INS40 INS52 INS42 INS52 INS42 INS5 INS27 INS52 INS42 INS34 INS42 INS42 INS42 INS27 INS27 INS42 INS40 INS38 INS42 INS42 INS42 INS14 INS42 INS42 INS7 INS32 INS42 INS40 INS60 INS25 INS21 INS21 INS32 INS34 INS22 INS42 INS34 UPD42 UPD42 INS32 INS7 INS42 INS32 INS42 INS42 INS42 INS39 INS85 INS39 INS85 INS32 INS34 INS42 INS34 INS42 INS33 INS34 INS43 INS27 INS42 INS3 INS42 INS42 INS42 INS38 INS5 INS59 INS27 INS8 INS32 INS7 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS2 INS38 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS5 INS27 UPD34 MOV34 INS39 INS85 INS42 INS3 INS40 INS34 INS21 INS42 INS42 INS42 INS42 INS27 INS38 INS42 INS42 INS42 INS34 INS40 INS42 INS34 INS42 INS27 INS34 INS39 INS85 INS42 INS34 INS5 INS27 INS32 INS42 INS34 INS34 INS40 INS34 INS39 INS85 INS42 INS34 INS42 INS42 INS42 INS34 INS42 INS34 INS40 DEL83 DEL83 DEL39 DEL42 DEL38 DEL59 DEL23 DEL52 DEL42 DEL22 DEL39 DEL42 DEL42 DEL42 DEL32 DEL39 DEL32 DEL11 DEL27 DEL59 DEL60 DEL42 DEL8 DEL8