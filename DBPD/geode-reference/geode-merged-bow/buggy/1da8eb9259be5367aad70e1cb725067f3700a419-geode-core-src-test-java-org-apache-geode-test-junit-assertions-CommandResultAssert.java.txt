GEODE-5288: improve ResultModel assertions (#2038)

Co-authored-by: Finn Southerland <fsoutherland@pivotal.io>
+import static org.assertj.core.api.Assertions.fail;
-import org.json.JSONArray;
+import org.apache.geode.management.internal.cli.result.ModelCommandResult;
+import org.apache.geode.management.internal.cli.result.model.DataResultModel;
+import org.apache.geode.management.internal.cli.result.model.InfoResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-
-  private Object[] toArray(JSONArray array) {
-    Object[] values = new Object[array.length()];
+  /*
+   * methods that are only applicable to ModelCommandResult
+   */
-    for (int i = 0; i < array.length(); i++) {
-      values[i] = array.get(i);
+  // Will throw error unless this is a ModelCommand Result
+  public ResultModel getResultModel() {
+    ModelCommandResult modelCommandResult = (ModelCommandResult) actual.getCommandResult();
+    return modelCommandResult.getResultData();
+  }
+
+  public CommandResultAssert hasSection(String... sectionName) {
+    ResultModel resultModel = getResultModel();
+    assertThat(resultModel.getSectionNames()).contains(sectionName);
+    return this;
+  }
+
+  // convenience method to get the first info section. if more than one info section
+  // use the sectionName to get it
+  public InfoResultModelAssert hasInfoSection() {
+    return new InfoResultModelAssert(getResultModel().getInfoSections().get(0));
+  }
+
+  public InfoResultModelAssert hasInfoSection(String sectionName) {
+    ResultModel resultModel = getResultModel();
+    InfoResultModel section = resultModel.getInfoSection(sectionName);
+    if (section == null) {
+      fail(sectionName + " section not found");
+    return new InfoResultModelAssert(section);
+  }
-    return values;
+  // convenience method to get the first table section. if more than one table section
+  // use the sectionName to get it
+  public TabularResultModelAssert hasTableSection() {
+    return new TabularResultModelAssert(getResultModel().getTableSections().get(0));
+  }
+
+  public TabularResultModelAssert hasTableSection(String sectionName) {
+    ResultModel resultModel = getResultModel();
+    TabularResultModel section = resultModel.getTableSection(sectionName);
+    if (section == null) {
+      fail(sectionName + " section not found");
+    }
+    return new TabularResultModelAssert(section);
+  }
+
+  // convenience method to get the first data section. if more than one data section
+  // use the sectionName to get it
+  public DataResultModelAssert hasDataSection() {
+    return new DataResultModelAssert(getResultModel().getDataSections().get(0));
+  }
+
+  public DataResultModelAssert hasDataSection(String sectionName) {
+    ResultModel resultModel = getResultModel();
+    DataResultModel section = resultModel.getDataSection(sectionName);
+    if (section == null) {
+      fail(sectionName + " section not found");
+    }
+    return new DataResultModelAssert(section);

MOV26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD83 MOV83 INS43 INS42 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS60 INS41 INS42 UPD43 UPD42 INS60 INS21 INS41 UPD42 MOV42 INS41 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS42 INS41 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS42 MOV41 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS43 INS59 INS32 UPD42 INS43 INS59 INS32 INS52 INS14 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS14 INS14 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS14 INS14 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS14 UPD42 MOV42 INS42 INS11 INS42 INS42 UPD42 MOV42 INS42 INS32 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS34 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS32 INS42 INS34 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS27 INS32 INS42 INS42 INS27 INS32 INS42 INS42 INS27 UPD42 MOV42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL32 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL32 DEL7 DEL21 DEL8 DEL24 DEL8 DEL31