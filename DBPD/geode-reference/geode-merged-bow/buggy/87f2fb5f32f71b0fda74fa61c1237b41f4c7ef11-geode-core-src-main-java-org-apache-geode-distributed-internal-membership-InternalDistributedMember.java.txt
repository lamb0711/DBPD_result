GEODE-2000 client should see server-bind-address in event memberId

The previous fix for this caused confusion as it changed the server
memberId that is used in other places and should remain unchanged.
This change set alters just the listener-invocation code in the client
cache so that client events are based on the ServerLocation information
returned by the Locator or added to the connection pool by applications.

Udo worked with me on this and we found the listener invocation code to
be somewhat convoluted, mixing server-side notification about clients
with client-side notification about servers in the same code.  This
lead to a bit of refactoring in InternalClientMembership to separate the two.

A number of changes had to be made in test code.  Some tests were
requiring that client-side listeners see the server's exact member
ID which is no longer true since the ID being fabricated out of a
ServerLocation doesn't have as much detail as the true member ID and
so is not equal() to it.  Some other test code was creating
ServerLocation objects with non-existent host names.  This is
no longer allowed so we changed these tests to use a numeric IP address.

+import org.apache.geode.GemFireConfigException;
+import org.apache.geode.distributed.internal.ServerLocation;
-  public InternalDistributedMember(String i, int p) throws UnknownHostException {
+  public InternalDistributedMember(String i, int p) {
+   * Creates a new InternalDistributedMember for use in notifying membership listeners. The version
+   * information in the ID is set to Version.CURRENT.
+   * 
+   * @param location the coordinates of the server
+   */
+
+  public InternalDistributedMember(ServerLocation location) {
+    this.hostName = location.getHostName();
+    InetAddress addr = null;
+    try {
+      addr = InetAddress.getByName(this.hostName);
+    } catch (UnknownHostException e) {
+      throw new GemFireConfigException("Unable to resolve server location " + location, e);
+    }
+    this.netMbr = MemberFactory.newNetMember(addr, location.getPort());
+    this.vmKind = DistributionManager.NORMAL_DM_TYPE;
+    this.versionObj = Version.CURRENT;
+  }
+
+  /**
-  public InternalDistributedMember(String i, int p, Version version) throws UnknownHostException {
+  public InternalDistributedMember(String i, int p, Version version) {
-  public InternalDistributedMember(String i, int p, Version version, NetMember netMember)
-      throws UnknownHostException {
+  public InternalDistributedMember(String i, int p, Version version, NetMember netMember) {

INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS42 INS44 INS8 INS65 INS65 INS43 INS42 INS21 INS60 INS54 INS21 INS21 INS21 INS66 INS66 INS42 INS66 INS42 INS7 INS43 INS59 INS8 INS12 INS7 INS7 INS7 INS22 INS32 INS42 INS42 INS33 INS21 INS44 INS8 INS22 INS32 INS22 INS40 INS22 INS40 INS52 INS42 INS42 INS42 INS7 MOV43 INS42 INS53 INS52 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS52 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS22 INS43 INS27 INS42 INS52 INS42 INS42 INS45 INS42 DEL42 DEL43 DEL42 DEL43