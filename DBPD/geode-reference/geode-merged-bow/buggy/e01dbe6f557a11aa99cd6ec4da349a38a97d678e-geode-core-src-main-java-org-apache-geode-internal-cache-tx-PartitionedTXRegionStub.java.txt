GEODE-2091: Do not return false when containsValueForKey call failed in a transaction

Correctly handle exception to fail the transaction instead of returning null.
Add check for colocated buckets so that correct TrasactionException can be thrown.
Fix containsKey method call as well.
Add test cases in dunit test.

+import org.apache.geode.cache.Region;
+import org.apache.geode.internal.cache.ColocationHelper;
+import java.util.Collection;
+  public Map<Integer, Boolean> getBuckets() {
+    return buckets;
+  }
-    if (keyInfo != null && !buckets.isEmpty() && !buckets.containsKey(keyInfo.getBucketId())) {
-      // for parent region if previous ops were successful and for child colocated regions
-      // where the bucketId was not previously encountered
+
+    if (isKeyInNonColocatedBucket(keyInfo)) {
-      if (ex instanceof PrimaryBucketException) {
+      if (ex instanceof PrimaryBucketException || ex instanceof BucketNotFoundException) {
+  // is this key in a different bucket from all the existing buckets
+  // of the underlying PR or its colocated PRs touched by the transaction.
+  private boolean isKeyInNonColocatedBucket(KeyInfo keyInfo) {
+    Map<Region<?, ?>, TXRegionStub> regionStubs = this.state.getRegionStubs();
+    Collection<PartitionedRegion> colcatedRegions = (Collection<PartitionedRegion>) ColocationHelper
+        .getAllColocationRegions((PartitionedRegion) this.region).values();
+    // get all colocated region buckets touched in the transaction
+    for (PartitionedRegion colcatedRegion : colcatedRegions) {
+      PartitionedTXRegionStub regionStub =
+          (PartitionedTXRegionStub) regionStubs.get(colcatedRegion);
+      if (regionStub != null) {
+        buckets.putAll(regionStub.getBuckets());
+      }
+    }
+    return keyInfo != null && !buckets.isEmpty() && !buckets.containsKey(keyInfo.getBucketId());
+  }
+
-        return false;
+        RuntimeException re = getTransactionException(keyInfo, e);
+        re.initCause(e);
+        throw re;
-        return false;
+        RuntimeException re = getTransactionException(keyInfo, e);
+        re.initCause(e);
+        throw re;
-        return null;
+        RuntimeException re = getTransactionException(keyInfo, e);
+        re.initCause(e);
+        throw re;

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS43 INS41 INS43 INS42 INS60 INS60 INS70 INS41 INS42 INS42 INS42 INS42 INS32 INS42 INS74 INS59 INS74 INS59 INS44 INS42 INS8 MOV27 INS42 INS42 INS43 INS74 INS43 INS42 INS32 INS43 INS43 INS42 INS11 INS43 INS42 INS60 INS25 INS44 MOV44 MOV44 INS8 INS27 INS42 INS43 INS76 INS76 INS42 INS22 INS42 INS42 INS42 INS74 INS32 INS42 INS43 INS59 INS27 INS8 INS43 INS42 MOV21 INS60 INS21 INS53 MOV43 MOV42 INS25 MOV21 MOV60 INS21 INS53 INS25 MOV21 MOV60 MOV21 MOV53 MOV62 INS62 INS42 INS52 INS42 INS43 INS43 INS32 INS42 INS42 INS42 INS11 INS42 INS33 INS21 INS42 INS32 INS43 INS59 INS32 INS42 MOV32 INS8 INS32 INS42 MOV32 INS8 INS42 INS43 INS42 INS42 INS42 INS42 INS11 INS43 INS32 INS32 INS42 INS42 INS60 INS21 INS53 INS42 INS42 MOV14 INS42 INS42 INS42 MOV60 MOV21 MOV53 INS42 INS42 INS42 INS60 MOV21 MOV53 INS42 INS43 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS42 INS43 INS59 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 MOV42 DEL9 DEL41 DEL9 DEL41 DEL8 DEL25 DEL33 DEL41 DEL8 DEL25 DEL8