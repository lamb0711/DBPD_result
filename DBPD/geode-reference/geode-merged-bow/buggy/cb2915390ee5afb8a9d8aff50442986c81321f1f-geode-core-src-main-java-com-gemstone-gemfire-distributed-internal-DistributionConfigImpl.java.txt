GEODE-1377: Initial move of system properties from private to public

-    String sslEnabledString = (String)props.get(SSL_ENABLED_NAME);
-    String clusterSSLEnabledString =(String)props.get(CLUSTER_SSL_ENABLED_NAME);
+    String sslEnabledString = (String)props.get(SSL_ENABLED);
+    String clusterSSLEnabledString =(String)props.get(CLUSTER_SSL_ENABLED);
-    String sslCipher = (String)props.get(SSL_CIPHERS_NAME);
-    String clusterSSLCipher = (String)props.get(CLUSTER_SSL_CIPHERS_NAME);
+    String sslCipher = (String)props.get(SSL_CIPHERS);
+    String clusterSSLCipher = (String)props.get(CLUSTER_SSL_CIPHERS);
-    String sslProtocol = (String)props.get(SSL_PROTOCOLS_NAME);
-    String clusterSSLProtocol = (String)props.get(CLUSTER_SSL_PROTOCOLS_NAME);
+    String sslProtocol = (String)props.get(SSL_PROTOCOLS);
+    String clusterSSLProtocol = (String)props.get(CLUSTER_SSL_PROTOCOLS);
-    String sslReqAuthString = (String)props.get(SSL_REQUIRE_AUTHENTICATION_NAME);
-    String clusterReqAuthString =(String)props.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME);
+    String sslReqAuthString = (String)props.get(SSL_REQUIRE_AUTHENTICATION);
+    String clusterReqAuthString =(String)props.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION);
-    String jmxSSLString = (String)props.get(JMX_MANAGER_SSL_NAME);
-    String jmxSSLEnabledString =(String)props.get(JMX_MANAGER_SSL_ENABLED_NAME);
+    String jmxSSLString = (String)props.get(JMX_MANAGER_SSL);
+    String jmxSSLEnabledString =(String)props.get(JMX_MANAGER_SSL_ENABLED);
-    boolean clusterSSLOverriden = this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME)!=null;
-    boolean p2pSSLOverRidden = this.sourceMap.get(SSL_ENABLED_NAME)!=null;
+    boolean clusterSSLOverriden = this.sourceMap.get(CLUSTER_SSL_ENABLED)!=null;
+    boolean p2pSSLOverRidden = this.sourceMap.get(SSL_ENABLED)!=null;
-      this.sourceMap.put(CLUSTER_SSL_ENABLED_NAME,this.sourceMap.get(SSL_ENABLED_NAME));
+      this.sourceMap.put(CLUSTER_SSL_ENABLED,this.sourceMap.get(SSL_ENABLED));
-      if(this.sourceMap.get(SSL_CIPHERS_NAME)!=null) {
+      if(this.sourceMap.get(SSL_CIPHERS)!=null) {
-        this.sourceMap.put(CLUSTER_SSL_CIPHERS_NAME,this.sourceMap.get(SSL_CIPHERS_NAME));
+        this.sourceMap.put(CLUSTER_SSL_CIPHERS,this.sourceMap.get(SSL_CIPHERS));
-      if(this.sourceMap.get(SSL_PROTOCOLS_NAME)!=null) {
+      if(this.sourceMap.get(SSL_PROTOCOLS)!=null) {
-        this.sourceMap.put(CLUSTER_SSL_PROTOCOLS_NAME,this.sourceMap.get(SSL_PROTOCOLS_NAME));
+        this.sourceMap.put(CLUSTER_SSL_PROTOCOLS,this.sourceMap.get(SSL_PROTOCOLS));
-      if(this.sourceMap.get(SSL_REQUIRE_AUTHENTICATION_NAME)!=null) {
+      if(this.sourceMap.get(SSL_REQUIRE_AUTHENTICATION)!=null) {
-        this.sourceMap.put(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME,this.sourceMap.get(SSL_REQUIRE_AUTHENTICATION_NAME));
+        this.sourceMap.put(CLUSTER_SSL_REQUIRE_AUTHENTICATION,this.sourceMap.get(SSL_REQUIRE_AUTHENTICATION));
-    boolean jmxSSLEnabledOverriden = this.sourceMap.get(JMX_MANAGER_SSL_ENABLED_NAME)!=null;
-    boolean jmxSSLOverriden = this.sourceMap.get(JMX_MANAGER_SSL_NAME)!=null;
-    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME)!=null;
+    boolean jmxSSLEnabledOverriden = this.sourceMap.get(JMX_MANAGER_SSL_ENABLED)!=null;
+    boolean jmxSSLOverriden = this.sourceMap.get(JMX_MANAGER_SSL)!=null;
+    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED)!=null;
-      this.sourceMap.put(JMX_MANAGER_SSL_ENABLED_NAME,this.sourceMap.get(JMX_MANAGER_SSL_NAME));
+      this.sourceMap.put(JMX_MANAGER_SSL_ENABLED,this.sourceMap.get(JMX_MANAGER_SSL));
-      this.sourceMap.put(JMX_MANAGER_SSL_ENABLED_NAME,this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME));
-      if(this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME)!=null) {
+      this.sourceMap.put(JMX_MANAGER_SSL_ENABLED,this.sourceMap.get(CLUSTER_SSL_ENABLED));
+      if(this.sourceMap.get(CLUSTER_SSL_CIPHERS)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_CIPHERS_NAME,this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_CIPHERS_NAME,this.sourceMap.get(CLUSTER_SSL_CIPHERS));
-      if(this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_PROTOCOLS)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_PROTOCOLS_NAME,this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_PROTOCOLS,this.sourceMap.get(CLUSTER_SSL_PROTOCOLS));
-      if(this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION_NAME,this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION,this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_TYPE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD)!=null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-      if(this.sourceMap.get(JMX_MANAGER_SSL_KEYSTORE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME) != null) {
+      if(this.sourceMap.get(JMX_MANAGER_SSL_KEYSTORE)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE) != null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if(this.sourceMap.get(JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME) != null) {
+      if(this.sourceMap.get(JMX_MANAGER_SSL_KEYSTORE_TYPE)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE) != null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_TYPE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if(this.sourceMap.get(JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME) != null) {
+      if(this.sourceMap.get(JMX_MANAGER_SSL_KEYSTORE_PASSWORD)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD) != null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_KEYSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if(this.sourceMap.get(JMX_MANAGER_SSL_TRUSTSTORE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME) != null) {
+      if(this.sourceMap.get(JMX_MANAGER_SSL_TRUSTSTORE)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE) != null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if(this.sourceMap.get(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME) != null) {
+      if(this.sourceMap.get(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD) != null) {
-        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME) != null;
+    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED) != null;
-      this.sourceMap.put(HTTP_SERVICE_SSL_ENABLED_NAME, this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME));
+      this.sourceMap.put(HTTP_SERVICE_SSL_ENABLED, this.sourceMap.get(CLUSTER_SSL_ENABLED));
-      if (this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_CIPHERS) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_CIPHERS_NAME, this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_CIPHERS, this.sourceMap.get(CLUSTER_SSL_CIPHERS));
-      if (this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_PROTOCOLS) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_PROTOCOLS_NAME, this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_PROTOCOLS, this.sourceMap.get(CLUSTER_SSL_PROTOCOLS));
-      if (this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION_NAME,
-            this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION,
+            this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION));
-      if (this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_KEYSTORE) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_NAME, this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE, this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if (this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME, this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_TYPE, this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if (this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME,
-            this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD,
+            this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if (this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE_NAME, this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE, this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if (this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME) != null) {
+      if (this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME,
-            this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD,
+            this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-      if (this.sourceMap.get(HTTP_SERVICE_SSL_KEYSTORE_NAME) == null
-          && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME) != null) {
+      if (this.sourceMap.get(HTTP_SERVICE_SSL_KEYSTORE) == null
+          && this.sourceMap.get(CLUSTER_SSL_KEYSTORE) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_NAME, this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE, this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if (this.sourceMap.get(HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME) == null
-          && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME) != null) {
+      if (this.sourceMap.get(HTTP_SERVICE_SSL_KEYSTORE_TYPE) == null
+          && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME, this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_TYPE, this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if (this.sourceMap.get(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME) == null
-          && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME) != null) {
+      if (this.sourceMap.get(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD) == null
+          && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME,
-            this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD,
+            this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if (this.sourceMap.get(HTTP_SERVICE_SSL_TRUSTSTORE_NAME) == null
-          && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME) != null) {
+      if (this.sourceMap.get(HTTP_SERVICE_SSL_TRUSTSTORE) == null
+          && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE_NAME, this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE, this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if (this.sourceMap.get(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME) == null
-          && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME) != null) {
+      if (this.sourceMap.get(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD) == null
+          && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD) != null) {
-        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME,
-            this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD,
+            this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-    boolean cacheServerSSLOverriden = this.sourceMap.get(SERVER_SSL_ENABLED_NAME)!=null;
-    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME)!=null;
+    boolean cacheServerSSLOverriden = this.sourceMap.get(SERVER_SSL_ENABLED)!=null;
+    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED)!=null;
-      this.sourceMap.put(SERVER_SSL_ENABLED_NAME,this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME));
-      if(this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME)!=null) {
+      this.sourceMap.put(SERVER_SSL_ENABLED,this.sourceMap.get(CLUSTER_SSL_ENABLED));
+      if(this.sourceMap.get(CLUSTER_SSL_CIPHERS)!=null) {
-        this.sourceMap.put(SERVER_SSL_CIPHERS_NAME,this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME));
+        this.sourceMap.put(SERVER_SSL_CIPHERS,this.sourceMap.get(CLUSTER_SSL_CIPHERS));
-      if(this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_PROTOCOLS)!=null) {
-        this.sourceMap.put(SERVER_SSL_PROTOCOLS_NAME,this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME));
+        this.sourceMap.put(SERVER_SSL_PROTOCOLS,this.sourceMap.get(CLUSTER_SSL_PROTOCOLS));
-      if(this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION)!=null) {
-        this.sourceMap.put(SERVER_SSL_REQUIRE_AUTHENTICATION_NAME,this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME));
+        this.sourceMap.put(SERVER_SSL_REQUIRE_AUTHENTICATION,this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE)!=null) {
-        this.sourceMap.put(SERVER_SSL_KEYSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(SERVER_SSL_KEYSTORE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE)!=null) {
-        this.sourceMap.put(SERVER_SSL_KEYSTORE_TYPE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(SERVER_SSL_KEYSTORE_TYPE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD)!=null) {
-        this.sourceMap.put(SERVER_SSL_KEYSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(SERVER_SSL_KEYSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE)!=null) {
-        this.sourceMap.put(SERVER_SSL_TRUSTSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(SERVER_SSL_TRUSTSTORE,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD)!=null) {
-        this.sourceMap.put(SERVER_SSL_TRUSTSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(SERVER_SSL_TRUSTSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-      if(this.sourceMap.get(SERVER_SSL_KEYSTORE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME) != null) {
+      if(this.sourceMap.get(SERVER_SSL_KEYSTORE)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE) != null) {
-        this.sourceMap.put(SERVER_SSL_KEYSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(SERVER_SSL_KEYSTORE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if(this.sourceMap.get(SERVER_SSL_KEYSTORE_TYPE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME) != null) {
+      if(this.sourceMap.get(SERVER_SSL_KEYSTORE_TYPE)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE) != null) {
-        this.sourceMap.put(SERVER_SSL_KEYSTORE_TYPE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(SERVER_SSL_KEYSTORE_TYPE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if(this.sourceMap.get(SERVER_SSL_KEYSTORE_PASSWORD_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME) != null) {
+      if(this.sourceMap.get(SERVER_SSL_KEYSTORE_PASSWORD)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD) != null) {
-        this.sourceMap.put(SERVER_SSL_KEYSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(SERVER_SSL_KEYSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if(this.sourceMap.get(SERVER_SSL_TRUSTSTORE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME) != null) {
+      if(this.sourceMap.get(SERVER_SSL_TRUSTSTORE)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE) != null) {
-        this.sourceMap.put(SERVER_SSL_TRUSTSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(SERVER_SSL_TRUSTSTORE,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if(this.sourceMap.get(SERVER_SSL_TRUSTSTORE_PASSWORD_NAME)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME) != null) {
+      if(this.sourceMap.get(SERVER_SSL_TRUSTSTORE_PASSWORD)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD) != null) {
-        this.sourceMap.put(SERVER_SSL_TRUSTSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(SERVER_SSL_TRUSTSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-    boolean gatewaySSLOverriden = this.sourceMap.get(GATEWAY_SSL_ENABLED_NAME)!=null;
-    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME)!=null;
+    boolean gatewaySSLOverriden = this.sourceMap.get(GATEWAY_SSL_ENABLED)!=null;
+    boolean clusterSSLOverRidden = this.sourceMap.get(CLUSTER_SSL_ENABLED)!=null;
-      this.sourceMap.put(GATEWAY_SSL_ENABLED_NAME,this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME));
-      if(this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME)!=null) {
+      this.sourceMap.put(GATEWAY_SSL_ENABLED,this.sourceMap.get(CLUSTER_SSL_ENABLED));
+      if(this.sourceMap.get(CLUSTER_SSL_CIPHERS)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_CIPHERS_NAME,this.sourceMap.get(CLUSTER_SSL_CIPHERS_NAME));
+        this.sourceMap.put(GATEWAY_SSL_CIPHERS,this.sourceMap.get(CLUSTER_SSL_CIPHERS));
-      if(this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_PROTOCOLS)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_PROTOCOLS_NAME,this.sourceMap.get(CLUSTER_SSL_PROTOCOLS_NAME));
+        this.sourceMap.put(GATEWAY_SSL_PROTOCOLS,this.sourceMap.get(CLUSTER_SSL_PROTOCOLS));
-      if(this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_REQUIRE_AUTHENTICATION_NAME,this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME));
+        this.sourceMap.put(GATEWAY_SSL_REQUIRE_AUTHENTICATION,this.sourceMap.get(CLUSTER_SSL_REQUIRE_AUTHENTICATION));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(GATEWAY_SSL_KEYSTORE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_TYPE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_TYPE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME)!=null) {
+      if(this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD)!=null) {
-        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-      if(this.sourceMap.get(GATEWAY_SSL_KEYSTORE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME) != null) {
+      if(this.sourceMap.get(GATEWAY_SSL_KEYSTORE)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE) != null) {
-        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_NAME));
+        this.sourceMap.put(GATEWAY_SSL_KEYSTORE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE));
-      if(this.sourceMap.get(GATEWAY_SSL_KEYSTORE_TYPE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME) != null) {
+      if(this.sourceMap.get(GATEWAY_SSL_KEYSTORE_TYPE)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE) != null) {
-        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_TYPE_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE_NAME));
+        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_TYPE,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_TYPE));
-      if(this.sourceMap.get(GATEWAY_SSL_KEYSTORE_PASSWORD_NAME)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME) != null) {
+      if(this.sourceMap.get(GATEWAY_SSL_KEYSTORE_PASSWORD)==null && this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD) != null) {
-        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME));
+        this.sourceMap.put(GATEWAY_SSL_KEYSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_KEYSTORE_PASSWORD));
-      if(this.sourceMap.get(GATEWAY_SSL_TRUSTSTORE_NAME)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME)!= null) {
+      if(this.sourceMap.get(GATEWAY_SSL_TRUSTSTORE)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE)!= null) {
-        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_NAME));
+        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE));
-      if(this.sourceMap.get(GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME) != null) {
+      if(this.sourceMap.get(GATEWAY_SSL_TRUSTSTORE_PASSWORD)==null && this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD) != null) {
-        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME));
+        this.sourceMap.put(GATEWAY_SSL_TRUSTSTORE_PASSWORD,this.sourceMap.get(CLUSTER_SSL_TRUSTSTORE_PASSWORD));
-    return propName.equalsIgnoreCase(SSL_ENABLED_NAME) ||
-        propName.equalsIgnoreCase(CLUSTER_SSL_ENABLED_NAME) ||
-        propName.equals(SECURITY_PEER_AUTH_INIT_NAME) ||
-        propName.equals(SECURITY_PEER_AUTHENTICATOR_NAME) ||
+    return propName.equalsIgnoreCase(SSL_ENABLED) ||
+        propName.equalsIgnoreCase(CLUSTER_SSL_ENABLED) ||
+        propName.equals(SECURITY_PEER_AUTH_INIT) ||
+        propName.equals(SECURITY_PEER_AUTHENTICATOR) ||
-    if ( props.containsKey(SSL_ENABLED_NAME) ) {
-      this.setAttribute(SSL_ENABLED_NAME, (String) props.get( SSL_ENABLED_NAME ), this.sourceMap.get(SSL_ENABLED_NAME) );
+    if ( props.containsKey(SSL_ENABLED) ) {
+      this.setAttribute(SSL_ENABLED, (String) props.get( SSL_ENABLED ), this.sourceMap.get(SSL_ENABLED) );
-    if ( props.containsKey(CLUSTER_SSL_ENABLED_NAME) ) {
-      this.setAttribute(CLUSTER_SSL_ENABLED_NAME, (String) props.get( CLUSTER_SSL_ENABLED_NAME ), this.sourceMap.get(CLUSTER_SSL_ENABLED_NAME) );
+    if ( props.containsKey(CLUSTER_SSL_ENABLED) ) {
+      this.setAttribute(CLUSTER_SSL_ENABLED, (String) props.get( CLUSTER_SSL_ENABLED ), this.sourceMap.get(CLUSTER_SSL_ENABLED) );
-    this.userCommandPackages = (String)checkAttribute(USER_COMMAND_PACKAGES, value);
+    this.userCommandPackages = (String)checkAttribute(SystemConfigurationProperties.USER_COMMAND_PACKAGES, value);
-    this.socketLeaseTime = (Integer)checkAttribute(SOCKET_LEASE_TIME_NAME, value);
+    this.socketLeaseTime = (Integer)checkAttribute(SOCKET_LEASE_TIME, value);
-    this.socketBufferSize = (Integer)checkAttribute(SOCKET_BUFFER_SIZE_NAME, value);
+    this.socketBufferSize = (Integer)checkAttribute(SOCKET_BUFFER_SIZE, value);
-    this.conserveSockets = (Boolean)checkAttribute(CONSERVE_SOCKETS_NAME, value);
+    this.conserveSockets = (Boolean)checkAttribute(CONSERVE_SOCKETS, value);
-    this.roles = (String)checkAttribute(ROLES_NAME, value);
+    this.roles = (String)checkAttribute(ROLES, value);
-    this.deployWorkingDir = (File)checkAttribute(DEPLOY_WORKING_DIR, value);
+    this.deployWorkingDir = (File)checkAttribute(SystemConfigurationProperties.DEPLOY_WORKING_DIR, value);
-    this.logFile = (File)checkAttribute(LOG_FILE_NAME, value);
+    this.logFile = (File)checkAttribute(LOG_FILE, value);
-    this.logLevel = (Integer)checkAttribute(LOG_LEVEL_NAME, value);
+    this.logLevel = (Integer)checkAttribute(LOG_LEVEL, value);
-    this.statisticSamplingEnabled = (Boolean)checkAttribute(STATISTIC_SAMPLING_ENABLED_NAME, value);
+    this.statisticSamplingEnabled = (Boolean)checkAttribute(STATISTIC_SAMPLING_ENABLED, value);
-    value = (Integer)checkAttribute(STATISTIC_SAMPLE_RATE_NAME, value);
+    value = (Integer)checkAttribute(STATISTIC_SAMPLE_RATE, value);
-    this.statisticArchiveFile = (File)checkAttribute(STATISTIC_ARCHIVE_FILE_NAME, value);
+    this.statisticArchiveFile = (File)checkAttribute(STATISTIC_ARCHIVE_FILE, value);
-    this.cacheXmlFile = (File)checkAttribute(CACHE_XML_FILE_NAME, value);
+    this.cacheXmlFile = (File)checkAttribute(CACHE_XML_FILE, value);
-    this.ackWaitThreshold = (Integer)checkAttribute(ACK_WAIT_THRESHOLD_NAME, value);
+    this.ackWaitThreshold = (Integer)checkAttribute(ACK_WAIT_THRESHOLD, value);
-    this.ackForceDisconnectThreshold = (Integer)checkAttribute(ACK_SEVERE_ALERT_THRESHOLD_NAME, value);
+    this.ackForceDisconnectThreshold = (Integer)checkAttribute(ACK_SEVERE_ALERT_THRESHOLD, value);
-    this.archiveDiskSpaceLimit = (Integer)checkAttribute(ARCHIVE_DISK_SPACE_LIMIT_NAME, value);
+    this.archiveDiskSpaceLimit = (Integer)checkAttribute(ARCHIVE_DISK_SPACE_LIMIT, value);
-    this.archiveFileSizeLimit = (Integer)checkAttribute(ARCHIVE_FILE_SIZE_LIMIT_NAME, value);
+    this.archiveFileSizeLimit = (Integer)checkAttribute(ARCHIVE_FILE_SIZE_LIMIT, value);
-    this.logDiskSpaceLimit = (Integer)checkAttribute(LOG_DISK_SPACE_LIMIT_NAME, value);
+    this.logDiskSpaceLimit = (Integer)checkAttribute(LOG_DISK_SPACE_LIMIT, value);
-    this.logFileSizeLimit = (Integer)checkAttribute(LOG_FILE_SIZE_LIMIT_NAME, value);
+    this.logFileSizeLimit = (Integer)checkAttribute(LOG_FILE_SIZE_LIMIT, value);
-    this.sslEnabled = (Boolean)checkAttribute(SSL_ENABLED_NAME, value);
+    this.sslEnabled = (Boolean)checkAttribute(SSL_ENABLED, value);
-    this.sslProtocols = (String)checkAttribute(SSL_PROTOCOLS_NAME, value);
+    this.sslProtocols = (String)checkAttribute(SSL_PROTOCOLS, value);
-    this.sslCiphers = (String)checkAttribute(SSL_CIPHERS_NAME, value);
+    this.sslCiphers = (String)checkAttribute(SSL_CIPHERS, value);
-    this.sslRequireAuthentication = (Boolean)checkAttribute(SSL_REQUIRE_AUTHENTICATION_NAME, value);
+    this.sslRequireAuthentication = (Boolean)checkAttribute(SSL_REQUIRE_AUTHENTICATION, value);
-    this.clusterSSLEnabled = (Boolean)checkAttribute(CLUSTER_SSL_ENABLED_NAME, value);
+    this.clusterSSLEnabled = (Boolean)checkAttribute(CLUSTER_SSL_ENABLED, value);
-    this.clusterSSLProtocols = (String)checkAttribute(CLUSTER_SSL_PROTOCOLS_NAME, value);
+    this.clusterSSLProtocols = (String)checkAttribute(CLUSTER_SSL_PROTOCOLS, value);
-    this.clusterSSLCiphers = (String)checkAttribute(CLUSTER_SSL_CIPHERS_NAME, value);
+    this.clusterSSLCiphers = (String)checkAttribute(CLUSTER_SSL_CIPHERS, value);
-    this.clusterSSLRequireAuthentication = (Boolean)checkAttribute(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME, value);
+    this.clusterSSLRequireAuthentication = (Boolean)checkAttribute(CLUSTER_SSL_REQUIRE_AUTHENTICATION, value);
-    value = (String)checkAttribute(CLUSTER_SSL_KEYSTORE_NAME, value);
+    value = (String)checkAttribute(CLUSTER_SSL_KEYSTORE, value);
-    value =  (String)checkAttribute(CLUSTER_SSL_KEYSTORE_TYPE_NAME, value);
+    value =  (String)checkAttribute(CLUSTER_SSL_KEYSTORE_TYPE, value);
-    value = (String)checkAttribute(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME, value);
+    value = (String)checkAttribute(CLUSTER_SSL_KEYSTORE_PASSWORD, value);
-    value = (String)checkAttribute(CLUSTER_SSL_TRUSTSTORE_NAME, value);
+    value = (String)checkAttribute(CLUSTER_SSL_TRUSTSTORE, value);
-    value = (String)checkAttribute(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME, value);
+    value = (String)checkAttribute(CLUSTER_SSL_TRUSTSTORE_PASSWORD, value);
-    mcastSendBufferSize = (Integer)checkAttribute(MCAST_SEND_BUFFER_SIZE_NAME, value);
+    mcastSendBufferSize = (Integer)checkAttribute(MCAST_SEND_BUFFER_SIZE, value);
-    mcastRecvBufferSize = (Integer)checkAttribute(MCAST_RECV_BUFFER_SIZE_NAME, value);
+    mcastRecvBufferSize = (Integer)checkAttribute(MCAST_RECV_BUFFER_SIZE, value);
-    this.asyncDistributionTimeout = (Integer)checkAttribute(ASYNC_DISTRIBUTION_TIMEOUT_NAME, value);
+    this.asyncDistributionTimeout = (Integer)checkAttribute(ASYNC_DISTRIBUTION_TIMEOUT, value);
-    this.asyncQueueTimeout = (Integer)checkAttribute(ASYNC_QUEUE_TIMEOUT_NAME, value);
+    this.asyncQueueTimeout = (Integer)checkAttribute(ASYNC_QUEUE_TIMEOUT, value);
-    this.asyncMaxQueueSize = (Integer)checkAttribute(ASYNC_MAX_QUEUE_SIZE_NAME, value);
+    this.asyncMaxQueueSize = (Integer)checkAttribute(ASYNC_MAX_QUEUE_SIZE, value);
-    mcastFlowControl = (FlowControlParams)checkAttribute(MCAST_FLOW_CONTROL_NAME, values);
+    mcastFlowControl = (FlowControlParams)checkAttribute(MCAST_FLOW_CONTROL, values);
-    udpFragmentSize = (Integer)checkAttribute(UDP_FRAGMENT_SIZE_NAME, value);
+    udpFragmentSize = (Integer)checkAttribute(UDP_FRAGMENT_SIZE, value);
-    udpSendBufferSize = (Integer)checkAttribute(UDP_SEND_BUFFER_SIZE_NAME, value);
+    udpSendBufferSize = (Integer)checkAttribute(UDP_SEND_BUFFER_SIZE, value);
-    udpRecvBufferSize = (Integer)checkAttribute(UDP_RECV_BUFFER_SIZE_NAME, value);
+    udpRecvBufferSize = (Integer)checkAttribute(UDP_RECV_BUFFER_SIZE, value);
-    memberTimeout = (Integer)checkAttribute(MEMBER_TIMEOUT_NAME, value);
+    memberTimeout = (Integer)checkAttribute(MEMBER_TIMEOUT, value);
-    this.clientConflation = (String)checkAttribute(CLIENT_CONFLATION_PROP_NAME, value);
+    this.clientConflation = (String)checkAttribute(CONFLATE_EVENTS, value);
-    durableClientId = (String)checkAttribute(DURABLE_CLIENT_ID_NAME, value);
+    durableClientId = (String)checkAttribute(DURABLE_CLIENT_ID, value);
-    durableClientTimeout = (Integer)checkAttribute(DURABLE_CLIENT_TIMEOUT_NAME, value);
+    durableClientTimeout = (Integer)checkAttribute(DURABLE_CLIENT_TIMEOUT, value);
-    securityClientAuthInit = (String)checkAttribute(SECURITY_CLIENT_AUTH_INIT_NAME, value);
+    securityClientAuthInit = (String)checkAttribute(SECURITY_CLIENT_AUTH_INIT, value);
-    membershipPortRange = (int[])checkAttribute(MEMBERSHIP_PORT_RANGE_NAME, range);
+    membershipPortRange = (int[])checkAttribute(MEMBERSHIP_PORT_RANGE, range);
-    this.enableSharedConfiguration = (Boolean)checkAttribute(ENABLE_CLUSTER_CONFIGURATION_NAME, value);
+    this.enableSharedConfiguration = (Boolean)checkAttribute(ENABLE_CLUSTER_CONFIGURATION, value);
-    this.useSharedConfiguration = (Boolean)checkAttribute(USE_CLUSTER_CONFIGURATION_NAME, newValue);
+    this.useSharedConfiguration = (Boolean)checkAttribute(USE_CLUSTER_CONFIGURATION, newValue);
-    this.loadSharedConfigurationFromDir = (Boolean)checkAttribute(LOAD_CLUSTER_CONFIG_FROM_DIR_NAME, newValue);
+    this.loadSharedConfigurationFromDir = (Boolean)checkAttribute(LOAD_CLUSTER_CONFIGURATION_FROM_DIR, newValue);

