GEODE-6811: refactor MemberStatus in ClusterManagementResult (#3709)

* change memberStatus in ClusterManagementResult to use RealizationResult
+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.management.cli.CliFunction;
+import org.apache.geode.internal.cache.execute.InternalFunction;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.management.api.RealizationResult;
-public class UpdateCacheFunction extends CliFunction<List> {
+public class UpdateCacheFunction implements InternalFunction<List> {
+  private static final Logger logger = LogService.getLogger();
-  public CliFunctionResult executeFunction(FunctionContext<List> context) throws Exception {
+  public void execute(FunctionContext<List> context) {
+    try {
+      context.getResultSender().lastResult(executeFunction(context));
+    } catch (Exception e) {
+      logger.error(e.getMessage(), e);
+      context.getResultSender().lastResult(new RealizationResult()
+          .setSuccess(false)
+          .setMemberName(context.getMemberName())
+          .setMessage(e.getMessage()));
+    }
+  }
+
+  public RealizationResult executeFunction(FunctionContext<List> context) {
+    RealizationResult result = new RealizationResult();
+    result.setMemberName(context.getMemberName());
+
-      return new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
+      return result.setMessage(
-          return new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
+          return result.setMessage(
-        realizer.create(cacheElement, cache);
+        result = realizer.create(cacheElement, cache);
-        realizer.delete(cacheElement, cache);
+        if (!realizer.exists(cacheElement, cache)) {
+          return result.setMessage(
+              "Element with id=" + cacheElement.getId() + " does not exist.");
+        }
+        result = realizer.delete(cacheElement, cache);
-        realizer.update(cacheElement, cache);
+        if (!realizer.exists(cacheElement, cache)) {
+          return result.setSuccess(false).setMessage(
+              "Element with id=" + cacheElement.getId() + " does not exist.");
+        }
+        result = realizer.update(cacheElement, cache);
-    return new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
-        "success");
+    result.setMemberName(context.getMemberName());
+    return result;

INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD74 INS23 INS31 UPD43 INS83 INS83 INS83 INS43 INS59 MOV78 INS83 INS39 INS42 INS44 INS8 UPD43 UPD42 INS42 INS42 INS32 INS74 INS42 INS54 UPD42 INS60 INS21 INS21 INS42 INS42 INS43 INS43 INS8 INS12 INS43 INS59 INS32 INS25 INS25 INS32 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS14 INS42 INS42 MOV32 INS7 INS38 INS8 INS7 INS38 INS8 INS7 INS42 INS42 MOV32 INS32 MOV43 INS42 INS21 INS21 INS43 INS32 INS42 MOV32 INS32 INS41 INS42 MOV32 INS32 INS41 INS42 MOV32 INS32 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 MOV27 INS42 INS42 INS27 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS45 INS32 INS45 INS42 INS42 INS9 INS45 INS32 INS45 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS9 INS43 INS42 DEL42 DEL43 DEL40 DEL45 DEL14 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL40 DEL45 DEL14