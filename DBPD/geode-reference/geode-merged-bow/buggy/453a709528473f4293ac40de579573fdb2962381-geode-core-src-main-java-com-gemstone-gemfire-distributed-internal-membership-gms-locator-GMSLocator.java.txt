GEODE-1372 Added security-udp-dhalgo property.

Added unit test for it.
We start tcp server thread parallel with jgroup initialization. during
this there is possiblity that tcp server sees findCoordinator request.
In this case we added latct with 2 second wait to see whether jgroup
layer has been initialized or not.
If still not initialized then we add pk in GMSScript static variable.

+import com.gemstone.gemfire.distributed.internal.membership.gms.messenger.GMSEncrypt;
+  private final String securityUDPDHAlgo; 
+   * @param securityUDPDHAlgo TODO
-                      boolean networkPartitionDetectionEnabled, LocatorStats stats) {
+                      boolean networkPartitionDetectionEnabled, LocatorStats stats, String securityUDPDHAlgo) {
+    this.securityUDPDHAlgo = securityUDPDHAlgo;
-  public boolean setMembershipManager(MembershipManager mgr) {
+  public synchronized boolean setMembershipManager(MembershipManager mgr) {
+      this.notifyAll();
-  private void findServices() {
+  private synchronized void findServices() {
-  }
+    if(services == null) {
+      try {
+        wait(2000);
+      } catch (InterruptedException e) {
+      }
+    }
+  }  
+      findServices();
-      services.getMessenger().setPublicKey(findRequest.getMyPublicKey(), findRequest.getMemberID());
+      if(!findRequest.getDHAlgo().equals(securityUDPDHAlgo)) {
+        return new FindCoordinatorResponse("Rejecting findCoordinatorRequest, as member not configured same udp security(" + findRequest.getDHAlgo() + " )as locator (" + securityUDPDHAlgo + ")");
+      }
+      if(services != null) {
+        services.getMessenger().setPublicKey(findRequest.getMyPublicKey(), findRequest.getMemberID());
+      } else {
+        GMSEncrypt.registerMember(findRequest.getMyPublicKey(), findRequest.getMemberID());
+      }
-            coordPk = services.getMessenger().getPublickey(coord);
+            if(services != null){
+              coordPk = services.getMessenger().getPublickey(coord);
+            } else {
+              coordPk = GMSEncrypt.getRegisteredPublicKey(coord);
+            }
+    GMSEncrypt.clear();

INS26 INS40 INS23 INS83 INS83 INS43 INS59 INS44 INS83 INS83 INS42 INS42 INS65 INS43 INS42 INS21 INS25 INS21 INS42 INS66 INS42 INS7 INS27 INS8 INS32 INS22 INS42 INS21 INS42 INS33 INS54 INS42 INS42 INS52 INS42 INS32 INS8 INS12 INS21 INS25 INS25 INS52 INS42 INS21 INS44 INS8 INS32 INS38 INS8 INS27 INS8 INS8 INS32 INS43 INS42 INS42 INS32 INS41 INS42 INS33 MOV21 INS21 INS42 INS34 INS42 INS32 INS42 INS42 INS14 INS32 INS42 INS42 INS43 INS27 INS42 INS42 INS32 INS32 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS8 INS42 INS42 INS25 INS27 MOV8 INS8 INS42 INS33 INS21 INS7 INS42 INS32 INS42 INS42 INS42