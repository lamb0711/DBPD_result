Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  private SSLConfigurationFactory() {
-  }
+  private SSLConfigurationFactory() {}
-    if(distributionConfig == null)
-    {
+    if (distributionConfig == null) {
-    if(distributionConfig == null)
-    {
+    if (distributionConfig == null) {
-  public static SSLConfig getSSLConfigForComponent(SecurableCommunicationChannel sslEnabledComponent) {
+  public static SSLConfig getSSLConfigForComponent(
+      SecurableCommunicationChannel sslEnabledComponent) {
-  private synchronized void registeredSSLConfigForComponent(final SecurableCommunicationChannel sslEnabledComponent, final SSLConfig sslConfig) {
+  private synchronized void registeredSSLConfigForComponent(
+      final SecurableCommunicationChannel sslEnabledComponent, final SSLConfig sslConfig) {
-  private SSLConfig createSSLConfigForComponent(final SecurableCommunicationChannel sslEnabledComponent) {
+  private SSLConfig createSSLConfigForComponent(
+      final SecurableCommunicationChannel sslEnabledComponent) {
-    SecurableCommunicationChannel[] sslEnabledComponents = getDistributionConfig().getSecurableCommunicationChannels();
+    SecurableCommunicationChannel[] sslEnabledComponents =
+        getDistributionConfig().getSecurableCommunicationChannels();
-        //Create a SSLConfig separate for HTTP Service. As the require-authentication might differ
+        // Create a SSLConfig separate for HTTP Service. As the require-authentication might differ
-        }else {
+        } else {
-          sslConfig = setAliasForComponent(sslConfig, getDistributionConfig().getHTTPServiceSSLAlias());
+          sslConfig =
+              setAliasForComponent(sslConfig, getDistributionConfig().getHTTPServiceSSLAlias());
-  private boolean determineIfSSLEnabledForSSLComponent(final SecurableCommunicationChannel sslEnabledComponent) {
-    if (ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(), SecurableCommunicationChannel.NONE)) {
+  private boolean determineIfSSLEnabledForSSLComponent(
+      final SecurableCommunicationChannel sslEnabledComponent) {
+    if (ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(),
+        SecurableCommunicationChannel.NONE)) {
-    if (ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(), SecurableCommunicationChannel.ALL)) {
+    if (ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(),
+        SecurableCommunicationChannel.ALL)) {
-    return ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(), sslEnabledComponent) ? true : false;
+    return ArrayUtils.contains(getDistributionConfig().getSecurableCommunicationChannels(),
+        sslEnabledComponent) ? true : false;
+   * 
+   * 
+   * 
+   * 
+   * 
-  private SSLConfig configureSSLPropertiesFromSystemProperties(SSLConfig sslConfig, Properties properties) {
+  private SSLConfig configureSSLPropertiesFromSystemProperties(SSLConfig sslConfig,
+      Properties properties) {
-      sslConfig.setKeystoreType(getValueFromSystemProperties(properties, "javax.net.ssl.keyStoreType"));
+      sslConfig
+          .setKeystoreType(getValueFromSystemProperties(properties, "javax.net.ssl.keyStoreType"));
-      sslConfig.setKeystorePassword(getValueFromSystemProperties(properties, "javax.net.ssl.keyStorePassword"));
+      sslConfig.setKeystorePassword(
+          getValueFromSystemProperties(properties, "javax.net.ssl.keyStorePassword"));
-      sslConfig.setTruststorePassword(getValueFromSystemProperties(properties, "javax.net.ssl.trustStorePassword"));
+      sslConfig.setTruststorePassword(
+          getValueFromSystemProperties(properties, "javax.net.ssl.trustStorePassword"));
-      sslConfig.setTruststoreType(getValueFromSystemProperties(properties, "javax.net.ssl.trustStoreType"));
+      sslConfig.setTruststoreType(
+          getValueFromSystemProperties(properties, "javax.net.ssl.trustStoreType"));
-  private SSLConfig getRegisteredSSLConfigForComponent(final SecurableCommunicationChannel sslEnabledComponent) {
+  private SSLConfig getRegisteredSSLConfigForComponent(
+      final SecurableCommunicationChannel sslEnabledComponent) {
-                                                   final boolean needClientAuth,
-                                                   final String protocols,
-                                                   final String ciphers,
-                                                   final Properties gfsecurityProps,
-                                                   final String alias) {
+      final boolean needClientAuth, final String protocols, final String ciphers,
+      final Properties gfsecurityProps, final String alias) {
-    sslConfig = getInstance().configureSSLPropertiesFromSystemProperties(sslConfig, gfsecurityProps);
+    sslConfig =
+        getInstance().configureSSLPropertiesFromSystemProperties(sslConfig, gfsecurityProps);
