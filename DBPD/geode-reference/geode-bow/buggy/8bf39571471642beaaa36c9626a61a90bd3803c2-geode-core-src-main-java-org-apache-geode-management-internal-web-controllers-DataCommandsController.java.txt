Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The DataCommandsController class implements GemFire Management REST API web service endpoints for the
- * Gfsh Data Commands.
+ * The DataCommandsController class implements GemFire Management REST API web service endpoints for
+ * the Gfsh Data Commands.
+ * 
-                    @RequestParam(CliStrings.GET__KEY) final String key,
-                    @RequestParam(value = CliStrings.GET__KEYCLASS, required = false) final String keyClassName,
-                    @RequestParam(value = CliStrings.GET__VALUEKLASS, required = false) final String valueClassName,
-                    @RequestParam(value= CliStrings.GET__LOAD, defaultValue = "true") final Boolean loadOnCacheMiss)
-  {
+      @RequestParam(CliStrings.GET__KEY) final String key,
+      @RequestParam(value = CliStrings.GET__KEYCLASS, required = false) final String keyClassName,
+      @RequestParam(value = CliStrings.GET__VALUEKLASS,
+          required = false) final String valueClassName,
+      @RequestParam(value = CliStrings.GET__LOAD,
+          defaultValue = "true") final Boolean loadOnCacheMiss) {
-                    @RequestParam(CliStrings.PUT__KEY) final String key,
-                    @RequestParam(value = CliStrings.PUT__KEYCLASS, required = false) final String keyClassName,
-                    @RequestParam(CliStrings.PUT__VALUE) final String value,
-                    @RequestParam(value = CliStrings.PUT__VALUEKLASS, required = false) final String valueClassName,
-                    @RequestParam(value = CliStrings.PUT__PUTIFABSENT, defaultValue = "false") final Boolean putIfAbsent)
-  {
+      @RequestParam(CliStrings.PUT__KEY) final String key,
+      @RequestParam(value = CliStrings.PUT__KEYCLASS, required = false) final String keyClassName,
+      @RequestParam(CliStrings.PUT__VALUE) final String value,
+      @RequestParam(value = CliStrings.PUT__VALUEKLASS,
+          required = false) final String valueClassName,
+      @RequestParam(value = CliStrings.PUT__PUTIFABSENT,
+          defaultValue = "false") final Boolean putIfAbsent) {
-                       @RequestParam(value = CliStrings.REMOVE__ALL, defaultValue = "false") final Boolean allKeys,
-                       @RequestParam(value = CliStrings.REMOVE__KEY, required = false) final String key,
-                       @RequestParam(value = CliStrings.REMOVE__KEYCLASS, required = false) final String keyClassName) {
+      @RequestParam(value = CliStrings.REMOVE__ALL, defaultValue = "false") final Boolean allKeys,
+      @RequestParam(value = CliStrings.REMOVE__KEY, required = false) final String key,
+      @RequestParam(value = CliStrings.REMOVE__KEYCLASS,
+          required = false) final String keyClassName) {
-  public Callable<ResponseEntity<String>> exportData(@PathVariable("member") final String memberNameId,
-                                                     @PathVariable("region") final String regionNamePath,
-                                                     @RequestParam(CliStrings.EXPORT_DATA__FILE) final String file)
-  {
+  public Callable<ResponseEntity<String>> exportData(
+      @PathVariable("member") final String memberNameId,
+      @PathVariable("region") final String regionNamePath,
+      @RequestParam(CliStrings.EXPORT_DATA__FILE) final String file) {
-  public Callable<ResponseEntity<String>> importData(@PathVariable("member") final String memberNameId,
-                                                     @PathVariable("region") final String regionNamePath,
-                                                     @RequestParam(CliStrings.IMPORT_DATA__FILE) final String file)
-  {
+  public Callable<ResponseEntity<String>> importData(
+      @PathVariable("member") final String memberNameId,
+      @PathVariable("region") final String regionNamePath,
+      @RequestParam(CliStrings.IMPORT_DATA__FILE) final String file) {
-                            @RequestParam(CliStrings.LOCATE_ENTRY__KEY) final String key,
-                            @RequestParam(value = CliStrings.LOCATE_ENTRY__KEYCLASS, required = false) final String keyClassName,
-                            @RequestParam(value = CliStrings.LOCATE_ENTRY__VALUEKLASS, required = false) final String valueClassName,
-                            @RequestParam(value = CliStrings.LOCATE_ENTRY__RECURSIVE, defaultValue = "false") final Boolean recursive)
-  {
+      @RequestParam(CliStrings.LOCATE_ENTRY__KEY) final String key,
+      @RequestParam(value = CliStrings.LOCATE_ENTRY__KEYCLASS,
+          required = false) final String keyClassName,
+      @RequestParam(value = CliStrings.LOCATE_ENTRY__VALUEKLASS,
+          required = false) final String valueClassName,
+      @RequestParam(value = CliStrings.LOCATE_ENTRY__RECURSIVE,
+          defaultValue = "false") final Boolean recursive) {
-                                                @RequestParam(CliStrings.QUERY__QUERY) final String oql,
-                                                @RequestParam(value = CliStrings.QUERY__STEPNAME, defaultValue = CliStrings.QUERY__STEPNAME__DEFAULTVALUE) final String stepName,
-                                                @RequestParam(value = CliStrings.QUERY__INTERACTIVE, defaultValue = "true") final Boolean interactive)
-  {
-    //logRequest(request);
+      @RequestParam(CliStrings.QUERY__QUERY) final String oql,
+      @RequestParam(value = CliStrings.QUERY__STEPNAME,
+          defaultValue = CliStrings.QUERY__STEPNAME__DEFAULTVALUE) final String stepName,
+      @RequestParam(value = CliStrings.QUERY__INTERACTIVE,
+          defaultValue = "true") final Boolean interactive) {
+    // logRequest(request);
-    command.addOption(CliStrings.QUERY__INTERACTIVE, String.valueOf(Boolean.TRUE.equals(interactive)));
+    command.addOption(CliStrings.QUERY__INTERACTIVE,
+        String.valueOf(Boolean.TRUE.equals(interactive)));
-  public Callable<ResponseEntity<String>> rebalance(@RequestParam(value = CliStrings.REBALANCE__INCLUDEREGION, required = false) final String[] includedRegions,
-                                                    @RequestParam(value = CliStrings.REBALANCE__EXCLUDEREGION, required = false) final String[] excludedRegions,
-                                                    @RequestParam(value = CliStrings.REBALANCE__SIMULATE, defaultValue = "false") final Boolean simulate,
-                                                    @RequestParam(value = CliStrings.REBALANCE__TIMEOUT, defaultValue = "-1") final Long timeout)
-  {
+  public Callable<ResponseEntity<String>> rebalance(
+      @RequestParam(value = CliStrings.REBALANCE__INCLUDEREGION,
+          required = false) final String[] includedRegions,
+      @RequestParam(value = CliStrings.REBALANCE__EXCLUDEREGION,
+          required = false) final String[] excludedRegions,
+      @RequestParam(value = CliStrings.REBALANCE__SIMULATE,
+          defaultValue = "false") final Boolean simulate,
+      @RequestParam(value = CliStrings.REBALANCE__TIMEOUT,
+          defaultValue = "-1") final Long timeout) {
-      command.addOption(CliStrings.REBALANCE__INCLUDEREGION, StringUtils.concat(includedRegions,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.REBALANCE__INCLUDEREGION,
+          StringUtils.concat(includedRegions, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.REBALANCE__EXCLUDEREGION, StringUtils.concat(excludedRegions,
-        StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.REBALANCE__EXCLUDEREGION,
+          StringUtils.concat(excludedRegions, StringUtils.COMMA_DELIMITER));
