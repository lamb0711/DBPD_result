GEODE-6473: Create a test which utilizes the geode-management.jar (#3254)

- Also restore more detailed logging in ProcessLogger.
+import org.apache.logging.log4j.Level;
+import org.apache.logging.log4j.Logger;
+import org.apache.logging.log4j.core.Filter;
+import org.apache.logging.log4j.core.LoggerContext;
+import org.apache.logging.log4j.core.appender.ConsoleAppender;
+import org.apache.logging.log4j.core.config.Configurator;
+import org.apache.logging.log4j.core.config.builder.api.AppenderComponentBuilder;
+import org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder;
+import org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilderFactory;
+import org.apache.logging.log4j.core.config.builder.impl.BuiltConfiguration;
-
+  private static final LoggerContext LOGGER_CONTEXT = createLoggerContext();
+  private final Logger logger;
+    this.logger = LOGGER_CONTEXT.getLogger(name);
+
-    System.out.println(message);
+    logger.info(message);
-    System.err.println(message);
+    logger.error(message);
+  private static LoggerContext createLoggerContext() {
+    ConfigurationBuilder<BuiltConfiguration> builder =
+        ConfigurationBuilderFactory.newConfigurationBuilder();
+    builder.setStatusLevel(Level.ERROR);
+    builder.add(builder.newFilter("ThresholdFilter", Filter.Result.ACCEPT, Filter.Result.NEUTRAL)
+        .addAttribute("level", Level.DEBUG));
+    AppenderComponentBuilder appenderBuilder = builder.newAppender("Stdout", "CONSOLE")
+        .addAttribute("target", ConsoleAppender.Target.SYSTEM_OUT);
+    appenderBuilder.add(builder.newLayout("PatternLayout").addAttribute("pattern",
+        "[%-5level %d{HH:mm:ss.SSS z}] (%c): %msg%n%throwable"));
+    appenderBuilder.add(builder.newFilter("MarkerFilter", Filter.Result.DENY, Filter.Result.NEUTRAL)
+        .addAttribute("marker", "FLOW"));
+    builder.add(appenderBuilder);
+    builder.add(builder.newLogger("org.apache.logging.log4j", Level.ERROR)
+        .add(builder.newAppenderRef("Stdout")).addAttribute("additivity", false));
+    builder.add(builder.newRootLogger(Level.ERROR).add(builder.newAppenderRef("Stdout")));
+
+    return Configurator.initialize(builder.build());
+  }
+
