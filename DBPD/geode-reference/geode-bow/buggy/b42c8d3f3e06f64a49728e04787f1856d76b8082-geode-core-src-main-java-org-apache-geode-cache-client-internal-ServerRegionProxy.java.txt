GEODE-6798 Refactor client function execution logic (#3822)

* Changes to create instance using suppliers, as and when needed.
This is to fix performance degradation seen with grabage collection.

* Replace set instance with empty collection
Refactor to removed unused arguments from method

-  public void executeFunction(String rgnName, Function function,
-      ServerRegionFunctionExecutor serverRegionExecutor, ResultCollector resultCollector,
-      byte hasResult, boolean replaying, final int timeoutMs) {
+  public void executeFunction(Function function,
+      ServerRegionFunctionExecutor serverRegionExecutor,
+      ResultCollector resultCollector,
+      byte hasResult, final int timeoutMs) {
-    final ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl executeRegionFunctionOp =
-        new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(rgnName, function,
-            serverRegionExecutor, resultCollector, timeoutMs);
+    final Supplier<AbstractOp> executeRegionFunctionOpSupplier =
+        () -> new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(region.getFullPath(),
+            function, serverRegionExecutor, resultCollector, timeoutMs);
-        final Supplier<AbstractOp> executeRegionFunctionOpSupplier =
-            () -> new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(region.getFullPath(),
-                function,
-                serverRegionExecutor, resultCollector, timeoutMs);
-
-            ExecuteRegionFunctionOp.execute(pool,
-                resultCollector, retryAttempts,
-                function.isHA(),
-                executeRegionFunctionOp, false, Collections.EMPTY_SET);
+            ExecuteRegionFunctionOp.execute(pool, resultCollector, retryAttempts, function.isHA(),
+                (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+                    .get(),
+                false, Collections.EMPTY_SET);
-                    region.getFullPath(), function,
-                    executor, resultCollector,
-                    hasResult, new HashSet<>(), true, timeoutMs);
+                    region.getFullPath(), function, executor, resultCollector,
+                    hasResult, Collections.EMPTY_SET, true, timeoutMs);
-            ExecuteRegionFunctionSingleHopOp.execute(pool, region,
-                serverRegionExecutor, resultCollector, serverToBuckets, retryAttempts,
-                function.isHA(), regionFunctionSingleHopOpFunction,
-                executeRegionFunctionOpSupplier);
+            ExecuteRegionFunctionSingleHopOp.execute(pool, region, serverRegionExecutor,
+                resultCollector, serverToBuckets, retryAttempts, function.isHA(),
+                regionFunctionSingleHopOpFunction, executeRegionFunctionOpSupplier);
-            ExecuteRegionFunctionOp.execute(pool,
-                resultCollector, retryAttempts,
-                function.isHA(),
-                executeRegionFunctionOp, false, Collections.EMPTY_SET);
+            ExecuteRegionFunctionOp.execute(pool, resultCollector, retryAttempts, function.isHA(),
+                (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+                    .get(),
+                false, Collections.EMPTY_SET);
-                    region.getFullPath(), function,
-                    executor, resultCollector,
-                    hasResult, new HashSet<>(), isBucketFilter, timeoutMs);
+                    region.getFullPath(), function, executor, resultCollector,
+                    hasResult, Collections.EMPTY_SET, isBucketFilter, timeoutMs);
-                function.isHA(),
-                regionFunctionSingleHopOpFunction,
+                function.isHA(), regionFunctionSingleHopOpFunction,
-        ExecuteRegionFunctionOp.execute(pool,
-            resultCollector, retryAttempts,
-            function.isHA(),
-            executeRegionFunctionOp, false, Collections.EMPTY_SET);
+        ExecuteRegionFunctionOp.execute(pool, resultCollector, retryAttempts, function.isHA(),
+            (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+                .get(),
+            false, Collections.EMPTY_SET);
-          resultCollector, retryAttempts,
-          function.isHA(),
-          executeRegionFunctionOp, false, Collections.EMPTY_SET);
+          resultCollector, retryAttempts, function.isHA(),
+          (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+              .get(),
+          false, Collections.EMPTY_SET);
-  public void executeFunction(String rgnName, String functionId,
+  public void executeFunction(String functionId,
-      boolean replaying,
-        serverRegionExecutor, resultCollector, hasResult, isHA,
-        optimizeForWrite);
+        serverRegionExecutor, resultCollector, hasResult, isHA, optimizeForWrite);
-    final ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl executeRegionFunctionOp =
-        new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(rgnName, functionId,
-            serverRegionExecutor, resultCollector, hasResult, isHA, optimizeForWrite,
-            true, timeoutMs);
+    final Supplier<AbstractOp> executeRegionFunctionOpSupplier =
+        () -> new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(region.getFullPath(),
+            functionId, serverRegionExecutor, resultCollector, hasResult, isHA,
+            optimizeForWrite, true, timeoutMs);
-        final Supplier<AbstractOp> executeRegionFunctionOpSupplier =
-            () -> new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(region.getFullPath(),
-                functionId,
-                serverRegionExecutor, resultCollector, hasResult, isHA,
-                optimizeForWrite, true, timeoutMs);
-
-          if (serverToBuckets == null || serverToBuckets.isEmpty()) {
-            ExecuteRegionFunctionOp.execute(pool,
-                resultCollector, retryAttempts, isHA,
-                executeRegionFunctionOp, false, Collections.EMPTY_SET);
+          if (serverToBuckets == null || serverToBuckets.isEmpty()) {
+            ExecuteRegionFunctionOp.execute(pool, resultCollector, retryAttempts, isHA,
+                (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+                    .get(),
+                false, Collections.EMPTY_SET);
-                    region.getFullPath(), functionId,
-                    executor1, resultCollector,
-                    hasResult, new HashSet<>(), true, isHA, optimizeForWrite, timeoutMs);
+                    region.getFullPath(), functionId, executor1, resultCollector, hasResult,
+                    Collections.EMPTY_SET, true, isHA, optimizeForWrite, timeoutMs);
-                serverRegionExecutor, resultCollector, serverToBuckets, retryAttempts,
-                isHA,
-                regionFunctionSingleHopOpFunction,
-                executeRegionFunctionOpSupplier);
+                serverRegionExecutor, resultCollector, serverToBuckets, retryAttempts, isHA,
+                regionFunctionSingleHopOpFunction, executeRegionFunctionOpSupplier);
+
-          if (serverToFilterMap == null || serverToFilterMap.isEmpty()) {
-            ExecuteRegionFunctionOp.execute(pool,
-                resultCollector, retryAttempts, isHA,
-                executeRegionFunctionOp, false, Collections.EMPTY_SET);
+          if (serverToFilterMap == null || serverToFilterMap.isEmpty()) {
+            ExecuteRegionFunctionOp.execute(pool, resultCollector, retryAttempts, isHA,
+                (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+                    .get(),
+                false, Collections.EMPTY_SET);
-                    region.getFullPath(), functionId,
-                    executor, resultCollector,
-                    hasResult, new HashSet<>(), false, isHA, optimizeForWrite, timeoutMs);
+                    region.getFullPath(), functionId, executor, resultCollector, hasResult,
+                    Collections.EMPTY_SET, false, isHA, optimizeForWrite, timeoutMs);
-                isHA,
-                regionFunctionSingleHopOpFunction,
-                executeRegionFunctionOpSupplier);
+                isHA, regionFunctionSingleHopOpFunction, executeRegionFunctionOpSupplier);
-            executeRegionFunctionOp, false, Collections.EMPTY_SET);
+            (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+                .get(),
+            false, Collections.EMPTY_SET);
-          executeRegionFunctionOp, false, Collections.EMPTY_SET);
+          (ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl) executeRegionFunctionOpSupplier
+              .get(),
+          false, Collections.EMPTY_SET);
