GMSHealthMonitor was only accepting a health-check response to see if a member was alive or not.  This change-set modifies it to allow any message from the suspect to prove that the suspect is alive.  This reduced the amount of suspect processing going on quite a bit, and made it less likely to incorrectly oust a busy member.

GMSMembershipManager was not throwing an exception when distribution was attempted but the manager was shutting down.  This caused large inconsistencies between clients and servers in client/server HA testing.

TCPServer's message to determine the locator's version was using a 2-minute timeout, totally ignoring the timeout passed to it.  It now pays attention to the requested timeout.

A number of tests were using Java assertions instead of JUnit Assert.  I changed all of these in our recently added tests to use the JUnit assertions in case the JUnit jvm doesn't have assertions enabled.

+    services.getCancelCriterion().cancel(null);
-      if (theStats != null)
+      if (theStats != null) {
+      }
+      
+      if (sentBytes == 0) {
+        if (services.getCancelCriterion().cancelInProgress() != null) {
+          throw new DistributedSystemDisconnectedException();
+        }
+      }
-    if (!this.hasConnected) {
-      if (services.getCancelCriterion().cancelInProgress() != null) {
-        throw services.getCancelCriterion().generateCancelledException(null);
-      }
+    if (services.getCancelCriterion().cancelInProgress() != null) {
+      throw new DistributedSystemDisconnectedException("Distributed System is shutting down",
+          services.getCancelCriterion().generateCancelledException(null));
+    }
+    
+    if (isJoining()) {
+
+    // cache the exception so it can be appended to ShutdownExceptions
+    services.setShutdownCause(shutdownCause);
+    services.getCancelCriterion().cancel(reason);
+
-    services.getCancelCriterion().cancel(reason);
-    // cache the exception so it can be appended to ShutdownExceptions
-    services.setShutdownCause(shutdownCause);
-
