GEODE-77: faster network-partition detection, bugfixes for auto-reconnect

network-partition-detection was taking too long to initiate.  This adds checks for IOExceptions to the Transport class to initiate member checks, shrinking the time to detect partitions.

There were still problems with auto-reconnect not being able to join while the old member ID was still in the view.  It would also sometimes install a view and think it had joined when it had not, causing other members to reject messages from the new "member" and resulting in a hung test.  GMSJoinLeave now rejects view messages that don't contain an appropriate member ID during the join process, and installView is smarter about what views it will accept as well.

The view creator was being stubborn about exiting during shutdown.  I've added additional checks to it so that it won't accidentally create another view when GMSJoinLeave is in the process of stopping.

-import java.util.Arrays;
+
+    boolean isNetworkPartition = isNetworkPartition(view, false);
+    
-      if (!(isNetworkPartition(view) && quorumRequired)) {
-        List<Integer> newPorts = new ArrayList<Integer>(view.size());
+      if (!(isNetworkPartition && quorumRequired)) {
+    boolean viewContainsMyUnjoinedAddress = false;
+    if (!this.isJoined) {
+      // if we're still waiting for a join response and we're in this view we
+      // should install the view so join() can finish its work
+      for (InternalDistributedMember mbr: view.getMembers()) {
+        if (localAddress.compareTo(mbr) == 0) {
+          viewContainsMyUnjoinedAddress = true;
+          break;
+        }
+      }
+    }
+
-        if (!this.isJoined) {
-          // if we're still waiting for a join response and we're in this view we
-          // should install the view so join() can finish its work
-          for (InternalDistributedMember mbr: view.getMembers()) {
-            if (localAddress.compareTo(mbr) == 0) {
-              installView(view);
-              break;
-            }
-          }
+        if (viewContainsMyUnjoinedAddress) {
+          installView(view);
-        installView(view);
+        if (isJoined || viewContainsMyUnjoinedAddress) {
+          installView(view);
+        }
+        boolean found = false;
+            found = true;
+        if (!found) {
+          logger.info("rejecting view (not yet joined)");
+          return;
+        }
-      if (isJoined && isNetworkPartition(newView)) {
+      if (isJoined && isNetworkPartition(newView, true)) {
+      
-  private boolean isNetworkPartition(NetView newView) {
+  private boolean isNetworkPartition(NetView newView, boolean logWeights) {
-    if (failedWeight > 0) {
+    if (failedWeight > 0 && logWeights) {
+              if (shutdown || Thread.currentThread().isInterrupted()) {
+                return;
+              }
+              if (shutdown) {
+                return;
+              }
+      
+      if (isShutdown()) {
+        return;
+      }
-
+      
-        if (quorumRequired && isNetworkPartition(newView)) {
+        if (quorumRequired && isNetworkPartition(newView, true)) {
+      
+      // after sending a final view we need to stop this thread if
+      // the GMS is shutting down
+      if (isStopping()) {
+        shutdown = true;
+      }
