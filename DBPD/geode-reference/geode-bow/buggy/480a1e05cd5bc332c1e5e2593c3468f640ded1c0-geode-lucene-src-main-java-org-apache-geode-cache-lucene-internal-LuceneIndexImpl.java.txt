GEODE-2828: AEQ created before the Lucene user regions

	* AEQ is being created before the Lucene user region
	* A countdown latch prevents the index repository computation until the user regions are ready
	* Integration tests do not use a Dummy executor because we need a thread pool for afterPrimary call.

	This closes #481

-import org.apache.geode.internal.cache.PartitionedRegion;
+  protected boolean hasInitializedAEQ = false;
-      // assert dataRegion != null;
-
-      repositoryManager = createRepositoryManager();
-
-      // create AEQ, AEQ listener and specify the listener to repositoryManager
-      createAEQ(dataRegion);
-
+      createLuceneListenersAndFileChunkRegions(
+          (AbstractPartitionedRepositoryManager) repositoryManager);
-  protected abstract RepositoryManager createRepositoryManager();
-
-  protected AsyncEventQueue createAEQ(Region dataRegion) {
-    return createAEQ(createAEQFactory(dataRegion));
+  protected void initializeAEQ(RegionAttributes attributes, String aeqId) {
+    if (!hasInitializedAEQ) {
+      repositoryManager = createRepositoryManager();
+      createAEQ(attributes, aeqId);
+      hasInitializedAEQ = true;
+    }
-  private AsyncEventQueueFactoryImpl createAEQFactory(final Region dataRegion) {
+  protected abstract RepositoryManager createRepositoryManager();
+
+  protected abstract void createLuceneListenersAndFileChunkRegions(
+      AbstractPartitionedRepositoryManager partitionedRepositoryManager);
+
+  protected AsyncEventQueue createAEQ(Region dataRegion) {
+    String aeqId = LuceneServiceImpl.getUniqueIndexName(getName(), regionPath);
+    return createAEQ(createAEQFactory(dataRegion.getAttributes()), aeqId);
+  }
+
+  protected AsyncEventQueue createAEQ(RegionAttributes attributes, String aeqId) {
+    return createAEQ(createAEQFactory(attributes), aeqId);
+  }
+
+  private AsyncEventQueueFactoryImpl createAEQFactory(final RegionAttributes attributes) {
-    if (dataRegion instanceof PartitionedRegion) {
-      PartitionedRegion pr = (PartitionedRegion) dataRegion;
-      if (pr.getPartitionAttributes().getLocalMaxMemory() == 0) {
+    if (attributes.getPartitionAttributes() != null) {
+
+      if (attributes.getPartitionAttributes().getLocalMaxMemory() == 0) {
-    if (dataRegion.getAttributes().getDataPolicy().withPersistence()) {
+    if (attributes.getDataPolicy().withPersistence()) {
-    factory.setDiskStoreName(dataRegion.getAttributes().getDiskStoreName());
+    factory.setDiskStoreName(attributes.getDiskStoreName());
-  private AsyncEventQueue createAEQ(AsyncEventQueueFactoryImpl factory) {
+  private AsyncEventQueue createAEQ(AsyncEventQueueFactoryImpl factory, String aeqId) {
-    String aeqId = LuceneServiceImpl.getUniqueIndexName(getName(), regionPath);
