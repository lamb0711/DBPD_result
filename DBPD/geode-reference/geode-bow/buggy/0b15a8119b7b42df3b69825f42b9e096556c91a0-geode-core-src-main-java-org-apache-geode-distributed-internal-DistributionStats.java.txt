GEODE-6889, GEODE-6890: remove sync when updating max stats (#3728)

* GEODE-6889: Ensure the highest value is recorded to replyWaitMaxTime
* GEODE-6890: Ensure the highest value is recorded to maxSentMessagesTime

Co-authored-by: Murtuza Boxwala <mboxwala@pivotal.io>
+import org.apache.geode.annotations.VisibleForTesting;
-  private static final int sentMessagesTimeId;
-  private static final int sentMessagesMaxTimeId;
+  @VisibleForTesting
+  static final int sentMessagesTimeId;
+  @VisibleForTesting
+  static final int sentMessagesMaxTimeId;
-  private static final int replyWaitTimeId;
+  @VisibleForTesting
+  static final int replyWaitTimeId;
-  private static final int replyWaitMaxTimeId;
+  @VisibleForTesting
+  static final int replyWaitMaxTimeId;
+  private final MaxLongGauge maxReplyWaitTime;
+  private final MaxLongGauge maxSentMessagesTime;
+
-    this.stats = f.createAtomicStatistics(type, "distributionStats", statId);
+    this(f.createAtomicStatistics(type, "distributionStats", statId));
+    maxReplyWaitTime = new MaxLongGauge(replyWaitMaxTimeId, stats);
+    maxSentMessagesTime = new MaxLongGauge(sentMessagesMaxTimeId, stats);
-      long millis = nanos / 1000000;
-      if (getSentMessagesMaxTime() < millis) {
-        this.stats.setLong(sentMessagesMaxTimeId, millis);
-      }
+      long millis = NanoTimer.nanosToMillis(nanos);
+      maxSentMessagesTime.recordMax(millis);
-   * Returns the longest time required to distribute a message, in nanos
-   */
-  public long getSentMessagesMaxTime() {
-    return this.stats.getLong(sentMessagesMaxTimeId);
-  }
-
-
-  /**
-  public long getReplyWaitMaxTime() {
-    return stats.getLong(replyWaitMaxTimeId);
-  }
-
+
-      long mswait = System.currentTimeMillis() - initTime;
-      if (mswait > getReplyWaitMaxTime()) {
-        stats.setLong(replyWaitMaxTimeId, mswait);
-      }
+      long waitTime = System.currentTimeMillis() - initTime;
+      maxReplyWaitTime.recordMax(waitTime);
