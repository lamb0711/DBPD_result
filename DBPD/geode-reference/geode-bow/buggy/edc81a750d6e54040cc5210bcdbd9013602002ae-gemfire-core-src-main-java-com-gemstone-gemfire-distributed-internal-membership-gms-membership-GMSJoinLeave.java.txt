GEODE-77 adding additional test coverage

Test coverage is now > 71% for all membership services.
This also fixes a problem in GMSJoinLeave.join where a member that
was shut down & restarted with a start-locator setting formed a
split-brain.  Now we send a collection of previously attempted
coordinators with FindCoordinator requests, and a member receiving
a join request will check to see if the new member ought to assume
the role of coordinator.  See LocatorDUnitTest.testCollocatedLocatorWithSecurity.

+  
+  public static String BYPASS_DISCOVERY = "gemfire.bypass-discovery";
-
-    if (this.localAddress.getVmKind() == LOCATOR_DM_TYPE
-        && Boolean.getBoolean("gemfire.first-member")) {
+    Set<InternalDistributedMember> alreadyTried = new HashSet<>();
+    
+    if (Boolean.getBoolean(BYPASS_DISCOVERY)) {
-      InternalDistributedMember coord = findCoordinator();
+      InternalDistributedMember coord = findCoordinator(alreadyTried);
-          } 
+          }
+          alreadyTried.add(coord);
-// DEBUGGING - REMOVE
-logger.info("received join response {}", response);
+      logger.debug("received join response {}", response);
+      if (response.getBecomeCoordinator()) {
+        logger.info("I am being told to become the membership coordinator by {}", coord);
+        this.currentView = response.getCurrentView();
+        becomeCoordinator(response.getCurrentView().getCoordinator());
+        return true;
+      }
+
+    if (!this.localAddress.getNetMember().preferredForCoordinator() &&
+        incomingRequest.getMemberID().getNetMember().preferredForCoordinator()) {
+      // tell the new guy to become the coordinator
+      
+    }
-  private InternalDistributedMember findCoordinator() {
+  private InternalDistributedMember findCoordinator(Set<InternalDistributedMember> alreadyTried) {
-    FindCoordinatorRequest request = new FindCoordinatorRequest(this.localAddress);
+    FindCoordinatorRequest request = new FindCoordinatorRequest(this.localAddress, alreadyTried);
+    logger.debug("sending {} to {}", request, locators);
+    
