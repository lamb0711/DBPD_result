GEODE-6626: Cleanup GatewayReceiverImpl and its unit test

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

+import static org.apache.geode.internal.AvailablePort.SOCKET;
+import static org.apache.geode.internal.AvailablePort.getAddress;
+import static org.apache.geode.internal.AvailablePort.getRandomAvailablePortInRange;
+
-  private String hostnameForSenders;
-
-  private int startPort;
-
-  private int endPort;
-
-  private int port;
-
-  private int timeBetPings;
-
-  private int socketBufferSize;
-
-  private boolean manualStart;
-
+  private final InternalCache cache;
+  private final String hostnameForSenders;
+  private final int startPort;
+  private final int endPort;
+  private final int timeBetPings;
+  private final int socketBufferSize;
+  private final boolean manualStart;
-
-  private String bindAdd;
+  private final String bindAdd;
+  private int port;
-  private final InternalCache cache;
-
-  public GatewayReceiverImpl(InternalCache cache, int startPort, int endPort, int timeBetPings,
+  GatewayReceiverImpl(InternalCache cache, int startPort, int endPort, int timeBetPings,
-
-    this.socketBufferSize = buffSize;
+    socketBufferSize = buffSize;
-      throw new IllegalStateException(
-          "Could not get host name", e);
+      throw new IllegalStateException("Could not get host name", e);
-    return this.filters;
+    return filters;
-    return this.timeBetPings;
+    return timeBetPings;
-    return this.port;
+    return port;
-    return this.startPort;
+    return startPort;
-    return this.endPort;
+    return endPort;
-    return this.socketBufferSize;
+    return socketBufferSize;
-    return this.manualStart;
+    return manualStart;
-    if (!AvailablePort.isPortAvailable(port, AvailablePort.SOCKET,
-        AvailablePort.getAddress(AvailablePort.SOCKET))) {
+    if (!AvailablePort.isPortAvailable(port, SOCKET, getAddress(SOCKET))) {
-    ((CacheServerImpl) receiver).setGatewayTransportFilter(this.filters);
+    ((CacheServerImpl) receiver).setGatewayTransportFilter(filters);
-  public void start() throws IOException {
+  public void start() {
-      receiver = this.cache.addCacheServer(true);
+      receiver = cache.addCacheServer(true);
+
-            this.startPort + "-" + this.endPort + ")");
+            startPort + "-" + endPort + ")");
-    logger
-        .info("The GatewayReceiver started on port : {}", this.port);
+    logger.info("The GatewayReceiver started on port : {}", this.port);
-    InternalDistributedSystem system = this.cache.getInternalDistributedSystem();
+    InternalDistributedSystem system = cache.getInternalDistributedSystem();
-    int rPort;
-    if (this.startPort == this.endPort) {
-      rPort = this.startPort;
+    int randomPort;
+    if (startPort == endPort) {
+      randomPort = startPort;
-      rPort = AvailablePort.getRandomAvailablePortInRange(this.startPort, this.endPort,
-          AvailablePort.SOCKET);
+      randomPort = getRandomAvailablePortInRange(startPort, endPort, SOCKET);
-    return rPort;
+    return randomPort;
-      throw new GatewayReceiverException(
-          "Gateway Receiver is not running");
+      throw new GatewayReceiverException("Gateway Receiver is not running");
-    logger.info("Destroying Gateway Receiver: " + this);
+    logger.info("Destroying Gateway Receiver: {}", this);
-      this.cache.removeGatewayReceiver(this);
+      cache.removeGatewayReceiver(this);
-      this.cache.removeGatewayReceiver(this);
-      this.cache.removeCacheServer(receiver);
+      cache.removeGatewayReceiver(this);
+      cache.removeCacheServer(receiver);
-    InternalDistributedSystem system = this.cache.getInternalDistributedSystem();
+    InternalDistributedSystem system = cache.getInternalDistributedSystem();
-    return this.bindAdd;
+    return bindAdd;
-    if (this.receiver != null) {
-      return this.receiver.isRunning();
+    if (receiver != null) {
+      return receiver.isRunning();
+  @Override
-    return new StringBuffer().append("Gateway Receiver").append("@")
+    return new StringBuilder().append("Gateway Receiver").append("@")
-
