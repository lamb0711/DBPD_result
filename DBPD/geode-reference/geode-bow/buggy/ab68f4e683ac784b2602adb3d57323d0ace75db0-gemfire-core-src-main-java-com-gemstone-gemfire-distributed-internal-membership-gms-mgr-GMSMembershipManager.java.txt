GEODE-77 fixing the inability to create multiple MembershipManagers ina single JVM

The static MemberAttributes.DEFAULT was being used to pull together all
of the bits of a new members identity (InternalDistributedMember) but
this prevented multiple MembershipManagers from being instantiated w/o
ones identity bleeding into anothers.  Now the MembershipManager is the
assembling a single InternalDistributedMember instance, putting info
into it as it becomes available.  A new unit test ensures that this is
functioning correctly.

-    MemberAttributes.setDefaults(dcPort,
-        MemberAttributes.DEFAULT.getVmPid(),
-        MemberAttributes.DEFAULT.getVmKind(),
-        MemberAttributes.DEFAULT.getVmViewId(),
-        MemberAttributes.DEFAULT.getName(),
-        MemberAttributes.DEFAULT.getGroups(), MemberAttributes.DEFAULT.getDurableClientAttributes());
-    MemberAttributes.setDefaults(dcPort,
-        MemberAttributes.DEFAULT.getVmPid(),
-        MemberAttributes.DEFAULT.getVmKind(),
-        address.getVmViewId(),
-        MemberAttributes.DEFAULT.getName(),
-        MemberAttributes.DEFAULT.getGroups(), MemberAttributes.DEFAULT.getDurableClientAttributes());
-    
-  public void shutdown()
-  {
-    setShutdown(); // for safety
-    services.stop();
+  public void shutdown() {
+    if (!shutdownInProgress) {
+      setShutdown();
+      services.stop();
+    }
-    // we have to clear the view before notifying the membership listener,
-    // so that it won't try sending disconnect messages to members that
-    // aren't there.  Otherwise, it sends the disconnect messages to other
-    // members, they ignore the "surprise" connections, and we hang.
-    //GroupMembershipService.this.clearView();
-   * A quorum checker is used during reconnect to perform quorum
-   * probes.  It is made available here for the UDP protocol to
-   * hand off ping-pong responses to the checker.
-   */
-  public QuorumChecker getQuorumCheckerImpl() {
-    return this.quorumChecker;
-  }
-  
-  /**
-    return shutdownInProgress || listener.getDM().shutdownInProgress();
+    DistributionManager dm = listener.getDM();
+    return shutdownInProgress || (dm != null && dm.shutdownInProgress());
