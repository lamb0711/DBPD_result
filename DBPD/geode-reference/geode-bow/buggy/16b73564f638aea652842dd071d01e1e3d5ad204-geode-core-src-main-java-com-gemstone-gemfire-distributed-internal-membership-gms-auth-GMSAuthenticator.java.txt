GEODE-1647: Add Integrated Security to Peer Authentication

* This closes #210

-import java.lang.reflect.Method;
-import java.util.Set;
-import com.gemstone.gemfire.distributed.internal.DistributionConfig;
-import com.gemstone.gemfire.internal.ClassLoadUtil;
-  private final static String secPrefix = DistributionConfig.GEMFIRE_PREFIX + "sys.security-";
-  private final static int gemfireSysPrefixLen = (DistributionConfig.GEMFIRE_PREFIX + "sys.").length();
-
-  private Properties securityProps = getSecurityProps();
+  private Properties securityProps;
+    this.securityProps = this.services.getConfig().getDistributionConfig().getSecurityProps();
-  public String authenticate(InternalDistributedMember member, Object credentials) throws AuthenticationFailedException {
+  public String authenticate(InternalDistributedMember member, Properties credentials) throws AuthenticationFailedException {
-  String authenticate(DistributedMember member, Object credentials, Properties secProps, DistributedMember localMember) throws AuthenticationFailedException {
-
-    String authMethod = secProps.getProperty(SECURITY_PEER_AUTHENTICATOR);
-    if (authMethod == null || authMethod.length() == 0) {
+  String authenticate(DistributedMember member, Properties credentials, Properties secProps, DistributedMember localMember) throws AuthenticationFailedException {
+    if(!GeodeSecurityUtil.isPeerSecurityRequired()){
-    String failMsg = null;
-    if (credentials != null) {
-      try {
-        invokeAuthenticator(authMethod, member, credentials);
-      } catch (Exception ex) {
-        securityLogWriter.warning(AUTH_PEER_AUTHENTICATION_FAILED_WITH_EXCEPTION, new Object[] {member, authMethod, ex.getLocalizedMessage()}, ex);
-        failMsg = AUTH_PEER_AUTHENTICATION_FAILED.toLocalizedString(localMember);
-      }
-
-    } else { // No credentials - need to send failure message
-      securityLogWriter.warning(AUTH_PEER_AUTHENTICATION_MISSING_CREDENTIALS, new Object[] {member, authMethod});
-      failMsg = AUTH_PEER_AUTHENTICATION_MISSING_CREDENTIALS.toLocalizedString(member, authMethod);
+    if(credentials == null){
+      securityLogWriter.warning(AUTH_PEER_AUTHENTICATION_MISSING_CREDENTIALS, member);
+      return AUTH_PEER_AUTHENTICATION_MISSING_CREDENTIALS.toLocalizedString(member);
+    String failMsg = null;
+    try {
+      if(GeodeSecurityUtil.isIntegratedSecurity()){
+        String username = credentials.getProperty("security-username");
+        String password = credentials.getProperty("security-password");
+        GeodeSecurityUtil.login(username, password);
+      }
+      else {
+        invokeAuthenticator(secProps, member, credentials);
+      }
+    } catch (Exception ex) {
+      securityLogWriter.warning(AUTH_PEER_AUTHENTICATION_FAILED_WITH_EXCEPTION, new Object[] {
+        member, ex.getLocalizedMessage()
+      }, ex);
+      failMsg = AUTH_PEER_AUTHENTICATION_FAILED.toLocalizedString(localMember);
+    }
+
-  Principal invokeAuthenticator(String authMethod, DistributedMember member, Object credentials) throws AuthenticationFailedException {
+  Principal invokeAuthenticator(Properties securityProps, DistributedMember member, Properties credentials) throws AuthenticationFailedException {
+      String authMethod = securityProps.getProperty(SECURITY_PEER_AUTHENTICATOR);
-
-      Method getter = ClassLoadUtil.methodFromName(authMethod);
-      auth = (com.gemstone.gemfire.security.Authenticator) getter.invoke(null, (Object[]) null);
-      if (auth == null) {
-        throw new AuthenticationFailedException(HandShake_AUTHENTICATOR_INSTANCE_COULD_NOT_BE_OBTAINED.toLocalizedString());
-      }
+      auth = GeodeSecurityUtil.getObjectOfTypeFromFactoryMethod(authMethod, com.gemstone.gemfire.security.Authenticator .class);
-      return auth.authenticate((Properties) credentials, member);
+      return auth.authenticate(credentials, member);
-   * @return the credential object
+   * @return the credentials
-  public Object getCredentials(InternalDistributedMember member) {
+  public Properties getCredentials(InternalDistributedMember member) {
+  /**
+   * For testing only.
+   */
-    Properties props = new Properties();
-    Set keys = System.getProperties().keySet();
-    for (Object key: keys) {
-      String propKey = (String) key;
-      if (propKey.startsWith(secPrefix)) {
-        props.setProperty(propKey.substring(gemfireSysPrefixLen), System.getProperty(propKey));
-      }
-    }
-    return props;
+    return this.securityProps;
