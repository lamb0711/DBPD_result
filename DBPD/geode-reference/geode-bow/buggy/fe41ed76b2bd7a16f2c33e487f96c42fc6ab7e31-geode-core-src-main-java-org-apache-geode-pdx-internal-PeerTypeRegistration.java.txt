GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.cache.Cache;
+import org.apache.geode.cache.DiskStore;
-import org.apache.geode.cache.Operation;
-import org.apache.geode.internal.cache.EntryEventImpl;
-import org.apache.geode.internal.cache.EnumListenerEvent;
-import org.apache.geode.internal.cache.EventID;
+import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.internal.cache.LocalRegion;
-import org.apache.logging.log4j.Logger;
-/**
- *
- */
-  /**
-   * 
-   */
+
+
+
-  private GemFireCacheImpl cache;
+  private InternalCache cache;
+
+
-  public PeerTypeRegistration(GemFireCacheImpl cache) {
+  public PeerTypeRegistration(InternalCache cache) {
-
-      return existingId.intValue();
+      return existingId;
-      typeToId.put(newType, Integer.valueOf(id));
-      // this.cache.getLogger().info("Defining: " + newType, new RuntimeException("STACK"));
+      typeToId.put(newType, id);
-    Cache c = (Cache) r.getRegionService();
+    InternalCache cache = (InternalCache) r.getRegionService();
-    TXManagerImpl txManager = (TXManagerImpl) c.getCacheTransactionManager();
+    TXManagerImpl txManager = (TXManagerImpl) cache.getCacheTransactionManager();
-
-    Collection<DiskStoreImpl> diskStores = cache.listDiskStoresIncludingRegionOwned();
+    Collection<DiskStore> diskStores = cache.listDiskStoresIncludingRegionOwned();
-    for (DiskStoreImpl store : diskStores) {
-      hasPersistentRegions |= store.hasPersistedData();
+    for (DiskStore store : diskStores) {
+      hasPersistentRegions |= ((DiskStoreImpl) store).hasPersistedData();
-          int tmpDsId = PLACE_HOLDER_FOR_DS_ID & id.intValue();
+          int tmpDsId = PLACE_HOLDER_FOR_DS_ID & id;
-    Cache c = (Cache) getIdToType().getRegionService();
-    TXManagerImpl txManager = (TXManagerImpl) c.getCacheTransactionManager();
-    TXStateProxy currentState = txManager.internalSuspend();
-    return currentState;
+    InternalCache cache = (InternalCache) getIdToType().getRegionService();
+    TXManagerImpl txManager = (TXManagerImpl) cache.getCacheTransactionManager();
+    return txManager.internalSuspend();
-
-   * 
-   * @param type
-  /*
+  /**
-  /*
+  /**
-    GemFireCacheImpl cache = GemFireCacheImpl.getExisting();
+    InternalCache cache = GemFireCacheImpl.getExisting();
