GEODE-1201: Adding compileRuntimeLibs to geode-assembly for tests
Amending bind address configuration for http-service-bind-address

-import org.apache.logging.log4j.Logger;
-import org.eclipse.jetty.server.Server;
-import org.eclipse.jetty.server.ServerConnector;
-
-import com.gemstone.gemfire.cache.AttributesFactory;
-import com.gemstone.gemfire.cache.CacheFactory;
-import com.gemstone.gemfire.cache.DataPolicy;
-import com.gemstone.gemfire.cache.RegionAttributes;
-import com.gemstone.gemfire.cache.Scope;
+import com.gemstone.gemfire.cache.*;
+import com.gemstone.gemfire.internal.SocketCreator;
+import org.apache.commons.lang.StringUtils;
+import org.apache.logging.log4j.Logger;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.ServerConnector;
+
+import java.net.UnknownHostException;
- * 
+ * <p>
+    String httpServiceBindAddress = getBindAddressForHttpService();
-        this.config.getHttpServicePort(), this.config.getHttpServiceBindAddress());
+        this.config.getHttpServicePort(), httpServiceBindAddress);
-        final String bindAddress = this.config.getHttpServiceBindAddress();
-        this.httpServer = JettyHelper.initJetty(bindAddress, port,
+        this.httpServer = JettyHelper.initJetty(httpServiceBindAddress, port,
-          logger.debug("Starting HTTP embedded server on port ({}) at bind-address ({})...",
-              ((ServerConnector) this.httpServer.getConnectors()[0]).getPort(), bindAddress);
+          logger.info("Starting HTTP embedded server on port ({}) at bind-address ({})...",
+              ((ServerConnector) this.httpServer.getConnectors()[0]).getPort(), httpServiceBindAddress);
+  private String getBindAddressForHttpService() {
+    java.lang.String bindAddress = this.config.getHttpServiceBindAddress();
+    if (StringUtils.isBlank(bindAddress)) {
+      if (StringUtils.isBlank(this.config.getServerBindAddress())) {
+        if (StringUtils.isBlank(this.config.getBindAddress())) {
+          try {
+            bindAddress = SocketCreator.getLocalHost().getHostAddress();
+            logger.info("RestAgent.getBindAddressForHttpService.localhost: " + SocketCreator.getLocalHost().getHostAddress());
+          } catch (UnknownHostException e) {
+            logger.error("LocalHost could not be found.", e);
+            return bindAddress;
+          }
+        } else {
+          bindAddress = this.config.getBindAddress();
+        }
+      } else {
+        bindAddress = this.config.getServerBindAddress();
+      }
+    }
+    return bindAddress;
+  }
+
