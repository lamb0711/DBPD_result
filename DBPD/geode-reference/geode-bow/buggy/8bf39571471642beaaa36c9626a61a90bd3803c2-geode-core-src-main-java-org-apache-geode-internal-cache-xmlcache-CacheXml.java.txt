Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The abstract superclass of classes that convert XML into a {@link
- * org.apache.geode.cache.Cache} and vice versa. It provides helper methods
- * and constants.
+ * The abstract superclass of classes that convert XML into a {@link org.apache.geode.cache.Cache}
+ * and vice versa. It provides helper methods and constants.
-   * This always refers to the latest GemFire version, in those cases where
-   * we default to the current released version of GemFire.
+   * This always refers to the latest GemFire version, in those cases where we default to the
+   * current released version of GemFire.
-   * Whenever you upgrade the DTD, you will need to search for occurrences of
-   * the previous version strings and upgrade them as well.
+   * Whenever you upgrade the DTD, you will need to search for occurrences of the previous version
+   * strings and upgrade them as well.
-  
+
-  
+
-  
+
-  
+
-  protected static final String SCHEMA_8_1_LOCATION = "http://schema.pivotal.io/gemfire/cache/cache-8.1.xsd";
+  protected static final String SCHEMA_8_1_LOCATION =
+      "http://schema.pivotal.io/gemfire/cache/cache-8.1.xsd";
-  protected static final String SCHEMA_1_0_LOCATION = "http://geode.apache.org/schema/cache/cache-1.0.xsd";
+  protected static final String SCHEMA_1_0_LOCATION =
+      "http://geode.apache.org/schema/cache/cache-1.0.xsd";
-  //---------------------------------
+  // ---------------------------------
-  protected static final String DTD_8_0_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache8_0.dtd";
+  protected static final String DTD_8_0_LOCATION = "/org/apache/geode/cache/doc-files/cache8_0.dtd";
-  protected static final String SYSTEM_ID_8_0 =
-    "http://www.gemstone.com/dtd/cache8_0.dtd";
+  protected static final String SYSTEM_ID_8_0 = "http://www.gemstone.com/dtd/cache8_0.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 8.0//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 8.0//EN";
-//---------------------------------
+  // ---------------------------------
-  protected static final String DTD_7_0_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache7_0.dtd";
+  protected static final String DTD_7_0_LOCATION = "/org/apache/geode/cache/doc-files/cache7_0.dtd";
-  protected static final String SYSTEM_ID_7_0 =
-    "http://www.gemstone.com/dtd/cache7_0.dtd";
+  protected static final String SYSTEM_ID_7_0 = "http://www.gemstone.com/dtd/cache7_0.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 7.0//EN";
-  
-  //---------------------------------
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 7.0//EN";
+
+  // ---------------------------------
-  protected static final String DTD_6_6_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache6_6.dtd";
+  protected static final String DTD_6_6_LOCATION = "/org/apache/geode/cache/doc-files/cache6_6.dtd";
-  protected static final String SYSTEM_ID_6_6 =
-    "http://www.gemstone.com/dtd/cache6_6.dtd";
+  protected static final String SYSTEM_ID_6_6 = "http://www.gemstone.com/dtd/cache6_6.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.6//EN";
-  
-  //---------------------------------
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.6//EN";
+
+  // ---------------------------------
-  protected static final String DTD_6_5_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache6_5.dtd";
+  protected static final String DTD_6_5_LOCATION = "/org/apache/geode/cache/doc-files/cache6_5.dtd";
-  protected static final String SYSTEM_ID_6_5 =
-    "http://www.gemstone.com/dtd/cache6_5.dtd";
+  protected static final String SYSTEM_ID_6_5 = "http://www.gemstone.com/dtd/cache6_5.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.5//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.5//EN";
-  //---------------------------------
+  // ---------------------------------
-  protected static final String DTD_6_1_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache6_1.dtd";
+  protected static final String DTD_6_1_LOCATION = "/org/apache/geode/cache/doc-files/cache6_1.dtd";
-  protected static final String SYSTEM_ID_6_1 =
-    "http://www.gemstone.com/dtd/cache6_1.dtd";
+  protected static final String SYSTEM_ID_6_1 = "http://www.gemstone.com/dtd/cache6_1.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.1//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.1//EN";
-  //---------------------------------
+  // ---------------------------------
-  protected static final String DTD_6_0_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache6_0.dtd";
+  protected static final String DTD_6_0_LOCATION = "/org/apache/geode/cache/doc-files/cache6_0.dtd";
-  protected static final String SYSTEM_ID_6_0 =
-    "http://www.gemstone.com/dtd/cache6_0.dtd";
+  protected static final String SYSTEM_ID_6_0 = "http://www.gemstone.com/dtd/cache6_0.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.0//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 6.0//EN";
-  protected static final String DTD_5_8_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache5_8.dtd";
+  protected static final String DTD_5_8_LOCATION = "/org/apache/geode/cache/doc-files/cache5_8.dtd";
-  protected static final String SYSTEM_ID_5_8 =
-    "http://www.gemstone.com/dtd/cache5_8.dtd";
+  protected static final String SYSTEM_ID_5_8 = "http://www.gemstone.com/dtd/cache5_8.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.8//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.8//EN";
-  protected static final String DTD_5_7_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache5_7.dtd";
+  protected static final String DTD_5_7_LOCATION = "/org/apache/geode/cache/doc-files/cache5_7.dtd";
-  protected static final String SYSTEM_ID_5_7 =
-    "http://www.gemstone.com/dtd/cache5_7.dtd";
+  protected static final String SYSTEM_ID_5_7 = "http://www.gemstone.com/dtd/cache5_7.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.7//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.7//EN";
-  protected static final String DTD_5_5_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache5_5.dtd";
+  protected static final String DTD_5_5_LOCATION = "/org/apache/geode/cache/doc-files/cache5_5.dtd";
-  protected static final String SYSTEM_ID_5_5 =
-    "http://www.gemstone.com/dtd/cache5_5.dtd";
+  protected static final String SYSTEM_ID_5_5 = "http://www.gemstone.com/dtd/cache5_5.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.5//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.5//EN";
-  protected static final String DTD_5_1_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache5_1.dtd";
+  protected static final String DTD_5_1_LOCATION = "/org/apache/geode/cache/doc-files/cache5_1.dtd";
-  protected static final String SYSTEM_ID_5_1 =
-    "http://www.gemstone.com/dtd/cache5_1.dtd";
+  protected static final String SYSTEM_ID_5_1 = "http://www.gemstone.com/dtd/cache5_1.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.1//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Cache 5.1//EN";
-  protected static final String DTD_5_0_LOCATION =
-    "/org/apache/geode/cache/doc-files/cache5_0.dtd";
+  protected static final String DTD_5_0_LOCATION = "/org/apache/geode/cache/doc-files/cache5_0.dtd";
-  protected static final String SYSTEM_ID_5_0 =
-    "http://www.gemstone.com/dtd/cache5_0.dtd";
+  protected static final String SYSTEM_ID_5_0 = "http://www.gemstone.com/dtd/cache5_0.dtd";
-    "-//GemStone Systems, Inc.//GemFire Declarative Caching 5.0//EN";
+      "-//GemStone Systems, Inc.//GemFire Declarative Caching 5.0//EN";
-  protected static final String PUBLIC_ID_4_1 = "-//GemStone Systems, Inc.//GemFire Declarative Caching 4.1//EN";
+  protected static final String PUBLIC_ID_4_1 =
+      "-//GemStone Systems, Inc.//GemFire Declarative Caching 4.1//EN";
-  protected static final String PUBLIC_ID_4_0 = "-//GemStone Systems, Inc.//GemFire Declarative Caching 4.0//EN";
+  protected static final String PUBLIC_ID_4_0 =
+      "-//GemStone Systems, Inc.//GemFire Declarative Caching 4.0//EN";
-  protected static final String PUBLIC_ID_3_0 = "-//GemStone Systems, Inc.//GemFire Declarative Caching 3.0//EN";
+  protected static final String PUBLIC_ID_3_0 =
+      "-//GemStone Systems, Inc.//GemFire Declarative Caching 3.0//EN";
-  
-/** The name of the load probe element */
-  protected static final String LOAD_PROBE="custom-load-probe";
+
+  /** The name of the load probe element */
+  protected static final String LOAD_PROBE = "custom-load-probe";
-  protected static final String LOAD_POLL_INTERVAL="load-poll-interval";
+  protected static final String LOAD_POLL_INTERVAL = "load-poll-interval";
-  
+
-  
+
-  protected static final String GATEWAY_EVENT_SUBSTITUTION_FILTER = "gateway-event-substitution-filter";
+  protected static final String GATEWAY_EVENT_SUBSTITUTION_FILTER =
+      "gateway-event-substitution-filter";
-  
+
-  
+
-   /** Name of disk region property specifying whether to roll oplog or no **/
-  public  static final String ROLL_OPLOG = "roll-oplogs";
-   /** Name of disk region property specifying whether to automatically compact disk files **/
+  /** Name of disk region property specifying whether to roll oplog or no **/
+  public static final String ROLL_OPLOG = "roll-oplogs";
+  /** Name of disk region property specifying whether to automatically compact disk files **/
-  
+
-  
+
-  public static final String SUBSCRIPTION_MESSAGE_TRACKING_TIMEOUT = "subscription-message-tracking-timeout";
+  public static final String SUBSCRIPTION_MESSAGE_TRACKING_TIMEOUT =
+      "subscription-message-tracking-timeout";
- /** Size of the disk dir in megabytes **/
-   protected static final String DIR_SIZE = "dir-size";
+  /** Size of the disk dir in megabytes **/
+  protected static final String DIR_SIZE = "dir-size";
-  
+
-  
+
-  
+
-  /** The name of the <code>critical-heap-percentage</code> attribute of the resource-manager*/
+  /** The name of the <code>critical-heap-percentage</code> attribute of the resource-manager */
-  /** The name of the <code>eviction-heap-percentage</code> attribute of the resource-manager*/
+  /** The name of the <code>eviction-heap-percentage</code> attribute of the resource-manager */
-  /** The name of the <code>critical-off-heap-percentage</code> attribute of the resource-manager*/
+  /** The name of the <code>critical-off-heap-percentage</code> attribute of the resource-manager */
-  /** The name of the <code>eviction-off-heap-percentage</code> attribute of the resource-manager*/
+  /** The name of the <code>eviction-off-heap-percentage</code> attribute of the resource-manager */
-  
+
-  /** The name of the <code>off-heap</code> attribute
+  /**
+   * The name of the <code>off-heap</code> attribute
+   * 
- 
+
-  
+
-  
+
-   * Given a public id, attempt to resolve it to a DTD. Returns an
-   * <code>InputSoure</code> for the DTD.
-   * @throws IOException 
+   * Given a public id, attempt to resolve it to a DTD. Returns an <code>InputSoure</code> for the
+   * DTD.
+   * 
+   * @throws IOException
-  public InputSource resolveEntity(String name, String publicId, String baseURI, String systemId) throws SAXException, IOException {
+  public InputSource resolveEntity(String name, String publicId, String baseURI, String systemId)
+      throws SAXException, IOException {
-    }
-    else if (SYSTEM_ID_4_0.equals(systemId) || PUBLIC_ID_4_0.equals(publicId)) {
+    } else if (SYSTEM_ID_4_0.equals(systemId) || PUBLIC_ID_4_0.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_4_1.equals(systemId) || PUBLIC_ID_4_1.equals(publicId)) {
+    } else if (SYSTEM_ID_4_1.equals(systemId) || PUBLIC_ID_4_1.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_5_0.equals(systemId) || PUBLIC_ID_5_0.equals(publicId)) {
+    } else if (SYSTEM_ID_5_0.equals(systemId) || PUBLIC_ID_5_0.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_5_1.equals(systemId) || PUBLIC_ID_5_1.equals(publicId)) {
+    } else if (SYSTEM_ID_5_1.equals(systemId) || PUBLIC_ID_5_1.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_5_5.equals(systemId) || PUBLIC_ID_5_5.equals(publicId)) {
+    } else if (SYSTEM_ID_5_5.equals(systemId) || PUBLIC_ID_5_5.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_5_7.equals(systemId) || PUBLIC_ID_5_7.equals(publicId)) {
+    } else if (SYSTEM_ID_5_7.equals(systemId) || PUBLIC_ID_5_7.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_5_8.equals(systemId) || PUBLIC_ID_5_8.equals(publicId)) {
+    } else if (SYSTEM_ID_5_8.equals(systemId) || PUBLIC_ID_5_8.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_6_0.equals(systemId) || PUBLIC_ID_6_0.equals(publicId)) {
+    } else if (SYSTEM_ID_6_0.equals(systemId) || PUBLIC_ID_6_0.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_6_1.equals(systemId) || PUBLIC_ID_6_1.equals(publicId)) {
+    } else if (SYSTEM_ID_6_1.equals(systemId) || PUBLIC_ID_6_1.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_6_5.equals(systemId) || PUBLIC_ID_6_5.equals(publicId)) {
+    } else if (SYSTEM_ID_6_5.equals(systemId) || PUBLIC_ID_6_5.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_6_6.equals(systemId) || PUBLIC_ID_6_6.equals(publicId)) {
+    } else if (SYSTEM_ID_6_6.equals(systemId) || PUBLIC_ID_6_6.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_7_0.equals(systemId) || PUBLIC_ID_7_0.equals(publicId)) {
+    } else if (SYSTEM_ID_7_0.equals(systemId) || PUBLIC_ID_7_0.equals(publicId)) {
-    }
-    else if (SYSTEM_ID_8_0.equals(systemId) || PUBLIC_ID_8_0.equals(publicId)) {
+    } else if (SYSTEM_ID_8_0.equals(systemId) || PUBLIC_ID_8_0.equals(publicId)) {
-    }
-    else {
+    } else {
-      version = CacheXmlVersion.valueForVersion(VERSION_LATEST); // we won't know the version, so assume the latest
+      version = CacheXmlVersion.valueForVersion(VERSION_LATEST); // we won't know the version, so
+                                                                 // assume the latest
-    }
-    else {
-      throw new SAXNotRecognizedException(LocalizedStrings.CacheXml_DTD_NOT_FOUND_0.toLocalizedString(location));
+    } else {
+      throw new SAXNotRecognizedException(
+          LocalizedStrings.CacheXml_DTD_NOT_FOUND_0.toLocalizedString(location));
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
-  public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {
+  public InputSource resolveEntity(String publicId, String systemId)
+      throws SAXException, IOException {
-  
-  /* (non-Javadoc)
+
+  /*
+   * (non-Javadoc)
+   * 
-  public InputSource getExternalSubset(String name, String baseURI) throws SAXException, IOException {
+  public InputSource getExternalSubset(String name, String baseURI)
+      throws SAXException, IOException {
-  
+
+   * 
-   * @throws IOException 
-   * @throws SAXException 
+   * @throws IOException
+   * @throws SAXException
-  private InputSource resolveEntityByEntityResolvers(String name, String publicId, String baseURI, String systemId) throws SAXException, IOException {
-    final ServiceLoader<EntityResolver2> entityResolvers = ServiceLoader.load(EntityResolver2.class, ClassPathLoader.getLatest().asClassLoader());
+  private InputSource resolveEntityByEntityResolvers(String name, String publicId, String baseURI,
+      String systemId) throws SAXException, IOException {
+    final ServiceLoader<EntityResolver2> entityResolvers =
+        ServiceLoader.load(EntityResolver2.class, ClassPathLoader.getLatest().asClassLoader());
-      final InputSource inputSource = entityResolver.resolveEntity(name, publicId, baseURI, systemId);
+      final InputSource inputSource =
+          entityResolver.resolveEntity(name, publicId, baseURI, systemId);
-  public void warning(SAXParseException ex) throws SAXException {
-  }
+  public void warning(SAXParseException ex) throws SAXException {}
-    throw new CacheXmlException(LocalizedStrings.CacheXml_ERROR_WHILE_PARSING_XML.toLocalizedString(), ex);
+    throw new CacheXmlException(
+        LocalizedStrings.CacheXml_ERROR_WHILE_PARSING_XML.toLocalizedString(), ex);
-    throw new CacheXmlException(LocalizedStrings.CacheXml_FATAL_ERROR_WHILE_PARSING_XML.toLocalizedString(), ex);
+    throw new CacheXmlException(
+        LocalizedStrings.CacheXml_FATAL_ERROR_WHILE_PARSING_XML.toLocalizedString(), ex);
-  
+
-  public static final String getString(final Attributes attributes, final String name, final String defaultValue) {
+  public static final String getString(final Attributes attributes, final String name,
+      final String defaultValue) {
-   * @return Integer value for named attribute or <code>defaultValue</code> if attribute not defined.
+   * @return Integer value for named attribute or <code>defaultValue</code> if attribute not
+   *         defined.
-  public static final Integer getInteger(final Attributes attributes, final String name, final Integer defaultValue) {
+  public static final Integer getInteger(final Attributes attributes, final String name,
+      final Integer defaultValue) {
-   * @return Boolean value for named attribute or <code>defaultValue</code> if attribute not defined.
+   * @return Boolean value for named attribute or <code>defaultValue</code> if attribute not
+   *         defined.
-  public static final Boolean getBoolean(final Attributes attributes, final String name, final Boolean defaultValue) {
+  public static final Boolean getBoolean(final Attributes attributes, final String name,
+      final Boolean defaultValue) {
-  public static final <E extends Enum<E>> E getEnum(final Attributes attributes, final String name, final Class<E> clazz) {
+  public static final <E extends Enum<E>> E getEnum(final Attributes attributes, final String name,
+      final Class<E> clazz) {
-  public static final <E extends Enum<E>> E getEnum(final Attributes attributes, final String name, final Class<E> clazz, E defaultValue) {
+  public static final <E extends Enum<E>> E getEnum(final Attributes attributes, final String name,
+      final Class<E> clazz, E defaultValue) {
-  
+
