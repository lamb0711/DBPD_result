GEODE-3521: Allow region set operations to bootstrap a transaction. (#891)

* GEODE-3521: Allow region set operations to bootstrap a transaction.

  * Now Geode will bootstrap a transaction on a region set op even though
    it is a first operation in the transaction.
 * Add a SystemPropertyHelper class to held system properties to be set.
  * User needs to set a system property to disable this new behavior.
  * Do not allow an accessor to bootstrap a transaction.
  * Add a PausedTXStateProxyImpl state to allow product to know if a transaction is paused.
   *Product now detects if only same thread can unpause a paused transaction.
  * Do not bootstrap a new transaction again when transaction is paused.
  * Add a test case for testing pause and unpause.
  * A thread can not pause a transaction and start a new transaction - use suspend and resume instead.
 * Handle a situation that RegionEntry can be set in the KeyInfo when iterate through keys.

+import org.apache.geode.internal.lang.SystemPropertyHelper;
+    if (!restoreSetOperationTransactionBehavior) {
+      discoverJTA();
+    }
+    if (!restoreSetOperationTransactionBehavior) {
+      discoverJTA();
+    }
+    if (!restoreSetOperationTransactionBehavior) {
+      discoverJTA();
+    }
-    final TXStateProxy tx = this.cache.getTXMgr().internalSuspend();
+    final TXStateProxy tx = this.cache.getTXMgr().pauseTransaction();
-      this.cache.getTXMgr().internalResume(tx);
+      this.cache.getTXMgr().unpauseTransaction(tx);
+  protected final boolean restoreSetOperationTransactionBehavior =
+      SystemPropertyHelper.restoreSetOperationTransactionBehavior();
+
+  private boolean isTransactionPaused() {
+    TXManagerImpl txMgr = (TXManagerImpl) getCache().getCacheTransactionManager();
+    return txMgr.isTransactionPaused();
+  }
+
-    final TXStateProxy tx = this.cache.getTXMgr().internalSuspend();
+    final TXStateProxy tx = this.cache.getTXMgr().pauseTransaction();
-      this.cache.getTXMgr().internalResume(tx);
+      this.cache.getTXMgr().unpauseTransaction(tx);
+          if (isTransactionPaused()) {
+            // Do not bootstrap JTA again, if the transaction has been paused.
+            return null;
+          }
-              TXStateProxy txState = this.cache.getTXMgr().internalSuspend();
+              TXStateProxy txState = this.cache.getTXMgr().pauseTransaction();
-                this.cache.getTXMgr().internalResume(txState);
+                this.cache.getTXMgr().unpauseTransaction(txState);
+  public boolean canStoreDataLocally() {
+    return this.dataPolicy.withStorage();
+  }
+
