Revert "GEODE-6334: Change cache operation stats to longs (#3142)"

This reverts commit 2be43b2f35f1ae65bebf6b4dfbe2b329d6dccb2f.

-   * "numOfGets", "The total number of times a successful get has been done on this
+   * "numOfGets", IntCounter, "The total number of times a successful get has been done on this
-  private long numOfGets;
+  protected int numOfGets;
-   * "numOfPuts", "The total number of times an entry is added or replaced in this cache
+   * "numOfPuts", IntCounter, "The total number of times an entry is added or replaced in this cache
-  private long numOfPuts;
+  protected int numOfPuts;
-   * Represents number of cache misses in this client. "Total number of times a get on
+   * Represents number of cache misses in this client. IntCounter, "Total number of times a get on
-  private long numOfMisses;
+  protected int numOfMisses;
-   * Represents number of cache listners calls completed. "Total number of times a cache
+   * Represents number of cache listners calls completed. IntCounter, "Total number of times a cache
-  private long numOfCacheListenerCalls;
+  protected int numOfCacheListenerCalls;
-   * Represents total number of active threads in the client VM. "Current number of live
+   * Represents total number of active threads in the client VM. IntCounter, "Current number of live
-  private int numOfThreads;
+  protected int numOfThreads;
-   * Represents the CPU time used by the process (in nanoseconds). "CPU timed used by
+   * Represents the CPU time used by the process (in nanoseconds). LongCounter, "CPU timed used by
-   * Represents the number of cpus available to the java VM on its machine. "Number of
+   * Represents the number of cpus available to the java VM on its machine. IntCounter, "Number of
-  private Date updateTime;
+  protected Date updateTime;
-  private HashMap<String, String> poolStats = new HashMap<>();
+  private HashMap<String, String> poolStats = new HashMap<String, String>();
-  private static final Version[] dsfidVersions = new Version[] {Version.GFE_80, Version.GEODE_190};
+  private static final Version[] dsfidVersions = new Version[] {Version.GFE_80};
-  public long getNumOfGets() {
+  public int getNumOfGets() {
-  public void setNumOfGets(long numOfGets) {
+  public void setNumOfGets(int numOfGets) {
-  public long getNumOfPuts() {
+  public int getNumOfPuts() {
-  public void setNumOfPuts(long numOfPuts) {
+  public void setNumOfPuts(int numOfPuts) {
-  public long getNumOfMisses() {
+  public int getNumOfMisses() {
-  public void setNumOfMisses(long numOfMisses) {
+  public void setNumOfMisses(int numOfMisses) {
-  public long getNumOfCacheListenerCalls() {
+  public int getNumOfCacheListenerCalls() {
-  public void setNumOfCacheListenerCalls(long numOfCacheListenerCalls) {
+  public void setNumOfCacheListenerCalls(int numOfCacheListenerCalls) {
-    DataSerializer.writePrimitiveLong(numOfGets, out);
-    DataSerializer.writePrimitiveLong(numOfPuts, out);
-    DataSerializer.writePrimitiveLong(numOfMisses, out);
-    DataSerializer.writePrimitiveLong(numOfCacheListenerCalls, out);
-    DataSerializer.writePrimitiveInt(numOfThreads, out);
-    DataSerializer.writePrimitiveInt(cpus, out);
-    DataSerializer.writePrimitiveLong(processCpuTime, out);
-    DataSerializer.writeDate(updateTime, out);
-    DataSerializer.writeHashMap((poolStats), out);
-  }
-
-  /**
-   * We changed some ints to longs in this version, give back the int truncation so that it's
-   * something like what we would have gotten before.
-   */
-  public void toDataPre_GEODE_1_9_0_0(DataOutput out) throws IOException {
-    DataSerializer.writePrimitiveInt((int) numOfGets, out);
-    DataSerializer.writePrimitiveInt((int) numOfPuts, out);
-    DataSerializer.writePrimitiveInt((int) numOfMisses, out);
-    DataSerializer.writePrimitiveInt((int) numOfCacheListenerCalls, out);
+    DataSerializer.writePrimitiveInt(numOfGets, out);
+    DataSerializer.writePrimitiveInt(numOfPuts, out);
+    DataSerializer.writePrimitiveInt(numOfMisses, out);
+    DataSerializer.writePrimitiveInt(numOfCacheListenerCalls, out);
-    DataSerializer.writePrimitiveInt((int) numOfGets, out);
-    DataSerializer.writePrimitiveInt((int) numOfPuts, out);
-    DataSerializer.writePrimitiveInt((int) numOfMisses, out);
-    DataSerializer.writePrimitiveInt((int) numOfCacheListenerCalls, out);
+    DataSerializer.writePrimitiveInt(numOfGets, out);
+    DataSerializer.writePrimitiveInt(numOfPuts, out);
+    DataSerializer.writePrimitiveInt(numOfMisses, out);
+    DataSerializer.writePrimitiveInt(numOfCacheListenerCalls, out);
-    this.numOfGets = DataSerializer.readPrimitiveLong(in);
-    this.numOfPuts = DataSerializer.readPrimitiveLong(in);
-    this.numOfMisses = DataSerializer.readPrimitiveLong(in);
-    this.numOfCacheListenerCalls = DataSerializer.readPrimitiveLong(in);
-    this.numOfThreads = DataSerializer.readPrimitiveInt(in);
-    this.cpus = DataSerializer.readPrimitiveInt(in);
-    this.processCpuTime = DataSerializer.readPrimitiveLong(in);
-    this.updateTime = DataSerializer.readDate(in);
-    this.poolStats = DataSerializer.readHashMap(in);
-  }
-
-  public void fromDataPre_GEODE_1_9_0_0(DataInput in) throws IOException, ClassNotFoundException {
