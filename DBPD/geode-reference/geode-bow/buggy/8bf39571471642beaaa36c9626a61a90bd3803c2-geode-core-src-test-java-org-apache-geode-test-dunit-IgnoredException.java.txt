Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * <code>IgnoredException</code> provides static utility methods that
- * will log messages to add or remove <code>IgnoredException</code>s.
- * Each <code>IgnoredException</code> allows you to specify a suspect string
- * that will be ignored by the <code>GrepLogs</code> utility which is run 
- * after each <code>DistributedTest</code> test method.
+ * <code>IgnoredException</code> provides static utility methods that will log messages to add or
+ * remove <code>IgnoredException</code>s. Each <code>IgnoredException</code> allows you to specify a
+ * suspect string that will be ignored by the <code>GrepLogs</code> utility which is run after each
+ * <code>DistributedTest</code> test method.
- * These methods can be used directly: 
- * <code>IgnoredException.addIgnoredException(...)</code>, 
+ * These methods can be used directly: <code>IgnoredException.addIgnoredException(...)</code>,
- * A test should use <code>addIgnoredException(...)</code> before executing
- * the code that will potentially log the suspect string. The test should
- * then <code>remove()</code> the <code>IgnoredException</code> immediately
- * after. Note that <code>DistributedTestCase.tearDown()</code> will 
- * automatically remove all current <code>IgnoredException</code>s by
- * invoking <code>removeAllIgnoredExceptions</code>.
- *  
+ * A test should use <code>addIgnoredException(...)</code> before executing the code that will
+ * potentially log the suspect string. The test should then <code>remove()</code> the
+ * <code>IgnoredException</code> immediately after. Note that
+ * <code>DistributedTestCase.tearDown()</code> will automatically remove all current
+ * <code>IgnoredException</code>s by invoking <code>removeAllIgnoredExceptions</code>.
+ * 
- * The <code>GrepLogs</code> utility is part of Hydra which is not included
- * in Apache Geode. The Hydra class which consumes logs and reports suspect
- * strings is <code>batterytest.greplogs.GrepLogs</code>.
+ * The <code>GrepLogs</code> utility is part of Hydra which is not included in Apache Geode. The
+ * Hydra class which consumes logs and reports suspect strings is
+ * <code>batterytest.greplogs.GrepLogs</code>.
-  
+
-  
-  private static ConcurrentLinkedQueue<IgnoredException> ignoredExceptions = new ConcurrentLinkedQueue<IgnoredException>();
+
+  private static ConcurrentLinkedQueue<IgnoredException> ignoredExceptions =
+      new ConcurrentLinkedQueue<IgnoredException>();
-  
+
-  
+
-    
-    @SuppressWarnings("serial")
-    SerializableRunnable removeRunnable = new SerializableRunnable(IgnoredException.class.getSimpleName()+" remove") {
-      public void run() {
-        // TODO: delete use of system.getLogWriter
-        DistributedSystem system = InternalDistributedSystem.getConnectedInstance();
-        if (system != null) {
-          system.getLogWriter().info(removeMessage);
-        }
-        
-        // TODO: delete use of LogWriterUtils
-        try {
-          LogWriterUtils.getLogWriter().info(removeMessage);
-        } catch (Exception noHydraLogger) {
-        }
-        logger.info(removeMessage);
-      }
-    };
+    @SuppressWarnings("serial")
+    SerializableRunnable removeRunnable =
+        new SerializableRunnable(IgnoredException.class.getSimpleName() + " remove") {
+          public void run() {
+            // TODO: delete use of system.getLogWriter
+            DistributedSystem system = InternalDistributedSystem.getConnectedInstance();
+            if (system != null) {
+              system.getLogWriter().info(removeMessage);
+            }
+
+            // TODO: delete use of LogWriterUtils
+            try {
+              LogWriterUtils.getLogWriter().info(removeMessage);
+            } catch (Exception noHydraLogger) {
+            }
+
+            logger.info(removeMessage);
+          }
+        };
-    
+
-   * Log in all VMs, in both the test logger and the GemFire logger the
-   * ignored exception string to prevent grep logs from complaining. The
-   * suspect string is used by the GrepLogs utility and so can contain
-   * regular expression characters.
+   * Log in all VMs, in both the test logger and the GemFire logger the ignored exception string to
+   * prevent grep logs from complaining. The suspect string is used by the GrepLogs utility and so
+   * can contain regular expression characters.
-    
+
-    SerializableRunnable addRunnable = new SerializableRunnable(IgnoredException.class.getSimpleName()+" addIgnoredException") {
-      public void run() {
-        // TODO: delete use of system.getLogWriter
-        DistributedSystem system = InternalDistributedSystem.getConnectedInstance();
-        if (system != null) {
-          system.getLogWriter().info(addMessage);
-        }
-        
-        // TODO: delete use of LogWriterUtils
-        try {
-          LogWriterUtils.getLogWriter().info(addMessage);
-        } catch (Exception noHydraLogger) {
-        }
-  
-        logger.info(addMessage);
-      }
-    };
-    
+    SerializableRunnable addRunnable =
+        new SerializableRunnable(IgnoredException.class.getSimpleName() + " addIgnoredException") {
+          public void run() {
+            // TODO: delete use of system.getLogWriter
+            DistributedSystem system = InternalDistributedSystem.getConnectedInstance();
+            if (system != null) {
+              system.getLogWriter().info(addMessage);
+            }
+
+            // TODO: delete use of LogWriterUtils
+            try {
+              LogWriterUtils.getLogWriter().info(addMessage);
+            } catch (Exception noHydraLogger) {
+            }
+
+            logger.info(addMessage);
+          }
+        };
+
-    
+
-    
+
-   * Log in all VMs, in both the test logger and the GemFire logger the
-   * ignored exception string to prevent grep logs from complaining. The
-   * suspect string is used by the GrepLogs utility and so can contain
-   * regular expression characters.
+   * Log in all VMs, in both the test logger and the GemFire logger the ignored exception string to
+   * prevent grep logs from complaining. The suspect string is used by the GrepLogs utility and so
+   * can contain regular expression characters.
-   * If you do not remove the ignored exception, it will be removed at the
-   * end of your test case automatically.
+   * If you do not remove the ignored exception, it will be removed at the end of your test case
+   * automatically.
-}
+}
