GEODE-6365: Group support for JDBC mapping logic in DestroyRegionCommand (#3202)

Added server group support for the logic in destroy region which
checks for an existing jdbc-mapping



+import java.util.HashSet;
-    CacheConfig cacheConfig = ccService.getCacheConfig(null);
-    if (cacheConfig == null) {
-      return;
-    }
-    RegionConfig regionConfig = CacheElement.findElement(cacheConfig.getRegions(), regionName);
-    if (regionConfig == null) {
-      return;
-    }
-    CacheElement element =
-        CacheElement.findElement(regionConfig.getCustomRegionElements(), "jdbc-mapping");
-    if (element != null) {
-      throw new IllegalStateException("Cannot destroy region \"" + regionName
-          + "\" because JDBC mapping exists. Use \"destroy jdbc-mapping\" first.");
+
+    Set<String> groupNames = new HashSet<String>();
+    groupNames.addAll(ccService.getGroups());
+    groupNames.add("cluster");
+    for (String groupName : groupNames) {
+      CacheConfig cacheConfig = ccService.getCacheConfig(groupName);
+      if (cacheConfig == null) {
+        return;
+      }
+      RegionConfig regionConfig = CacheElement.findElement(cacheConfig.getRegions(), regionName);
+      if (regionConfig == null) {
+        return;
+      }
+      CacheElement element =
+          CacheElement.findElement(regionConfig.getCustomRegionElements(), "jdbc-mapping");
+      if (element != null) {
+        throw new IllegalStateException("Cannot destroy region \"" + regionName
+            + "\" because JDBC mapping exists. Use \"destroy jdbc-mapping\" first.");
+      }
