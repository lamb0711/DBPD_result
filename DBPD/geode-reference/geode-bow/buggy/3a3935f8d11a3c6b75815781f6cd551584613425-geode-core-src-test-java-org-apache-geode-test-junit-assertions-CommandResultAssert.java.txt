GEODE-2676: fix NPE with ShowMetricsCommand.

+import java.util.HashMap;
+import java.util.Map;
-import org.apache.geode.management.internal.cli.json.GfJsonObject;
+import org.apache.geode.management.internal.cli.json.GfJsonException;
+
+
+  public CommandResultAssert tableHasRowWithValues(String... headersThenValues)
+      throws GfJsonException {
+    assertThat(headersThenValues.length % 2)
+        .describedAs("You need to pass even number of parameters.").isEqualTo(0);
+
+    int numberOfColumn = headersThenValues.length / 2;
+
+    String[] headers = Arrays.copyOfRange(headersThenValues, 0, numberOfColumn);
+    String[] expectedValues =
+        Arrays.copyOfRange(headersThenValues, numberOfColumn, headersThenValues.length);
+
+    Map<String, List<Object>> allValues = new HashMap<>();
+    int numberOfRows = -1;
+    for (String header : headers) {
+      List<Object> columnValues = actual.getCommandResult().getColumnValues(header);
+      if (numberOfRows > 0) {
+        assertThat(columnValues.size()).isEqualTo(numberOfRows);
+      }
+      numberOfRows = columnValues.size();
+      allValues.put(header, columnValues);
+    }
+
+    for (int rowIndex = 0; rowIndex < numberOfRows; rowIndex++) {
+      Object[] rowValues = new Object[headers.length];
+      for (int columnIndex = 0; columnIndex < headers.length; columnIndex++) {
+        rowValues[columnIndex] = allValues.get(headers[columnIndex]).get(rowIndex);
+      }
+
+      // check if entire row is equal, but if not, continue to next row
+      if (Arrays.deepEquals(expectedValues, rowValues)) {
+        return this;
+      }
+    }
+
+    // did not find any matching rows, then this would pass only if we do not pass in any values
+    assertThat(headersThenValues.length).isEqualTo(0);
+    return this;
+  }
+
+  public CommandResultAssert tableHasRowCount(String anyColumnHeader, int rowSize) {
+    assertThat(actual.getCommandResult().getColumnValues(anyColumnHeader)).isEqualTo(rowSize);
+    return this;
+  }
+
