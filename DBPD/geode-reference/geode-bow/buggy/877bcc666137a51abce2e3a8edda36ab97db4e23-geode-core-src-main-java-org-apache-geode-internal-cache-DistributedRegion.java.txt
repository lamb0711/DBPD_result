GEODE-5748: Hold clearRegion write lock during cleanUpAfterFailedGII (#2486)

* To avoid race with concurrent cache operation, a clearRegion write lock is needed
   when clearing entries and disk region entries during cleanUpAfterFailedGII, as cache
   operations hold clearRegion read lock.
-    if (!this.entries.isEmpty()) {
-      closeEntries();
-      if (getDiskRegion() != null) {
-        getDiskRegion().clear(this, null);
+    if (!getRegionMap().isEmpty()) {
+      RegionVersionVector rvv = getVersionVector();
+      if (rvv != null) {
+        rvv.lockForClear(getFullPath(), getDistributionManager(), getMyId());
-      // clear the left-members and version-tags sets in imageState
-      getImageState().getLeftMembers();
-      getImageState().getVersionTags();
-      // Clear OQL indexes
-      if (this.indexManager != null) {
-        try {
-          this.indexManager.rerunIndexCreationQuery();
-        } catch (Exception ex) {
-          if (logger.isDebugEnabled()) {
-            logger.debug("Exception while clearing indexes after GII failure.", ex);
+      try {
+        closeEntries();
+        if (getDiskRegion() != null) {
+          getDiskRegion().clear(this, null);
+        }
+        // clear the left-members and version-tags sets in imageState
+        getImageState().getLeftMembers();
+        getImageState().getVersionTags();
+        // Clear OQL indexes
+        if (this.indexManager != null) {
+          try {
+            this.indexManager.rerunIndexCreationQuery();
+          } catch (Exception ex) {
+            if (logger.isDebugEnabled()) {
+              logger.debug("Exception while clearing indexes after GII failure.", ex);
+            }
+      } finally {
+        if (rvv != null) {
+          rvv.unlockForClear(getMyId());
+        }
