jgroups source is now removed from asf branch GEODE-77 and is a downloaded dependency.  Able to start/stop a locator and a server via gfsh but there is no HA or authentication in the membership system.

+import org.apache.logging.log4j.Logger;
+
-import com.gemstone.org.jgroups.stack.GossipServer;
-import com.gemstone.org.jgroups.util.GemFireTracer;
-import com.gemstone.org.jgroups.util.ExternalStrings;
+import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
+import com.gemstone.gemfire.internal.logging.LogService;
- * @author Bela Ban Oct 4 2001
-   * The version of the gossip protocol
+   * The version of the tcp server protocol
-  public final static int GOSSIPVERSION = GossipServer.getCurrentGossipVersion();
+  public final static int GOSSIPVERSION = 1003;
-  public final static int OLDGOSSIPVERSION = GossipServer.getOldGossipVersion();
+  public final static int OLDGOSSIPVERSION = 1001;
+  
+  private static final Logger log = LogService.getLogger();
+  
-  private final GemFireTracer log = GemFireTracer
-      .getLog(TcpServer.class);
-  protected/*GemStoneAddition*/ void run() {
+  protected void run() {
-    // boolean looping=true;
-    // while(looping) {
-    // [GemStoneAddition] Close the server socket, duh. See bug 32856.
+
-      log.getLogWriter().warning(
-          ExternalStrings.ONE_ARG,
+      log.warn(
-    if (shuttingDown) { // GemStoneAddition
+    if (shuttingDown) {
-        DataInputStream input = null; // GemStoneAddition -- initialize it for
-                                      // the finally block
+        DataInputStream input = null;
-            // GemStoneAddition
-            log.getLogWriter().fine(
+            log.debug(
-            if (gossipVersion < getCurrentGossipVersion()) {
-              if (log.isTraceEnabled()) {
-                log.debug(
-                    "Received request from "
-                        + sock.getInetAddress().getHostAddress()
-                        + " This locator is running: " + getCurrentGossipVersion()
-                        + ", but request was version: " + gossipVersion
-                        + ", version ordinal: " + versionOrdinal);
-              }
-            }
+//            if (gossipVersion < getCurrentGossipVersion()) {
+//              if (log.isTraceEnabled()) {
+//                log.debug(
+//                    "Received request from "
+//                        + sock.getInetAddress().getHostAddress()
+//                        + " This locator is running: " + getCurrentGossipVersion()
+//                        + ", but request was version: " + gossipVersion
+//                        + ", version ordinal: " + versionOrdinal);
+//              }
+//            }
-          // Close the socket. We can not accept requests from newer GOSSIP
-          // VERSION.
+          // Close the socket. We can not accept requests from a newer version
-          if (log.getLogWriter().fineEnabled()) {
-            log.getLogWriter().fine("Locator reading request from " + sock.getInetAddress() + " with version " + Version.fromOrdinal(versionOrdinal, false));
+          if (log.isDebugEnabled()) {
+            log.debug("Locator reading request from " + sock.getInetAddress() + " with version " + Version.fromOrdinal(versionOrdinal, false));
-          if (log.getLogWriter().fineEnabled()) {
-            log.getLogWriter().fine("Locator received request " + request + " from " + sock.getInetAddress());
+          if (log.isDebugEnabled()) {
+            log.debug("Locator received request " + request + " from " + sock.getInetAddress());
-          // input.close(); GemStoneAddition close in finally block
-          // sock.close(); GemStoneAddition close in finally block
-          log.getLogWriter().info(ExternalStrings.ONE_ARG,
+          log.info(
-              log.getLogWriter().info(
-                  ExternalStrings.ONE_ARG,
+              log.info(
-            log.getLogWriter().severe(
-                ExternalStrings.TCPSERVER_EXCEPTION_IN_PROCESSING_REQUEST_FROM_0,
+            log.fatal("Exception in processing request from " + 
-            // GemStoneAddition do this in the finally block
-            // try {
-            // sock.close();
-            // }
-            // catch (IOException ioe) {
-            // log.getLogWriter().warning("Exception closing socket", ioe);
-            // }
+
-            log.getLogWriter().severe(
-                ExternalStrings.TCPSERVER_EXCEPTION_IN_PROCESSING_REQUEST_FROM_0,
+            log.fatal("Exception in processing request from " +
-        } finally { // GemStoneAddition: be safe about closing
+        } finally {
-              log.getLogWriter().warning(
-                ExternalStrings.ONE_ARG,
+              log.warn(
-            log.getLogWriter().warning(
-                ExternalStrings.ONE_ARG,
+            log.warn(
-  protected/*GemStoneAddition*/ Object handleInfoRequest(Object request) {
-    // Return a GossipData.INFO_RSP with two "members": the
-    // working directory of this locator and the product
-    // directory of this locator.
+  protected Object handleInfoRequest(Object request) {
-  protected /*GemStone Addition */ Object handleVersionRequest(Object request) {
+  protected Object handleVersionRequest(Object request) {
