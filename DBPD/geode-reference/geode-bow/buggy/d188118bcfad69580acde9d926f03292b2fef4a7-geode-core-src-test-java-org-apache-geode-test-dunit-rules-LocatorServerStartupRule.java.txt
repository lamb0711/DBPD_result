Refactor test rules

* Refactor GfshShellConnectorRule so that it's easier to use it either as a rule or classRule
* Refactor LocatorServerStartupRule so that tests using it do not need to extend from Junit4DUnitTest and can be used as a class rule.
* properly close all the vms using the ServerStartupRule
* add NetstatDUnitTest

+import org.apache.geode.test.dunit.standalone.DUnitLauncher;
-import org.junit.After;
-import org.junit.Before;
-import java.nio.file.Path;
-  @Before
-  public void before() throws Throwable {
+  public LocatorServerStartupRule() {
+    DUnitLauncher.launchIfNeeded();
+  }
+
+  @Override
+  protected void before() throws Throwable {
-    Invoke.invokeInEveryVM("Stop each VM", this::stopServerOrLocatorInThisVM);
+    Invoke.invokeInEveryVM("Stop each VM", this::cleanupVm);
-  @After
-  public void after() {
+  @Override
+  protected void after() {
+    DUnitLauncher.closeAndCheckForSuspects();
+    Invoke.invokeInEveryVM("Stop each VM", this::cleanupVm);
-    Invoke.invokeInEveryVM("Stop each VM", this::stopServerOrLocatorInThisVM);
-    Locator locator = new Locator(locatorVM, locatorPort, workingDir);
+    Locator locator = new Locator(locatorVM, locatorPort, workingDir, name);
-
-    Locator locator = new Locator(locatorVM, locatorPort, workingDir);
+    Locator locator = new Locator(locatorVM, locatorPort, workingDir, name);
-    Server server = new Server(serverVM, port, workingDir);
+    Server server = new Server(serverVM, port, workingDir, name);
-  private void stopServerOrLocatorInThisVM() {
+  private void cleanupVm() {
+      serverStarter = null;
+      locatorStarter = null;
