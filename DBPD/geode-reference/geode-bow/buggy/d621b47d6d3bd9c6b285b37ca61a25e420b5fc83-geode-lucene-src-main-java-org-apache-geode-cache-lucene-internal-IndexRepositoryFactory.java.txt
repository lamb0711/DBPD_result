GEODE-4689: Colocation complete listeners added (#1565)

        * PartitionRegion can now add a colocation listener to itself which is triggered when the colocation is completed.
	* Lucene indexRepositoryFactory adds colocation complete listener to the file region
	* when the colocation of the file region is completed the compute repository is called
-      InternalLuceneIndex index, PartitionedRegion userRegion, final IndexRepository oldRepository)
-      throws IOException {
+      InternalLuceneIndex index, PartitionedRegion userRegion, final IndexRepository oldRepository,
+      PartitionedRepositoryManager partitionedRepositoryManager) throws IOException {
-    while (!prConfig.isColocationComplete()) {
-      prConfig = (PartitionRegionConfig) prRoot.get(fileRegion.getRegionIdentifier());
+    LuceneFileRegionColocationListener luceneFileRegionColocationCompleteListener =
+        new LuceneFileRegionColocationListener(partitionedRepositoryManager, bucketId);
+    fileRegion.addColocationListener(luceneFileRegionColocationCompleteListener);
+    IndexRepository repo = null;
+    if (prConfig.isColocationComplete()) {
+      repo = finishComputingRepository(bucketId, serializer, userRegion, oldRepository, index);
+    return repo;
+  }
+  /*
+   * NOTE: The method finishComputingRepository must be called through computeIndexRepository.
+   * Executing finishComputingRepository outside of computeIndexRepository may result in race
+   * conditions.
+   * This is a util function just to not let computeIndexRepository be a huge chunk of code.
+   */
+  private IndexRepository finishComputingRepository(Integer bucketId, LuceneSerializer serializer,
+      PartitionedRegion userRegion, IndexRepository oldRepository, InternalLuceneIndex index)
+      throws IOException {
+    LuceneIndexForPartitionedRegion indexForPR = (LuceneIndexForPartitionedRegion) index;
+    final PartitionedRegion fileRegion = indexForPR.getFileAndChunkRegion();
