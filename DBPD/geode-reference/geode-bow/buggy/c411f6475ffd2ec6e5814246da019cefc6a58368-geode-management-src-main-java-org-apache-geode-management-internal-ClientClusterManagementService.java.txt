GEODE-6803: be able to configure pdx using management rest api (#3638)

* Add PdxManagementController and PdxManager
* add RestEndPoint.getUri for single config object uri for HATOS, make it part of the json response
* rename RuntimeCacheElement to MultiGroupCacheElement since the only usage of it is to support multi group.
* make MultiGroupCacheElement a suplimental interface and list does not have to return MultiGroupCacheElement
* do not require servers to be present in order to create a cache element
* when realizer is not present, assuming the servers needs to be bounced in order for the config change to take effect
-import org.apache.commons.lang3.StringUtils;
-import org.springframework.web.client.ResponseErrorHandler;
-
-  private static final ResponseErrorHandler DEFAULT_ERROR_HANDLER =
-      new RestTemplateResponseErrorHandler();
-
-    if (StringUtils.isBlank(config.getId())) {
-      throw new IllegalArgumentException("Id is required.");
-    }
-    String endPoint = getEndpoint(config);
-        .getForEntity(VERSION + endPoint + "/{id}", ClusterManagementResult.class, config.getId())
+        .getForEntity(VERSION + getUri(config), ClusterManagementResult.class)
-  public RestTemplate getRestTemplate() {
-    return restTemplate;
+  private String getEndpoint(CacheElement config) {
+    checkIsRestful(config);
+    String endpoint = ((RestfulEndpoint) config).getEndpoint();
+    if (endpoint == null) {
+      throw new IllegalArgumentException(
+          "unable to construct the uri with the current configuration.");
+    }
+    return endpoint;
-  private String getEndpoint(CacheElement config) {
+  private String getUri(CacheElement config) {
+    checkIsRestful(config);
+    String uri = ((RestfulEndpoint) config).getUri();
+    if (uri == null) {
+      throw new IllegalArgumentException(
+          "unable to construct the uri with the current configuration.");
+    }
+    return uri;
+  }
+
+  private void checkIsRestful(CacheElement config) {
-    return ((RestfulEndpoint) config).getEndpoint();
