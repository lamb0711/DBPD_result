GEODE-2230: Added AsyncEventQueue and GatewaySender waitUntilFlushed API

+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicLong;
+  private AtomicLong latestQueuedKey = new AtomicLong();
+
+  private AtomicLong latestAcknowledgedKey = new AtomicLong();
+
+        updateLargestQueuedKey((Long) key);
+  private void updateLargestQueuedKey(Long key) {
+    Atomics.setIfGreater(this.latestQueuedKey, key);
+  }
+
+  private void setLatestAcknowledgedKey(Long key) {
+    this.latestAcknowledgedKey.set(key);
+  }
+
+  public boolean waitUntilFlushed(long timeout, TimeUnit unit) throws InterruptedException {
+    if (logger.isDebugEnabled()) {
+      logger.debug("BucketRegionQueue: waitUntilFlushed bucket=" + getId() + "; time="
+          + System.currentTimeMillis() + "; timeout=" + timeout + "; unit=" + unit);
+    }
+    boolean result = false;
+    // Wait until latestAcknowledgedKey > latestQueuedKey or the queue is empty
+    if (this.initialized) {
+      long latestQueuedKeyToCheck = this.latestQueuedKey.get();
+      long nanosRemaining = unit.toNanos(timeout);
+      long endTime = System.nanoTime() + nanosRemaining;
+      while (nanosRemaining > 0) {
+        if (latestAcknowledgedKey.get() > latestQueuedKeyToCheck || isEmpty()) {
+          result = true;
+          break;
+        }
+        Thread.sleep(Math.min(TimeUnit.NANOSECONDS.toMillis(nanosRemaining) + 1, 100));
+        nanosRemaining = endTime - System.nanoTime();
+      }
+    }
+    if (logger.isDebugEnabled()) {
+      logger.debug("BucketRegionQueue: waitUntilFlushed completed bucket=" + getId() + "; time="
+          + System.currentTimeMillis() + "; result=" + result);
+    }
+    return result;
+  }
+
+      setLatestAcknowledgedKey((Long) key);
