GEODE-4894: Changes are made to support case sensitivity between region, table name and pdx field, column name (#1663)

* meta-data is now used to compute the column name
* reads will now consult the pdx registry for an existing pdx type to use its field name.
* Convert field name to lowercase only when column name is uppercase.
* Table name lookup is changes to look for exact match first, than case insensitive match.
* Field to column name lookup is changed to find exact column name or case insensitive match in the metadata.

-
-import org.apache.geode.connectors.jdbc.JdbcConnectorException;
+import java.util.Set;
+  private final String tableName;
-  private final HashMap<String, Integer> columnNameToTypeMap = new HashMap<>();
+  private final HashMap<String, Integer> columnNameToTypeMap;
-  public TableMetaData(String keyColumnName) {
+  public TableMetaData(String tableName, String keyColumnName) {
+    this.tableName = tableName;
+    this.columnNameToTypeMap = new HashMap<>();
+  }
+
+  @Override
+  public String getTableName() {
+    return tableName;
-    Integer dataType = this.columnNameToTypeMap.get(columnName.toLowerCase());
+    Integer dataType = this.columnNameToTypeMap.get(columnName);
+  @Override
+  public Set<String> getColumnNames() {
+    return columnNameToTypeMap.keySet();
+  }
+
-    Integer previousDataType = this.columnNameToTypeMap.put(columnName.toLowerCase(), dataType);
-    if (previousDataType != null) {
-      throw new JdbcConnectorException(
-          "Column names must be different in case. Two columns both have the name "
-              + columnName.toLowerCase());
-    }
+    this.columnNameToTypeMap.put(columnName, dataType);
