GEODE-3269: Minor updates to previous refactoring.

+import java.io.InputStream;
+import java.net.MalformedURLException;
+import java.net.URL;
+import org.apache.geode.management.internal.cli.CliUtil;
-  private static UserInputProperty[] USERINPUTPROPERTIES =
+  private static final UserInputProperty[] USER_INPUT_PROPERTIES =
-    // ssl options are passed in in the order defined in USERINPUTPROPERTIES, note the two types
+    // ssl options are passed in in the order defined in USER_INPUT_PROPERTIES, note the two types
-   * @param sslOptionValues an array of 9 in this order, as defined in USERINPUTPROPERTIES
+   * @param sslOptionValues an array of 9 in this order, as defined in USER_INPUT_PROPERTIES
-    for (int i = 0; i < USERINPUTPROPERTIES.length; i++) {
-      UserInputProperty userInputProperty = USERINPUTPROPERTIES[i];
+    for (int i = 0; i < USER_INPUT_PROPERTIES.length; i++) {
+      UserInputProperty userInputProperty = USER_INPUT_PROPERTIES[i];
-        properties.putAll(ShellCommandsLoadProperties.loadProperties(file));
+        properties.putAll(loadPropertiesFromFile(file));
-  static boolean containsSSLConfig(Properties properties) {
+  private static boolean containsSSLConfig(Properties properties) {
+
+  private static Properties loadPropertiesFromFile(File propertyFile) {
+    try {
+      return loadPropertiesFromUrl(propertyFile.toURI().toURL());
+    } catch (MalformedURLException e) {
+      throw new RuntimeException(
+          CliStrings.format("Failed to load configuration properties from pathname (%1$s)!",
+              propertyFile.getAbsolutePath()),
+          e);
+    }
+  }
+
+  private static Properties loadPropertiesFromUrl(URL url) {
+    Properties properties = new Properties();
+
+    if (url == null) {
+      return properties;
+    }
+
+    try (InputStream inputStream = url.openStream()) {
+      properties.load(inputStream);
+    } catch (IOException io) {
+      throw new RuntimeException(
+          CliStrings.format(CliStrings.CONNECT__MSG__COULD_NOT_READ_CONFIG_FROM_0,
+              CliUtil.decodeWithDefaultCharSet(url.getPath())),
+          io);
+    }
+
+    return properties;
+  }
