GEODE-77(Sub-Task GEODE-205) After a network outage is fixed a former member can rejoin

-
-import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+import static com.gemstone.gemfire.internal.DataSerializableFixedID.JOIN_RESPONSE;
-import static com.gemstone.gemfire.internal.DataSerializableFixedID.JOIN_RESPONSE;
-
+import com.gemstone.gemfire.distributed.internal.membership.QuorumChecker;
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+
+  private GMSPingPonger pingPonger = new GMSPingPonger();
+
+  
-      
+      myChannel.setReceiver(null);
-      this.myChannel.close();
+      if ((services.isShutdownDueToForcedDisconnect() && services.isAutoReconnectEnabled()) || services.getManager().isReconnectingDS()) {
+        
+      }
+      else {
+        this.myChannel.close();
+      }
+    logicalAddress = logicalAddress.copy();
-          Throwable cause = services.getManager().getShutdownCause();
+          Throwable cause = services.getShutdownCause();
-            ne.initCause(services.getManager().getShutdownCause());
+            ne.initCause(services.getShutdownCause());
-      this.myChannel.disconnect();
+      if ((services.isShutdownDueToForcedDisconnect() && services.isAutoReconnectEnabled()) || services.getManager().isReconnectingDS()) {
+      }
+      else {
+        this.myChannel.disconnect();
+      }
+  public QuorumChecker getQuorumChecker() {    
+    GMSQuorumChecker qc = new GMSQuorumChecker(
+          services.getJoinLeave().getPreviousView(), services.getConfig().getLossThreshold(),
+          this.myChannel);
+    qc.initialize();
+    return qc;
+  }
+      //Respond to ping messages sent from other systems that are in a auto reconnect state
+      Object contents = jgmsg.getBuffer();
+      if (contents instanceof byte[]) {
+          byte[] msgBytes = (byte[]) contents;
+  	    if (pingPonger.isPingMessage(msgBytes)) {
+  	    	try {
+  	    	  pingPonger.sendPongMessage(myChannel, jgAddress, jgmsg.getSrc());
+            }
+            catch (Exception e) {
+              logger.info("Failed sending Pong message to " + jgmsg.getSrc());
+            }
+  	        return;
+  	    }
+      }
+      
