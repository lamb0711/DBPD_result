GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.i18n.StringId;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-      logger.info(LocalizedMessage.create(
-          LocalizedStrings.PartitionedRegionDataStore_CREATEBUCKETREGION_CREATING_BUCKETID_0_NAME_1,
-          new Object[] {this.partitionedRegion.bucketStringForLogs(bucketId), bucketRegionName}));
+      logger.info("createBucketRegion: Creating bucketId, {} name, {}.",
+          this.partitionedRegion.bucketStringForLogs(bucketId),
+          bucketRegionName);
-        logger.info(
-            LocalizedMessage.create(
-                LocalizedStrings.PartitionedRegionDataStore_ASSERTION_ERROR_CREATING_BUCKET_IN_REGION),
+        logger.info("Assertion error creating bucket in region",
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.PartitionedRegionDataStore_EXCPETION__IN_BUCKET_INDEX_CREATION_,
-            ignor.getLocalizedMessage()), ignor);
+        logger.info(String.format("Excpetion  in bucket index creation : %s",
+            ignor.getLocalizedMessage()),
+            ignor);
-      StringId logStr = null;
+      String logStr = null;
-              LocalizedStrings.PartitionedRegionDataStore_PARTITIONED_REGION_0_HAS_EXCEEDED_LOCAL_MAXIMUM_MEMORY_CONFIGURATION_2_MB_CURRENT_SIZE_IS_3_MB;
+              "Partitioned Region %s has exceeded local maximum memory configuration %s Mb, current size is %s Mb";
-              LocalizedStrings.PartitionedRegionDataStore_PARTITIONED_REGION_0_IS_AT_OR_BELOW_LOCAL_MAXIMUM_MEMORY_CONFIGURATION_2_MB_CURRENT_SIZE_IS_3_MB;
+              "Partitioned Region %s is at or below local maximum memory configuration %s Mb, current size is %s Mb";
-          logger.warn(LocalizedMessage.create(logStr, logArgs));
+          logger.warn(String.format(logStr, logArgs));
-          logger.info(LocalizedMessage.create(logStr, logArgs));
+          logger.info(String.format(logStr, logArgs));
-                LocalizedStrings.PartitionedRegionDataStore_REGION_HAS_BEEN_DESTROYED
-                    .toLocalizedString(),
+                "Region has been destroyed",
-                logger.warn(LocalizedMessage.create(
-                    LocalizedStrings.PartitionedRegion_PARTITIONEDREGION_0_CLEANUP_PROBLEM_DESTROYING_BUCKET_1,
-                    new Object[] {this.partitionedRegion.getFullPath(),
-                        Integer.valueOf(buk.getId())}),
+                logger.warn(
+                    String.format("PartitionedRegion %s: cleanUp problem destroying bucket %s",
+                        new Object[] {this.partitionedRegion.getFullPath(),
+                            Integer.valueOf(buk.getId())}),
-      logger.warn(LocalizedMessage.create(
-          LocalizedStrings.PartitionedRegionDataStore_PARTITIONEDREGION_0_CAUGHT_UNEXPECTED_EXCEPTION_DURING_CLEANUP,
-          this.partitionedRegion.getFullPath()), ex);
+      logger.warn(
+          String.format("PartitionedRegion %s: caught unexpected exception during data cleanup",
+              this.partitionedRegion.getFullPath()),
+          ex);
-          LocalizedStrings.PartitionedRegionDataStore_BUCKET_ID_0_NOT_FOUND_ON_VM_1
-              .toLocalizedString(
-                  new Object[] {this.partitionedRegion.bucketStringForLogs(bucketId.intValue()),
-                      this.partitionedRegion.getMyId()}));
+          String.format("Bucket id  %s  not found on VM  %s",
+
+              new Object[] {this.partitionedRegion.bucketStringForLogs(bucketId.intValue()),
+                  this.partitionedRegion.getMyId()}));
-              LocalizedStrings.PartitionedRegionDataStore_UNABLE_TO_GET_VALUE_FOR_KEY
-                  .toLocalizedString(),
+              "Unable to get value for key.",
-          LocalizedStrings.PartitionedRegionDataStore_UNABLE_TO_SERIALIZE_VALUE.toLocalizedString(),
+          "Unable to serialize value",
-            LocalizedStrings.PartitionedRegionDataStore_ENTRY_NOT_FOUND.toLocalizedString());
+            "entry not found");
-              LocalizedStrings.PartitionedRegionDataStore_UNABLE_TO_GET_ENTRY.toLocalizedString(),
+              "Unable to get Entry.",
-              LocalizedStrings.PartitionedRegionDataStore_UNABLE_TO_FETCH_KEYS_ON_0
-                  .toLocalizedString(this.partitionedRegion.toString()),
+              String.format("Unable to fetch keys on %s",
+                  this.partitionedRegion.toString()),
-              LocalizedStrings.PartitionedRegionDataStore_UNABLE_TO_FETCH_KEYS_ON_0
-                  .toLocalizedString(this.partitionedRegion),
+              String.format("Unable to fetch keys on %s",
+                  this.partitionedRegion),
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.PartitionedRegionDataStore_VERIFIED_NODELIST_FOR_BUCKETID_0_IS_1,
-            new Object[] {partitionedRegion.bucketStringForLogs(buckId),
-                PartitionedRegionHelper.printCollection(owners)}));
+        logger.info("Verified nodelist for bucketId={} is {}",
+            partitionedRegion.bucketStringForLogs(buckId),
+            PartitionedRegionHelper.printCollection(owners));
-          LocalizedStrings.FunctionService_BUCKET_MIGRATED_TO_ANOTHER_NODE.toLocalizedString());
+          "Bucket migrated to another node. Please retry.");
