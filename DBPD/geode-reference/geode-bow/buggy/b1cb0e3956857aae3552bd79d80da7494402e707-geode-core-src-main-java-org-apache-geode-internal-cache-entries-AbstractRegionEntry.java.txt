GEODE-4307: Removing some static calls to GemFireCacheImpl.getForPDX

Removing the easier static calls to getForPdx.

This closes #1299

-      return checkEquals(expectedOldValue, actualValue, isCompressedOffHeap);
+      return checkEquals(expectedOldValue, actualValue, isCompressedOffHeap, region.getCache());
-      boolean isCompressedOffHeap) {
+      boolean isCompressedOffHeap, InternalCache cache) {
-      return checkPdxEquals((PdxInstance) v1, v2);
+      return checkPdxEquals((PdxInstance) v1, v2, cache);
-      return checkPdxEquals((PdxInstance) v2, v1);
+      return checkPdxEquals((PdxInstance) v2, v1, cache);
-      return checkOffHeapEquals((StoredObject) v1, v2);
+      return checkOffHeapEquals((StoredObject) v1, v2, cache);
-      return checkOffHeapEquals((StoredObject) v2, v1);
+      return checkOffHeapEquals((StoredObject) v2, v1, cache);
-      return checkCDEquals((CachedDeserializable) v1, v2, isCompressedOffHeap);
+      return checkCDEquals((CachedDeserializable) v1, v2, isCompressedOffHeap, cache);
-      return checkCDEquals((CachedDeserializable) v2, v1, isCompressedOffHeap);
+      return checkCDEquals((CachedDeserializable) v2, v1, isCompressedOffHeap, cache);
-  private static boolean checkOffHeapEquals(@Unretained StoredObject ohVal,
-      @Unretained Object obj) {
+  private static boolean checkOffHeapEquals(@Unretained StoredObject ohVal, @Unretained Object obj,
+      InternalCache cache) {
-      PdxInstance pi = InternalDataSerializer.readPdxInstance(ohVal.getSerializedValue(),
-          GemFireCacheImpl.getForPdx("Could not check value equality"));
-      return checkPdxEquals(pi, obj);
+      PdxInstance pi = InternalDataSerializer.readPdxInstance(ohVal.getSerializedValue(), cache);
+      return checkPdxEquals(pi, obj, cache);
-      boolean isCompressedOffHeap) {
+      boolean isCompressedOffHeap, InternalCache cache) {
-      PdxInstance pi = InternalDataSerializer.readPdxInstance(cdValBytes,
-          GemFireCacheImpl.getForPdx("Could not check value equality"));
+      PdxInstance pi = InternalDataSerializer.readPdxInstance(cdValBytes, cache);
-        return checkPdxEquals(pi, obj);
+        return checkPdxEquals(pi, obj, cache);
-  private static boolean checkPdxEquals(PdxInstance pdx, Object obj) {
+  private static boolean checkPdxEquals(PdxInstance pdx, Object obj, InternalCache cache) {
-          PdxInstance pi = InternalDataSerializer.readPdxInstance(cdValBytes,
-              GemFireCacheImpl.getForPdx("Could not check value equality"));
+          PdxInstance pi = InternalDataSerializer.readPdxInstance(cdValBytes, cache);
-        InternalCache internalCache = GemFireCacheImpl.getForPdx("Could not access Pdx registry");
-        if (internalCache != null) {
-          PdxSerializer pdxSerializer;
-          if (obj instanceof PdxSerializable) {
-            pdxSerializer = null;
-          } else {
-            pdxSerializer = internalCache.getPdxSerializer();
-          }
-          if (pdxSerializer != null || obj instanceof PdxSerializable) {
-            // try to convert obj to a PdxInstance
-            HeapDataOutputStream hdos = new HeapDataOutputStream(Version.CURRENT);
-            try {
-              if (InternalDataSerializer.autoSerialized(obj, hdos)
-                  || InternalDataSerializer.writePdx(hdos, internalCache, obj, pdxSerializer)) {
-                PdxInstance pi =
-                    InternalDataSerializer.readPdxInstance(hdos.toByteArray(), internalCache);
-                if (pi != null) {
-                  obj = pi;
-                }
+        PdxSerializer pdxSerializer;
+        if (obj instanceof PdxSerializable) {
+          pdxSerializer = null;
+        } else {
+          pdxSerializer = cache.getPdxSerializer();
+        }
+        if (pdxSerializer != null || obj instanceof PdxSerializable) {
+          // try to convert obj to a PdxInstance
+          HeapDataOutputStream hdos = new HeapDataOutputStream(Version.CURRENT);
+          try {
+            if (InternalDataSerializer.autoSerialized(obj, hdos)
+                || InternalDataSerializer.writePdx(hdos, cache, obj, pdxSerializer)) {
+              PdxInstance pi = InternalDataSerializer.readPdxInstance(hdos.toByteArray(), cache);
+              if (pi != null) {
+                obj = pi;
-            } catch (IOException | PdxSerializationException ignore) {
-              // we are not able to convert it so just fall through
+          } catch (IOException | PdxSerializationException ignore) {
+            // we are not able to convert it so just fall through
