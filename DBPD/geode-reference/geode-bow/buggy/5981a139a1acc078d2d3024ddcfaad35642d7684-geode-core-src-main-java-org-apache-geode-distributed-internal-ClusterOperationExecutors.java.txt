GEODE-7177: Logging as a submodule (#4129)

* GEODE-7177: Extract LogService to a separate submodule

- Extracting LogService and it's dependencies to a separate geode-logging
submodule so that other modules not in geode-core can still use LogService to
get a Logger.

- Removing the use of the logging SPI from LogService
LogService had a dependency on the logging SPI in geode-core. However, this
dependency was unecessary - the LoggingProvider loaded statically in this class
never had `configure` called on it. In addition, the getLogger methods of this
class are merely creating FastLoggers which can live inside geode-logging and
do not need to be pluggable.

- Moved executors that are not dependent on geode-core to geode-logging and
renamed the remaining executors to be CoreLoggingExecutors.

- Refactor the marker interface from Loggable to EntriesCollection

- EntriesCollection put back into internal.cache and AbstractRegion now implements the marker
- Formerly known as Loggable renamed to LogWithToString

- Remove marker interface called EntriesCollection completely, replace with LogWithToString.

+import org.apache.geode.internal.logging.CoreLoggingExecutors;
-import org.apache.geode.internal.logging.LoggingExecutors;
-      serialThread = LoggingExecutors.newSerialThreadPool("Serial Message Processor",
+      serialThread = CoreLoggingExecutors.newSerialThreadPool("Serial Message Processor",
-        LoggingExecutors.newSerialThreadPoolWithUnlimitedFeed("View Message Processor",
+        CoreLoggingExecutors.newSerialThreadPoolWithUnlimitedFeed("View Message Processor",
-        LoggingExecutors.newThreadPoolWithFeedStatistics("Pooled Message Processor ",
+        CoreLoggingExecutors.newThreadPoolWithFeedStatistics("Pooled Message Processor ",
-    highPriorityPool = LoggingExecutors.newThreadPoolWithFeedStatistics(
+    highPriorityPool = CoreLoggingExecutors.newThreadPoolWithFeedStatistics(
-      waitingPool = LoggingExecutors.newThreadPool("Pooled Waiting Message Processor ",
+      waitingPool = CoreLoggingExecutors.newThreadPool("Pooled Waiting Message Processor ",
-        LoggingExecutors.newThreadPoolWithFeedStatistics("PrMetaData cleanup Message Processor ",
+        CoreLoggingExecutors.newThreadPoolWithFeedStatistics(
+            "PrMetaData cleanup Message Processor ",
-          LoggingExecutors.newThreadPoolWithFeedStatistics("PartitionedRegion Message Processor",
+          CoreLoggingExecutors.newThreadPoolWithFeedStatistics(
+              "PartitionedRegion Message Processor",
-      partitionedRegionThread = LoggingExecutors.newSerialThreadPoolWithFeedStatistics(
+      partitionedRegionThread = CoreLoggingExecutors.newSerialThreadPoolWithFeedStatistics(
-          LoggingExecutors.newFunctionThreadPoolWithFeedStatistics(
+          CoreLoggingExecutors.newFunctionThreadPoolWithFeedStatistics(
-          LoggingExecutors.newSerialThreadPoolWithFeedStatistics(
+          CoreLoggingExecutors.newSerialThreadPoolWithFeedStatistics(
-      return LoggingExecutors.newSerialThreadPool("Pooled Serial Message Processor" + id + "-",
+      return CoreLoggingExecutors.newSerialThreadPool("Pooled Serial Message Processor" + id + "-",
