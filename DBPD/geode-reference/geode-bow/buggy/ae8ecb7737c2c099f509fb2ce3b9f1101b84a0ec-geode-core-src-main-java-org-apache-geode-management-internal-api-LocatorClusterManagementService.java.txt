GEODE-6612: list regions in Management v2 api (#3445)

Co-authored-by: Peter Tran <ptran@pivotal.io>

+import java.util.ArrayList;
+import org.apache.commons.lang3.StringUtils;
+import org.apache.geode.cache.configuration.RegionConfig;
+    validators.put(RegionConfig.class, new RegionConfigValidator(cache));
-    String group = config.getGroup();
+    String group = config.getConfigGroup();
-    List<CacheElement> listResults = manager.list(filter, null);
-
-    result.setResult(listResults);
+    if (filter instanceof MemberConfig) {
+      List<CacheElement> listResults = manager.list(filter, null);
+      result.setResult(listResults);
+      return result;
+    }
+
+    if (persistenceService == null) {
+      return new ClusterManagementResult(false,
+          "Cluster configuration service needs to be enabled");
+    }
+
+    List<CacheElement> elements = new ArrayList<>();
+    for (String group : persistenceService.getGroups()) {
+      if (StringUtils.isBlank(filter.getGroup()) || group.equals(filter.getConfigGroup())) {
+        CacheConfig currentPersistedConfig = persistenceService.getCacheConfig(group, true);
+        List<CacheElement> listInGroup = manager.list(filter, currentPersistedConfig);
+        // only set the group attribute when the config level is not in the cluster level
+        if (!group.equals("cluster")) {
+          listInGroup.stream().forEach(e -> e.setGroup(group));
+        }
+        elements.addAll(listInGroup);
+      }
+    }
+
+    result.setResult(elements);
