Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   
-   
+
+
-//import org.apache.geode.internal.*;
+// import org.apache.geode.internal.*;
-//import java.util.*;
-//import java.net.*;
+// import java.util.*;
+// import java.net.*;
- * A message that is sent to a particular distribution manager to
- * make an administration request.
+ * A message that is sent to a particular distribution manager to make an administration request.
-public abstract class AdminRequest extends PooledDistributionMessage  {
+public abstract class AdminRequest extends PooledDistributionMessage {
-  
+
-  /** The reply procesor used to gathering replies to an
-   * AdminRequest.  See bug 31562. */
+  /**
+   * The reply procesor used to gathering replies to an AdminRequest. See bug 31562.
+   */
- 
+
-      // reply process.  Besides, if we try to create one, we'll get
+      // reply process. Besides, if we try to create one, we'll get
-      this.processor =
-        new AdminReplyProcessor(dm.getSystem(), recipient);
+      this.processor = new AdminReplyProcessor(dm.getSystem(), recipient);
-   * Waits a given number of milliseconds for the reply to this
-   * request. 
+   * Waits a given number of milliseconds for the reply to this request.
-//    if (Thread.interrupted()) throw new InterruptedException(); not necessary waitForReplies does this?
+    // if (Thread.interrupted()) throw new InterruptedException(); not necessary waitForReplies does
+    // this?
-      for (Throwable cause = ex.getCause(); cause != null;
-           cause = cause.getCause()) {
+      for (Throwable cause = ex.getCause(); cause != null; cause = cause.getCause()) {
-      throw new RuntimeAdminException(LocalizedStrings.AdminRequest_A_REPLYEXCEPTION_WAS_THROWN_WHILE_WAITING_FOR_A_REPLY.toLocalizedString(), ex);
+      throw new RuntimeAdminException(
+          LocalizedStrings.AdminRequest_A_REPLYEXCEPTION_WAS_THROWN_WHILE_WAITING_FOR_A_REPLY
+              .toLocalizedString(),
+          ex);
-   * This method is invoked on the receiver side. It creates a response
-   * message and puts it on the outgoing queue.
+   * This method is invoked on the receiver side. It creates a response message and puts it on the
+   * outgoing queue.
-    if (response != null) { //cancellations result in null response
+    if (response != null) { // cancellations result in null response
-      logger.info(LocalizedMessage.create(LocalizedStrings.AdminRequest_RESPONSE_TO__0__WAS_CANCELLED, this.getClass().getName()));
+      logger.info(LocalizedMessage.create(
+          LocalizedStrings.AdminRequest_RESPONSE_TO__0__WAS_CANCELLED, this.getClass().getName()));
+
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-      throw new
-        IllegalStateException(LocalizedStrings.AdminRequest_COULD_NOT_RETURN_ONE_RECIPIENT_BECAUSE_THIS_MESSAGE_HAS_0_RECIPIENTS.toLocalizedString(Integer.valueOf(size)));
+      throw new IllegalStateException(
+          LocalizedStrings.AdminRequest_COULD_NOT_RETURN_ONE_RECIPIENT_BECAUSE_THIS_MESSAGE_HAS_0_RECIPIENTS
+              .toLocalizedString(Integer.valueOf(size)));
