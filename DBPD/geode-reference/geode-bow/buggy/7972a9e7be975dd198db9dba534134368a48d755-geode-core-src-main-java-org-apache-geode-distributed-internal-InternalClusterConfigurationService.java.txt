GEODE-4858: use FastPathScanner to register all the bind classes when câ€¦ (#1838)

* do not register bind class on demand. Register all custom element at service start time.

+import org.apache.geode.cache.configuration.XSDRootElement;
+import org.apache.geode.management.internal.cli.util.ClasspathScanLoadHelper;
-  InternalClusterConfigurationService() {
+  InternalClusterConfigurationService(Class<?>... xsdClasses) {
-    jaxbService = new JAXBService();
+    jaxbService = new JAXBService(xsdClasses);
+    jaxbService.validateWithLocalCacheXSD();
-  public InternalClusterConfigurationService(InternalCache cache) throws IOException {
+  public InternalClusterConfigurationService(InternalCache cache, Class<?>... xsdClasses)
+      throws IOException {
-    jaxbService = new JAXBService();
+    if (xsdClasses != null && xsdClasses.length > 0) {
+      this.jaxbService = new JAXBService(xsdClasses);
+    }
+    // else, scan the classpath to find all the classes annotated with XSDRootElement
+    else {
+      Set<Class<?>> scannedClasses = ClasspathScanLoadHelper
+          .scanClasspathForAnnotation(XSDRootElement.class, "org.apache.geode");
+      this.jaxbService = new JAXBService(scannedClasses.toArray(new Class[scannedClasses.size()]));
+    }
+    jaxbService.validateWithLocalCacheXSD();
-  public void registerBindClassWithSchema(Class clazz, String namespaceAndLocation) {
-    jaxbService.registerBindClassWithSchema(clazz, namespaceAndLocation);
-  }
-
-
-  @Override
