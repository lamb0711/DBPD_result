GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-import org.apache.geode.cache.SynchronizationCommitConflictException;
-  protected boolean shouldMasqueradeForTx(Message msg, ServerConnection servConn) {
+  protected boolean shouldMasqueradeForTx(Message clientMessage,
+      ServerConnection serverConnection) {
-  public void cmdExecute(final Message msg, final ServerConnection servConn, long start)
-      throws IOException, ClassNotFoundException, InterruptedException {
+  public void cmdExecute(final Message clientMessage, final ServerConnection serverConnection,
+      long start) throws IOException, ClassNotFoundException, InterruptedException {
-    servConn.setAsTrue(REQUIRES_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
-    CompletionType type = CompletionType.values()[msg.getPart(0).getInt()];
-    /* int txIdInt = */ msg.getPart(1).getInt(); // [bruce] not sure if we need to transmit this
+    CompletionType type = CompletionType.values()[clientMessage.getPart(0).getInt()];
+    /* int txIdInt = */ clientMessage.getPart(1).getInt(); // [bruce] not sure if we need to
+                                                           // transmit this
-      statusPart = msg.getPart(2);
+      statusPart = clientMessage.getPart(2);
-    final TXManagerImpl txMgr = (TXManagerImpl) servConn.getCache().getCacheTransactionManager();
+    final TXManagerImpl txMgr =
+        (TXManagerImpl) serverConnection.getCache().getCacheTransactionManager();
-        (InternalDistributedMember) servConn.getProxyID().getDistributedMember();
+        (InternalDistributedMember) serverConnection.getProxyID().getDistributedMember();
-    final TXStateProxy txProxy = txMgr.masqueradeAs(msg, member, true);
+    final TXStateProxy txProxy = txMgr.masqueradeAs(clientMessage, member, true);
-                txState = txMgr.masqueradeAs(msg, member, false);
+                txState = txMgr.masqueradeAs(clientMessage, member, false);
-                      msg.getTransactionId());
+                      clientMessage.getTransactionId());
-                  writeReply(msg, servConn);
+                  writeReply(clientMessage, serverConnection);
-                servConn.setAsTrue(RESPONDED);
+                serverConnection.setAsTrue(RESPONDED);
-                  writeException(msg, failureException, false, servConn);
+                  writeException(clientMessage, failureException, false, serverConnection);
-                servConn.setAsTrue(RESPONDED);
+                serverConnection.setAsTrue(RESPONDED);
-                txState = txMgr.masqueradeAs(msg, member, false);
+                txState = txMgr.masqueradeAs(clientMessage, member, false);
-                      status, msg.getTransactionId());
+                      status, clientMessage.getTransactionId());
-                  CommitCommand.writeCommitResponse(cmsg, msg, servConn);
+                  CommitCommand.writeCommitResponse(cmsg, clientMessage, serverConnection);
-                servConn.setAsTrue(RESPONDED);
+                serverConnection.setAsTrue(RESPONDED);
-                  writeException(msg, e, false, servConn);
+                  writeException(clientMessage, e, false, serverConnection);
-                servConn.setAsTrue(RESPONDED);
+                serverConnection.setAsTrue(RESPONDED);
-              TXStateProxy txState = txMgr.masqueradeAs(msg, member, false);
+              TXStateProxy txState = txMgr.masqueradeAs(clientMessage, member, false);
-                      msg.getTransactionId());
+                      clientMessage.getTransactionId());
-        writeException(msg, MessageType.EXCEPTION, e, false, servConn);
-        servConn.setAsTrue(RESPONDED);
+        writeException(clientMessage, MessageType.EXCEPTION, e, false, serverConnection);
+        serverConnection.setAsTrue(RESPONDED);
