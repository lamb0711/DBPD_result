GEODE-3965: rename DistributionManager classes

* DistributionManager -> ClusterDistributionManager
* DM -> DistributionManager
* LonerDistributionManager remains LonerDistributionManager

-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.ClusterDistributionManager;
-  protected transient DM dm; // Used on the sending side of this message
+  protected transient DistributionManager dm; // Used on the sending side of this message
-  public TXCommitMessage(TXId txIdent, DM dm, TXState txState) {
+  public TXCommitMessage(TXId txIdent, DistributionManager dm, TXState txState) {
-  public static TXCommitMessage waitForMessage(Object id, DM dm) {
+  public static TXCommitMessage waitForMessage(Object id, DistributionManager dm) {
-  protected void process(DistributionManager dm) {
+  protected void process(ClusterDistributionManager dm) {
-  public void setDM(DM dm) {
+  public void setDM(DistributionManager dm) {
-  public DM getDM() {
+  public DistributionManager getDM() {
-    final DM dm = this.dm;
+    final DistributionManager dm = this.dm;
-    boolean beginProcess(DM dm, TransactionId txIdent, TXRmtEvent txEvent)
+    boolean beginProcess(DistributionManager dm, TransactionId txIdent, TXRmtEvent txEvent)
-    private boolean hookupRegion(DM dm) {
+    private boolean hookupRegion(DistributionManager dm) {
-    public boolean isForceFireEvent(DM dm) {
+    public boolean isForceFireEvent(DistributionManager dm) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    protected void basicProcess(final TXCommitMessage mess, final DistributionManager dm) {
+    protected void basicProcess(final TXCommitMessage mess, final ClusterDistributionManager dm) {
-    protected void process(DistributionManager dm) {
+    protected void process(ClusterDistributionManager dm) {
-    CommitProcessQueryReplyProcessor(DM dm, Set members) {
+    CommitProcessQueryReplyProcessor(DistributionManager dm, Set members) {
-    public CommitReplyProcessor(DM dm, Set initMembers, HashMap msgMap) {
+    public CommitReplyProcessor(DistributionManager dm, Set initMembers, HashMap msgMap) {
-  public void hookupRegions(DM dm) {
+  public void hookupRegions(DistributionManager dm) {
