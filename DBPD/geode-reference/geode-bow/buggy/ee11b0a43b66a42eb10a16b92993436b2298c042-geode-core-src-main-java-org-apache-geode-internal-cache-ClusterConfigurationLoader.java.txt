GEODE-2705: Jars undeployed from cluster configuration will not be loaded from disk on member restart

+import static java.util.stream.Collectors.joining;
+import static java.util.stream.Collectors.toList;
+
+import java.util.stream.Stream;
+import org.apache.commons.lang.ArrayUtils;
+    logger.info("Requesting cluster configuration");
+    logger.info("Got response with jars: {}", Stream.of(jarFileNames).collect(joining(",")));
-      List<DeployedJar> deployedJars =
-          ClassPathLoader.getLatest().getJarDeployer().deploy(jarFileNames, jarBytes);
+      JarDeployer jarDeployer = ClassPathLoader.getLatest().getJarDeployer();
+      jarDeployer.suspendAll();
+      try {
+        List<String> extraJarsOnServer =
+            jarDeployer.findDeployedJars().stream().map(DeployedJar::getJarName)
+                .filter(jarName -> !ArrayUtils.contains(jarFileNames, jarName)).collect(toList());
-      deployedJars.stream().filter(Objects::nonNull)
-          .forEach((jar) -> logger.info("Deployed " + (jar.getFile().getAbsolutePath())));
+        for (String extraJar : extraJarsOnServer) {
+          logger.info("Removing jar not present in cluster configuration: {}", extraJar);
+          jarDeployer.deleteAllVersionsOfJar(extraJar);
+        }
+
+        List<DeployedJar> deployedJars = jarDeployer.deploy(jarFileNames, jarBytes);
+
+        deployedJars.stream().filter(Objects::nonNull)
+            .forEach((jar) -> logger.info("Deployed: {}", jar.getFile().getAbsolutePath()));
+      } finally {
+        jarDeployer.resumeAll();
+      }
-    // TODO: Jared - Does this need to actually undeploy extra jars like the javadoc says?
