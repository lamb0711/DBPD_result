GEODE-2571 CacheClosedException during LuceneQueryFunction should be handled with a retry

+import org.apache.geode.cache.CacheClosedException;
-    LuceneService service = LuceneServiceProvider.get(region.getCache());
-    LuceneIndexImpl index =
-        (LuceneIndexImpl) service.getIndex(searchContext.getIndexName(), region.getFullPath());
-    if (index == null) {
-      throw new InternalFunctionInvocationTargetException(
-          "Index for Region:" + region.getFullPath() + " was not found");
-    }
+    LuceneIndexImpl index = getLuceneIndex(region, searchContext);
-    Query query = null;
-    try {
-      query = queryProvider.getQuery(index);
-    } catch (LuceneQueryException e) {
-      logger.warn("", e);
-      throw new FunctionException(e);
-    }
+    Query query = getQuery(queryProvider, index);
-    } catch (IOException | BucketNotFoundException e) {
+    } catch (IOException | BucketNotFoundException | CacheClosedException e) {
+  private LuceneIndexImpl getLuceneIndex(final Region region,
+      final LuceneFunctionContext<IndexResultCollector> searchContext) {
+    LuceneService service = LuceneServiceProvider.get(region.getCache());
+    LuceneIndexImpl index = null;
+    try {
+      index =
+          (LuceneIndexImpl) service.getIndex(searchContext.getIndexName(), region.getFullPath());
+    } catch (CacheClosedException e) {
+      throw new InternalFunctionInvocationTargetException(
+          "Cache is closed when attempting to retrieve index:" + region.getFullPath(), e);
+    }
+    if (index == null) {
+      throw new InternalFunctionInvocationTargetException(
+          "Index for Region:" + region.getFullPath() + " was not found");
+    }
+    return index;
+  }
+
+  private Query getQuery(final LuceneQueryProvider queryProvider, final LuceneIndexImpl index) {
+    Query query = null;
+    try {
+      query = queryProvider.getQuery(index);
+    } catch (LuceneQueryException e) {
+      logger.warn("", e);
+      throw new FunctionException(e);
+    }
+    return query;
+  }
+
