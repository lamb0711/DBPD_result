GEODE-2267: enable gfsh to download file from http connection (GEODE-2418)

+import org.apache.geode.internal.lang.StringUtils;
+import org.json.JSONArray;
+import org.junit.rules.TemporaryFolder;
+  private TemporaryFolder temporaryFolder = new TemporaryFolder();
-    this.gfsh = new HeadlessGfsh(getClass().getName(), 30, "gfsh_files");
+    temporaryFolder.create();
+    this.gfsh = new HeadlessGfsh(getClass().getName(), 30,
+        temporaryFolder.newFolder("gfsh_files").getAbsolutePath());
+  public void connectAndVerify(int port, PortType type, String... options) throws Exception {
+    connect(port, type, options);
+    assertThat(this.connected).isTrue();
+  }
+
+    temporaryFolder.delete();
-    System.out.println("Command Result: \n" + gfsh.outputString);
+    if (StringUtils.isBlank(gfsh.outputString)) {
+      // print out the message body as the command result
+      JSONArray messages = ((JSONArray) result.getContent().get("message"));
+      if (messages != null) {
+        for (int i = 0; i < messages.length(); i++) {
+          gfsh.outputString += messages.getString(i) + "\n";
+        }
+      }
+    }
+    System.out.println("Command result for <" + command + ">: \n" + gfsh.outputString);
+  public String getGfshOutput() {
+    return gfsh.outputString;
+  }
+
-
-    if (result.getStatus() != Result.Status.OK) {
-      System.out.println("broken");
-    }
-    assertThat(result.getStatus()).describedAs(result.getContent().toString())
-        .isEqualTo(Result.Status.OK);
+    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);
