GEODE-5396: A bit of restructuring and a bit of cleanup to isolate failures better

-
+  static final int MAX_RETRIES = 10;
-    driver.get(getPulseURL() + "login.html");
-    if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {
-      login();
+
+    try {
+      driver.get(getPulseURL() + "login.html");
+    } catch (Exception e) {
+      e.printStackTrace();
+      System.out.println("before: driver get exception " + e.getMessage());
+      throw e;
+
+    if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {
+      try {
+        login();
+      } catch (Exception e) {
+        e.printStackTrace();
+        System.out.println("before: login exception " + e.getMessage());
+        throw e;
+      }
+    }
+
-        (new WebDriverWait(driver, 30)).until(new ExpectedCondition<WebElement>() {
-          @Override
-          public WebElement apply(WebDriver d) {
-            return d.findElement(By.id("userName"));
-          }
-        });
+        (new WebDriverWait(driver, 30, 1000)).until(
+            (ExpectedCondition<WebElement>) d -> d.findElement(By.id("userName")));
-    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
+    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
-  public WebElement waitForElementById(final String id) {
+  private WebElement waitForElementById(final String id) {
-  public WebElement waitForElementById(final String id, int timeoutInSeconds) {
+  private WebElement waitForElementById(final String id, int timeoutInSeconds) {
-        (new WebDriverWait(driver, timeoutInSeconds)).until(new ExpectedCondition<WebElement>() {
-          @Override
-          public WebElement apply(WebDriver d) {
-            return d.findElement(By.id(id));
-          }
-        });
+        (new WebDriverWait(driver, timeoutInSeconds, 1000))
+            .until((ExpectedCondition<WebElement>) d -> d.findElement(By.id(id)));
