GEODE-3647: Fix race condition

  Partitioned region attributes mutation can fail to be applied to
  buckets created concurrently. Preventing bucket creation during the
  mutation of attributes solves this issue.

+import org.apache.geode.cache.partition.PartitionRegionHelper;
-    // Set to Bucket regions as well
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setEntryTimeToLive(timeToLive);
-      }
-    }
+
+    /*
+     * All buckets must be created to make this change, otherwise it is possible for
+     * updatePRConfig(...) to make changes that cause bucket creation to live lock
+     */
+    PartitionRegionHelper.assignBucketsToPartitions(this);
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setEntryTimeToLive(timeToLive));
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setCustomEntryTimeToLive(custom);
-      }
-    }
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setCustomEntryTimeToLive(custom));
+    /*
+     * All buckets must be created to make this change, otherwise it is possible for
+     * updatePRConfig(...) to make changes that cause bucket creation to live lock
+     */
+    PartitionRegionHelper.assignBucketsToPartitions(this);
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setEntryIdleTimeout(idleTimeout);
-      }
-    }
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setEntryIdleTimeout(idleTimeout));
-    if (this.getDataStore() != null) { // not for accessors
-      for (Object o : this.getDataStore().getAllLocalBuckets()) {
-        Map.Entry entry = (Map.Entry) o;
-        Region bucketRegion = (Region) entry.getValue();
-        bucketRegion.getAttributesMutator().setCustomEntryIdleTimeout(custom);
-      }
-    }
+    dataStore.lockBucketCreationAndVisit(
+        (bucketId, r) -> r.getAttributesMutator().setCustomEntryIdleTimeout(custom));
