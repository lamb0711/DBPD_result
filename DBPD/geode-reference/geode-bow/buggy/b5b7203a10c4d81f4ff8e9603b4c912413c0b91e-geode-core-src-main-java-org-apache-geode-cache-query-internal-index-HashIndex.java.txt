GEODE-1944: Reevaluation of index regionPath catches EntryDestroyedException

  * Force removal of region entry from index if entry destroyed exception is caught
  * Renamed and recategorized tests

+import org.apache.geode.cache.EntryNotFoundException;
-import org.apache.geode.cache.query.internal.AttributeDescriptor;
-import org.apache.geode.cache.query.internal.CompiledComparison;
-import org.apache.geode.internal.offheap.annotations.Released;
-import org.apache.geode.internal.offheap.annotations.Retained;
-import org.apache.geode.pdx.internal.PdxString;
+      } catch (TypeMismatchException tme) {
+        if (tme.getRootCause() instanceof EntryDestroyedException) {
+          //This code relies on current implementation of remove mapping, relying on behavior that will force a
+          //crawl through the index to remove the entry if it exists, even if it is not present at the provided key
+          entriesSet.remove(QueryService.UNDEFINED, target, -1);
+        }
+        else {
+          throw new IMQException(tme);
+        }
-    private ExecutionContext createExecutionContext(RegionEntry target) {
+    private ExecutionContext createExecutionContext(RegionEntry target) throws NameResolutionException, TypeMismatchException {
-      } catch (Exception e) {
-        e.printStackTrace(System.out);
-        throw new Error("Unable to reevaluate, this should not happen");
-
-      if (object instanceof RegionEntry) {
-        RegionEntry regionEntry = (RegionEntry) object;
-        newContext = createExecutionContext(regionEntry);
-        value = getTargetObjectForUpdate(regionEntry);
-      }
-
-      // context we use is the update context, from IMQEvaluator
-      List iterators = newContext.getCurrentIterators();
-      RuntimeIterator itr = (RuntimeIterator) iterators.get(0);
-      itr.setCurrent(value);
-
+        if (object instanceof RegionEntry) {
+          RegionEntry regionEntry = (RegionEntry) object;
+          newContext = createExecutionContext(regionEntry);
+          value = getTargetObjectForUpdate(regionEntry);
+        }
+
+        // context we use is the update context, from IMQEvaluator
+        List iterators = newContext.getCurrentIterators();
+        RuntimeIterator itr = (RuntimeIterator) iterators.get(0);
+        itr.setCurrent(value);
+
+        throw new Error("Could not reevaluate key for hash index", e);
