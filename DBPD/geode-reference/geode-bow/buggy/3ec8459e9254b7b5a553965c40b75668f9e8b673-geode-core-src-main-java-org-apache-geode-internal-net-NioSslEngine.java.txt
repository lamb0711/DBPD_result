GEODE-6733 Remove mutable static org.apache.geode.internal.net.Buffers.buffersQueue

Converted static Buffers class to be a non-static buffer pool.

-import static org.apache.geode.internal.net.Buffers.BufferType.TRACKED_RECEIVER;
-import static org.apache.geode.internal.net.Buffers.BufferType.TRACKED_SENDER;
-import static org.apache.geode.internal.net.Buffers.releaseBuffer;
+import static org.apache.geode.internal.net.BufferPool.BufferType.TRACKED_RECEIVER;
+import static org.apache.geode.internal.net.BufferPool.BufferType.TRACKED_SENDER;
-import org.apache.geode.distributed.internal.DMStats;
+import org.apache.geode.internal.net.BufferPool.BufferType;
-  private final DMStats stats;
+  private final BufferPool bufferPool;
-  NioSslEngine(SSLEngine engine, DMStats stats) {
-    this.stats = stats;
+  NioSslEngine(SSLEngine engine, BufferPool bufferPool) {
+    this.bufferPool = bufferPool;
-          Buffers.acquireReceiveBuffer(engine.getSession().getPacketBufferSize(), stats);
+          bufferPool.acquireReceiveBuffer(engine.getSession().getPacketBufferSize());
-                expandWriteBuffer(TRACKED_RECEIVER, peerAppData, peerAppData.capacity() * 2,
-                    stats);
+                expandWriteBuffer(TRACKED_RECEIVER, peerAppData, peerAppData.capacity() * 2);
-                      myNetData.capacity() * 2, stats);
+                      myNetData.capacity() * 2);
-  ByteBuffer expandWriteBuffer(Buffers.BufferType type, ByteBuffer existing,
-      int desiredCapacity, DMStats stats) {
-    return Buffers.expandWriteBufferIfNeeded(type, existing, desiredCapacity, stats);
+  ByteBuffer expandWriteBuffer(BufferType type, ByteBuffer existing,
+      int desiredCapacity) {
+    return bufferPool.expandWriteBufferIfNeeded(type, existing, desiredCapacity);
-        myNetData = expandWriteBuffer(TRACKED_SENDER, myNetData, newCapacity, stats);
+        myNetData = expandWriteBuffer(TRACKED_SENDER, myNetData, newCapacity);
-          Buffers.expandWriteBufferIfNeeded(TRACKED_RECEIVER, peerAppData,
-              expandedCapacity(wrappedBuffer, peerAppData), stats);
+          bufferPool.expandWriteBufferIfNeeded(TRACKED_RECEIVER, peerAppData,
+              expandedCapacity(wrappedBuffer, peerAppData));
-      Buffers.BufferType bufferType, DMStats stats) {
+      BufferType bufferType) {
-      buffer = Buffers.acquireBuffer(bufferType, requiredSize, stats);
+      buffer = bufferPool.acquireBuffer(bufferType, requiredSize);
-      buffer = Buffers.expandWriteBufferIfNeeded(bufferType, buffer, requiredSize, stats);
+      buffer = bufferPool.expandWriteBufferIfNeeded(bufferType, buffer, requiredSize);
-      ByteBuffer wrappedBuffer, DMStats stats) throws IOException {
+      ByteBuffer wrappedBuffer) throws IOException {
-          Buffers.expandReadBufferIfNeeded(TRACKED_RECEIVER, peerAppData, bytes, this.stats);
+          bufferPool.expandReadBufferIfNeeded(TRACKED_RECEIVER, peerAppData, bytes);
-        Buffers.expandReadBufferIfNeeded(TRACKED_RECEIVER, peerAppData, amount, this.stats);
+        bufferPool.expandReadBufferIfNeeded(TRACKED_RECEIVER, peerAppData, amount);
-      releaseBuffer(TRACKED_SENDER, myNetData, stats);
-      releaseBuffer(TRACKED_RECEIVER, peerAppData, stats);
+      bufferPool.releaseBuffer(TRACKED_SENDER, myNetData);
+      bufferPool.releaseBuffer(TRACKED_RECEIVER, peerAppData);
