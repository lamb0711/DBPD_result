GEODE-4131: Do not reference deployed jars as byte arrays anymore (#1212)

* GEODE-4131: Do not reference deployed jars as byte arrays anymore

- All jars are streamed between locators and servers using the RMIIO library.
- Whenever an upload happens (either deploying jars or importing cluster
  config) we stage the files initially and then proceed with the command.
+import java.io.File;
+import java.io.FileInputStream;
+import java.util.List;
+import com.healthmarketscience.rmiio.RemoteInputStream;
+import com.healthmarketscience.rmiio.SimpleRemoteInputStream;
+
-import org.apache.geode.internal.util.ArrayUtils;
+import org.apache.geode.management.internal.beans.FileUploaderMBean;
+  private FileUploaderMBean fileUploadMBeanProxy;
+          this.fileUploadMBeanProxy = JMX.newMBeanProxy(mbsc,
+              new ObjectName(ManagementConstants.OBJECTNAME__FILEUPLOADER_MBEAN),
+              FileUploaderMBean.class);
-  public Object processCommand(final CommandRequest commandRequest) throws JMXInvocationException {
-    Byte[][] binaryData = null;
-    if (commandRequest.hasFileData()) {
-      binaryData = ArrayUtils.toByteArray(commandRequest.getFileData());
+  public Object processCommand(final CommandRequest commandRequest) {
+    // upload the files first
+
+    List<String> stagedFilePaths = null;
+    try {
+      if (commandRequest.hasFileList()) {
+        Map<String, RemoteInputStream> remoteFiles = new HashMap<>();
+
+        for (File file : commandRequest.getFileList()) {
+          RemoteInputStream ris = new SimpleRemoteInputStream(new FileInputStream(file)).export();
+          remoteFiles.put(file.getName(), ris);
+        }
+
+        stagedFilePaths = fileUploadMBeanProxy.uploadFile(remoteFiles);
+      }
+    } catch (IOException e) {
+      throw new JMXInvocationException("Unable to upload file", e);
-    return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
-        commandRequest.getEnvironment(), binaryData);
+
+    try {
+      return memberMXBeanProxy.processCommand(commandRequest.getUserInput(),
+          commandRequest.getEnvironment(), stagedFilePaths);
+    } finally {
+      if (stagedFilePaths != null) {
+        fileUploadMBeanProxy.deleteFiles(stagedFilePaths);
+      }
+    }
