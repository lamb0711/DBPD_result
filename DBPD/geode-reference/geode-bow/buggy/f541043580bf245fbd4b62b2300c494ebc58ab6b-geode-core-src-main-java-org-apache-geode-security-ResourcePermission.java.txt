GEODE-2925: add target for resource operation for finer grained security

* add finer authorize* call in security service
* add target to the MXBean authorization check
* use enum type instead of raw strings for resource/operation

+import org.apache.commons.lang.StringUtils;
+import org.apache.geode.cache.Region;
+import org.apache.geode.management.internal.security.ResourceOperation;
-  public static String ALL_REGIONS = "*";
-  public static String ALL_KEYS = "*";
+  public static String ALL = "*";
+  // when ALL is specified, we need it to convert to string "*" instead of "ALL".
+  public enum Target {
+    ALL(ResourcePermission.ALL), DISK, GATEWAY, QUERY, JAR;
+
+    private String name;
+
+    Target() {}
+
+    Target(String name) {
+      this.name = name;
+    }
+
+    public String getName() {
+      if (name != null) {
+        return name;
+      }
+      return name();
+    }
+  }
+
-  private String regionName = ALL_REGIONS;
-  private String key = ALL_KEYS;
+  private String target = ALL;
+  private String key = ALL;
-    this(Resource.NULL, Operation.NULL);
-  }
-
-  public ResourcePermission(String resource, String operation) {
-    this(resource, operation, ALL_REGIONS);
-  }
-
-  public ResourcePermission(String resource, String operation, String regionName) {
-    this(resource, operation, regionName, ALL_KEYS);
-  }
-
-  public ResourcePermission(String resource, String operation, String regionName, String key) {
-    this((resource == null) ? Resource.NULL : Resource.valueOf(resource.toUpperCase()),
-        (operation == null) ? Operation.NULL : Operation.valueOf(operation.toUpperCase()),
-        regionName, key);
+    this(Resource.NULL, Operation.NULL, ALL, ALL);
-    this(resource, operation, ALL_REGIONS);
+    this(resource, operation, ALL, ALL);
-  public ResourcePermission(Resource resource, Operation operation, String regionName) {
-    this(resource, operation, regionName, ALL_KEYS);
+  public ResourcePermission(Resource resource, Operation operation, String target) {
+    this(resource, operation, target, ALL);
-  public ResourcePermission(Resource resource, Operation operation, String regionName, String key) {
+  public ResourcePermission(Resource resource, Operation operation, Target target) {
+    this(resource, operation, target, ALL);
+  }
+
+  public ResourcePermission(Resource resource, Operation operation, Target target,
+      String targetKey) {
+    this(resource, operation, target.getName(), targetKey);
+  }
+
+  public ResourcePermission(Resource resource, Operation operation, String target, String key) {
-    if (regionName != null)
-      this.regionName = regionName;
+    if (target != null)
+      this.target = StringUtils.stripStart(target, Region.SEPARATOR);
-    setParts(this.resource + ":" + this.operation + ":" + this.regionName + ":" + this.key, true);
+    setParts(this.resource + ":" + this.operation + ":" + this.target + ":" + this.key, true);
-  public String getRegionName() {
-    return regionName;
+  public String getTarget() {
+    return target;
-    if (ALL_REGIONS.equals(regionName)) {
+    if (ALL.equals(target)) {
-    } else if (ALL_KEYS.equals(key)) {
-      return resource + ":" + operation + ":" + regionName;
+    } else if (ALL.equals(key)) {
+      return resource + ":" + operation + ":" + target;
-      return resource + ":" + operation + ":" + regionName + ":" + key;
+      return resource + ":" + operation + ":" + target + ":" + key;
