GEODE-77 fixing the inability to create multiple MembershipManagers ina single JVM

The static MemberAttributes.DEFAULT was being used to pull together all
of the bits of a new members identity (InternalDistributedMember) but
this prevented multiple MembershipManagers from being instantiated w/o
ones identity bleeding into anothers.  Now the MembershipManager is the
assembling a single InternalDistributedMember instance, putting info
into it as it becomes available.  A new unit test ensures that this is
functioning correctly.

+
+import com.gemstone.gemfire.distributed.DurableClientAttributes;
+    boolean reconnecting = false;
-      InputStream is = new ByteArrayInputStream(properties.getBytes("UTF-8"));
-      myChannel = new JChannel(is);
-      
+      Object oldChannel = services.getConfig().getTransport().getOldDSMembershipInfo();
+      if (oldChannel != null) {
+        myChannel = (JChannel)oldChannel;
+        reconnecting = true;
+      }
+      else {
+        InputStream is = new ByteArrayInputStream(properties.getBytes("UTF-8"));
+        myChannel = new JChannel(is);
+      }
-      myChannel.connect("AG"); // apache g***** (whatever we end up calling it)
-      
+      if (!reconnecting) {
+        myChannel.connect("AG"); // apache g***** (whatever we end up calling it)
+      }
-    boolean isLocator = (MemberAttributes.DEFAULT.getVmKind() == DistributionManager.LOCATOR_DM_TYPE); 
+    boolean isLocator = (services.getConfig().getTransport().getVmKind() == DistributionManager.LOCATOR_DM_TYPE); 
+    DurableClientAttributes dca = null;
+    if (config.getDurableClientId() != null) {
+      dca = new DurableClientAttributes(config.getDurableClientId(), config
+          .getDurableClientTimeout());
+    }
+    MemberAttributes attr = new MemberAttributes(
+        -1/*dcPort - not known at this time*/,
+        OSProcess.getId(),
+        services.getConfig().getTransport().getVmKind(),
+        -1/*view id - not known at this time*/,
+        config.getName(),
+        MemberAttributes.parseGroups(config.getRoles(), config.getGroups()),
+        dca);
-        isLocator, MemberAttributes.DEFAULT);
+        isLocator, attr);
+  
+  /**
+   * returns the JGroups configuration string
+   */
+  public String getJGroupsStackConfig() {
+    return this.jgStackConfig;
+  }
-      if ( (MemberAttributes.DEFAULT.getVmKind() == DistributionManager.ADMIN_ONLY_DM_TYPE)
+      if ( (services.getConfig().getTransport().getVmKind() == DistributionManager.ADMIN_ONLY_DM_TYPE)
