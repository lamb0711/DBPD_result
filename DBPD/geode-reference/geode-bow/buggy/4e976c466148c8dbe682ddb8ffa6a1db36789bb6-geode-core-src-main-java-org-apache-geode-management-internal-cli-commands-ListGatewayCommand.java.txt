GEODE-5971: refactor more to use ResultModel (#3268)

Co-authored-by: Owen Nichols <onichols@pivotal.io>
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.CompositeResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-  public Result listGateway(
+  public ResultModel listGateway(
-    Result result;
-    SystemManagementService service = (SystemManagementService) getManagementService();
+    ResultModel result = new ResultModel();
+    SystemManagementService service = getManagementService();
-      return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-      return ResultBuilder.createUserErrorResult(CliStrings.GATEWAYS_ARE_NOT_AVAILABLE_IN_CLUSTER);
+      return ResultModel.createError(CliStrings.GATEWAYS_ARE_NOT_AVAILABLE_IN_CLUSTER);
-    CompositeResultData crd = ResultBuilder.createCompositeResultData();
-    crd.setHeader(CliStrings.HEADER_GATEWAYS);
-    accumulateListGatewayResult(crd, gatewaySenderBeans, gatewayReceiverBeans);
-    result = ResultBuilder.buildResult(crd);
+
+    accumulateListGatewayResult(result, gatewaySenderBeans, gatewayReceiverBeans);
-  protected void accumulateListGatewayResult(CompositeResultData crd,
+  protected void accumulateListGatewayResult(ResultModel result,
-      TabularResultData gatewaySenderData = crd.addSection(CliStrings.SECTION_GATEWAY_SENDER)
-          .addTable(CliStrings.TABLE_GATEWAY_SENDER).setHeader(CliStrings.HEADER_GATEWAY_SENDER);
+      TabularResultModel gatewaySenders = result.addTable("gatewaySenders");
+      gatewaySenders.setHeader(CliStrings.SECTION_GATEWAY_SENDER);
-          gatewaySenderData.accumulate(CliStrings.RESULT_GATEWAY_SENDER_ID, entry.getKey());
-          gatewaySenderData.accumulate(CliStrings.RESULT_HOST_MEMBER, memberToBean.getKey());
-          gatewaySenderData.accumulate(CliStrings.RESULT_REMOTE_CLUSTER,
-              memberToBean.getValue().getRemoteDSId());
-          gatewaySenderData.accumulate(CliStrings.RESULT_TYPE, memberToBean.getValue().isParallel()
+          gatewaySenders.accumulate(CliStrings.RESULT_GATEWAY_SENDER_ID, entry.getKey());
+          gatewaySenders.accumulate(CliStrings.RESULT_HOST_MEMBER, memberToBean.getKey());
+          gatewaySenders.accumulate(CliStrings.RESULT_REMOTE_CLUSTER,
+              memberToBean.getValue().getRemoteDSId() + "");
+          gatewaySenders.accumulate(CliStrings.RESULT_TYPE, memberToBean.getValue().isParallel()
-          gatewaySenderData.accumulate(CliStrings.RESULT_STATUS, memberToBean.getValue().isRunning()
+          gatewaySenders.accumulate(CliStrings.RESULT_STATUS, memberToBean.getValue().isRunning()
-          gatewaySenderData.accumulate(CliStrings.RESULT_QUEUED_EVENTS,
-              memberToBean.getValue().getEventQueueSize());
-          gatewaySenderData.accumulate(CliStrings.RESULT_RECEIVER,
+          gatewaySenders.accumulate(CliStrings.RESULT_QUEUED_EVENTS,
+              memberToBean.getValue().getEventQueueSize() + "");
+          gatewaySenders.accumulate(CliStrings.RESULT_RECEIVER,
-      TabularResultData gatewayReceiverData = crd.addSection(CliStrings.SECTION_GATEWAY_RECEIVER)
-          .addTable(CliStrings.TABLE_GATEWAY_RECEIVER)
-          .setHeader(CliStrings.HEADER_GATEWAY_RECEIVER);
+      TabularResultModel gatewaySenders = result.addTable("gatewayReceivers");
+      gatewaySenders.setHeader(CliStrings.SECTION_GATEWAY_RECEIVER);
-        gatewayReceiverData.accumulate(CliStrings.RESULT_HOST_MEMBER, entry.getKey());
-        gatewayReceiverData.accumulate(CliStrings.RESULT_PORT, entry.getValue().getPort());
-        gatewayReceiverData.accumulate(CliStrings.RESULT_SENDERS_COUNT,
-            entry.getValue().getClientConnectionCount());
+        gatewaySenders.accumulate(CliStrings.RESULT_HOST_MEMBER, entry.getKey());
+        gatewaySenders.accumulate(CliStrings.RESULT_PORT, entry.getValue().getPort() + "");
+        gatewaySenders.accumulate(CliStrings.RESULT_SENDERS_COUNT,
+            entry.getValue().getClientConnectionCount() + "");
-          gatewayReceiverData.accumulate(CliStrings.RESULT_SENDER_CONNECTED, "");
+          gatewaySenders.accumulate(CliStrings.RESULT_SENDER_CONNECTED, "");
-          gatewayReceiverData.accumulate(CliStrings.RESULT_SENDER_CONNECTED,
+          gatewaySenders.accumulate(CliStrings.RESULT_SENDER_CONNECTED,
