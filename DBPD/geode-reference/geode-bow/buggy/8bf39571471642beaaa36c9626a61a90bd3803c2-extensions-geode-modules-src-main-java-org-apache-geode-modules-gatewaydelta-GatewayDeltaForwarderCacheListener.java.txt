Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

-* Licensed to the Apache Software Foundation (ASF) under one or more
-* contributor license agreements.  See the NOTICE file distributed with
-* this work for additional information regarding copyright ownership.
-* The ASF licenses this file to You under the Apache License, Version 2.0
-* (the "License"); you may not use this file except in compliance with
-* the License.  You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ */
-public class GatewayDeltaForwarderCacheListener extends CacheListenerAdapter<String, GatewayDelta> implements Declarable {
+public class GatewayDeltaForwarderCacheListener extends CacheListenerAdapter<String, GatewayDelta>
+    implements Declarable {
-            .append(event.getKey())
-            .append("->")
-            .append(event.getNewValue())
+            .append(event.getKey()).append("->").append(event.getNewValue())
-        getGatewayDeltaRegion().put(sessionId,
-            new GatewayDeltaCreateEvent(regionName, sessionId, EntryEventImpl.serialize(event.getNewValue())));
+        getGatewayDeltaRegion().put(sessionId, new GatewayDeltaCreateEvent(regionName, sessionId,
+            EntryEventImpl.serialize(event.getNewValue())));
-            "GatewayDeltaForwarderCacheListener event.getSerializedNewValue().getSerializedValue(): " + event.getSerializedNewValue()
-                .getSerializedValue());
+            "GatewayDeltaForwarderCacheListener event.getSerializedNewValue().getSerializedValue(): "
+                + event.getSerializedNewValue().getSerializedValue());
-            .append(event.getKey())
-            .append("->")
-            .append(event.getNewValue())
+            .append(event.getKey()).append("->").append(event.getNewValue())
-    //System.out.println("GatewayDeltaForwarderCacheListener.afterUpdate: " + event);
+    // System.out.println("GatewayDeltaForwarderCacheListener.afterUpdate: " + event);
-            .append(event.getKey())
-            .append("->")
-            .append(event.getNewValue())
+            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(event.getKey())
-            .append("->")
-            .append(event.getNewValue())
+            .append(event.getKey()).append("->").append(event.getNewValue())
-            .append(event.getKey())
-            .append("->")
-            .append(event.getNewValue())
+            .append(event.getKey()).append("->").append(event.getNewValue())
-      getGatewayDeltaRegion().put(sessionId, new GatewayDeltaDestroyEvent(event.getRegion().getFullPath(), sessionId));
+      getGatewayDeltaRegion().put(sessionId,
+          new GatewayDeltaDestroyEvent(event.getRegion().getFullPath(), sessionId));
-  public void init(Properties p) {
-  }
+  public void init(Properties p) {}
-      region = new RegionFactory().setScope(Scope.LOCAL)
-          .setDataPolicy(DataPolicy.EMPTY)
+      region = new RegionFactory().setScope(Scope.LOCAL).setDataPolicy(DataPolicy.EMPTY)
-// TODO: Disabled for WAN
-//        .setEnableGateway(true)
+          // TODO: Disabled for WAN
+          // .setEnableGateway(true)
-      builder.append("GatewayDeltaForwarderCacheListener: Created gateway delta region: ").append(region);
+      builder.append("GatewayDeltaForwarderCacheListener: Created gateway delta region: ")
+          .append(region);
