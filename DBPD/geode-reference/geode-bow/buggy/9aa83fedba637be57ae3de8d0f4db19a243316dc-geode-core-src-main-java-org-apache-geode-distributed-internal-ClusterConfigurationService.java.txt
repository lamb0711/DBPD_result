GEODE-4830: use POJOs to represent cache configuration allowed by cache-1.0.xsd

* add methods in ClusterConfigurationService to use POJOs to manipulate the cache xml content.

+import java.io.StringReader;
+import java.net.URL;
+import java.util.function.UnaryOperator;
+import javax.xml.XMLConstants;
+import javax.xml.bind.JAXBContext;
+import javax.xml.bind.Marshaller;
+import javax.xml.bind.Unmarshaller;
+import javax.xml.validation.Schema;
+import javax.xml.validation.SchemaFactory;
+import org.apache.geode.annotations.TestingOnly;
+import org.apache.geode.internal.cache.configuration.CacheConfig;
+  @TestingOnly
+  ClusterConfigurationService() {
+    configDirPath = null;
+    configDiskDirPath = null;
+    cache = null;
+  }
+
+  public CacheConfig getCacheConfig(String group, Class... additionalBindClass) {
+    return unMarshall(getConfiguration(group).getCacheXmlContent(), additionalBindClass);
+  }
+
+  public void updateCacheConfig(String group, UnaryOperator<CacheConfig> mutator,
+      Class... additionalBindClass) {
+    lockSharedConfiguration();
+    try {
+      CacheConfig cacheConfig = getCacheConfig(group, additionalBindClass);
+      cacheConfig = mutator.apply(cacheConfig);
+      if (cacheConfig == null) {
+        // mutator returns a null config, indicating no change needs to be persisted
+        return;
+      }
+      Configuration configuration = getConfiguration(group);
+      configuration.setCacheXmlContent(marshall(cacheConfig, additionalBindClass));
+      getConfigurationRegion().put(group, configuration);
+    } finally {
+      unlockSharedConfiguration();
+    }
+  }
+
+  String marshall(CacheConfig config, Class... additionalClass) {
+    List<Class> classes = new ArrayList<>(Arrays.asList(additionalClass));
+    classes.add(0, CacheConfig.class);
+    StringWriter sw = new StringWriter();
+    try {
+      JAXBContext jaxbContext = JAXBContext.newInstance(classes.toArray(new Class[classes.size()]));
+      Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
+      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
+      Schema schema =
+          factory.newSchema(new URL("http://geode.apache.org/schema/cache/cache-1.0.xsd"));
+      jaxbMarshaller.setSchema(schema);
+
+      jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
+      jaxbMarshaller.marshal(config, sw);
+    } catch (Exception e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
+    return sw.toString();
+  }
+
+  CacheConfig unMarshall(String xml, Class... additionalClass) {
+    List<Class> classes = new ArrayList<>(Arrays.asList(additionalClass));
+    classes.add(0, CacheConfig.class);
+    try {
+      JAXBContext jaxbContext = JAXBContext.newInstance(classes.toArray(new Class[classes.size()]));
+      Unmarshaller jaxUnmarshaller = jaxbContext.createUnmarshaller();
+      return (CacheConfig) jaxUnmarshaller.unmarshal(new StringReader(xml));
+    } catch (Exception e) {
+      throw new RuntimeException(e.getMessage(), e);
+    }
+  }
+
