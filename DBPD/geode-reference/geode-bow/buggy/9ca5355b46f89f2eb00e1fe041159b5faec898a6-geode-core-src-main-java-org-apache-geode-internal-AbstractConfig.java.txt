GEODE-2644: Cleanup config classes (#2518)

Add LogConfigSupplier and some additional changes to LogConfig for
logging changes.

-    StringWriter sw = new StringWriter();
-    PrintWriter pw = new PrintWriter(sw);
-    printSourceSection(ConfigSource.runtime(), pw);
-    printSourceSection(ConfigSource.sysprop(), pw);
-    printSourceSection(ConfigSource.api(), pw);
+    StringWriter stringWriter = new StringWriter();
+    PrintWriter printWriter = new PrintWriter(stringWriter);
+    printSourceSection(ConfigSource.runtime(), printWriter);
+    printSourceSection(ConfigSource.sysprop(), printWriter);
+    printSourceSection(ConfigSource.api(), printWriter);
-      printSourceSection(fileSource, pw);
+      printSourceSection(fileSource, printWriter);
-    printSourceSection(ConfigSource.xml(), pw);
-    printSourceSection(ConfigSource.launcher(), pw); // fix for bug 46653
-    printSourceSection(null, pw);
-    pw.close();
-    return sw.toString();
+    printSourceSection(ConfigSource.xml(), printWriter);
+    printSourceSection(ConfigSource.launcher(), printWriter); // fix for bug 46653
+    printSourceSection(null, printWriter);
+    printWriter.close();
+    return stringWriter.toString();
-  /***
+  /**
-    for (String attName : validAttributeNames) {
-      if ((source == null && sm.get(attName) != null)
-          || (source != null && !source.equals(sm.get(attName)))) {
+    for (String name : validAttributeNames) {
+      if (source == null && sm.get(name) != null
+          || source != null && !source.equals(sm.get(name))) {
-      configProps.put(attName, this.getAttribute(attName));
+      configProps.put(name, getAttribute(name));
-  /****
+  /**
-    for (String attName : attNames) {
-      result.setProperty(attName, getAttribute(attName));
+    for (String name : attNames) {
+      result.setProperty(name, getAttribute(name));
-  public void toFile(File f) throws IOException {
-    try (FileOutputStream out = new FileOutputStream(f)) {
+  public void toFile(File file) throws IOException {
+    try (FileOutputStream out = new FileOutputStream(file)) {
-    if (!this.getClass().equals(other.getClass())) {
+    if (!getClass().equals(other.getClass())) {
-    for (String attName : validAttributeNames) {
-      Object thisAtt = this.getAttributeObject(attName);
-      Object otherAtt = other.getAttributeObject(attName);
+    for (String name : validAttributeNames) {
+      Object thisAtt = getAttributeObject(name);
+      Object otherAtt = other.getAttributeObject(name);
-
-  public String getAttribute(String attName) {
-    Object result = getAttributeObject(attName);
+  public String getAttribute(String name) {
+    Object result = getAttributeObject(name);
-    if (attName.equalsIgnoreCase(MEMBERSHIP_PORT_RANGE)) {
+    if (name.equalsIgnoreCase(MEMBERSHIP_PORT_RANGE)) {
-    if (result.getClass().isArray() && attName.startsWith("ssl-")) {
+    if (result.getClass().isArray() && name.startsWith("ssl-")) {
-        addrName = addr.getHostAddress(); // on Windows getHostName on mcast addrs takes ~5 seconds
+        // on Windows getHostName on mcast addrs takes ~5 seconds
+        addrName = addr.getHostAddress();
-  public ConfigSource getAttributeSource(String attName) {
-    return getAttSourceMap().get(attName);
+  public ConfigSource getAttributeSource(String name) {
+    return getAttSourceMap().get(name);
-  public void setAttribute(String attName, String attValue, ConfigSource source) {
+  public void setAttribute(String name, String value, ConfigSource source) {
-    Class valueType = getAttributeType(attName);
+    Class valueType = getAttributeType(name);
-        attObjectValue = attValue;
+        attObjectValue = value;
-        attObjectValue = attValue.split(",");
+        // TODO:GEODE-5784: DUPLICATE CONDITION with different behavior
+        attObjectValue = value.split(",");
-        attObjectValue = Integer.valueOf(attValue);
+        attObjectValue = Integer.valueOf(value);
-        attObjectValue = Long.valueOf(attValue);
+        attObjectValue = Long.valueOf(value);
-        attObjectValue = Boolean.valueOf(attValue);
+        attObjectValue = Boolean.valueOf(value);
-        attObjectValue = new File(attValue);
+        attObjectValue = new File(value);
-        int[] value = new int[2];
-        int minus = attValue.indexOf('-');
+        int minus = value.indexOf('-');
-              "expected a setting in the form X-Y but found no dash for attribute " + attName);
+              "expected a setting in the form X-Y but found no dash for attribute " + name);
-        value[0] = Integer.valueOf(attValue.substring(0, minus));
-        value[1] = Integer.valueOf(attValue.substring(minus + 1));
-        attObjectValue = value;
+        int[] tempValue = new int[2];
+        tempValue[0] = Integer.valueOf(value.substring(0, minus));
+        tempValue[1] = Integer.valueOf(value.substring(minus + 1));
+        attObjectValue = tempValue;
-          attObjectValue = InetAddress.getByName(attValue);
+          attObjectValue = InetAddress.getByName(value);
-                  .toLocalizedString(attName, attValue, ex.toString()));
+                  .toLocalizedString(name, value, ex.toString()));
-        if (attValue == null || attValue.length() == 0) {
+        // TODO:GEODE-5784: DUPLICATE CONDITION with different behavior
+        if (value == null || value.length() == 0) {
-          String trimAttName = attName.substring(0, attName.length() - 1);
+          String trimAttName = name.substring(0, name.length() - 1);
-                  .toLocalizedString(attName, trimAttName));
+                  .toLocalizedString(name, trimAttName));
-        String values[] = attValue.split(",");
+        String[] values = value.split(",");
-                  .toLocalizedString(attName, attValue));
+                  .toLocalizedString(name, value));
-                  .toLocalizedString(attName, attValue));
+                  .toLocalizedString(name, value));
-        attObjectValue = commaDelimitedStringToSecurableCommunicationChannels(attValue);
+        attObjectValue = commaDelimitedStringToSecurableCommunicationChannels(value);
-                .toLocalizedString(valueType, attName));
+                .toLocalizedString(valueType, name));
-          .toLocalizedString(attName, attValue));
+          .toLocalizedString(name, value));
-    setAttributeObject(attName, attObjectValue, source);
+    setAttributeObject(name, attObjectValue, source);
-  public String getAttributeDescription(String attName) {
-    checkAttributeName(attName);
-    if (!getAttDescMap().containsKey(attName)) {
+  public String getAttributeDescription(String name) {
+    checkAttributeName(name);
+    if (!getAttDescMap().containsKey(name)) {
-          LocalizedStrings.AbstractConfig_UNHANDLED_ATTRIBUTE_NAME_0.toLocalizedString(attName));
+          LocalizedStrings.AbstractConfig_UNHANDLED_ATTRIBUTE_NAME_0.toLocalizedString(name));
-    return (String) getAttDescMap().get(attName);
+    return (String) getAttDescMap().get(name);
-  protected String _getUnmodifiableMsg(String attName) {
+  protected String _getUnmodifiableMsg(String name) {
-        .toLocalizedString(attName);
+        .toLocalizedString(name);
-  protected void checkAttributeName(String attName) {
+  protected void checkAttributeName(String name) {
-    if (!Arrays.asList(validAttNames).contains(attName.toLowerCase())) {
+    if (!Arrays.asList(validAttNames).contains(name.toLowerCase())) {
-              .toLocalizedString(attName, SystemAdmin.join(validAttNames)));
+              .toLocalizedString(name, SystemAdmin.join(validAttNames)));
-  private void printSourceSection(ConfigSource source, PrintWriter pw) {
+  private void printSourceSection(ConfigSource source, PrintWriter printWriter) {
-    for (String attName : validAttributeNames) {
+    for (String name : validAttributeNames) {
-        if (sourceMap.get(attName) != null) {
+        if (sourceMap.get(name) != null) {
-      } else if (!source.equals(sourceMap.get(attName))) {
+      } else if (!source.equals(sourceMap.get(name))) {
-          pw.println(GEM_FIRE_PROPERTIES_USING_DEFAULT_VALUES);
+          printWriter.println(GEM_FIRE_PROPERTIES_USING_DEFAULT_VALUES);
-          pw.println(GEM_FIRE_PROPERTIES_DEFINED_WITH_PREFIX + source.getDescription()
+          printWriter.println(GEM_FIRE_PROPERTIES_DEFINED_WITH_PREFIX + source.getDescription()
-      if (attName.equals(SECURITY_SHIRO_INIT)) {
+      if (name.equals(SECURITY_SHIRO_INIT)) {
-        attributeValueToPrint = getAttribute(attName);
+        attributeValueToPrint = getAttribute(name);
-            ArgumentRedactor.redactArgumentIfNecessary(attName, getAttribute(attName));
+            ArgumentRedactor.redactArgumentIfNecessary(name, getAttribute(name));
-      pw.print(attName);
-      pw.print('=');
-      pw.println(attributeValueToPrint);
+      printWriter.print(name);
+      printWriter.print('=');
+      printWriter.println(attributeValueToPrint);
