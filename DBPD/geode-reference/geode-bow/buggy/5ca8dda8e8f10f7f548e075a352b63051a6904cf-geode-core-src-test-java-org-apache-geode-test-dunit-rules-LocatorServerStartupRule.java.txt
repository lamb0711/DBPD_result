GEODE-2267: Enhance server/locator startup rules

* be able to return the rule itself so that we can start the server/locator at rule declaration time.
* rearrange the class structure
* do not delete the workingDir if the rule is created with a workingDir (then it's up for the caller to delete it)

-  private Member[] members;
+  private MemberVM[] members;
-    members = new Member[4];
+    members = new MemberVM[4];
-  public Locator startLocatorVM(int index) throws IOException {
+  public MemberVM startLocatorVM(int index) throws IOException {
-  public Locator startLocatorVM(int index, Properties locatorProperties) throws IOException {
+  public MemberVM<Locator> startLocatorVM(int index, Properties locatorProperties)
+      throws IOException {
-    locator.setVM(locatorVM);
-    members[index] = locator;
-    return locator;
+    members[index] = new MemberVM(locator, locatorVM);
+    return members[index];
-  public Server startServerVM(int index) throws IOException {
+  public MemberVM startServerVM(int index) throws IOException {
-  public Server startServerVM(int index, Properties properties) throws IOException {
+  public MemberVM startServerVM(int index, Properties properties) throws IOException {
-  /**
-   * start a server that connects to this locatorPort
-   */
-  public Server startServerVM(int index, int locatorPort) throws IOException {
+  public MemberVM startServerVM(int index, int locatorPort) throws IOException {
-  public Server startServerAsJmxManager(int index, int jmxManagerPort) throws IOException {
+  public MemberVM startServerAsJmxManager(int index, int jmxManagerPort) throws IOException {
-  public Server startServerAsEmbededLocator(int index, int locatorPort, int jmxManagerPort)
+  public MemberVM startServerAsEmbededLocator(int index, int locatorPort, int jmxManagerPort)
-  public Server startServerVM(int index, Properties properties, int locatorPort)
+  public MemberVM startServerVM(int index, Properties properties, int locatorPort)
-    server.setVM(serverVM);
-    members[index] = server;
-    return server;
+    members[index] = new MemberVM(server, serverVM);
+    return members[index];
