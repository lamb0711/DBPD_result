Revert "GEODE-1926"

	* Precehckin completion pending
This reverts commit 7b88c6cf7ad96675f81a138b2d03f8f3375168cf.

+      if (object != null && object instanceof GatewaySenderEventImpl) {
+        GatewaySenderEventImpl copy = ((GatewaySenderEventImpl)object).makeHeapCopyIfOffHeap();
+        if (copy == null) {
+          continue;
+        }
+        object = copy;
+      }
-
-  private Long getCurrentKey(){
-    long currentKey;
-    if (this.peekedIds.isEmpty()) {
-      currentKey = getHeadKey();
-    } else {
-      Long lastPeek = this.peekedIds.peekLast();
-      if (lastPeek == null) {
-        return null;
-      }
-      currentKey = lastPeek.longValue() + 1;
-    }
-    return currentKey;
-  }
-
-  private AsyncEvent getObjectInSerialSenderQueue(Long currentKey) {
-    AsyncEvent object = optimalGet(currentKey);
-    if ((null != object) && logger.isDebugEnabled()) {
-      logger.debug("{}: Peeked {}->{}", this, currentKey, object);
-    }
-    if (object != null && object instanceof GatewaySenderEventImpl) {
-      GatewaySenderEventImpl copy = ((GatewaySenderEventImpl)object).makeHeapCopyIfOffHeap();
-      if (copy == null) {
-        logger.debug("Unable to make heap copy and will not be added to peekedIds for object" +
-                     " : {} ",object.toString());
-      }
-      object = copy;
-    }
-    return object;
-  }
-
-    Long currentKey = getCurrentKey();
-    if(currentKey == null ){
-      return null;
+    long currentKey = -1;
+    if (this.peekedIds.isEmpty()) {
+    	currentKey = getHeadKey(); 
+    } else {
+    	Long lastPeek = this.peekedIds.peekLast();
+    	if (lastPeek == null) {
+    		return null;
+    	}
+    	currentKey = lastPeek.longValue() + 1;
-        && (null == (object = getObjectInSerialSenderQueue(currentKey)))) {
+    // use optimalGet here to fix bug 40654
+        && (object = optimalGet(Long.valueOf(currentKey))) == null) {
-      object = getObjectInSerialSenderQueue(currentKey);
-      this.peekedIds.add(currentKey);
+      this.peekedIds.add(Long.valueOf(currentKey));
