GEODE-11: defined index will be saved and can be found.

This closes #217

GEODE-11: Adding a defined index field in LuceneServiceImpl

Added a definedIndexMap field in LuceneServiceImpl to store the uninitialized lucene indexes

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE-11: Added status to gfsh commands

Added a field status(initialized/defined wrt region creation) to list and describe lucene commands.
Added a dunit test for create index command to verify that the created index is stored in definedIndexMap.

Signed-off-by: Gester Zhou <gzhou@pivotal.io>

GEODE-11: Removed methods from LuceneService interface

Removed methods accessing definedIndexMap from the LuceneServiceInterface.
Made few other method and field name changes as per review comments.

+import com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationProfile;
-
-  private final Map<String, String> fieldAnalyzers;
+  private Map<String, String> fieldAnalyzers=null;
+  private boolean initialized;
-  public LuceneIndexDetails(final String indexName, final String regionPath, final String[] searchableFieldNames, Map<String, Analyzer> fieldAnalyzers, LuceneIndexStats indexStats) {
+  public LuceneIndexDetails(final String indexName, final String regionPath, final String[] searchableFieldNames, final Map<String, Analyzer> fieldAnalyzers, LuceneIndexStats indexStats, boolean initialized) {
-    this.fieldAnalyzers = getAnalyzerStrings(fieldAnalyzers);
+    this.fieldAnalyzers = getFieldAnalyzerStrings(fieldAnalyzers);
+    this.initialized = initialized;
-    this(index.getName(), index.getRegionPath(), index.getFieldNames(), index.getFieldAnalyzers(),index.getIndexStats());
+    this(index.getName(), index.getRegionPath(), index.getFieldNames(),index.getFieldAnalyzers(),index.getIndexStats(), true);
+  }
+
+  public LuceneIndexDetails(LuceneIndexCreationProfile indexProfile) {
+    this(indexProfile.getIndexName(), indexProfile.getRegionPath(), indexProfile.getFieldNames(), null, null, false);
+    this.fieldAnalyzers=getFieldAnalyzerStringsFromProfile(indexProfile.getFieldAnalyzers());
-  private Map<String, String> getAnalyzerStrings(Map<String, Analyzer> fieldAnalyzers) {
+  private Map<String, String> getFieldAnalyzerStrings(Map<String, Analyzer> fieldAnalyzers) {
+  private Map<String, String> getFieldAnalyzerStringsFromProfile(Map<String, Class <? extends Analyzer>> fieldAnalyzers) {
+    if(fieldAnalyzers == null) {
+      return Collections.emptyMap();
+
+    }
+
+    Map<String, String> results = new HashMap<>();
+
+    for (Entry<String, Class<? extends Analyzer>> entry : fieldAnalyzers.entrySet()) {
+      final String analyzer = entry.getValue().getSimpleName();
+      if(analyzer != null) {
+        results.put(entry.getKey(), analyzer);
+      }
+    }
+    return results;
+  }
+
+    buffer.append(",\tStatus =\n\t"+ getInitialized());
+  public boolean getInitialized() {
+    return initialized;
+  }
