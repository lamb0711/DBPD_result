GEODE-5535: Upgrade FastClasspathScanner to 4.0.6 (#2310)

- Use less memory for scanning by reusing a single
  instance of ClassGraph.
-import java.net.URL;
-import java.net.URLClassLoader;
-import io.github.lukehutch.fastclasspathscanner.FastClasspathScanner;
-import io.github.lukehutch.fastclasspathscanner.scanner.ScanResult;
+import io.github.classgraph.ClassGraph;
+import io.github.classgraph.ScanResult;
-    URLClassLoader urlClassLoader =
-        new URLClassLoader(new URL[] {jarFile.getCanonicalFile().toURL()});
-    FastClasspathScanner fastClasspathScanner = new FastClasspathScanner("-dir:")
-        .removeTemporaryFilesAfterScan(true).overrideClassLoaders(urlClassLoader);
-    ScanResult scanResult = fastClasspathScanner.scan();
+    ClassGraph fastClasspathScanner = new ClassGraph().disableDirScanning()
+        .removeTemporaryFilesAfterScan().overrideClasspath(jarFile.getAbsolutePath());
+    ScanResult scanResult = fastClasspathScanner.enableClassInfo().scan();
-    functionClasses.addAll(scanResult.getNamesOfClassesImplementing(Function.class));
-    functionClasses.addAll(scanResult.getNamesOfSubclassesOf(FunctionAdapter.class));
+    functionClasses.addAll(scanResult.getClassesImplementing(Function.class.getName()).getNames());
+    functionClasses.addAll(scanResult.getSubclasses(FunctionAdapter.class.getName()).getNames());
