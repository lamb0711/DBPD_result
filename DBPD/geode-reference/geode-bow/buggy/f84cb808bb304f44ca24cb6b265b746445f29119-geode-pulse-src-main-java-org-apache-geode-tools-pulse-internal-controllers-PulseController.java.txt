GEODE-2272: Fix Pulse data browser export

* Pulse no longer loads all results into the browser before generating a results file for download.

This closes #339

+import com.sun.net.httpserver.Headers;
+
+
+
-  @RequestMapping(value = "/dataBrowserExport", method = RequestMethod.POST)
+
+  @RequestMapping(value = "/dataBrowserExport", method = RequestMethod.GET)
-
-    String filename = request.getParameter("filename");
-    String resultContent = request.getParameter("content");
-
-    response.setHeader("Cache-Control", "");
-    response.setHeader("Content-type", "text/plain");
-    if (StringUtils.isNotNullNotEmptyNotWhiteSpace(filename)) {
-      response.setHeader("Content-Disposition", "attachment; filename=" + filename);
-    } else {
-      response.setHeader("Content-Disposition", "attachment; filename=" + DEFAULT_EXPORT_FILENAME);
-    }
-
-    if (!StringUtils.isNotNullNotEmptyNotWhiteSpace(resultContent)) {
-      resultContent = "";
-    }
-
-    response.getOutputStream().write(resultContent.getBytes());
-  }
-
-  @RequestMapping(value = "/pulseProductSupport", method = RequestMethod.GET)
-  public void getConfiguredPulseProduct(HttpServletRequest request, HttpServletResponse response)
-      throws IOException {
-    ObjectNode responseJSON = mapper.createObjectNode();
+    String query = request.getParameter("query");
+    String members = request.getParameter("members");
+    int limit = 0;
-      responseJSON.put("product", pulseProductSupport);
-
-      // Send json response
-      response.getOutputStream().write(responseJSON.toString().getBytes());
-    } catch (Exception e) {
-      if (LOGGER.fineEnabled()) {
-        LOGGER.fine("Exception Occurred : " + e.getMessage());
+      limit = Integer.valueOf(request.getParameter("limit"));
+    } catch (NumberFormatException e) {
+      limit = 0;
+      if (LOGGER.finerEnabled()) {
+        LOGGER.finer(e.getMessage());
+
+    ObjectNode queryResult = mapper.createObjectNode();
+    try {
+
+      if (StringUtils.isNotNullNotEmptyNotWhiteSpace(query)) {
+        // get cluster object
+        Cluster cluster = Repository.get().getCluster();
+        String userName = request.getUserPrincipal().getName();
+
+        // Call execute query method
+        queryResult = cluster.executeQuery(query, members, limit);
+
+        // Add query in history if query is executed successfully
+        if (!queryResult.has("error")) {
+          // Add html escaped query to history
+          String escapedQuery = StringEscapeUtils.escapeHtml(query);
+          cluster.addQueryInHistory(escapedQuery, userName);
+        }
+      }
+    } catch (Exception e) {
+      if (LOGGER.fineEnabled()) {
+        LOGGER.fine("Exception Occured : " + e.getMessage());
+      }
+    }
+
+    response.setContentType("application/json");
+    response.setHeader("Content-Disposition", "attachment; filename=results.json");
+    response.getOutputStream().write(queryResult.toString().getBytes());
