GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.i18n.StringId;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-    StringId msg = LocalizedStrings.ONE_ARG;
+    String msg = "%s";
-            LocalizedStrings.CqQueryImpl_CLASS_NOT_FOUND_EXCEPTION_THE_ANTLRJAR_OR_THE_SPCIFIED_CLASS_MAY_BE_MISSING_FROM_SERVER_SIDE_CLASSPATH_ERROR_0;
+            "Class not found exception. The antlr.jar or the spcified class may be missing from server side classpath. Error : %s";
-        msg = LocalizedStrings.CqQueryImpl_ERROR_WHILE_PARSING_THE_QUERY_ERROR_0;
+        msg = "Error while parsing the query. Error : %s";
-        String s = msg.toLocalizedString(t);
+        String s = String.format(msg, t);
-          LocalizedStrings.CqQueryImpl_REGION__0_SPECIFIED_WITH_CQ_NOT_FOUND_CQNAME_1
-              .toLocalizedString(new Object[] {regionName, this.cqName}));
+          String.format("Region : %s specified with cq not found. CqName: %s",
+              new Object[] {regionName, this.cqName}));
-            LocalizedStrings.CqQueryImpl_CQ_NOT_SUPPORTED_FOR_REPLICATE_WITH_LOCAL_DESTROY.toString(
+            String.format("CQ is not supported for replicated region: %s with eviction action: %s",
-        throw new CqException(LocalizedStrings.CqQueryImpl_UNABLE_TO_CREATE_CQ_0_ERROR__1
-            .toLocalizedString(new Object[] {cqName, cqe.getMessage()}));
+        throw new CqException(String.format("Unable to create cq %s Error : %s",
+            new Object[] {cqName, cqe.getMessage()}));
-      logger.warn(LocalizedMessage.create(LocalizedStrings.CqQueryImpl_Null_CQ_Result_Key_Cache_0));
+      logger.warn(
+          "The CQ Result key cache is Null. This should not happen as the call to isPartOfCqResult() is based on the condition cqResultsCacheInitialized.");
-            LocalizedStrings.CqQueryImpl_CQ_IS_CLOSED_CQNAME_0.toLocalizedString(this.cqName));
+            String.format("CQ is closed, CqName : %s", this.cqName));
-            LocalizedStrings.CqQueryImpl_CQ_IS_NOT_IN_RUNNING_STATE_STOP_CQ_DOES_NOT_APPLY_CQNAME_0
-                .toLocalizedString(this.cqName));
+            String.format("CQ is not in running state, stop CQ does not apply, CqName : %s",
+                this.cqName));
