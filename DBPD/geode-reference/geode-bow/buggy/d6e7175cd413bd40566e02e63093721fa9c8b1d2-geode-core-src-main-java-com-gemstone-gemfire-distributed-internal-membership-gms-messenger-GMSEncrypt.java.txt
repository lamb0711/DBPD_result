Fixed eisting test issue. Added unit test to check whether we can
transfer keypair.

+import java.security.spec.EncodedKeySpec;
+import java.security.spec.PKCS8EncodedKeySpec;
+
-public class GMSEncrypt {
+public class GMSEncrypt implements Cloneable{
+  
+  
+  protected void installView(NetView view, InternalDistributedMember mbr) {
+    this.view = view;
+    this.view.setPublicKey(mbr, getPublicKeyBytes());
+    // TODO remove ciphers for departed members
+  }
+
+  protected GMSEncrypt() {
+    
+  }
+  @Override
+  protected GMSEncrypt clone() throws CloneNotSupportedException {
+    try {
+      GMSEncrypt gmsEncrypt = new GMSEncrypt();
+      gmsEncrypt.dhSKAlgo = this.dhSKAlgo;
+
+      X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(this.dhPublicKey.getEncoded());
+      KeyFactory keyFact = KeyFactory.getInstance("DH");
+      // PublicKey pubKey = keyFact.generatePublic(x509KeySpec);
+      gmsEncrypt.dhPublicKey = keyFact.generatePublic(x509KeySpec);
+      final String format = this.dhPrivateKey.getFormat();
+      System.out.println("private key format " + format);
+      System.out.println("public ksy format " + this.dhPublicKey.getFormat());
+      PKCS8EncodedKeySpec x509KeySpecPKey = new PKCS8EncodedKeySpec(this.dhPrivateKey.getEncoded());
+      
+      keyFact = KeyFactory.getInstance("DH");
+      // PublicKey pubKey = keyFact.generatePublic(x509KeySpec);
+      gmsEncrypt.dhPrivateKey = keyFact.generatePrivate(x509KeySpecPKey);
+
+      return gmsEncrypt;
+    } catch (Exception e) {
+      throw new RuntimeException("Unable to clone", e);
+    }
+  }
+
+
