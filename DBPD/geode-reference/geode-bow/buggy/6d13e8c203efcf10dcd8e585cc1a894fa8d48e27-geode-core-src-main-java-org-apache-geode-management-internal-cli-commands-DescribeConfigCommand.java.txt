GEODE-5010: Introduce *ResultModel objects to replace *ResultData (#1870)


- The changes here are intended to allow for support of both the old and new
  model for producing results. As such the interface structures are a mess but
  will be cleaned up once all commands have been converted.
- Not all types of return values are supported but will be added as commands
  are converted. In particular commands that return actual result data in the
  form of files or file content.
- Sub-sections are not supported anymore.
- All commands should now return a ResultModel object

-import org.apache.geode.management.internal.cli.result.CompositeResultData;
-import org.apache.geode.management.internal.cli.result.ErrorResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.DataResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-  public Result describeConfig(
+  public ResultModel describeConfig(
-    Result result = null;
+    ResultModel result = new ResultModel();
-        CompositeResultData crd = ResultBuilder.createCompositeResultData();
-        crd.setHeader(CliStrings.format(CliStrings.DESCRIBE_CONFIG__HEADER__TEXT, memberNameOrId));
+        result
+            .setHeader(CliStrings.format(CliStrings.DESCRIBE_CONFIG__HEADER__TEXT, memberNameOrId));
-        TabularResultData jvmInputArgs = crd.addSection().addTable();
+        TabularResultModel jvmInputArgs = result.addTable();
-        addSection(crd, memberConfigInfo.getGfePropsSetUsingApi(),
+        addSection(result, memberConfigInfo.getGfePropsSetUsingApi(),
-        addSection(crd, memberConfigInfo.getGfePropsRuntime(),
+        addSection(result, memberConfigInfo.getGfePropsRuntime(),
-        addSection(crd, memberConfigInfo.getGfePropsSetFromFile(),
+        addSection(result, memberConfigInfo.getGfePropsSetFromFile(),
-        addSection(crd, memberConfigInfo.getGfePropsSetWithDefaults(),
+        addSection(result, memberConfigInfo.getGfePropsSetWithDefaults(),
-        addSection(crd, memberConfigInfo.getCacheAttributes(), "Cache attributes");
+        addSection(result, memberConfigInfo.getCacheAttributes(), "Cache attributes");
-            addSection(crd, cacheServerAttributes, "Cache-server attributes");
+            addSection(result, cacheServerAttributes, "Cache-server attributes");
-        result = ResultBuilder.buildResult(crd);
-      result = ResultBuilder.createGemFireErrorResult(CliStrings
+      result.createCommandProcessingError(CliStrings
-      ErrorResultData erd = ResultBuilder.createErrorResultData();
-      erd.addLine(e.getMessage());
-      result = ResultBuilder.buildResult(erd);
+      result.createError(e.getMessage());
+      result.setStatus(Result.Status.ERROR);
-  private void addSection(CompositeResultData crd, Map<String, String> attrMap, String headerText) {
+  private void addSection(ResultModel model, Map<String, String> attrMap, String headerText) {
-      CompositeResultData.SectionResultData section = crd.addSection();
-      section.setHeader(headerText);
-      section.addSeparator('.');
+      DataResultModel dataSection = model.addData();
+      dataSection.setHeader(headerText);
-        section.addData(attribute, attributeValue);
+        dataSection.addData(attribute, attributeValue);
