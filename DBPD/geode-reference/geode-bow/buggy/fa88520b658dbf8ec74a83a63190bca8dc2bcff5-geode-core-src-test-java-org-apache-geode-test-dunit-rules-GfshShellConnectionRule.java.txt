GEODE-1912: make ServerStarter and LocatorStarter as regular rules so that it's easier to use them in a RuleChain

-package org.apache.geode.management.internal.security;
-
-import org.junit.runner.Description;
+package org.apache.geode.test.dunit.rules;
-import org.apache.geode.test.dunit.rules.ConnectionConfiguration;
+import org.junit.runner.Description;
- * Class which eases the creation of MBeans for security testing. When combined with
- * {@link ConnectionConfiguration} it allows for the creation of per-test connections with different
- * user/password combinations.
+ * Class which eases the connection to the jmxManager {@link ConnectionConfiguration} it allows for
+ * the creation of per-test connections with different user/password combinations, or no username
+ * and password
-  private int jmxPort = 0;
-  private int httpPort = 0;
+  private int port = 0;
-  public GfshShellConnectionRule(int jmxPort, int httpPort, boolean useHttp) {
-    this.jmxPort = jmxPort;
-    this.httpPort = httpPort;
-    this.useHttp = useHttp;
+
+  public GfshShellConnectionRule(int port) {
+    this.useHttp = false;
+    this.port = port;
-  public GfshShellConnectionRule(int jmxPort) {
-    this.jmxPort = jmxPort;
+  public GfshShellConnectionRule(int port, boolean useHttp) {
+    this.useHttp = useHttp;
+    this.port = port;
-    ConnectionConfiguration config = description.getAnnotation(ConnectionConfiguration.class);
-    if (config == null)
-      return;
-
-    connectCommand.addOption(CliStrings.CONNECT__USERNAME, config.user());
-    connectCommand.addOption(CliStrings.CONNECT__PASSWORD, config.password());
+
+    ConnectionConfiguration config = description.getAnnotation(ConnectionConfiguration.class);
+    if (config != null) {
+      connectCommand.addOption(CliStrings.CONNECT__USERNAME, config.user());
+      connectCommand.addOption(CliStrings.CONNECT__PASSWORD, config.password());
+    }
-      endpoint = "http://localhost:" + httpPort + "/gemfire/v1";
+      endpoint = "http://localhost:" + port + "/gemfire/v1";
-      endpoint = "localhost[" + jmxPort + "]";
+      endpoint = "localhost[" + port + "]";
