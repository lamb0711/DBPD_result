GEODE-6861: separate static config object from runtime info in the Clâ€¦ (#3754)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>

* use ConfigRealizer to retrieve the runtime information for configuration on each member
* list result would return a List of Response object which has a configuration object and a list runtime objects
* use existing object for runtime member info and move them to geode-management module.

-import org.apache.geode.cache.Cache;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.management.configuration.MemberConfig;
+import org.apache.geode.management.internal.configuration.realizers.MemberConfigRealizer;
-public class UpdateCacheFunction implements InternalFunction<List> {
+public class CacheRealizationFunction implements InternalFunction<List> {
+    realizers.put(MemberConfig.class, new MemberConfigRealizer());
-    try {
-      context.getResultSender().lastResult(executeFunction(context));
-    } catch (Exception e) {
-      logger.error(e.getMessage(), e);
-      context.getResultSender().lastResult(new RealizationResult()
-          .setSuccess(false)
-          .setMemberName(context.getMemberName())
-          .setMessage(e.getMessage()));
+    CacheElement cacheElement = (CacheElement) context.getArguments().get(0);
+    CacheElementOperation operation = (CacheElementOperation) context.getArguments().get(1);
+    InternalCache cache = (InternalCache) context.getCache();
+
+    if (operation == CacheElementOperation.GET) {
+      try {
+        context.getResultSender().lastResult(executeGet(cache, cacheElement));
+      } catch (Exception e) {
+        logger.error(e.getMessage(), e);
+        context.getResultSender().lastResult(null);
+      }
+    } else {
+      try {
+        context.getResultSender()
+            .lastResult(executeUpdate(context, cache, cacheElement, operation));
+      } catch (Exception e) {
+        logger.error(e.getMessage(), e);
+        context.getResultSender().lastResult(new RealizationResult()
+            .setSuccess(false)
+            .setMemberName(context.getMemberName())
+            .setMessage(e.getMessage()));
+      }
-  public RealizationResult executeFunction(FunctionContext<List> context) {
-    CacheElement cacheElement = (CacheElement) context.getArguments().get(0);
-    CacheElementOperation operation = (CacheElementOperation) context.getArguments().get(1);
-    Cache cache = context.getCache();
+  public Object executeGet(InternalCache cache,
+      CacheElement cacheElement) {
+    ConfigurationRealizer realizer = realizers.get(cacheElement.getClass());
+
+    if (realizer == null) {
+      return null;
+    }
+    return realizer.get(cacheElement, cache);
+  }
+
+  public RealizationResult executeUpdate(FunctionContext<List> context,
+      InternalCache cache,
+      CacheElement cacheElement,
+      CacheElementOperation operation) {
