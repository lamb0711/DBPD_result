GEODE-5032: Pluralize configuration class getters and fields that refer to lists. (#1977)

* Reflect changes in sanctioned-geode-core-serializables.txt

-    propOrder = {"cacheTransactionManager", "dynamicRegionFactory", "gatewayHub", "gatewaySender",
-        "gatewayReceiver", "gatewayConflictResolver", "asyncEventQueue", "cacheServer", "pool",
-        "diskStore", "pdx", "regionAttributes", "jndiBindings", "region", "functionService",
-        "resourceManager", "serializationRegistration", "backup", "initializer", "cacheElements"})
+    propOrder = {"cacheTransactionManager", "dynamicRegionFactory", "gatewayHubs", "gatewaySenders",
+        "gatewayReceiver", "gatewayConflictResolver", "asyncEventQueues", "cacheServers", "pools",
+        "diskStores", "pdx", "regionAttributes", "jndiBindings", "regions", "functionService",
+        "resourceManager", "serializationRegistration", "backups", "initializer", "cacheElements"})
-  protected List<CacheConfig.GatewayHub> gatewayHub;
+  protected List<CacheConfig.GatewayHub> gatewayHubs;
-  protected List<CacheConfig.GatewaySender> gatewaySender;
+  protected List<CacheConfig.GatewaySender> gatewaySenders;
-  protected List<CacheConfig.AsyncEventQueue> asyncEventQueue;
+  protected List<CacheConfig.AsyncEventQueue> asyncEventQueues;
-  protected List<CacheConfig.CacheServer> cacheServer;
-  @XmlElement(namespace = "http://geode.apache.org/schema/cache")
-  protected List<PoolType> pool;
+  protected List<CacheConfig.CacheServer> cacheServers;
+  @XmlElement(name = "pool", namespace = "http://geode.apache.org/schema/cache")
+  protected List<PoolType> pools;
-  protected List<DiskStoreType> diskStore;
+  protected List<DiskStoreType> diskStores;
-  @XmlElement(namespace = "http://geode.apache.org/schema/cache")
-  protected List<RegionConfig> region;
+  @XmlElement(name = "region", namespace = "http://geode.apache.org/schema/cache")
+  protected List<RegionConfig> regions;
-  @XmlElement(namespace = "http://geode.apache.org/schema/cache")
-  protected List<String> backup;
+  @XmlElement(name = "backup", namespace = "http://geode.apache.org/schema/cache")
+  protected List<String> backups;
-   * Gets the value of the gatewayHub property.
+   * Gets the value of the gatewayHubs property.
-   * This is why there is not a <CODE>set</CODE> method for the gatewayHub property.
+   * This is why there is not a <CODE>set</CODE> method for the gatewayHubs property.
-   * getGatewayHub().add(newItem);
+   * getGatewayHubs().add(newItem);
-  public List<CacheConfig.GatewayHub> getGatewayHub() {
-    if (gatewayHub == null) {
-      gatewayHub = new ArrayList<CacheConfig.GatewayHub>();
+  public List<CacheConfig.GatewayHub> getGatewayHubs() {
+    if (gatewayHubs == null) {
+      gatewayHubs = new ArrayList<CacheConfig.GatewayHub>();
-    return this.gatewayHub;
+    return this.gatewayHubs;
-   * Gets the value of the gatewaySender property.
+   * Gets the value of the gatewaySenders property.
-   * This is why there is not a <CODE>set</CODE> method for the gatewaySender property.
+   * This is why there is not a <CODE>set</CODE> method for the gatewaySenders property.
-   * getGatewaySender().add(newItem);
+   * getGatewaySenders().add(newItem);
-  public List<CacheConfig.GatewaySender> getGatewaySender() {
-    if (gatewaySender == null) {
-      gatewaySender = new ArrayList<CacheConfig.GatewaySender>();
+  public List<CacheConfig.GatewaySender> getGatewaySenders() {
+    if (gatewaySenders == null) {
+      gatewaySenders = new ArrayList<CacheConfig.GatewaySender>();
-    return this.gatewaySender;
+    return this.gatewaySenders;
-   * Gets the value of the asyncEventQueue property.
+   * Gets the value of the asyncEventQueues property.
-   * This is why there is not a <CODE>set</CODE> method for the asyncEventQueue property.
+   * This is why there is not a <CODE>set</CODE> method for the asyncEventQueues property.
-   * getAsyncEventQueue().add(newItem);
+   * getAsyncEventQueues().add(newItem);
-  public List<CacheConfig.AsyncEventQueue> getAsyncEventQueue() {
-    if (asyncEventQueue == null) {
-      asyncEventQueue = new ArrayList<CacheConfig.AsyncEventQueue>();
+  public List<CacheConfig.AsyncEventQueue> getAsyncEventQueues() {
+    if (asyncEventQueues == null) {
+      asyncEventQueues = new ArrayList<CacheConfig.AsyncEventQueue>();
-    return this.asyncEventQueue;
+    return this.asyncEventQueues;
-   * Gets the value of the cacheServer property.
+   * Gets the value of the cacheServers property.
-   * This is why there is not a <CODE>set</CODE> method for the cacheServer property.
+   * This is why there is not a <CODE>set</CODE> method for the cacheServers property.
-   * getCacheServer().add(newItem);
+   * getCacheServers().add(newItem);
-  public List<CacheConfig.CacheServer> getCacheServer() {
-    if (cacheServer == null) {
-      cacheServer = new ArrayList<CacheConfig.CacheServer>();
+  public List<CacheConfig.CacheServer> getCacheServers() {
+    if (cacheServers == null) {
+      cacheServers = new ArrayList<CacheConfig.CacheServer>();
-    return this.cacheServer;
+    return this.cacheServers;
-   * getPool().add(newItem);
+   * getPools().add(newItem);
-  public List<PoolType> getPool() {
-    if (pool == null) {
-      pool = new ArrayList<PoolType>();
+  public List<PoolType> getPools() {
+    if (pools == null) {
+      pools = new ArrayList<PoolType>();
-    return this.pool;
+    return this.pools;
-   * getDiskStore().add(newItem);
+   * getDiskStores().add(newItem);
-  public List<DiskStoreType> getDiskStore() {
-    if (diskStore == null) {
-      diskStore = new ArrayList<DiskStoreType>();
+  public List<DiskStoreType> getDiskStores() {
+    if (diskStores == null) {
+      diskStores = new ArrayList<DiskStoreType>();
-    return this.diskStore;
+    return this.diskStores;
-    return jndiBindings.getJndiBinding();
+    return jndiBindings.getJndiBindings();
-   * getRegion().add(newItem);
+   * getRegions().add(newItem);
-  public List<RegionConfig> getRegion() {
-    if (region == null) {
-      region = new ArrayList<RegionConfig>();
+  public List<RegionConfig> getRegions() {
+    if (regions == null) {
+      regions = new ArrayList<RegionConfig>();
-    return this.region;
+    return this.regions;
-   * getBackup().add(newItem);
+   * getBackups().add(newItem);
-  public List<String> getBackup() {
-    if (backup == null) {
-      backup = new ArrayList<String>();
+  public List<String> getBackups() {
+    if (backups == null) {
+      backups = new ArrayList<String>();
-    return this.backup;
+    return this.backups;
-    return findElement(getRegion(), regionPath);
+    return findElement(getRegions(), regionPath);
-      propOrder = {"gatewayEventFilter", "gatewayEventSubstitutionFilter", "asyncEventListener"})
+      propOrder = {"gatewayEventFilters", "gatewayEventSubstitutionFilter", "asyncEventListener"})
-    protected List<DeclarableType> gatewayEventFilter;
+    protected List<DeclarableType> gatewayEventFilters;
-     * Gets the value of the gatewayEventFilter property.
+     * Gets the value of the gatewayEventFilters property.
-     * This is why there is not a <CODE>set</CODE> method for the gatewayEventFilter property.
+     * This is why there is not a <CODE>set</CODE> method for the gatewayEventFilters property.
-     * getGatewayEventFilter().add(newItem);
+     * getGatewayEventFilters().add(newItem);
-    public List<DeclarableType> getGatewayEventFilter() {
-      if (gatewayEventFilter == null) {
-        gatewayEventFilter = new ArrayList<DeclarableType>();
+    public List<DeclarableType> getGatewayEventFilters() {
+      if (gatewayEventFilters == null) {
+        gatewayEventFilters = new ArrayList<DeclarableType>();
-      return this.gatewayEventFilter;
+      return this.gatewayEventFilters;
-  @XmlType(name = "", propOrder = {"gateway"})
+  @XmlType(name = "", propOrder = {"gateways"})
-    @XmlElement(namespace = "http://geode.apache.org/schema/cache")
-    protected List<CacheConfig.GatewayHub.Gateway> gateway;
+    @XmlElement(name = "gateway", namespace = "http://geode.apache.org/schema/cache")
+    protected List<CacheConfig.GatewayHub.Gateway> gateways;
-      if (gateway == null) {
-        gateway = new ArrayList<CacheConfig.GatewayHub.Gateway>();
+      if (gateways == null) {
+        gateways = new ArrayList<CacheConfig.GatewayHub.Gateway>();
-      return this.gateway;
+      return this.gateways;
-    @XmlType(name = "", propOrder = {"gatewayEndpoint", "gatewayListener", "gatewayQueue"})
+    @XmlType(name = "", propOrder = {"gatewayEndpoints", "gatewayListeners", "gatewayQueue"})
-      protected List<CacheConfig.GatewayHub.Gateway.GatewayEndpoint> gatewayEndpoint;
+      protected List<CacheConfig.GatewayHub.Gateway.GatewayEndpoint> gatewayEndpoints;
-      protected List<DeclarableType> gatewayListener;
+      protected List<DeclarableType> gatewayListeners;
-       * Gets the value of the gatewayEndpoint property.
+       * Gets the value of the gatewayEndpoints property.
-       * This is why there is not a <CODE>set</CODE> method for the gatewayEndpoint property.
+       * This is why there is not a <CODE>set</CODE> method for the gatewayEndpoints property.
-       * getGatewayEndpoint().add(newItem);
+       * getGatewayEndpoints().add(newItem);
-      public List<CacheConfig.GatewayHub.Gateway.GatewayEndpoint> getGatewayEndpoint() {
-        if (gatewayEndpoint == null) {
-          gatewayEndpoint = new ArrayList<CacheConfig.GatewayHub.Gateway.GatewayEndpoint>();
+      public List<CacheConfig.GatewayHub.Gateway.GatewayEndpoint> getGatewayEndpoints() {
+        if (gatewayEndpoints == null) {
+          gatewayEndpoints = new ArrayList<CacheConfig.GatewayHub.Gateway.GatewayEndpoint>();
-        return this.gatewayEndpoint;
+        return this.gatewayEndpoints;
-       * Gets the value of the gatewayListener property.
+       * Gets the value of the gatewayListeners property.
-       * This is why there is not a <CODE>set</CODE> method for the gatewayListener property.
+       * This is why there is not a <CODE>set</CODE> method for the gatewayListeners property.
-       * getGatewayListener().add(newItem);
+       * getGatewayListeners().add(newItem);
-      public List<DeclarableType> getGatewayListener() {
-        if (gatewayListener == null) {
-          gatewayListener = new ArrayList<DeclarableType>();
+      public List<DeclarableType> getGatewayListeners() {
+        if (gatewayListeners == null) {
+          gatewayListeners = new ArrayList<DeclarableType>();
-        return this.gatewayListener;
+        return this.gatewayListeners;
-  @XmlType(name = "", propOrder = {"gatewayTransportFilter"})
+  @XmlType(name = "", propOrder = {"gatewayTransportFilters"})
-    protected List<DeclarableType> gatewayTransportFilter;
+    protected List<DeclarableType> gatewayTransportFilters;
-     * Gets the value of the gatewayTransportFilter property.
+     * Gets the value of the gatewayTransportFilters property.
-     * This is why there is not a <CODE>set</CODE> method for the gatewayTransportFilter property.
+     * This is why there is not a <CODE>set</CODE> method for the gatewayTransportFilters property.
-     * getGatewayTransportFilter().add(newItem);
+     * getGatewayTransportFilters().add(newItem);
-    public List<DeclarableType> getGatewayTransportFilter() {
-      if (gatewayTransportFilter == null) {
-        gatewayTransportFilter = new ArrayList<DeclarableType>();
+    public List<DeclarableType> getGatewayTransportFilters() {
+      if (gatewayTransportFilters == null) {
+        gatewayTransportFilters = new ArrayList<DeclarableType>();
-      return this.gatewayTransportFilter;
+      return this.gatewayTransportFilters;
-  @XmlType(name = "", propOrder = {"gatewayEventFilter", "gatewayEventSubstitutionFilter",
-      "gatewayTransportFilter"})
+  @XmlType(name = "", propOrder = {"gatewayEventFilters", "gatewayEventSubstitutionFilter",
+      "gatewayTransportFilters"})
-    protected List<DeclarableType> gatewayEventFilter;
+    protected List<DeclarableType> gatewayEventFilters;
-    protected List<DeclarableType> gatewayTransportFilter;
+    protected List<DeclarableType> gatewayTransportFilters;
-     * Gets the value of the gatewayEventFilter property.
+     * Gets the value of the gatewayEventFilters property.
-     * This is why there is not a <CODE>set</CODE> method for the gatewayEventFilter property.
+     * This is why there is not a <CODE>set</CODE> method for the gatewayEventFilters property.
-     * getGatewayEventFilter().add(newItem);
+     * getGatewayEventFilters().add(newItem);
-    public List<DeclarableType> getGatewayEventFilter() {
-      if (gatewayEventFilter == null) {
-        gatewayEventFilter = new ArrayList<DeclarableType>();
+    public List<DeclarableType> getGatewayEventFilters() {
+      if (gatewayEventFilters == null) {
+        gatewayEventFilters = new ArrayList<DeclarableType>();
-      return this.gatewayEventFilter;
+      return this.gatewayEventFilters;
-     * Gets the value of the gatewayTransportFilter property.
+     * Gets the value of the gatewayTransportFilters property.
-     * This is why there is not a <CODE>set</CODE> method for the gatewayTransportFilter property.
+     * This is why there is not a <CODE>set</CODE> method for the gatewayTransportFilters property.
-     * getGatewayTransportFilter().add(newItem);
+     * getGatewayTransportFilters().add(newItem);
-    public List<DeclarableType> getGatewayTransportFilter() {
-      if (gatewayTransportFilter == null) {
-        gatewayTransportFilter = new ArrayList<DeclarableType>();
+    public List<DeclarableType> getGatewayTransportFilters() {
+      if (gatewayTransportFilters == null) {
+        gatewayTransportFilters = new ArrayList<DeclarableType>();
-      return this.gatewayTransportFilter;
+      return this.gatewayTransportFilters;
