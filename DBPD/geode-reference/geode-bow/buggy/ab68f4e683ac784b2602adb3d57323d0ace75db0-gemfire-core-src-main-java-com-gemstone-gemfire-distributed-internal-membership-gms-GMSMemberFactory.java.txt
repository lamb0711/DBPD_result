GEODE-77 fixing the inability to create multiple MembershipManagers ina single JVM

The static MemberAttributes.DEFAULT was being used to pull together all
of the bits of a new members identity (InternalDistributedMember) but
this prevented multiple MembershipManagers from being instantiated w/o
ones identity bleeding into anothers.  Now the MembershipManager is the
assembling a single InternalDistributedMember instance, putting info
into it as it becomes available.  A new unit test ensures that this is
functioning correctly.

+import java.net.UnknownHostException;
-import com.gemstone.gemfire.CancelCriterion;
-import com.gemstone.gemfire.distributed.internal.DistributionManager;
-import com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager;
-import com.gemstone.gemfire.distributed.internal.tcpserver.TcpHandler;
-import com.gemstone.gemfire.internal.OSProcess;
-    GMSMember result = new GMSMember(i, p, splitBrainEnabled, canBeCoordinator, version, 0, 0);
-    result.setAttributes(attr);
+    GMSMember result = new GMSMember(attr, i, p, splitBrainEnabled, canBeCoordinator, version, 0, 0);
-  private MemberAttributes getDefaultAttributes() {
-    // TODO can we get rid of this??
-    if (MemberAttributes.DEFAULT.getVmPid() == -1 ||
-        MemberAttributes.DEFAULT.getVmKind() == -1) {
-      MemberAttributes.setDefaults(
-          -1, 
-          OSProcess.getId(), 
-          -1,
-          DistributionManager.getDistributionManagerType(), 
-          null,
-          null, null);
-    }
-    return MemberAttributes.DEFAULT;
-  }
-  
-    GMSMember result = new GMSMember(i, p, false, true, Version.CURRENT_ORDINAL, 0, 0);
-    result.setAttributes(getDefaultAttributes());
-    return result;
+    return new GMSMember(MemberAttributes.INVALID, i, p, false, true, Version.CURRENT_ORDINAL, 0, 0);
-    GMSMember result = new GMSMember(s, p);
-    result.setAttributes(getDefaultAttributes());
-    return result;
+    InetAddress inetAddr = null;
+    try {
+      inetAddr=InetAddress.getByName(s);
+    } catch (UnknownHostException e) {
+      throw new RuntimeException("Unable to create an identifier for testing for " + s, e);
+    }
+    return newNetMember(inetAddr, p);
