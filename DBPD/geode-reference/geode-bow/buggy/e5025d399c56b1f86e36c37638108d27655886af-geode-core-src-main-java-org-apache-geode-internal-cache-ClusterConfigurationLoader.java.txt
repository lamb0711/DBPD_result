GEODE-4765: Add retries when retrieving cluster config (#1539)

- This helps when a locator is reconnecting to the distributed system and isn't
  fully ready yet.
- During reconnect, pass a fresh cache to the ClusterConfigurationService -
  this fixes the 'DLock destroyed' issue.
- Also fixes GEODE-4730

+import org.apache.geode.cache.execute.Function;
+import org.apache.geode.cache.execute.FunctionException;
+import org.apache.geode.cache.execute.FunctionInvocationTargetException;
+import org.apache.geode.distributed.LockServiceDestroyedException;
+  private static final Function GET_CLUSTER_CONFIG_FUNCTION = new GetClusterConfigurationFunction();
+
-    for (InternalDistributedMember locator : locatorList) {
-      ResultCollector resultCollector =
-          FunctionService.onMember(locator).setArguments(groups).execute(function);
-      Object result = ((ArrayList) resultCollector.getResult()).get(0);
-      if (result instanceof ConfigurationResponse) {
-        response = (ConfigurationResponse) result;
-        response.setMember(locator);
-        break;
-      } else {
-        logger.error("Received invalid result from {}: {}", locator.toString(), result);
-        if (result instanceof Throwable) {
-          // log the stack trace.
-          logger.error(result.toString(), result);
+
+    int attempts = 6;
+    OUTER: while (attempts > 0) {
+      for (InternalDistributedMember locator : locatorList) {
+        logger.info("Attempting to retrieve cluster configuration from {} - {} attempts remaining",
+            locator.getName(), attempts);
+        response = requestConfigurationFromOneLocator(locator, groups);
+        if (response != null) {
+          break OUTER;
+
+      try {
+        Thread.sleep(10000);
+      } catch (InterruptedException ex) {
+        break;
+      }
+
+      attempts--;
+  private ConfigurationResponse requestConfigurationFromOneLocator(
+      InternalDistributedMember locator, Set<String> groups) {
+    ConfigurationResponse configResponse = null;
+
+    try {
+      ResultCollector resultCollector = FunctionService.onMember(locator).setArguments(groups)
+          .execute(GET_CLUSTER_CONFIG_FUNCTION);
+      Object result = ((ArrayList) resultCollector.getResult()).get(0);
+      if (result instanceof ConfigurationResponse) {
+        configResponse = (ConfigurationResponse) result;
+        configResponse.setMember(locator);
+      } else {
+        logger.error("Received invalid result from {}: {}", locator.toString(), result);
+        if (result instanceof Throwable) {
+          // log the stack trace.
+          logger.error(result.toString(), result);
+        }
+      }
+    } catch (FunctionException fex) {
+      // Rethrow unless we're possibly reconnecting
+      if (!(fex.getCause() instanceof LockServiceDestroyedException
+          || fex.getCause() instanceof FunctionInvocationTargetException)) {
+        throw fex;
+      }
+    }
+
+    return configResponse;
+  }
+
