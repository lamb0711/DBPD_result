GEODE-6451 CI Failure: Hang cleaning up after ClusterConfigLocatorRestartDUnitTest.serverRestartsAfterLocatorReconnects

Removed code that scrubbed the current membership view of IDs matching a
new join request.  This code is no longer needed now that we generate a
new UUID for a member when it tries to auto-reconnect.  The new ID of
such a member would never match an old ID.

In practice this code was causing test failures in situations where the
auto-reconnect time was set to a small value.  A member would end up
sending multiple join requests to the same coordinator.  The first would
be used to allow the new member into the cluster but the second, due to
this code, would cause that member to be immediately removed from the
cluster.

The unicast receiver thread was becoming blocked if a
forced disconnect occurred during reconnect because
InternalDistributedSystem.disconnect sychronizes, for some
reason, on GemFireCacheImpl.class.  This reworks that
logic to have the reconnect thread get a
SystemConnectException forcing cleanup of the reconnecting
InternalDistributedSystem in that thread.

+
+    if (!keepDS && systemFailureCause == null // normal cache close
+        && (this.isReconnecting() || this.system.getReconnectedSystem() != null)) {
+      logger.debug(
+          "Cache is shutting down distributed system connection.  "
+              + "isReconnecting={}  reconnectedSystem={} keepAlive={} keepDS={}",
+          this.isReconnecting(), system.getReconnectedSystem(), keepAlive, keepDS);
+
+      this.system.stopReconnectingNoDisconnect();
+      if (this.system.getReconnectedSystem() != null) {
+        this.system.getReconnectedSystem().disconnect();
+      }
+      return;
+    }
+
