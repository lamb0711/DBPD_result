GEODE-2937: Restore removeFromQueueOnException

-  public boolean dispatchBatch(List events, boolean isRetry) {
+  public boolean dispatchBatch(List events, boolean removeFromQueueOnException, boolean isRetry) {
-          sp.dispatchBatch_NewWAN(connection, events, currentBatchId, isRetry);
+          sp.dispatchBatch_NewWAN(connection, events, currentBatchId,
+              sender.isRemoveFromQueueOnException(), isRetry);
-              logBatchExceptions(ack.getBatchException());
-              processor.handleSuccessBatchAck(batchId);
+              if (sender.isRemoveFromQueueOnException()) {
+                // log the batchExceptions
+                logBatchExceptions(ack.getBatchException());
+                processor.handleSuccessBatchAck(batchId);
+              } else {
+                // we assume that batch exception will not occur for PDX related
+                // events
+                List<GatewaySenderEventImpl> pdxEvents =
+                    processor.getBatchIdToPDXEventsMap().get(ack.getBatchException().getBatchId());
+                if (pdxEvents != null) {
+                  for (GatewaySenderEventImpl senderEvent : pdxEvents) {
+                    senderEvent.isAcked = true;
+                  }
+                }
+                // log the batchExceptions
+                logBatchExceptions(ack.getBatchException());
+                // remove the events that have been processed.
+                BatchException70 be = ack.getBatchException();
+                List<BatchException70> exceptions = be.getExceptions();
+
+                for (int i = 0; i < exceptions.get(0).getIndex(); i++) {
+                  processor.eventQueueRemove(1);
+                }
+                // reset the sender
+                processor.handleException();
+              }
