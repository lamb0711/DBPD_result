GEODE-2091: Do not return false when containsValueForKey call failed in a transaction

Correctly handle exception to fail the transaction instead of returning null.
Add check for colocated buckets so that correct TrasactionException can be thrown.
Fix containsKey method call as well.
Add test cases in dunit test.

+import org.apache.geode.cache.Region;
+import org.apache.geode.internal.cache.ColocationHelper;
+import java.util.Collection;
+  public Map<Integer, Boolean> getBuckets() {
+    return buckets;
+  }
-    if (keyInfo != null && !buckets.isEmpty() && !buckets.containsKey(keyInfo.getBucketId())) {
-      // for parent region if previous ops were successful and for child colocated regions
-      // where the bucketId was not previously encountered
+
+    if (isKeyInNonColocatedBucket(keyInfo)) {
-      if (ex instanceof PrimaryBucketException) {
+      if (ex instanceof PrimaryBucketException || ex instanceof BucketNotFoundException) {
+  // is this key in a different bucket from all the existing buckets
+  // of the underlying PR or its colocated PRs touched by the transaction.
+  private boolean isKeyInNonColocatedBucket(KeyInfo keyInfo) {
+    Map<Region<?, ?>, TXRegionStub> regionStubs = this.state.getRegionStubs();
+    Collection<PartitionedRegion> colcatedRegions = (Collection<PartitionedRegion>) ColocationHelper
+        .getAllColocationRegions((PartitionedRegion) this.region).values();
+    // get all colocated region buckets touched in the transaction
+    for (PartitionedRegion colcatedRegion : colcatedRegions) {
+      PartitionedTXRegionStub regionStub =
+          (PartitionedTXRegionStub) regionStubs.get(colcatedRegion);
+      if (regionStub != null) {
+        buckets.putAll(regionStub.getBuckets());
+      }
+    }
+    return keyInfo != null && !buckets.isEmpty() && !buckets.containsKey(keyInfo.getBucketId());
+  }
+
-        return false;
+        RuntimeException re = getTransactionException(keyInfo, e);
+        re.initCause(e);
+        throw re;
-        return false;
+        RuntimeException re = getTransactionException(keyInfo, e);
+        re.initCause(e);
+        throw re;
-        return null;
+        RuntimeException re = getTransactionException(keyInfo, e);
+        re.initCause(e);
+        throw re;
