GEODE-7087: Reset flag after unlock bucket primary lock. (#3926)



-  protected boolean gotBucketLocks = false;
+  boolean gotBucketLocks = false;
-      Iterator<Map.Entry<InternalRegion, TXRegionState>> it = this.regions.entrySet().iterator();
+      cleanupTXRegionState();
+    } finally {
+      synchronized (this.completionGuard) {
+        this.completionGuard.notifyAll();
+      }
+      if (exception != null && !this.proxy.getCache().isClosed()) {
+        throw exception;
+      }
+    }
+  }
+
+  void cleanupTXRegionState() {
+    Iterator<Map.Entry<InternalRegion, TXRegionState>> it = this.regions.entrySet().iterator();
+    try {
-        if (gotBucketLocks) {
-          if (r instanceof BucketRegion && (((BucketRegion) r).getBucketAdvisor().isPrimary())) {
-            try {
-              ((BucketRegion) r).doUnlockForPrimary();
-            } catch (RegionDestroyedException rde) {
-              // ignore
-              if (logger.isDebugEnabled()) {
-                logger.debug("RegionDestroyedException while unlocking bucket region {}",
-                    r.getFullPath(), rde);
-              }
-            } catch (Exception rde) {
-              // ignore
-              if (logger.isDebugEnabled()) {
-                logger.debug(
-                    "Exception while unlocking bucket region {} this is probably because the bucket was destroyed and never locked initially.",
-                    r.getFullPath(), rde);
-              }
-            }
-          }
+        if (isBucketLocks()) {
+          unlockPrimaryMoveReadLock(r);
-      synchronized (this.completionGuard) {
-        this.completionGuard.notifyAll();
-      }
-
-      if (exception != null && !this.proxy.getCache().isClosed()) {
-        throw exception;
+      if (isBucketLocks()) {
+        gotBucketLocks = false;
+  void unlockPrimaryMoveReadLock(InternalRegion internalRegion) {
+    if (internalRegion.isUsedForPartitionedRegionBucket()
+        && (((BucketRegion) internalRegion).getBucketAdvisor().isPrimary())) {
+      try {
+        ((BucketRegion) internalRegion).doUnlockForPrimary();
+      } catch (RegionDestroyedException rde) {
+        // ignore
+        if (logger.isDebugEnabled()) {
+          logger.debug("RegionDestroyedException while unlocking bucket region {}",
+              internalRegion.getFullPath(), rde);
+        }
+      } catch (Exception rde) {
+        // ignore
+        if (logger.isDebugEnabled()) {
+          logger.debug(
+              "Exception while unlocking bucket region {} this is probably because the bucket was destroyed and never locked initially.",
+              internalRegion.getFullPath(), rde);
+        }
+      }
+    }
+  }
+
+  boolean isBucketLocks() {
+    return gotBucketLocks;
+  }
+
