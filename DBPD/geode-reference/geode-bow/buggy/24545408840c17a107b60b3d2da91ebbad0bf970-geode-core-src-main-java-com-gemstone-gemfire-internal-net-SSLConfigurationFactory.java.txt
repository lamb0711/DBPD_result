GEODE-420: Code review changes
Removal of SSLEnabledComponent.java and SSLEnabledComponents.java

+import com.gemstone.gemfire.GemFireConfigException;
+import com.gemstone.gemfire.internal.security.SecurableComponent;
-  private Map<SSLEnabledComponent, SSLConfig> registeredSSLConfig = new HashMap<>();
+  private Map<SecurableComponent, SSLConfig> registeredSSLConfig = new HashMap<>();
+    if(distributionConfig == null)
+    {
+      throw new GemFireConfigException("SSL Configuration requires a valid distribution config.");
+    }
-  public static SSLConfig getSSLConfigForComponent(SSLEnabledComponent sslEnabledComponent) {
+  public static SSLConfig getSSLConfigForComponent(SecurableComponent sslEnabledComponent) {
-  private synchronized void registeredSSLConfigForComponent(final SSLEnabledComponent sslEnabledComponent, final SSLConfig sslConfig) {
+  private synchronized void registeredSSLConfigForComponent(final SecurableComponent sslEnabledComponent, final SSLConfig sslConfig) {
-  private SSLConfig createSSLConfigForComponent(final SSLEnabledComponent sslEnabledComponent) {
+  private SSLConfig createSSLConfigForComponent(final SecurableComponent sslEnabledComponent) {
-    SSLEnabledComponent[] sslEnabledComponents = distributionConfig.getSSLEnabledComponents();
+    SecurableComponent[] sslEnabledComponents = distributionConfig.getSSLEnabledComponents();
-        createSSLConfigForComponent(SSLEnabledComponent.HTTP_SERVICE);
+        createSSLConfigForComponent(SecurableComponent.HTTP_SERVICE);
+        }else {
+          sslConfig = configureLegacyClusterSSL(sslConfig);
-  private SSLConfig createSSLConfig(final SSLEnabledComponent sslEnabledComponent) {
+  private SSLConfig createSSLConfig(final SecurableComponent sslEnabledComponent) {
-  private boolean determineIfSSLEnabledForSSLComponent(final SSLEnabledComponent sslEnabledComponent) {
-    if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), SSLEnabledComponent.NONE)) {
+  private boolean determineIfSSLEnabledForSSLComponent(final SecurableComponent sslEnabledComponent) {
+    if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), SecurableComponent.NONE)) {
-    if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), SSLEnabledComponent.ALL)) {
+    if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), SecurableComponent.ALL)) {
-  private SSLConfig getRegisteredSSLConfigForComponent(final SSLEnabledComponent sslEnabledComponent) {
+  private SSLConfig getRegisteredSSLConfigForComponent(final SecurableComponent sslEnabledComponent) {
-    instance = null;
