GEODE-6802: Execute region synchronization on newly joined member. (#3623)

 * Region sync will be invoked to avoid data inconsistency on a newly joined/restarted member
   if it received a region synchronization request from other members due to timed task.
 * Use a flag in RegionVersionHolder to ensure only one such call is executed.
 * Make sure RVV exception is filled for persistent member requesting region sync. (This may
   leads to CommitConflictException on some transactions on persistent regions due to this
   region sync operation. But it should be rare and is acceptable compared to data inconsistency
   issue.)

+  // This flag is used to to determine if region sync is needed when receiving region sync requests
+  // from other members hosting the region.
+  //
+  // It is set to true when region sync is being scheduled when triggered by the
+  // member departed event, if the lost member is the holding member by this holder.
+  // It can also be set to true, if region sync is not scheduled (this member joins the
+  // cluster after the lost member departed event has occurred) but this member receives
+  // request for region sync from other existing members. If this is the case, this member
+  // will send region sync request to other existing members hosting the region.
+  //
+  // The flag will be always set to true once region sync is scheduled or done for the holding
+  // member. If the holding member by the holder is lost multiples times and this member is
+  // never lost, the timed task would schedule region sync for the lost member (bypassing this
+  // condition check). If this member is also lost, when this member is restarted this
+  // flag will be initialized as false.
+  private transient boolean regionSynchronizeScheduledOrDone;
+
-
-  /* test only method */
-  protected synchronized void addException(long previousVersion, long nextVersion) {
+  synchronized void addException(long previousVersion, long nextVersion) {
+  private synchronized boolean isRegionSynchronizeScheduledOrDone() {
+    return regionSynchronizeScheduledOrDone;
+  }
+
+  public synchronized void setRegionSynchronizeScheduled() {
+    regionSynchronizeScheduledOrDone = true;
+  }
+
+
+  /**
+   * Check to see if regionSynchronizeScheduledOrDone is set to true. If it is not,
+   * the regionSynchronizeScheduledOrDone variable is set to true and returns true.
+   * If it is already set to true, do nothing and returns false.
+   */
+  public synchronized boolean setRegionSynchronizeScheduledOrDoneIfNot() {
+    if (!isRegionSynchronizeScheduledOrDone()) {
+      regionSynchronizeScheduledOrDone = true;
+      return true;
+    }
+    return false;
+  }
