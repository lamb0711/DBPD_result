Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Launcher class for : <ul>
- * <li> gfsh 7.0
- * <li> server
- * <li> locator
- * <li> Tools (Pulse, VSD, JConsole, JVisualVM)
- * <li> Running Command Line Interface (CLI) Commands from OS prompt like <ol>
- *   <li><ul>
- *   <li> compact offline-disk-store - Compact an offline disk store. If the disk store is large, additional memory may need to be allocated to the process using the --J=-Xmx??? parameter.
- *   <li> describe offline-disk-store - Display information about an offline disk store.
- *   <li> encrypt password - Encrypt a password for use in data source configuration.
- *   <li> run - Execute a set of GFSH commands. Commands that normally prompt for additional input will instead use default values.
- *   <li> start jconsole - Start the JDK's JConsole tool in a separate process. JConsole will be launched, but connecting to GemFire must be done manually.
- *   <li> start jvisualvm - Start the JDK's Java VisualVM (jvisualvm) tool in a separate process. Java VisualVM will be launched, but connecting to GemFire must be done manually.
- *   <li> start locator - Start a Locator.
- *   <li> start pulse - Open a new window in the default Web browser with the URL for the Pulse application.
- *   <li> start server - Start a GemFire Cache Server.
- *   <li> start vsd - Start VSD in a separate process.
- *   <li> status locator - Display the status of a Locator. Possible statuses are: started, online, offline or not responding.
- *   <li> status server - Display the status of a GemFire Cache Server.
- *   <li> stop locator - Stop a Locator.
- *   <li> stop server - Stop a GemFire Cache Server.
- *   <li> validate offline-disk-store - Scan the contents of a disk store to verify that it has no errors.
- *   <li> version - Display product version information.
- *   </ul></li>
- *   <li> multiple commands specified using an option "-e"
- *  </ol>
+ * Launcher class for :
+ * <ul>
+ * <li>gfsh 7.0
+ * <li>server
+ * <li>locator
+ * <li>Tools (Pulse, VSD, JConsole, JVisualVM)
+ * <li>Running Command Line Interface (CLI) Commands from OS prompt like
+ * <ol>
+ * <li>
+ * <ul>
+ * <li>compact offline-disk-store - Compact an offline disk store. If the disk store is large,
+ * additional memory may need to be allocated to the process using the --J=-Xmx??? parameter.
+ * <li>describe offline-disk-store - Display information about an offline disk store.
+ * <li>encrypt password - Encrypt a password for use in data source configuration.
+ * <li>run - Execute a set of GFSH commands. Commands that normally prompt for additional input will
+ * instead use default values.
+ * <li>start jconsole - Start the JDK's JConsole tool in a separate process. JConsole will be
+ * launched, but connecting to GemFire must be done manually.
+ * <li>start jvisualvm - Start the JDK's Java VisualVM (jvisualvm) tool in a separate process. Java
+ * VisualVM will be launched, but connecting to GemFire must be done manually.
+ * <li>start locator - Start a Locator.
+ * <li>start pulse - Open a new window in the default Web browser with the URL for the Pulse
+ * application.
+ * <li>start server - Start a GemFire Cache Server.
+ * <li>start vsd - Start VSD in a separate process.
+ * <li>status locator - Display the status of a Locator. Possible statuses are: started, online,
+ * offline or not responding.
+ * <li>status server - Display the status of a GemFire Cache Server.
+ * <li>stop locator - Stop a Locator.
+ * <li>stop server - Stop a GemFire Cache Server.
+ * <li>validate offline-disk-store - Scan the contents of a disk store to verify that it has no
+ * errors.
+ * <li>version - Display product version information.
+ * </ul>
+ * </li>
+ * <li>multiple commands specified using an option "-e"
+ * </ol>
-  private static final String HELP_OPTION    = "help";
-  private static final String HELP           = CliStrings.HELP;
+  private static final String HELP_OPTION = "help";
+  private static final String HELP = CliStrings.HELP;
-  private static final String MSG_INVALID_COMMAND_OR_OPTION = "Invalid command or option : {0}." + GfshParser.LINE_SEPARATOR
-      + "Use 'gfsh help' to display additional information.";
+  private static final String MSG_INVALID_COMMAND_OR_OPTION = "Invalid command or option : {0}."
+      + GfshParser.LINE_SEPARATOR + "Use 'gfsh help' to display additional information.";
-      System.err.println("Required (" + nonExistingDependency + ") libraries not found in the classpath. gfsh can't start.");
+      System.err.println("Required (" + nonExistingDependency
+          + ") libraries not found in the classpath. gfsh can't start.");
-    
+
-    
+
-          // help is also available for commands which are not available under allowedCommandLineCommands
+          // help is also available for commands which are not available under
+          // allowedCommandLineCommands
-          System.err.println(CliStrings.format(MSG_INVALID_COMMAND_OR_OPTION, CliUtil.arrayToString(args)));
+          System.err.println(
+              CliStrings.format(MSG_INVALID_COMMAND_OR_OPTION, CliUtil.arrayToString(args)));
-              if (gfsh.getLastExecutionStatus() != 0) 
-                exitRequest = ExitShellRequest.FATAL_EXIT;
-          } else if (gfsh.getLastExecutionStatus() != 0) {
+            if (gfsh.getLastExecutionStatus() != 0)
+          } else if (gfsh.getLastExecutionStatus() != 0) {
+            exitRequest = ExitShellRequest.FATAL_EXIT;
-    
+
-      System.err.println(CliStrings.format(MSG_INVALID_COMMAND_OR_OPTION, CliUtil.arrayToString(args)));
+      System.err
+          .println(CliStrings.format(MSG_INVALID_COMMAND_OR_OPTION, CliUtil.arrayToString(args)));
-    boolean launchShell    = true;
+    boolean launchShell = true;
-          for (int i = 0; i < commandsToExecute.size() && exitRequest == ExitShellRequest.NORMAL_EXIT; i++) {
+          for (int i = 0; i < commandsToExecute.size()
+              && exitRequest == ExitShellRequest.NORMAL_EXIT; i++) {
-            System.out.println(GfshParser.LINE_SEPARATOR + "(" + (i + 1) + ") Executing - " + GfshHistory.redact(command)
-                + GfshParser.LINE_SEPARATOR);
+            System.out.println(GfshParser.LINE_SEPARATOR + "(" + (i + 1) + ") Executing - "
+                + GfshHistory.redact(command) + GfshParser.LINE_SEPARATOR);
-     return parseCommandLineCommand(args);
+      return parseCommandLineCommand(args);
-    
+
-    stream.println("gfsh [ <command> [option]* | <help> [command] | [--help | -h] | [-e \"<command> [option]*\"]* ]" + GfshParser.LINE_SEPARATOR);
+    stream.println(
+        "gfsh [ <command> [option]* | <help> [command] | [--help | -h] | [-e \"<command> [option]*\"]* ]"
+            + GfshParser.LINE_SEPARATOR);
-    stream.println(Gfsh.wrapText("Commands may be any that are available from the interactive gfsh prompt.  "
-            + "For commands that require a Manager to complete, the first command in the list must be \"connect\".", 1));
+    stream.println(Gfsh.wrapText(
+        "Commands may be any that are available from the interactive gfsh prompt.  "
+            + "For commands that require a Manager to complete, the first command in the list must be \"connect\".",
+        1));
-    stream.println(Gfsh.wrapText("Displays 'this' help. ('gfsh --help' or 'gfsh help' is equivalent)", 1));
+    stream.println(
+        Gfsh.wrapText("Displays 'this' help. ('gfsh --help' or 'gfsh help' is equivalent)", 1));
-        "Connect to a running Locator using the default connection information and run the \"list members\" command.", 1));
+        "Connect to a running Locator using the default connection information and run the \"list members\" command.",
+        1));
-      LogWrapper.getInstance().info("Startup done in " + ( (done - start) / 1000.0) + " seconds.");
+      LogWrapper.getInstance().info("Startup done in " + ((done - start) / 1000.0) + " seconds.");
