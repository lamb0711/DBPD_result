add analyzer to luceneIndexImpl
add RepositoryManager into luceneIndexImpl

+import org.apache.logging.log4j.Logger;
+import org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;
+import org.apache.lucene.analysis.standard.StandardAnalyzer;
+import com.gemstone.gemfire.internal.logging.LogService;
+  
+  private static final Logger logger = LogService.getLogger();
+    LuceneIndexImpl index = createIndexRegions(indexName, regionPath);
+    if (index == null) {
+      return null;
+    }
+    for (String field:fields) {
+      index.addSearchableField(field);
+    }
+    // for this API, set index to use the default StandardAnalyzer for each field
+    index.setAnalyzer(null);
+    index.initialize();
+    registerIndex(getUniqueIndexName(indexName, regionPath), index);
+    return index;
+  }
+  
+  private LuceneIndexImpl createIndexRegions(String indexName, String regionPath) {
-      cache.getLogger().info("Data region "+regionPath+" not found");
+      logger.info("Data region "+regionPath+" not found");
-      for (String field:fields) {
-        index.addSearchableField(field);
-        index.addSearchablePDXField(field);
-      }
-      registerIndex(getUniqueIndexName(indexName, regionPath), index);
-      registerIndex(getUniqueIndexName(indexName, regionPath), index);
-    // TODO add fields
-    // TODO Auto-generated method stub
-    return null;
+    LuceneIndexImpl index = createIndexRegions(indexName, regionPath);
+    if (index == null) {
+      return null;
+    }
+    
+    Analyzer analyzer = new PerFieldAnalyzerWrapper(new StandardAnalyzer(), analyzerPerField);
+    for (String field:analyzerPerField.keySet()) {
+      index.addSearchableField(field);
+    }
+    index.setAnalyzer(analyzer);
+    index.initialize();
+    registerIndex(getUniqueIndexName(indexName, regionPath), index);
+    return index;
