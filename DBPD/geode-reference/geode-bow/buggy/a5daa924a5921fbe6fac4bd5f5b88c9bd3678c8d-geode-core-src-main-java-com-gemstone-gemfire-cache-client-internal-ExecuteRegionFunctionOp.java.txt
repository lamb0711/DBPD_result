GEODE-1776: Always read all of the results in ExecuteRegionFunctionOp

Read all of the results from the wire in
ExecuteRegionFunctionOp.processResponse, even if we read an exception as
one of the responses. This ensures that all data is read off the wire.

+            boolean throwServerOp = false;
-                  if (this.functionException == null) {
-                    this.functionException = (FunctionException)result;
-                  }
-                  this.functionException.addException((FunctionException)result);
-                }
-                else if(((FunctionException) result).getCause() instanceof FunctionInvocationTargetException){
-                  if (this.functionException == null) {
-                    this.functionException = ex;
-                  }
-                  this.functionException.addException(ex.getCause());
-                }
-                else if(result instanceof FunctionInvocationTargetException){
-                  if (this.functionException == null) {
-                    this.functionException = new FunctionException((FunctionInvocationTargetException)result);
-                  }
-                  this.functionException.addException(ex);
-                }
-                else if(result instanceof InternalFunctionInvocationTargetException){
-                  if (this.functionException == null) {
-                    this.functionException = new FunctionException((InternalFunctionInvocationTargetException)result);
-                  }
-                  this.functionException.addException(ex);
+                  addFunctionException((FunctionException) result);
-                  if (this.functionException == null) {
-                    this.functionException = ex;
-                  }
-                  this.functionException.addException(ex);
-                }
-                if (isHA) {
-                  executeFunctionResponseMsg.clear();
-                  throw ex;
+                  addFunctionException((FunctionException) result);
-                boolean throwServerOp = false;
-                  
-                  if (isHA) {
-                    if (throwServerOp) {
-                      String s = "While performing a remote " + getOpName();
-                      executeFunctionResponseMsg.clear();
-                      throw new ServerOperationException(s, this.functionException);
-                    } else {
-                       throw this.functionException;
-                    }
-                  }
+
+
+            if (isHA && throwServerOp) {
+              String s = "While performing a remote " + getOpName();
+              throw new ServerOperationException(s, this.functionException);
+            }
+
-              executeFunctionResponseMsg.clear();
-              executeFunctionResponseMsg.clear();
-            executeFunctionResponseMsg.clear();
+    private void addFunctionException(final FunctionException result) {
+      if (this.functionException == null) {
+        this.functionException = result;
+      }
+      this.functionException.addException(result);
+    }
+
