GEODE-5087: send a BatchDestroyOperation for each dropped event at serial primary sender (#1924)


+import org.apache.geode.internal.cache.LocalRegion;
-          basicHandlePrimaryDestroy(gatewayEvent);
+          basicHandlePrimaryDestroy(gatewayEvent.getEventId());
-  protected void basicHandlePrimaryDestroy(final GatewaySenderEventImpl gatewayEvent) {
+  protected boolean basicHandlePrimaryDestroy(final EventID eventId) {
-      return;
+      return false;
-        return;
+        return false;
-      EventWrapper ew = this.unprocessedEvents.remove(gatewayEvent.getEventId());
+      EventWrapper ew = this.unprocessedEvents.remove(eventId);
+        return true;
+    return false;
+
+  public void sendBatchDestroyOperationForDroppedEvent(EntryEventImpl dropEvent, int index) {
+    EntryEventImpl destroyEvent =
+        EntryEventImpl.create((LocalRegion) this.queue.getRegion(), Operation.DESTROY, (long) index,
+            null/* newValue */, null, false, sender.getCache().getMyId());
+    destroyEvent.setEventId(dropEvent.getEventId());
+    destroyEvent.disallowOffHeapValues();
+    destroyEvent.setTailKey(-1L);
+    if (logger.isDebugEnabled()) {
+      logger.debug(
+          "SerialGatewaySenderEventProcessor sends BatchDestroyOperation to secondary for event {}",
+          destroyEvent);
+    }
+
+    try {
+      BatchDestroyOperation op = new BatchDestroyOperation(destroyEvent);
+      op.distribute();
+      if (logger.isDebugEnabled()) {
+        logger.debug("BatchRemovalThread completed destroy of dropped event {}", dropEvent);
+      }
+    } catch (Exception ignore) {
+      if (logger.isDebugEnabled()) {
+        logger.debug(
+            "Exception in sending dropped event could be ignored in order not to interrupt sender starting",
+            ignore);
+      }
+    }
+  }
+
+  @Override
+  protected void registerEventDroppedInPrimaryQueue(EntryEventImpl droppedEvent) {
+    this.getSender().setModifiedEventId(droppedEvent);
+    sendBatchDestroyOperationForDroppedEvent(droppedEvent, -1);
+  }
