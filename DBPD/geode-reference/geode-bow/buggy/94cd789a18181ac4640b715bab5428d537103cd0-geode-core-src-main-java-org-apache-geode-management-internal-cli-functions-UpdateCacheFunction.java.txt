GEODE-6811: refactor MemberStatus in ClusterManagementResult (#3709)

* change memberStatus in ClusterManagementResult to use RealizationResult
+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.management.cli.CliFunction;
+import org.apache.geode.internal.cache.execute.InternalFunction;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.management.api.RealizationResult;
-public class UpdateCacheFunction extends CliFunction<List> {
+public class UpdateCacheFunction implements InternalFunction<List> {
+  private static final Logger logger = LogService.getLogger();
-  public CliFunctionResult executeFunction(FunctionContext<List> context) throws Exception {
+  public void execute(FunctionContext<List> context) {
+    try {
+      context.getResultSender().lastResult(executeFunction(context));
+    } catch (Exception e) {
+      logger.error(e.getMessage(), e);
+      context.getResultSender().lastResult(new RealizationResult()
+          .setSuccess(false)
+          .setMemberName(context.getMemberName())
+          .setMessage(e.getMessage()));
+    }
+  }
+
+  public RealizationResult executeFunction(FunctionContext<List> context) {
+    RealizationResult result = new RealizationResult();
+    result.setMemberName(context.getMemberName());
+
-      return new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
+      return result.setMessage(
-          return new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
+          return result.setMessage(
-        realizer.create(cacheElement, cache);
+        result = realizer.create(cacheElement, cache);
-        realizer.delete(cacheElement, cache);
+        if (!realizer.exists(cacheElement, cache)) {
+          return result.setMessage(
+              "Element with id=" + cacheElement.getId() + " does not exist.");
+        }
+        result = realizer.delete(cacheElement, cache);
-        realizer.update(cacheElement, cache);
+        if (!realizer.exists(cacheElement, cache)) {
+          return result.setSuccess(false).setMessage(
+              "Element with id=" + cacheElement.getId() + " does not exist.");
+        }
+        result = realizer.update(cacheElement, cache);
-    return new CliFunctionResult(context.getMemberName(), CliFunctionResult.StatusState.OK,
-        "success");
+    result.setMemberName(context.getMemberName());
+    return result;
