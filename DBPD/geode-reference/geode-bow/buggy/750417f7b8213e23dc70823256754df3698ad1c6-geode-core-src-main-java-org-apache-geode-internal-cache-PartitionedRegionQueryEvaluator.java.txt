GEODE-4867: Added query time expiration checks. (#1624)

* Along with low memory checks, the query execution time limit is also checked.
+import org.apache.geode.cache.query.QueryExecutionTimeoutException;
-      if (!QueryMonitor.isLowMemory()) {
+      if (!QueryMonitor.isLowMemory() && !this.query.isCanceled()) {
-        String reason =
-            LocalizedStrings.QueryMonitor_LOW_MEMORY_WHILE_GATHERING_RESULTS_FROM_PARTITION_REGION
-                .toLocalizedString();
-        query.setCanceled(true, new QueryExecutionLowMemoryException(reason));
+        if (QueryMonitor.isLowMemory()) {
+          String reason =
+              LocalizedStrings.QueryMonitor_LOW_MEMORY_WHILE_GATHERING_RESULTS_FROM_PARTITION_REGION
+                  .toLocalizedString();
+          query.setCanceled(true, new QueryExecutionLowMemoryException(reason));
+        } else {
+          if (logger.isDebugEnabled()) {
+            logger.debug("query cancelled while gathering results, aborting due to exception "
+                + query.getQueryCanceledException());
+          }
+        }
-      checkLowMemory();
+      checkIfQueryShouldBeCancelled();
-          checkLowMemory();
+          checkIfQueryShouldBeCancelled();
-              checkLowMemory();
+              checkIfQueryShouldBeCancelled();
-  private void checkLowMemory() {
+  private void checkIfQueryShouldBeCancelled() {
+    } else if (query.isCanceled()) {
+      throw query.getQueryCanceledException();
