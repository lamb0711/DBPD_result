GEODE-6384: Create consistent API to retrieve instances of ClusterManagementService (#3191)


- The overall intent of this commit is to provide a consistent means for
  retrieving a ClusterMangementService instance regardless of the
  context you are developing in. Currently, the relevant contexts are:
  1) a Java application that has no access (or need to access) core
  Geode code. 2) a typical Geode client application and 3) server or
  locator-side code.
- Introduces a service provider interface
  (ClusterManagementServiceProviderFactory) whose implementations are
  context dependent. This commit introduces two implementations, namely:
  BasicClusterManagementProviderFactory and
  SmartClusterManagementServiceProviderFactory). The latter is
  incomplete but will be fully supported in the near future.
- The entry point to creating a ClusterManagementService is in
  ClusterManagementServiceProvider - more documentation can be found
  there.

+import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.internal.cache.InternalCache;
-  private static final long serialVersionUID = 1L;
+
+  private static final long serialVersionUID = 1404642539058875565L;
-      String serverBindAddress = config.getServerBindAddress();
-      MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();
+      DistributedMember member =
+          CliUtil.getDistributedMemberByNameOrId(functionContext.getMemberName(),
+              (InternalCache) functionContext.getCache());
+
+      memberInfo.setName(member.getName());
+      memberInfo.setId(member.getId());
+      memberInfo.setHost(member.getHost());
+      memberInfo.setProcessId("" + member.getProcessId());
+
-      memberInfo.setServerBindAddress(serverBindAddress);
+      memberInfo.setServerBindAddress(config.getServerBindAddress());
+      memberInfo.setHttpServicePort(config.getHttpServicePort());
+      memberInfo.setHttpServiceBindAddress(config.getHttpServiceBindAddress());
+      MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();
