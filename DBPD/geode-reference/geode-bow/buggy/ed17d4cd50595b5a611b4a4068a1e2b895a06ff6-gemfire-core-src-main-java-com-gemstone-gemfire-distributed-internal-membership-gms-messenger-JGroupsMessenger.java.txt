GEODE-836: multicast state flush is broken

The Digest from the multicast NAKACK2 protocol is immutable and needs
to be fetched each time it is checked in order to get an up-to-date
digest.  I also added warning and timeout for the method similar to
what's in DistributionAdvisor.waitForCurrentOperations(long) that
guarantee that the wait will terminate.

+    long timeout = services.getConfig().getDistributionConfig().getAckWaitThreshold() * 1000L;
+    long startTime = System.currentTimeMillis();
+    long warnTime = startTime + timeout;
+    long quitTime = warnTime + timeout - 1000L;
+    boolean warned = false;
+    
-    Digest digest = nakack.getDigest(jgSender);
-    if (digest != null) {
-      for (;;) {
-        long[] senderSeqnos = digest.get(jgSender);
-        if (senderSeqnos == null || senderSeqnos[0] >= seqno.longValue()) {
-          break;
-        }
-        Thread.sleep(50);
+    
+    for (;;) {
+      Digest digest = nakack.getDigest(jgSender);
+      if (digest == null) {
+        return;
+      String received = "none";
+      long[] senderSeqnos = digest.get(jgSender);
+      if (senderSeqnos == null || senderSeqnos[0] >= seqno.longValue()) {
+        break;
+      }
+      long now = System.currentTimeMillis();
+      if (!warned && now >= warnTime) {
+        warned = true;
+        if (senderSeqnos != null) {
+          received = String.valueOf(senderSeqnos[0]);
+        }
+        logger.warn("{} seconds have elapsed while waiting for multicast messages from {}.  Received {} but expecting at least {}.",
+            Long.toString((warnTime-startTime)/1000L), sender, received, seqno);
+      }
+      if (now >= quitTime) {
+        throw new GemFireIOException("Multicast operations from " + sender + " did not distribute within " + (now - startTime) + " milliseconds");
+      }
+      Thread.sleep(50);
