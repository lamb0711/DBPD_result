GEODE-1377: Initial move of system properties from private to public

+   *
-  @ConfigAttributeGetter(name=NAME_NAME)
+  @ConfigAttributeGetter(name = NAME_NAME)
-   * @throws IllegalArgumentException if the specified value is not acceptable.
+   *
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
-   *   when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
+   *                                                    when writing to the system's configuration file.
-  @ConfigAttributeSetter(name=NAME_NAME)
+  @ConfigAttributeSetter(name = NAME_NAME)
-  /** The name of the "name" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "name" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=MCAST_PORT_NAME)
+  @ConfigAttributeGetter(name = MCAST_PORT_NAME)
-  @ConfigAttributeSetter(name=MCAST_PORT_NAME)
+  @ConfigAttributeSetter(name = MCAST_PORT_NAME)
-  /** The default value of the "mcastPort" property */
+  /**
+   * The default value of the "mcastPort" property
+   */
-  /** The name of the "mcastPort" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_MCAST_PORT, max=MAX_MCAST_PORT)
+  /**
+   * The name of the "mcastPort" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_MCAST_PORT, max = MAX_MCAST_PORT)
-  /** The default value of the "tcpPort" property */
+  /**
+   * The default value of the "tcpPort" property
+   */
-  /** The name of the "tcpPort" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_TCP_PORT, max=MAX_TCP_PORT)
+  /**
+   * The name of the "tcpPort" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_TCP_PORT, max = MAX_TCP_PORT)
-  /** The name of the "mcastAddress" property */
-  @ConfigAttribute(type=InetAddress.class)
+  /**
+   * The name of the "mcastAddress" property
+   */
+  @ConfigAttribute(type = InetAddress.class)
-  /** The default value of the "mcastAddress" property.
+  /**
+   * The default value of the "mcastAddress" property.
-  /** The default value of the "mcastTtl" property */
+  /**
+   * The default value of the "mcastTtl" property
+   */
-  /** The name of the "mcastTtl" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_MCAST_TTL, max=MAX_MCAST_TTL)
+  /**
+   * The name of the "mcastTtl" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_MCAST_TTL, max = MAX_MCAST_TTL)
-  /** The name of the "bindAddress" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "bindAddress" property
+   */
+  @ConfigAttribute(type = String.class)
-  /** The default value of the "bindAddress" property.
+  /**
+   * The default value of the "bindAddress" property.
-  /** The name of the "serverBindAddress" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "serverBindAddress" property
+   */
+  @ConfigAttribute(type = String.class)
-  /** The default value of the "serverBindAddress" property.
+  /**
+   * The default value of the "serverBindAddress" property.
+   *
-   *  Multiple elements are allowed and must be seperated by a comma.
-   * @throws IllegalArgumentException if the specified value is not acceptable.
+   *              Multiple elements are allowed and must be seperated by a comma.
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
-   *   when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
+   *                                                    when writing to the system's configuration file.
-  /** The name of the "locators" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "locators" property
+   */
+  @ConfigAttribute(type = String.class)
-  /** The default value of the "locators" property */
+  /**
+   * The default value of the "locators" property
+   */
-  @ConfigAttribute(type=Integer.class)
+  @ConfigAttribute(type = Integer.class)
-  
-  
+
+
+   *
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=DEPLOY_WORKING_DIR)
+  @ConfigAttributeGetter(name = DEPLOY_WORKING_DIR)
-  
+
-   * @throws IllegalArgumentException if the specified value is not acceptable.
+   *
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
-   *   when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
+   *                                                    when writing to the system's configuration file.
-  @ConfigAttributeSetter(name=DEPLOY_WORKING_DIR)
+  @ConfigAttributeSetter(name = DEPLOY_WORKING_DIR)
-  
+
-  @ConfigAttribute(type=File.class)
-  String DEPLOY_WORKING_DIR = SystemConfigurationProperties.DEPLOY_WORKING_DIR;
-  
+  @ConfigAttribute(type = File.class)
+  String DEPLOY_WORKING_DIR_NAME = SystemConfigurationProperties.DEPLOY_WORKING_DIR;
+
-   * Default will be the current working directory as determined by 
+   * Default will be the current working directory as determined by
-  
+
-  @ConfigAttributeGetter(name=USER_COMMAND_PACKAGES)
+  @ConfigAttributeGetter(name = USER_COMMAND_PACKAGES)
-  
+
-   * @throws IllegalArgumentException if the specified value is not acceptable.
+   *
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
-   *   when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
+   *                                                    when writing to the system's configuration file.
-  @ConfigAttributeSetter(name=USER_COMMAND_PACKAGES)
+  @ConfigAttributeSetter(name = USER_COMMAND_PACKAGES)
-  
+
-  @ConfigAttribute(type=String.class)
-  String USER_COMMAND_PACKAGES = SystemConfigurationProperties.USER_COMMAND_PACKAGES;
-  
+  @ConfigAttribute(type = String.class)
+  String USER_COMMAND_PACKAGES_NAME = SystemConfigurationProperties.USER_COMMAND_PACKAGES;
+
-   *         out
+   * out
-  @ConfigAttributeGetter(name=LOG_FILE_NAME)
+  @ConfigAttributeGetter(name = LOG_FILE)
+
-   * @throws IllegalArgumentException if the specified value is not acceptable.
+   *
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
-   *   when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
+   *                                                    when writing to the system's configuration file.
-  @ConfigAttributeSetter(name=LOG_FILE_NAME)
+  @ConfigAttributeSetter(name = LOG_FILE)
-  /** The name of the "logFile" property */
-  @ConfigAttribute(type=File.class)
+  /**
+   * The name of the "logFile" property
+   */
+  @ConfigAttribute(type = File.class)
-  @ConfigAttributeGetter(name=LOG_LEVEL_NAME)
+  @ConfigAttributeGetter(name = LOG_LEVEL)
+
-  @ConfigAttributeSetter(name=LOG_LEVEL_NAME)
+  @ConfigAttributeSetter(name = LOG_LEVEL)
-  /** The name of the "logLevel" property */
+  /**
+   * The name of the "logLevel" property
+   */
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=STATISTIC_SAMPLING_ENABLED_NAME)
+  @ConfigAttributeGetter(name = STATISTIC_SAMPLING_ENABLED)
+
-  @ConfigAttributeSetter(name=STATISTIC_SAMPLING_ENABLED_NAME)
+  @ConfigAttributeSetter(name = STATISTIC_SAMPLING_ENABLED)
-  /** The name of the "statisticSamplingEnabled" property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * The name of the "statisticSamplingEnabled" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the "statisticSamplingEnabled" property */
+  /**
+   * The default value of the "statisticSamplingEnabled" property
+   */
-  @ConfigAttributeGetter(name=STATISTIC_SAMPLE_RATE_NAME)
+  @ConfigAttributeGetter(name = STATISTIC_SAMPLE_RATE)
+
-  @ConfigAttributeSetter(name=STATISTIC_SAMPLE_RATE_NAME)
+  @ConfigAttributeSetter(name = STATISTIC_SAMPLE_RATE)
-  /** The name of the "statisticSampleRate" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_STATISTIC_SAMPLE_RATE, max=MAX_STATISTIC_SAMPLE_RATE)
+  /**
+   * The name of the "statisticSampleRate" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_STATISTIC_SAMPLE_RATE, max = MAX_STATISTIC_SAMPLE_RATE)
-  @ConfigAttributeGetter(name=STATISTIC_ARCHIVE_FILE_NAME)
+  @ConfigAttributeGetter(name = STATISTIC_ARCHIVE_FILE)
+
-  @ConfigAttributeSetter(name=STATISTIC_ARCHIVE_FILE_NAME)
+  @ConfigAttributeSetter(name = STATISTIC_ARCHIVE_FILE)
-  /** The name of the "statisticArchiveFile" property */
-  @ConfigAttribute(type=File.class)
+  /**
+   * The name of the "statisticArchiveFile" property
+   */
+  @ConfigAttribute(type = File.class)
-
-  @ConfigAttributeGetter(name=CACHE_XML_FILE_NAME)
+  @ConfigAttributeGetter(name = CACHE_XML_FILE)
+
-  @ConfigAttributeSetter(name=CACHE_XML_FILE_NAME)
+  @ConfigAttributeSetter(name = CACHE_XML_FILE)
-  /** The name of the "cacheXmlFile" property */
-  @ConfigAttribute(type=File.class)
+  /**
+   * The name of the "cacheXmlFile" property
+   */
+  @ConfigAttribute(type = File.class)
-  /** The default value of the "cacheXmlFile" property */
+  /**
+   * The default value of the "cacheXmlFile" property
+   */
-  @ConfigAttributeGetter(name=ACK_WAIT_THRESHOLD_NAME)
+  @ConfigAttributeGetter(name = ACK_WAIT_THRESHOLD)
-     * Setting this value too low will cause spurious alerts.
-     */
-  @ConfigAttributeSetter(name=ACK_WAIT_THRESHOLD_NAME)
+   * Setting this value too low will cause spurious alerts.
+   */
+  @ConfigAttributeSetter(name = ACK_WAIT_THRESHOLD)
-  /** The name of the "ackWaitThreshold" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_ACK_WAIT_THRESHOLD)
+  /**
+   * The name of the "ackWaitThreshold" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_ACK_WAIT_THRESHOLD)
-
-  @ConfigAttributeGetter(name=ACK_SEVERE_ALERT_THRESHOLD_NAME)
+  @ConfigAttributeGetter(name = ACK_SEVERE_ALERT_THRESHOLD)
-     * Setting this value too low will cause spurious forced disconnects.
-     */
-  @ConfigAttributeSetter(name=ACK_SEVERE_ALERT_THRESHOLD_NAME)
+   * Setting this value too low will cause spurious forced disconnects.
+   */
+  @ConfigAttributeSetter(name = ACK_SEVERE_ALERT_THRESHOLD)
-  /** The name of the "ackSevereAlertThreshold" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_ACK_SEVERE_ALERT_THRESHOLD)
+  /**
+   * The name of the "ackSevereAlertThreshold" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_ACK_SEVERE_ALERT_THRESHOLD)
-  @ConfigAttributeGetter(name=ARCHIVE_FILE_SIZE_LIMIT_NAME)
+  @ConfigAttributeGetter(name = ARCHIVE_FILE_SIZE_LIMIT)
+
-  @ConfigAttributeSetter(name=ARCHIVE_FILE_SIZE_LIMIT_NAME)
+  @ConfigAttributeSetter(name = ARCHIVE_FILE_SIZE_LIMIT)
-  /** The name of the "ArchiveFileSizeLimit" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_ARCHIVE_FILE_SIZE_LIMIT, max=MAX_ARCHIVE_FILE_SIZE_LIMIT)
+  /**
+   * The name of the "ArchiveFileSizeLimit" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_ARCHIVE_FILE_SIZE_LIMIT, max = MAX_ARCHIVE_FILE_SIZE_LIMIT)
+
-  @ConfigAttributeGetter(name=ARCHIVE_DISK_SPACE_LIMIT_NAME)
+  @ConfigAttributeGetter(name = ARCHIVE_DISK_SPACE_LIMIT)
+
-  @ConfigAttributeSetter(name=ARCHIVE_DISK_SPACE_LIMIT_NAME)
+  @ConfigAttributeSetter(name = ARCHIVE_DISK_SPACE_LIMIT)
-  /** The name of the "ArchiveDiskSpaceLimit" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_ARCHIVE_DISK_SPACE_LIMIT, max=MAX_ARCHIVE_DISK_SPACE_LIMIT)
+  /**
+   * The name of the "ArchiveDiskSpaceLimit" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_ARCHIVE_DISK_SPACE_LIMIT, max = MAX_ARCHIVE_DISK_SPACE_LIMIT)
+
-  @ConfigAttributeGetter(name=LOG_FILE_SIZE_LIMIT_NAME)
+  @ConfigAttributeGetter(name = LOG_FILE_SIZE_LIMIT)
+
-  @ConfigAttributeSetter(name=LOG_FILE_SIZE_LIMIT_NAME)
+  @ConfigAttributeSetter(name = LOG_FILE_SIZE_LIMIT)
-  /** The name of the "LogFileSizeLimit" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_LOG_FILE_SIZE_LIMIT, max=MAX_LOG_FILE_SIZE_LIMIT)
+  /**
+   * The name of the "LogFileSizeLimit" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_LOG_FILE_SIZE_LIMIT, max = MAX_LOG_FILE_SIZE_LIMIT)
-  @ConfigAttributeGetter(name=LOG_DISK_SPACE_LIMIT_NAME)
+  @ConfigAttributeGetter(name = LOG_DISK_SPACE_LIMIT)
+
-  @ConfigAttributeSetter(name=LOG_DISK_SPACE_LIMIT_NAME)
+  @ConfigAttributeSetter(name = LOG_DISK_SPACE_LIMIT)
-  /** The name of the "LogDiskSpaceLimit" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_LOG_DISK_SPACE_LIMIT, max=MAX_LOG_DISK_SPACE_LIMIT)
+  /**
+   * The name of the "LogDiskSpaceLimit" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_LOG_DISK_SPACE_LIMIT, max = MAX_LOG_DISK_SPACE_LIMIT)
+   *
-  @ConfigAttributeGetter(name=SSL_ENABLED_NAME)
+  @ConfigAttributeGetter(name = SSL_ENABLED)
+   *
-  
-  /** The name of the "SSLEnabled" property 
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_ENABLED_NAME} instead.
+
+  /**
+   * The name of the "SSLEnabled" property
+   *
+   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_ENABLED} instead.
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
+   *
-  @ConfigAttributeSetter(name=SSL_ENABLED_NAME)
+  @ConfigAttributeSetter(name = SSL_ENABLED)
+   *
-  @ConfigAttributeGetter(name=SSL_PROTOCOLS_NAME)
+  @ConfigAttributeGetter(name = SSL_PROTOCOLS)
+   *
-  @ConfigAttributeSetter(name=SSL_PROTOCOLS_NAME)
+  @ConfigAttributeSetter(name = SSL_PROTOCOLS)
+   *
-  /** The name of the "SSLProtocols" property 
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_PROTOCOLS_NAME} instead.
+  /**
+   * The name of the "SSLProtocols" property
+   *
+   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_PROTOCOLS} instead.
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
+   *
-  @ConfigAttributeGetter(name=SSL_CIPHERS_NAME)
+  @ConfigAttributeGetter(name = SSL_CIPHERS)
+   *
-  @ConfigAttributeSetter(name=SSL_CIPHERS_NAME)
+  @ConfigAttributeSetter(name = SSL_CIPHERS)
-   /**
+  /**
+   *
-   String DEFAULT_SSL_CIPHERS = "any";
-  /** The name of the "SSLCiphers" property 
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_CIPHERS_NAME} instead.
+  String DEFAULT_SSL_CIPHERS = "any";
+  /**
+   * The name of the "SSLCiphers" property
+   *
+   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_CIPHERS} instead.
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
+   *
-  @ConfigAttributeGetter(name=SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeGetter(name = SSL_REQUIRE_AUTHENTICATION)
+   *
-  @ConfigAttributeSetter(name=SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeSetter(name = SSL_REQUIRE_AUTHENTICATION)
-   /**
+  /**
+   *
-   boolean DEFAULT_SSL_REQUIRE_AUTHENTICATION = true;
-  /** The name of the "SSLRequireAuthentication" property 
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME} instead.
+  boolean DEFAULT_SSL_REQUIRE_AUTHENTICATION = true;
+  /**
+   * The name of the "SSLRequireAuthentication" property
+   *
+   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_REQUIRE_AUTHENTICATION} instead.
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeGetter(name=CLUSTER_SSL_ENABLED_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_ENABLED)
-   * The default cluster-ssl-enabled state.
-   * <p> Actual value of this constant is <code>false</code>.
-   */
-  boolean DEFAULT_CLUSTER_SSL_ENABLED = false;
-  /** The name of the "ClusterSSLEnabled" property */
-  @ConfigAttribute(type=Boolean.class)
-  String CLUSTER_SSL_ENABLED_NAME = CLUSTER_SSL_ENABLED;
-
-  /**
-  @ConfigAttributeSetter(name=CLUSTER_SSL_ENABLED_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_ENABLED)
+   * The default cluster-ssl-enabled state.
+   * <p> Actual value of this constant is <code>false</code>.
+   */
+  boolean DEFAULT_CLUSTER_SSL_ENABLED = false;
+  /**
+   * The name of the "ClusterSSLEnabled" property
+   */
+  @ConfigAttribute(type = Boolean.class)
+  String CLUSTER_SSL_ENABLED_NAME = CLUSTER_SSL_ENABLED;
+
+  /**
-  @ConfigAttributeGetter(name=CLUSTER_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_PROTOCOLS)
-  @ConfigAttributeSetter(name=CLUSTER_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_PROTOCOLS)
-  /** The name of the "ClusterSSLProtocols" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "ClusterSSLProtocols" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=CLUSTER_SSL_CIPHERS_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_CIPHERS)
-  @ConfigAttributeSetter(name=CLUSTER_SSL_CIPHERS_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_CIPHERS)
-   /**
+  /**
-   String DEFAULT_CLUSTER_SSL_CIPHERS = "any";
-  /** The name of the "ClusterSSLCiphers" property */
-  @ConfigAttribute(type=String.class)
+  String DEFAULT_CLUSTER_SSL_CIPHERS = "any";
+  /**
+   * The name of the "ClusterSSLCiphers" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_REQUIRE_AUTHENTICATION)
-  @ConfigAttributeSetter(name=CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_REQUIRE_AUTHENTICATION)
-   /**
+  /**
-   boolean DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION = true;
-  /** The name of the "ClusterSSLRequireAuthentication" property */
-  @ConfigAttribute(type=Boolean.class)
+  boolean DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION = true;
+  /**
+   * The name of the "ClusterSSLRequireAuthentication" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  
-  @ConfigAttributeGetter(name=CLUSTER_SSL_KEYSTORE_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_KEYSTORE)
-  
+
-  @ConfigAttributeSetter(name=CLUSTER_SSL_KEYSTORE_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_KEYSTORE)
-  
+
-  
-  /** The name of the "ClusterSSLKeyStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ClusterSSLKeyStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=CLUSTER_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_KEYSTORE_TYPE)
-  
+
-  @ConfigAttributeSetter(name=CLUSTER_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_KEYSTORE_TYPE)
-  
+
-  
-  /** The name of the "ClusterSSLKeyStoreType" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ClusterSSLKeyStoreType" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=CLUSTER_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_KEYSTORE_PASSWORD)
-  
+
-  @ConfigAttributeSetter(name=CLUSTER_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_KEYSTORE_PASSWORD)
-  
+
-  
-  /** The name of the "ClusterSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ClusterSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=CLUSTER_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_TRUSTSTORE)
-  
+
-  @ConfigAttributeSetter(name=CLUSTER_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_TRUSTSTORE)
-  
+
-  
-  /** The name of the "ClusterSSLTrustStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ClusterSSLTrustStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = CLUSTER_SSL_TRUSTSTORE_PASSWORD)
-  
+
-  @ConfigAttributeSetter(name=CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = CLUSTER_SSL_TRUSTSTORE_PASSWORD)
+
-  
-  /** The name of the "ClusterSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ClusterSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
-  
-  /** The name of an internal property that specifies a {@link
+
+  /**
+   * The name of an internal property that specifies a {@link
-   *  Set this property with put(), not with setProperty()
+   * Set this property with put(), not with setProperty()
-  public static final String LOG_WRITER_NAME = "log-writer";
+  String LOG_WRITER_NAME = "log-writer";
-  /** The name of an internal property that specifies a 
-   *  a DistributionConfigImpl that the locator is passing
-   *  in to a ds connect.
-   *  Set this property with put(), not with setProperty()
+  /**
+   * The name of an internal property that specifies a
+   * a DistributionConfigImpl that the locator is passing
+   * in to a ds connect.
+   * Set this property with put(), not with setProperty()
-  public static final String DS_CONFIG_NAME = "ds-config";
+  String DS_CONFIG_NAME = "ds-config";
-  
+
-  
+
-  /** The name of an internal property that specifies a
+  /**
+   * The name of an internal property that specifies a
-  @ConfigAttributeGetter(name=SOCKET_LEASE_TIME_NAME)
+  @ConfigAttributeGetter(name = SOCKET_LEASE_TIME)
+
-  @ConfigAttributeSetter(name=SOCKET_LEASE_TIME_NAME)
+  @ConfigAttributeSetter(name = SOCKET_LEASE_TIME)
-
-
-  /** The default value of the "socketLeaseTime" property */
+  /**
+   * The default value of the "socketLeaseTime" property
+   */
-  /** The name of the "socketLeaseTime" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_SOCKET_LEASE_TIME, max=MAX_SOCKET_LEASE_TIME)
+  /**
+   * The name of the "socketLeaseTime" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_SOCKET_LEASE_TIME, max = MAX_SOCKET_LEASE_TIME)
-  @ConfigAttributeGetter(name=SOCKET_BUFFER_SIZE_NAME)
+  @ConfigAttributeGetter(name = SOCKET_BUFFER_SIZE)
+
-  @ConfigAttributeSetter(name=SOCKET_BUFFER_SIZE_NAME)
+  @ConfigAttributeSetter(name = SOCKET_BUFFER_SIZE)
-
-  /** The default value of the "socketBufferSize" property */
+  /**
+   * The default value of the "socketBufferSize" property
+   */
-  /** The name of the "socketBufferSize" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_SOCKET_BUFFER_SIZE, max=MAX_SOCKET_BUFFER_SIZE)
+  /**
+   * The name of the "socketBufferSize" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_SOCKET_BUFFER_SIZE, max = MAX_SOCKET_BUFFER_SIZE)
-
-  @ConfigAttributeGetter(name=MCAST_SEND_BUFFER_SIZE_NAME)
+  @ConfigAttributeGetter(name = MCAST_SEND_BUFFER_SIZE)
-  @ConfigAttributeSetter(name=MCAST_SEND_BUFFER_SIZE_NAME)
+  @ConfigAttributeSetter(name = MCAST_SEND_BUFFER_SIZE)
-
-
-  @ConfigAttribute(type=Integer.class, min=MIN_MCAST_SEND_BUFFER_SIZE)
+  @ConfigAttribute(type = Integer.class, min = MIN_MCAST_SEND_BUFFER_SIZE)
-  @ConfigAttributeGetter(name=MCAST_RECV_BUFFER_SIZE_NAME)
+  @ConfigAttributeGetter(name = MCAST_RECV_BUFFER_SIZE)
-  @ConfigAttributeSetter(name=MCAST_RECV_BUFFER_SIZE_NAME)
+  @ConfigAttributeSetter(name = MCAST_RECV_BUFFER_SIZE)
-
-  @ConfigAttribute(type=Integer.class, min=MIN_MCAST_RECV_BUFFER_SIZE)
+  @ConfigAttribute(type = Integer.class, min = MIN_MCAST_RECV_BUFFER_SIZE)
-
-  @ConfigAttributeGetter(name=MCAST_FLOW_CONTROL_NAME)
+  @ConfigAttributeGetter(name = MCAST_FLOW_CONTROL)
-  @ConfigAttributeSetter(name=MCAST_FLOW_CONTROL_NAME)
+  @ConfigAttributeSetter(name = MCAST_FLOW_CONTROL)
-  @ConfigAttribute(type=FlowControlParams.class)
+  @ConfigAttribute(type = FlowControlParams.class)
-    = new FlowControlParams(1048576, (float)0.25, 5000);
+      = new FlowControlParams(1048576, (float) 0.25, 5000);
-  @ConfigAttributeGetter(name=UDP_FRAGMENT_SIZE_NAME)
+  @ConfigAttributeGetter(name = UDP_FRAGMENT_SIZE)
-  @ConfigAttributeSetter(name=UDP_FRAGMENT_SIZE_NAME)
+  @ConfigAttributeSetter(name = UDP_FRAGMENT_SIZE)
-  /** The minimum allowed udp-fragment-size setting of 1000
-  */
+  /**
+   * The minimum allowed udp-fragment-size setting of 1000
+   */
-  /** The maximum allowed udp-fragment-size setting of 60000
-  */
+  /**
+   * The maximum allowed udp-fragment-size setting of 60000
+   */
-  @ConfigAttribute(type=Integer.class, min=MIN_UDP_FRAGMENT_SIZE, max=MAX_UDP_FRAGMENT_SIZE)
+  @ConfigAttribute(type = Integer.class, min = MIN_UDP_FRAGMENT_SIZE, max = MAX_UDP_FRAGMENT_SIZE)
-
-
-
-  @ConfigAttributeGetter(name=UDP_SEND_BUFFER_SIZE_NAME)
+  @ConfigAttributeGetter(name = UDP_SEND_BUFFER_SIZE)
-  @ConfigAttributeSetter(name=UDP_SEND_BUFFER_SIZE_NAME)
+  @ConfigAttributeSetter(name = UDP_SEND_BUFFER_SIZE)
-  @ConfigAttribute(type=Integer.class, min=MIN_UDP_SEND_BUFFER_SIZE)
+  @ConfigAttribute(type = Integer.class, min = MIN_UDP_SEND_BUFFER_SIZE)
-  @ConfigAttributeGetter(name=UDP_RECV_BUFFER_SIZE_NAME)
+  @ConfigAttributeGetter(name = UDP_RECV_BUFFER_SIZE)
-  @ConfigAttributeSetter(name=UDP_RECV_BUFFER_SIZE_NAME)
+  @ConfigAttributeSetter(name = UDP_RECV_BUFFER_SIZE)
-
-  @ConfigAttribute(type=Integer.class, min=MIN_UDP_RECV_BUFFER_SIZE)
+  @ConfigAttribute(type = Integer.class, min = MIN_UDP_RECV_BUFFER_SIZE)
-  @ConfigAttributeGetter(name=DISABLE_TCP_NAME)
+  @ConfigAttributeGetter(name = DISABLE_TCP)
+
-  @ConfigAttributeSetter(name=DISABLE_TCP_NAME)
+  @ConfigAttributeSetter(name = DISABLE_TCP)
-  /** The name of the corresponding property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * The name of the corresponding property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the corresponding property */
+  /**
+   * The default value of the corresponding property
+   */
-
-  @ConfigAttributeSetter(name=ENABLE_TIME_STATISTICS_NAME)
+  @ConfigAttributeSetter(name = ENABLE_TIME_STATISTICS)
-  @ConfigAttributeGetter(name=ENABLE_TIME_STATISTICS_NAME)
+  @ConfigAttributeGetter(name = ENABLE_TIME_STATISTICS)
-  /** the name of the corresponding property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * the name of the corresponding property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the corresponding property */
+  /**
+   * The default value of the corresponding property
+   */
-
-   * Sets the value for 
-   <a href="../DistributedSystem.html#use-cluster-configuration">use-shared-configuration</a>
+   * Sets the value for
+   * <a href="../DistributedSystem.html#use-cluster-configuration">use-shared-configuration</a>
-  @ConfigAttributeSetter(name=USE_CLUSTER_CONFIGURATION_NAME)
+  @ConfigAttributeSetter(name = USE_CLUSTER_CONFIGURATION)
-  @ConfigAttributeGetter(name=USE_CLUSTER_CONFIGURATION_NAME)
+  @ConfigAttributeGetter(name = USE_CLUSTER_CONFIGURATION)
-  /** the name of the corresponding property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * the name of the corresponding property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the corresponding property */
-  boolean DEFAULT_USE_CLUSTER_CONFIGURATION = true;
-  
-   * Sets the value for 
-   <a href="../DistributedSystem.html#enable-cluster-configuration">enable-cluster-configuration</a>
+   * The default value of the corresponding property
-  @ConfigAttributeSetter(name=ENABLE_CLUSTER_CONFIGURATION_NAME)
+  boolean DEFAULT_USE_CLUSTER_CONFIGURATION = true;
+
+  /**
+   * Sets the value for
+   * <a href="../DistributedSystem.html#enable-cluster-configuration">enable-cluster-configuration</a>
+   */
+  @ConfigAttributeSetter(name = ENABLE_CLUSTER_CONFIGURATION)
-  @ConfigAttributeGetter(name=ENABLE_CLUSTER_CONFIGURATION_NAME)
+  @ConfigAttributeGetter(name = ENABLE_CLUSTER_CONFIGURATION)
-  /** the name of the corresponding property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * the name of the corresponding property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the corresponding property */
+  /**
+   * The default value of the corresponding property
+   */
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
-  
+
-   * Returns the value of 
+   * Returns the value of
-  @ConfigAttributeGetter(name=LOAD_CLUSTER_CONFIG_FROM_DIR_NAME)
+  @ConfigAttributeGetter(name = LOAD_CLUSTER_CONFIGURATION_FROM_DIR)
-  
+
-   * Sets the value of 
+   * Sets the value of
-  @ConfigAttributeSetter(name=LOAD_CLUSTER_CONFIG_FROM_DIR_NAME)
+  @ConfigAttributeSetter(name = LOAD_CLUSTER_CONFIGURATION_FROM_DIR)
-  @ConfigAttribute(type=String.class)
-  String CLUSTER_CONFIGURATION_DIR = SystemConfigurationProperties.CLUSTER_CONFIGURATION_DIR;
+  @ConfigAttribute(type = String.class)
+  String CLUSTER_CONFIGURATION_DIR_NAME = CLUSTER_CONFIGURATION_DIR;
-  @ConfigAttributeGetter(name=CLUSTER_CONFIGURATION_DIR)
+  @ConfigAttributeGetter(name = CLUSTER_CONFIGURATION_DIR)
-  @ConfigAttributeSetter(name=CLUSTER_CONFIGURATION_DIR)
+
+  @ConfigAttributeSetter(name = CLUSTER_CONFIGURATION_DIR)
-  
-  /** Turns on network partition detection */
-  @ConfigAttributeSetter(name=ENABLE_NETWORK_PARTITION_DETECTION_NAME)
+
+  /**
+   * Turns on network partition detection
+   */
+  @ConfigAttributeSetter(name = ENABLE_NETWORK_PARTITION_DETECTION)
+
-  @ConfigAttributeGetter(name=ENABLE_NETWORK_PARTITION_DETECTION_NAME)
+  @ConfigAttributeGetter(name = ENABLE_NETWORK_PARTITION_DETECTION)
-  /** the name of the corresponding property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * the name of the corresponding property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeGetter(name=MEMBER_TIMEOUT_NAME)
+  @ConfigAttributeGetter(name = MEMBER_TIMEOUT)
-  @ConfigAttributeSetter(name=MEMBER_TIMEOUT_NAME)
+  @ConfigAttributeSetter(name = MEMBER_TIMEOUT)
-  /** The minimum member-timeout setting of 1000 milliseconds */
+  /**
+   * The minimum member-timeout setting of 1000 milliseconds
+   */
-  /**The maximum member-timeout setting of 600000 millieseconds */
+  /**
+   * The maximum member-timeout setting of 600000 millieseconds
+   */
-  @ConfigAttribute(type=Integer.class, min=MIN_MEMBER_TIMEOUT, max=MAX_MEMBER_TIMEOUT)
+  @ConfigAttribute(type = Integer.class, min = MIN_MEMBER_TIMEOUT, max = MAX_MEMBER_TIMEOUT)
-  @ConfigAttribute(type=int[].class)
+  @ConfigAttribute(type = int[].class)
-  @ConfigAttributeGetter(name=MEMBERSHIP_PORT_RANGE_NAME)
+  @ConfigAttributeGetter(name = MEMBERSHIP_PORT_RANGE)
-  @ConfigAttributeSetter(name=MEMBERSHIP_PORT_RANGE_NAME)
+  @ConfigAttributeSetter(name = MEMBERSHIP_PORT_RANGE)
-  
+
-  @ConfigAttributeGetter(name=CONSERVE_SOCKETS_NAME)
+  @ConfigAttributeGetter(name = CONSERVE_SOCKETS)
+
-  @ConfigAttributeSetter(name=CONSERVE_SOCKETS_NAME)
+  @ConfigAttributeSetter(name = CONSERVE_SOCKETS)
-  /** The name of the "conserveSockets" property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * The name of the "conserveSockets" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the "conserveSockets" property */
+  /**
+   * The default value of the "conserveSockets" property
+   */
-  @ConfigAttributeGetter(name=ROLES_NAME)
+  @ConfigAttributeGetter(name = ROLES)
+
-  @ConfigAttributeSetter(name=ROLES_NAME)
+  @ConfigAttributeSetter(name = ROLES)
-  /** The name of the "roles" property */
-  @ConfigAttribute(type=String.class)
-  String ROLES_NAME = ROLES;
-
-  /** The default value of the "roles" property */
-  String DEFAULT_ROLES = "";
-
-   * The name of the "max wait time for reconnect" property */
-  @ConfigAttribute(type=Integer.class)
+   * The name of the "roles" property
+   */
+  @ConfigAttribute(type = String.class)
+  String ROLES_NAME = ROLES;
+
+  /**
+   * The default value of the "roles" property
+   */
+  String DEFAULT_ROLES = "";
+
+  /**
+   * The name of the "max wait time for reconnect" property
+   */
+  @ConfigAttribute(type = Integer.class)
-   * */
-  @ConfigAttributeSetter(name=MAX_WAIT_TIME_FOR_RECONNECT_NAME)
+   */
+  @ConfigAttributeSetter(name = MAX_WAIT_TIME_RECONNECT)
-   * */
-  @ConfigAttributeGetter(name=MAX_WAIT_TIME_FOR_RECONNECT_NAME)
+   */
+  @ConfigAttributeGetter(name = MAX_WAIT_TIME_RECONNECT)
-   * */
-  @ConfigAttribute(type=Integer.class)
-  String MAX_NUM_RECONNECT_TRIES = SystemConfigurationProperties.MAX_NUM_RECONNECT_TRIES;
+   */
+  @ConfigAttribute(type = Integer.class)
+  String MAX_NUM_RECONNECT_TRIES_NAME = MAX_NUM_RECONNECT_TRIES;
-   * Default value for MAX_NUM_RECONNECT_TRIES.
+   * Default value for MAX_NUM_RECONNECT_TRIES_NAME.
-   * */
-  @ConfigAttributeSetter(name=MAX_NUM_RECONNECT_TRIES)
+   */
+  @ConfigAttributeSetter(name = MAX_NUM_RECONNECT_TRIES)
-   * */
-  @ConfigAttributeGetter(name=MAX_NUM_RECONNECT_TRIES)
+   */
+  @ConfigAttributeGetter(name = MAX_NUM_RECONNECT_TRIES)
-  @ConfigAttributeGetter(name=ASYNC_DISTRIBUTION_TIMEOUT_NAME)
+  @ConfigAttributeGetter(name = ASYNC_DISTRIBUTION_TIMEOUT)
+
-  @ConfigAttributeSetter(name=ASYNC_DISTRIBUTION_TIMEOUT_NAME)
+  @ConfigAttributeSetter(name = ASYNC_DISTRIBUTION_TIMEOUT)
-  /** The default value of "asyncDistributionTimeout" is <code>0</code>. */
+  /**
+   * The default value of "asyncDistributionTimeout" is <code>0</code>.
+   */
-  /** The minimum value of "asyncDistributionTimeout" is <code>0</code>. */
+  /**
+   * The minimum value of "asyncDistributionTimeout" is <code>0</code>.
+   */
-  /** The maximum value of "asyncDistributionTimeout" is <code>60000</code>. */
+  /**
+   * The maximum value of "asyncDistributionTimeout" is <code>60000</code>.
+   */
-  /** The name of the "asyncDistributionTimeout" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_ASYNC_DISTRIBUTION_TIMEOUT, max=MAX_ASYNC_DISTRIBUTION_TIMEOUT)
+  /**
+   * The name of the "asyncDistributionTimeout" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_ASYNC_DISTRIBUTION_TIMEOUT, max = MAX_ASYNC_DISTRIBUTION_TIMEOUT)
+
-  @ConfigAttributeGetter(name=ASYNC_QUEUE_TIMEOUT_NAME)
+  @ConfigAttributeGetter(name = ASYNC_QUEUE_TIMEOUT)
+
-  @ConfigAttributeSetter(name=ASYNC_QUEUE_TIMEOUT_NAME)
+  @ConfigAttributeSetter(name = ASYNC_QUEUE_TIMEOUT)
-  /** The default value of "asyncQueueTimeout" is <code>60000</code>. */
+  /**
+   * The default value of "asyncQueueTimeout" is <code>60000</code>.
+   */
-  /** The minimum value of "asyncQueueTimeout" is <code>0</code>. */
+  /**
+   * The minimum value of "asyncQueueTimeout" is <code>0</code>.
+   */
-  /** The maximum value of "asyncQueueTimeout" is <code>86400000</code>. */
+  /**
+   * The maximum value of "asyncQueueTimeout" is <code>86400000</code>.
+   */
-  /** The name of the "asyncQueueTimeout" property */
-  @ConfigAttribute(type=Integer.class, min=MIN_ASYNC_QUEUE_TIMEOUT, max=MAX_ASYNC_QUEUE_TIMEOUT)
+  /**
+   * The name of the "asyncQueueTimeout" property
+   */
+  @ConfigAttribute(type = Integer.class, min = MIN_ASYNC_QUEUE_TIMEOUT, max = MAX_ASYNC_QUEUE_TIMEOUT)
+
-  @ConfigAttributeGetter(name=ASYNC_MAX_QUEUE_SIZE_NAME)
+  @ConfigAttributeGetter(name = ASYNC_MAX_QUEUE_SIZE)
+
-  @ConfigAttributeSetter(name=ASYNC_MAX_QUEUE_SIZE_NAME)
+  @ConfigAttributeSetter(name = ASYNC_MAX_QUEUE_SIZE)
-  /** The default value of "asyncMaxQueueSize" is <code>8</code>. */
+  /**
+   * The default value of "asyncMaxQueueSize" is <code>8</code>.
+   */
-  /** The minimum value of "asyncMaxQueueSize" is <code>0</code>. */
+  /**
+   * The minimum value of "asyncMaxQueueSize" is <code>0</code>.
+   */
-  /** The maximum value of "asyncMaxQueueSize" is <code>1024</code>. */
+  /**
+   * The maximum value of "asyncMaxQueueSize" is <code>1024</code>.
+   */
-  public static final String ASYNC_MAX_QUEUE_SIZE_NAME = "async-max-queue-size";
+  String ASYNC_MAX_QUEUE_SIZE_NAME = "async-max-queue-size";
-  public static final String CLIENT_CONFLATION_PROP_NAME = "conflate-events";
+  String CLIENT_CONFLATION_PROP_NAME = "conflate-events";
-  public static final String CLIENT_CONFLATION_PROP_VALUE_DEFAULT = "server";
+  String CLIENT_CONFLATION_PROP_VALUE_DEFAULT = "server";
-  public static final String CLIENT_CONFLATION_PROP_VALUE_ON = "true";
+  String CLIENT_CONFLATION_PROP_VALUE_ON = "true";
-  public static final String CLIENT_CONFLATION_PROP_VALUE_OFF = "false";
-  
-     
+  String CLIENT_CONFLATION_PROP_VALUE_OFF = "false";
+
+
-  @ConfigAttributeGetter(name=DISTRIBUTED_TRANSACTIONS_NAME)
+  @ConfigAttributeGetter(name = DISTRIBUTED_TRANSACTIONS)
-  @ConfigAttributeSetter(name=DISTRIBUTED_TRANSACTIONS_NAME)
+  @ConfigAttributeSetter(name = DISTRIBUTED_TRANSACTIONS)
-  
+
-  @ConfigAttributeGetter(name=CLIENT_CONFLATION_PROP_NAME)
+  @ConfigAttributeGetter(name = CONFLATE_EVENTS)
+
-  @ConfigAttributeSetter(name=CLIENT_CONFLATION_PROP_NAME)
+  @ConfigAttributeSetter(name = CONFLATE_EVENTS)
+
-  @ConfigAttributeGetter(name=DURABLE_CLIENT_ID_NAME)
+  @ConfigAttributeGetter(name = DURABLE_CLIENT_ID)
-  @ConfigAttributeSetter(name=DURABLE_CLIENT_ID_NAME)
+  @ConfigAttributeSetter(name = DURABLE_CLIENT_ID)
-  /** The name of the "durableClientId" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "durableClientId" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=DURABLE_CLIENT_TIMEOUT_NAME)
+  @ConfigAttributeGetter(name = DURABLE_CLIENT_TIMEOUT)
-  @ConfigAttributeSetter(name=DURABLE_CLIENT_TIMEOUT_NAME)
+  @ConfigAttributeSetter(name = DURABLE_CLIENT_TIMEOUT)
-  /** The name of the "durableClientTimeout" property */
-  @ConfigAttribute(type=Integer.class)
+  /**
+   * The name of the "durableClientTimeout" property
+   */
+  @ConfigAttribute(type = Integer.class)
-  @ConfigAttributeGetter(name=SECURITY_CLIENT_AUTH_INIT_NAME)
+  @ConfigAttributeGetter(name = SECURITY_CLIENT_AUTH_INIT)
-  @ConfigAttributeSetter(name=SECURITY_CLIENT_AUTH_INIT_NAME)
+  @ConfigAttributeSetter(name = SECURITY_CLIENT_AUTH_INIT)
-  /** The name of user defined method name for "security-client-auth-init" property*/
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of user defined method name for "security-client-auth-init" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_CLIENT_AUTHENTICATOR_NAME)
+  @ConfigAttributeGetter(name = SECURITY_CLIENT_AUTHENTICATOR_NAME)
-  @ConfigAttributeSetter(name=SECURITY_CLIENT_AUTHENTICATOR_NAME)
+  @ConfigAttributeSetter(name = SECURITY_CLIENT_AUTHENTICATOR_NAME)
-  /** The name of factory method for "security-client-authenticator" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of factory method for "security-client-authenticator" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_CLIENT_DHALGO_NAME)
+  @ConfigAttributeGetter(name = SECURITY_CLIENT_DHALGO_NAME)
-  @ConfigAttributeSetter(name=SECURITY_CLIENT_DHALGO_NAME)
+  @ConfigAttributeSetter(name = SECURITY_CLIENT_DHALGO_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_PEER_AUTH_INIT_NAME)
+  @ConfigAttributeGetter(name = SECURITY_PEER_AUTH_INIT_NAME)
-  @ConfigAttributeSetter(name=SECURITY_PEER_AUTH_INIT_NAME)
+  @ConfigAttributeSetter(name = SECURITY_PEER_AUTH_INIT_NAME)
-  /** The name of user module for "security-peer-auth-init" property*/
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of user module for "security-peer-auth-init" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_PEER_AUTHENTICATOR_NAME)
+  @ConfigAttributeGetter(name = SECURITY_PEER_AUTHENTICATOR_NAME)
-  @ConfigAttributeSetter(name=SECURITY_PEER_AUTHENTICATOR_NAME)
+  @ConfigAttributeSetter(name = SECURITY_PEER_AUTHENTICATOR_NAME)
-  /** The name of user defined method for "security-peer-authenticator" property*/
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of user defined method for "security-peer-authenticator" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_CLIENT_ACCESSOR_NAME)
+  @ConfigAttributeGetter(name = SECURITY_CLIENT_ACCESSOR_NAME)
-  @ConfigAttributeSetter(name=SECURITY_CLIENT_ACCESSOR_NAME)
+  @ConfigAttributeSetter(name = SECURITY_CLIENT_ACCESSOR_NAME)
-  /** The name of the factory method for "security-client-accessor" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the factory method for "security-client-accessor" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_CLIENT_ACCESSOR_PP_NAME)
+  @ConfigAttributeGetter(name = SECURITY_CLIENT_ACCESSOR_PP_NAME)
-  @ConfigAttributeSetter(name=SECURITY_CLIENT_ACCESSOR_PP_NAME)
+  @ConfigAttributeSetter(name = SECURITY_CLIENT_ACCESSOR_PP_NAME)
-  /** The name of the factory method for "security-client-accessor-pp" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the factory method for "security-client-accessor-pp" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_LOG_LEVEL_NAME)
+  @ConfigAttributeGetter(name = SECURITY_LOG_LEVEL_NAME)
-   * @param level
-   *                the new security log-level
+   * @param level the new security log-level
-  @ConfigAttributeSetter(name=SECURITY_LOG_LEVEL_NAME)
+  @ConfigAttributeSetter(name = SECURITY_LOG_LEVEL_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SECURITY_LOG_FILE_NAME)
+  @ConfigAttributeGetter(name = SECURITY_LOG_FILE_NAME)
-   * @throws IllegalArgumentException
-   *                 if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.UnmodifiableException
-   *                 if this attribute can not be modified.
-   * @throws com.gemstone.gemfire.GemFireIOException
-   *                 if the set failure is caused by an error when writing to
-   *                 the system's configuration file.
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws com.gemstone.gemfire.UnmodifiableException if this attribute can not be modified.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error when writing to
+   *                                                    the system's configuration file.
-  @ConfigAttributeSetter(name=SECURITY_LOG_FILE_NAME)
+  @ConfigAttributeSetter(name = SECURITY_LOG_FILE_NAME)
-  @ConfigAttribute(type=File.class)
+  @ConfigAttribute(type = File.class)
-  @ConfigAttributeGetter(name=SECURITY_PEER_VERIFYMEMBER_TIMEOUT_NAME)
+  @ConfigAttributeGetter(name = SECURITY_PEER_VERIFYMEMBER_TIMEOUT_NAME)
+   *
-  @ConfigAttributeSetter(name=SECURITY_PEER_VERIFYMEMBER_TIMEOUT_NAME)
+  @ConfigAttributeSetter(name = SECURITY_PEER_VERIFYMEMBER_TIMEOUT_NAME)
-
-  /** The name of the peer membership check timeout property */
-  @ConfigAttribute(type=Integer.class, min=0, max=MAX_SECURITY_PEER_VERIFYMEMBER_TIMEOUT)
+  /**
+   * The name of the peer membership check timeout property
+   */
+  @ConfigAttribute(type = Integer.class, min = 0, max = MAX_SECURITY_PEER_VERIFYMEMBER_TIMEOUT)
+
-  /** For the "security-" prefixed properties */
+  /**
+   * For the "security-" prefixed properties
+   */
-  /** The prefix used for Gemfire properties set through java system properties */
+  /**
+   * The prefix used for Gemfire properties set through java system properties
+   */
-  /** For the "custom-" prefixed properties */
+  /**
+   * For the "custom-" prefixed properties
+   */
-  /** For ssl keystore and trust store properties */
+  /**
+   * For ssl keystore and trust store properties
+   */
-
-  /** Suffix for ssl keystore and trust store properties for JMX*/
+  /**
+   * Suffix for ssl keystore and trust store properties for JMX
+   */
-  /** For security properties starting with sysprop in gfsecurity.properties file */
+  /**
+   * For security properties starting with sysprop in gfsecurity.properties file
+   */
-   /**
-    * The property decides whether to remove unresponsive client from the server.
-    */
-   @ConfigAttribute(type=Boolean.class)
-   String REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME = REMOVE_UNRESPONSIVE_CLIENT;
+  /**
+   * The property decides whether to remove unresponsive client from the server.
+   */
+  @ConfigAttribute(type = Boolean.class)
+  String REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME = REMOVE_UNRESPONSIVE_CLIENT;
-   /**
-    * The default value of remove unresponsive client is false.
-    */
-   boolean DEFAULT_REMOVE_UNRESPONSIVE_CLIENT = false;
-   /**
-    * Returns the value of the <a
-    * href="../DistributedSystem.html#remove-unresponsive-client">"remove-unresponsive-client"</a>
-    * property.
-    * @since GemFire 6.0
-    */
-   @ConfigAttributeGetter(name=REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME)
-   boolean getRemoveUnresponsiveClient();
-   /**
-    * Sets the value of the <a
-    * href="../DistributedSystem.html#remove-unresponsive-client">"remove-unresponsive-client"</a>
-    * property.
-    * @since GemFire 6.0
-    */
-   @ConfigAttributeSetter(name=REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME)
-   void setRemoveUnresponsiveClient(boolean value);
+  /**
+   * The default value of remove unresponsive client is false.
+   */
+  boolean DEFAULT_REMOVE_UNRESPONSIVE_CLIENT = false;
-   /** @since GemFire 6.3 */
-   @ConfigAttribute(type=Boolean.class)
-   String DELTA_PROPAGATION_PROP_NAME = DELTA_PROPAGATION;
+  /**
+   * Returns the value of the <a
+   * href="../DistributedSystem.html#remove-unresponsive-client">"remove-unresponsive-client"</a>
+   * property.
+   *
+   * @since GemFire 6.0
+   */
+  @ConfigAttributeGetter(name = REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME)
+  boolean getRemoveUnresponsiveClient();
+
+  /**
+   * Sets the value of the <a
+   * href="../DistributedSystem.html#remove-unresponsive-client">"remove-unresponsive-client"</a>
+   * property.
+   *
+   * @since GemFire 6.0
+   */
+  @ConfigAttributeSetter(name = REMOVE_UNRESPONSIVE_CLIENT_PROP_NAME)
+  void setRemoveUnresponsiveClient(boolean value);
+
+  /**
+   * @since GemFire 6.3
+   */
+  @ConfigAttribute(type = Boolean.class)
+  String DELTA_PROPAGATION_PROP_NAME = DELTA_PROPAGATION;
-   /**
-    * Sets the value of the <a
-    * href="../DistributedSystem.html#delta-propagation">"delta-propagation"</a>
-    * property.
-    * @since GemFire 6.3
-    */
-   @ConfigAttributeSetter(name=DELTA_PROPAGATION_PROP_NAME)
-   void setDeltaPropagation(boolean value);
+  /**
+   * Sets the value of the <a
+   * href="../DistributedSystem.html#delta-propagation">"delta-propagation"</a>
+   * property.
+   *
+   * @since GemFire 6.3
+   */
+  @ConfigAttributeSetter(name = DELTA_PROPAGATION_PROP_NAME)
+  void setDeltaPropagation(boolean value);
-   /**
-    * @since GemFire 6.6
-    */
-   @ConfigAttribute(type=Integer.class)
-   String DISTRIBUTED_SYSTEM_ID_NAME = DISTRIBUTED_SYSTEM_ID;
+  /**
+   * @since GemFire 6.6
+   */
+  @ConfigAttribute(type = Integer.class)
+  String DISTRIBUTED_SYSTEM_ID_NAME = DISTRIBUTED_SYSTEM_ID;
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-   
-   /**
-    * @since GemFire 6.6
-    */
-   @ConfigAttributeSetter(name=DISTRIBUTED_SYSTEM_ID_NAME)
-   void setDistributedSystemId(int distributedSystemId);
-  @ConfigAttributeSetter(name=REDUNDANCY_ZONE_NAME)
+  /**
+   * @since GemFire 6.6
+   */
+  @ConfigAttributeSetter(name = DISTRIBUTED_SYSTEM_ID_NAME)
+  void setDistributedSystemId(int distributedSystemId);
+
+  @ConfigAttributeSetter(name = REDUNDANCY_ZONE_NAME)
-   
-   /**
-    * @since GemFire 6.6
-    */
-   @ConfigAttributeGetter(name=DISTRIBUTED_SYSTEM_ID_NAME)
-   int getDistributedSystemId();
-  @ConfigAttributeGetter(name=REDUNDANCY_ZONE_NAME)
+  /**
+   * @since GemFire 6.6
+   */
+  @ConfigAttributeGetter(name = DISTRIBUTED_SYSTEM_ID_NAME)
+  int getDistributedSystemId();
+
+  @ConfigAttributeGetter(name = REDUNDANCY_ZONE_NAME)
-   
-   /**
-    * @since GemFire 6.6.2
-    */
-   void setSSLProperty(String attName, String attValue);
-   
-   /**
-    * @since GemFire 6.6.2
-    */
-   Properties getSSLProperties();
+
+  /**
+   * @since GemFire 6.6.2
+   */
+  void setSSLProperty(String attName, String attValue);
+
+  /**
+   * @since GemFire 6.6.2
+   */
+  Properties getSSLProperties();
-   /**
-    * @since GemFire 8.0
-    */
-   Properties getJmxSSLProperties();
-   /**
-    * @since GemFire 6.6
-    */
-   @ConfigAttribute(type=Boolean.class)
-   String ENFORCE_UNIQUE_HOST_NAME = ENFORE_UNIQUE_HOST;
-   /** Using the system property to set the default here to retain backwards compatibility
-    * with customers that are already using this system property.
-    */
-   boolean DEFAULT_ENFORCE_UNIQUE_HOST = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "EnforceUniqueHostStorageAllocation");
+  /**
+   * @since GemFire 8.0
+   */
+  Properties getJmxSSLProperties();
-  @ConfigAttributeSetter(name=ENFORCE_UNIQUE_HOST_NAME)
+  /**
+   * @since GemFire 6.6
+   */
+  @ConfigAttribute(type = Boolean.class)
+  String ENFORCE_UNIQUE_HOST_NAME = ENFORE_UNIQUE_HOST;
+  /**
+   * Using the system property to set the default here to retain backwards compatibility
+   * with customers that are already using this system property.
+   */
+  boolean DEFAULT_ENFORCE_UNIQUE_HOST = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "EnforceUniqueHostStorageAllocation");
+
+  @ConfigAttributeSetter(name = ENFORCE_UNIQUE_HOST_NAME)
-  @ConfigAttributeGetter(name=ENFORCE_UNIQUE_HOST_NAME)
+  @ConfigAttributeGetter(name = ENFORCE_UNIQUE_HOST_NAME)
+  /**
+   * Returns the value of the <a
+   * href="../DistributedSystem.html#name">"groups"</a> property
+   * <p> The default value is: {@link #DEFAULT_GROUPS}.
+   *
+   * @return the value of the property
+   * @since GemFire 7.0
+   */
+  @ConfigAttributeGetter(name = GROUPS_NAME)
+  String getGroups();
-   /**
-    * Returns the value of the <a
-    * href="../DistributedSystem.html#name">"groups"</a> property
-    * <p> The default value is: {@link #DEFAULT_GROUPS}.
-    * @return the value of the property
-    * @since GemFire 7.0
-    */
-   @ConfigAttributeGetter(name=GROUPS_NAME)
-   String getGroups();
-   /**
-    * Sets the groups gemfire property.
-    * <p> The groups can not be changed while the system is running.
-    * @throws IllegalArgumentException if the specified value is not acceptable.
-    * @throws com.gemstone.gemfire.UnmodifiableException if this attribute can not be modified.
-    * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
-    *   when writing to the system's configuration file.
-    * @since GemFire 7.0
-    */
-   @ConfigAttributeSetter(name=GROUPS_NAME)
-   void setGroups(String value);
+  /**
+   * Sets the groups gemfire property.
+   * <p> The groups can not be changed while the system is running.
+   *
+   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws com.gemstone.gemfire.UnmodifiableException if this attribute can not be modified.
+   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
+   *                                                    when writing to the system's configuration file.
+   * @since GemFire 7.0
+   */
+  @ConfigAttributeSetter(name = GROUPS_NAME)
+  void setGroups(String value);
-   /** The name of the "groups" property 
-    * @since GemFire 7.0
-    */
-   @ConfigAttribute(type=String.class)
-   String GROUPS_NAME = GROUPS;
-   /**
-    * The default groups.
-    * <p> Actual value of this constant is <code>""</code>.
-    * @since GemFire 7.0
-    */
-   String DEFAULT_GROUPS = "";
+  /**
+   * The name of the "groups" property
+   *
+   * @since GemFire 7.0
+   */
+  @ConfigAttribute(type = String.class)
+  String GROUPS_NAME = GROUPS;
+  /**
+   * The default groups.
+   * <p> Actual value of this constant is <code>""</code>.
+   *
+   * @since GemFire 7.0
+   */
+  String DEFAULT_GROUPS = "";
-   /** Any cleanup required before closing the distributed system */
-   void close();
+  /**
+   * Any cleanup required before closing the distributed system
+   */
+  void close();
-  @ConfigAttributeSetter(name=REMOTE_LOCATORS_NAME)
+  @ConfigAttributeSetter(name = REMOTE_LOCATORS_NAME)
-  @ConfigAttributeGetter(name=REMOTE_LOCATORS_NAME)
+
+  @ConfigAttributeGetter(name = REMOTE_LOCATORS_NAME)
-  /** The name of the "remote-locators" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "remote-locators" property
+   */
+  @ConfigAttribute(type = String.class)
-  /** The default value of the "remote-locators" property */
+  /**
+   * The default value of the "remote-locators" property
+   */
-  @ConfigAttributeGetter(name=JMX_MANAGER_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_NAME)
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_START_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_START_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_START_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_START_NAME)
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_PORT_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_PORT_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_PORT_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_PORT_NAME)
-  @ConfigAttribute(type=Integer.class, min=0, max=65535)
+  @ConfigAttribute(type = Integer.class, min = 0, max = 65535)
-  
-  /** @deprecated as of 8.0 use {@link #getJmxManagerSSLEnabled} instead.*/
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_NAME)
+
+  /**
+   * @deprecated as of 8.0 use {@link #getJmxManagerSSLEnabled} instead.
+   */
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_NAME)
-  /** @deprecated as of 8.0 use {@link #setJmxManagerSSLEnabled} instead.*/
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_NAME)
+
+  /**
+   * @deprecated as of 8.0 use {@link #setJmxManagerSSLEnabled} instead.
+   */
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_NAME)
-  /** @deprecated as of 8.0 use {@link #JMX_MANAGER_SSL_ENABLED_NAME} instead.*/
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * @deprecated as of 8.0 use {@link #JMX_MANAGER_SSL_ENABLED_NAME} instead.
+   */
+  @ConfigAttribute(type = Boolean.class)
-  /** @deprecated as of 8.0 use {@link #DEFAULT_JMX_MANAGER_SSL_ENABLED} instead.*/
+  /**
+   * @deprecated as of 8.0 use {@link #DEFAULT_JMX_MANAGER_SSL_ENABLED} instead.
+   */
-  
+
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_ENABLED_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_ENABLED_NAME)
-  /** The name of the "CacheJmxManagerSSLEnabled" property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * The name of the "CacheJmxManagerSSLEnabled" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_ENABLED_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_ENABLED_NAME)
+  /**
+   * Returns the value of the <a
+   * href="../DistributedSystem.html#off-heap-memory-size">"off-heap-memory-size"</a>
+   * property.
+   * @since Geode 1.0
+   */
+  @ConfigAttributeGetter(name = OFF_HEAP_MEMORY_SIZE_NAME)
+  String getOffHeapMemorySize();
-   * Returns the value of the <a 
-   * href="../DistributedSystem.html#off-heap-memory-size">"off-heap-memory-size"</a> 
+   * Sets the value of the <a
+   * href="../DistributedSystem.html#off-heap-memory-size">"off-heap-memory-size"</a>
-  @ConfigAttributeGetter(name=OFF_HEAP_MEMORY_SIZE_NAME)
-  String getOffHeapMemorySize();
-  /**
-   * Sets the value of the <a 
-   * href="../DistributedSystem.html#off-heap-memory-size">"off-heap-memory-size"</a> 
-   * property.
-   * @since Geode 1.0
-   */
-  @ConfigAttributeSetter(name=OFF_HEAP_MEMORY_SIZE_NAME)
+  @ConfigAttributeSetter(name = OFF_HEAP_MEMORY_SIZE_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  /** 
-   * The default <a 
+  /**
+   * The default <a
-
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_PROTOCOLS_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_PROTOCOLS_NAME)
-  /** The name of the "CacheJmxManagerSSLProtocols" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "CacheJmxManagerSSLProtocols" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_CIPHERS_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_CIPHERS_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_CIPHERS_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_CIPHERS_NAME)
-   /**
+  /**
-   String DEFAULT_JMX_MANAGER_SSL_CIPHERS = "any";
-  /** The name of the "CacheJmxManagerSSLCiphers" property */
-  @ConfigAttribute(type=String.class)
+  String DEFAULT_JMX_MANAGER_SSL_CIPHERS = "any";
+  /**
+   * The name of the "CacheJmxManagerSSLCiphers" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION_NAME)
-   /**
+  /**
-   boolean DEFAULT_JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION = true;
-  /** The name of the "CacheJmxManagerSSLRequireAuthentication" property */
-  @ConfigAttribute(type=Boolean.class)
+  boolean DEFAULT_JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION = true;
+  /**
+   * The name of the "CacheJmxManagerSSLRequireAuthentication" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_KEYSTORE_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_KEYSTORE_NAME)
-  
+
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_KEYSTORE_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_KEYSTORE_NAME)
-  
+
-  
-  /** The name of the "CacheJmxManagerSSLKeyStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "CacheJmxManagerSSLKeyStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME)
-  
+
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME)
-  
+
-  
-  /** The name of the "CacheJmxManagerSSLKeyStoreType" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "CacheJmxManagerSSLKeyStoreType" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME)
-  
+
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME)
-  
+
-  
-  /** The name of the "CacheJmxManagerSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "CacheJmxManagerSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_TRUSTSTORE_NAME)
-  
+
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_TRUSTSTORE_NAME)
-  
+
-  
-  /** The name of the "CacheJmxManagerSSLTrustStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "CacheJmxManagerSSLTrustStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME)
-  
+
-  @ConfigAttributeSetter(name=JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME)
+
-  
-  /** The name of the "JmxManagerSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "JmxManagerSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-
-  @ConfigAttributeGetter(name=JMX_MANAGER_BIND_ADDRESS_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_BIND_ADDRESS_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_BIND_ADDRESS_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_BIND_ADDRESS_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_HOSTNAME_FOR_CLIENTS_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_HOSTNAME_FOR_CLIENTS_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_HOSTNAME_FOR_CLIENTS_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_HOSTNAME_FOR_CLIENTS_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_PASSWORD_FILE_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_PASSWORD_FILE_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_PASSWORD_FILE_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_PASSWORD_FILE_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=JMX_MANAGER_ACCESS_FILE_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_ACCESS_FILE_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_ACCESS_FILE_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_ACCESS_FILE_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  
+
+   *
-  @ConfigAttributeGetter(name=JMX_MANAGER_HTTP_PORT_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_HTTP_PORT_NAME)
-  
+
+   *
-   * @deprecated as of 8.0 use {@link #setHttpServicePort(int)} instead.               
+   * @deprecated as of 8.0 use {@link #setHttpServicePort(int)} instead.
-  @ConfigAttributeSetter(name=JMX_MANAGER_HTTP_PORT_NAME)
+  @ConfigAttributeSetter(name = JMX_MANAGER_HTTP_PORT_NAME)
+   *
-  @ConfigAttribute(type=Integer.class, min=0, max=65535)
+  @ConfigAttribute(type = Integer.class, min = 0, max = 65535)
-  
+
+   *
-  @ConfigAttributeGetter(name=JMX_MANAGER_UPDATE_RATE_NAME)
+  @ConfigAttributeGetter(name = JMX_MANAGER_UPDATE_RATE_NAME)
-  @ConfigAttributeSetter(name=JMX_MANAGER_UPDATE_RATE_NAME)
+
+  @ConfigAttributeSetter(name = JMX_MANAGER_UPDATE_RATE_NAME)
-  @ConfigAttribute(type=Integer.class, min=MIN_JMX_MANAGER_UPDATE_RATE, max=MAX_JMX_MANAGER_UPDATE_RATE)
+  @ConfigAttribute(type = Integer.class, min = MIN_JMX_MANAGER_UPDATE_RATE, max = MAX_JMX_MANAGER_UPDATE_RATE)
+   *
-  @ConfigAttributeGetter(name=MEMCACHED_PORT_NAME)
+  @ConfigAttributeGetter(name = MEMCACHED_PORT_NAME)
-  @ConfigAttributeSetter(name=MEMCACHED_PORT_NAME)
+
+  @ConfigAttributeSetter(name = MEMCACHED_PORT_NAME)
-  @ConfigAttribute(type=Integer.class, min=0, max=65535)
+  @ConfigAttribute(type = Integer.class, min = 0, max = 65535)
+   *
-  @ConfigAttributeGetter(name=MEMCACHED_PROTOCOL_NAME)
+  @ConfigAttributeGetter(name = MEMCACHED_PROTOCOL_NAME)
-  @ConfigAttributeSetter(name=MEMCACHED_PROTOCOL_NAME)
+
+  @ConfigAttributeSetter(name = MEMCACHED_PROTOCOL_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  
+
+   *
-  @ConfigAttributeGetter(name=MEMCACHED_BIND_ADDRESS_NAME)
+  @ConfigAttributeGetter(name = MEMCACHED_BIND_ADDRESS_NAME)
-  @ConfigAttributeSetter(name=MEMCACHED_BIND_ADDRESS_NAME)
+
+  @ConfigAttributeSetter(name = MEMCACHED_BIND_ADDRESS_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  
+
+   *
-  @ConfigAttributeGetter(name=REDIS_PORT_NAME)
+  @ConfigAttributeGetter(name = REDIS_PORT_NAME)
-  @ConfigAttributeSetter(name=REDIS_PORT_NAME)
+
+  @ConfigAttributeSetter(name = REDIS_PORT_NAME)
-  @ConfigAttribute(type=Integer.class, min=0, max=65535)
+  @ConfigAttribute(type = Integer.class, min = 0, max = 65535)
+   *
-  @ConfigAttributeGetter(name=REDIS_BIND_ADDRESS_NAME)
+  @ConfigAttributeGetter(name = REDIS_BIND_ADDRESS_NAME)
-  @ConfigAttributeSetter(name=REDIS_BIND_ADDRESS_NAME)
+
+  @ConfigAttributeSetter(name = REDIS_BIND_ADDRESS_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  
+
+   *
-  @ConfigAttributeGetter(name=REDIS_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = REDIS_PASSWORD_NAME)
-  @ConfigAttributeSetter(name=REDIS_PASSWORD_NAME)
+
+  @ConfigAttributeSetter(name = REDIS_PASSWORD_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-
-  
+
+   *
-  @ConfigAttributeGetter(name=HTTP_SERVICE_PORT_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_PORT_NAME)
-  
+
+   *
-  @ConfigAttributeSetter(name=HTTP_SERVICE_PORT_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_PORT_NAME)
-  
+
-  @ConfigAttribute(type=Integer.class, min=0, max=65535)
+  @ConfigAttribute(type = Integer.class, min = 0, max = 65535)
-  
+
-  
+
+   *
-  @ConfigAttributeGetter(name=HTTP_SERVICE_BIND_ADDRESS_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_BIND_ADDRESS_NAME)
-  
+
+   *
-  @ConfigAttributeSetter(name=HTTP_SERVICE_BIND_ADDRESS_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_BIND_ADDRESS_NAME)
-  
-  /** 
+
+  /**
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  
+
-  
-  
+
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_ENABLED_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_ENABLED_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_ENABLED_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_ENABLED_NAME)
+
-  
-  /** The name of the "HttpServiceSSLEnabled" property */
-  @ConfigAttribute(type=Boolean.class)
+
+  /**
+   * The name of the "HttpServiceSSLEnabled" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION_NAME)
+
-  * The default http-service-ssl-require-authentication value.
-  * <p> Actual value of this constant is <code>true</code>.
-  */
+   * The default http-service-ssl-require-authentication value.
+   * <p> Actual value of this constant is <code>true</code>.
+   */
-  
-  /** The name of the "HttpServiceSSLRequireAuthentication" property */
-  @ConfigAttribute(type=Boolean.class)
+
+  /**
+   * The name of the "HttpServiceSSLRequireAuthentication" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_PROTOCOLS_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_PROTOCOLS_NAME)
+
-  
-  /** The name of the "HttpServiceSSLProtocols" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceSSLProtocols" property
+   */
+  @ConfigAttribute(type = String.class)
-  
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_CIPHERS_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_CIPHERS_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_CIPHERS_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_CIPHERS_NAME)
+
-  
-  /** The name of the "HttpServiceSSLCiphers" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceSSLCiphers" property
+   */
+  @ConfigAttribute(type = String.class)
-  
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_KEYSTORE_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_KEYSTORE_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_KEYSTORE_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_KEYSTORE_NAME)
+
-  
-  /** The name of the "HttpServiceSSLKeyStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceSSLKeyStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME)
+
-  
-  /** The name of the "HttpServiceSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME)
+
-  
-  /** The name of the "HttpServiceKeyStoreType" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceKeyStoreType" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_TRUSTSTORE_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_TRUSTSTORE_NAME)
+
-  
-  /** The name of the "HttpServiceTrustStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceTrustStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
-  
+
-  @ConfigAttributeGetter(name=HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME)
+
-  @ConfigAttributeSetter(name=HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME)
+
-  
-  /** The name of the "HttpServiceTrustStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "HttpServiceTrustStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-
+  
+
+   *
-  @ConfigAttributeGetter(name=START_DEV_REST_API_NAME)
+  @ConfigAttributeGetter(name = START_DEV_REST_API_NAME)
-  
+
+   *
-  @ConfigAttributeSetter(name=START_DEV_REST_API_NAME)
+  @ConfigAttributeSetter(name = START_DEV_REST_API_NAME)
-  
-  /** 
+
+  /**
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
-  
+
-  
+
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
-  /** The default value of the corresponding property */
+  /**
+   * The default value of the corresponding property
+   */
-  
+
-  @ConfigAttributeGetter(name=DISABLE_AUTO_RECONNECT_NAME)
+  @ConfigAttributeGetter(name = DISABLE_AUTO_RECONNECT_NAME)
+   *
-  @ConfigAttributeSetter(name=DISABLE_AUTO_RECONNECT_NAME)
+  @ConfigAttributeSetter(name = DISABLE_AUTO_RECONNECT_NAME)
-
+  
-  @ConfigAttributeGetter(name=SERVER_SSL_ENABLED_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_ENABLED_NAME)
-  /** The name of the "ServerSSLEnabled" property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * The name of the "ServerSSLEnabled" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeSetter(name=SERVER_SSL_ENABLED_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_ENABLED_NAME)
-  @ConfigAttributeGetter(name=SERVER_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_PROTOCOLS_NAME)
-  @ConfigAttributeSetter(name=SERVER_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_PROTOCOLS_NAME)
-  /** The name of the "ServerSSLProtocols" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "ServerSSLProtocols" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SERVER_SSL_CIPHERS_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_CIPHERS_NAME)
-  @ConfigAttributeSetter(name=SERVER_SSL_CIPHERS_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_CIPHERS_NAME)
-   /**
+  /**
-   String DEFAULT_SERVER_SSL_CIPHERS = "any";
-  /** The name of the "ServerSSLCiphers" property */
-  @ConfigAttribute(type=String.class)
+  String DEFAULT_SERVER_SSL_CIPHERS = "any";
+  /**
+   * The name of the "ServerSSLCiphers" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=SERVER_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_REQUIRE_AUTHENTICATION_NAME)
-  @ConfigAttributeSetter(name=SERVER_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_REQUIRE_AUTHENTICATION_NAME)
-   /**
+  /**
-   boolean DEFAULT_SERVER_SSL_REQUIRE_AUTHENTICATION = true;
-  /** The name of the "ServerSSLRequireAuthentication" property */
-  @ConfigAttribute(type=Boolean.class)
+  boolean DEFAULT_SERVER_SSL_REQUIRE_AUTHENTICATION = true;
+  /**
+   * The name of the "ServerSSLRequireAuthentication" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  
-  @ConfigAttributeGetter(name=SERVER_SSL_KEYSTORE_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_KEYSTORE_NAME)
-  
+
-  @ConfigAttributeSetter(name=SERVER_SSL_KEYSTORE_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_KEYSTORE_NAME)
-  
+
-  
-  /** The name of the "ServerSSLKeyStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ServerSSLKeyStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=SERVER_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_KEYSTORE_TYPE_NAME)
-  
+
-  @ConfigAttributeSetter(name=SERVER_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_KEYSTORE_TYPE_NAME)
-  
+
-  
-  /** The name of the "ServerSSLKeyStoreType" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ServerSSLKeyStoreType" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=SERVER_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_KEYSTORE_PASSWORD_NAME)
-  
+
-  @ConfigAttributeSetter(name=SERVER_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_KEYSTORE_PASSWORD_NAME)
-  
+
-  
-  /** The name of the "ServerSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ServerSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=SERVER_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_TRUSTSTORE_NAME)
-  
+
-  @ConfigAttributeSetter(name=SERVER_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_TRUSTSTORE_NAME)
-  
+
-  
-  /** The name of the "ServerSSLTrustStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ServerSSLTrustStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=SERVER_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = SERVER_SSL_TRUSTSTORE_PASSWORD_NAME)
-  
+
-  @ConfigAttributeSetter(name=SERVER_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = SERVER_SSL_TRUSTSTORE_PASSWORD_NAME)
+
-  
-  /** The name of the "ServerSSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "ServerSSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=GATEWAY_SSL_ENABLED_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_ENABLED_NAME)
-  /** The name of the "GatewaySSLEnabled" property */
-  @ConfigAttribute(type=Boolean.class)
+  /**
+   * The name of the "GatewaySSLEnabled" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  @ConfigAttributeSetter(name=GATEWAY_SSL_ENABLED_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_ENABLED_NAME)
-  @ConfigAttributeGetter(name=GATEWAY_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_PROTOCOLS_NAME)
-  @ConfigAttributeSetter(name=GATEWAY_SSL_PROTOCOLS_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_PROTOCOLS_NAME)
-  /** The name of the "GatewaySSLProtocols" property */
-  @ConfigAttribute(type=String.class)
+  /**
+   * The name of the "GatewaySSLProtocols" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=GATEWAY_SSL_CIPHERS_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_CIPHERS_NAME)
-  @ConfigAttributeSetter(name=GATEWAY_SSL_CIPHERS_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_CIPHERS_NAME)
-   /**
+  /**
-   String DEFAULT_GATEWAY_SSL_CIPHERS = "any";
-  /** The name of the "GatewaySSLCiphers" property */
-  @ConfigAttribute(type=String.class)
+  String DEFAULT_GATEWAY_SSL_CIPHERS = "any";
+  /**
+   * The name of the "GatewaySSLCiphers" property
+   */
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeGetter(name=GATEWAY_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_REQUIRE_AUTHENTICATION_NAME)
-  @ConfigAttributeSetter(name=GATEWAY_SSL_REQUIRE_AUTHENTICATION_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_REQUIRE_AUTHENTICATION_NAME)
-   /**
+  /**
-   boolean DEFAULT_GATEWAY_SSL_REQUIRE_AUTHENTICATION = true;
-  /** The name of the "GatewaySSLRequireAuthentication" property */
-  @ConfigAttribute(type=Boolean.class)
+  boolean DEFAULT_GATEWAY_SSL_REQUIRE_AUTHENTICATION = true;
+  /**
+   * The name of the "GatewaySSLRequireAuthentication" property
+   */
+  @ConfigAttribute(type = Boolean.class)
-  
-  @ConfigAttributeGetter(name=GATEWAY_SSL_KEYSTORE_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_KEYSTORE_NAME)
-  
+
-  @ConfigAttributeSetter(name=GATEWAY_SSL_KEYSTORE_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_KEYSTORE_NAME)
-  
+
-  
-  /** The name of the "GatewaySSLKeyStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "GatewaySSLKeyStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=GATEWAY_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_KEYSTORE_TYPE_NAME)
-  
+
-  @ConfigAttributeSetter(name=GATEWAY_SSL_KEYSTORE_TYPE_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_KEYSTORE_TYPE_NAME)
-  
+
-  
-  /** The name of the "GatewaySSLKeyStoreType" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "GatewaySSLKeyStoreType" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=GATEWAY_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_KEYSTORE_PASSWORD_NAME)
-  
+
-  @ConfigAttributeSetter(name=GATEWAY_SSL_KEYSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_KEYSTORE_PASSWORD_NAME)
-  
+
-  
-  /** The name of the "GatewaySSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "GatewaySSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=GATEWAY_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_TRUSTSTORE_NAME)
-  
+
-  @ConfigAttributeSetter(name=GATEWAY_SSL_TRUSTSTORE_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_TRUSTSTORE_NAME)
-  
+
-  
-  /** The name of the "GatewaySSLTrustStore" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "GatewaySSLTrustStore" property
+   */
+  @ConfigAttribute(type = String.class)
-  
+
-  @ConfigAttributeGetter(name=GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeGetter(name = GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME)
-  
+
-  @ConfigAttributeSetter(name=GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME)
+  @ConfigAttributeSetter(name = GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME)
+
-  
-  /** The name of the "GatewaySSLKeyStorePassword" property */
-  @ConfigAttribute(type=String.class)
+
+  /**
+   * The name of the "GatewaySSLKeyStorePassword" property
+   */
+  @ConfigAttribute(type = String.class)
- 
-  @ConfigAttribute(type=Boolean.class)
+  @ConfigAttribute(type = Boolean.class)
+
-  @ConfigAttributeGetter(name=LOCK_MEMORY_NAME)
+  @ConfigAttributeGetter(name = LOCK_MEMORY_NAME)
+
+   *
-  @ConfigAttributeSetter(name=LOCK_MEMORY_NAME)
+  @ConfigAttributeSetter(name = LOCK_MEMORY_NAME)
-  @ConfigAttribute(type=String.class)
+  @ConfigAttribute(type = String.class)
-  @ConfigAttributeSetter(name= SECURITY_SHIRO_INIT_NAME)
+  @ConfigAttributeSetter(name = SECURITY_SHIRO_INIT_NAME)
-  @ConfigAttributeGetter(name= SECURITY_SHIRO_INIT_NAME)
-  String getShiroInit();
+  @ConfigAttributeGetter(name = SECURITY_SHIRO_INIT_NAME)
+  String getShiroInit();
-  static String[] init(){
+
+  static String[] init() {
-    for(Field field:DistributionConfig.class.getDeclaredFields()) {
+    for (Field field : DistributionConfig.class.getDeclaredFields()) {
-    for(Method method:DistributionConfig.class.getDeclaredMethods()){
-      if(method.isAnnotationPresent(ConfigAttributeGetter.class)){
+    for (Method method : DistributionConfig.class.getDeclaredMethods()) {
+      if (method.isAnnotationPresent(ConfigAttributeGetter.class)) {
-      }
-      else if(method.isAnnotationPresent(ConfigAttributeSetter.class)){
+      } else if (method.isAnnotationPresent(ConfigAttributeSetter.class)) {
