GEODE-7799: Distribute rebalance status to other locators (#4692)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>

-import java.util.Date;
-import java.util.UUID;
-import java.util.concurrent.ExecutorService;
-import org.apache.geode.management.internal.operation.OperationHistoryManager.OperationInstance;
-  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationInstance<A, V> submit(
+  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationState<A, V> submit(
-    String opId = UUID.randomUUID().toString();
-
-    CompletableFuture<V> future =
-        CompletableFuture.supplyAsync(() -> performer.apply(cache, op), executor);
+    String opId = historyManager.recordStart(op);
-    OperationInstance<A, V> inst = new OperationInstance<>(future, opId, op, new Date());
+    CompletableFuture.supplyAsync(() -> performer.apply(cache, op), executor)
+        .whenComplete((result, exception) -> {
+          Throwable cause = exception == null ? null : exception.getCause();
+          historyManager.recordEnd(opId, result, cause);
+        });
-    // save the Future so we can check on it later
-    return historyManager.save(inst);
+    return historyManager.get(opId);
-    Class<? extends ClusterManagementOperation> aClass = op.getClass();
-
-    if (op instanceof TaggedWithOperator
-        && ClusterManagementOperation.class.isAssignableFrom(aClass.getSuperclass())) {
-      aClass = (Class<? extends ClusterManagementOperation>) aClass.getSuperclass();
-    }
-
-    return performers.get(aClass);
+    return performers.get(op.getClass());
-  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationInstance<A, V> getOperationInstance(
+  public <A extends ClusterManagementOperation<V>, V extends OperationResult> OperationState<A, V> get(
-    return historyManager.getOperationInstance(opId);
+    return historyManager.get(opId);
-  public <A extends ClusterManagementOperation<V>, V extends OperationResult> List<OperationInstance<A, V>> listOperationInstances(
+  public <A extends ClusterManagementOperation<V>, V extends OperationResult> List<OperationState<A, V>> list(
-    return historyManager.listOperationInstances(opType);
+    return historyManager.list(opType);
-  public void close() {
-    if (executor instanceof ExecutorService) {
-      ((ExecutorService) executor).shutdownNow();
-    }
-  }
+  public void close() {}
