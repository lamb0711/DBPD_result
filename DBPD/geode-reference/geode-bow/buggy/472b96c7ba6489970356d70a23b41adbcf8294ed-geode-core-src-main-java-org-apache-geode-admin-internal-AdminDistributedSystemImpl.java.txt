GEODE-3719: Improve invocations of disk store backups (#853)

* GEODE-3719: Improve invocations of disk store backups

  * Standardize pattern for invoking a backup and the result returned
+import org.apache.geode.internal.cache.BackupUtil;
+
-import java.text.SimpleDateFormat;
-    BackupStatus status = null;
-    if (BackupDataStoreHelper.obtainLock(dm)) {
-      try {
-        Set<PersistentID> missingMembers = getMissingPersistentMembers(dm);
-        Set recipients = dm.getOtherDistributionManagerIds();
-
-        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
-        targetDir = new File(targetDir, format.format(new Date()));
-        BackupDataStoreResult result =
-            BackupDataStoreHelper.backupAllMembers(dm, recipients, targetDir, baselineDir);
-
-        // It's possible that when calling getMissingPersistentMembers, some members are
-        // still creating/recovering regions, and at FinishBackupRequest.send, the
-        // regions at the members are ready. Logically, since the members in successfulMembers
-        // should override the previous missingMembers
-        for (Set<PersistentID> onlineMembersIds : result.getSuccessfulMembers().values()) {
-          missingMembers.removeAll(onlineMembersIds);
-        }
-
-        result.getExistingDataStores().keySet().removeAll(result.getSuccessfulMembers().keySet());
-        for (Set<PersistentID> lostMembersIds : result.getExistingDataStores().values()) {
-          missingMembers.addAll(lostMembersIds);
-        }
-
-        status = new BackupStatusImpl(result.getSuccessfulMembers(), missingMembers);
-      } finally {
-        BackupDataStoreHelper.releaseLock(dm);
-      }
-    } else {
-      throw new AdminException(
-          LocalizedStrings.DistributedSystem_BACKUP_ALREADY_IN_PROGRESS.toLocalizedString());
-    }
-    return status;
+    return (org.apache.geode.admin.BackupStatus) BackupUtil.backupAllMembers(dm, targetDir,
+        baselineDir);
