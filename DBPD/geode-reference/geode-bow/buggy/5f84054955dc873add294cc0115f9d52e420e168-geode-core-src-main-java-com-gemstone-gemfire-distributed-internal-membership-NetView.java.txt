GEODE-1726 Clean up compilation warnings in new GMS

+import java.util.stream.*;
-import com.gemstone.gemfire.internal.logging.LogService;
+@SuppressWarnings("SynchronizeOnNonFinalField")
-    members = new ArrayList<InternalDistributedMember>(4);
+    members = new ArrayList<>(4);
-    members = new ArrayList<InternalDistributedMember>(4);
+    members = new ArrayList<>(4);
-    this.members = new ArrayList<InternalDistributedMember>(members);
+    this.members = new ArrayList<>(members);
-  // legacy method for JGMM
+  /**
+   * Test method
+   * @param size   size of the view, used for presizing collections
+   * @param viewId the ID of the view
+   */
-    members = new ArrayList<InternalDistributedMember>(size);
-    this.hashedMembers = new HashSet<InternalDistributedMember>();
+    members = new ArrayList<>(size);
+    this.hashedMembers = new HashSet<>();
-   * @param other
-   * @param viewId
-    this.members = new ArrayList<InternalDistributedMember>(other.members);
-    this.hashedMembers = new HashSet<InternalDistributedMember>(other.members);
+    this.members = new ArrayList<>(other.members);
+    this.hashedMembers = new HashSet<>(other.members);
-    this.shutdownMembers = new HashSet<InternalDistributedMember>(other.shutdownMembers);
-    this.crashedMembers = new HashSet<InternalDistributedMember>(other.crashedMembers);
+    this.shutdownMembers = new HashSet<>(other.shutdownMembers);
+    this.crashedMembers = new HashSet<>(other.crashedMembers);
-    this.hashedMembers = new HashSet<InternalDistributedMember>(mbrs);
+    this.hashedMembers = new HashSet<>(mbrs);
-   * @param otherView
-    List<InternalDistributedMember> result = new ArrayList<InternalDistributedMember>(members);
+    List<InternalDistributedMember> result = new ArrayList<>(members);
-    List<InternalDistributedMember> result = new ArrayList<InternalDistributedMember>(5);
-    for (InternalDistributedMember mbr : this.members) {
-      if (mbr.getVmViewId() == this.viewId) {
-        result.add(mbr);
-      }
-    }
+    List<InternalDistributedMember> result = new ArrayList<>(5);
+    result.addAll(this.members.stream().filter(mbr -> mbr.getVmViewId() 
+                                                      == this.viewId).collect(Collectors.toList()));
-  public void addShutdownMembers(Set<InternalDistributedMember> mbr) {
-    this.shutdownMembers.addAll(mbr);
-  }
-
-    for (InternalDistributedMember mbr: ids) {
-      remove(mbr);
-    }
+    ids.forEach(this::remove);
+    assert mbr instanceof InternalDistributedMember;
-   * @param localAddress
+   * @param localAddress the address of this member
-    List<InternalDistributedMember> results = new ArrayList<InternalDistributedMember>();
-    List<InternalDistributedMember> notPreferredCoordinatorList = new ArrayList<InternalDistributedMember>();
+    List<InternalDistributedMember> results = new ArrayList<>();
+    List<InternalDistributedMember> notPreferredCoordinatorList = new ArrayList<>();
-    for (InternalDistributedMember mbr : this.crashedMembers) {
-      if ((mbr.getVmKind() != DistributionManager.ADMIN_ONLY_DM_TYPE)) {
-        if (oldView == null || oldView.contains(mbr)) {
-          result.add(mbr);
-        }
-      }
-    }
+    result.addAll(this.crashedMembers.stream()
+                                     .filter(mbr -> (mbr.getVmKind() != DistributionManager.ADMIN_ONLY_DM_TYPE))
+                                     .filter(mbr -> oldView == null || oldView.contains(mbr))
+                                     .collect(Collectors.toList()));
-  public synchronized boolean equals(Object arg0) {
-    if (arg0 == this) {
+  public synchronized boolean equals(Object other) {
+    if (other == this) {
-    if (!(arg0 instanceof NetView)) {
+    if (!(other instanceof NetView)) {
-    return this.members.equals(((NetView) arg0).getMembers());
+    return this.members.equals(((NetView) other).getMembers());
-    this.hashedMembers = new HashSet<InternalDistributedMember>(members);
+    assert members != null;
+    this.hashedMembers = new HashSet<>(members);
