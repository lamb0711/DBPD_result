GEODE-1571: use constructor instead of static method to create security-manager and post-processor

* use security-post-processor to specify the new PostProcessor
* use constructor instead of static method to create security-manager and post-processor
* fix tests
* This closes #198

-import com.gemstone.gemfire.GemFireConfigException;
-import com.gemstone.gemfire.GemFireIOException;
-import com.gemstone.gemfire.distributed.DistributedSystem;
-import com.gemstone.gemfire.internal.ConfigSource;
-import com.gemstone.gemfire.internal.SocketCreator;
-import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
-import com.gemstone.gemfire.internal.process.ProcessLauncherContext;
-import com.gemstone.gemfire.memcached.GemFireMemcachedServer;
-import org.apache.geode.redis.GeodeRedisServer;
-
+import org.apache.geode.redis.GeodeRedisServer;
+
+import com.gemstone.gemfire.GemFireConfigException;
+import com.gemstone.gemfire.GemFireIOException;
+import com.gemstone.gemfire.distributed.DistributedSystem;
+import com.gemstone.gemfire.internal.ConfigSource;
+import com.gemstone.gemfire.internal.SocketCreator;
+import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
+import com.gemstone.gemfire.internal.process.ProcessLauncherContext;
+import com.gemstone.gemfire.memcached.GemFireMemcachedServer;
+
-  /** The security manager method name*/
+  /** The security manager class name*/
+  /** The post processor class name*/
+  private String postProcessor = DEFAULT_SECURITY_POST_PROCESSOR;
+
+    this.postProcessor = other.getPostProcessor();
+  public String getPostProcessor() {
+    return postProcessor;
+  }
+
+  public void setPostProcessor(String value) {
+    postProcessor = (String) checkAttribute(SECURITY_POST_PROCESSOR, value);
+  }
+
+    if (postProcessor == null) {
+      if (other.postProcessor != null)
+        return false;
+    } else if (!postProcessor
+      .equals(other.postProcessor))
+      return false;
+             + ((postProcessor == null) ? 0
+                  : postProcessor.hashCode());
+    result = prime
+             * result
