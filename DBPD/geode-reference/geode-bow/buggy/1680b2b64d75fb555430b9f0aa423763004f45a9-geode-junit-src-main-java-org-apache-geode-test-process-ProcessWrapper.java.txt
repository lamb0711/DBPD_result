GEODE-4240: Fixup DeprecatedCacheServerLauncherIntegrationTest (#3645)

* Use GeodeAwaitility timeout
* Specify HTTP_SERVICE_PORT=0
* Use ConfigurationProperties constants
* Cleanup process arguments to reduce redundancy
* Cleanup various IDE warnings

+import org.apache.geode.test.awaitility.GeodeAwaitility;
-  private static final long PROCESS_TIMEOUT_MILLIS = 10 * 60 * 1000L; // 10 minutes
+  private static final long PROCESS_TIMEOUT_MILLIS = GeodeAwaitility.getTimeout().getValueInMS();
-        fail("Timed out waiting for output \"" + patternString + "\" after " + timeoutMillis
-            + " ms. Output: " + new OutputFormatter(this.allLines));
+        fail("Timed out waiting for output \"" + patternString + "\" after " + timeoutMillis +
+            " ms from process \"" + toString(process) + "\" in \"" + this + "\". Output: " +
+            new OutputFormatter(allLines));
+  private String toString(Process process) {
+    StringBuilder sb = new StringBuilder(process.getClass().getSimpleName());
+    sb.append("@").append(System.identityHashCode(this)).append("{");
+    sb.append("alive=").append(process.isAlive());
+    sb.append("}");
+    return sb.toString();
+  }
+
-      int code = this.process.waitFor();
+      boolean exited = process.waitFor(PROCESS_TIMEOUT_MILLIS, TimeUnit.MILLISECONDS);
-        this.exitValue.set(code);
-        this.stopped = true;
+        this.exitValue.set(exited ? process.exitValue() : 0);
+        this.stopped = exited;
-    final StringBuilder sb = new StringBuilder(getClass().getSimpleName());
+    StringBuilder sb = new StringBuilder(getClass().getSimpleName());
-    sb.append(this.mainClass);
+    sb.append("mainClass=").append(mainClass).append(", ");
+    sb.append("jvmArguments=").append(Arrays.toString(jvmArguments)).append(", ");
+    sb.append("mainArguments=").append(Arrays.toString(mainArguments));
