GEODE-1927: add support for old GemFire remote sites (WAN)

This adds a new JAR and associated cache service to Geode.  The service
and associated changes to Geode protect the server from receiving
com.gemstone.gemfire packaged objects, translating them to their org.apache.geode
counterparts.

The service is called OldClientSupportService and the new jar is
geode-old-client-support.jar.  Though it's called "OldClient" this will
also protect the WAN gateways.

Several Geode exception classes did not have serialVersionUIDs.  Apparently
folks thought that abstract superclasses did not need these but this is not
the case.  I've generated UIDs based on GemFire 8.2.1 classes and put
them in place in Geode's classes.

+import static com.sun.corba.se.impl.util.RepositoryId.cache;
+
-  protected static void writeChunkedException(Message origMsg, Throwable e,
+  protected static void writeChunkedException(Message origMsg, Throwable exception,
+    Throwable e = getClientException(servConn, exception);
+  
+  private static Throwable getClientException(ServerConnection servConn, Throwable e) {
+    if (cache instanceof InternalCache) {
+      InternalCache cache = (InternalCache) servConn.getCache();
+      OldClientSupportService svc = cache.getService(OldClientSupportService.class);
+      if (svc != null) {
+        return svc.getThrowable(e, servConn.getClientVersion());
+      }
+    }
+    return e;
+  }
+    Throwable theException = getClientException(servConn, e);
-      String msg = e.getMessage();
+      String msg = theException.getMessage();
-        msg = e.toString();
+        msg = theException.toString();
-    errorMsg.addObjPart(e);
-    errorMsg.addStringPart(getExceptionTrace(e));
+    errorMsg.addObjPart(theException);
+    errorMsg.addStringPart(getExceptionTrace(theException));
-      Throwable e, boolean isSevere, ServerConnection servConn)
+      Throwable exception, boolean isSevere, ServerConnection servConn)
+    Throwable e = getClientException(servConn, exception);
-      int messageType, String message, ServerConnection servConn, Throwable e)
+      int messageType, String message, ServerConnection servConn, Throwable exception)
+    Throwable e = getClientException(servConn, exception);
