GEODE-5843 ReconnectDUnitTest.testReconnectWithRequiredRoleRegained is being ignored

Two problems have been addressed:
  First, the recursive reconnect logic in InternalDistributedSystem was
  broken.  After recursion created a new cache the higher up reconnect()
  method did not handle things correctly and called things like
  createAndStartCacheServers() on the defunct cache and notifying
  reconnect-listeners that the defunct DistributedSystem had been
  successfully created.  The test for
  reconnecting after role-loss was also messed up and needed to have
  its end conditions changed a bit.

  Second, the execution of role-loss actions was being done under a
  synchronization on the distribution advisor.  That was periodically
  causing a deadlock if we receive an update for the distribution advisor.

This closes #2588

-            new Object[] {reconnectAttemptCounter});
+            reconnectAttemptCounter);
-        int savNumOfTries = reconnectAttemptCounter;
+        int saveNumberOfTries = reconnectAttemptCounter;
-          reconnectAttemptCounter = savNumOfTries;
+          reconnectAttemptCounter = saveNumberOfTries;
-              createAndStartCacheServers(cacheServerCreation, cache);
-
-              if (cache.getCachePerfStats().getReliableRegionsMissing() == 0) {
-                reconnectAttemptCounter = 0;
-              } else {
-                // this try failed. The new cache will call reconnect again
+              if (!cache.isClosed()) {
+                createAndStartCacheServers(cacheServerCreation, cache);
+                if (cache.getCachePerfStats().getReliableRegionsMissing() == 0) {
+                  reconnectAttemptCounter = 0;
+                }
+
+              // If this reconnect is for required-roles the algorithm is recursive and we
+              // shouldn't retry at this level
+              if (!forcedDisconnect) {
+                break;
+              }
-
-        notifyReconnectListeners(this, this.reconnectDS, false);
+        if (reconnectDS.isConnected()) {
+          notifyReconnectListeners(this, this.reconnectDS, false);
+        }
-    } else {
+    } else if (reconnectDS != null && reconnectDS.isConnected()) {
