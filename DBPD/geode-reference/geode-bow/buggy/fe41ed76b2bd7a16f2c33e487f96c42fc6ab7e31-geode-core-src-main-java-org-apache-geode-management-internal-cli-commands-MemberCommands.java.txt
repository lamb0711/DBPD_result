GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.cache.Cache;
+import org.springframework.shell.core.CommandMarker;
+import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
+import org.apache.geode.internal.cache.InternalCache;
-import org.springframework.shell.core.CommandMarker;
-import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
-/***
- *
- *
+/**
+
-      Cache cache = CacheFactory.getAnyInstance();
+      InternalCache cache = getCache();
+  private InternalCache getCache() {
+    return (InternalCache) CacheFactory.getAnyInstance();
+  }
+
-        // Abhishek - This information should be available through the MBeans too. We might not need
+        // This information should be available through the MBeans too. We might not need
-        // Sourabh - Yes, but then the command is subject to Mbean availability, which would be
+
+        // Yes, but then the command is subject to Mbean availability, which would be
-          {
-            String offHeapMemorySize = memberInformation.getOffHeapMemorySize();
-            if (offHeapMemorySize != null && !offHeapMemorySize.isEmpty()) {
-              section.addData("Off Heap Size", offHeapMemorySize);
-            }
+
+          String offHeapMemorySize = memberInformation.getOffHeapMemorySize();
+          if (offHeapMemorySize != null && !offHeapMemorySize.isEmpty()) {
+            section.addData("Off Heap Size", offHeapMemorySize);
+
