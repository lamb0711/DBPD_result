Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public InvalidatePartitionedRegionMessage() {
-  }
+  public InvalidatePartitionedRegionMessage() {}
-  public InvalidatePartitionedRegionMessage(Set recipients, Object callbackArg,
-      PartitionedRegion r, ReplyProcessor21 processor) {
+  public InvalidatePartitionedRegionMessage(Set recipients, Object callbackArg, PartitionedRegion r,
+      ReplyProcessor21 processor) {
-    ReplyProcessor21 response = 
-          new ReplyProcessor21(r.getSystem(), recipients);
+    ReplyProcessor21 response = new ReplyProcessor21(r.getSystem(), recipients);
-  /* (non-Javadoc)
-   * @see org.apache.geode.internal.cache.partitioned.PartitionMessage#operateOnPartitionedRegion(org.apache.geode.distributed.internal.DistributionManager, org.apache.geode.internal.cache.PartitionedRegion, long)
+  /*
+   * (non-Javadoc)
+   * 
+   * @see
+   * org.apache.geode.internal.cache.partitioned.PartitionMessage#operateOnPartitionedRegion(org.
+   * apache.geode.distributed.internal.DistributionManager,
+   * org.apache.geode.internal.cache.PartitionedRegion, long)
-  protected boolean operateOnPartitionedRegion(DistributionManager dm,
-      PartitionedRegion pr, long startTime) throws CacheException,
-      QueryException, ForceReattemptException, InterruptedException {
-    
-    RegionEventImpl event = new RegionEventImpl(pr,Operation.REGION_INVALIDATE,
-        this.callbackArg, !dm.getId().equals(getSender()), getSender());
+  protected boolean operateOnPartitionedRegion(DistributionManager dm, PartitionedRegion pr,
+      long startTime)
+      throws CacheException, QueryException, ForceReattemptException, InterruptedException {
+
+    RegionEventImpl event = new RegionEventImpl(pr, Operation.REGION_INVALIDATE, this.callbackArg,
+        !dm.getId().equals(getSender()), getSender());
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
