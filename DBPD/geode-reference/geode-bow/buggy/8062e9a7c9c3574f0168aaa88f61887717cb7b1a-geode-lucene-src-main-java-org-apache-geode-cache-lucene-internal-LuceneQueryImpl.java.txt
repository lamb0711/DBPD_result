GEODE-2367: Lucene indexes do not handle ha scenarios

* Added afterSecondary callback to partition listener to allow cleaning up
  of the index repo when the bucket losses primary
* Added lock prior to creating the bucket indexes to prevent multiple index
  writers from being available at a time
* Changed single point of lucene index creation, no longer creating on the fly

+import org.apache.geode.internal.cache.BucketNotFoundException;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.logging.log4j.Logger;
+  Logger logger = LogService.getLogger();
+  private final static int MAX_TRIES = 500;
+
-    ResultCollector<TopEntriesCollector, TopEntries<K>> rc =
-        (ResultCollector<TopEntriesCollector, TopEntries<K>>) onRegion().withArgs(context)
-            .withCollector(collector).execute(LuceneFunction.ID);
+
-    TopEntries<K> entries;
-    try {
-      entries = rc.getResult();
-    } catch (FunctionException e) {
-      if (e.getCause() instanceof LuceneQueryException) {
-        throw new LuceneQueryException(e);
-      } else {
-        throw e;
+    TopEntries<K> entries = null;
+    int numTries = 0;
+    while (entries == null && numTries++ < MAX_TRIES) {
+      try {
+        ResultCollector<TopEntriesCollector, TopEntries<K>> rc =
+            (ResultCollector<TopEntriesCollector, TopEntries<K>>) onRegion().withArgs(context)
+                .withCollector(collector).execute(LuceneFunction.ID);
+        entries = rc.getResult();
+      } catch (FunctionException e) {
+        if (e.getCause() instanceof LuceneQueryException) {
+          throw new LuceneQueryException(e);
+        } else if (e.getCause() instanceof BucketNotFoundException) {
+          logger.debug("Retrying due to index on bucket not found:" + e);
+          // throw e;
+        } else {
+          e.printStackTrace();
+          throw e;
+        }
