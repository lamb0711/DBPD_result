GEODE-719: Processing errors in cache.xml do not log a warning

- Catch all Errors and RuntimeExceptions while creating a cache and log
an error level message.
- Display the cache.xml contents before trying to initialize the cache
so that the errors have a better context.
- Converted some exception messages to i18n.

-  public static GemFireCacheImpl create(boolean isClient, PoolFactory pf, DistributedSystem system, CacheConfig cacheConfig) {
-    return new GemFireCacheImpl(true, pf, system, cacheConfig).init();
+  public static GemFireCacheImpl createClient(DistributedSystem system, PoolFactory pf, CacheConfig cacheConfig) {
+    return basicCreate(system, true, cacheConfig, pf, true);
-    return new GemFireCacheImpl(false, null, system, cacheConfig).init();
+    return basicCreate(system, true, cacheConfig, null, false);
-  public static Cache create(DistributedSystem system, boolean existingOk, CacheConfig cacheConfig)
+
+  public static Cache create(DistributedSystem system, boolean existingOk, CacheConfig cacheConfig) {
+    return basicCreate(system, existingOk, cacheConfig, null, false);
+  }
+
+  private static GemFireCacheImpl basicCreate(DistributedSystem system, boolean existingOk, CacheConfig cacheConfig, PoolFactory pf, boolean isClient)
+    try {
+      GemFireCacheImpl instance = checkExistingCache(existingOk, cacheConfig);
+      if (instance == null) {
+        instance = new GemFireCacheImpl(isClient, pf, system, cacheConfig);
+        instance.initialize();
+      }
+      return instance;
+    } catch (CacheXmlException | IllegalArgumentException e) {
+      logger.error(e.getLocalizedMessage());
+      throw e;
+    } catch (Error | RuntimeException e) {
+      logger.error(e);
+      throw e;
+    }
+  }
+
+  private static GemFireCacheImpl checkExistingCache(boolean existingOk, CacheConfig cacheConfig) {
-        return instance;
-    return create(system, cacheConfig);
+    return instance;
-  
+
-  private GemFireCacheImpl init() {
+  private void initialize() {
-    return this;
+      logCacheXML(url, cacheXmlDescription);
-      if (cacheXmlDescription == null) {
-        StringBuilder sb = new StringBuilder();
-        try {
-          final String EOLN = System.getProperty("line.separator");
-          BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));
-          String l = br.readLine();
-          while (l != null) {
-            if (!l.isEmpty()) {
-              sb.append(EOLN).append(l);
-            }
-            l = br.readLine();
-          }
-          br.close();
-        } catch (IOException ignore) {
-        }
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.GemFireCache_CACHE_INITIALIZED_USING__0__1, new Object[] {url.toString(), sb.toString()}));
-      } else {
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.GemFireCache_CACHE_INITIALIZED_USING__0__1, new Object[] {"generated description from old cache", cacheXmlDescription}));
-      }
-      String exceptionMsg = LocalizedStrings.GemFireCache_WHILE_OPENING_CACHE_XML_0_THE_FOLLOWING_ERROR_OCCURRED_1
-          .toLocalizedString(new Object[] { url.toString(), ex });
-      logger.error(exceptionMsg);
-      throw new CacheXmlException(exceptionMsg);
+      throw new CacheXmlException(LocalizedStrings.GemFireCache_WHILE_OPENING_CACHE_XML_0_THE_FOLLOWING_ERROR_OCCURRED_1
+          .toLocalizedString(new Object[] { url.toString(), ex }));
-      String exceptionMsg = LocalizedStrings.GemFireCache_WHILE_READING_CACHE_XML_0_1
-          .toLocalizedString(new Object[] { url, ex.getMessage() });
-      logger.error(exceptionMsg);
-      CacheXmlException newEx = new CacheXmlException(exceptionMsg);
+      CacheXmlException newEx = new CacheXmlException(LocalizedStrings.GemFireCache_WHILE_READING_CACHE_XML_0_1
+          .toLocalizedString(new Object[] { url, ex.getMessage() }));
+  private void logCacheXML(URL url, String cacheXmlDescription) {
+    if (cacheXmlDescription == null) {
+      StringBuilder sb = new StringBuilder();
+      try {
+        final String EOLN = System.getProperty("line.separator");
+        BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));
+        String l = br.readLine();
+        while (l != null) {
+          if (!l.isEmpty()) {
+            sb.append(EOLN).append(l);
+          }
+          l = br.readLine();
+        }
+        br.close();
+      } catch (IOException ignore) {
+      }
+      logger.info(LocalizedMessage.create(
+          LocalizedStrings.GemFireCache_INITIALIZING_CACHE_USING__0__1, new Object[]{url.toString(), sb.toString()}));
+    } else {
+      logger.info(LocalizedMessage.create(
+          LocalizedStrings.GemFireCache_INITIALIZING_CACHE_USING__0__1, new Object[] {"generated description from old cache", cacheXmlDescription}));
+    }
+  }
+
