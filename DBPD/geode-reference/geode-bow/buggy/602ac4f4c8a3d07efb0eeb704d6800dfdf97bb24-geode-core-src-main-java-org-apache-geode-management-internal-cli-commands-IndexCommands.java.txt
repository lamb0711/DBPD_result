GEODE-2261: do not use remote function calls to update the shared configuration

-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeSet;
-
-import org.apache.geode.management.internal.configuration.SharedConfigurationWriter;
-
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeSet;
+import java.util.concurrent.atomic.AtomicReference;
+
-    XmlEntity xmlEntity = null;
+    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
-            if (xmlEntity == null) {
-              xmlEntity = cliFunctionResult.getXmlEntity();
+            if (xmlEntity.get() == null) {
+              xmlEntity.set(cliFunctionResult.getXmlEntity());
-    if (xmlEntity != null) {
-      result.setCommandPersisted((new SharedConfigurationWriter()).addXmlEntity(xmlEntity,
-          group != null ? group.split(",") : null));
+
+    if (xmlEntity.get() != null) {
+      persistClusterConfiguration(result, () -> getSharedConfiguration()
+          .addXmlEntity(xmlEntity.get(), group != null ? group.split(",") : null));
+
-    XmlEntity xmlEntity = null;
+    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
+
-
-        if (xmlEntity == null) {
-          xmlEntity = cliFunctionResult.getXmlEntity();
+        if (xmlEntity.get() == null) {
+          xmlEntity.set(cliFunctionResult.getXmlEntity());
-
-
-    if (xmlEntity != null) {
-      result.setCommandPersisted((new SharedConfigurationWriter()).deleteXmlEntity(xmlEntity,
-          group != null ? group.split(",") : null));
+    if (xmlEntity.get() != null) {
+      persistClusterConfiguration(result, () -> getSharedConfiguration()
+          .deleteXmlEntity(xmlEntity.get(), group != null ? group.split(",") : null));
+
-    XmlEntity xmlEntity = null;
+    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
-            if (xmlEntity == null) {
-              xmlEntity = cliFunctionResult.getXmlEntity();
+            if (xmlEntity.get() == null) {
+              xmlEntity.set(cliFunctionResult.getXmlEntity());
-    if (xmlEntity != null) {
-      result.setCommandPersisted((new SharedConfigurationWriter()).addXmlEntity(xmlEntity,
-          group != null ? group.split(",") : null));
+    if (xmlEntity.get() != null) {
+      persistClusterConfiguration(result, () -> getSharedConfiguration()
+          .addXmlEntity(xmlEntity.get(), group != null ? group.split(",") : null));
