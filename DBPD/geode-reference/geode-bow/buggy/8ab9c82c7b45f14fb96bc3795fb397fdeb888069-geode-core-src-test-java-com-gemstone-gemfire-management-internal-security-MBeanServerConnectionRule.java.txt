GEODE-17: refactor JSONAuthorization, MBeanServerConnectionRule and added some tests

+import javax.management.MalformedObjectNameException;
+import java.io.IOException;
-public class MXBeanCreationRule<T> extends DescribedExternalResource {
+public class MBeanServerConnectionRule<T> extends DescribedExternalResource {
-  private final Class<T> proxyClass;
-  private final String objectName;
-  private ObjectName beanObjectName;
-   * @param proxyClass The class for which a proxy MBean will be created
-  public MXBeanCreationRule(int port, Class<T> proxyClass, String objectName) {
+  public MBeanServerConnectionRule(int port) {
-    this.proxyClass = proxyClass;
-    this.objectName = objectName;
-  public T getProxyMBean() {
-    return JMX.newMBeanProxy(mbeanServer, beanObjectName, proxyClass);
+  public T getProxyMBean(Class<T> proxyClass, String beanName) throws MalformedObjectNameException, IOException {
+    ObjectInstance bean = (ObjectInstance) mbeanServer.queryMBeans(ObjectName.getInstance(beanName), null).toArray()[0];
+    return JMX.newMXBeanProxy(mbeanServer, bean.getObjectName(), proxyClass);
+  }
+
+
+  public MBeanServerConnection getMBeanServerConnection() throws IOException {
+    return jmxConnector.getMBeanServerConnection();
-    String user = description.getAnnotation(JMXConnectionConfiguration.class).user();
-    String password = description.getAnnotation(JMXConnectionConfiguration.class).password();
+    JMXConnectionConfiguration config = description.getAnnotation(JMXConnectionConfiguration.class);
-    env.put(JMXConnector.CREDENTIALS, new String[] {user, password});
+    if(config!=null) {
+      String user = config.user();
+      String password = config.password();
+      env.put(JMXConnector.CREDENTIALS, new String[] { user, password });
+    }
-
-    ObjectInstance bean = (ObjectInstance) mbeanServer.queryMBeans(ObjectName.getInstance(objectName), null).toArray()[0];
-    beanObjectName = bean.getObjectName();
-    beanObjectName = null;
