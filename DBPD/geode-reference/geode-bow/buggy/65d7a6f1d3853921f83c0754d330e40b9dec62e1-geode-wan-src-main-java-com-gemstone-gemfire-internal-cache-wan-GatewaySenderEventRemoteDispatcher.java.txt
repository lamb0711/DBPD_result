GEODE-1062: Refactor of WANTestBase

* Removed the set and unset remove from queue with exception
* Refactor to break out create cache from create receiver
* Reduced create cache, receiver and start sender calls into single lines
* Reordered tests that failed due to starting receiver before region creation

-  protected GatewayAck readAcknowledgement(int lastBatchIdRead) {
+  protected GatewayAck readAcknowledgement() {
-  public boolean dispatchBatch(List events, boolean removeFromQueueOnException, boolean isRetry) {
+  public boolean dispatchBatch(List events, boolean isRetry) {
-          sp.dispatchBatch_NewWAN(connection, events, currentBatchId,
-              sender.isRemoveFromQueueOnException(), isRetry);
+          sp.dispatchBatch_NewWAN(connection, events, currentBatchId, isRetry);
-      int lastBatchIdRead = -1;
-          GatewayAck ack = readAcknowledgement(lastBatchIdRead);
+          GatewayAck ack = readAcknowledgement();
-            lastBatchIdRead = batchId;
-              if (sender.isRemoveFromQueueOnException()) {
-                // log the batchExceptions
-                logBatchExceptions(ack.getBatchException());
-                  processor.handleSuccessBatchAck(batchId);
-              } else {
-                // we assume that batch exception will not occur for PDX related
-                // events
-                List<GatewaySenderEventImpl> pdxEvents = processor
-                    .getBatchIdToPDXEventsMap().get(
-                        ack.getBatchException().getBatchId());
-                if (pdxEvents != null) {
-                  for (GatewaySenderEventImpl senderEvent : pdxEvents) {
-                    senderEvent.isAcked = true;
-                  }
-                }
-                // log the batchExceptions
-                logBatchExceptions(ack.getBatchException());
-                // remove the events that have been processed.
-                BatchException70 be = ack.getBatchException();
-                List<BatchException70> exceptions = be.getExceptions();
+              logBatchExceptions(ack.getBatchException());
+              processor.handleSuccessBatchAck(batchId);
-                for (int i = 0; i < exceptions.get(0).getIndex(); i++) {
-                  processor.eventQueueRemove();
-                }
-                // reset the sender
-                processor.handleException();
-              }
-            if (logger.isDebugEnabled()) {
+           // if (logger.isDebugEnabled()) {
-            }
+            //}
