GEODE-1926

-      if (object != null && object instanceof GatewaySenderEventImpl) {
-        GatewaySenderEventImpl copy = ((GatewaySenderEventImpl)object).makeHeapCopyIfOffHeap();
-        if (copy == null) {
-          continue;
-        }
-        object = copy;
-      }
+
+  private Long getCurrentKey(){
+    long currentKey;
+    if (this.peekedIds.isEmpty()) {
+      currentKey = getHeadKey();
+    } else {
+      Long lastPeek = this.peekedIds.peekLast();
+      if (lastPeek == null) {
+        return null;
+      }
+      currentKey = lastPeek.longValue() + 1;
+    }
+    return currentKey;
+  }
+
+  private AsyncEvent getObjectInSerialSenderQueue(Long currentKey) {
+    AsyncEvent object = optimalGet(currentKey);
+    if ((null != object) && logger.isDebugEnabled()) {
+      logger.debug("{}: Peeked {}->{}", this, currentKey, object);
+    }
+    if (object != null && object instanceof GatewaySenderEventImpl) {
+      GatewaySenderEventImpl copy = ((GatewaySenderEventImpl)object).makeHeapCopyIfOffHeap();
+      if (copy == null) {
+        logger.debug("Unable to make heap copy and will not be added to peekedIds for object" +
+                     " : {} ",object.toString());
+      }
+      object = copy;
+    }
+    return object;
+  }
+
-    long currentKey = -1;
-    if (this.peekedIds.isEmpty()) {
-    	currentKey = getHeadKey(); 
-    } else {
-    	Long lastPeek = this.peekedIds.peekLast();
-    	if (lastPeek == null) {
-    		return null;
-    	}
-    	currentKey = lastPeek.longValue() + 1;
+    Long currentKey = getCurrentKey();
+    if(currentKey == null ){
+      return null;
-    // use optimalGet here to fix bug 40654
-        && (object = optimalGet(Long.valueOf(currentKey))) == null) {
+        && (null == (object = getObjectInSerialSenderQueue(currentKey)))) {
+      object = getObjectInSerialSenderQueue(currentKey);
-      this.peekedIds.add(Long.valueOf(currentKey));
+      this.peekedIds.add(currentKey);
