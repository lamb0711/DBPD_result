GEODE-5284: Add testing surrounding MBean persistence during member failure and reconnection. (#2066)

* Add null-check to ConfigurationChangeListener to avoid NPE when a locator joins.
* Add withPort method to MemberStarterRule to specify membership port
* Add testing associated with MemberStarterRule addition
* Ensure cleanup of members in MemberStarterRuleIntegrationTest.
* Improve names and extract helper methods
* use the methods provided by the starter rules to force disconnect and
to reconnect servers and locators. Adds a parameter in InternalLocator
to track the status of the reconnect. Adds export of cache xml for
reconnect so that the server is able to restore its state following
disconnect.

Co-Authored-by: Helena Bales <hbales@pivotal.io>
Co-Authored-by: Dale Emery <dale@dhemery.com>
Co-Authored-by: Patrick Rhomberg <prhomberg@pivotal.io>
Co-Authored-By: Jinmei Liao <jinmeiliao@pivotal.io>
+import static java.util.concurrent.TimeUnit.SECONDS;
+
+import java.util.concurrent.TimeUnit;
+import org.awaitility.Awaitility;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.distributed.internal.InternalLocator;
+import org.apache.geode.internal.cache.InternalCache;
+  public void waitTilLocatorFullyReconnected() {
+    vm.invoke(() -> Awaitility.waitAtMost(30, TimeUnit.SECONDS).until(() -> {
+      InternalLocator intLocator = InternalLocator.getLocator();
+      InternalCache cache = ClusterStartupRule.getCache();
+      return intLocator != null && cache != null && intLocator.getDistributedSystem().isConnected()
+          && intLocator.isReconnected();
+    }));
+  }
+
+  public void waitTilServerFullyReconnected() {
+    vm.invoke(() -> Awaitility.waitAtMost(30, SECONDS).until(() -> {
+      InternalDistributedSystem internalDistributedSystem =
+          InternalDistributedSystem.getConnectedInstance();
+      return internalDistributedSystem != null
+          && internalDistributedSystem.getCache() != null
+          && !internalDistributedSystem.getCache().getCacheServers().isEmpty();
+    }));
+
+  }
+
