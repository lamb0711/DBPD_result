GEODE-2109: Replacing ExecutorService.submit calls with ExecutorService.execute call.

This will allow exceptions from those threads to be logged.

Refactored DiskStore task for delayed writes, we cannot replace
expensive writes tasks submit call with execute as later we check if
write call is completed or not.  Replaced submit call by execute in case
of DiskStore tasks like compactions, creating KRF's.

Replaced submit call for GIITask and RemoveMember tasks. GIITask is used
when adding member or starting managing activity when node becomes
managing node. While adding member we can make the
ExecutorService.execute call. Did not change the call for GIITask when
invoked from managing activity as possible exception is handled.

Added LoggingThreadGroup for SingleHopClientExecutor

This closes #296

-import javax.management.InstanceNotFoundException;
-    submitTask(giiTask);
+    executeTask(new Runnable() {
+      @Override
+      public void run() {
+        giiTask.call();
+      }
+    });
-    submitTask(removeTask);
+    executeTask(removeTask);
-  private class RemoveMemberTask implements Callable<DistributedMember> {
+  private void executeTask(Runnable task) {
+    try {
+      pooledMembershipExecutor.execute(task);
+    } catch (java.util.concurrent.RejectedExecutionException ex) {
+      // Ignore, we are getting shutdown
+    }
+  }
+
+  private class RemoveMemberTask implements Runnable {
-    public DistributedMember call() {
-      return removeMemberArtifacts(member, crashed);
+    public void run() {
+      removeMemberArtifacts(member, crashed);
-    List<GIITask> giiTaskList = new ArrayList<GIITask>();
+    final List<Callable<DistributedMember>> giiTaskList = new ArrayList<>();
