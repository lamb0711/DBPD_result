Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

+import com.gemstone.gemfire.internal.cache.control.InternalResourceManager;
+import com.gemstone.gemfire.internal.offheap.StoredObject;
-      ea = ((PlaceHolderDiskRegion)owner).getActualLruAlgorithm();
-      ec = ((PlaceHolderDiskRegion)owner).getEvictionAttributes().createEvictionController(null);
+      PlaceHolderDiskRegion phdr = (PlaceHolderDiskRegion)owner;
+      ea = phdr.getActualLruAlgorithm();
+      ec = phdr.getEvictionAttributes().createEvictionController(null, phdr.getOffHeap());
-      Object curVal = le._getValue();
+      Object curVal = le._getValue(); // OFFHEAP: _getValue ok
+        if (cd instanceof StoredObject) {
+          if (!cd.equals(curVal)) {
+            return false;
+          }
+        } else {
+        }
+  private boolean mustEvict() {
+    LocalRegion owner = _getOwner();
+    InternalResourceManager resourceManager = owner.getCache().getResourceManager();
+    
+    final boolean monitorStateIsEviction;
+    if (!owner.getAttributes().getOffHeap()) {
+      monitorStateIsEviction = resourceManager.getHeapMonitor().getState().isEviction();
+    } else {
+      monitorStateIsEviction = resourceManager.getOffHeapMonitor().getState().isEviction();
+    }
+    
+    return monitorStateIsEviction && this.sizeInVM() > 0;
+  }
+  
-      while (_getOwner().getCache().getHeapEvictor().mustEvict()
-          && this.sizeInVM() > 0 && evictedBytes == 0) {
+      while (mustEvict() && evictedBytes == 0) {
