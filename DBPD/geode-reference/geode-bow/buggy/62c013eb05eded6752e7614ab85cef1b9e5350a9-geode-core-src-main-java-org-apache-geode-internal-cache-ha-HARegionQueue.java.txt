GEODE-5187: clients can miss events when servers recycled

* When draining events from the giiQueue, the msg field of HAEventWrapper may be null.
  Update the HAEventWrapper to point to the message in the HAContainer vs. calling
  putEventInHARegion with the original HAContainer message (a ClientUpdateMessageImpl).
  This is necessary as the ClientUpdateMessageImpl does not have the eventId (this is not
  serialized/deserialized in toData/fromData).  The HAEventWrapper is required on the
  remote side to reconstruct the event.

* Updated log messages to include the HARegionQueue.regionName

* Added corresponding IntegrationTest

-            logger.debug("processing queue key {} and value {}", key, entry.getValue());
+            logger.debug("{} processing queue key {} and value {}", this.regionName, key,
+                entry.getValue());
-                  "bug 44959 encountered: HARegion.putGIIDataInRegion found null eventId in {}",
-                  val);
+                  "{} bug 44959 encountered: HARegion.putGIIDataInRegion found null eventId in {}",
+                  this.regionName, val);
-            "HARegionQueue.putGIIDataInRegion(): key={} was removed at sender side, so not putting it into the ha queue.",
-            ((Conflatable) val).getKeyToConflate());
+            "{} HARegionQueue.putGIIDataInRegion(): key={} was removed at sender side, so not putting it into the ha queue.",
+            this.regionName, ((Conflatable) val).getKeyToConflate());
-          logger.debug("{}: adding message to GII queue of size {}: {}", this.region.getName(),
+          logger.debug("{}: adding message to GII queue of size {}: {}", this.regionName,
-          logger.trace("{}: adding message to HA queue: {}", this.region.getName(), object);
+          logger.trace("{}: adding message to HA queue: {}", this.regionName, object);
-      logger.debug("{}: startGiiQueueing count is now {}", this.region.getName(), this.giiCount);
+      logger.debug("{}: startGiiQueueing count is now {}", this.regionName, this.giiCount);
-        logger.debug("{}: endGiiQueueing count is now {}", this.region.getName(), this.giiCount);
+        logger.debug("{}: endGiiQueueing count is now {}", this.regionName, this.giiCount);
-          logger.debug("{} found giiCount to be {}", this.region.getName(), this.giiCount);
+          logger.debug("{} found giiCount to be {}", this.regionName, this.giiCount);
-          logger.debug("all GII requests completed - draining {} messages", this.giiQueue.size());
+          logger.debug("{} all GII requests completed - draining {} messages", this.regionName,
+              this.giiQueue.size());
-              logger.debug("draining #{}: {}", (actualCount + 1), value);
+              logger.debug("{} draining #{}: {}", this.regionName, (actualCount + 1), value);
-                value = haContainer.get(value);
-                if (value == null) {
+                ClientUpdateMessageImpl haContainerMessage =
+                    (ClientUpdateMessageImpl) haContainer.get(value);
+                if (haContainerMessage != null) {
+                  ((HAEventWrapper) value).setClientUpdateMessage(haContainerMessage);
+                } else {
-                        "ATTENTION: found gii queued event with null event message.  Please see bug #44852: {}",
-                        value);
+                        "{} ATTENTION: found gii queued event with null event message.  Please see bug #44852: {}",
+                        this.regionName, value);
-        logger.trace("endGiiQueueing completed");
+        logger.trace("{} endGiiQueueing completed", this.regionName);
-      // synchronized (haContainer) {
+      if (logger.isDebugEnabled()) {
+        logger.debug("adding inputHaEventWrapper to HARegion at " + position + ":"
+            + inputHaEventWrapper + " for " + this.regionName);
+      }
-      // logger.info(LocalizedStrings.DEBUG, "added message at position " + position);
+      if (logger.isDebugEnabled()) {
+        logger.debug("adding ClientUpdateMessage to HARegion at " + position + ":" + event + " for "
+            + this.regionName);
+      }
-      // logger.info(LocalizedStrings.DEBUG, "added non-msg at position " + position);
+
+  public Queue getGiiQueue() {
+    return this.giiQueue;
+  }
