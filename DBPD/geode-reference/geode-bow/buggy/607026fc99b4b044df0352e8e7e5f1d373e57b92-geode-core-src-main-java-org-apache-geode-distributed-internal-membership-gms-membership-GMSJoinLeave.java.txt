GEODE-6309 ClusterConfigLocatorRestartDUnitTest fails to spin up a new server

This modifies auto-reconnect to lengthen the time a Locator will attempt
to join from 24 seconds to 60 seconds and prevents the Locator from
creating its own cluster (which would form a split-brain).  In an
auto-reconnect attempt the location service will not start up until a
quorum of the old cluster can be contacted, meaning that some process
that's still in the cluster exists and should have taken over the role
of membership coordinator.  The locator needs to join using that
coordinator and not create its own cluster.

This also corrects the handling of the old membership view in
GMSLocator.  The restarted location service was incorrectly using this
old view as an authority on who had the role of coordinator but it
should only be used as a hint.  This is done by putting the view into
the recoveredView variable and assigning it an invalid viewID.

In real applications this bug isn't likely to be encountered because the
first auto-reconnect attempt doesn't take place for a minute.  The
ClusterStartupRule modifies this default to start reconnecting in 5
seconds, which wasn't giving the cluster enough time to react to the
loss of the old Locator and assign a new membership coordinator.
With these changes the test passes even if the default is reduced to 1
second.

Finally, the test was incorrectly using internal APIs to detect whether
the Locator had successfully reconnected. I fixed some of that but
opened GEODE-6312 to track the problem that stopping the old Locator did
not actually stop its cluster configuration service.

-            if (response.getCoordinator() != null) {
+            InternalDistributedMember responseCoordinator = response.getCoordinator();
+            if (responseCoordinator != null) {
-                coordinatorsWithView.add(response.getCoordinator());
+                coordinatorsWithView.add(responseCoordinator);
-
-              possibleCoordinators.add(response.getCoordinator());
+              // if this node is restarting it should never create its own cluster because
+              // the QuorumChecker would have contacted a quorum of live nodes and one of
+              // them should already be the coordinator, or should become the coordinator soon
+              boolean isMyOldAddress =
+                  services.getConfig().isReconnecting() && localAddress.equals(responseCoordinator);
+              if (!isMyOldAddress) {
+                possibleCoordinators.add(response.getCoordinator());
+              }
-      if (!state.alreadyTried.contains(mbr)) {
+      if (!localAddress.equals(mbr) && !state.alreadyTried.contains(mbr)) {
