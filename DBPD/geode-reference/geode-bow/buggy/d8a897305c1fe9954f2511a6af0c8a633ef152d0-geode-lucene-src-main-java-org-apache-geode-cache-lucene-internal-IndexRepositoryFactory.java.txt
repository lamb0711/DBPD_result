GEODE-2643: Combine chunk and file region into a single region

* removed file and chunk count from stat
* removed tests that were doing checks against chunk bucketRegions

-    final PartitionedRegion fileRegion = indexForPR.getFileRegion();
-    final PartitionedRegion chunkRegion = indexForPR.getChunkRegion();
+    final PartitionedRegion fileRegion = indexForPR.getFileAndChunkRegion();
-    BucketRegion fileBucket = getMatchingBucket(fileRegion, bucketId);
-    BucketRegion chunkBucket = getMatchingBucket(chunkRegion, bucketId);
+    BucketRegion fileAndChunkBucket = getMatchingBucket(fileRegion, bucketId);
-    if (fileBucket == null || chunkBucket == null) {
+    if (fileAndChunkBucket == null) {
-    if (!chunkBucket.getBucketAdvisor().isPrimary()) {
+    if (!fileAndChunkBucket.getBucketAdvisor().isPrimary()) {
-    String lockName = getLockName(bucketId, fileBucket);
+    String lockName = getLockName(fileAndChunkBucket);
-      if (!chunkBucket.getBucketAdvisor().isPrimary()) {
+      if (!fileAndChunkBucket.getBucketAdvisor().isPrimary()) {
-      RegionDirectory dir = new RegionDirectory(getBucketTargetingMap(fileBucket, bucketId),
-          getBucketTargetingMap(chunkBucket, bucketId), indexForPR.getFileSystemStats());
+      RegionDirectory dir = new RegionDirectory(getBucketTargetingMap(fileAndChunkBucket, bucketId),
+          indexForPR.getFileSystemStats());
-      repo = new IndexRepositoryImpl(fileBucket, writer, serializer, indexForPR.getIndexStats(),
-          dataBucket, lockService, lockName);
+      repo = new IndexRepositoryImpl(fileAndChunkBucket, writer, serializer,
+          indexForPR.getIndexStats(), dataBucket, lockService, lockName);
-          + " for file region:" + fileBucket.getFullPath());
+          + " for file region:" + fileAndChunkBucket.getFullPath());
-  private String getLockName(final Integer bucketId, final BucketRegion fileBucket) {
-    return FILE_REGION_LOCK_FOR_BUCKET_ID + fileBucket.getFullPath();
+  private String getLockName(final BucketRegion fileAndChunkBucket) {
+    return FILE_REGION_LOCK_FOR_BUCKET_ID + fileAndChunkBucket.getFullPath();
