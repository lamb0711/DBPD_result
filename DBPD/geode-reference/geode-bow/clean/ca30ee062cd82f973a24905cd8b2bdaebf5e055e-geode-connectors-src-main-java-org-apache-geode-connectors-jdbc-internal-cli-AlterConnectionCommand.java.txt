GEODE-4858: refactor CreateIndexCommand and jdbc commands (#1853)

* use ClusterConfigurationService
* introduce SingleGfshCommand to ease update of cluster configuration
* get rid of default methods in CluterConfigurationService
+import static org.apache.geode.distributed.ClusterConfigurationService.CLUSTER_CONFIG;
+
+import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.management.cli.GfshCommand;
+import org.apache.geode.management.cli.SingleGfshCommand;
-public class AlterConnectionCommand extends GfshCommand {
+public class AlterConnectionCommand extends SingleGfshCommand {
+      CacheConfig cacheConfig = ccService.getCacheConfig(CLUSTER_CONFIG);
-          ccService.getCustomCacheElement("cluster", "connector-service", ConnectorService.class);
+          cacheConfig.findCustomCacheElement("connector-service", ConnectorService.class);
-    // update the cc with the merged connection returned from the server
-    boolean persisted = false;
-    if (ccService != null && results.stream().filter(CliFunctionResult::isSuccessful).count() > 0) {
-      ConnectorService service =
-          ccService.getCustomCacheElement("cluster", "connector-service", ConnectorService.class);
-      if (service == null) {
-        service = new ConnectorService();
-      }
-      CliFunctionResult successResult =
-          results.stream().filter(CliFunctionResult::isSuccessful).findAny().get();
-      ConnectorService.Connection mergedConnection =
-          (ConnectorService.Connection) successResult.getResultObject();
-      CacheElement.removeElement(service.getConnection(), name);
-      service.getConnection().add(mergedConnection);
-      ccService.saveCustomCacheElement("cluster", service);
-      persisted = true;
-    }
+    CliFunctionResult successResult =
+        results.stream().filter(CliFunctionResult::isSuccessful).findAny().get();
+    ConnectorService.Connection mergedConnection =
+        (ConnectorService.Connection) successResult.getResultObject();
-    commandResult.setCommandPersisted(persisted);
+    commandResult.setConfigObject(mergedConnection);
+
+  @Override
+  public void updateClusterConfig(String group, CacheConfig config, Object element) {
+    ConnectorService.Connection connection = (ConnectorService.Connection) element;
+    ConnectorService service =
+        config.findCustomCacheElement("connector-service", ConnectorService.class);
+    CacheElement.removeElement(service.getConnection(), connection.getId());
+    service.getConnection().add(connection);
+  }
