GEODE-7747: Refactor - extract class KeyRegistrar (#4647)

KeyRegistrar encapsulates info about keys that are inserted via the
Redis API. It uses a Geode Region to store a map from key -> RedisDataType
-import org.apache.geode.redis.internal.RedisDataTypeMismatchException;
-   * Checks if the given key is associated with the passed data type. If there is a mismatch, a
+   * Checks if the given key is associated with the passed expectedDataType. If there is a mismatch,
+   * a
-   * @param type Type to check to
+   * @param expectedDataType Type to check to
-  protected void checkDataType(ByteArrayWrapper key, RedisDataType type,
+  protected void checkDataType(ByteArrayWrapper key, RedisDataType expectedDataType,
-    RedisDataType currentType = context.getRegionProvider().getRedisDataType(key);
-    if (currentType == null)
-      return;
-    if (currentType == RedisDataType.REDIS_PROTECTED)
-      throw new RedisDataTypeMismatchException("The key name \"" + key + "\" is protected");
-    if (currentType != type)
-      throw new RedisDataTypeMismatchException(
-          "The key name \"" + key + "\" is already used by a " + currentType.toString());
+    context.getKeyRegistrar().validate(key, expectedDataType);
