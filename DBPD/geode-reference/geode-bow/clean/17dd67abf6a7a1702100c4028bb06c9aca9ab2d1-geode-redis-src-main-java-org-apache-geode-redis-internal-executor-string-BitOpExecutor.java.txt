GEODE-8182: change String commands to use one region (#5165)

* changed all String commands to use the function and to use a single region
* renabled tests ignored for GEODE-8182
* removed the RedisLockService since it is not used in the new data model
* removed the unused del methods on RedisSetCommands and RedisHashCommands
* removed the KeyRegistar since it was no longer needed with a single data region

Co-authored-by: Ray Ingles <ringles@pivotal.io>
-import org.apache.geode.cache.Region;
-import org.apache.geode.redis.internal.RedisData;
-import org.apache.geode.redis.internal.RedisDataType;
-    Region<ByteArrayWrapper, RedisData> r = context.getRegionProvider().getStringsRegion();
-
-    checkDataType(destKey, RedisDataType.REDIS_STRING, context);
-      checkDataType(key, RedisDataType.REDIS_STRING, context);
-      RedisString redisString = (RedisString) r.get(key);
-      ByteArrayWrapper value = redisString.getValue();
+      ByteArrayWrapper value = getRedisStringCommands(context).get(key);
-      and(context, r, destKey, values, maxLength);
+      and(context, destKey, values, maxLength);
-      or(context, r, destKey, values, maxLength);
+      or(context, destKey, values, maxLength);
-      xor(context, r, destKey, values, maxLength);
+      xor(context, destKey, values, maxLength);
-      not(context, r, destKey, values, maxLength);
+      not(context, destKey, values, maxLength);
-  private void and(ExecutionHandlerContext context, Region<ByteArrayWrapper, RedisData> r,
+  private void and(ExecutionHandlerContext context,
-    checkAndSetDataType(destKey, context);
-    r.put(destKey, (RedisData) new RedisString(new ByteArrayWrapper(dest)));
+    getRedisStringCommands(context).set(destKey, new ByteArrayWrapper(dest), null);
-  private void or(ExecutionHandlerContext context, Region<ByteArrayWrapper, RedisData> r,
+  private void or(ExecutionHandlerContext context,
-    checkAndSetDataType(destKey, context);
-    r.put(destKey, (RedisData) new RedisString(new ByteArrayWrapper(dest)));
+    getRedisStringCommands(context).set(destKey, new ByteArrayWrapper(dest), null);
-  private void xor(ExecutionHandlerContext context, Region<ByteArrayWrapper, RedisData> r,
+  private void xor(ExecutionHandlerContext context,
-    checkAndSetDataType(destKey, context);
-    r.put(destKey, (RedisData) new RedisString(new ByteArrayWrapper(dest)));
+    getRedisStringCommands(context).set(destKey, new ByteArrayWrapper(dest), null);
-  private void not(ExecutionHandlerContext context, Region<ByteArrayWrapper, RedisData> r,
+  private void not(ExecutionHandlerContext context,
-    checkAndSetDataType(destKey, context);
-    r.put(destKey, (RedisData) new RedisString(new ByteArrayWrapper(dest)));
+    getRedisStringCommands(context).set(destKey, new ByteArrayWrapper(dest), null);
