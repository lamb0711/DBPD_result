GEODE-2804 Caching the InetAddress for configured ip string

1. We keep configure host string in HostAddress class
2. We reuse InetsocketAddress if it is ipString.
3. Client has logic to retry thus we keep InetsocketAddress even if
   it is not ip string.

GEODE-3017 IPv6 issue on windows. Above changes fixed this issue.

GEODE-2940 Now we don't validate configure host string on start. As
there is possibility that host may not available.

1. Earlier wan config were failing because of that. Now we just keep
   those configure host string. And try this later.

Added unit tests for it.

+import java.net.InetSocketAddress;
+import org.apache.commons.validator.routines.InetAddressValidator;
-  private final InetAddress host;
+  private InetAddress host;
+  private String hostname;
-    String hostname = marshalled.substring(0, bindIdx > -1 ? bindIdx : portStartIdx);
+    hostname = marshalled.substring(0, bindIdx > -1 ? bindIdx : portStartIdx);
-      throw new InternalGemFireException(
-          LocalizedStrings.DistributionLocatorId_FAILED_GETTING_HOST_FROM_NAME_0
-              .toLocalizedString(hostname));
+      this.host = null;
-  /** Returns the host. */
-  public InetAddress getHost() {
-    return this.host;
+  /**
+   * Returns the resolved InetSocketAddress of the locator We cache the InetAddress if hostname is
+   * ipString Otherwise we create InetAddress each time.
+   * 
+   **/
+  public InetSocketAddress getHost() throws UnknownHostException {
+    if (this.hostname != null) {
+      boolean isIpString = InetAddressValidator.getInstance().isValid(this.hostname);
+      if (isIpString) {
+        if (this.host == null) {
+          this.host = InetAddress.getByName(this.hostname);
+        }
+        return new InetSocketAddress(this.host, this.port);
+      }
+    }
+
+    if (this.hostname == null) {
+      if (this.host != null) {
+        return new InetSocketAddress(this.host, this.port);
+      }
+      throw new UnknownHostException("locator ID has no hostname or resolved inet address");
+    }
+    return new InetSocketAddress(this.hostname, this.port);
+  }
+
+  /** returns the host name */
+  public String getHostName() {
+    if (this.hostname == null) {
+      this.hostname = this.host.getHostName();
+    }
+    return this.hostname;
