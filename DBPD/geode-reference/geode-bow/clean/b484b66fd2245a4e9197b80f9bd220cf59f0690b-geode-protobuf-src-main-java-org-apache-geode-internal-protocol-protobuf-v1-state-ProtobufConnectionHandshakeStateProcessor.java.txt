GEODE-4334: Merge protobuf modules (#1332)


-import org.apache.geode.internal.protocol.MessageExecutionContext;
-import org.apache.geode.internal.protocol.OperationContext;
-import org.apache.geode.internal.protocol.ProtocolErrorCode;
+import org.apache.geode.internal.protocol.protobuf.v1.MessageExecutionContext;
+import org.apache.geode.internal.protocol.protobuf.v1.ProtobufErrorCode;
+import org.apache.geode.internal.protocol.protobuf.v1.ProtobufOperationContext;
-import org.apache.geode.internal.protocol.state.ConnectionStateProcessor;
-import org.apache.geode.internal.protocol.state.LegacySecurityConnectionStateProcessor;
-import org.apache.geode.internal.protocol.state.NoSecurityConnectionStateProcessor;
-import org.apache.geode.internal.protocol.state.exception.ConnectionStateException;
+import org.apache.geode.internal.protocol.protobuf.v1.state.exception.ConnectionStateException;
-public class ProtobufConnectionHandshakeStateProcessor implements ConnectionStateProcessor {
+public class ProtobufConnectionHandshakeStateProcessor implements ProtobufConnectionStateProcessor {
-      OperationContext operationContext) throws ConnectionStateException {
-    throw new ConnectionStateException(ProtocolErrorCode.INVALID_REQUEST,
+      ProtobufOperationContext operationContext) throws ConnectionStateException {
+    throw new ConnectionStateException(ProtobufErrorCode.INVALID_REQUEST,
-  private ConnectionStateProcessor nextConnectionState() {
+  private ProtobufConnectionStateProcessor nextConnectionState() {
-      return new ConnectionShiroAuthenticatingStateProcessor(securityService);
+      return new ProtobufConnectionAuthenticatingStateProcessor(securityService);
-      return new LegacySecurityConnectionStateProcessor();
+      return new LegacySecurityProtobufConnectionStateProcessor();
-      return new NoSecurityConnectionStateProcessor();
+      return new NoSecurityProtobufConnectionStateProcessor();
