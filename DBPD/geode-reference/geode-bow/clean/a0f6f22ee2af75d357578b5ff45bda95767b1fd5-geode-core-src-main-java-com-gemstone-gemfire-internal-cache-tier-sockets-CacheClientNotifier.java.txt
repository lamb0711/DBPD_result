Merge branch 'develop' into feature/GEODE-17-2

+    
+    if (!isGatewayReceiver && ccnSingleton.getHaContainer() == null) {
+      // Gateway receiver might have create CCN instance without HaContainer
+      // In this case, the HaContainer should be lazily created here
+      ccnSingleton.initHaContainer(overflowAttributesList);
+    }
-      haContainer.cleanUp();
-      if (isDebugEnabled) {
-        logger.debug("haContainer ({}) is now cleaned up.", haContainer.getName());
+      if (haContainer != null) {
+        haContainer.cleanUp();
+        if (isDebugEnabled) {
+          logger.debug("haContainer ({}) is now cleaned up.", haContainer.getName());
+        }
-    // Create the overflow artifacts
-    if (overflowAttributesList != null
-        && !HARegionQueue.HA_EVICTION_POLICY_NONE.equals(overflowAttributesList
-            .get(0))) {
-      haContainer = new HAContainerRegion(cache.getRegion(Region.SEPARATOR
-          + CacheServerImpl.clientMessagesRegion((GemFireCacheImpl)cache,
-              (String)overflowAttributesList.get(0),
-              ((Integer)overflowAttributesList.get(1)).intValue(),
-              ((Integer)overflowAttributesList.get(2)).intValue(),
-              (String)overflowAttributesList.get(3),
-              (Boolean)overflowAttributesList.get(4))));
-    }
-    else {
-      haContainer = new HAContainerMap(new HashMap());
-    }
-    if (logger.isDebugEnabled()) {
-      logger.debug("ha container ({}) has been created.", haContainer.getName());
-    }
-
-  private final HAContainerWrapper haContainer;
+  private HAContainerWrapper haContainer;
+  
+  public void initHaContainer(List overflowAttributesList) {
+    // lazily initialize haContainer in case this CCN instance was created by a gateway receiver
+    if (overflowAttributesList != null
+        && !HARegionQueue.HA_EVICTION_POLICY_NONE.equals(overflowAttributesList
+            .get(0))) {
+      haContainer = new HAContainerRegion(_cache.getRegion(Region.SEPARATOR
+          + CacheServerImpl.clientMessagesRegion((GemFireCacheImpl)_cache,
+              (String)overflowAttributesList.get(0),
+              ((Integer)overflowAttributesList.get(1)).intValue(),
+              ((Integer)overflowAttributesList.get(2)).intValue(),
+              (String)overflowAttributesList.get(3),
+              (Boolean)overflowAttributesList.get(4))));
+    }
+    else {
+      haContainer = new HAContainerMap(new HashMap());
+    }
+    assert haContainer != null;
+
+    if (logger.isDebugEnabled()) {
+      logger.debug("ha container ({}) has been created.", haContainer.getName());
+    }
+  }
