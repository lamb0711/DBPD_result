GEODE-17: when connecting to a secure manager, prompt for username and password

* refactor the connect command for better readability and retry handling
* throw AuthenticationFailedException for consistency

+import com.gemstone.gemfire.security.AuthenticationFailedException;
- * 
-  protected Map<String,String> securityProperties;
+  protected Map<String, String> securityProperties;
-   * Default, public, no-arg constructor to create an instance of the AbstractHttpOperationInvoker class 
+   * Default, public, no-arg constructor to create an instance of the AbstractHttpOperationInvoker class
-   * 
-  public AbstractHttpOperationInvoker(final Gfsh gfsh, Map<String,String> securityProperties) {
+  public AbstractHttpOperationInvoker(final Gfsh gfsh, Map<String, String> securityProperties) {
-   * 
-  public AbstractHttpOperationInvoker(final Gfsh gfsh, final String baseUrl, Map<String,String> securityProperties) {
+  public AbstractHttpOperationInvoker(final Gfsh gfsh, final String baseUrl, Map<String, String> securityProperties) {
-        if(response.getRawStatusCode()==403)
+        if (response.getRawStatusCode() == 401) {
+          throw new AuthenticationFailedException(message);
+        }
+        else if (response.getRawStatusCode() == 403) {
-        else
+        }
+        else {
+        }
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-        getClass().getName());
+      getClass().getName());
-   * 
-   * 
-   * 
-    if(this.securityProperties != null){
+    if (this.securityProperties != null) {
-      while(it.hasNext()){
-        Entry<String,String> entry= it.next();
+      while (it.hasNext()) {
+        Entry<String, String> entry = it.next();
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-      + "Please try reconnecting or see the GemFire Manager's log file for further details.",
+        + "Please try reconnecting or see the GemFire Manager's log file for further details.",
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
-   * 
+
-   * 
-            resourceName, attributeName), e);
+          resourceName, attributeName), e);
-            resourceName, attributeName), e);
+          resourceName, attributeName), e);
-   * 
-   * 
-   * 
-   * 
-            resourceName, operationName), e);
+          resourceName, operationName), e);
-            resourceName, operationName), e);
+          resourceName, operationName), e);
-   * 
-            objectName, queryExpression), e);
+          objectName, queryExpression), e);
-      printSevere("Running a query to get the ObjectNames of all MBeans matching the ObjectName pattern (%1$s) and Query expression (%2$s) is currently unsupported!",
+      printSevere(
+        "Running a query to get the ObjectNames of all MBeans matching the ObjectName pattern (%1$s) and Query expression (%2$s) is currently unsupported!",
