GEODE-3801: Use hardlinks for backup oplog files (#963)

* Oplog files that are backed up are read-only. For this reason,
  they can be transfered to the backup location through hard links,
  instead of copying the file. This change improves speed of backups.
  If the creation of a hard link fails, we revert to the existing copy
  behavior.
* During backups, the copying of the oplog's krf file was being done while
  that file could still be in the process of writing. This change ensures
  that if a krf is to be written, that it is finished and included in the
  backup
* cleanup existing oplog tests

+import java.nio.file.Files;
-  File getOplogFile() throws SyncFailedException, IOException {
+  File getOplogFileForTest() throws IOException {
+  File getCrfFile() {
+    return this.crf.f;
+  }
+
+  File getDrfFile() {
+    return this.drf.f;
+  }
+
-  private File getKrfFile() {
+  File getKrfFile() {
-  public void copyTo(File targetDir) throws IOException {
-    if (this.crf.f != null && this.crf.f.exists()) {
-      FileUtils.copyFileToDirectory(this.crf.f, targetDir);
-    }
-    if (this.drf.f.exists()) {
-      FileUtils.copyFileToDirectory(this.drf.f, targetDir);
-    }
-
-    // this krf existence check fixes 45089
-    // TODO: should we wait for the async KRF creation to finish by calling this.finishKrf?
-    if (getParent().getDiskInitFile().hasKrf(this.oplogId)) {
-      if (this.getKrfFile().exists()) {
-        FileUtils.copyFileToDirectory(this.getKrfFile(), targetDir);
-      }
-    }
-  }
-
