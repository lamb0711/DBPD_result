Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-  
+
-  
+
-  
+
-  
-  
+
+
-  
-  public ServerBridge(CacheServer cacheServer){
-    this.monitor = new MBeanStatsMonitor(ManagementStrings.SERVER_MONITOR
-        .toLocalizedString());
-    this.acceptor =  ((CacheServerImpl) cacheServer).getAcceptor();
+
+  public ServerBridge(CacheServer cacheServer) {
+    this.monitor = new MBeanStatsMonitor(ManagementStrings.SERVER_MONITOR.toLocalizedString());
+    this.acceptor = ((CacheServerImpl) cacheServer).getAcceptor();
-  
+
-  
-  protected void addServer(CacheServer cacheServer){
-    this.acceptor =  ((CacheServerImpl) cacheServer).getAcceptor();
+
+  protected void addServer(CacheServer cacheServer) {
+    this.acceptor = ((CacheServerImpl) cacheServer).getAcceptor();
-  
-  protected void removeServer(){
-    this.acceptor =  null;
+
+  protected void removeServer() {
+    this.acceptor = null;
-   
+
-  
+
-    
+
-    getRequestAvgLatency = new StatsAverageLatency(StatsKey.GET_REQUESTS,
-        StatType.INT_TYPE, StatsKey.PROCESS_GET_TIME, monitor);
-    
-    putRequestAvgLatency = new StatsAverageLatency(StatsKey.PUT_REQUESTS,
-        StatType.INT_TYPE, StatsKey.PROCESS_PUT_TIME, monitor);
+    getRequestAvgLatency = new StatsAverageLatency(StatsKey.GET_REQUESTS, StatType.INT_TYPE,
+        StatsKey.PROCESS_GET_TIME, monitor);
+
+    putRequestAvgLatency = new StatsAverageLatency(StatsKey.PUT_REQUESTS, StatType.INT_TYPE,
+        StatsKey.PROCESS_PUT_TIME, monitor);
-    this.monitor = new MBeanStatsMonitor(ManagementStrings.SERVER_MONITOR
-        .toLocalizedString());
+    this.monitor = new MBeanStatsMonitor(ManagementStrings.SERVER_MONITOR.toLocalizedString());
-  
+
-  
+
-  
+
-  
+
-  
-  protected Number getStatistic(String statName){
-    if(monitor != null){
+
+  protected Number getStatistic(String statName) {
+    if (monitor != null) {
-    }else{
+    } else {
-    
-    
+
+
- 
-  
