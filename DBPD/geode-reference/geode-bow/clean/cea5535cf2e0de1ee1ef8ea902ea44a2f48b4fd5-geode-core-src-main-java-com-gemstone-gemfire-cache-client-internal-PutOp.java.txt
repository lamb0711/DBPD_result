GEODE-1761 Clients don't fail back when servers are bounced

Servers will send a refresh hint to clients if they detect that a request
had to be send to a different server who owned the primary bucket
affected by the operation.  Clients should always refresh when this
happens unless they have connection-pool size constraints that force
them to use non-optimal servers.

Client-side operation classes have been modified to initiate the refresh.
I've added code in the meta-data service class to avoid performing
multiple concurrent refreshes on the same region.

On the server-side I've cleaned up some of the network-hop detection
code to stop using hard-coded integers and to consolidate some of
the code that resets the ThreadLocals being used to record network-
hops detected.

-                             boolean prSingleHopEnabled)
-  {
-    AbstractOp op = new PutOpImpl(region, key, value, deltaBytes, event,
+                             boolean prSingleHopEnabled) {
+    PutOpImpl op = new PutOpImpl(region, key, value, deltaBytes, event,
+          op.setAllowDuplicateMetadataRefresh(! onlyUseExistingCnx);
+
-                             boolean prSingleHopEnabled)
-  {
+                             boolean prSingleHopEnabled) {
+    
-//      processAck(msg, "put");
-//      if (prSingleHopEnabled) {
-//        byte version = 0;
-//        Part part = msg.getPart(0);
-//        byte[] bytesReceived = part.getSerializedForm();
-//        if (bytesReceived[0] != ClientMetadataService.INITIAL_VERSION
-//            && bytesReceived.length == ClientMetadataService.SIZE_BYTES_ARRAY_RECEIVED) { // nw hop
-//          if (this.region != null) {
-//            ClientMetadataService cms;
-//            try {
-//              cms = region.getCache().getClientMetadataService();
-//              version = cms.getMetaDataVersion(region, Operation.UPDATE,
-//                  key, value, callbackArg);
-//            }
-//            catch (CacheClosedException e) {
-//              return null;
-//            }
-//            if (bytesReceived[0] != version) {
-//              cms.scheduleGetPRMetaData(region, false,bytesReceived[1]);
-//            }
-//          }
-//        }
-//      }
-//      return null;
-      byte version = 0 ;
+
-            ClientMetadataService cms;
-              cms = region.getCache().getClientMetadataService();
-              version = cms.getMetaDataVersion(region, Operation.UPDATE,
-                  key, value, callbackArg);
-            if (bytesReceived[0] != version) {
+            ClientMetadataService cms = region.getCache().getClientMetadataService();
+            byte myVersion = cms.getMetaDataVersion(region, Operation.UPDATE,
+                               key, value, callbackArg);
+            if (myVersion != bytesReceived[0] || isAllowDuplicateMetadataRefresh()) {
