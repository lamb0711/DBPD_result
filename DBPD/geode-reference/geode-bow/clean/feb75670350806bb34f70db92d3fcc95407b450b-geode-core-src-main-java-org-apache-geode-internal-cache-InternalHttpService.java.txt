GEODE-7107: Introduce HttpService interface (#3963)

- This allows for Jetty to be optional on the classpath.
+import java.nio.file.Path;
-import java.util.Arrays;
+import java.util.Map;
-import org.apache.commons.lang3.tuple.Pair;
+import org.apache.geode.cache.internal.HttpService;
-public class HttpService {
+public class InternalHttpService implements HttpService {
-  private SSLConfig sslConfig;
-  public HttpService(String bindAddress, int port, SSLConfig sslConfig) {
+  public InternalHttpService(String bindAddress, int port, SSLConfig sslConfig) {
-    this.sslConfig = sslConfig;
-    logger.info("Enabled HttpService on port {}", port);
+    logger.info("Enabled InternalHttpService on port {}", port);
-  public synchronized void addWebApplication(String webAppContext, String warFilePath,
-      Pair<String, Object>... attributeNameValuePairs)
+  @Override
+  public synchronized void addWebApplication(String webAppContext, Path warFilePath,
+      Map<String, Object> attributeNameValuePairs)
-    webapp.setWar(warFilePath);
+    webapp.setWar(warFilePath.toString());
-      Arrays.stream(attributeNameValuePairs)
-          .forEach(p -> webapp.setAttribute(p.getKey(), p.getValue()));
+      attributeNameValuePairs.forEach((key, value) -> webapp.setAttribute(key, value));
+  @Override
