GEODE-6802: Execute region synchronization on newly joined member. (#3623)

 * Region sync will be invoked to avoid data inconsistency on a newly joined/restarted member
   if it received a region synchronization request from other members due to timed task.
 * Use a flag in RegionVersionHolder to ensure only one such call is executed.
 * Make sure RVV exception is filled for persistent member requesting region sync. (This may
   leads to CommitConflictException on some transactions on persistent regions due to this
   region sync operation. But it should be rare and is acceptable compared to data inconsistency
   issue.)

+import org.apache.geode.internal.cache.versions.RegionVersionHolder;
+
+  /**
+   * This is invoked by syncForCrashedMember when scheduling region synchronization
+   * triggered by member departed event. It sets the regionSynchronizeScheduledOrDone
+   * flag in region version holder to true. This indicates that no additional region sync for
+   * the lost member is needed, when it receives requests for region sync for the lost member.
+   */
+  public void setRegionSynchronizeScheduled(VersionSource lostMemberVersionID) {
+    RegionVersionHolder regionVersionHolder =
+        getVersionVector().getHolderForMember(lostMemberVersionID);
+    if (regionVersionHolder != null) {
+      regionVersionHolder.setRegionSynchronizeScheduled();
+    }
+  }
+
+  /**
+   * This method checks region version holder to see if regionSynchronizeScheduledOrDone is
+   * set to true for the lost member. If it is not, the regionSynchronizeScheduledOrDone variable
+   * is set to true and returns true. If it is already set to true, do nothing and returns false.
+   */
+  public boolean setRegionSynchronizedWithIfNotScheduled(VersionSource lostMemberVersionID) {
+    RegionVersionHolder regionVersionHolder =
+        getVersionVector().getHolderForMember(lostMemberVersionID);
+    if (regionVersionHolder != null) {
+      return regionVersionHolder.setRegionSynchronizeScheduledOrDoneIfNot();
+    }
+    return false;
+  }
+
