Merge branch 'develop' into feature/GEODE-17-2

-          if (!event.isOriginRemote()
-              && getBucketAdvisor().isPrimary()) {
-            // This cache has processed the event, forward operation
-            // and event messages to backup buckets
-            new InvalidateOperation(event).distribute();
-          }
-          event.invokeCallbacks(this,true, false);
+          distributeInvalidateOperation(event);
+
+  protected void distributeInvalidateOperation(EntryEventImpl event) {
+    if (!event.isOriginRemote()
+        && getBucketAdvisor().isPrimary()) {
+      // This cache has processed the event, forward operation
+      // and event messages to backup buckets
+      new InvalidateOperation(event).distribute();
+    }
+    event.invokeCallbacks(this,true, false);
+  }
+  
-          new UpdateEntryVersionOperation(event).distribute();
+          distributeUpdateEntryVersionOperation(event);
+  protected void distributeUpdateEntryVersionOperation(EntryEventImpl event) {
+    new UpdateEntryVersionOperation(event).distribute();
+  }
+  
-      if (rawNewValue instanceof StoredObject && !((StoredObject) rawNewValue).isSerialized()) {
+      CachedDeserializable cd = (CachedDeserializable) rawNewValue;
+      if (!cd.isSerialized()) {
-      Object instance = ((CachedDeserializable)rawNewValue).getValue();
+      Object instance = cd.getValue();
-    if (value != null && (value instanceof GatewaySenderEventImpl)) {
-      return ((GatewaySenderEventImpl)value).getSerializedValueSize();
-    } 
-        && !(value instanceof com.gemstone.gemfire.Delta) && !(value instanceof Delta)) {
+        && !(value instanceof com.gemstone.gemfire.Delta) && !(value instanceof Delta)
+        && !(value instanceof GatewaySenderEventImpl)) {
