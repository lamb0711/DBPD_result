Merge branch 'develop' into feature/GEODE-6187

-import org.apache.geode.cache.EntryNotFoundException;
-import org.apache.geode.internal.offheap.annotations.Released;
-  public void destroyKey(Object key) throws ForceReattemptException {
-    if (logger.isDebugEnabled()) {
-      logger.debug(" destroying primary key {}", key);
-    }
-    @Released
-    EntryEventImpl event = getPartitionedRegion().newDestroyEntryEvent(key, null);
-    event.setEventId(new EventID(cache.getInternalDistributedSystem()));
-    try {
-      event.setRegion(this);
-      basicDestroy(event, true, null);
-      checkReadiness();
-    } catch (EntryNotFoundException enf) {
-      if (getPartitionedRegion().isDestroyed()) {
-        getPartitionedRegion().checkReadiness();
-        if (isBucketDestroyed()) {
-          throw new ForceReattemptException("Bucket moved",
-              new RegionDestroyedException(
-                  "Region has been destroyed",
-                  getPartitionedRegion().getFullPath()));
-        }
-      }
-      throw enf;
-    } catch (RegionDestroyedException rde) {
-      getPartitionedRegion().checkReadiness();
-      if (isBucketDestroyed()) {
-        throw new ForceReattemptException("Bucket moved while destroying key " + key, rde);
-      }
-    } finally {
-      event.release();
-    }
-
-    this.notifyEntriesRemoved();
-  }
+  public abstract void destroyKey(Object key) throws ForceReattemptException;
-  @Override
-  public void basicDestroy(final EntryEventImpl event, final boolean cacheWrite,
-      Object expectedOldValue)
-      throws EntryNotFoundException, CacheWriterException, TimeoutException {
-    try {
-      super.basicDestroy(event, cacheWrite, expectedOldValue);
-    } finally {
-      GatewaySenderEventImpl.release(event.getRawOldValue());
-    }
-  }
-
-
