GEODE-7851: Pulse Oauth Support (#4936)

* GEODE-7851: Pulse Oauth Support

- create an OauthSecurityConfig to configure spring using oauth
- add PULSE as an oauth-enabled-component, and if pulse is set to use
  oauth, set the OauthSecurityConfig as the active security profile
- use pulse.properties in the locator's working dir to externalize pulse
  authentication provider configuration

Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
-  private final ResourceBundle resourceBundle = Repository.get().getResourceBundle();
+  private Repository repository;
+  private ResourceBundle resourceBundle;
-  public Cluster(String host, String port, String userName) {
+  public Cluster(String host, String port, String userName, ResourceBundle resourceBundle,
+      Repository repository) {
+    this.resourceBundle = resourceBundle;
+    this.repository = repository;
-    updater = new JMXDataUpdater(serverName, port, this);
+    updater = new JMXDataUpdater(serverName, port, this, resourceBundle, repository);
-      dataBrowser = new DataBrowser();
+      dataBrowser = new DataBrowser(resourceBundle, repository);
-  public void setDataBrowser(DataBrowser dataBrowser) {
-    this.dataBrowser = dataBrowser;
-  }
-
-  public void connectToGemFire(String password) {
-    jmxConnector = updater.connect(getJmxUserName(), password);
+  public void connectToGemFire(Object credentials) {
+    jmxConnector = updater.connect(credentials);
-    // if connected
