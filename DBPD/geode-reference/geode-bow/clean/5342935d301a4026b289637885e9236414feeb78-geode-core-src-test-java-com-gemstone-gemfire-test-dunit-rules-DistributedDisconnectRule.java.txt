GEODE-953: Cleanup geode-junit

* cleanup geode-junit usage of JUnit Rules to ensure JUnit code is always extended rather than copied
* change CRLF to LF
* remove @author tags
* fix all javadocs
* fix formatting
* add new tests
* remove ExpectedTimeout and ExpectedTimeoutTest (they were dupes of ExpectedTimeoutRule and ExpectedTimeoutRuleTest)
* use serialization by reflection for serializable subclasses of JUnit rules that lack sufficient ability to subclass
* repackage rule tests to same package as rules
* repackage serializable rules into serializable sub-package

-// TODO: import static com.gemstone.gemfire.test.dunit.DistributedTestRule.*;
+// TODO:uncomment: import static com.gemstone.gemfire.test.dunit.DistributedTestRule.*;
-@SuppressWarnings("serial")
+/**
+ * Disconnects all remote DUnit JVMs including the Locator JVM.
+ */
-  private final boolean disconnectBeforeClass;
-  private final boolean disconnectAfterClass;
-  
+
-    this.disconnectBeforeClass = builder.disconnectBeforeClass;
-    this.disconnectAfterClass = builder.disconnectAfterClass;
-  protected void after() throws Throwable {
+  protected void after() {
-  @Override
-  protected void beforeClass() throws Throwable {
-    if (this.disconnectBeforeClass) {
-      invoker().invokeEverywhere(serializableRunnable());
-    }
-  }
-
-  @Override
-  protected void afterClass() throws Throwable {
-    if (this.disconnectAfterClass) {
-      invoker().invokeEverywhere(serializableRunnable());
-    }
-  }
-
-        // TODO: disconnectFromDS();
+        // TODO:uncomment: disconnectFromDS();
-   * 
-   * @author Kirk Lund
-    private boolean disconnectBeforeClass;
-    private boolean disconnectAfterClass;
-    public Builder disconnectBeforeClass(final boolean disconnectBeforeClass) {
-      this.disconnectBeforeClass = disconnectBeforeClass;
-      return this;
-    }
-    
-    public Builder disconnectAfterClass(final boolean disconnectAfterClass) {
-      this.disconnectAfterClass = disconnectAfterClass;
-      return this;
-    }
-    
