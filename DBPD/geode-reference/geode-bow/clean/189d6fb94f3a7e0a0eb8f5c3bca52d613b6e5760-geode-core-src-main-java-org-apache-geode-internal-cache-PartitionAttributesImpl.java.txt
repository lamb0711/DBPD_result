GEODE-6322: refactor createRegionCommand to use RegionConfig only (#3156)

* get rid of usages of xxxArgs and RegionConfigFactory
* the resulting cluster configuration xml for region does not have excessive default values

-import org.apache.geode.cache.configuration.DeclarableType;
-import org.apache.geode.cache.configuration.RegionAttributesType;
-import org.apache.geode.management.internal.configuration.domain.DeclarableTypeInstantiator;
-
-  public static PartitionAttributesImpl fromConfig(
-      RegionAttributesType.PartitionAttributes configAttributes, Cache cache) {
-    PartitionAttributesImpl partitionAttributes = new PartitionAttributesImpl();
-    if (configAttributes == null) {
-      return null;
-    }
-
-    if (configAttributes.getRedundantCopies() != null) {
-      partitionAttributes
-          .setRedundantCopies(Integer.valueOf(configAttributes.getRedundantCopies()));
-    }
-
-    if (configAttributes.getTotalMaxMemory() != null) {
-      partitionAttributes.setTotalMaxMemory(Integer.valueOf(configAttributes.getTotalMaxMemory()));
-    }
-
-    if (configAttributes.getTotalNumBuckets() != null) {
-      partitionAttributes
-          .setTotalNumBuckets(Integer.valueOf(configAttributes.getTotalNumBuckets()));
-    }
-
-    if (configAttributes.getLocalMaxMemory() != null) {
-      partitionAttributes.setLocalMaxMemory(Integer.valueOf(configAttributes.getLocalMaxMemory()));
-    }
-
-    if (configAttributes.getColocatedWith() != null) {
-      partitionAttributes.setColocatedWith(configAttributes.getColocatedWith());
-    }
-
-    if (configAttributes.getPartitionResolver() != null) {
-      partitionAttributes.setPartitionResolver(
-          DeclarableTypeInstantiator.newInstance(configAttributes.getPartitionResolver(), cache));
-    }
-
-    if (configAttributes.getRecoveryDelay() != null) {
-      partitionAttributes.setRecoveryDelay(Long.valueOf(configAttributes.getRecoveryDelay()));
-    }
-
-    if (configAttributes.getStartupRecoveryDelay() != null) {
-      partitionAttributes
-          .setStartupRecoveryDelay(Long.valueOf(configAttributes.getStartupRecoveryDelay()));
-    }
-
-    if (configAttributes.getPartitionListeners() != null) {
-      List<DeclarableType> configListeners = configAttributes.getPartitionListeners();
-      for (int i = 0; i < configListeners.size(); i++) {
-        partitionAttributes.addPartitionListener(
-            DeclarableTypeInstantiator.newInstance(configListeners.get(i), cache));
-      }
-    }
-
-    return partitionAttributes;
-  }
