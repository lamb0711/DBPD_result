GEODE-5544: Cleanup AsyncEventQueueImpl

* Add methods to InternalGatewaySender to prevent type casting
  to AbstractGatewaySender
* Create GatewaySenderEventProcessor with method getTotalQueueSize
  to use OOP instead of instanceof checks

-import java.util.Iterator;
-import java.util.Set;
-import org.apache.geode.cache.wan.GatewaySender;
-import org.apache.geode.internal.cache.RegionQueue;
-import org.apache.geode.internal.cache.wan.AbstractGatewaySender;
-import org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor;
-import org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor;
-  private final GatewaySender sender;
+  private final InternalGatewaySender sender;
-  public AsyncEventQueueImpl(GatewaySender sender, AsyncEventListener asyncEventListener) {
+  public AsyncEventQueueImpl(InternalGatewaySender sender, AsyncEventListener asyncEventListener) {
-    return ((AbstractGatewaySender) sender).isPrimary();
+    return sender.isPrimary();
-    AbstractGatewaySenderEventProcessor eventProcessor =
-        ((AbstractGatewaySender) sender).getEventProcessor();
-
-    int size = 0;
-    if (eventProcessor instanceof ConcurrentSerialGatewaySenderEventProcessor) {
-      Set<RegionQueue> queues =
-          ((ConcurrentSerialGatewaySenderEventProcessor) eventProcessor).getQueues();
-      Iterator<RegionQueue> itr = queues.iterator();
-      while (itr.hasNext()) {
-        size = size + itr.next().size();
-      }
-    } else {
-      size = eventProcessor.getQueue().size();
-    }
-    return size;
+    return sender.getEventProcessor().getTotalQueueSize();
-    return (InternalGatewaySender) sender;
+    return sender;
-    AbstractGatewaySender abstractSender = (AbstractGatewaySender) sender;
-    return ((AsyncEventQueueStats) abstractSender.getStatistics());
+    return (AsyncEventQueueStats) sender.getStatistics();
-    AsyncEventQueueImpl asyncEventQueue = (AsyncEventQueueImpl) obj;
-    if (asyncEventQueue.getId().equals(getId())) {
-      return true;
-    }
-    return false;
+    AsyncEventQueueImpl other = (AsyncEventQueueImpl) obj;
+    return other.getId().equals(getId());
+  @Override
-    return ((AbstractGatewaySender) sender).getIsMetaQueue();
+    return sender.getIsMetaQueue();
-    InternalCache cache = ((AbstractGatewaySender) sender).getCache();
-    ((AbstractGatewaySender) sender).destroy(initiator);
+    InternalCache cache = sender.getCache();
+    sender.destroy(initiator);
-  public boolean isBucketSorted() {
-    // TODO Auto-generated method stub
-    return false;
-  }
-
+  @Override
-    return ((AbstractGatewaySender) sender).isForwardExpirationDestroy();
+    return sender.isForwardExpirationDestroy();
-    return ((AbstractGatewaySender) sender).waitUntilFlushed(timeout, unit);
+    return sender.waitUntilFlushed(timeout, unit);
-    return new StringBuffer().append(getClass().getSimpleName()).append("{").append("id=" + getId())
+    return new StringBuilder().append(getClass().getSimpleName()).append("{")
+        .append("id=" + getId())
