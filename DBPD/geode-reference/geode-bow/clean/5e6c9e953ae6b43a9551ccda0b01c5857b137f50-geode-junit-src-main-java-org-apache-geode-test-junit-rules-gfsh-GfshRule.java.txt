GEODE-8250: Create new custom log config acceptance tests (#5309)

* Adjust GfshRule use of TemporaryFolder and use it
* Move GfshRuleIntegrationTest from test to integrationTest
* Fixup GfshRuleIntegrationTest, VersionManager, and VersionManagerJUnitTest
* Add geode-old-versions to integrationTests
* Print JAVA_HOME directory tree if assertion about java binary fails
+import static java.util.Collections.synchronizedList;
+import static org.apache.geode.internal.lang.SystemUtils.isWindows;
-import java.util.Collections;
- * if you want to debug into the gfsh or the locator/servers started using this rule, you can do:
- * GfshScript.of("start locator", 30000).and("start server", 30001).withDebugPort(30002).execute
+ * <p>
+ * If you want to debug into the gfsh or the locator/servers started using this rule, you can do:
- * this will set the gfsh to be debuggable at port 30002, and the locator started to be debuggable
+ * <pre>
+ * GfshScript.of("start locator", 30000).and("start server", 30001).withDebugPort(30002).execute
+ * </pre>
+ *
+ * This will set the gfsh to be debuggable at port 30002, and the locator started to be debuggable
+
-  private String version;
+  private final String version;
-  public GfshRule() {}
+  public GfshRule() {
+    this(null);
+  }
-    gfshExecutions = Collections.synchronizedList(new ArrayList<>());
+    gfshExecutions = synchronizedList(new ArrayList<>());
-    ArrayList<GfshExecution> executionsWithMembersToStop = new ArrayList<>(gfshExecutions);
-    executionsWithMembersToStop.forEach(this::stopMembers);
+    ((Iterable<GfshExecution>) new ArrayList<>(gfshExecutions))
+        .forEach(this::stopMembers);
-      gfshExecutions.forEach(GfshExecution::killProcess);
+      gfshExecutions
+          .forEach(GfshExecution::killProcess);
-    } else {
-      return geodeHome.resolve("bin/gfsh");
-  }
-
-  private boolean isWindows() {
-    return System.getProperty("os.name").toLowerCase().contains("win");
+    return geodeHome.resolve("bin/gfsh");
-      File workingDir = new File(temporaryFolder.getRoot(), gfshScript.getName());
-      workingDir.mkdirs();
-      return execute(gfshScript, workingDir);
+      return execute(gfshScript, temporaryFolder.getRoot());
-   * this will stop the lcoator that's been started in this gfsh execution
+   * this will stop the locator that's been started in this gfsh execution
