GEODE-6945:geode-managment should create its own set of configurationâ€¦ (#3928)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>

* do not use xml domain object for region configuration
* add RegionType.UNSUPPORTED

-import org.apache.geode.cache.Region;
+import org.apache.geode.management.configuration.Region;
+import org.apache.geode.management.internal.configuration.converters.RegionConverter;
-    implements ConfigurationRealizer<RegionConfig, RuntimeRegionInfo> {
-  public RegionConfigRealizer() {}
+    implements ConfigurationRealizer<Region, RuntimeRegionInfo> {
+
+  private final RegionConverter converter = new RegionConverter();
-  public RealizationResult create(RegionConfig regionConfig, InternalCache cache) {
-    RegionFactory factory = getRegionFactory(cache, regionConfig.getRegionAttributes());
+  public RealizationResult create(Region regionConfig, InternalCache cache) {
+    RegionFactory factory = getRegionFactory(cache, regionConfig);
-    Region parentRegion = cache.getRegion(parentRegionPath);
+    org.apache.geode.cache.Region parentRegion = cache.getRegion(parentRegionPath);
+  RegionFactory getRegionFactory(Cache cache, Region regionConfig) {
+    RegionFactory factory =
+        cache.createRegionFactory(regionConfig.getType().name());
+    if (regionConfig.getDiskStoreName() != null) {
+      factory.setDiskStoreName(regionConfig.getDiskStoreName());
+    }
+    final String keyConstraint = regionConfig.getKeyConstraint();
+    final String valueConstraint = regionConfig.getValueConstraint();
+    if (keyConstraint != null && !keyConstraint.isEmpty()) {
+      Class<Object> keyConstraintClass =
+          CliUtil.forName(keyConstraint, CliStrings.CREATE_REGION__KEYCONSTRAINT);
+      factory.setKeyConstraint(keyConstraintClass);
+    }
+
+    if (valueConstraint != null && !valueConstraint.isEmpty()) {
+      Class<Object> valueConstraintClass =
+          CliUtil.forName(valueConstraint, CliStrings.CREATE_REGION__VALUECONSTRAINT);
+      factory.setValueConstraint(valueConstraintClass);
+    }
+    return factory;
+  }
+
-  public RuntimeRegionInfo get(RegionConfig config, InternalCache cache) {
-    Region<Object, Object> region = cache.getRegion("/" + config.getName());
+  public RuntimeRegionInfo get(Region config, InternalCache cache) {
+    org.apache.geode.cache.Region<Object, Object> region = cache.getRegion("/" + config.getName());
-  public RealizationResult update(RegionConfig config, InternalCache cache) {
+  public RealizationResult update(Region config, InternalCache cache) {
-  public RealizationResult delete(RegionConfig config, InternalCache cache) {
-    Region region = cache.getRegion(config.getName());
+  public RealizationResult delete(Region config, InternalCache cache) {
+    org.apache.geode.cache.Region region = cache.getRegion(config.getName());
