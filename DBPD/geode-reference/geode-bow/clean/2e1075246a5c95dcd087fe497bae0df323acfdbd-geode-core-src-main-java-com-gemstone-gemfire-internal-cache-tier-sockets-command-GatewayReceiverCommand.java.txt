Merge branch 'release/1.0.0-incubating.M3'

+import com.gemstone.gemfire.internal.cache.EventIDHolder;
-import com.gemstone.gemfire.internal.cache.KeyWithRegionContext;
-      EntryEventImpl clientEvent = null;
+      EventIDHolder clientEvent = null;
-            clientEvent = new EntryEventImpl(eventId);
+            clientEvent = new EventIDHolder(eventId);
-              if (region.keyRequiresRegionContext()) {
-                ((KeyWithRegionContext)key).setRegionContext(region);
-              }
-                    callbackArg, servConn.getProxyID(), false, clientEvent,
-                    servConn.isSqlFabricSystem());
+                    callbackArg, servConn.getProxyID(), false, clientEvent);
-            clientEvent = new EntryEventImpl(eventId);
+            clientEvent = new EventIDHolder(eventId);
-              if (region.keyRequiresRegionContext()) {
-                ((KeyWithRegionContext)key).setRegionContext(region);
-              }
-                  callbackArg, servConn.getProxyID(), false, clientEvent,
-                  servConn.isSqlFabricSystem());
+                  callbackArg, servConn.getProxyID(), false, clientEvent);
-                  .getCancelCriterion().cancelInProgress() != null) {
+                  .getCancelCriterion().isCancelInProgress()) {
-            clientEvent = new EntryEventImpl(eventId);
+            clientEvent = new EventIDHolder(eventId);
-            if (region.keyRequiresRegionContext()) {
-              ((KeyWithRegionContext)key).setRegionContext(region);
-            }
-              clientEvent = new EntryEventImpl(eventId);
+              clientEvent = new EventIDHolder(eventId);
-              if (region.keyRequiresRegionContext()) {
-                ((KeyWithRegionContext) key).setRegionContext(region);
-              }
