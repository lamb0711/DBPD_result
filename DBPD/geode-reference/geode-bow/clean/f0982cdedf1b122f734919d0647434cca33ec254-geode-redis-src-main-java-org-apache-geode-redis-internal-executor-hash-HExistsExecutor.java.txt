Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.Map;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.cache.Region;
+import org.apache.geode.redis.internal.RedisDataType;
-/**
- * <pre>
- *
- * Implements the Redis HEXISTS command to determine if a hash field exists for a given key.
- *
- * Examples:
- *
- * redis> HSET myhash field1 "foo"
- * (integer) 1
- * redis> HEXISTS myhash field1
- * (integer) 1
- * redis> HEXISTS myhash field2
- * (integer) 0
- *
- * </pre>
- */
-  private static final int NOT_EXISTS = 0;
+  private final int NOT_EXISTS = 0;
-  private static final int EXISTS = 1;
+  private final int EXISTS = 1;
-    boolean hasField;
+    ByteArrayWrapper key = command.getKey();
+
+    checkDataType(key, RedisDataType.REDIS_HASH, context);
+    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
+
+    if (keyRegion == null) {
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
+      return;
+    }
+
-    ByteArrayWrapper key = command.getKey();
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Map<ByteArrayWrapper, ByteArrayWrapper> map = getMap(context, key);
-      if (map == null || map.isEmpty()) {
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
-        return;
-      }
-      hasField = map.containsKey(field);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
-    }
+    boolean hasField = keyRegion.containsKey(field);
-    if (hasField) {
+    if (hasField)
-    } else {
+    else
-    }
