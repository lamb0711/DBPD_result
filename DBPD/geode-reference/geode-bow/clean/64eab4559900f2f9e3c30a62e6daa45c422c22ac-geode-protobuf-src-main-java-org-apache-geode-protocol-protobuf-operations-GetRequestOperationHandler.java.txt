GEODE-3213: Refactor ProtoBuf handler flow. This now closes #646

Signed-off-by: Alexander Murmann <amurmann@pivotal.io>

-import org.apache.geode.protocol.protobuf.*;
-import org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities;
+import org.apache.geode.protocol.protobuf.BasicTypes;
+import org.apache.geode.protocol.protobuf.ClientProtocol;
+import org.apache.geode.protocol.protobuf.Failure;
+import org.apache.geode.protocol.protobuf.RegionAPI;
+import org.apache.geode.protocol.protobuf.Result;
+import org.apache.geode.protocol.protobuf.Success;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-    implements OperationHandler<ClientProtocol.Request, ClientProtocol.Response> {
-  private static Logger logger = LogManager.getLogger();
+    implements OperationHandler<RegionAPI.GetRequest, RegionAPI.GetResponse> {
-  public ClientProtocol.Response process(SerializationService serializationService,
-      ClientProtocol.Request request, Cache cache) {
-    if (request.getRequestAPICase() != ClientProtocol.Request.RequestAPICase.GETREQUEST) {
-      return ProtobufResponseUtilities
-          .createAndLogErrorResponse("Improperly formatted get request message.", logger, null);
-    }
-    RegionAPI.GetRequest getRequest = request.getGetRequest();
-
-    String regionName = getRequest.getRegionName();
+  public Result<RegionAPI.GetResponse> process(SerializationService serializationService,
+      RegionAPI.GetRequest request, Cache cache) {
+    String regionName = request.getRegionName();
-      return ProtobufResponseUtilities.createErrorResponse("Region not found");
+      return Failure
+          .of(ClientProtocol.ErrorResponse.newBuilder().setMessage("Region not found").build());
-      Object decodedKey = ProtobufUtilities.decodeValue(serializationService, getRequest.getKey());
+      Object decodedKey = ProtobufUtilities.decodeValue(serializationService, request.getKey());
-        return ProtobufResponseUtilities.createNullGetResponse();
+        return Success.of(RegionAPI.GetResponse.newBuilder().build());
-      return ProtobufResponseUtilities.createGetResponse(encodedValue);
+      return Success.of(RegionAPI.GetResponse.newBuilder().setResult(encodedValue).build());
-      // can be thrown by encoding or decoding.
-      return ProtobufResponseUtilities.createAndLogErrorResponse("Encoding not supported.", logger,
-          ex);
+      return Failure.of(
+          ClientProtocol.ErrorResponse.newBuilder().setMessage("Encoding not supported.").build());
-      return ProtobufResponseUtilities
-          .createAndLogErrorResponse("Codec error in protobuf deserialization.", logger, ex);
+      return Failure.of(ClientProtocol.ErrorResponse.newBuilder()
+          .setMessage("Codec error in protobuf deserialization.").build());
