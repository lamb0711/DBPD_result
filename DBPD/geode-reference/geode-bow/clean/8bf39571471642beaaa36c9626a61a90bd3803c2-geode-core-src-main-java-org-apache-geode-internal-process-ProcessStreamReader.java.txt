Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- 
+
+
-  
+
-      } else if (this.thread.isAlive()){
+      } else if (this.thread.isAlive()) {
-      } else if (this.thread != null){
+      } else if (this.thread != null) {
-    String threadName = getClass().getSimpleName() + " stopAfterDelay Thread @" + Integer.toHexString(hashCode());
+    String threadName =
+        getClass().getSimpleName() + " stopAfterDelay Thread @" + Integer.toHexString(hashCode());
-  
+
-  
+
-  
+
-  
+
-  
+
-    sb.append(" alive=").append(isRunning()); //this.thread == null ? false : this.thread.isAlive());
+    sb.append(" alive=").append(isRunning()); // this.thread == null ? false :
+                                              // this.thread.isAlive());
-  
+
-  
+
-   * Defines the callback for  lines of output found in the stream.
+   * Defines the callback for lines of output found in the stream.
-    BLOCKING,
-    NON_BLOCKING;
+    BLOCKING, NON_BLOCKING;
-  
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-        case NON_BLOCKING: return new NonBlockingProcessStreamReader(this);
-        default: return new BlockingProcessStreamReader(this);
+        case NON_BLOCKING:
+          return new NonBlockingProcessStreamReader(this);
+        default:
+          return new BlockingProcessStreamReader(this);
