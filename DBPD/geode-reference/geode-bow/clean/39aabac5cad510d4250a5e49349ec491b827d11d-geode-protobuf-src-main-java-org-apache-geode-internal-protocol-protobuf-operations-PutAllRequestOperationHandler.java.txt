Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

-package org.apache.geode.protocol.protobuf.operations;
+package org.apache.geode.internal.protocol.protobuf.operations;
-import org.apache.geode.protocol.operations.OperationHandler;
+import org.apache.geode.internal.protocol.operations.OperationHandler;
-import org.apache.geode.protocol.protobuf.Failure;
-import org.apache.geode.protocol.protobuf.ProtocolErrorCode;
+import org.apache.geode.internal.protocol.protobuf.Failure;
+import org.apache.geode.internal.protocol.protobuf.ProtocolErrorCode;
-import org.apache.geode.protocol.protobuf.Result;
-import org.apache.geode.protocol.protobuf.Success;
-import org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities;
-import org.apache.geode.protocol.protobuf.utilities.ProtobufUtilities;
-import org.apache.geode.serialization.SerializationService;
-import org.apache.geode.serialization.exception.UnsupportedEncodingTypeException;
-import org.apache.geode.serialization.registry.exception.CodecNotRegisteredForTypeException;
+import org.apache.geode.internal.protocol.protobuf.Result;
+import org.apache.geode.internal.protocol.protobuf.Success;
+import org.apache.geode.internal.protocol.protobuf.utilities.ProtobufResponseUtilities;
+import org.apache.geode.internal.protocol.protobuf.utilities.ProtobufUtilities;
+import org.apache.geode.internal.serialization.SerializationService;
+import org.apache.geode.internal.serialization.exception.UnsupportedEncodingTypeException;
+import org.apache.geode.internal.serialization.registry.exception.CodecNotRegisteredForTypeException;
+
+import static org.apache.geode.internal.protocol.protobuf.ProtocolErrorCode.*;
-  private static Logger logger = LogManager.getLogger();
+  private static final Logger logger = LogManager.getLogger();
-    Region region = executionContext.getCache().getRegion(putAllRequest.getRegionName());
+    String regionName = putAllRequest.getRegionName();
+    Region region = executionContext.getCache().getRegion(regionName);
-      return Failure.of(ProtobufResponseUtilities.createAndLogErrorResponse(
-          ProtocolErrorCode.REGION_NOT_FOUND,
-          "Region passed by client did not exist: " + putAllRequest.getRegionName(), logger, null));
+      logger.error("Received PutAll request for non-existing region {}", regionName);
+      return Failure.of(ProtobufResponseUtilities.makeErrorResponse(REGION_NOT_FOUND,
+          "Region passed does not exist: " + regionName));
-      return buildAndLogKeyedError(entry, ProtocolErrorCode.VALUE_ENCODING_ERROR,
-          "Encoding not supported", ex);
+      return buildAndLogKeyedError(entry, VALUE_ENCODING_ERROR, "Encoding not supported", ex);
-      return buildAndLogKeyedError(entry, ProtocolErrorCode.VALUE_ENCODING_ERROR,
+      return buildAndLogKeyedError(entry, VALUE_ENCODING_ERROR,
-      return buildAndLogKeyedError(entry, ProtocolErrorCode.CONSTRAINT_VIOLATION,
+      return buildAndLogKeyedError(entry, CONSTRAINT_VIOLATION,
