GEODE-2215 NPE in ViewCreator thread setting public keys into a NetView

NetView creates a ConcurrentHashmap to hold the public keys when it's
constructed but it had some methods that were replacing it with a
Hashmap.  I made the field final and also added checks to avoid putting
a null key or value into the map.

-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.util.stream.*;
-import java.util.*;
-import java.util.concurrent.ConcurrentHashMap;
-
-import org.apache.logging.log4j.Logger;
-
+import org.apache.logging.log4j.Logger;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Random;
+import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.stream.Collectors;
-  private Map<InternalDistributedMember, Object> publicKeys = new ConcurrentHashMap<>();
+  private final Map<InternalDistributedMember, Object> publicKeys = new ConcurrentHashMap<>();
-    this.publicKeys = new HashMap<>(other.publicKeys);
+    this.publicKeys.putAll(other.publicKeys);
-    publicKeys.put(mbr, key);
+    if (mbr != null && key != null) {
+      publicKeys.put(mbr, key);
+    }
-    this.publicKeys.putAll(otherView.publicKeys);
+    if (otherView.publicKeys != null) {
+      this.publicKeys.putAll(otherView.publicKeys);
+    }
+
-    if (!(other instanceof NetView)) {
-      return false;
+    if (other instanceof NetView) {
+      return this.members.equals(((NetView) other).getMembers());
-    return this.members.equals(((NetView) other).getMembers());
+    return false;
-    publicKeys = DataSerializer.readHashMap(in);
+    Map pubkeys = DataSerializer.readHashMap(in);
+    if (pubkeys != null) {
+      publicKeys.putAll(pubkeys);
+    }
