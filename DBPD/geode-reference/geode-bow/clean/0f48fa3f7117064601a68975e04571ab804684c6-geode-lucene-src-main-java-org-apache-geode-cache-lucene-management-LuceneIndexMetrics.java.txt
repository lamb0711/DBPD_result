GEODE-2620: Rate stats removed from LuceneIndexMetrics

	* Commit Rate, update rate and query rate removed from LuceneIndexMetrics
	* They can be added back again when the getRate method in StatsRate.java is fixed

	This closes #418

-  private final float queryRate;
-
-  private final float updateRate;
-
-  private final float commitRate;
-
-      "queryRate", "queryRateAverageLatency", "queryExecutionsInProgress",
-      "queryExecutionTotalHits", "updates", "updateTime", "updateRate", "updateRateAverageLatency",
-      "updatesInProgress", "commits", "commitTime", "commitRate", "commitRateAverageLatency",
-      "commitsInProgress", "documents"})
+      "queryRateAverageLatency", "queryExecutionsInProgress", "queryExecutionTotalHits", "updates",
+      "updateTime", "updateRateAverageLatency", "updatesInProgress", "commits", "commitTime",
+      "commitRateAverageLatency", "commitsInProgress", "documents"})
-      long queryExecutionTime, float queryRate, long queryRateAverageLatency,
-      int queryExecutionsInProgress, long queryExecutionTotalHits, int updates, long updateTime,
-      float updateRate, long updateRateAverageLatency, int updatesInProgress, int commits,
-      long commitTime, float commitRate, long commitRateAverageLatency, int commitsInProgress,
-      int documents) {
+      long queryExecutionTime, long queryRateAverageLatency, int queryExecutionsInProgress,
+      long queryExecutionTotalHits, int updates, long updateTime, long updateRateAverageLatency,
+      int updatesInProgress, int commits, long commitTime, long commitRateAverageLatency,
+      int commitsInProgress, int documents) {
-    this.queryRate = queryRate;
-    this.updateRate = updateRate;
-    this.commitRate = commitRate;
-   * Returns the rate of query execution using the {@link LuceneIndex}
-   *
-   * @return the rate of query execution using the Lucene Index
-   */
-  public float getQueryRate() {
-    return this.queryRate;
-  }
-
-  /**
-   * Returns the rate at which update operations are executed on the {@link LuceneIndex}
-   *
-   * @return rate at which update operations are executed on the {@link LuceneIndex}
-   */
-  public float getUpdateRate() {
-    return this.updateRate;
-  }
-
-  /**
-   * Returns the rate of commit operations on the {@link LuceneIndex}
-   *
-   * @return the rate of commit operations on the Lucene Index
-   */
-  public float getCommitRate() {
-    return this.commitRate;
-  }
-
-  /**
-        .append(this.queryExecutionTime).append("; queryRate=").append(this.queryRate)
-        .append("; queryRateAverageLatency=").append(this.queryRateAverageLatency)
-        .append("; queryExecutionsInProgress=").append(this.queryExecutionsInProgress)
-        .append("; queryExecutionTotalHits=").append(this.queryExecutionTotalHits)
-        .append("; updates=").append(this.updates).append("; updateTime=").append(this.updateTime)
-        .append("; updateRate=").append(this.updateRate).append("; updateRateAverageLatency=")
+        .append(this.queryExecutionTime).append("; queryRateAverageLatency=")
+        .append(this.queryRateAverageLatency).append("; queryExecutionsInProgress=")
+        .append(this.queryExecutionsInProgress).append("; queryExecutionTotalHits=")
+        .append(this.queryExecutionTotalHits).append("; updates=").append(this.updates)
+        .append("; updateTime=").append(this.updateTime).append("; updateRateAverageLatency=")
-        .append("; commitTime=").append(this.commitTime).append("; commitRate=")
-        .append(this.commitRate).append("; commitRateAverageLatency=")
+        .append("; commitTime=").append(this.commitTime).append("; commitRateAverageLatency=")
