Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This listener will be attached to each notification region
- * corresponding to a member 
+ * This listener will be attached to each notification region corresponding to a member
-public class NotificationCacheListener implements
-		CacheListener<NotificationKey, Notification> {
-  
+public class NotificationCacheListener implements CacheListener<NotificationKey, Notification> {
+
-   * For the 
+   * For the
-	private NotificationHubClient notifClient;
-	
-  private volatile boolean  readyForEvents;
+  private NotificationHubClient notifClient;
-	public NotificationCacheListener(MBeanProxyFactory proxyHelper) {
+  private volatile boolean readyForEvents;
-		notifClient = new NotificationHubClient(proxyHelper);
-		this.readyForEvents = false;
+  public NotificationCacheListener(MBeanProxyFactory proxyHelper) {
-	}
+    notifClient = new NotificationHubClient(proxyHelper);
+    this.readyForEvents = false;
-	@Override
-	public void afterCreate(EntryEvent<NotificationKey, Notification> event) {
-	  if(!readyForEvents){
+  }
+
+  @Override
+  public void afterCreate(EntryEvent<NotificationKey, Notification> event) {
+    if (!readyForEvents) {
-		notifClient.sendNotification(event);
+    notifClient.sendNotification(event);
-	}
+  }
-	@Override
-	public void afterDestroy(EntryEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterDestroy(EntryEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterInvalidate(EntryEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterInvalidate(EntryEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterRegionClear(RegionEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterRegionClear(RegionEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterRegionCreate(RegionEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterRegionCreate(RegionEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterRegionDestroy(RegionEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterRegionDestroy(RegionEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterRegionInvalidate(
-			RegionEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterRegionInvalidate(RegionEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterRegionLive(RegionEvent<NotificationKey, Notification> event) {
-		// TODO Auto-generated method stub
+  @Override
+  public void afterRegionLive(RegionEvent<NotificationKey, Notification> event) {
+    // TODO Auto-generated method stub
-	}
+  }
-	@Override
-	public void afterUpdate(EntryEvent<NotificationKey, Notification> event) {
-    if(!readyForEvents){
+  @Override
+  public void afterUpdate(EntryEvent<NotificationKey, Notification> event) {
+    if (!readyForEvents) {
-		notifClient.sendNotification(event);
+    notifClient.sendNotification(event);
-	}
+  }
-	@Override
-	public void close() {
-		// TODO Auto-generated method stub
+  @Override
+  public void close() {
+    // TODO Auto-generated method stub
-	}
-  public void markReady(){
+  }
+
+  public void markReady() {
