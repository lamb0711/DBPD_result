Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

-import org.apache.geode.cache.execute.Function;
+import org.apache.geode.management.internal.cli.CliUtil;
+
-  default void logInfo(final String message) {
-    logInfo(message, null);
+  default Set<DistributedMember> findMembers(String[] groups, String[] members) {
+    return CliUtil.findMembers(groups, members);
-  default void logInfo(final Throwable cause) {
-    logInfo(cause.getMessage(), cause);
+  default Set<DistributedMember> findMembersForRegion(InternalCache cache, String regionPath) {
+    return CliUtil.getRegionAssociatedMembers(regionPath, cache);
-  default void logInfo(final String message, final Throwable cause) {
-    if (isLogging()) {
-      getGfsh().logInfo(message, cause);
-    }
-  }
-
-  default void logWarning(final String message) {
-    logWarning(message, null);
-  }
-
-  default void logWarning(final Throwable cause) {
-    logWarning(cause.getMessage(), cause);
-  }
-
-  default void logWarning(final String message, final Throwable cause) {
-    if (isLogging()) {
-      getGfsh().logWarning(message, cause);
-    }
-  }
-
-  default void logSevere(final String message) {
-    logSevere(message, null);
-  }
-
-  default void logSevere(final Throwable cause) {
-    logSevere(cause.getMessage(), cause);
-  }
-
-  default void logSevere(final String message, final Throwable cause) {
-    if (isLogging()) {
-      getGfsh().logSevere(message, cause);
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  default <T extends Function> T register(T function) {
-    if (FunctionService.isRegistered(function.getId())) {
-      function = (T) FunctionService.getFunction(function.getId());
-    } else {
-      FunctionService.registerFunction(function);
-    }
-    return function;
-  }
