GEODE-7839: add gfsh oauth token support (#4736)

The gfsh connect command now has a --token option.

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>

-      @CliOption(key = {CliStrings.CONNECT__USERNAME},
+      @CliOption(key = {CliStrings.CONNECT__USERNAME}, specifiedDefaultValue = "",
-      @CliOption(key = {CliStrings.CONNECT__PASSWORD},
+      @CliOption(key = {CliStrings.CONNECT__PASSWORD}, specifiedDefaultValue = "",
+      @CliOption(key = {CliStrings.CONNECT__TOKEN}, specifiedDefaultValue = "",
+          help = CliStrings.CONNECT__TOKEN__HELP) String token,
+    if ("".equals(token)) {
+      return ResultModel.createError("--token requires a value, for example --token=foo");
+    }
+
+    if (token != null && (userName != null || password != null)) {
+      return ResultModel.createError("--token cannot be combined with --user or --password");
+    }
+
-    if (userName != null) {
+    if (userName != null && !"".equals(userName)) {
-      if (password == null) {
+      if (password == null || "".equals(password)) {
+    } else if (token != null) {
+      gfProperties.setProperty(ResourceConstants.TOKEN, token);
-      if (gfProperties.containsKey(ResourceConstants.USER_NAME)) {
+      if (gfProperties.containsKey(ResourceConstants.USER_NAME)
+          || gfProperties.containsKey(ResourceConstants.TOKEN)) {
-      if (gfProperties.containsKey(ResourceConstants.USER_NAME)) {
+      if (gfProperties.containsKey(ResourceConstants.USER_NAME)
+          || gfProperties.containsKey(ResourceConstants.TOKEN)) {
