GEODE-228: fix intermittent failures in NanoTimer tests

- NanoTimer2JUnitTest has been removed since it was an old
test that has been replaced by NanoTimerJUnitTest.
- NanoTimer can now be constructed with a TimeService.
 This allows unit tests to insert a different clock.
- NanoTimerJUnitTest now uses its own TimeService when
testing NanoTimer which prevents intermittent failures.

+  private final TimeService timeService;
+  
+  private final static TimeService systemTimeService = new TimeService() {
+    @Override
+    public long getTime() {
+      return java.lang.System.nanoTime();
+    }
+  };
+  
-    this.lastResetTime = getTime();
+    this.timeService = systemTimeService;
+    this.lastResetTime = systemTimeService.getTime();
+    this.constructionTime = this.lastResetTime;
+  }
+  
+  /**
+   * For unit testing
+   */
+  NanoTimer(TimeService ts) {
+    this.timeService = ts;
+    this.lastResetTime = ts.getTime();
-    this.lastResetTime = getTime();
+    this.lastResetTime = this.timeService.getTime();
-    return getTime() - this.lastResetTime;
+    return this.timeService.getTime() - this.lastResetTime;
-    return getTime() - this.constructionTime;
+    return this.timeService.getTime() - this.constructionTime;
+  }
+  
+  /**
+   * Allows unit tests to insert a deterministic clock for testing.
+   */
+  interface TimeService {
+    /**
+     * Returns the current time.
+     */
+    public long getTime();
