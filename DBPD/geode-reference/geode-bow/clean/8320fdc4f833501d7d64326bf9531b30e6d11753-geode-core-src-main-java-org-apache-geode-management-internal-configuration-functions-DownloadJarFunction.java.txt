GEODE-6709: Locators should not start when ClusterConfigurationServicâ€¦ (#3503)

Co-authored-by: Jinmei Liao <jiliao@pivotal.io>


-import java.io.FileNotFoundException;
-import java.rmi.RemoteException;
-import org.apache.geode.cache.execute.FunctionException;
+import org.apache.geode.management.internal.ManagementAgent;
-    InternalLocator locator = (InternalLocator) Locator.getLocator();
+    InternalLocator locator = getLocator();
+        SystemManagementService managementService = getExistingManagementService(context);
+        ManagementAgent managementAgent = managementService.getManagementAgent();
+        if (managementAgent == null) {
+          throw new IllegalStateException(
+              "Failed to download jar because JMX Management agent is not available. Please ensure geode property jmx-manager is set to true.");
+        }
+
+        RemoteInputStreamServer istream = null;
-          RemoteStreamExporter exporter = ((SystemManagementService) SystemManagementService
-              .getExistingManagementService(context.getCache())).getManagementAgent()
-                  .getRemoteStreamExporter();
-          RemoteInputStreamServer istream = null;
-          try {
-            istream =
-                new SimpleRemoteInputStream(new BufferedInputStream(new FileInputStream(jarFile)));
-            result = exporter.export(istream);
-            istream = null;
-          } catch (FileNotFoundException | RemoteException ex) {
-            throw new FunctionException(ex);
-          } finally {
-            // we will only close the stream here if the server fails before
-            // returning an exported stream
-            if (istream != null) {
-              istream.close();
-            }
-          }
+          RemoteStreamExporter exporter = managementAgent.getRemoteStreamExporter();
+          istream =
+              new SimpleRemoteInputStream(new BufferedInputStream(new FileInputStream(jarFile)));
+          result = exporter.export(istream);
+          istream = null;
+
+        } finally {
+          // we will only close the stream here if the server fails before
+          // returning an exported stream
+          if (istream != null) {
+            istream.close();
+          }
+  InternalLocator getLocator() {
+    return (InternalLocator) Locator.getLocator();
+  }
+
+  SystemManagementService getExistingManagementService(FunctionContext<Object[]> context) {
+    return (SystemManagementService) SystemManagementService
+        .getExistingManagementService(context.getCache());
+  }
+
