Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class DurableClientInfoResponse extends AdminResponse
-{
+public class DurableClientInfoResponse extends AdminResponse {
-   * The result for the query made the request (hasDurableClient or
-   * isPrimaryForDurableClient).
+   * The result for the query made the request (hasDurableClient or isPrimaryForDurableClient).
-   * Returns a <code>DurableClientInfoResponse</code> that will be returned to
-   * the specified recipient.
+   * Returns a <code>DurableClientInfoResponse</code> that will be returned to the specified
+   * recipient.
-      InternalDistributedMember recipient, DurableClientInfoRequest request)
-  {
+      InternalDistributedMember recipient, DurableClientInfoRequest request) {
-      GemFireCacheImpl c = (GemFireCacheImpl)CacheFactory.getInstanceCloseOk(dm
-          .getSystem());
+      GemFireCacheImpl c = (GemFireCacheImpl) CacheFactory.getInstanceCloseOk(dm.getSystem());
-        CacheServerImpl server = (CacheServerImpl)c.getCacheServers()
-            .iterator().next();
+        CacheServerImpl server = (CacheServerImpl) c.getCacheServers().iterator().next();
-        case DurableClientInfoRequest.HAS_DURABLE_CLIENT_REQUEST: {
-          m.returnVal = server.getAcceptor().getCacheClientNotifier()
-              .hasDurableClient(request.durableId);
-          break;
-        }
-        case DurableClientInfoRequest.IS_PRIMARY_FOR_DURABLE_CLIENT_REQUEST: {
-          m.returnVal = server.getAcceptor().getCacheClientNotifier()
-              .hasPrimaryForDurableClient(request.durableId);
-          break;
-        }
+          case DurableClientInfoRequest.HAS_DURABLE_CLIENT_REQUEST: {
+            m.returnVal =
+                server.getAcceptor().getCacheClientNotifier().hasDurableClient(request.durableId);
+            break;
+          }
+          case DurableClientInfoRequest.IS_PRIMARY_FOR_DURABLE_CLIENT_REQUEST: {
+            m.returnVal = server.getAcceptor().getCacheClientNotifier()
+                .hasPrimaryForDurableClient(request.durableId);
+            break;
+          }
-    }
-    catch (CacheClosedException ex) {
+    } catch (CacheClosedException ex) {
-  public boolean getResultBoolean()
-  {
+  public boolean getResultBoolean() {
-  public void toData(DataOutput out) throws IOException
-  {
+  public void toData(DataOutput out) throws IOException {
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException
-  {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-  public String toString()
-  {
+  public String toString() {
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
