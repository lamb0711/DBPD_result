Merge branch 'release/1.0.0-incubating.M3'

+import com.gemstone.gemfire.internal.offheap.annotations.Released;
- * @since 6.5
+ * @since GemFire 6.5
-  protected static final short IS_PUT_DML = (SKIP_CALLBACKS << 1);
-  private boolean isPutDML;
-  
-	this.isPutDML = event.isPutDML();
-    this.isPutDML = (flags & IS_PUT_DML) != 0;
-      // get the "keyRequiresRegionContext" flag from first element assuming
-      // all key objects to be uniform
-      final boolean requiresRegionContext =
-        (this.putAllData[0].key instanceof KeyWithRegionContext);
-        this.putAllData[i].toData(out, requiresRegionContext);
+        this.putAllData[i].toData(out);
-    if (this.isPutDML) flags |= IS_PUT_DML;
-    EntryEventImpl baseEvent = EntryEventImpl.create(
+    @Released EntryEventImpl baseEvent = EntryEventImpl.create(
-	baseEvent.setPutDML(this.isPutDML);
-          EntryEventImpl ev = PutAllPRMessage.getEventFromEntry(r, myId, eventSender, i, putAllData, false, bridgeContext, posDup, !skipCallbacks, isPutDML);
+          @Released EntryEventImpl ev = PutAllPRMessage.getEventFromEntry(r, myId, eventSender, i, putAllData, false, bridgeContext, posDup, !skipCallbacks);
