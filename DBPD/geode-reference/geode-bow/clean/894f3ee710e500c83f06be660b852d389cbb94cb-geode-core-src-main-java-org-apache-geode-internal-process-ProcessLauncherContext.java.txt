GEODE-3413: overhaul launcher and process classes and tests

This is primarily an overall of all ServerLauncher and LocatorLauncher
tests and org.apache.geode.internal.process tests. The main classes in
org.apachage.geode.internal.process package are also cleaned up.

In addition, several bugs involving these classes and tests are fixed.

Here is the complete list of tickets that are resolved in this overhaul:

* GEODE-1229: LocatorLauncherRemoteJUnitTest.testStartOverwritesStalePidFile
* GEODE-2791: LocatorLauncherAssemblyIntegrationTest.testLocatorStopsWhenJmxPortIsNonZero fails intermittently with AssertionError
* GEODE-1308: CI failure: LocatorLauncherTest.testSetBindAddressToNonLocalHost
* GEODE-1309: CI failure: ServerLauncherTest.testSetServerBindAddressToNonLocalHost
* GEODE-3193: locator pid file is removed even if there was a problem while shutting down
* GEODE-3413: Overhaul launcher tests and process tests
* GEODE-3414: Cleanup org.apache.geode.internal.process package

Note I moved all useful tests from LocatorLauncherAssemblyIntegrationTest
into the other launcher tests in geode-core.

-
-import org.apache.geode.distributed.internal.DistributionConfig;
-import org.apache.geode.internal.io.TeeOutputStream;
-import org.apache.geode.internal.io.TeePrintStream;
+import static org.apache.commons.lang.Validate.notNull;
-import java.io.*;
+import org.apache.geode.distributed.internal.DistributionConfig;
+
-  private static final ThreadLocal<ProcessLauncherContext> DATA =
-      new ThreadLocal<ProcessLauncherContext>();
+  private static final ThreadLocal<ProcessLauncherContext> DATA = new ThreadLocal<>();
+
+  private final boolean redirectOutput;
+  private final Properties overriddenDefaults;
+  private final StartupStatusListener startupListener;
-    final ProcessLauncherContext context = get();
+    ProcessLauncherContext context = get();
-    final ProcessLauncherContext context = get();
+    ProcessLauncherContext context = get();
-
-    final ProcessLauncherContext context = get();
+    ProcessLauncherContext context = get();
-  public static void set(final boolean redirectOutput, final Properties contingentProperties,
+  public static void set(final boolean redirectOutput, final Properties overriddenDefaults,
-    DATA.set(new ProcessLauncherContext(redirectOutput, contingentProperties, startupListener));
+    notNull(overriddenDefaults,
+        "Invalid overriddenDefaults '" + overriddenDefaults + "' specified");
+
+    DATA.set(new ProcessLauncherContext(redirectOutput, overriddenDefaults, startupListener));
-    // DATA.get().restoreErrorStream();
-  private static void installLogListener(StartupStatusListener startupListener) {
+  private static void installLogListener(final StartupStatusListener startupListener) {
-  private final boolean redirectOutput;
-  private final Properties overriddenDefaults;
-  private final StartupStatusListener startupListener;
-  private PrintStream err;
-
-    return this.redirectOutput;
+    return redirectOutput;
-    return this.overriddenDefaults;
+    return overriddenDefaults;
-    return this.startupListener;
-  }
-
-  @SuppressWarnings("unused")
-  private void teeErrorStream() {
-    final FileOutputStream fdErr = new FileOutputStream(FileDescriptor.err);
-    this.err = new PrintStream(new BufferedOutputStream(fdErr, 128), true);
-    System.setErr(new TeePrintStream(new TeeOutputStream(new BufferedOutputStream(fdErr, 128))));
-  }
-
-  @SuppressWarnings("unused")
-  private void restoreErrorStream() {
-    if (System.err instanceof TeePrintStream) {
-      final TeePrintStream tee = ((TeePrintStream) System.err);
-      final OutputStream branch = tee.getTeeOutputStream().getBranchOutputStream();
-
-      PrintStream newStdErr = null;
-      if (branch == null) {
-        newStdErr = this.err;
-      } else if (branch instanceof PrintStream) {
-        newStdErr = (PrintStream) branch;
-      } else {
-        newStdErr = new PrintStream(new BufferedOutputStream(branch, 128), true);
-      }
-      System.setErr(newStdErr);
-    }
+    return startupListener;
