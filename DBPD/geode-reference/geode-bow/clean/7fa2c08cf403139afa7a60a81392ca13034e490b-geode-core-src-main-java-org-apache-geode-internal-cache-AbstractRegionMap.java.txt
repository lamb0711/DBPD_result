GEODE-1740: Correct potential region inconsistencies with concurrent clear and transaction commit

-    lockForTXCacheModification(owner, versionTag);
-    } finally {
-      releaseTXCacheModificationLock(owner, versionTag);
-    lockForTXCacheModification(owner, versionTag);
-      releaseTXCacheModificationLock(owner, versionTag);
-      lockForTXCacheModification(owner, versionTag);
-        releaseTXCacheModificationLock(owner, versionTag);
-  /** get version-generation permission from the region's version vector */
-  private void lockForTXCacheModification(LocalRegion owner, VersionTag tag) {
-
+  @Override
+  public void lockRegionForAtomicTX(LocalRegion r) {
-      armLockTestHook.beforeLock(owner, null);
+      armLockTestHook.beforeLock(r, null);
-    if (!(tag != null && tag.isFromOtherMember())) {
-      RegionVersionVector vector = owner.getVersionVector();
-      if (vector != null && !owner.hasServerProxy()) {
-        vector.lockForCacheModification();
-      }
+    RegionVersionVector vector = r.getVersionVector();
+    if (vector != null) {
+      vector.lockForCacheModification();
-      armLockTestHook.afterLock(owner, null);
-
+      armLockTestHook.afterLock(r, null);
-  /** release version-generation permission from the region's version vector */
-  private void releaseTXCacheModificationLock(LocalRegion owner, VersionTag tag) {
-
+  @Override
+  public void unlockRegionForAtomicTX(LocalRegion r) {
-      armLockTestHook.beforeRelease(owner, null);
+      armLockTestHook.beforeRelease(r, null);
-    if (!(tag != null && tag.isFromOtherMember())) {
-      RegionVersionVector vector = owner.getVersionVector();
-      if (vector != null && !owner.hasServerProxy()) {
-        vector.releaseCacheModificationLock();
-      }
+    RegionVersionVector vector = r.getVersionVector();
+    if (vector != null) {
+      vector.releaseCacheModificationLock();
-      armLockTestHook.afterRelease(owner, null);
-
+      armLockTestHook.afterRelease(r, null);
