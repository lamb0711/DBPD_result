GEODE-8305: Revert "Feature/expand pubsub support (#5284)" (#5310)


-import java.util.Collection;
-import java.util.stream.Collectors;
-import org.apache.geode.redis.internal.data.ByteArrayWrapper;
+import org.apache.logging.log4j.Logger;
+
+import org.apache.geode.logging.internal.log4j.api.LogService;
+  private static final Logger logger = LogService.getLogger();
+    List<byte[]> commandElems = command.getProcessedCommand();
-    List<String> channelNames = extractChannelNames(command);
-    if (channelNames.isEmpty()) {
-      channelNames = context.getPubSub().findSubscribedChannels(context.getClient());
-    }
+    byte[] channelName = commandElems.get(1);
+    long subscriptionCount =
+        context.getPubSub().unsubscribe(new String(channelName), context.getClient());
-    Collection<Collection<?>> response = unsubscribe(context, channelNames);
+    ArrayList<Object> items = new ArrayList<>();
+    items.add("unsubscribe");
+    items.add(channelName);
+    items.add(subscriptionCount);
-    return RedisResponse.flattenedArray(response);
-  }
-
-  private List<String> extractChannelNames(Command command) {
-    return command.getProcessedCommandWrappers().stream()
-        .skip(1)
-        .map(ByteArrayWrapper::toString)
-        .collect(Collectors.toList());
-  }
-
-  private Collection<Collection<?>> unsubscribe(ExecutionHandlerContext context,
-      List<String> channelNames) {
-    Collection<Collection<?>> response = new ArrayList<>();
-
-    if (channelNames.isEmpty()) {
-      response.add(createItem(null, 0));
-    } else {
-      for (String channel : channelNames) {
-        long subscriptionCount =
-            context.getPubSub().unsubscribe(channel, context.getClient());
-
-        response.add(createItem(channel, subscriptionCount));
-      }
-    }
-
-    return response;
-  }
-
-  private ArrayList<Object> createItem(String channelName, long subscriptionCount) {
-    ArrayList<Object> oneItem = new ArrayList<>();
-    oneItem.add("unsubscribe");
-    oneItem.add(channelName);
-    oneItem.add(subscriptionCount);
-    return oneItem;
+    return RedisResponse.array(items);
