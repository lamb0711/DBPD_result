GEODE-4858 refactor jdbc describe & list commands to use result model (#1939)


-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-  public Result listMapping() {
+  public ResultModel listMapping() {
-      return ResultBuilder.createInfoResult(EXPERIMENTAL + "\n" + NO_MAPPINGS_FOUND);
+      return ResultModel.createInfo(EXPERIMENTAL + "\n" + "No mappings found");
-    TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
-    boolean mappingsExist = fillTabularResultData(mappings, tabularResultData);
-    return createResult(tabularResultData, mappingsExist);
-  }
-
-  private Result createResult(TabularResultData tabularResultData, boolean mappingsExist) {
+    ResultModel resultModel = new ResultModel();
+    boolean mappingsExist = fillTabularResultData(mappings, resultModel.addTable());
-      tabularResultData.setHeader(EXPERIMENTAL);
-      return ResultBuilder.buildResult(tabularResultData);
+      resultModel.setHeader(EXPERIMENTAL);
+      return resultModel;
-      return ResultBuilder.createInfoResult(EXPERIMENTAL + "\n" + NO_MAPPINGS_FOUND);
+      return ResultModel.createInfo(EXPERIMENTAL + "\n" + NO_MAPPINGS_FOUND);
-      TabularResultData tabularResultData) {
+      TabularResultModel tableModel) {
-      tabularResultData.accumulate(LIST_OF_MAPPINGS, mapping.getRegionName());
+      tableModel.accumulate(LIST_OF_MAPPINGS, mapping.getRegionName());
