Merge branch 'release/1.5.0'

-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.SynchronizationCommitConflictException;
-import org.apache.geode.internal.logging.LogService;
+  @Override
+  @Override
+  @Override
+  @Override
-      try {
-        response.waitForReliableDelivery();
-      } catch (ReliableReplyException e) {
-        throw new TransactionDataNodeHasDepartedException(e);
-      } catch (ReplyException e) {
-        e.handleAsUnexpected();
-      } catch (InterruptedException e) {
-      }
-    } catch (SynchronizationCommitConflictException e) {
-      throw e;
-    } catch (CommitConflictException cce) {
-      throw cce;
-    } catch (TransactionException te) {
-      throw te;
+      response.waitForReliableDelivery();
+    } catch (ReliableReplyException e) {
+      throw new TransactionDataNodeHasDepartedException(e);
+    } catch (ReplyException e) {
+      e.handleCause();
+    } catch (InterruptedException ignored) {
+  @Override
+  @Override
-  public Cache getCache() {
-    return this.proxy.getTxMgr().getCache();
+  @Override
+  public InternalCache getCache() {
+    return this.proxy.getCache();
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
-    return getTXRegionStub(currRegion).getRegionKeysForIteration(currRegion);
+    return getTXRegionStub(currRegion).getRegionKeysForIteration();
+  @Override
+  @Override
+  @Override
