Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Factory for creating GemFire administration entities. 
+ * Factory for creating GemFire administration entities.
- * @since GemFire     3.5
- * @deprecated as of 7.0 use the <code><a href="{@docRoot}/org/apache/geode/management/package-summary.html">management</a></code> package instead
+ * @since GemFire 3.5
+ * @deprecated as of 7.0 use the <code><a href=
+ *             "{@docRoot}/org/apache/geode/management/package-summary.html">management</a></code>
+ *             package instead
-  
+
-   * Sets the address this VM should bind to when connecting to the distributed
-   * system.  This involves a system property, so using this option will limit
-   * all connections to distributed systems to this one network interface.
+   * Sets the address this VM should bind to when connecting to the distributed system. This
+   * involves a system property, so using this option will limit all connections to distributed
+   * systems to this one network interface.
-   * Using a null or empty bindAddress will clear the usage of this option and
-   * connections to distributed systems will return to using all available
-   * network interfaces.
+   * Using a null or empty bindAddress will clear the usage of this option and connections to
+   * distributed systems will return to using all available network interfaces.
-   * This method always throws UnsupportedOperationException because it is
-   * now deprecated and is unsafe to use. Please use {@link 
-   * DistributedSystemConfig#setBindAddress} instead.
+   * This method always throws UnsupportedOperationException because it is now deprecated and is
+   * unsafe to use. Please use {@link DistributedSystemConfig#setBindAddress} instead.
-    throw new UnsupportedOperationException(LocalizedStrings.AdminDistributedSystemFactory_PLEASE_USE_DISTRIBUTEDSYSTEMCONFIGSETBINDADDRESS_INSTEAD.toLocalizedString());
+    throw new UnsupportedOperationException(
+        LocalizedStrings.AdminDistributedSystemFactory_PLEASE_USE_DISTRIBUTEDSYSTEMCONFIGSETBINDADDRESS_INSTEAD
+            .toLocalizedString());
-  
+
-   * Defines a "default" distributed system configuration based on VM
-   * system properties and the content of
-   * <code>gemfire.properties</code>.  The {@linkplain
-   * DistributedSystemConfig#DEFAULT_REMOTE_COMMAND} default remote
-   * command is used.
+   * Defines a "default" distributed system configuration based on VM system properties and the
+   * content of <code>gemfire.properties</code>. The
+   * {@linkplain DistributedSystemConfig#DEFAULT_REMOTE_COMMAND} default remote command is used.
-    String remoteCommand =
-      DistributedSystemConfig.DEFAULT_REMOTE_COMMAND;
+    String remoteCommand = DistributedSystemConfig.DEFAULT_REMOTE_COMMAND;
-   * Call this method with a value of <code>true</code>
-   * to dedicate the VM to GemFire administration only.
-   * Default is <code>false</code>.
-   * <p>This method <em>must</em> be called before calling
-   * {@link AdminDistributedSystem#connect}. It <em>must</em> also be called
-   * before {@link DistributedSystem#connect} is when creating a colocated distributed system.
+   * Call this method with a value of <code>true</code> to dedicate the VM to GemFire administration
+   * only. Default is <code>false</code>.
+   * <p>
+   * This method <em>must</em> be called before calling {@link AdminDistributedSystem#connect}. It
+   * <em>must</em> also be called before {@link DistributedSystem#connect} is when creating a
+   * colocated distributed system.
-   * <code>org.apache.geode.admin</code> package. In particular do not create
-   * a {@link org.apache.geode.cache.Cache} or a normal {@link DistributedSystem}.
+   * <code>org.apache.geode.admin</code> package. In particular do not create a
+   * {@link org.apache.geode.cache.Cache} or a normal {@link DistributedSystem}.
+   * 
-   *  <code>false</code> if this VM should allow all GemFire APIs.
-   * @throws IllegalStateException if a {@link DistributedSystem}
-   * or {@link AdminDistributedSystem} connection already exists.
+   *        <code>false</code> if this VM should allow all GemFire APIs.
+   * @throws IllegalStateException if a {@link DistributedSystem} or {@link AdminDistributedSystem}
+   *         connection already exists.
-  
+
-   * Defines a distributed system configuration for administering the
-   * distributed system to which this VM is currently connected.  The
-   * <code>DistributedSystem</code> is used to configure the discovery
-   * mechanism (multicast or locators), bind address, SSL attributes,
-   * as well as the logger of the
-   * <code>DistributedSystemConfig</code>.  Note that the distributed
-   * system will not be able to be administered until the {@link
-   * AdminDistributedSystem#connect connect} method is invoked.
+   * Defines a distributed system configuration for administering the distributed system to which
+   * this VM is currently connected. The <code>DistributedSystem</code> is used to configure the
+   * discovery mechanism (multicast or locators), bind address, SSL attributes, as well as the
+   * logger of the <code>DistributedSystemConfig</code>. Note that the distributed system will not
+   * be able to be administered until the {@link AdminDistributedSystem#connect connect} method is
+   * invoked.
-   * @param system
-   *        A connection to the distributed system
-   * @param remoteCommand
-   *        The shell command that is used to launch processes that
-   *        run on remote machines.  If <code>null</code>, then the
-   *        {@linkplain DistributedSystemConfig#DEFAULT_REMOTE_COMMAND
-   *        default} will be used.
+   * @param system A connection to the distributed system
+   * @param remoteCommand The shell command that is used to launch processes that run on remote
+   *        machines. If <code>null</code>, then the
+   *        {@linkplain DistributedSystemConfig#DEFAULT_REMOTE_COMMAND default} will be used.
-  public static DistributedSystemConfig
-    defineDistributedSystem(DistributedSystem system,
-                            String remoteCommand)
-    throws AdminException {
+  public static DistributedSystemConfig defineDistributedSystem(DistributedSystem system,
+      String remoteCommand) throws AdminException {
-    InternalDistributedSystem internal =
-      (InternalDistributedSystem) system;
+    InternalDistributedSystem internal = (InternalDistributedSystem) system;
-    
+
-      new DistributedSystemConfigImpl(internal.getConfig(),
-                                      remoteCommand);
+        new DistributedSystemConfigImpl(internal.getConfig(), remoteCommand);
-   * Returns the distributed system for administrative monitoring and
-   * managing.  You must then call {@link
-   * AdminDistributedSystem#connect} before interacting with the
-   * actual system.
+   * Returns the distributed system for administrative monitoring and managing. You must then call
+   * {@link AdminDistributedSystem#connect} before interacting with the actual system.
-    return new AdminDistributedSystemImpl((DistributedSystemConfigImpl)config);
+    return new AdminDistributedSystemImpl((DistributedSystemConfigImpl) config);
-  
+
-   * Returns a default GemFire LogWriterI18n for logging.  This LogWriterI18n will
-   * log to standard out.
+   * Returns a default GemFire LogWriterI18n for logging. This LogWriterI18n will log to standard
+   * out.
