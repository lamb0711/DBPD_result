GEODE-3830: Add more logging for GfshRule

This closes #946.

+import java.util.Random;
+  private Random random = new Random();
-    this.name = defaultName(commands);
+    this.name = defaultName();
-  protected void awaitIfNecessary(Process process) {
+  protected void awaitIfNecessary(GfshExecution gfshExecution) {
-      awaitQuietly(process);
+      awaitQuietly(gfshExecution);
-      awaitLoudly(process);
+      awaitLoudly(gfshExecution);
-    assertThat(process.exitValue()).isEqualTo(expectedExitValue);
+    try {
+      assertThat(gfshExecution.getProcess().exitValue()).isEqualTo(expectedExitValue);
+    } catch (AssertionError e) {
+      gfshExecution.printLogFiles();
+      throw e;
+    }
+
-  private void awaitQuietly(Process process) {
+  private void awaitQuietly(GfshExecution gfshExecution) {
-      process.waitFor(timeout, timeoutTimeUnit);
+      gfshExecution.getProcess().waitFor(timeout, timeoutTimeUnit);
-  private void awaitLoudly(Process process) {
+  private void awaitLoudly(GfshExecution gfshExecution) {
-      exited = process.waitFor(timeout, timeoutTimeUnit);
+      exited = gfshExecution.getProcess().waitFor(timeout, timeoutTimeUnit);
-    assertThat(exited).isTrue();
+
+    try {
+      assertThat(exited).isTrue();
+    } catch (AssertionError e) {
+      gfshExecution.printLogFiles();
+      throw e;
+    }
-  private String defaultName(String... commands) {
-    try {
-      return commands[0].substring(0, commands[0].indexOf("-")).trim();
-    } catch (Exception handled) {
-      return commands[0];
-    }
+  private String defaultName() {
+    return Long.toHexString(random.nextLong());
+
+
+
