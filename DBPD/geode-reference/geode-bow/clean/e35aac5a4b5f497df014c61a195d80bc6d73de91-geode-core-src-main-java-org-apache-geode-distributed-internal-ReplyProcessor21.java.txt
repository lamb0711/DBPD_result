Merge branch 'release/1.5.0'

-  protected final DM dmgr;
+  protected final DistributionManager dmgr;
-  public ReplyProcessor21(DM dm, InternalDistributedMember member) {
+  public ReplyProcessor21(DistributionManager dm, InternalDistributedMember member) {
-   * distributed system. Call this method with {@link DistributionManager#getDistributionManagerIds}
-   * if you want replies from all DMs including the one hosted in this VM.
+   * distributed system. Call this method with
+   * {@link ClusterDistributionManager#getDistributionManagerIds} if you want replies from all DMs
+   * including the one hosted in this VM.
-  public ReplyProcessor21(DM dm, Collection initMembers) {
+  public ReplyProcessor21(DistributionManager dm, Collection initMembers) {
-   * distributed system. Call this method with {@link DistributionManager#getDistributionManagerIds}
-   * if you want replies from all DMs including the one hosted in this VM.
+   * distributed system. Call this method with
+   * {@link ClusterDistributionManager#getDistributionManagerIds} if you want replies from all DMs
+   * including the one hosted in this VM.
-   * distributed system. Call this method with {@link DistributionManager#getDistributionManagerIds}
-   * if you want replies from all DMs including the one hosted in this VM.
+   * distributed system. Call this method with
+   * {@link ClusterDistributionManager#getDistributionManagerIds} if you want replies from all DMs
+   * including the one hosted in this VM.
-  private ReplyProcessor21(DM dm, InternalDistributedSystem system, Collection initMembers,
-      CancelCriterion cancelCriterion) {
+  private ReplyProcessor21(DistributionManager dm, InternalDistributedSystem system,
+      Collection initMembers, CancelCriterion cancelCriterion) {
-  protected ReplyProcessor21(DM dm, InternalDistributedSystem system, Collection initMembers,
-      CancelCriterion cancelCriterion, boolean register) {
+  protected ReplyProcessor21(DistributionManager dm, InternalDistributedSystem system,
+      Collection initMembers, CancelCriterion cancelCriterion, boolean register) {
-  protected DM getDistributionManager() {
+  public DistributionManager getDistributionManager() {
-      DM result = this.system.getDistributionManager();
+      DistributionManager result = this.system.getDistributionManager();
-      final DM dm = getDistributionManager(); // fix for bug 33253
+      final DistributionManager dm = getDistributionManager(); // fix for bug 33253
-  public void memberJoined(InternalDistributedMember id) {
+  public void memberJoined(DistributionManager distributionManager, InternalDistributedMember id) {
-  public void quorumLost(Set<InternalDistributedMember> failures,
-      List<InternalDistributedMember> remaining) {}
+  public void quorumLost(DistributionManager distributionManager,
+      Set<InternalDistributedMember> failures, List<InternalDistributedMember> remaining) {}
-  public void memberSuspect(InternalDistributedMember id, InternalDistributedMember whoSuspected,
-      String reason) {
+  public void memberSuspect(DistributionManager distributionManager, InternalDistributedMember id,
+      InternalDistributedMember whoSuspected, String reason) {
-  public void memberDeparted(final InternalDistributedMember id, final boolean crashed) {
+  public void memberDeparted(DistributionManager distributionManager,
+      final InternalDistributedMember id, final boolean crashed) {
-    DM mgr = getDistributionManager();
+    DistributionManager mgr = getDistributionManager();
-          memberDeparted(this.members[i], false);
+          memberDeparted(getDistributionManager(), this.members[i], false);
-    final DM mgr = getDistributionManager();
+    final DistributionManager mgr = getDistributionManager();
-            memberDeparted(this.members[i], false);
+            memberDeparted(getDistributionManager(), this.members[i], false);
