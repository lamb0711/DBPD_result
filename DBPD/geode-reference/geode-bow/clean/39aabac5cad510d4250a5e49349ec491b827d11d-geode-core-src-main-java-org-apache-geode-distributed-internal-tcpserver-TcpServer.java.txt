Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

+import org.apache.geode.cache.IncompatibleVersionException;
-import org.apache.geode.internal.cache.tier.sockets.ClientProtocolMessageHandler;
+import org.apache.geode.internal.cache.tier.sockets.ClientProtocolProcessor;
+import org.apache.geode.internal.cache.tier.sockets.ClientProtocolService;
-import org.apache.geode.internal.cache.tier.sockets.MessageExecutionContext;
-  private ClientProtocolMessageHandler messageHandler;
+  private final ClientProtocolService clientProtocolService;
+  /**
+   * returns the message handler used for client/locator communications processing
+   */
+  public ClientProtocolService getClientProtocolService() {
+    return clientProtocolService;
+  }
+
-      ClientProtocolMessageHandler messageHandler) {
+      ClientProtocolService clientProtocolService) {
-    this.messageHandler = messageHandler;
+    this.clientProtocolService = clientProtocolService;
-            messageHandler.receiveMessage(input, socket.getOutputStream(),
-                new MessageExecutionContext(internalLocator));
+            if (clientProtocolService == null) {
+              // this shouldn't happen.
+              log.error("Client protocol service not initialized but a request was received");
+              socket.close();
+              throw new IOException(
+                  "Client protocol service not initialized but a request was received");
+            } else {
+              try (ClientProtocolProcessor pipeline =
+                  clientProtocolService.createProcessorForLocator(internalLocator)) {
+                pipeline.processMessage(input, socket.getOutputStream());
+              } catch (IncompatibleVersionException e) {
+                // should not happen on the locator as there is no handshake.
+                log.error("Unexpected exception in client message processing", e);
+              }
+            }
+
