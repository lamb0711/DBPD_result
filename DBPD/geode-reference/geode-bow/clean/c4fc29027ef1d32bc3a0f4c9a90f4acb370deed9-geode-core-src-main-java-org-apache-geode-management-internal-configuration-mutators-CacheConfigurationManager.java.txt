Geode 7424 create index (#4458)

co-authored-by: Jinmei Liao <jliao@pivotal.io>

-import java.util.concurrent.atomic.AtomicBoolean;
-  public abstract T get(String id, CacheConfig existing);
+  public abstract T get(T config, CacheConfig existing);
+   *
-  public final boolean add(T config, String groupName) {
-    return updateCacheConfig(config, groupName, this::add);
+  public final void add(T config, String groupName) {
+    updateCacheConfig(config, groupName, this::add);
-  public final boolean delete(T config, String groupName) {
-    return updateCacheConfig(config, groupName, this::delete);
+  public final void delete(T config, String groupName) {
+    updateCacheConfig(config, groupName, this::delete);
-  public final boolean update(T config, String groupName) {
-    return updateCacheConfig(config, groupName, this::update);
+  public final void update(T config, String groupName) {
+    updateCacheConfig(config, groupName, this::update);
-  boolean updateCacheConfig(T config, String groupName, BiConsumer<T, CacheConfig> updater) {
-    AtomicBoolean success = new AtomicBoolean(true);
+  void updateCacheConfig(T config, String groupName, BiConsumer<T, CacheConfig> updater) {
-      try {
-        updater.accept(config, cacheConfigForGroup);
-      } catch (Exception e) {
-        String message = "Failed to update cluster configuration for " + groupName + ".";
-        logger.error(message, e);
-        success.set(false);
-        // returning null indicating no changes needs to be persisted.
-        return null;
-      }
+      updater.accept(config, cacheConfigForGroup);
-    return success.get();
