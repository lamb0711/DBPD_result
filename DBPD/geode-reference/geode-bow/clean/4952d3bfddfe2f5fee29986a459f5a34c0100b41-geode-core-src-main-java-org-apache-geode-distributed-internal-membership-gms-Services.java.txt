GEODE-6883: Removing some dependencies on core from membership

* Removing some direct dependencies on classes outside of membership.
* Replaced the pattern having each Service implement MessageHandler and
  have a single processMessage method with a switch statement. Instead
  we install individual MessageHandlers for each message.
* Removed GMSAuthenticator from Services. Instead we inject the
  Authenticator when we create a MembershipManager.

Key-Gripped-By: Bill Burcham <bburcham@pivotal.io>
Co-Authored-By: Bill Burcham <bburcham@pivotal.io>
Co-Authored-By: Ernest Burghardt <eburghardt@pivotal.io>

-import org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticator;
-import org.apache.geode.security.AuthenticationFailedException;
-      RemoteTransportConfig transport, DMStats stats, SecurityService securityService) {
+      RemoteTransportConfig transport, DMStats stats, SecurityService securityService,
+      final Authenticator authenticator) {
-    this.auth = new GMSAuthenticator();
+    this.auth = authenticator;
-    this.auth.init(this);
-      logger.debug("starting Authenticator");
-      this.auth.start();
-        this.auth.stop();
-    this.auth.started();
-    this.auth.setLocalAddress(address);
-          this.auth.emergencyClose();
+          this.messenger.emergencyClose();
-            this.messenger.emergencyClose();
+            this.manager.emergencyClose();
-            try {
-              this.manager.emergencyClose();
-            } finally {
-              this.cancelCriterion.cancel("Membership services are shut down");
-              this.stopped = true;
-            }
+            this.cancelCriterion.cancel("Membership services are shut down");
+            this.stopped = true;
-            this.auth.stop();
+            this.messenger.stop();
-              this.messenger.stop();
+              this.manager.stop();
-              try {
-                this.manager.stop();
-              } finally {
-                this.cancelCriterion.cancel("Membership services are shut down");
-                this.stopped = true;
-              }
+              this.cancelCriterion.cancel("Membership services are shut down");
+              this.stopped = true;
-    try {
-      this.auth.installView(v);
-    } catch (AuthenticationFailedException e) {
-      return;
-    }
-          this.auth.memberSuspected(initiator, suspect, reason);
+          this.messenger.memberSuspected(initiator, suspect, reason);
-          try {
-            this.messenger.memberSuspected(initiator, suspect, reason);
-          } finally {
-            this.manager.memberSuspected(initiator, suspect, reason);
-          }
+          this.manager.memberSuspected(initiator, suspect, reason);
