Merge branch 'feature/GEODE-8' into develop

+
+import com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventImpl;
+import com.gemstone.gemfire.internal.cache.wan.serial.SerialGatewaySenderQueue;
+import com.gemstone.gemfire.internal.offheap.annotations.Released;
+import com.gemstone.gemfire.internal.offheap.annotations.Retained;
-    //_setValue(compress(context,value));  // compress is now called in AbstractRegionMap.prepareValueForCache
+    if (value != null && context != null && (this instanceof OffHeapRegionEntry) 
+        && context instanceof LocalRegion && ((LocalRegion)context).isThisRegionBeingClosedOrDestroyed()) {
+      ((OffHeapRegionEntry)this).release();
+      ((LocalRegion)context).checkReadiness();
+    }
+
+  @Override
+  public void handleValueOverflow(RegionEntryContext context) {
+    if (context instanceof BucketRegionQueue || context instanceof SerialGatewaySenderQueue.SerialGatewaySenderQueueMetaRegion) {
+      GatewaySenderEventImpl.release(this._getValue()); // OFFHEAP _getValue ok
+    }
+  }
+  @Override
+  public void afterValueOverflow(RegionEntryContext context) {
+    //NO OP
+    //Overridden in sqlf RegionEntry
+  }
