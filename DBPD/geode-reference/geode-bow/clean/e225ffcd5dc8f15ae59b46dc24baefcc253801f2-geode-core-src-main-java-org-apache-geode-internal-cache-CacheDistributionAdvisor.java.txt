Revert "GEODE-6807: cache adviseUpdate and adviseAllEventsOrCached" (#4189)

CI failing during pre-checkin, this should have be resolved prior to Merging
-  private Set<InternalDistributedMember> adviseSetforAllEvents = Collections.emptySet();
-  private volatile long adviseAllEventsVersion = -1;
-
-  private Set<InternalDistributedMember> adviseSetforUpdate = Collections.emptySet();
-  private volatile long adviseUpdateVersion = -1;
-
-  private volatile long inRecoveryVersion = 0;
-  private volatile long adviseInRecoveryVersion = -1;
-
-  public synchronized void incInRecoveryVersion() {
-    inRecoveryVersion++;
-  }
-
+   * @param excludeInRecovery if true then members in recovery are excluded
-  Set<InternalDistributedMember> adviseAllEventsOrCached()
+  private Set<InternalDistributedMember> adviseAllEventsOrCached(final boolean excludeInRecovery)
-
-    // minimize volatile reads by copying ref to local var
-    long tempProfilesVersion = profilesVersion; // volatile read
-    long tempInRecoveryVersion = inRecoveryVersion; // volatile read
-
-    if (adviseAllEventsVersion != tempProfilesVersion
-        || adviseInRecoveryVersion != tempInRecoveryVersion) {
-      synchronized (adviseSetforAllEvents) {
-        if (adviseAllEventsVersion != tempProfilesVersion
-            || adviseInRecoveryVersion != tempInRecoveryVersion) {
-
-          adviseSetforAllEvents = Collections.unmodifiableSet(adviseFilter(profile -> {
-            CacheProfile cp = (CacheProfile) profile;
-            if (cp.getInRecovery()) {
-              return false;
-            }
-            return cp.cachedOrAllEventsWithListener();
-          }));
-          adviseAllEventsVersion = tempProfilesVersion;
-          adviseInRecoveryVersion = tempInRecoveryVersion;
-        }
+    return adviseFilter(profile -> {
+      assert profile instanceof CacheProfile;
+      CacheProfile cp = (CacheProfile) profile;
+      if (excludeInRecovery && cp.inRecovery) {
+        return false;
-    }
-    return adviseSetforAllEvents;
-
+      return cp.cachedOrAllEventsWithListener();
+    });
-      return adviseAllEventsOrCached();
+      return adviseAllEventsOrCached(true/* fixes 41147 */);
-
-      // minimize volatile reads by copying ref to local var
-      long tempProfilesVersion = profilesVersion; // volatile read
-
-      if (adviseUpdateVersion != tempProfilesVersion) {
-        synchronized (adviseSetforUpdate) {
-          if (adviseUpdateVersion != tempProfilesVersion) {
-
-            adviseSetforUpdate = Collections.unmodifiableSet(adviseFilter(profile -> {
-              CacheProfile cp = (CacheProfile) profile;
-              DataPolicy dp = cp.getDataPolicy();
-              return dp.withReplication()
-                  || (cp.allEvents() && (dp.withStorage() || cp.hasCacheListener));
-            }));
-            adviseUpdateVersion = tempProfilesVersion;
-          }
-        }
-      }
-      return adviseSetforUpdate;
+      return adviseFilter(profile -> {
+        assert profile instanceof CacheProfile;
+        CacheProfile cp = (CacheProfile) profile;
+        DataPolicy dp = cp.dataPolicy;
+        return dp.withReplication()
+            || (cp.allEvents() && (dp.withStorage() || cp.hasCacheListener));
+      });
-    return adviseAllEventsOrCached();
+    return adviseAllEventsOrCached(true);
-      return !cp.getInRecovery();
+      return !cp.inRecovery;
-      if (prof.getInRecovery()) {
+      if (prof.inRecovery) {
-      if (profile.getInRecovery()) {
+      if (profile.inRecovery) {
-
-    private boolean inRecovery = false;
+    public boolean inRecovery = false;
-    public boolean getInRecovery() {
-      return inRecovery;
-    };
-
-    public void setInRecovery(boolean recovery) {
-      inRecovery = recovery;
-    };
-
-    public DataPolicy getDataPolicy() {
-      return dataPolicy;
-    }
-
