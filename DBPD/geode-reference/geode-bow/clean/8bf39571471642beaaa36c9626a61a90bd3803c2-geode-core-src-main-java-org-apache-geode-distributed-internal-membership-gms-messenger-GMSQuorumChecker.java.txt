Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//    UUID logicalAddress = (UUID) channel.getAddress();
-//    IpAddress ipaddr = (IpAddress) channel.down(new Event(Event.GET_PHYSICAL_ADDRESS));
-//    
-//    myAddress = new JGAddress(logicalAddress, ipaddr);
-    myAddress = (JGAddress)channel.down(new Event(Event.GET_LOCAL_ADDRESS));
+    // UUID logicalAddress = (UUID) channel.getAddress();
+    // IpAddress ipaddr = (IpAddress) channel.down(new Event(Event.GET_PHYSICAL_ADDRESS));
+    //
+    // myAddress = new JGAddress(logicalAddress, ipaddr);
+    myAddress = (JGAddress) channel.down(new Event(Event.GET_LOCAL_ADDRESS));
-      SocketAddress sockaddr = new InetSocketAddress(addr.getNetMember().getInetAddress(), addr.getPort());
+      SocketAddress sockaddr =
+          new InetSocketAddress(addr.getNetMember().getInetAddress(), addr.getPort());
-  
+
-    if (channel != null  &&  !channel.isClosed()) {
+    if (channel != null && !channel.isClosed()) {
-  
+
-      logger.debug("quorum check: contacted {} processes with {} member weight units.  Threshold for a quorum is {}", receivedAcks.size(), ackedWeight, lossThreshold);
+      logger.debug(
+          "quorum check: contacted {} processes with {} member weight units.  Threshold for a quorum is {}",
+          receivedAcks.size(), ackedWeight, lossThreshold);
-          logger.debug("quorum check: timeout waiting for responses.  {} responses received", receivedAcks.size());
+          logger.debug("quorum check: timeout waiting for responses.  {} responses received",
+              receivedAcks.size());
-        logger.debug("quorum check: waiting up to {}ms to receive a quorum of responses", remaining);
+        logger.debug("quorum check: waiting up to {}ms to receive a quorum of responses",
+            remaining);
-          logger.debug("quorum check: received responses from all members that were in the old distributed system");
+          logger.debug(
+              "quorum check: received responses from all members that were in the old distributed system");
-  private int getWeight(Collection<InternalDistributedMember> idms, InternalDistributedMember leader) {
+  private int getWeight(Collection<InternalDistributedMember> idms,
+      InternalDistributedMember leader) {
-    public void getState(OutputStream output) throws Exception {
-    }
+    public void getState(OutputStream output) throws Exception {}
-    public void setState(InputStream input) throws Exception {
-    }
+    public void setState(InputStream input) throws Exception {}
-    public void viewAccepted(View new_view) {
-    }
+    public void viewAccepted(View new_view) {}
-    public void suspect(Address suspected_mbr) {
-    }
+    public void suspect(Address suspected_mbr) {}
-    public void block() {
-    }
+    public void block() {}
-    public void unblock() {
-    }
+    public void unblock() {}
-  
+
