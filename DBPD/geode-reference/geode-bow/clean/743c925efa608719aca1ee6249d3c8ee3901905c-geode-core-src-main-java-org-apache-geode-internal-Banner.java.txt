Revert GEODE-2644 because offline diskstore commands generate info level logs

GFSH forks the offline diskstore commands in a JVM using log4j2-cli.xml
which sets the log level to WARN. However, the forked JVM creates a
Cache which then starts generating info level statements to STDOUT.

Revert "GEODE-2644: Remove log level from MonitorQueryUnderContentionBenchmark"
This reverts commit 6691d310e1263966991e584f712156d919dabecf.

Revert "GEODE-2644: Update session state caching dependencies for logging"
This reverts commit 688f58a4a75cc1297faa1dda201b971346c3a9fe.

Revert "GEODE-5637: Fix flaky SingleHopClientExecutorWithLoggingIntegrationTest"
This reverts commit 0a8f3dffa1ebaa618fafecc15bbc92ba8ba83696.

Revert "GEODE-2644: Make LogWriterAppender optional and support log4j2.xml"
This reverts commit 591f3f7840ce38c6100bff2040f396ad2469175e.

Revert "GEODE-2644: Expand DistributedSystemMXBean tests"
This reverts commit cd2bba13e2fb7e79f7634053a6c612050b328e11.

Revert "GEODE-2644: Make AlertAppender optional and support log4j2.xml"
This reverts commit 02c3cae1d38098259ff6aa4635c6e74f795bdc50.

Revert "GEODE-2644: Add LogConfig and StatisticsConfig for logging"
This reverts commit a77c94b349b3ed7fc873fc29f6852f9936843790.

Revert "GEODE-2644: Add AlertingTest JUnit Category"
This reverts commit 731cd2a7d35b086d34f8bbcb94a83c40739ae8ee.

Revert "GEODE-2644: Add LogFileAssert and LogLevelAssert assertions"
This reverts commit 5e61da5301469cdbd71ac186573f56c38e9a6cf0.

Revert "GEODE-2644: Cleanup logging related files"
This reverts commit 763e4177f201eff9b140654e6858152a1a184b8c.

Revert "GEODE-2644: Define interfaces for new Log4j2 Appenders"
This reverts commit efd8a14027195b6dae1dd3e4d53a33696ed318bb.

-import static org.apache.geode.internal.Banner.BannerHeader.CLASS_PATH;
-import static org.apache.geode.internal.Banner.BannerHeader.COMMAND_LINE_PARAMETERS;
-import static org.apache.geode.internal.Banner.BannerHeader.COMMUNICATIONS_VERSION;
-import static org.apache.geode.internal.Banner.BannerHeader.CURRENT_DIR;
-import static org.apache.geode.internal.Banner.BannerHeader.HOME_DIR;
-import static org.apache.geode.internal.Banner.BannerHeader.LIBRARY_PATH;
-import static org.apache.geode.internal.Banner.BannerHeader.LICENSE_START;
-import static org.apache.geode.internal.Banner.BannerHeader.LOG4J2_CONFIGURATION;
-import static org.apache.geode.internal.Banner.BannerHeader.PROCESS_ID;
-import static org.apache.geode.internal.Banner.BannerHeader.SYSTEM_PROPERTIES;
-import static org.apache.geode.internal.Banner.BannerHeader.USER;
-
-import org.apache.geode.internal.logging.ConfigurationInfo;
+import org.apache.geode.internal.logging.LogService;
-  public static final String SEPARATOR =
-      "---------------------------------------------------------------------------";
-
+    final String SEPARATOR =
+        "---------------------------------------------------------------------------";
-    out.println(COMMUNICATIONS_VERSION.displayValue() + ": " + currentOrdinal);
-    out.println(PROCESS_ID.displayValue() + ": " + processId);
-    out.println(USER.displayValue() + ": " + userName);
-    out.println(CURRENT_DIR.displayValue() + ": " + userDir);
-    out.println(HOME_DIR.displayValue() + ": " + userHome);
+    out.println("Communications version: " + currentOrdinal);
+    out.println("Process ID: " + processId);
+    out.println("User: " + userName);
+    out.println("Current dir: " + userDir);
+    out.println("Home dir: " + userHome);
-      out.println(COMMAND_LINE_PARAMETERS.displayValue() + ":");
+      out.println("Command Line Parameters:");
-    out.println(CLASS_PATH.displayValue() + ":");
+    out.println("Class Path:");
-    out.println(LIBRARY_PATH.displayValue() + ":");
+    out.println("Library Path:");
-      out.println(SYSTEM_PROPERTIES.displayValue() + ":");
+      out.println("System Properties:");
-      out.println(LOG4J2_CONFIGURATION.displayValue() + ":");
-      out.println("    " + ConfigurationInfo.getConfigurationInfo());
+      out.println("Log4J 2 Configuration:");
+      out.println("    " + LogService.getConfigurationInfo());
-    out.println("  " + LICENSE_START.displayValue());
+    out.println("  Licensed to the Apache Software Foundation (ASF) under one or more");
-  public static String getString(String[] args) {
+  public static String getString(String args[]) {
-
-  /**
-   * The headers of the log {@link Banner}.
-   */
-  public enum BannerHeader {
-
-    LICENSE_START("Licensed to the Apache Software Foundation (ASF) under one or more"),
-    BUILD_DATE(VersionDescription.BUILD_DATE),
-    BUILD_ID(VersionDescription.BUILD_ID),
-    BUILD_JAVA_VERSION(VersionDescription.BUILD_JAVA_VERSION),
-    BUILD_PLATFORM(VersionDescription.BUILD_PLATFORM),
-    PRODUCT_NAME(VersionDescription.PRODUCT_NAME),
-    PRODUCT_VERSION(VersionDescription.PRODUCT_VERSION),
-    SOURCE_DATE(VersionDescription.SOURCE_DATE),
-    SOURCE_REPOSITORY(VersionDescription.SOURCE_REPOSITORY),
-    SOURCE_REVISION(VersionDescription.SOURCE_REVISION),
-    NATIVE_VERSION(VersionDescription.NATIVE_VERSION),
-    RUNNING_ON(VersionDescription.RUNNING_ON),
-    COMMUNICATIONS_VERSION("Communications version"),
-    PROCESS_ID("Process ID"),
-    USER("User"),
-    CURRENT_DIR("Current dir"),
-    HOME_DIR("Home dir"),
-    COMMAND_LINE_PARAMETERS("Command Line Parameters"),
-    CLASS_PATH("Class Path"),
-    LIBRARY_PATH("Library Path"),
-    SYSTEM_PROPERTIES("System Properties"),
-    LOG4J2_CONFIGURATION("Log4J 2 Configuration");
-
-    private final String displayValue;
-
-    BannerHeader(String displayValue) {
-      this.displayValue = displayValue;
-    }
-
-    public String displayValue() {
-      return displayValue;
-    }
-
-    public static String[] displayValues() {
-      String[] headerValues = new String[BannerHeader.values().length];
-      int i = 0;
-      for (BannerHeader bannerHeader : BannerHeader.values()) {
-        headerValues[i] = bannerHeader.displayValue();
-        i++;
-      }
-      return headerValues;
-    }
-  }
