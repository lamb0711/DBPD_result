Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
- * A processor for sending client black list message to all nodes from primary.
- * This adds client to the blacklist and destroy it's queue if available on node.
+ * A processor for sending client black list message to all nodes from primary. This adds client to
+ * the blacklist and destroy it's queue if available on node.
-  
-   public static void sendBlacklistedClient(ClientProxyMembershipID proxyId,
-      DM dm, Set members) {
-    ClientBlacklistProcessor processor = new ClientBlacklistProcessor(dm,
-        members);
+
+  public static void sendBlacklistedClient(ClientProxyMembershipID proxyId, DM dm, Set members) {
+    ClientBlacklistProcessor processor = new ClientBlacklistProcessor(dm, members);
-    }
-    catch (ReplyException e) {
+    } catch (ReplyException e) {
- 
+
-  
+
-      super.process(msg);
+    super.process(msg);
-  /** Creates a new instance of ClientBlacklistProcessor
+
+  /**
+   * Creates a new instance of ClientBlacklistProcessor
-  
-  ///////////////   Inner message classes  //////////////////
-  
+
+  /////////////// Inner message classes //////////////////
+
-              CacheServerImpl bs = (CacheServerImpl)i.next();
-              CacheClientNotifier ccn = bs.getAcceptor().getCacheClientNotifier(); 
-              //add client to the black list.
+              CacheServerImpl bs = (CacheServerImpl) i.next();
+              CacheClientNotifier ccn = bs.getAcceptor().getCacheClientNotifier();
+              // add client to the black list.
-              CacheClientProxy proxy = ccn.getClientProxy(this.proxyId); 
-              if(proxy != null) {
-              //close the proxy and remove from client proxy list.
-                proxy.close(false,false);
+              CacheClientProxy proxy = ccn.getClientProxy(this.proxyId);
+              if (proxy != null) {
+                // close the proxy and remove from client proxy list.
+                proxy.close(false, false);
+              }
-       }   
-      }
-      finally {
+      } finally {
-        }
-        else {
+        } else {
-    public void fromData(DataInput in) throws IOException,
-        ClassNotFoundException {
+    public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-      buff.append("ClientBlacklistMessage (proxyId='").append(this.proxyId)
-          .append("' processorId=").append(this.processorId).append(")");
+      buff.append("ClientBlacklistMessage (proxyId='").append(this.proxyId).append("' processorId=")
+          .append(this.processorId).append(")");
-  
+
