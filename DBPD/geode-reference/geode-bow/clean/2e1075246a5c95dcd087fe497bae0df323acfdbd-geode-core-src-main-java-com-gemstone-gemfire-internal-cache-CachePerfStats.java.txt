Merge branch 'release/1.0.0-incubating.M3'

-  protected static final int evictByCriteria_evictionsId;// total actual evictions (entries evicted)
-  protected static final int evictByCriteria_evictionTimeId;// total eviction time including product + user expr. 
-  protected static final int evictByCriteria_evictionsInProgressId;
-  protected static final int evictByCriteria_evaluationsId;// total eviction attempts
-  protected static final int evictByCriteria_evaluationTimeId;// time taken to evaluate user expression.
-  
-
-    
-    evictByCriteria_evictionsId = type.nameToId("evictByCriteria_evictions");
-    evictByCriteria_evictionTimeId = type.nameToId("evictByCriteria_evictionTime"); 
-    evictByCriteria_evictionsInProgressId = type.nameToId("evictByCriteria_evictionsInProgress");
-    evictByCriteria_evaluationsId= type.nameToId("evictByCriteria_evaluations");
-    evictByCriteria_evaluationTimeId = type.nameToId("evictByCriteria_evaluationTime");
-   * @since 5.0
+   * @since GemFire 5.0
-   * @since 3.5
+   * @since GemFire 3.5
-   * @since 3.5
+   * @since GemFire 3.5
-   * @since 3.5
+   * @since GemFire 3.5
-   * @since 3.5
+   * @since GemFire 3.5
-   * @since 3.5
+   * @since GemFire 3.5
-//    * @since 3.5
+//    * @since GemFire 3.5
-   * @since 3.5
+   * @since GemFire 3.5
-  
-//  // used for the case of evict on incoming
-  public long startCustomEviction() {
-    return NanoTimer.getTime();
-  }
-
-  // used for the case of evict on incoming
-  public void endCustomEviction(long start) {
-    long ts = NanoTimer.getTime();
-    stats.incLong(evictByCriteria_evictionTimeId, ts - start);
-  }
-
-  public void incEvictionsInProgress() {
-    this.stats.incLong(evictByCriteria_evictionsInProgressId, 1);
-  }
-
-  public void decEvictionsInProgress() {
-    this.stats.incLong(evictByCriteria_evictionsInProgressId, -1);
-  }
-
-  public void incEvictions() {
-    this.stats.incLong(evictByCriteria_evictionsId, 1);
-  }
-
-  public void incEvaluations() {
-    this.stats.incLong(evictByCriteria_evaluationsId, 1);
-  }
-
-  public void incEvaluations(int delta) {
-    this.stats.incLong(evictByCriteria_evaluationsId, delta);
-  }
-  
-  public long startEvaluation() {
-    return NanoTimer.getTime();
-  }
-
-  public void endEvaluation(long start, long notEvaluationTime) {
-    long ts = NanoTimer.getTime();
-    long totalTime = ts - start;
-    long evaluationTime = totalTime - notEvaluationTime;
-    stats.incLong(evictByCriteria_evaluationTimeId, evaluationTime);
-  }
-
-  public long getEvictions() {
-    return stats.getLong(evictByCriteria_evictionsId);
-  }
-
-  public long getEvictionsInProgress() {
-    return stats.getLong(evictByCriteria_evictionsInProgressId);
-  }
-
-  public long getEvictionsTime() {
-    return stats.getLong(evictByCriteria_evictionTimeId);
-  }
-
-  public long getEvaluations() {
-    return stats.getLong(evictByCriteria_evaluationsId);
-  }
-
-  public long getEvaluationTime() {
-    return stats.getLong(evictByCriteria_evaluationTimeId);
-  }
