Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Context available to application functions which is passed from GemFire to
- * {@link Function}. <br>
+ * Context available to application functions which is passed from GemFire to {@link Function}. <br>
-  
-  private ResultSender resultSender = null ;
-  
+
+  private ResultSender resultSender = null;
+
-  
+
-  
-  public FunctionContextImpl(final String functionId, final Object args,
-      ResultSender resultSender, boolean isPossibleDuplicate) {
+
+  public FunctionContextImpl(final String functionId, final Object args, ResultSender resultSender,
+      boolean isPossibleDuplicate) {
-   * Returns the arguments provided to this function execution. These are the
-   * arguments specified by caller using
-   * {@link Execution#withArgs(Object)}
+   * Returns the arguments provided to this function execution. These are the arguments specified by
+   * caller using {@link Execution#withArgs(Object)}
-   * Get the identifier of the running function used for logging and
-   * administration purposes
+   * Get the identifier of the running function used for logging and administration purposes
-  public <T> ResultSender<T> getResultSender() {    
+  public <T> ResultSender<T> getResultSender() {
-  
+
