Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

-import java.util.*;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Set;
+import com.gemstone.gemfire.cache.query.Struct;
+import com.gemstone.gemfire.internal.offheap.annotations.Retained;
-      CompiledValue iterOperands, RuntimeIterator[] indpndntItrs, boolean isIntersection, boolean conditioningNeeded, boolean evaluateProjection)
+      @Retained CompiledValue iterOperands, RuntimeIterator[] indpndntItrs, boolean isIntersection, boolean conditioningNeeded, boolean evaluateProjection)
-      final boolean completeExpansionNeeded, CompiledValue iterOperands,
+      final boolean completeExpansionNeeded, @Retained CompiledValue iterOperands,
-      boolean useLinkedSet = false;      
+      boolean useLinkedDataStructure = false;  
+      boolean nullValuesAtStart = true;
-        useLinkedSet =orderByAttrs.size()==1; 
+        useLinkedDataStructure =orderByAttrs.size()==1;
+        nullValuesAtStart = !((CompiledSortCriterion)orderByAttrs.get(0)).getCriterion();
-            if(useLinkedSet) {
-              set = new LinkedStructSet((StructTypeImpl)resultType);
+            if(useLinkedDataStructure) {
+              set = context.isDistinct() ? new LinkedStructSet((StructTypeImpl)resultType) 
+              : new SortedResultsBag<Struct>((StructTypeImpl)resultType, nullValuesAtStart);
-            set = new StructBag((StructTypeImpl)resultType,
-                context.getCachePerfStats());
+              set = QueryUtils.createStructCollection(context, (StructTypeImpl)resultType) ;
-            if (useLinkedSet) {
-              set = new LinkedResultSet(resultType);
+            if (useLinkedDataStructure) {
+              set = context.isDistinct() ? new LinkedResultSet(resultType) :
+                new SortedResultsBag(resultType, nullValuesAtStart) ;
-              set = new ResultsBag(resultType, context.getCachePerfStats());
+              set = QueryUtils.createResultCollection(context, resultType) ;
-              if(useLinkedSet) {
-                set = new LinkedStructSet((StructTypeImpl)resultType);
+              if(useLinkedDataStructure) {
+                set = context.isDistinct() ? new LinkedStructSet((StructTypeImpl)resultType) 
+                : new  SortedResultsBag<Struct>((StructTypeImpl)resultType, nullValuesAtStart);
-                set = new StructBag((StructTypeImpl)resultType,
-                  context.getCachePerfStats());
+                set = QueryUtils.createStructCollection(context,(StructTypeImpl)resultType) ;
-              if (useLinkedSet) {
-                set = new LinkedResultSet(resultType); 
+              if (useLinkedDataStructure) {
+                set = context.isDistinct() ? new LinkedResultSet(resultType) : 
+                  new SortedResultsBag(resultType, nullValuesAtStart ); 
-                set = new ResultsBag(resultType, context.getCachePerfStats());
+                set = QueryUtils.createResultCollection(context, resultType) ;
-          if (useLinkedSet) {
-            set = new LinkedStructSet((StructTypeImpl)resultType);
+          if (useLinkedDataStructure) {
+            set = context.isDistinct() ? new LinkedStructSet((StructTypeImpl)resultType) 
+            : new SortedResultsBag<Struct>((StructTypeImpl)resultType, nullValuesAtStart);
-            set = (SelectResults)new StructBag((StructTypeImpl)resultType,
-                context.getCachePerfStats());
+            set = QueryUtils.createStructCollection(context, (StructTypeImpl)resultType) ;
-          if (useLinkedSet) {
-            set = new LinkedResultSet(resultType);
+          if (useLinkedDataStructure) {
+            set = context.isDistinct() ? new LinkedResultSet(resultType) :
+              new SortedResultsBag(resultType, nullValuesAtStart);
-            set = new ResultsBag(resultType, context.getCachePerfStats());
+            set = QueryUtils.createResultCollection(context, resultType) ;
