GEODE-6807: update of solution with checking of version

-  private Set<InternalDistributedMember> adviseSetforAllEvents;
-  private long adviseAllEventsVersion = -1;
+  private Set<InternalDistributedMember> adviseSetforAllEvents = Collections.emptySet();
+  private volatile long adviseAllEventsVersion = -1;
-  private Set<InternalDistributedMember> adviseSetforUpdate;
-  private long adviseUpdateVersion = -1;
+  private Set<InternalDistributedMember> adviseSetforUpdate = Collections.emptySet();
+  private volatile long adviseUpdateVersion = -1;
-      adviseSetforAllEvents = Collections.unmodifiableSet(adviseFilter(profile -> {
-        assert profile instanceof CacheProfile;
-        CacheProfile cp = (CacheProfile) profile;
-        if (cp.inRecovery) {
-          return false;
+      synchronized (adviseSetforAllEvents) {
+        if (adviseAllEventsVersion != tempProfilesVersion) {
+
+          adviseSetforAllEvents = Collections.unmodifiableSet(adviseFilter(profile -> {
+            assert profile instanceof CacheProfile;
+            CacheProfile cp = (CacheProfile) profile;
+            if (cp.inRecovery) {
+              return false;
+            }
+            return cp.cachedOrAllEventsWithListener();
+          }));
+          adviseAllEventsVersion = tempProfilesVersion;
-        return cp.cachedOrAllEventsWithListener();
-      }));
-      adviseAllEventsVersion = tempProfilesVersion;
+      }
-      if (adviseUpdateVersion != tempProfilesVersion) {
-        adviseSetforUpdate = Collections.unmodifiableSet(adviseFilter(profile -> {
-          assert profile instanceof CacheProfile;
-          CacheProfile cp = (CacheProfile) profile;
-          DataPolicy dp = cp.dataPolicy;
-          return dp.withReplication()
-              || (cp.allEvents() && (dp.withStorage() || cp.hasCacheListener));
-        }));
-        adviseUpdateVersion = tempProfilesVersion;
+      if (adviseUpdateVersion != tempProfilesVersion) {
+        synchronized (adviseSetforUpdate) {
+          if (adviseUpdateVersion != tempProfilesVersion) {
+
+            adviseSetforUpdate = Collections.unmodifiableSet(adviseFilter(profile -> {
+              assert profile instanceof CacheProfile;
+              CacheProfile cp = (CacheProfile) profile;
+              DataPolicy dp = cp.dataPolicy;
+              return dp.withReplication()
+                  || (cp.allEvents() && (dp.withStorage() || cp.hasCacheListener));
+            }));
+            adviseUpdateVersion = tempProfilesVersion;
+          }
+        }
