Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The implementation of {@link StatisticsTypeFactory}.
- * Each VM can any have a single instance of this class which can
- * be accessed by calling {@link #singleton()}.
+ * The implementation of {@link StatisticsTypeFactory}. Each VM can any have a single instance of
+ * this class which can be accessed by calling {@link #singleton()}.
-  
+
-  private StatisticsTypeFactoryImpl() {
-  }
-  
+  private StatisticsTypeFactoryImpl() {}
+
-   * Adds an already created type. If the type has already been
-   * added and is equal to the new one then the new one is dropped and the existing one returned.
+   * Adds an already created type. If the type has already been added and is equal to the new one
+   * then the new one is dropped and the existing one returned.
+   * 
-        throw new IllegalArgumentException(LocalizedStrings.StatisticsTypeFactoryImpl_STATISTICS_TYPE_NAMED_0_ALREADY_EXISTS.toLocalizedString(result.getName()));
+        throw new IllegalArgumentException(
+            LocalizedStrings.StatisticsTypeFactoryImpl_STATISTICS_TYPE_NAMED_0_ALREADY_EXISTS
+                .toLocalizedString(result.getName()));
-  public StatisticsType createType(String name, String description,
-                                   StatisticDescriptor[] stats) {
+
+  public StatisticsType createType(String name, String description, StatisticDescriptor[] stats) {
+
-    return (StatisticsType)this.statTypes.get(name);
+    return (StatisticsType) this.statTypes.get(name);
-  public StatisticsType[] createTypesFromXml(Reader reader)
-    throws IOException {
+
+  public StatisticsType[] createTypesFromXml(Reader reader) throws IOException {
-  public StatisticDescriptor createIntCounter(String name, String description,
-                                              String units) {
+  public StatisticDescriptor createIntCounter(String name, String description, String units) {
-  public StatisticDescriptor createLongCounter(String name, String description,
-                                               String units) {
+
+  public StatisticDescriptor createLongCounter(String name, String description, String units) {
-  public StatisticDescriptor createDoubleCounter(String name, String description,
-                                                 String units) {
+
+  public StatisticDescriptor createDoubleCounter(String name, String description, String units) {
-  public StatisticDescriptor createIntGauge(String name, String description,
-                                            String units) {
+
+  public StatisticDescriptor createIntGauge(String name, String description, String units) {
-  public StatisticDescriptor createLongGauge(String name, String description,
-                                             String units) {
+
+  public StatisticDescriptor createLongGauge(String name, String description, String units) {
-  public StatisticDescriptor createDoubleGauge(String name, String description,
-                                               String units) {
+
+  public StatisticDescriptor createDoubleGauge(String name, String description, String units) {
-  public StatisticDescriptor createIntCounter(String name, String description,
-                                              String units, boolean largerBetter) {
+  public StatisticDescriptor createIntCounter(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createLongCounter(String name, String description,
-                                               String units, boolean largerBetter) {
+
+  public StatisticDescriptor createLongCounter(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createDoubleCounter(String name, String description,
-                                                 String units, boolean largerBetter) {
+
+  public StatisticDescriptor createDoubleCounter(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createIntGauge(String name, String description,
-                                            String units, boolean largerBetter) {
+
+  public StatisticDescriptor createIntGauge(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createLongGauge(String name, String description,
-                                             String units, boolean largerBetter) {
+
+  public StatisticDescriptor createLongGauge(String name, String description, String units,
+      boolean largerBetter) {
-  public StatisticDescriptor createDoubleGauge(String name, String description,
-                                               String units, boolean largerBetter) {
+
+  public StatisticDescriptor createDoubleGauge(String name, String description, String units,
+      boolean largerBetter) {
