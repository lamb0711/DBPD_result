GEODE-5971: RegionConfig can only have one RegionAttributesType

Signed-off-by: Jinmei Liao <jiliao@pivotal.io>

-import java.util.List;
+import java.util.function.Consumer;
+import java.util.function.Function;
+import org.apache.geode.cache.configuration.RegionAttributesScope;
-      Object maybeEntryIdleAttr = getRegionAttributeValue(regionConfig, a -> a.getEntryIdleTime());
+      Object maybeEntryIdleAttr = getAttribute(regionConfig, a -> a.getEntryIdleTime());
-      Object maybeEntryTTLAttr = getRegionAttributeValue(regionConfig, a -> a.getEntryTimeToLive());
+      Object maybeEntryTTLAttr = getAttribute(regionConfig, a -> a.getEntryTimeToLive());
+    if (regionAttributes != null && regionAttributes.getScope() != null
+        && !regionAttributes.getDataPolicy().withPartitioning()) {
+      addAttribute(regionConfig,
+          a -> a.setScope(
+              RegionAttributesScope.fromValue(regionAttributes.getScope().toConfigTypeString())));
+    }
+
-  private void addAttribute(RegionConfig config, RegionAttributeSetFunction func) {
-    final List<RegionAttributesType> regionAttributes = config.getRegionAttributes();
-    if (regionAttributes.isEmpty()) {
-      regionAttributes.add(new RegionAttributesType());
+  private void addAttribute(RegionConfig config, Consumer<RegionAttributesType> consumer) {
+    if (config.getRegionAttributes() == null) {
+      config.setRegionAttributes(new RegionAttributesType());
-    func.setAttributeValue(regionAttributes.get(0));
+    consumer.accept(config.getRegionAttributes());
-  private Object getRegionAttributeValue(RegionConfig config, RegionAttributeGetFunction function) {
-    return config.getRegionAttributes().stream()
-        .findFirst()
-        .map(a -> function.getValue(a))
-        .orElse(null);
+  private Object getAttribute(RegionConfig config,
+      Function<RegionAttributesType, Object> function) {
+    if (config.getRegionAttributes() == null) {
+      return null;
+    }
+
+    return function.apply(config.getRegionAttributes());
