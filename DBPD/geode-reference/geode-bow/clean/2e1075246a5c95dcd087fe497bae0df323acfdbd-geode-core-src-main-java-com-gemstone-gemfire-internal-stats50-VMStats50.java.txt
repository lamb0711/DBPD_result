Merge branch 'release/1.0.0-incubating.M3'

+import org.apache.logging.log4j.Logger;
+
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
+import com.gemstone.gemfire.internal.logging.LogService;
+  private final static Logger logger = LogService.getLogger(VMStats50.class.getName());
+
-  private final static boolean THREAD_STATS_ENABLED = Boolean.getBoolean("gemfire.enableThreadStats");
+  private final static boolean THREAD_STATS_ENABLED = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "enableThreadStats");
-          if (Boolean.getBoolean("gemfire.enableCpuTime")) {
+          if (Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "enableCpuTime")) {
-          if (Boolean.getBoolean("gemfire.enableContentionTime")) {
+          if (Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "enableContentionTime")) {
+    boolean reInitPools = false;
+        reInitPools = true;
+        } catch (InternalError ie) {
+          // Somebody saw an InternalError once but I have no idea how to reproduce it. Was this a race between
+          // mp.isValid() and mp.getUsage()? Perhaps.
+          s.close();
+          it.remove();
+          reInitPools = true;
+          logger.warn("Accessing MemoryPool '{}' threw an Internal Error: {}", mp.getName(), ie.getMessage());
+          continue;
+    if (reInitPools) {
+      initMemoryPools();
+    }
