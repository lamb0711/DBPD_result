GEODE-7240: Prevent Aggregates in query criteria (#4103)

Unless they are used within a nested SELECT query, aggregate functions
should not be allowed as part of the query criteria. The query parser
now throws an exception whenever the required conditions are not met.

- Fixed minor warnings.
- Replaced usages of 'junit.Assert' by 'assertj'.
- Refactored old test classes to use Geode rules.
-
+  private void checkWhereClauseForAggregates(CompiledValue compiledValue) {
+    if (compiledValue instanceof CompiledAggregateFunction) {
+      throw new QueryInvalidException(
+          "Aggregate functions can not be used as part of the WHERE clause.");
+    }
+
+    // Inner queries are supported.
+    if (compiledValue instanceof CompiledSelect) {
+      return;
+    }
+
+    for (Object compiledChildren : compiledValue.getChildren()) {
+      checkWhereClauseForAggregates((CompiledValue) compiledChildren);
+    }
+  }
+
+      // Where clause can not contain aggregate functions.
+      checkWhereClauseForAggregates(where);
