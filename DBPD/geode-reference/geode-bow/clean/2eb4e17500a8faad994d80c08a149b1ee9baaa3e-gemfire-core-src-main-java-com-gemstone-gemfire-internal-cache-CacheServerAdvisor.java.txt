GEODE-243: remove deprecated Bridge feature

All the public classes and most of the internal ones
have been removed. The cache xsd also has its bridge
elements removed.
The deprecated admin package did not have its bridge
apis removed since the entire admin package is going
to be removed as a seperate project.
The external javadocs have also been updated to no
longer use the term "bridge".
Localized strings were changed to no longer use "bridge".
Internal code and test code continues to have some
bridge references. Additional cleanup will be done
in the future.

- * Used to give advise to a bridge server.
- * Bridge server currently need to know about controller's
+ * Used to give advice to a cache server.
+ * Cache server currently need to know about controller's
-public class BridgeServerAdvisor extends GridAdvisor {
+public class CacheServerAdvisor extends GridAdvisor {
-  /** Creates a new instance of BridgeServerAdvisor */
-  private BridgeServerAdvisor(DistributionAdvisee server) {
+  private CacheServerAdvisor(DistributionAdvisee server) {
-  public static BridgeServerAdvisor createBridgeServerAdvisor(DistributionAdvisee server) {
-    BridgeServerAdvisor advisor = new BridgeServerAdvisor(server);
+  public static CacheServerAdvisor createCacheServerAdvisor(DistributionAdvisee server) {
+    CacheServerAdvisor advisor = new CacheServerAdvisor(server);
-    return "BridgeServerAdvisor for " + getAdvisee().getFullPath();
+    return "CacheServerAdvisor for " + getAdvisee().getFullPath();
-    return new BridgeServerProfile(memberId, version);
+    return new CacheServerProfile(memberId, version);
-   * Describes a bridge server for distribution purposes.
+   * Describes a cache server for distribution purposes.
-  public static class BridgeServerProfile extends GridAdvisor.GridProfile {
+  public static class CacheServerProfile extends GridAdvisor.GridProfile {
-    public BridgeServerProfile() {
+    public CacheServerProfile() {
-    public BridgeServerProfile(InternalDistributedMember memberId, int version) {
+    public CacheServerProfile(InternalDistributedMember memberId, int version) {
-    public BridgeServerProfile(BridgeServerProfile toCopy) {
+    public CacheServerProfile(CacheServerProfile toCopy) {
-     * Used to process an incoming bridge server profile. Any controller in this
-     * vm needs to be told about this incoming new bridge server. The reply
+     * Used to process an incoming cache server profile. Any controller in this
+     * vm needs to be told about this incoming new cache server. The reply
-      // tell local controllers about this bridge server
+      // tell local controllers about this cache server
-      // for QRM messaging we need bridge servers to know about each other
+      // for QRM messaging we need cache servers to know about each other
-      return BRIDGE_SERVER_PROFILE;
+      return CACHE_SERVER_PROFILE;
