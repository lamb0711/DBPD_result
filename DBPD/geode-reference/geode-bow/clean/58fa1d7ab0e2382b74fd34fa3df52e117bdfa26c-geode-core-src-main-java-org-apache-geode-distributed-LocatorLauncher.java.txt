Merge remote-tracking branch 'upstream/develop' into develop

-import static org.apache.commons.lang.StringUtils.defaultIfBlank;
-import static org.apache.commons.lang.StringUtils.isBlank;
-import static org.apache.commons.lang.StringUtils.isNotBlank;
-import static org.apache.commons.lang.StringUtils.lowerCase;
+import static org.apache.commons.lang3.StringUtils.defaultIfBlank;
+import static org.apache.commons.lang3.StringUtils.isBlank;
+import static org.apache.commons.lang3.StringUtils.isNotBlank;
+import static org.apache.commons.lang3.StringUtils.lowerCase;
-import org.apache.commons.lang.exception.ExceptionUtils;
+import org.apache.commons.lang3.exception.ExceptionUtils;
+import org.apache.geode.cache.Cache;
-   * Gets the reference to the Locator object representing the running GemFire Locator.
+   * Gets a reference to the {@code Cache} that was created by this {@code LocatorLauncher}.
+   *
+   * @return a reference to the Cache
+   * @see Cache
+   */
+  public Cache getCache() {
+    return getInternalLocator().getCache();
+  }
+
+  /**
+   * Gets a reference to the {@code Locator} that was created by this {@code LocatorLauncher}.
+   * @see Locator
-  InternalLocator getLocator() {
-    return this.locator;
+  public Locator getLocator() {
+    return locator;
+  }
+
+  /**
+   * Gets a reference to the {@code Locator} as an {@code InternalLocator}. For internal use only.
+   *
+   * @return a reference to the Locator as an InternalLocator.
+   */
+  InternalLocator getInternalLocator() {
+    return locator;
-      assert getLocator() != null : "The Locator must first be started with a call to start!";
+      assert getInternalLocator() != null : "The Locator must first be started with a call to start!";
-      getLocator().waitToStop();
+      getInternalLocator().waitToStop();
-    return (isRunning() && getLocator() != null);
+    return (isRunning() && getInternalLocator() != null);
-    debug(ExceptionUtils.getFullStackTrace(cause) + errorMessage);
+    debug(ExceptionUtils.getStackTrace(cause) + errorMessage);
