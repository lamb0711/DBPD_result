Merge remote-tracking branch 'origin/develop' into wan_cq_donation

-  /** time to wait for a leave request to be transmitted by jgroups */
-  private static final long LEAVE_MESSAGE_SLEEP_TIME = Long.getLong("gemfire.leave-message-sleep-time", 1000);
+  /** time to wait for a broadcast message to be transmitted by jgroups */
+  private static final long BROADCAST_MESSAGE_SLEEP_TIME = Long.getLong("gemfire.broadcast-message-sleep-time", 1000);
-    synchronized (joinResponse) {
-      if (joinResponse[0] == null) {
-        try {
-          // Note that if we give up waiting but a response is on
-          // the way we will get the new view and join that way.
-          // See installView()
-          long timeout = Math.max(services.getConfig().getMemberTimeout(), services.getConfig().getJoinTimeout() / 5);
-          joinResponse.wait(timeout);
-        } catch (InterruptedException e) {
-          logger.debug("join attempt was interrupted");
-          Thread.currentThread().interrupt();
-          return false;
-        }
-      }
-      response = joinResponse[0];
+    try {
+      response = waitForJoinResponse();
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+      return false;
-    if (response != null) {
-      logger.debug("received join response {}", response);
-      joinResponse[0] = null;
-      String failReason = response.getRejectionMessage();
-      if (failReason != null) {
-        if (failReason.contains("Rejecting the attempt of a member using an older version") 
-            || failReason.contains("15806")) {
-          throw new SystemConnectException(failReason);
-        }
-        throw new AuthenticationFailedException(failReason);
-      }
-      if (response.getCurrentView() != null) {
-        if (response.getBecomeCoordinator()) {
-          logger.info("I am being told to become the membership coordinator by {}", coord);
-          synchronized(viewInstallationLock) {
-            this.currentView = response.getCurrentView();
-            becomeCoordinator(null);
-          }
-        } else {
-          this.birthViewId = response.getMemberID().getVmViewId();
-          this.localAddress.setVmViewId(this.birthViewId);
-          GMSMember me = (GMSMember) this.localAddress.getNetMember();
-          me.setBirthViewId(birthViewId);
-          installView(response.getCurrentView());
-        }
-
-        return true;
-
-      } else {
-        logger.info("received join response with no membership view: {}", response);
-      }
-    } else {
+    
+    if (response == null) {
+      return isJoined;
-    return isJoined;
+
+    logger.debug("received join response {}", response);
+    joinResponse[0] = null;
+    String failReason = response.getRejectionMessage();
+    if (failReason != null) {
+      if (failReason.contains("Rejecting the attempt of a member using an older version") 
+          || failReason.contains("15806")) {
+        throw new SystemConnectException(failReason);
+      }
+      throw new AuthenticationFailedException(failReason);
+    }
+    
+    if (response.getCurrentView() == null) {
+      logger.info("received join response with no membership view: {}", response);
+      return isJoined;
+    }
+
+    if (response.getBecomeCoordinator()) {
+      logger.info("I am being told to become the membership coordinator by {}", coord);
+      synchronized(viewInstallationLock) {
+        this.currentView = response.getCurrentView();
+        becomeCoordinator(null);
+      }
+      return true;
+    }
+    
+    this.birthViewId = response.getMemberID().getVmViewId();
+    this.localAddress.setVmViewId(this.birthViewId);
+    GMSMember me = (GMSMember) this.localAddress.getNetMember();
+    me.setBirthViewId(birthViewId);
+    installView(response.getCurrentView());
+
+    return true;
+  }
+
+  private JoinResponseMessage waitForJoinResponse() throws InterruptedException {
+    JoinResponseMessage response;
+    synchronized (joinResponse) {
+      if (joinResponse[0] == null && !isJoined) {
+        // Note that if we give up waiting but a response is on
+        // the way we will get the new view and join that way.
+        // See installView()
+        long timeout = Math.max(services.getConfig().getMemberTimeout(), services.getConfig().getJoinTimeout() / 5);
+        joinResponse.wait(timeout);
+      }
+      response = joinResponse[0];
+    }
+    return response;
-          installView(view);
+          installView(view); // this will notifyAll the joinResponse
-      isJoined = true;
-      synchronized(joinResponse) {
-        joinResponse.notifyAll();
+      if (!isJoined) {
+        logger.debug("notifying join thread");
+        isJoined = true;
+        synchronized(joinResponse) {
+          joinResponse.notifyAll();
+        }
-    boolean waitForProcessing = false;
-
-          waitForProcessing = true;
-    if (waitForProcessing) {
-      try {
-        Thread.sleep(LEAVE_MESSAGE_SLEEP_TIME);
-      } catch (InterruptedException e) {
-        Thread.currentThread().interrupt();
-      }
-    }
-            Thread.sleep(LEAVE_MESSAGE_SLEEP_TIME);
+            Thread.sleep(BROADCAST_MESSAGE_SLEEP_TIME);
