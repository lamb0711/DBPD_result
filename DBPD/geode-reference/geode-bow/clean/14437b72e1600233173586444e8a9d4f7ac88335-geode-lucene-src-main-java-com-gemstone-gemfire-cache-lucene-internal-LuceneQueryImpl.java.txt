GEODE-11 Added the findKeys method to LuceneQuery

Added the findKeys method to LuceneQuery that returns the list of keys. Added
unit and intergration to test findKeys. Added an integration test for
pagination.

+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import java.util.stream.Collectors;
+
+import com.gemstone.gemfire.cache.execute.Execution;
+import com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScore;
+  public Collection<K> findKeys() throws LuceneQueryException {
+    TopEntries entries = findTopEntries();
+    final List<EntryScore> hits = entries.getHits();
+
+    return hits.stream()
+      .map(hit -> (K) hit.getKey())
+      .collect(Collectors.toList());
+  }
+
+  @Override
+    TopEntries entries = findTopEntries();
+
+    return new PageableLuceneQueryResultsImpl<K, V>(entries.getHits(), region, pageSize);
+  }
+
+  private TopEntries findTopEntries() throws LuceneQueryException {
-    ResultCollector<TopEntriesCollector, TopEntries> rc = (ResultCollector<TopEntriesCollector, TopEntries>) FunctionService.onRegion(region)
+    ResultCollector<TopEntriesCollector, TopEntries> rc = (ResultCollector<TopEntriesCollector, TopEntries>) onRegion()
-    
+
+    TopEntries entries;
-      TopEntries entries = rc.getResult();
-      return new PageableLuceneQueryResultsImpl<K, V>(entries.getHits(), region, pageSize);
+      entries = rc.getResult();
+    return entries;
+  }
+
+  protected Execution onRegion() {
+    return FunctionService.onRegion(region);
