GEODE-907: Converted core functionality to use jackson

+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.node.ArrayNode;
+import com.fasterxml.jackson.databind.node.ObjectNode;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONArray;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONException;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONObject;
-// @Service("ClusterMembers")
+  private final ObjectMapper mapper = new ObjectMapper();
+
-  public JSONObject execute(final HttpServletRequest request) throws Exception {
+  public ObjectNode tempExecute(final HttpServletRequest request) throws Exception {
-    JSONObject responseJSON = new JSONObject();
+    ObjectNode responseJSON = mapper.createObjectNode();
-    try {
-      // clucter's Members
-      responseJSON.put(
-          this.CLUSTER,
-          getPhysicalServerJson(cluster, repository.getJmxHost(),
-              repository.getJmxPort()));
-      responseJSON.put(this.MEMBER_COUNT, cluster.getMemberCount());
-      // Send json response
-      return responseJSON;
-    } catch (JSONException e) {
-      throw new Exception(e);
-    }
+    // cluster's Members
+    responseJSON.put(this.CLUSTER,
+        getPhysicalServerJson(cluster, repository.getJmxHost(), repository.getJmxPort()));
+    responseJSON.put(this.MEMBER_COUNT, cluster.getMemberCount());
+
+    // Send json response
+    return responseJSON;
-  private JSONObject getPhysicalServerJson(Cluster cluster, String host,
-      String port) throws JSONException {
-    Map<String, List<Cluster.Member>> physicalToMember = cluster
-        .getPhysicalToMember();
+  private ObjectNode getPhysicalServerJson(Cluster cluster, String host, String port) {
+    Map<String, List<Cluster.Member>> physicalToMember = cluster.getPhysicalToMember();
-    JSONObject clusterTopologyJSON = new JSONObject();
+    ObjectNode clusterTopologyJSON = mapper.createObjectNode();
-    JSONObject data1 = new JSONObject();
+    ObjectNode data1 = mapper.createObjectNode();
-    JSONArray childHostArray = new JSONArray();
+    ArrayNode childHostArray = mapper.createArrayNode();
-    for (Map.Entry<String, List<Cluster.Member>> physicalToMem : physicalToMember
-        .entrySet()) {
+    for (Map.Entry<String, List<Cluster.Member>> physicalToMem : physicalToMember.entrySet()) {
-      JSONObject childHostObject = new JSONObject();
+      ObjectNode childHostObject = mapper.createObjectNode();
-      JSONArray membersArray = new JSONArray();
+      ArrayNode membersArray = mapper.createArrayNode();
-        JSONObject memberJSONObj = new JSONObject();
+        ObjectNode memberJSONObj = mapper.createObjectNode();
-        JSONObject memberData = new JSONObject();
+        ObjectNode memberData = mapper.createObjectNode();
-            || (member.getMemberPort().equals("")))
+            || (member.getMemberPort().equals(""))) {
-        else
+        } else {
+        }
-          memberNodeType = getMemberNodeType(member,
-              this.MEMBER_NODE_TYPE_SEVERE);
+          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_SEVERE);
-        }
-        // for error alerts
-        else if (errorAlertsList.contains(member.getName())) {
+        } else if (errorAlertsList.contains(member.getName())) {
+          // for error alerts
-          memberNodeType = getMemberNodeType(member,
-              this.MEMBER_NODE_TYPE_WARNING);
-          if (!hostWarning)
+          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_WARNING);
+          if (!hostWarning) {
+          }
-          memberNodeType = getMemberNodeType(member,
-              this.MEMBER_NODE_TYPE_NORMAL);
+          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_NORMAL);
-        memberData.put(this.GATEWAY_SENDER, member.getGatewaySenderList()
-            .size());
+        memberData.put(this.GATEWAY_SENDER, member.getGatewaySenderList().size());
-          memberData.put(this.GATEWAY_RECEIVER, "1");
+          memberData.put(this.GATEWAY_RECEIVER, 1);
-          memberData.put(this.GATEWAY_RECEIVER, "0");
+          memberData.put(this.GATEWAY_RECEIVER, 0);
-        memberJSONObj.put(this.CHILDREN, new JSONArray());
-        membersArray.put(memberJSONObj);
+        memberJSONObj.put(this.CHILDREN, mapper.createArrayNode());
+        membersArray.add(memberJSONObj);
-      JSONObject data = new JSONObject();
+      ObjectNode data = mapper.createObjectNode();
-      childHostArray.put(childHostObject);
+      childHostArray.add(childHostObject);
-
