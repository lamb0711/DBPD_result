Merge branch 'feature/GEODE-8' into develop

+  protected static final short FETCH_FROM_HDFS = (SKIP_CALLBACKS << 1);
+  //using the left most bit for IS_PUT_DML, the last available bit
+  protected static final short IS_PUT_DML = (short) (FETCH_FROM_HDFS << 1);
+  /** whether this operation should fetch oldValue from HDFS */
+  private boolean fetchFromHDFS;
+  
+  private boolean isPutDML;
-      boolean posDup, boolean skipCallbacks, Object callbackArg) {
+      boolean posDup, boolean skipCallbacks, Object callbackArg, boolean fetchFromHDFS, boolean isPutDML) {
+    this.fetchFromHDFS = fetchFromHDFS;
+    this.isPutDML = isPutDML; 
+    setTransactionDistributed(r.getCache().getTxManager().isDistributed());
+ 
+    if (this.fetchFromHDFS) s |= FETCH_FROM_HDFS;
+    if (this.isPutDML) s |= IS_PUT_DML;
+    this.fetchFromHDFS = ((s & FETCH_FROM_HDFS) != 0);
+    this.isPutDML = ((s & IS_PUT_DML) != 0);
-    EntryEventImpl ev = new EntryEventImpl(r, 
+    EntryEventImpl ev = EntryEventImpl.create(r, 
+    try {
-      baseEvent = new EntryEventImpl(
+      baseEvent = EntryEventImpl.create(
-            EntryEventImpl ev = getEventFromEntry(r, myId, eventSender, i,putAllPRData,notificationOnly,bridgeContext,posDup,skipCallbacks);
+            EntryEventImpl ev = getEventFromEntry(r, myId, eventSender, i,putAllPRData,notificationOnly,bridgeContext,posDup,skipCallbacks, this.isPutDML);
+            try {
+            // set the fetchFromHDFS flag
+            ev.setFetchFromHDFS(this.fetchFromHDFS);
+            
+            } finally {
+              ev.release();
+            }
-        EntryEventImpl ev = getEventFromEntry(r, myId, eventSender, i,putAllPRData,notificationOnly,bridgeContext,posDup,skipCallbacks);
+        EntryEventImpl ev = getEventFromEntry(r, myId, eventSender, i,putAllPRData,notificationOnly,bridgeContext,posDup,skipCallbacks, this.isPutDML);
+        try {
+        } finally {
+          ev.release();
+        }
+    } finally {
+      if (baseEvent != null) baseEvent.release();
+      if (dpao != null) dpao.freeOffHeapResources();
+    }
-      boolean posDup, boolean skipCallbacks) {
+      boolean posDup, boolean skipCallbacks, boolean isPutDML) {
-    //EntryEventImpl ev = new EntryEventImpl(r, 
+    //EntryEventImpl ev = EntryEventImpl.create(r, 
-    EntryEventImpl ev = new EntryEventImpl(r, prd.getOp(), prd.getKey(), prd
+    EntryEventImpl ev = EntryEventImpl.create(r, prd.getOp(), prd.getKey(), prd
+    boolean evReturned = false;
+    try {
+    ev.setPutDML(isPutDML);
+    evReturned = true;
+    } finally {
+      if (!evReturned) {
+        ev.release();
+      }
+    }
+  
+  @Override
+  protected boolean mayAddToMultipleSerialGateways(DistributionManager dm) {
+    return _mayAddToMultipleSerialGateways(dm);
+  }
+
