Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

+import com.gemstone.gemfire.cache.CustomEvictionAttributes;
+  private String hdfsStoreName;
+  private boolean hdfsWriteOnly = false;
+  /**
+   * True if usage of off-heap memory is enabled for this region.
+   * @since 9.0
+   */
+  private boolean offHeap;
+
+	this.hdfsStoreName = attrs.getHDFSStoreName();
+    
+    this.offHeap = attrs.getOffHeap();
+ 	if (! equal(this.hdfsStoreName, other.getHDFSStoreName())) {
+      //TODO:HDFS write a new exception string
+      throw new RuntimeException(" HDFS Store name does not match");
+    }
+    if (this.offHeap != other.getOffHeap()) {
+      throw new RuntimeException(LocalizedStrings.RegionAttributesCreation_ENABLE_OFF_HEAP_MEMORY_IS_NOT_THE_SAME.toLocalizedString());
+    }
+    if (!hasHDFSStoreName()) {
+      if (parentIsUserSpecified) {
+        if (parentWithHas.hasHDFSStoreName()) {
+          setHDFSStoreName(parent.getHDFSStoreName());
+        }
+      } else {
+        setHDFSStoreName(parent.getHDFSStoreName());
+      }
+    }
+    if (!hasHDFSWriteOnly()) {
+      if (parentIsUserSpecified) {
+        if (parentWithHas.hasHDFSWriteOnly()) {
+          setHDFSWriteOnly(parent.getHDFSWriteOnly());
+        }
+      } else {
+        setHDFSWriteOnly(parent.getHDFSWriteOnly());
+      }
+    }
-  
-  
+
+  /**
+   * {@inheritDoc}
+   */
+  @Override
+  public CustomEvictionAttributes getCustomEvictionAttributes() {
+    // TODO: HDFS: no support for configuring this from XML yet
+    return null;
+  }
+
+  public void setOffHeap(boolean offHeap) {
+    this.offHeap = offHeap;
+    setHasOffHeap(true);
+  }
+  
+  public boolean getOffHeap() {
+    return this.offHeap;
+  }
+  
+  public String getHDFSStoreName() {
+    return this.hdfsStoreName;
+  }
+  public void setHDFSStoreName(String hdfsStoreName) {
+    //TODO:HDFS : throw an exception if a disk store is already configured
+    // and vice versa
+    this.hdfsStoreName = hdfsStoreName;
+    setHasHDFSStoreName(true);
+  }
+  public void setHDFSWriteOnly(boolean writeOnly) {
+    this.hdfsWriteOnly= writeOnly;
+    setHasHDFSWriteOnly(true);
+  }
+  public boolean getHDFSWriteOnly() {
+    return hdfsWriteOnly;
+  }
