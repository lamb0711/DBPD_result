GEODE-5405: Refactor backup to remove duplication and clean up

-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.CancelException;
-import org.apache.geode.distributed.internal.ReplyException;
-import org.apache.geode.internal.logging.LogService;
-/**
- * A Operation to from an admin VM to all non admin members to start a backup. In the prepare phase
- * of the backup, the members will suspend bucket destroys to make sure buckets aren't missed during
- * the backup.
- */
-public class FlushToDiskStep {
-  private static final Logger logger = LogService.getLogger();
+class FlushToDiskStep extends BackupStep {
-  private final DistributionManager dm;
+    super(dm);
-    this.dm = dm;
-  void send() {
-    ReplyProcessor21 replyProcessor = createReplyProcessor();
-
-    dm.putOutgoing(createDistributionMessage(replyProcessor));
-
-    processLocally();
-
-    try {
-      replyProcessor.waitForReplies();
-    } catch (ReplyException e) {
-      if (!(e.getCause() instanceof CancelException)) {
-        throw e;
-      }
-    } catch (InterruptedException e) {
-      logger.warn(e.getMessage(), e);
-    }
+  @Override
+  ReplyProcessor21 createReplyProcessor() {
+    return flushToDiskFactory.createReplyProcessor(getDistributionManager(), recipients);
-  private ReplyProcessor21 createReplyProcessor() {
-    return this.flushToDiskFactory.createReplyProcessor(dm, recipients);
-  }
-
-  private DistributionMessage createDistributionMessage(ReplyProcessor21 replyProcessor) {
-    return this.flushToDiskFactory.createRequest(member, recipients,
+  @Override
+  DistributionMessage createDistributionMessage(ReplyProcessor21 replyProcessor) {
+    return flushToDiskFactory.createRequest(member, recipients,
-  private void processLocally() {
+  @Override
+  void processLocally() {
-
