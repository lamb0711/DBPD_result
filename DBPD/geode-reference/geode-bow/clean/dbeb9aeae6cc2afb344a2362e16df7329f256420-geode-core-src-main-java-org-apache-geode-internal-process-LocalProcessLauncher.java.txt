Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public static final String PROPERTY_IGNORE_IS_PID_ALIVE = DistributionConfig.GEMFIRE_PREFIX + "test.LocalProcessLauncher.ignoreIsPidAlive";
-  
+  public static final String PROPERTY_IGNORE_IS_PID_ALIVE =
+      DistributionConfig.GEMFIRE_PREFIX + "test.LocalProcessLauncher.ignoreIsPidAlive";
+
-  
+
-   * Constructs a new ProcessLauncher. Parses this process's RuntimeMXBean name 
-   * for the pid (process id).
+   * Constructs a new ProcessLauncher. Parses this process's RuntimeMXBean name for the pid (process
+   * id).
-   * @throws PidUnavailableException if the pid cannot be parsed from the RuntimeMXBean name 
+   * @throws PidUnavailableException if the pid cannot be parsed from the RuntimeMXBean name
-  public LocalProcessLauncher(final File pidFile, final boolean force) 
+  public LocalProcessLauncher(final File pidFile, final boolean force)
-  
+
-  
+
-  
+
-   * @param force if true then the pid file will be replaced if it already exists it 
+   * @param force if true then the pid file will be replaced if it already exists it
-      } catch(IOException e) {
+      } catch (IOException e) {
-        throw new FileAlreadyExistsException("Pid file already exists: " + this.pidFile + 
-            " for " + (otherPid > 0 ? "process " + otherPid : "unknown process"));
+        throw new FileAlreadyExistsException("Pid file already exists: " + this.pidFile + " for "
+            + (otherPid > 0 ? "process " + otherPid : "unknown process"));
-  
+
