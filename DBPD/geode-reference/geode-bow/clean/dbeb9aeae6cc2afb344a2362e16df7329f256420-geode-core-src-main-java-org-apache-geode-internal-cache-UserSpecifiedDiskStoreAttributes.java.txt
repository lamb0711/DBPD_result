Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * UserSpecifiedDiskStoreAttributes provides an way to detect departures from default attribute values.
- * It may be used when collecting attributes from an XML parser or from attribute changes made using the
- * {@link org.apache.geode.cache.DiskStoreFactory}.  Its initial usage was to validate
+ * UserSpecifiedDiskStoreAttributes provides an way to detect departures from default attribute
+ * values. It may be used when collecting attributes from an XML parser or from attribute changes
+ * made using the {@link org.apache.geode.cache.DiskStoreFactory}. Its initial usage was to validate
-public class UserSpecifiedDiskStoreAttributes extends DiskStoreAttributes
-{
+public class UserSpecifiedDiskStoreAttributes extends DiskStoreAttributes {
-  
+
- 
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
- 
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-    for(int i=0; i < thisFields.length; i++) {
+    for (int i = 0; i < thisFields.length; i++) {
-          Assert.assertTrue(false, "Could not access field" + thisFields[i].getName() + " on " + getClass());
+          Assert.assertTrue(false,
+              "Could not access field" + thisFields[i].getName() + " on " + getClass());
-  
-  public void initHasFields(UserSpecifiedDiskStoreAttributes other)
-  {
+
+  public void initHasFields(UserSpecifiedDiskStoreAttributes other) {
-    for(int i=0; i < thisFields.length; i++) {
+    for (int i = 0; i < thisFields.length; i++) {
-        
+
-          Method otherMeth = other.getClass().getMethod(fieldName/*, (Class[])null*/);
+          Method otherMeth = other.getClass().getMethod(fieldName/* , (Class[])null */);
-        }
-        catch (IllegalArgumentException e) {
-          Assert.assertTrue(false, "Illegal argument trying to set field " + e.getLocalizedMessage());
-        }
-        catch (InvocationTargetException e) {
+        } catch (IllegalArgumentException e) {
+          Assert.assertTrue(false,
+              "Illegal argument trying to set field " + e.getLocalizedMessage());
+        } catch (InvocationTargetException e) {
-        
+
-    Assert.assertTrue(hasCounter == HAS_COUNT, "Expected " + HAS_COUNT 
-        + " methods, got " + hasCounter + " last field: " + fieldName);
+    Assert.assertTrue(hasCounter == HAS_COUNT,
+        "Expected " + HAS_COUNT + " methods, got " + hasCounter + " last field: " + fieldName);
