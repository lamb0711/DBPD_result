GEODE-2919: Provide finer grained security

 - For full details, see https://cwiki.apache.org/confluence/display/GEODE/Finer+grained+security

+import org.apache.geode.security.ResourcePermission.Target;
-  public String getSenderId();
+  String getSenderId();
-  public int getRemoteDSId();
+  int getRemoteDSId();
-  public int getSocketBufferSize();
+  int getSocketBufferSize();
-  public long getSocketReadTimeout();
+  long getSocketReadTimeout();
-  public String getOverflowDiskStoreName();
+  String getOverflowDiskStoreName();
-  public int getMaximumQueueMemory();
+  int getMaximumQueueMemory();
-  public int getBatchSize();
+  int getBatchSize();
-  public long getBatchTimeInterval();
+  long getBatchTimeInterval();
-  public boolean isBatchConflationEnabled();
+  boolean isBatchConflationEnabled();
-  public boolean isPersistenceEnabled();
+  boolean isPersistenceEnabled();
-  public int getAlertThreshold();
+  int getAlertThreshold();
-  public String[] getGatewayEventFilters();
+  String[] getGatewayEventFilters();
-  public String[] getGatewayTransportFilters();
+  String[] getGatewayTransportFilters();
-  public boolean isManualStart();
+  boolean isManualStart();
-  public boolean isRunning();
+  boolean isRunning();
-  public boolean isPaused();
+  boolean isPaused();
-  public float getEventsReceivedRate();
+  float getEventsReceivedRate();
-  public float getEventsQueuedRate();
+  float getEventsQueuedRate();
-  public int getEventQueueSize();
+  int getEventQueueSize();
-  public int getTotalEventsConflated();
+  int getTotalEventsConflated();
-  public float getBatchesDispatchedRate();
+  float getBatchesDispatchedRate();
-  public long getAverageDistributionTimePerBatch();
+  long getAverageDistributionTimePerBatch();
-  public int getTotalBatchesRedistributed();
+  int getTotalBatchesRedistributed();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-  public void start();
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
+  void start();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-  public void stop();
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
+  void stop();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-  public void pause();
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
+  void pause();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-  public void resume();
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
+  void resume();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-  public void rebalance();
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.GATEWAY)
+  void rebalance();
-  public boolean isPrimary();
+  boolean isPrimary();
-  public int getDispatcherThreads();
+  int getDispatcherThreads();
-  public String getOrderPolicy();
+  String getOrderPolicy();
-  public boolean isDiskSynchronous();
+  boolean isDiskSynchronous();
-  public boolean isParallel();
+  boolean isParallel();
-  public String getGatewayReceiver();
+  String getGatewayReceiver();
-  public boolean isConnected();
+  boolean isConnected();
-  public int getEventsExceedingAlertThreshold();
+  int getEventsExceedingAlertThreshold();
