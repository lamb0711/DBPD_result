GEODE-7010: Replace static globals in CachePerfStats with StatisticsClock (#3859)

* Replace CachePerfStats.getStatTime with Cache owned StatisticsClock
* Inject StatisticsClock dependency via constructor

+import org.apache.geode.internal.statistics.StatisticsClock;
+  private final StatisticsClock statisticsClock;
+
-  public TXManagerImpl(CachePerfStats cachePerfStats, InternalCache cache) {
+  public TXManagerImpl(CachePerfStats cachePerfStats, InternalCache cache,
+      StatisticsClock statisticsClock) {
+    this.statisticsClock = statisticsClock;
-      proxy = new DistTXStateProxyImplOnCoordinator(cache, this, id, null);
+      proxy = new DistTXStateProxyImplOnCoordinator(cache, this, id, null, statisticsClock);
-      proxy = new TXStateProxyImpl(cache, this, id, null);
+      proxy = new TXStateProxyImpl(cache, this, id, null, statisticsClock);
-      newState = new DistTXStateProxyImplOnCoordinator(cache, this, id, true);
+      newState = new DistTXStateProxyImplOnCoordinator(cache, this, id, true, statisticsClock);
-      newState = new TXStateProxyImpl(cache, this, id, true);
+      newState = new TXStateProxyImpl(cache, this, id, true, statisticsClock);
-    final long opStart = CachePerfStats.getStatTime();
+    final long opStart = statisticsClock.getTime();
-    long opEnd = CachePerfStats.getStatTime();
+    long opEnd = statisticsClock.getTime();
-    long opEnd = CachePerfStats.getStatTime();
+    long opEnd = statisticsClock.getTime();
-    final long opStart = CachePerfStats.getStatTime();
+    final long opStart = statisticsClock.getTime();
-    long opEnd = CachePerfStats.getStatTime();
+    long opEnd = statisticsClock.getTime();
-            val = new DistTXStateProxyImplOnDatanode(cache, this, key, msg.getTXOriginatorClient());
-            val.setLocalTXState(new DistTXState(val, true));
+            val = new DistTXStateProxyImplOnDatanode(cache, this, key, msg.getTXOriginatorClient(),
+                statisticsClock);
+            val.setLocalTXState(new DistTXState(val, true, statisticsClock));
-            val = new TXStateProxyImpl(cache, this, key, msg.getTXOriginatorClient());
-            val.setLocalTXState(new TXState(val, true));
+            val = new TXStateProxyImpl(cache, this, key, msg.getTXOriginatorClient(),
+                statisticsClock);
+            val.setLocalTXState(new TXState(val, true, statisticsClock));
-            val = new DistTXStateProxyImplOnDatanode(cache, this, key, memberId);
+            val = new DistTXStateProxyImplOnDatanode(cache, this, key, memberId, statisticsClock);
-            val = new TXStateProxyImpl(cache, this, key, memberId);
+            val = new TXStateProxyImpl(cache, this, key, memberId, statisticsClock);
