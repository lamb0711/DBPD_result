GEODE-5971: refactor more to use ResultModel (#3268)

Co-authored-by: Owen Nichols <onichols@pivotal.io>
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-  public Result echo(@CliOption(key = {CliStrings.ECHO__STR, ""}, specifiedDefaultValue = "",
+  public ResultModel echo(@CliOption(key = {CliStrings.ECHO__STR, ""}, specifiedDefaultValue = "",
-    Result result;
-      TabularResultData resultData = buildResultForEcho(setEnvMap);
-
-      result = ResultBuilder.buildResult(resultData);
+      return buildResultForEcho(setEnvMap);
-      result = ResultBuilder.createInfoResult(stringToEcho);
+      return ResultModel.createInfo(stringToEcho);
-    return result;
-  private TabularResultData buildResultForEcho(Set<Map.Entry<String, String>> propertyMap) {
-    TabularResultData resultData = ResultBuilder.createTabularResultData();
+  private ResultModel buildResultForEcho(Set<Map.Entry<String, String>> propertyMap) {
+    ResultModel result = new ResultModel();
+    TabularResultModel echoResult = result.addTable("echoResult");
+    echoResult.setColumnHeader("Property", "Value");
-      resultData.accumulate("Property", setEntry.getKey());
-      resultData.accumulate("Value", String.valueOf(setEntry.getValue()));
+      echoResult.addRow(setEntry.getKey(), String.valueOf(setEntry.getValue()));
-    return resultData;
+    return result;
