GEODE-1027: add unit test for previously committed fix

+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.i18n.LogWriterI18n;
+import org.apache.geode.internal.logging.LogService;
- * 
- * 
+  private static final Logger logger = LogService.getLogger();
+
-  private LogWriterI18n logger;
-
-  public MBeanStatsMonitor(String name) {
-    this.monitorName = name;
-    this.monitor = new ValueMonitor();
-    this.statsMap = new DefaultHashMap();
-    this.logger = InternalDistributedSystem.getLoggerI18n();
-
+  public MBeanStatsMonitor(final String name) {
+    this(name, new ValueMonitor());
-  public void addStatisticsToMonitor(Statistics stats) {
+  MBeanStatsMonitor(final String name, final ValueMonitor monitor) {
+    this.monitorName = name;
+    this.monitor = monitor;
+    this.statsMap = new DefaultHashMap();
+  }
+
+  public void addStatisticsToMonitor(final Statistics stats) {
-  public void removeStatisticsFromMonitor(Statistics stats) {
+  public void removeStatisticsFromMonitor(final Statistics stats) {
-  public Number getStatistic(String statName) {
-    return statsMap.get(statName) != null ? statsMap.get(statName) : 0;
+  public Number getStatistic(final String statName) {
+    Number value = statsMap.get(statName);
+    return value != null ? value : 0;
-  public void handleNotification(StatisticsNotification notification) {
-
+  public void handleNotification(final StatisticsNotification notification) {
-
-  protected void log(String name, Number value) {
-
-    if (logger != null && logger.finestEnabled()) {
-      logger.finest("Monitor = " + monitorName + " descriptor = " + name + " And Value = " + value);
+  protected void log(final String name, final Number value) {
+    if (logger.isTraceEnabled()) {
+      logger.trace("Monitor = {} descriptor = {} And value = {}", monitorName, name, value);
-  public static class DefaultHashMap {
-    private Map<String, Number> internalMap = new HashMap<String, Number>();
+  public static class DefaultHashMap { // TODO: delete this class
+    private Map<String, Number> internalMap = new HashMap<>();
-    public Number get(String key) {
+    public Number get(final String key) {
-    public void put(String key, Number value) {
+    public void put(final String key, final Number value) {
+
+    /**
+     * For testing only
+     */
+    Map<String, Number> getInternalMap() {
+      return this.internalMap;
+    }
