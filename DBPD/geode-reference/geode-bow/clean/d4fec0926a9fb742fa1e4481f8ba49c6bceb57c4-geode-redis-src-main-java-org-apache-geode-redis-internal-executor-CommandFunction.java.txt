GEODE-8301: add redis stats (#5307)


+import org.apache.geode.redis.internal.RedisStats;
+  private final RedisStats redisStats;
-  public static void register(StripedExecutor stripedExecutor) {
-    FunctionService.registerFunction(new CommandFunction(stripedExecutor));
+  public static void register(StripedExecutor stripedExecutor,
+      RedisStats redisStats) {
+    FunctionService.registerFunction(new CommandFunction(stripedExecutor, redisStats));
-  public CommandFunction(StripedExecutor stripedExecutor) {
+  public CommandFunction(StripedExecutor stripedExecutor,
+      RedisStats redisStats) {
+    this.redisStats = redisStats;
-        callable = () -> new RedisKeyInRegion(localRegion).del(key);
+        callable = () -> new RedisKeyInRegion(localRegion, redisStats).del(key);
-        callable = () -> new RedisKeyInRegion(localRegion).exists(key);
+        callable = () -> new RedisKeyInRegion(localRegion, redisStats).exists(key);
-        callable = () -> new RedisKeyInRegion(localRegion).type(key);
+        callable = () -> new RedisKeyInRegion(localRegion, redisStats).type(key);
-            () -> new RedisKeyInRegion(localRegion).pexpireat(key, timestamp);
+            () -> new RedisKeyInRegion(localRegion, redisStats).pexpireat(key, timestamp);
-        callable = () -> new RedisKeyInRegion(localRegion).persist(key);
+        callable = () -> new RedisKeyInRegion(localRegion, redisStats).persist(key);
-        callable = () -> new RedisKeyInRegion(localRegion).pttl(key);
+        callable = () -> new RedisKeyInRegion(localRegion, redisStats).pttl(key);
-        callable = () -> new RedisStringInRegion(localRegion).append(key, valueToAdd);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).append(key, valueToAdd);
-        callable = () -> new RedisStringInRegion(localRegion).get(key);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).get(key);
-        callable = () -> new RedisStringInRegion(localRegion).mget(key);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).mget(key);
-        callable = () -> new RedisStringInRegion(localRegion).strlen(key);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).strlen(key);
-        callable = () -> new RedisStringInRegion(localRegion).set(key, value, options);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).set(key, value, options);
-        callable = () -> new RedisStringInRegion(localRegion).getset(key, value);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).getset(key, value);
-        callable = () -> new RedisStringInRegion(localRegion).getrange(key, start, end);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).getrange(key, start, end);
-        callable = () -> new RedisStringInRegion(localRegion).setrange(key, offset, value);
+        callable =
+            () -> new RedisStringInRegion(localRegion, redisStats).setrange(key, offset, value);
-          callable = () -> new RedisStringInRegion(localRegion).bitcount(key);
+          callable = () -> new RedisStringInRegion(localRegion, redisStats).bitcount(key);
-          callable = () -> new RedisStringInRegion(localRegion).bitcount(key, start, end);
+          callable =
+              () -> new RedisStringInRegion(localRegion, redisStats).bitcount(key, start, end);
-        callable = () -> new RedisStringInRegion(localRegion).bitpos(key, bit, start, end);
+        callable =
+            () -> new RedisStringInRegion(localRegion, redisStats).bitpos(key, bit, start, end);
-        callable = () -> new RedisStringInRegion(localRegion).getbit(key, offset);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).getbit(key, offset);
-        callable = () -> new RedisStringInRegion(localRegion).setbit(key, offset, value);
+        callable =
+            () -> new RedisStringInRegion(localRegion, redisStats).setbit(key, offset, value);
-        callable = () -> new RedisStringInRegion(localRegion).bitop(stripedExecutor, operation, key,
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).bitop(stripedExecutor,
+            operation, key,
-        callable = () -> new RedisStringInRegion(localRegion).incr(key);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).incr(key);
-        callable = () -> new RedisStringInRegion(localRegion).decr(key);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).decr(key);
-        callable = () -> new RedisStringInRegion(localRegion).incrby(key, increment);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).incrby(key, increment);
-        callable = () -> new RedisStringInRegion(localRegion).incrbyfloat(key, increment);
+        callable =
+            () -> new RedisStringInRegion(localRegion, redisStats).incrbyfloat(key, increment);
-        callable = () -> new RedisStringInRegion(localRegion).decrby(key, decrement);
+        callable = () -> new RedisStringInRegion(localRegion, redisStats).decrby(key, decrement);
-        callable = () -> new RedisSetInRegion(localRegion).sadd(key, membersToAdd);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).sadd(key, membersToAdd);
-        callable = () -> new RedisSetInRegion(localRegion).srem(key, membersToRemove);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).srem(key, membersToRemove);
-        callable = () -> new RedisSetInRegion(localRegion).smembers(key);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).smembers(key);
-        callable = () -> new RedisSetInRegion(localRegion).scard(key);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).scard(key);
-        callable = () -> new RedisSetInRegion(localRegion).sismember(key, member);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).sismember(key, member);
-        callable = () -> new RedisSetInRegion(localRegion).srandmember(key, count);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).srandmember(key, count);
-        callable = () -> new RedisSetInRegion(localRegion).spop(key, popCount);
+        callable = () -> new RedisSetInRegion(localRegion, redisStats).spop(key, popCount);
-            () -> new RedisSetInRegion(localRegion).sscan(key, matchPattern, count, cursor);
+            () -> new RedisSetInRegion(localRegion, redisStats).sscan(key, matchPattern, count,
+                cursor);
-            () -> new RedisSetInRegion(localRegion).sunionstore(stripedExecutor, key, setKeys);
+            () -> new RedisSetInRegion(localRegion, redisStats).sunionstore(stripedExecutor, key,
+                setKeys);
-            () -> new RedisSetInRegion(localRegion).sinterstore(stripedExecutor, key, setKeys);
+            () -> new RedisSetInRegion(localRegion, redisStats).sinterstore(stripedExecutor, key,
+                setKeys);
-            () -> new RedisSetInRegion(localRegion).sdiffstore(stripedExecutor, key, setKeys);
+            () -> new RedisSetInRegion(localRegion, redisStats).sdiffstore(stripedExecutor, key,
+                setKeys);
-        callable = () -> new RedisHashInRegion(localRegion).hset(key, fieldsToSet, NX);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hset(key, fieldsToSet, NX);
-        callable = () -> new RedisHashInRegion(localRegion).hdel(key, fieldsToRemove);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hdel(key, fieldsToRemove);
-        callable = () -> new RedisHashInRegion(localRegion).hgetall(key);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hgetall(key);
-        callable = () -> new RedisHashInRegion(localRegion).hexists(key, field);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hexists(key, field);
-        callable = () -> new RedisHashInRegion(localRegion).hget(key, field);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hget(key, field);
-        callable = () -> new RedisHashInRegion(localRegion).hlen(key);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hlen(key);
-        callable = () -> new RedisHashInRegion(localRegion).hstrlen(key, field);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hstrlen(key, field);
-        callable = () -> new RedisHashInRegion(localRegion).hmget(key, fields);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hmget(key, fields);
-        callable = () -> new RedisHashInRegion(localRegion).hvals(key);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hvals(key);
-        callable = () -> new RedisHashInRegion(localRegion).hkeys(key);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hkeys(key);
-        callable = () -> new RedisHashInRegion(localRegion).hscan(key, pattern, count, cursor);
+        callable =
+            () -> new RedisHashInRegion(localRegion, redisStats).hscan(key, pattern, count, cursor);
-        callable = () -> new RedisHashInRegion(localRegion).hincrby(key, field, increment);
+        callable =
+            () -> new RedisHashInRegion(localRegion, redisStats).hincrby(key, field, increment);
-        callable = () -> new RedisHashInRegion(localRegion).hincrbyfloat(key, field, increment);
+        callable = () -> new RedisHashInRegion(localRegion, redisStats).hincrbyfloat(key, field,
+            increment);
