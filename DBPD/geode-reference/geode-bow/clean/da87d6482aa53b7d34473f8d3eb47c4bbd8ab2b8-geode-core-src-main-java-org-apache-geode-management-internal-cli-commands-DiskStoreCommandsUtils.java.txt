GEODE-6779: fix issues with DUnit failures (#3810)

- due to different ways of determining existence of disk stores
- added more protection against NPEs
- Move diskStore presence checking to DiskStoreCommandsUtils
- Move tests to newly created DiskStoreCommandsUtilsTest

+import java.util.Objects;
+import java.util.stream.Stream;
+import org.apache.logging.log4j.Logger;
+import org.apache.geode.management.DistributedSystemMXBean;
+  private static final Logger logger = LogService.getLogger();
+
+
+  static boolean diskStoreBeanAndMemberBeanDiskStoreExists(DistributedSystemMXBean dsMXBean,
+      String memberName,
+      String diskStore) {
+    return diskStoreBeanExists(dsMXBean, memberName, diskStore) &&
+        memberBeanDiskStoreExists(dsMXBean, memberName, diskStore);
+  }
+
+  private static boolean diskStoreBeanExists(DistributedSystemMXBean dsMXBean, String memberName,
+      String diskStore) {
+    try {
+      dsMXBean.fetchDiskStoreObjectName(memberName, diskStore);
+      return true;
+    } catch (Exception e) {
+      if (!e.getMessage().toLowerCase().contains("not found")) {
+        logger.warn("Unable to retrieve Disk Store ObjectName for member: {}, diskstore: {}  {}",
+            memberName, diskStore, e.getMessage());
+      }
+    }
+    return false;
+  }
+
+  private static boolean memberBeanDiskStoreExists(DistributedSystemMXBean dsMXBean,
+      String memberName,
+      String diskStore) {
+    return Stream.of(dsMXBean)
+        .filter(Objects::nonNull)
+        .map(DistributedSystemMXBean::listMemberDiskstore)
+        .filter(Objects::nonNull)
+        .flatMap(mds -> Stream.of(mds.get(memberName)))
+        .anyMatch(dsName -> dsName.equals(diskStore));
+  }
