Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
+ * 
-public final class EvictionAction extends EnumSyntax
-{
+public final class EvictionAction extends EnumSyntax {
-  /** Canonical EvictionAction that represents no eviction 
+  /**
+   * Canonical EvictionAction that represents no eviction
-  
-  /** Perform a {@link org.apache.geode.cache.Region#localDestroy(Object)
-   * localDestory} on the least recently used region entry. */
+
+  /**
+   * Perform a {@link org.apache.geode.cache.Region#localDestroy(Object) localDestory} on the least
+   * recently used region entry.
+   */
-  /** Write the value of the least recently used region entry to disk
-   * and <code>null</code>-out its value in the VM to free up heap
-   * space.  Note that this action is only available when the region
-   * has been configured to access data on disk. */
+  /**
+   * Write the value of the least recently used region entry to disk and <code>null</code>-out its
+   * value in the VM to free up heap space. Note that this action is only available when the region
+   * has been configured to access data on disk.
+   */
-  /** The default eviction action is to {@linkplain #LOCAL_DESTROY
-   * locally destroy} an Entry. */
+  /**
+   * The default eviction action is to {@linkplain #LOCAL_DESTROY locally destroy} an Entry.
+   */
-  
-  private EvictionAction(int val) { super(val); }
-  
-  private static final String[] stringTable = {
-    "none",
-    "local-destroy",
-    "overflow-to-disk",
-  };
-  
+
+  private EvictionAction(int val) {
+    super(val);
+  }
+
+  private static final String[] stringTable = {"none", "local-destroy", "overflow-to-disk",};
+
-    
-  //TODO post Java 1.8.0u45 uncomment final flag, see JDK-8076152
-  private static /*final*/ EvictionAction[] enumValueTable = {
-    NONE,
-    LOCAL_DESTROY,
-    OVERFLOW_TO_DISK
-  };
-    
+
+  // TODO post Java 1.8.0u45 uncomment final flag, see JDK-8076152
+  private static /* final */ EvictionAction[] enumValueTable =
+      {NONE, LOCAL_DESTROY, OVERFLOW_TO_DISK};
+
-  
+
-  
+
-  
+
-   * Returns the eviction action the corresponds to the given parameter.
-   * Returns <code>null</code> if no action corresponds.
+   * Returns the eviction action the corresponds to the given parameter. Returns <code>null</code>
+   * if no action corresponds.
+   * 
-  /** 
+
+  /**
-   * @return the action parsed from the provided string.  If there are problems with parsing
-   * NONE is returned.
+   * @return the action parsed from the provided string. If there are problems with parsing NONE is
+   *         returned.
-    if (s.length() < 1) 
+    if (s.length() < 1)
-        return enumValueTable[i]; 
+        return enumValueTable[i];
