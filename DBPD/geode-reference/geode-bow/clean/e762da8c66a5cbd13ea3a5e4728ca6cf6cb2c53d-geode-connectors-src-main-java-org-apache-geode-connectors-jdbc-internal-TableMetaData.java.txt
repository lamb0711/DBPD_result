GEODE-6291: change create mapping to define column and pdx field information  (#3155)

Create mapping now requires that the pdx class exists on the server.
It generates a FieldMapping definition for each column/field. It will load the pdx class and
generate a pdx type for it, failing if it can not do so.
If the pdx type field count does not match the table column count then it will fail.
The pdx field names can differ in case from the column names as long as only one field matches the column.

Authored-by: Benjamin Ross <bross@pivotal.io>
Authored-by: Darrel Schneider <dschneider@pivotal.io>

+import java.sql.JDBCType;
-  private final Map<String, Integer> columnNameToTypeMap;
+  private final Map<String, ColumnMetaData> columnMetaDataMap;
-      List<String> keyColumnNames, String quoteString, Map<String, Integer> dataTypes) {
+      List<String> keyColumnNames, String quoteString,
+      Map<String, ColumnMetaData> columnMetaDataMap) {
-    this.columnNameToTypeMap = dataTypes;
+    this.columnMetaDataMap = columnMetaDataMap;
-  public int getColumnDataType(String columnName) {
-    Integer dataType = this.columnNameToTypeMap.get(columnName);
-    if (dataType == null) {
-      return 0;
+  public JDBCType getColumnDataType(String columnName) {
+    ColumnMetaData columnMetaData = this.columnMetaDataMap.get(columnName);
+    if (columnMetaData == null) {
+      return JDBCType.NULL;
-    return dataType;
+    return columnMetaData.getType();
+  }
+
+  @Override
+  public boolean isColumnNullable(String columnName) {
+    ColumnMetaData columnMetaData = this.columnMetaDataMap.get(columnName);
+    if (columnMetaData == null) {
+      return true;
+    }
+    return columnMetaData.isNullable();
-    return columnNameToTypeMap.keySet();
+    return columnMetaDataMap.keySet();
+
+  public static class ColumnMetaData {
+    private final JDBCType type;
+    private final boolean nullable;
+
+    public ColumnMetaData(JDBCType type, boolean nullable) {
+      this.type = type;
+      this.nullable = nullable;
+    }
+
+    public JDBCType getType() {
+      return this.type;
+    }
+
+    public boolean isNullable() {
+      return this.nullable;
+    }
+  }
