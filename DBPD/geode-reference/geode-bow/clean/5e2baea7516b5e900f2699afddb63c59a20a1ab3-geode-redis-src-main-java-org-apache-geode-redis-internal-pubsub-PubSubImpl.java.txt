Feature/expand pubsub support (#5284)

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Sarah <sabbey@pivotal.io>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
+import java.util.stream.Collectors;
-    if (subscriptions.exists(channel, client)) {
-      return subscriptions.findSubscriptions(client).size();
-    }
-    Subscription subscription = new ChannelSubscription(client, channel, context);
-    subscriptions.add(subscription);
-    return subscriptions.findSubscriptions(client).size();
+    return subscriptions.subscribe(channel, context, client);
-    if (subscriptions.exists(pattern, client)) {
-      return subscriptions.findSubscriptions(client).size();
-    }
-    Subscription subscription = new PatternSubscription(client, pattern, context);
-    subscriptions.add(subscription);
-
-    return subscriptions.findSubscriptions(client).size();
+    return subscriptions.psubscribe(pattern, context, client);
-    subscriptions.remove(channel, client);
-    return subscriptions.findSubscriptions(client).size();
+    return subscriptions.unsubscribe(channel, client);
-    subscriptions.remove(pattern, client);
-    return subscriptions.findSubscriptions(client).size();
+    return subscriptions.unsubscribe(pattern, client);
+  }
+
+  @Override
+  public List<String> findSubscribedChannels(Client client) {
+    return subscriptions.findSubscriptions(client).stream()
+        .map(Subscription::getChannelName)
+        .collect(Collectors.toList());
