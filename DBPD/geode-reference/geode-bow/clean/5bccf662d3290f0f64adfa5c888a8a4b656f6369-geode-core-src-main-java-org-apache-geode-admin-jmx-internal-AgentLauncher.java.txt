GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-    out.println(LocalizedStrings.AgentLauncher_AGENT_CONFIGURATION_PROPERTIES.toString());
+    out.println("Agent configuration properties".toString());
-              + LocalizedStrings.AgentLauncher_DEFAULT.toLocalizedString() + "  \""
+              + "Default" + "  \""
-          LocalizedStrings.AgentLauncher_JMX_AGENT_EXISTS_BUT_WAS_NOT_SHUTDOWN.toLocalizedString());
+          "JMX Agent exists but was not shutdown.");
-      throw new IOException(LocalizedStrings.AgentLauncher_UNABLE_TO_DELETE_FILE_0
-          .toLocalizedString(startLogFile.getAbsolutePath()));
+      throw new IOException(String.format("Unable to delete file %s.",
+          startLogFile.getAbsolutePath()));
-        LocalizedStrings.AgentLauncher_STARTING_JMX_AGENT_WITH_PID_0.toLocalizedString(pid));
+        String.format("Starting JMX Agent with pid: %s", pid));
-      throw new Exception(LocalizedStrings.AgentLauncher_NO_AVAILABLE_STATUS.toLocalizedString());
+      throw new Exception("No available status.");
-      setServerError(LocalizedStrings.AgentLauncher_UNCAUGHT_EXCEPTION_IN_THREAD_0
-          .toLocalizedString(t.getName()), e);
+      setServerError(String.format("Uncaught exception in thread %s",
+          t.getName()), e);
-        String message = LocalizedStrings.AgentLauncher_SERVER_FAILED_TO_START_0
-            .toLocalizedString(e.getMessage());
+        String message = String.format("Server failed to start: %s",
+            e.getMessage());
-            LocalizedStrings.AgentLauncher_UNKNOWN_ARGUMENT_0.toLocalizedString(arg));
+            String.format("Unknown argument:  %s", arg));
-            .println(LocalizedStrings.AgentLauncher_0_HAS_STOPPED.toLocalizedString(this.basename));
+            .println(String.format("The %s has shut down.", this.basename));
-            .println(LocalizedStrings.AgentLauncher_TIMEOUT_WAITING_FOR_0_TO_SHUTDOWN_STATUS_IS_1
-                .toLocalizedString(this.basename, status));
+            .println(String.format("Timeout waiting for %s to shutdown, status is: %s",
+                this.basename, status));
-          LocalizedStrings.AgentLauncher_THE_SPECIFIED_WORKING_DIRECTORY_0_CONTAINS_NO_STATUS_FILE
-              .toLocalizedString(workingDirectory));
+          String.format("The specified working directory (%s) contains no status file",
+              workingDirectory));
-          LocalizedStrings.AgentLauncher_0_IS_NOT_RUNNING_IN_SPECIFIED_WORKING_DIRECTORY_1
-              .toLocalizedString(this.basename, this.workingDirectory),
+          String.format("%s is not running in the specified working directory: (%s).",
+              this.basename, this.workingDirectory),
-          LocalizedStrings.AgentLauncher_THE_INPUT_WORKING_DIRECTORY_DOES_NOT_EXIST_0
-              .toLocalizedString(dirValue));
+          String.format("The input working directory does not exist:  %s",
+              dirValue));
-    out.println(LocalizedStrings.AgentLauncher_STARTS_THE_GEMFIRE_JMX_AGENT.toLocalizedString());
-    out.println("\t" + LocalizedStrings.AgentLauncher_VMARG.toLocalizedString());
-    out.println("\t" + LocalizedStrings.AgentLauncher_DIR.toLocalizedString());
-    out.println("\t" + LocalizedStrings.AgentLauncher_PROP.toLocalizedString());
-    out.println("\t" + LocalizedStrings.AgentLauncher_SEE_HELP_CONFIG.toLocalizedString());
+    out.println("Starts the GemFire JMX Agent");
+    out.println("\t"
+        + "<vmarg> a VM-option passed to the agent's VM, example -J-Xmx1024M for a 1 Gb heap");
+    out.println("\t" + "<dir> Directory in which agent runs, default is the current directory");
+    out.println("\t" + "<prop> A configuration property/value passed to the agent");
+    out.println("\t" + "(see help config for more details)");
-    out.println(LocalizedStrings.AgentLauncher_STOPS_A_GEMFIRE_JMX_AGENT.toLocalizedString());
-    out.println("\t" + LocalizedStrings.AgentLauncher_DIR.toLocalizedString());
+    out.println("Stops a GemFire JMX Agent");
+    out.println("\t" + "<dir> Directory in which agent runs, default is the current directory");
-        LocalizedStrings.AgentLauncher_REPORTS_THE_STATUS_AND_THE_PROCESS_ID_OF_A_GEMFIRE_JMX_AGENT
-            .toLocalizedString());
-    out.println("\t" + LocalizedStrings.AgentLauncher_DIR.toLocalizedString());
+        "Reports the status and the process id of a GemFire JMX Agent");
+    out.println("\t" + "<dir> Directory in which agent runs, default is the current directory");
-      usage(LocalizedStrings.AgentLauncher_MISSING_COMMAND.toLocalizedString());
+      usage("Missing command");
-            usage(LocalizedStrings.AgentLauncher_NO_HELP_AVAILABLE_FOR_0.toLocalizedString(topic));
+            usage(String.format("No help available for %s", topic));
-        usage(LocalizedStrings.AgentLauncher_AGENT_HELP.toLocalizedString());
+        usage("agent help");
-        usage(LocalizedStrings.AgentLauncher_UNKNOWN_COMMAND_0.toLocalizedString(command));
+        usage(String.format("Unknown command: %s", command));
-          LocalizedStrings.AgentLauncher_ERROR_0.toLocalizedString(t.getLocalizedMessage()));
+          String.format("Error : %s", t.getLocalizedMessage()));
-            LocalizedStrings.AgentLauncher_0_PID_1_STATUS.toLocalizedString(this.baseName, pid));
+            String.format("%s pid: %d status: ", this.baseName, pid));
-            buffer.append(LocalizedStrings.AgentLauncher_SHUTDOWN.toLocalizedString());
+            buffer.append("shutdown");
-            buffer.append(LocalizedStrings.AgentLauncher_STARTING.toLocalizedString());
+            buffer.append("starting");
-            buffer.append(LocalizedStrings.AgentLauncher_RUNNING.toLocalizedString());
+            buffer.append("running");
-            buffer.append(LocalizedStrings.AgentLauncher_SHUTDOWN_PENDING.toLocalizedString());
+            buffer.append("shutdown pending");
-            buffer.append(LocalizedStrings.AgentLauncher_SHUTDOWN_PENDING_AFTER_FAILED_STARTUP
-                .toLocalizedString());
+            buffer.append("shutdown pending after failed startup");
-            buffer.append(LocalizedStrings.AgentLauncher_UNKNOWN.toLocalizedString());
+            buffer.append("unknown");
-            buffer.append("\n " + LocalizedStrings.AgentLauncher_EXCEPTION_IN_0_1
-                .toLocalizedString(this.baseName, exception.getMessage()) + " - ");
+            buffer.append("\n " + String.format("Exception in %s : %s ",
+                this.baseName, exception.getMessage()) + " - ");
-              .append(LocalizedStrings.AgentLauncher_SEE_LOG_FILE_FOR_DETAILS.toLocalizedString());
+              .append("See log file for details.");
