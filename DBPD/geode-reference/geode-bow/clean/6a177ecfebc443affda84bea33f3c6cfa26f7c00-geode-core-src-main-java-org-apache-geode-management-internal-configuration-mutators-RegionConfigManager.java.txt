GEODE-6612: add entry count for list Region and rework filtering by groups (#3465)

Co-authored-by: Owen Nichols <onichols@pivotal.io>
Co-authored-by: Jens Deppe jdeppe@pivotal.io

* Create a RuntimeCacheElement interface to hold multiple groups
* Using RegionConfig can only set/get one group
+import java.util.ArrayList;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.management.DistributedRegionMXBean;
+import org.apache.geode.management.ManagementService;
+import org.apache.geode.management.configuration.RuntimeRegionConfig;
-public class RegionConfigManager implements ConfigurationManager<RegionConfig> {
+public class RegionConfigManager
+    implements ConfigurationManager<RegionConfig> {
+  private InternalCache cache;
+  private ManagementService managementService;
-  public RegionConfigManager() {}
+  public RegionConfigManager(InternalCache cache) {
+    this.cache = cache;
+    this.managementService = ManagementService.getExistingManagementService(cache);
+  }
-  public List<RegionConfig> list(RegionConfig filter, CacheConfig existing) {
+  public List<RuntimeRegionConfig> list(RegionConfig filter, CacheConfig existing) {
+    List<RegionConfig> staticRegionConfigs;
-      return existing.getRegions();
+      staticRegionConfigs = existing.getRegions();
+    } else {
+      staticRegionConfigs =
+          existing.getRegions().stream().filter(r -> filter.getName().equals(r.getName())).collect(
+              Collectors.toList());
-    return existing.getRegions().stream().filter(r -> filter.getName().equals(r.getName())).collect(
-        Collectors.toList());
+
+    List<RuntimeRegionConfig> results = new ArrayList<>();
+    for (RegionConfig config : staticRegionConfigs) {
+      DistributedRegionMXBean distributedRegionMXBean =
+          managementService.getDistributedRegionMXBean("/" + config.getName());
+      if (distributedRegionMXBean == null) {
+        throw new IllegalStateException("Can't get the region mbean info for " + config.getName());
+      }
+      RuntimeRegionConfig runtimeConfig = new RuntimeRegionConfig(config);
+      runtimeConfig.setEntryCount(distributedRegionMXBean.getSystemRegionEntryCount());
+      results.add(runtimeConfig);
+    }
+    return results;
