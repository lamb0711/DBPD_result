Merge branch 'release/1.4.0'

-import org.apache.geode.test.junit.rules.GfshShellConnectionRule;
-import org.apache.geode.test.dunit.rules.LocatorServerStartupRule;
+import org.apache.geode.test.dunit.rules.ClusterStartupRule;
-import org.apache.geode.test.junit.rules.Server;
+import org.apache.geode.test.junit.rules.GfshCommandRule;
-  public LocatorServerStartupRule lsRule =
-      new LocatorServerStartupRule().withTempWorkingDir().withLogFile();
+  public ClusterStartupRule lsRule = new ClusterStartupRule().withTempWorkingDir().withLogFile();
-  public GfshShellConnectionRule gfshConnector = new GfshShellConnectionRule();
+  public GfshCommandRule gfshConnector = new GfshCommandRule();
-    gfshConnector.connect(server0.getJmxPort(), GfshShellConnectionRule.PortType.jmxManager);
-    gfshConnector.executeAndVerifyCommand("export logs");
+    gfshConnector.connect(server0.getJmxPort(), GfshCommandRule.PortType.jmxManager);
+    gfshConnector.executeAndAssertThat("export logs").statusIsSuccess();
-    MemberVM<Server> server0 = lsRule.startServerAsEmbededLocator(0);
-    lsRule.startServerVM(1, server0.getMember().getEmbeddedLocatorPort());
-    gfshConnector.connect(server0.getMember().getEmbeddedLocatorPort(),
-        GfshShellConnectionRule.PortType.locator);
-    gfshConnector.executeAndVerifyCommand("export logs");
+    MemberVM server0 = lsRule.startServerAsEmbededLocator(0);
+    lsRule.startServerVM(1, server0.getEmbeddedLocatorPort());
+    gfshConnector.connect(server0.getEmbeddedLocatorPort(), GfshCommandRule.PortType.locator);
+    gfshConnector.executeAndAssertThat("export logs").statusIsSuccess();
