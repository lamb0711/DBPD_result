GEODE-6380: Making some static fields immutable

Making some static fields immutable. Changes consist of
 - Marking fields final
 - Initializing during static intializer
 - Wrapping collections in umodifiable collections
 - removing unneeded static fields.

-import org.apache.geode.annotations.internal.MakeImmutable;
-  @MakeImmutable("This appears to never be modified at runtime")
-  private static volatile AbstractStringIdResourceBundle rb = null;
+  @Immutable
+  private static final AbstractStringIdResourceBundle rb;
-  @MakeImmutable("This appears to never be modified at runtime")
-  private static volatile Locale currentLocale = null;
+  @Immutable
+  private static final Locale currentLocale;
-  @MakeImmutable("This appears to never be modified at runtime")
+  @Immutable
-    setLocale(Locale.getDefault());
-  }
+    Locale locale = Locale.getDefault();
-  /*
-   * Update {@link #currentlocale} and {@link #rb} This method should be used sparingly as there is
-   * a small window for a race condition.
-   *
-   * @params locale switch to use this locale. if null then {@link Locale#getDefault()} is used.
-   */
-  public static void setLocale(Locale l) {
-    Locale locale = l;
-    if (locale == null) {
-      locale = Locale.getDefault();
-    }
-
-    if (locale != currentLocale) {
-      AbstractStringIdResourceBundle tempResourceBundle = StringId.getBundle(locale);
-      currentLocale = locale;
-      rb = tempResourceBundle;
-      // do we want message ids included in output?
-      // Only if we are using a resource bundle that has localized strings.
-      includeMsgIDs = !rb.usingRawMode();
-    }
+    AbstractStringIdResourceBundle tempResourceBundle = StringId.getBundle(locale);
+    currentLocale = locale;
+    rb = tempResourceBundle;
+    // do we want message ids included in output?
+    // Only if we are using a resource bundle that has localized strings.
+    includeMsgIDs = !rb.usingRawMode();
