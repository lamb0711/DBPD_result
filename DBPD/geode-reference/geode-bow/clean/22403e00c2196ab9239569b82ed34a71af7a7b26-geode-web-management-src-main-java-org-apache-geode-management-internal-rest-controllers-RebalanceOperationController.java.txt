GEODE-7799: Distribute rebalance status to other locators (#4692)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>

-import org.springframework.http.HttpHeaders;
-import org.apache.geode.management.internal.ClusterManagementOperationStatusResult;
-import org.apache.geode.management.internal.operation.TaggedWithOperator;
-  public ResponseEntity<ClusterManagementOperationResult<RebalanceResult>> startRebalance(
+  public ResponseEntity<ClusterManagementOperationResult<RebalanceOperation, RebalanceResult>> startRebalance(
-    ClusterManagementOperationResult<RebalanceResult> result =
-        clusterManagementService.start(new RebalanceOperationWithOperator(operation));
+    operation.setOperator(
+        Optional.ofNullable(securityService).map(SecurityService::getSubject).map(Object::toString)
+            .orElse(null));
+    ClusterManagementOperationResult<RebalanceOperation, RebalanceResult> result =
+        clusterManagementService
+            .start(operation);
-  public ClusterManagementListOperationsResult<RebalanceResult> listRebalances() {
+  public ClusterManagementListOperationsResult<RebalanceOperation, RebalanceResult> listRebalances() {
-  @ApiOperation(value = "check rebalance")
+  @ApiOperation(value = "get rebalance")
-  public ResponseEntity<ClusterManagementOperationStatusResult<RebalanceResult>> checkRebalanceStatus(
+  public ClusterManagementOperationResult<RebalanceOperation, RebalanceResult> getRebalance(
-    ClusterManagementOperationStatusResult<RebalanceResult> result =
-        clusterManagementService.checkStatus(id);
-    HttpHeaders headers = new HttpHeaders();
-    headers.add("Retry-After", "30");
-    return new ResponseEntity<>(result, headers, HttpStatus.OK);
-  }
-
-  private class RebalanceOperationWithOperator extends RebalanceOperation
-      implements TaggedWithOperator {
-    private String operator;
-
-    public RebalanceOperationWithOperator(RebalanceOperation other) {
-      super(other);
-      this.operator = Optional.ofNullable(securityService).map(SecurityService::getSubject)
-          .map(Object::toString).orElse(null);
-    }
-
-    @Override
-    public String getOperator() {
-      return operator;
-    }
+    return clusterManagementService.get(new RebalanceOperation(), id);
