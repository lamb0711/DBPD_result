GEODE-3894: Create HandshakeRequest

added connection state processors to inject protocol state specific
functionality refactored existing authentication and authorization flows to use
connection state processors added new handshake message, handler, and state
processor

Signed-off-by: Bruce Schuchardt <bschuchardt@pivotal.io>

+import org.apache.geode.internal.protocol.state.exception.ConnectionStateException;
-import org.apache.geode.internal.protocol.security.SecurityProcessor;
-import org.apache.geode.security.AuthenticationRequiredException;
-import org.apache.geode.security.NotAuthorizedException;
-    SecurityProcessor securityProcessor = messageExecutionContext.getSecurityProcessor();
-      securityProcessor.validateOperation(request, messageExecutionContext, operationContext);
+      messageExecutionContext.getConnectionStateProcessor()
+          .validateOperation(messageExecutionContext, operationContext);
-    } catch (AuthenticationRequiredException e) {
-      logger.warn(e);
-      result = Failure
-          .of(ProtobufResponseUtilities.makeErrorResponse(AUTHENTICATION_FAILED, e.getMessage()));
-    } catch (NotAuthorizedException e) {
-      logger.warn(e);
-      messageExecutionContext.getStatistics().incAuthorizationViolations();
-      result = Failure.of(ProtobufResponseUtilities.makeErrorResponse(AUTHORIZATION_FAILED,
-          "The user is not authorized to complete this operation"));
+    } catch (ConnectionStateException e) {
+      logger.warn(e.getMessage());
+      result = Failure.of(ProtobufResponseUtilities.makeErrorResponse(e));
