GEODE_6883: Creating membership api classes (#3985)

Creating a new membership API package. Starting that package out with
these classes:
* MembershipBuilder - created by moving NetMember and NetLocator factory stuff
  out of MembershipFactory and renaming MembershipFactory to MembershipBuilder
* Membership - Extracted an interface from MembershipManager
* Authenticator - Moved Authenticator to the API package
* MembershipStatistics - Extracted interface from DMStats
* MembershipListener and MessageListener - Creating these new membership
  specific interfaces by splitting up DistributedMembershipListener into two
  separate interfaces.
* MembershipConfig - Extracted interface from ServiceConfig

* Adding an archunit test for the membership API. Ensure that the API only
  depends on other API classes.

* Removing GMSMemberFactory and MemberServices
  These classes were adding another layer to creating a MembershipManager,
  but they didn't actually allow swapping in a different implementation.
  Inlining these methods into the respective NetLocatorFactory,
  NetMemberFactory, and MembershipManagerFactory.

* Removing getDM from DirectChannelListener - We want to get rid of this
  interface in favor of other membership
  specific interfaces that don't depend on core.

-import org.apache.geode.distributed.internal.membership.DistributedMembershipListener;
-import org.apache.geode.distributed.internal.membership.MemberFactory;
+import org.apache.geode.distributed.internal.membership.adapter.ServiceConfig;
+import org.apache.geode.distributed.internal.membership.gms.api.MembershipBuilder;
+import org.apache.geode.internal.InternalDataSerializer;
-      DMListener l = new DMListener(this);
-      membershipManager = MemberFactory.newMembershipManager(l, transport,
-          stats,
-          new GMSAuthenticator(system.getSecurityProperties(), system.getSecurityService(),
-              system.getSecurityLogWriter(), system.getInternalLogWriter()),
-          system.getConfig());
+      DMListener listener = new DMListener(this);
+      membershipManager = MembershipBuilder.newMembershipBuilder(this)
+          .setAuthenticator(
+              new GMSAuthenticator(system.getSecurityProperties(), system.getSecurityService(),
+                  system.getSecurityLogWriter(), system.getInternalLogWriter()))
+          .setStatistics(stats)
+          .setMessageListener(this::handleIncomingDMsg)
+          .setMembershipListener(listener)
+          .setConfig(new ServiceConfig(transport, system.getConfig()))
+          .setSerializer(InternalDataSerializer.getDSFIDSerializer())
+          .create();
-    return membershipManager.send(destinations, content, stats);
+    return membershipManager.send(destinations, content);
-  private class DMListener implements DistributedMembershipListener {
+  private class DMListener implements
+      org.apache.geode.distributed.internal.membership.gms.api.MembershipListener {
-    public void messageReceived(DistributionMessage message) {
-      handleIncomingDMsg(message);
-    }
-
-    @Override
-    public ClusterDistributionManager getDM() {
-      return dm;
-    }
-
-    @Override
