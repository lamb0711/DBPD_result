Merge pull request #3888 from Nordix/feature/GEODE-7049

GEODE-7049: Add timeout to Java client Execute::execute() methods
+import java.util.concurrent.TimeUnit;
-  protected ResultCollector executeFunction(final Function function) {
+  protected ResultCollector executeFunction(final Function function, long timeout, TimeUnit unit) {
+        final int timeoutMs = TimeoutHelper.toMillis(timeout, unit);
-          return executeOnServer(function, defaultCollector, hasResult);
+          return executeOnServer(function, defaultCollector, hasResult, timeoutMs);
-          return executeOnServer(function, rc, hasResult);
+          return executeOnServer(function, rc, hasResult, timeoutMs);
-      boolean isHA, boolean optimizeForWrite) {
+      boolean isHA, boolean optimizeForWrite, long timeout, TimeUnit unit) {
+        final int timeoutMs = TimeoutHelper.toMillis(timeout, unit);
-          return executeOnServer(functionId, defaultCollector, hasResult, isHA, optimizeForWrite);
+          return executeOnServer(functionId, defaultCollector, hasResult, isHA, optimizeForWrite,
+              timeoutMs);
-          return executeOnServer(functionId, rc, hasResult, isHA, optimizeForWrite);
+          return executeOnServer(functionId, rc, hasResult, isHA, optimizeForWrite, timeoutMs);
-      byte hasResult) throws FunctionException {
+      byte hasResult, int timeoutMs) throws FunctionException {
-          getTimeoutMs());
+          timeoutMs);
-      byte hasResult, boolean isHA, boolean optimizeForWrite) throws FunctionException {
+      byte hasResult, boolean isHA, boolean optimizeForWrite, int timeoutMs)
+      throws FunctionException {
-          optimizeForWrite, getTimeoutMs());
+          optimizeForWrite, timeoutMs);
+    return execute(functionName, getTimeoutMs(), TimeUnit.MILLISECONDS);
+  }
+
+  @Override
+  public ResultCollector execute(final String functionName, long timeout, TimeUnit unit) {
+    int timeoutInMs = (int) TimeUnit.MILLISECONDS.convert(timeout, unit);
-      return executeFunction(functionName, hasResult, isHA, optimizeForWrite);
+      return executeFunction(functionName, hasResult, isHA, optimizeForWrite, timeout, unit);
-      return executeFunction(functionObject);
+      return executeFunction(functionObject, timeout, unit);
