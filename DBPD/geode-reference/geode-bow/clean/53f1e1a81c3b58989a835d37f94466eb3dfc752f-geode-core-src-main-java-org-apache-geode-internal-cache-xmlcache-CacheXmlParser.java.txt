GEODE-7852: Adding a SocketFactory configuration for client Pools (#4830)

Adding the ability to provide a SocketFactory to a client pool for use in
creating sockets. Adding an implementation of this SocketFactory that
configures the pool to use an SNI proxy.

Adding an automated test of the SniSocketFactory that uses docker compose
to use a real SNI proxy and geode servers that are not reachable without
going through the proxy.

Co-authored-by: Bill Burcham <bburcham@pivotal.io>
+import org.apache.geode.cache.client.SocketFactory;
+    } else if (qName.equals(SOCKET_FACTORY)) {
+      } else if (qName.equals(SOCKET_FACTORY)) {
+        endSocketFactory();
+  private void endSocketFactory() {
+    Declarable d = createDeclarable();
+    if (!(d instanceof SocketFactory)) {
+      throw new CacheXmlException(String.format("A %s is not an instance of a %s",
+          d.getClass().getName(), "SocketFactory"));
+
+    }
+    Object a = stack.peek();
+    if (a instanceof PoolFactory) {
+      PoolFactory poolFactory = (PoolFactory) a;
+      poolFactory.setSocketFactory((SocketFactory) d);
+    } else {
+      throw new CacheXmlException(String.format("A %s must be defined in the context of a pool.",
+          SOCKET_FACTORY));
+    }
+
+  }
+
