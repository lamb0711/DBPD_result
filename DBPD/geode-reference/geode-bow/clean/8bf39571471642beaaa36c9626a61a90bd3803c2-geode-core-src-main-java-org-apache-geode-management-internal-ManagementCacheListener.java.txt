Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This listener is attached to the Monitoring Region to receive any addition or
- * deletion of MBEans
+ * This listener is attached to the Monitoring Region to receive any addition or deletion of MBEans
- * It updates the last refreshed time of proxy once it gets the update request
- * from the Managed Node
+ * It updates the last refreshed time of proxy once it gets the update request from the Managed Node
-public class ManagementCacheListener extends
-    CacheListenerAdapter<String, Object> {
+public class ManagementCacheListener extends CacheListenerAdapter<String, Object> {
-  
+
-  
-  private volatile boolean  readyForEvents;
+
+  private volatile boolean readyForEvents;
-      proxyHelper.createProxy(event.getDistributedMember(), objectName, event
-          .getRegion(), newObject);
+      proxyHelper.createProxy(event.getDistributedMember(), objectName, event.getRegion(),
+          newObject);
-      proxyHelper.removeProxy(event.getDistributedMember(), objectName,
-          oldObject);
+      proxyHelper.removeProxy(event.getDistributedMember(), objectName, oldObject);
-        logger.debug("Proxy Destroy failed for {} with exception {}", objectName, e.getMessage(), e);
+        logger.debug("Proxy Destroy failed for {} with exception {}", objectName, e.getMessage(),
+            e);
-  
-  void markReady(){
+
+  void markReady() {
