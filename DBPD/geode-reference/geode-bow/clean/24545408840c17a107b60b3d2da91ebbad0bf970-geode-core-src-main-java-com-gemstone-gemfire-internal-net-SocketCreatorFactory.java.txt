GEODE-420: Code review changes
Removal of SSLEnabledComponent.java and SSLEnabledComponents.java

-import com.gemstone.gemfire.distributed.SSLEnabledComponents;
+import com.gemstone.gemfire.GemFireConfigException;
+import com.gemstone.gemfire.internal.security.SecurableComponent;
-  private Map<SSLEnabledComponent, SocketCreator> socketCreators = new HashMap<>();
+  private Map<SecurableComponent, SocketCreator> socketCreators = new HashMap<>();
-      this.distributionConfig = new DistributionConfigImpl(new Properties());
+      throw new GemFireConfigException("SocketCreatorFactory requires a valid distribution config.");
-  public static SocketCreator getSSLSocketCreatorForComponent(SSLEnabledComponent sslEnabledComponent) {
+  public static SocketCreator getSSLSocketCreatorForComponent(SecurableComponent sslEnabledComponent) {
-  private SocketCreator getSSLSocketCreator(final SSLEnabledComponent sslComponent, final DistributionConfig distributionConfig, final SSLConfig sslConfig) {
+  private SocketCreator getSSLSocketCreator(final SecurableComponent sslComponent, final DistributionConfig distributionConfig, final SSLConfig sslConfig) {
-      if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), SSLEnabledComponents.ALL)) {
-        return createSSLSocketCreator(SSLEnabledComponent.ALL, sslConfig);
+      if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), SecurableComponent.ALL)) {
+        return createSSLSocketCreator(SecurableComponent.ALL, sslConfig);
-    return createSSLSocketCreator(SSLEnabledComponent.NONE, sslConfig);
+    return createSSLSocketCreator(SecurableComponent.NONE, sslConfig);
-  private SocketCreator getOrCreateSocketCreatorForSSLEnabledComponent(final SSLEnabledComponent sslEnabledComponent, final SSLConfig sslConfig) {
+  private SocketCreator getOrCreateSocketCreatorForSSLEnabledComponent(final SecurableComponent sslEnabledComponent, final SSLConfig sslConfig) {
-  private SocketCreator createSSLSocketCreator(final SSLEnabledComponent sslEnableComponent, final SSLConfig sslConfig) {
+  private SocketCreator createSSLSocketCreator(final SecurableComponent sslEnableComponent, final SSLConfig sslConfig) {
-      socketCreator = getSocketCreatorForComponent(SSLEnabledComponent.NONE);
+      socketCreator = getSocketCreatorForComponent(SecurableComponent.NONE);
-        addSocketCreatorForComponent(SSLEnabledComponent.NONE, socketCreator);
+        addSocketCreatorForComponent(SecurableComponent.NONE, socketCreator);
-  private synchronized void addSocketCreatorForComponent(SSLEnabledComponent sslEnabledComponent, SocketCreator socketCreator) {
+  private synchronized void addSocketCreatorForComponent(SecurableComponent sslEnabledComponent, SocketCreator socketCreator) {
-  private synchronized SocketCreator getSocketCreatorForComponent(SSLEnabledComponent sslEnabledComponent) {
+  private synchronized SocketCreator getSocketCreatorForComponent(SecurableComponent sslEnabledComponent) {
-      SocketCreatorFactory.instance = null;
