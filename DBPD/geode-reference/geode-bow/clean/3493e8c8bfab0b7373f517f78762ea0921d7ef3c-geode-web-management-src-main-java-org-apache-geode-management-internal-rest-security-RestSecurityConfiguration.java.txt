GEODE-6185: management rest end point returns correct status code and message

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>


+
+import java.io.IOException;
+
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.http.MediaType;
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.web.AuthenticationEntryPoint;
+
+import org.apache.geode.management.internal.api.ClusterManagementResult;
+  @Autowired
+  private ObjectMapper objectMapper;
+
-        // .antMatchers("/ping", "/docs/**", "/swagger-ui.html", "/v2/api-docs/**",
-        // "/webjars/springfox-swagger-ui/**", "/swagger-resources/**")
-        // .permitAll()
+        .antMatchers("/ping", "/docs/**", "/swagger-ui.html", "/v2/api-docs/**",
+            "/webjars/springfox-swagger-ui/**", "/swagger-resources/**")
+        .permitAll()
-      http.httpBasic();
+      http.httpBasic().authenticationEntryPoint(new AuthenticationEntryPoint() {
+        @Override
+        public void commence(HttpServletRequest request, HttpServletResponse response,
+            AuthenticationException authException)
+            throws IOException, ServletException {
+          response.addHeader("WWW-Authenticate", "Basic realm=\"GEODE\"");
+          response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
+          response.setContentType(MediaType.APPLICATION_JSON_UTF8.getType());
+          ClusterManagementResult result =
+              new ClusterManagementResult(false, authException.getMessage());
+          objectMapper.writeValue(response.getWriter(), result);
+        }
+      });
