GEODE-4858: move the utility methods out of ClusterConfigurationService (#1822)

* GEODE-4858: move the utility methods out of ClusterConfigurationService

-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
+import static org.apache.geode.cache.configuration.CacheElement.findCustomCacheElement;
+import static org.apache.geode.cache.configuration.CacheElement.findCustomRegionElement;
+import static org.apache.geode.cache.configuration.CacheElement.findRegionConfiguration;
+
-import org.apache.geode.lang.Identifiable;
-  default <T extends Identifiable<String>> T findIdentifiable(List<T> list, String id) {
-    return list.stream().filter(o -> o.getId().equals(id)).findFirst().orElse(null);
-  }
-  default <T extends Identifiable<String>> void removeFromList(List<T> list, String id) {
-    for (Iterator<T> iter = list.listIterator(); iter.hasNext();) {
-      if (iter.next().getId().equals(id)) {
-        iter.remove();
-      }
-    }
-  }
-
-  default RegionConfig findRegionConfiguration(CacheConfig cacheConfig, String regionPath) {
-    return findIdentifiable(cacheConfig.getRegion(), regionPath);
-  }
-
-  default <T extends CacheElement> List<T> findCustomCacheElements(CacheConfig cacheConfig,
-      Class<T> classT) {
-
-    List<T> newList = new ArrayList<>();
-    // streaming won't work here, because it's trying to cast element into CacheElement
-    for (Object element : cacheConfig.getCustomCacheElements()) {
-      if (classT.isInstance(element)) {
-        newList.add(classT.cast(element));
-      }
-    }
-    return newList;
-  }
-
-  default <T extends CacheElement> T findCustomCacheElement(CacheConfig cacheConfig,
-      String elementId, Class<T> classT) {
-    return findIdentifiable(findCustomCacheElements(cacheConfig, classT), elementId);
-  }
-
-  default <T extends CacheElement> List<T> findCustomRegionElements(CacheConfig cacheConfig,
-      String regionPath, Class<T> classT) {
-    List<T> newList = new ArrayList<>();
-    RegionConfig regionConfig = findRegionConfiguration(cacheConfig, regionPath);
-    if (regionConfig == null) {
-      return newList;
-    }
-
-    // streaming won't work here, because it's trying to cast element into CacheElement
-    for (Object element : regionConfig.getCustomRegionElements()) {
-      if (classT.isInstance(element)) {
-        newList.add(classT.cast(element));
-      }
-    }
-    return newList;
-  }
-
-  default <T extends CacheElement> T findCustomRegionElement(CacheConfig cacheConfig,
-      String regionPath, String elementId, Class<T> classT) {
-    return findIdentifiable(findCustomRegionElements(cacheConfig, regionPath, classT), elementId);
-  }
