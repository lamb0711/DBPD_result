Merge branch 'develop' into feature/GEODE-17-2

# Conflicts:
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/CreateAlterDestroyRegionCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/DiskStoreCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/GemfireDataCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/IndexCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/ListAndDescribeRegionDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/MiscellaneousCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/MiscellaneousCommandsExportLogsPart3DUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/ShellCommandsDUnitTest.java

+import com.gemstone.gemfire.internal.Version;
-    {
-      long oldStart = start;
-      start = DistributionStats.getStatTime();
-      stats.incReadCloseConnectionRequestTime(start - oldStart);
+    long oldStart = start;
+    boolean respondToClient = servConn.getClientVersion().compareTo(Version.GFE_90) >= 0;
+    start = DistributionStats.getStatTime();
+    stats.incReadCloseConnectionRequestTime(start - oldStart);
+
+    if (respondToClient) {
+      // newer clients will wait for a response or EOFException
+      servConn.setAsTrue(REQUIRES_RESPONSE);
+
+      if (respondToClient) {
+        writeReply(msg, servConn);
+      }
