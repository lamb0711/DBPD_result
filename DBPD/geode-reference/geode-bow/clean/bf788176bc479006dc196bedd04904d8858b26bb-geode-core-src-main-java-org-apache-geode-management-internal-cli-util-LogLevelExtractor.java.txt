GEODE-2267:  add validation to the arguments and include export stats in the command

  * use the config to determine where the logs and stats are

+import org.apache.logging.log4j.Level;
+
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Map;
+/**
+ * this will extract convert the deprecated InternalLogWriter's level into log4j level as well.
+ */
-    private String logLevel;
+    private Level logLevel;
-      this.logLevel = logLevel;
+      this.logLevel = LogLevelExtractor.getLevel(logLevel);
-    public String getLogLevel() {
+    public Level getLogLevel() {
+
+  private static Map<String, Level> LEVELS = new HashMap<>();
+  static {
+    // put all the log4j levels in the map first
+    Arrays.stream(Level.values()).forEach(level -> {
+      LEVELS.put(level.name(), level);
+    });
+    // put all the other levels geode has been using and map them to log4j levels
+    LEVELS.put("SEVERE", Level.FATAL);
+    LEVELS.put("WARNING", Level.WARN);
+    LEVELS.put("CONFIG", Level.DEBUG);
+    LEVELS.put("FINE", Level.DEBUG);
+    LEVELS.put("FINER", Level.TRACE);
+    LEVELS.put("FINEST", Level.TRACE);
+  }
+
+  public static Level getLevel(String level) {
+    Level log4jLevel = LEVELS.get(level.toUpperCase());
+    // make sure any unrecognizable log level is assigned a most specific level
+    return log4jLevel == null ? Level.OFF : log4jLevel;
+  }
