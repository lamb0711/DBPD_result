Merge branch 'release/1.8.0'

+import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.distributed.internal.InternalConfigurationPersistenceService;
-import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.cli.SingleGfshCommand;
-import org.apache.geode.management.internal.cli.result.CommandResult;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.configuration.domain.XmlEntity;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-public class DestroyGatewaySenderCommand extends InternalGfshCommand {
+public class DestroyGatewaySenderCommand extends SingleGfshCommand {
-  public Result destroyGatewaySender(
+  public ResultModel destroyGatewaySender(
-    CommandResult result = ResultBuilder.buildResult(functionResults);
-    XmlEntity xmlEntity = findXmlEntity(functionResults);
+    ResultModel resultModel = ResultModel.createMemberStatusResult(functionResults);
+    resultModel.setConfigObject(id);
+    return resultModel;
+  }
-    // no xml needs to be updated, simply return
-    if (xmlEntity == null) {
-      return result;
-    }
-
-    // has xml but unable to persist to cluster config, need to print warning message and return
-    if (onMember != null || getConfigurationPersistenceService() == null) {
-      result.setCommandPersisted(false);
-      return result;
-    }
-
-    // update cluster config
-    ((InternalConfigurationPersistenceService) getConfigurationPersistenceService())
-        .deleteXmlEntity(xmlEntity, onGroups);
-    return result;
+  @Override
+  public void updateClusterConfig(String group, CacheConfig config, Object id) {
+    config.getGatewaySenders().removeIf((sender) -> sender.getId().equals(id));
