Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.Map;
+import org.apache.geode.cache.Region;
-import org.apache.geode.redis.internal.CoderException;
-import org.apache.geode.redis.internal.RedisConstants;
+import org.apache.geode.redis.internal.RedisDataType;
-/**
- * <pre>
- *
- * Implements the Redis HGET command to returns the value associated with field in the hash stored
- * at key.
- *
- * Examples:
- *
- * redis> HSET myhash field1 "foo" (integer) 1 redis> HGET myhash field1 "foo" redis> HGET myhash
- * field2
- *
- * <pre>
- */
-    byte[] byteField = commandElems.get(FIELD_INDEX);
-    ByteArrayWrapper field = new ByteArrayWrapper(byteField);
-
-    Map<ByteArrayWrapper, ByteArrayWrapper> entry = getMap(context, key);
+    checkDataType(key, RedisDataType.REDIS_HASH, context);
+    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
-    if (entry == null) {
+    if (keyRegion == null) {
-    ByteArrayWrapper valueWrapper = entry.get(field);
-    try {
-      if (valueWrapper != null) {
-        command.setResponse(
-            Coder.getBulkStringResponse(context.getByteBufAllocator(), valueWrapper.toBytes()));
-      } else {
-        command.setResponse(Coder.getNilResponse(context.getByteBufAllocator()));
-      }
-    } catch (CoderException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          RedisConstants.SERVER_ERROR_MESSAGE));
-    }
+    byte[] byteField = commandElems.get(FIELD_INDEX);
+    ByteArrayWrapper field = new ByteArrayWrapper(byteField);
+    respondBulkStrings(command, context, keyRegion.get(field));
+
