GEODE-2788: Add official Socket timeout parameter when connecting to servers/locators

When connecting from the client to the servers/locators, if the servers/locators is not started, the connection can not be established and a Socket timeout occurs.
This timeout value is 59 seconds by default. This timeout value is too long. This timeout value can be changed by specifying the unofficial parameter "gemfire.PoolImpl.HANDSHAKE_TIMEOUT" in java system property, but I corresponded so that it can be specified by official parameters.
The official parameters are specified by the attribute of Pool.(default:59000 ms)

For example, cache.xml like this:
<pool name="MyPool" socket-connect-timeout="15000">
  <locator host="localhost" port="10334" />
</pool>

API like this:
ClientCacheFactory().addPoolLocator("localhost", 10334).setPoolSocketConnecTimeout(15000);
 or
PoolManager.createFactory().addServer("localhost", 40404).setSocketConnectTimeout(15000);

-  private static final int HANDSHAKE_TIMEOUT =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "PoolImpl.HANDSHAKE_TIMEOUT",
-          AcceptorImpl.DEFAULT_HANDSHAKE_TIMEOUT_MS);
-
+  private final int socketConnectTimeout;
+    this.socketConnectTimeout = attributes.getSocketConnectTimeout();
-        HANDSHAKE_TIMEOUT, readTimeout, proxyId, this.cancelCriterion, usedByGateway, gatewaySender,
-        pingInterval, multiuserSecureModeEnabled, this);
+        socketConnectTimeout, readTimeout, proxyId, this.cancelCriterion, usedByGateway,
+        gatewaySender, pingInterval, multiuserSecureModeEnabled, this);
+        && getSocketConnectTimeout() == p.getSocketConnectTimeout()
+  public int getSocketConnectTimeout() {
+    return this.socketConnectTimeout;
+  }
+
-          new AutoConnectionSourceImpl(locators, getServerGroup(), HANDSHAKE_TIMEOUT);
+          new AutoConnectionSourceImpl(locators, getServerGroup(), socketConnectTimeout);
+    if (getSocketConnectTimeout() != other.getSocketConnectTimeout()) {
+      throw new RuntimeException(
+          LocalizedStrings.PoolImpl_0_IS_DIFFERENT.toLocalizedString("socketConnectimeout"));
+    }
