GEODE-4364: extract RegionMapDestroy and add RegionMapDestroyTest (#1347)



-import org.apache.geode.cache.Region;
+import org.apache.geode.internal.util.concurrent.ConcurrentMapWithReusableEntries;
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
-      this.entriesMapIncompatible = false;
-      if (this.entries != null) {
-        CustomEntryConcurrentHashMap<Object, Object> other =
-            ((AbstractRegionMap) this.entries)._getMap();
-        Iterator<Map.Entry<Object, Object>> it = other.entrySetWithReusableEntries().iterator();
-        while (it.hasNext()) {
-          Map.Entry<Object, Object> me = it.next();
+      entriesMapIncompatible = false;
+      if (entries != null) {
+        ConcurrentMapWithReusableEntries<Object, Object> other =
+            entries.getCustomEntryConcurrentHashMap();
+        for (Map.Entry<Object, Object> me : other.entrySetWithReusableEntries()) {
-      this.entries = null;
-      this.readyForRecovery = false;
+      entries = null;
+      readyForRecovery = false;
-    if (this.aboutToDestroyDataStorage) {
-      this.ds.endDestroyDataStorage(region, (DiskRegion) this);
+    if (aboutToDestroyDataStorage) {
+      ds.endDestroyDataStorage(region, (DiskRegion) this);
-      this.ds.endDestroyRegion(region, (DiskRegion) this);
+      ds.endDestroyRegion(region, (DiskRegion) this);
-
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
+  @Override
