Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class GatewayReceiverMBeanBridge extends ServerBridge{
+public class GatewayReceiverMBeanBridge extends ServerBridge {
-  private GatewayReceiver rcv;  
+  private GatewayReceiver rcv;
-  
+
-  
+
-  
+
-    
-  public GatewayReceiverMBeanBridge(GatewayReceiver rcv){
+
+  public GatewayReceiverMBeanBridge(GatewayReceiver rcv) {
-  
-  protected void startServer(){
-    CacheServer server =  rcv.getServer();
+
+  protected void startServer() {
+    CacheServer server = rcv.getServer();
-  
-  protected void stopServer(){
+
+  protected void stopServer() {
-  
+
-  
-  
-  public void stopMonitor(){
+
+
+  public void stopMonitor() {
-  
+
-   return rcv.getBindAddress();
+    return rcv.getBindAddress();
- 
-  
+
+
-  
+
-  
+
-  
+
-  
-  public void start() throws Exception{
+
+  public void start() throws Exception {
-  
-  public void stop() throws Exception{
+
+  public void stop() throws Exception {
-  
-  
+
+
-  
+
-    createRequestRate = new StatsRate(StatsKey.CREAT_REQUESTS,
-        StatType.INT_TYPE, monitor);
-    updateRequestRate = new StatsRate(StatsKey.UPDATE_REQUESTS,
-        StatType.INT_TYPE, monitor);
-    destroyRequestRate = new StatsRate(StatsKey.DESTROY_REQUESTS,
-        StatType.INT_TYPE, monitor);
-    eventsReceivedRate = new StatsRate(StatsKey.EVENTS_RECEIVED,
-        StatType.INT_TYPE, monitor);
+    createRequestRate = new StatsRate(StatsKey.CREAT_REQUESTS, StatType.INT_TYPE, monitor);
+    updateRequestRate = new StatsRate(StatsKey.UPDATE_REQUESTS, StatType.INT_TYPE, monitor);
+    destroyRequestRate = new StatsRate(StatsKey.DESTROY_REQUESTS, StatType.INT_TYPE, monitor);
+    eventsReceivedRate = new StatsRate(StatsKey.EVENTS_RECEIVED, StatType.INT_TYPE, monitor);
-    AcceptorImpl acceptor = ((CacheServerImpl)rcv.getServer()).getAcceptor();
+    AcceptorImpl acceptor = ((CacheServerImpl) rcv.getServer()).getAcceptor();
-    if(serverConnections !=null && serverConnections.size() >0){
+    if (serverConnections != null && serverConnections.size() > 0) {
-      for(ServerConnection conn : serverConnections){
+      for (ServerConnection conn : serverConnections) {
-  
+
-      long processTimeInNano = getStatistic(StatsKey.BATCH_PROCESS_TIME)
-          .longValue()
+      long processTimeInNano = getStatistic(StatsKey.BATCH_PROCESS_TIME).longValue()
