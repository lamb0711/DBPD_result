GEODE-11: Use QueryProvider in LuceneFunction

LuceneFunction needs query object for execution. If the argement is missing,
fail the function execution

https://reviews.apache.org/r/38513/

+import com.gemstone.gemfire.DataSerializable;
+import com.gemstone.gemfire.cache.lucene.LuceneQueryProvider;
-import com.gemstone.gemfire.internal.Version;
-import com.gemstone.gemfire.internal.VersionedDataSerializable;
-public class LuceneFunctionContext<C extends IndexResultCollector> implements VersionedDataSerializable {
+public class LuceneFunctionContext<C extends IndexResultCollector> implements DataSerializable {
+
-  public LuceneFunctionContext(CollectorManager<C> manager) {
+  final LuceneQueryProvider queryProvider;
+
+  public LuceneFunctionContext(LuceneQueryProvider provider) {
+    this(provider, null);
+  }
+
+  public LuceneFunctionContext(LuceneQueryProvider provider, CollectorManager<C> manager) {
+    this(provider, manager, LuceneQueryFactory.DEFAULT_LIMIT);
+  }
+
+  public LuceneFunctionContext(LuceneQueryProvider provider, CollectorManager<C> manager, int limit) {
+    this.queryProvider = provider;
-    this.limit = LuceneQueryFactory.DEFAULT_LIMIT;
-  }
-  
-  public LuceneFunctionContext(int limit) {
-    this.manager = null;
-  }
-
-  @Override
-  public void toData(DataOutput out) throws IOException {
-    // TODO Auto-generated method stub
-
-  }
-
-  @Override
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    // TODO Auto-generated method stub
-
-  }
-
-  @Override
-  public Version[] getSerializationVersions() {
-    // TODO Auto-generated method stub
-    return null;
+
+  @Override
+  public void toData(DataOutput out) throws IOException {
+    // TODO Auto-generated method stub
+
+  }
+
+  @Override
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
+    // TODO Auto-generated method stub
+
+  }
+
+  public LuceneQueryProvider getQueryProvider() {
+    return queryProvider;
+  }
