GEODE-7803: provide undeprecated internal region create (#4722)

You can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.
InternalRegionFactory used to be named RegionFactoryImpl.

-import org.apache.geode.cache.AttributesFactory;
-import org.apache.geode.cache.RegionAttributes;
-    AttributesFactory factory =
-        getAttribFactoryForClientMessagesRegion(cache, ePolicy, capacity, overFlowDir, isDiskStore);
-    RegionAttributes attr = factory.create();
-
-    return createClientMessagesRegion(attr, cache, capacity, port);
+    InternalRegionFactory factory =
+        getRegionFactoryForClientMessagesRegion(cache, ePolicy, capacity, overFlowDir, isDiskStore);
+    return createClientMessagesRegion(factory, port);
-  public static AttributesFactory getAttribFactoryForClientMessagesRegion(InternalCache cache,
+  private static InternalRegionFactory getRegionFactoryForClientMessagesRegion(InternalCache cache,
-    AttributesFactory factory = new AttributesFactory();
+    InternalRegionFactory factory = cache.createInternalRegionFactory();
-  private static String createClientMessagesRegion(RegionAttributes attr, InternalCache cache,
-      int capacity, int port) {
+  private static String createClientMessagesRegion(InternalRegionFactory factory, int port) {
-      cache.createVMRegion(regionName, attr,
-          new InternalRegionArguments().setDestroyLockFlag(true).setRecreateFlag(false)
-              .setSnapshotInputStream(null).setImageTarget(null).setIsUsedForMetaRegion(true));
+      factory.setDestroyLockFlag(true).setRecreateFlag(false)
+          .setSnapshotInputStream(null).setImageTarget(null).setIsUsedForMetaRegion(true);
+      factory.create(regionName);
-    } catch (IOException e) {
-      // only if loading snapshot, not here
-      InternalGemFireError assErr = new InternalGemFireError("unexpected exception");
-      assErr.initCause(e);
-      throw assErr;
-    } catch (ClassNotFoundException e) {
-      // only if loading snapshot, not here
-      InternalGemFireError assErr = new InternalGemFireError("unexpected exception");
-      assErr.initCause(e);
-      throw assErr;
