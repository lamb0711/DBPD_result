GEODE-6588: Cleanup static analyzer warnings. (#3570)


+
-import java.util.HashSet;
-import org.apache.geode.cache.partition.PartitionRegionHelper;
-  public static RebalanceResults rebalanceRegion(Region region)
-      throws CancellationException, InterruptedException {
-    String regionName = region.getName(); // FilterByName only looks at name and not full path
-    if (!PartitionRegionHelper.isPartitionedRegion(region)) {
-      StringBuilder builder = new StringBuilder();
-      builder.append("Region ").append(regionName).append(" is not partitioned. Instead, it is ")
-          .append(region.getAttributes().getDataPolicy()).append(". It can't be rebalanced.");
-      throw new IllegalArgumentException(builder.toString());
-    }
-
-    // Rebalance the region
-    ResourceManager resourceManager = region.getCache().getResourceManager();
-    RebalanceFactory rebalanceFactory = resourceManager.createRebalanceFactory();
-    Set<String> regionsToRebalance = new HashSet<String>();
-    regionsToRebalance.add(regionName);
-    rebalanceFactory.includeRegions(regionsToRebalance);
-    RebalanceOperation rebalanceOperation = rebalanceFactory.start();
-
-    // Return the results
-    return rebalanceOperation.getResults();
-  }
-
-      CacheXmlGenerator.generate(cache, pw, true, false);
+      CacheXmlGenerator.generate(cache, pw, false);
-  public static RegionAttributes getRegionAttributes(Cache cache,
-      RegionConfiguration configuration) {
+  static RegionAttributes getRegionAttributes(Cache cache, RegionConfiguration configuration) {
-      } catch (InstantiationException e) {
-        throw new RuntimeException("Could not set a cacheWriter for the region", e);
-      } catch (IllegalAccessException e) {
-        throw new RuntimeException("Could not set a cacheWriter for the region", e);
-      } catch (ClassNotFoundException e) {
+      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {
