Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  private ExecuteCQ() {
-  }
+  private ExecuteCQ() {}
-    
+
-    boolean isDurable = (isDurableByte == null || isDurableByte[0] == 0) ? false
-        : true;
+    boolean isDurable = (isDurableByte == null || isDurableByte[0] == 0) ? false : true;
-      logger.debug("{}: Received {} request from {} CqName: {} queryString: {}", servConn.getName(), MessageType.getString(msg.getMessageType()), servConn.getSocketString(), cqName, cqQueryString);
+      logger.debug("{}: Received {} request from {} CqName: {} queryString: {}", servConn.getName(),
+          MessageType.getString(msg.getMessageType()), servConn.getSocketString(), cqName,
+          cqQueryString);
-    
+
-      qService = (DefaultQueryService)((GemFireCacheImpl)crHelper.getCache()).getLocalQueryService();
+      qService =
+          (DefaultQueryService) ((GemFireCacheImpl) crHelper.getCache()).getLocalQueryService();
-        cqRegionNames = ((DefaultQuery)query).getRegionsInQuery(null);
-        executeCQContext = authzRequest.executeCQAuthorize(cqName,
-            cqQueryString, cqRegionNames);
+        cqRegionNames = ((DefaultQuery) query).getRegionsInQuery(null);
+        executeCQContext = authzRequest.executeCQAuthorize(cqName, cqQueryString, cqRegionNames);
-        
+
-            cqRegionNames = ((DefaultQuery)query).getRegionsInQuery(null);
+            cqRegionNames = ((DefaultQuery) query).getRegionsInQuery(null);
-      cqQuery = cqServiceForExec.executeCq(cqName, cqQueryString, 
-        cqState, id, acceptor.getCacheClientNotifier(), isDurable, false, 0, null);
-    }
-    catch (CqException cqe) {
-      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, "", msg.getTransactionId(),
-          cqe, servConn);
+      cqQuery = cqServiceForExec.executeCq(cqName, cqQueryString, cqState, id,
+          acceptor.getCacheClientNotifier(), isDurable, false, 0, null);
+    } catch (CqException cqe) {
+      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, "", msg.getTransactionId(), cqe, servConn);
-    }
-    catch (Exception e) {
+    } catch (Exception e) {
-    
+
-    // Execute the query and send the result-set to client.    
+    // Execute the query and send the result-set to client.
-        cqRegionNames = ((DefaultQuery)query).getRegionsInQuery(null);
+        cqRegionNames = ((DefaultQuery) query).getRegionsInQuery(null);
-      ((DefaultQuery)query).setIsCqQuery(true);
-      successQuery = processQuery(msg, query, cqQueryString,
-          cqRegionNames, start, cqQuery, executeCQContext, servConn, sendResults);
+      ((DefaultQuery) query).setIsCqQuery(true);
+      successQuery = processQuery(msg, query, cqQueryString, cqRegionNames, start, cqQuery,
+          executeCQContext, servConn, sendResults);
-      //logger.fine("Time spent in execute with initial results :" + DistributionStats.getStatTime() + ", " +  oldstart);
+      // logger.fine("Time spent in execute with initial results :" +
+      // DistributionStats.getStatTime() + ", " + oldstart);
-        }
-        catch (Exception ex) {
+        } catch (Exception ex) {
-        }        
+        }
-      sendCqResponse(MessageType.REPLY, LocalizedStrings.ExecuteCQ_CQ_CREATED_SUCCESSFULLY.toLocalizedString(), msg
-          .getTransactionId(), null, servConn);
+      sendCqResponse(MessageType.REPLY,
+          LocalizedStrings.ExecuteCQ_CQ_CREATED_SUCCESSFULLY.toLocalizedString(),
+          msg.getTransactionId(), null, servConn);
