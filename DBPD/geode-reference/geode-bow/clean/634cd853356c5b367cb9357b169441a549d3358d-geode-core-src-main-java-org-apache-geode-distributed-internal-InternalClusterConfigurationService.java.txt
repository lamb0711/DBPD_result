GEODE-4858: pulling JaxbService out of InternalClusterConfigurationSeâ€¦ (#1754)

* GEODE-4858: pulling JaxbService out of InternalClusterConfigurationService

* add capability for JaxService to validate with another xsd
* cache element use the default namespace ""
* add capability for modules to register schema location
* use package-info to do namespace mapping

-import java.io.StringReader;
-import java.util.Collection;
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.Marshaller;
-import javax.xml.bind.Unmarshaller;
-import org.apache.geode.cache.configuration.CacheElement;
+import org.apache.geode.internal.config.JAXBService;
+  private JAXBService jaxbService;
-    bindClasses.add(CacheConfig.class);
-    initJaxbContext();
+    jaxbService = new JAXBService();
-    bindClasses.add(CacheConfig.class);
-    initJaxbContext();
+    jaxbService = new JAXBService();
-  Collection<Class> bindClasses = new ArrayList<>();
-  private Marshaller marshaller;
-  private Unmarshaller unmarshaller;
-
-  void initJaxbContext() {
-    try {
-      JAXBContext jaxbContext =
-          JAXBContext.newInstance(bindClasses.toArray(new Class[bindClasses.size()]));
-      marshaller = jaxbContext.createMarshaller();
-      // currently we are generating the xml from jabx object so we don't need schema validation.
-      // but in the future, we will need to add the various xsd for schema validation. and these
-      // xsd needs to be local (no network access)
-      marshaller.setProperty(Marshaller.JAXB_SCHEMA_LOCATION,
-          "http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd");
-      marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
-      unmarshaller = jaxbContext.createUnmarshaller();
-    } catch (Exception e) {
-      throw new RuntimeException(e.getMessage(), e);
-    }
-  }
-
-  private Marshaller getMarshaller(Class<? extends CacheElement>... additionBindClass) {
-    if (bindClasses.containsAll(Arrays.asList(additionBindClass))) {
-      return marshaller;
-    }
-
-    bindClasses.addAll(Arrays.asList(additionBindClass));
-    initJaxbContext();
-    return marshaller;
-  }
-
-  private Unmarshaller getUnmarshaller(Class<? extends CacheElement>... additionBindClass) {
-    if (bindClasses.containsAll(Arrays.asList(additionBindClass))) {
-      return unmarshaller;
-    }
-
-    bindClasses.addAll(Arrays.asList(additionBindClass));
-    initJaxbContext();
-    return unmarshaller;
-  }
-
-  public CacheConfig getCacheConfig(String group,
-      Class<? extends CacheElement>... additionalBindClass) {
+  public void registerBindClassWithSchema(Class clazz, String namespaceAndLocation) {
+    jaxbService.registerBindClassWithSchema(clazz, namespaceAndLocation);
+  }
+
+
+  @Override
+  public CacheConfig getCacheConfig(String group) {
-    return unMarshall(xmlContent, additionalBindClass);
+    return jaxbService.unMarshall(xmlContent);
-  public void updateCacheConfig(String group, UnaryOperator<CacheConfig> mutator,
-      Class<? extends CacheElement>... additionalBindClass) {
+  public void updateCacheConfig(String group, UnaryOperator<CacheConfig> mutator) {
-      CacheConfig cacheConfig = getCacheConfig(group, additionalBindClass);
+      CacheConfig cacheConfig = getCacheConfig(group);
-      configuration.setCacheXmlContent(marshall(cacheConfig, additionalBindClass));
+      configuration.setCacheXmlContent(jaxbService.marshall(cacheConfig));
-  String marshall(CacheConfig config, Class<? extends CacheElement>... additionalClass) {
-    StringWriter sw = new StringWriter();
-    try {
-      getMarshaller(additionalClass).marshal(config, sw);
-    } catch (Exception e) {
-      throw new RuntimeException(e.getMessage(), e);
-    }
-    return sw.toString();
-  }
-
-  CacheConfig unMarshall(String xml, Class<? extends CacheElement>... additionalClass) {
-    try {
-      return (CacheConfig) getUnmarshaller(additionalClass).unmarshal(new StringReader(xml));
-    } catch (Exception e) {
-      throw new RuntimeException(e.getMessage(), e);
-    }
-  }
-
