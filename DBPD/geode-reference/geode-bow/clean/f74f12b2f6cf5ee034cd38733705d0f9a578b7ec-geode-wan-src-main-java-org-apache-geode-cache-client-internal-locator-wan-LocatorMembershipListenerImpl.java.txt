GEODE-7005: Fix Race Condition in Unit Test (#3832)

- Added a warn logging message so users know that the distributor
  thread has been interrupted.
- Use awaitility instead of trying to find the daemon thread right
  away, it might have not been started and, as such, the assertions
  would fail.
-  static final String LOCATORS_DISTRIBUTOR_THREAD_NAME = "LocatorsDistributorThread";
+  private static final String LOCATORS_DISTRIBUTOR_THREAD_NAME = "LocatorsDistributorThread";
+  Thread buildLocatorsDistributorThread(DistributionLocatorId localLocatorId,
+      Map<Integer, Set<DistributionLocatorId>> remoteLocators, DistributionLocatorId joiningLocator,
+      int joiningLocatorDistributedSystemId) {
+    Runnable distributeLocatorsRunnable =
+        new DistributeLocatorsRunnable(config.getMemberTimeout(), tcpClient, localLocatorId,
+            remoteLocators, joiningLocator, joiningLocatorDistributedSystemId);
+    ThreadFactory threadFactory = new LoggingThreadFactory(LOCATORS_DISTRIBUTOR_THREAD_NAME, true);
+
+    return threadFactory.newThread(distributeLocatorsRunnable);
+  }
+
-    Runnable distributeLocatorsRunnable = new DistributeLocatorsRunnable(config.getMemberTimeout(),
-        tcpClient, localLocatorId, localCopy, locator, distributedSystemId);
-    ThreadFactory threadFactory =
-        new LoggingThreadFactory(LOCATORS_DISTRIBUTOR_THREAD_NAME, true);
-    Thread distributeLocatorsThread = threadFactory.newThread(distributeLocatorsRunnable);
-    distributeLocatorsThread.start();
+    Thread locatorsDistributorThread =
+        buildLocatorsDistributorThread(localLocatorId, localCopy, locator, distributedSystemId);
+    locatorsDistributorThread.start();
+                  logger.warn(
+                      "Locator Membership listener permanently failed to exchange locator information due to interruption.");
