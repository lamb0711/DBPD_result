Merge branch 'release/1.3.0'

+import org.apache.geode.internal.cache.tier.CommunicationMode;
-import org.apache.geode.internal.security.IntegratedSecurityService;
+import org.apache.geode.internal.security.CallbackInstantiator;
+import org.apache.geode.internal.security.Credentials;
+import org.apache.geode.internal.security.SecurityServiceFactory;
-  private static SecurityService securityService = IntegratedSecurityService.getSecurityService();
+  private final SecurityService securityService;
+    this.securityService = SecurityServiceFactory.create();
-      byte communicationMode) throws IOException, AuthenticationRequiredException {
+      CommunicationMode communicationMode, SecurityService securityService)
+      throws IOException, AuthenticationRequiredException {
+
-    // SocketChannel sc = sock.getChannel();
-    /*
-     * if (sc != null) { } else
-     */ {
+    this.securityService = securityService;
+
+    {
-          if (this.clientVersion.compareTo(Version.GFE_65) < 0
-              || communicationMode == Acceptor.GATEWAY_TO_GATEWAY) {
-            this.credentials = readCredentials(dis, dos, sys);
+          if (this.clientVersion.compareTo(Version.GFE_65) < 0 || communicationMode.isWAN()) {
+            this.credentials = readCredentials(dis, dos, sys, this.securityService);
-  public HandShake(ClientProxyMembershipID id, DistributedSystem sys) {
+  public HandShake(ClientProxyMembershipID id, DistributedSystem sys,
+      SecurityService securityService) {
+    this.securityService = securityService;
+    this.securityService = handShake.securityService;
-  private byte write(DataOutputStream dos, DataInputStream dis, byte communicationMode,
+  private byte write(DataOutputStream dos, DataInputStream dis, CommunicationMode communicationMode,
-      hdos.writeByte(communicationMode);
+      hdos.writeByte(communicationMode.getModeNumber());
-      if (isCallbackConnection || communicationMode == Acceptor.GATEWAY_TO_GATEWAY) {
-        if (isCallbackConnection && this.multiuserSecureMode
-            && communicationMode != Acceptor.GATEWAY_TO_GATEWAY) {
+      if (isCallbackConnection || communicationMode.isWAN()) {
+        if (isCallbackConnection && this.multiuserSecureMode && !communicationMode.isWAN()) {
-    if ((dhSKAlgo != null && dhSKAlgo.length() > 0) || securityService.isClientSecurityRequired()) {
+    if ((dhSKAlgo != null
+        && dhSKAlgo.length() > 0) /* || securityService.isClientSecurityRequired() */) {
-      byte communicationMode, Principal principal) throws IOException {
+      CommunicationMode communicationMode, Principal principal) throws IOException {
-    if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY && principal != null) {
+    if (communicationMode.isWAN() && principal != null) {
-    if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY) {
+    if (communicationMode.isWAN()) {
-    if (communicationMode != Acceptor.GATEWAY_TO_GATEWAY
-        && this.clientVersion.compareTo(Version.GFE_61) >= 0) {
+    if (!communicationMode.isWAN() && this.clientVersion.compareTo(Version.GFE_61) >= 0) {
-    if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY && principal != null) {
+    if (communicationMode.isWAN() && principal != null) {
-    if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY
-        && this.clientVersion.compareTo(Version.GFE_66) >= 0
+    if (communicationMode.isWAN() && this.clientVersion.compareTo(Version.GFE_66) >= 0
-    if ((communicationMode == Acceptor.GATEWAY_TO_GATEWAY)
-        && this.clientVersion.compareTo(Version.GFE_80) >= 0
+    if ((communicationMode.isWAN()) && this.clientVersion.compareTo(Version.GFE_80) >= 0
-      byte communicationMode) throws IOException, AuthenticationRequiredException,
+      CommunicationMode communicationMode) throws IOException, AuthenticationRequiredException,
-      if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY) {
+      if (communicationMode.isWAN()) {
-      if (communicationMode != Acceptor.GATEWAY_TO_GATEWAY
-          && intermediateAcceptanceCode != REPLY_AUTH_NOT_REQUIRED
+      if (!communicationMode.isWAN() && intermediateAcceptanceCode != REPLY_AUTH_NOT_REQUIRED
-      if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY
-          && !(acceptanceCode == REPLY_EXCEPTION_AUTHENTICATION_REQUIRED
-              || acceptanceCode == REPLY_EXCEPTION_AUTHENTICATION_FAILED)) {
+      if (communicationMode.isWAN() && !(acceptanceCode == REPLY_EXCEPTION_AUTHENTICATION_REQUIRED
+          || acceptanceCode == REPLY_EXCEPTION_AUTHENTICATION_FAILED)) {
-      if (communicationMode != Acceptor.GATEWAY_TO_GATEWAY
-          && currentClientVersion.compareTo(Version.GFE_61) >= 0) {
+      if (!communicationMode.isWAN() && currentClientVersion.compareTo(Version.GFE_61) >= 0) {
-      if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY
-          && Version.GFE_66.compareTo(conn.getWanSiteVersion()) <= 0
+      if (communicationMode.isWAN() && Version.GFE_66.compareTo(conn.getWanSiteVersion()) <= 0
-      if (communicationMode == Acceptor.GATEWAY_TO_GATEWAY
-          && Version.GFE_80.compareTo(conn.getWanSiteVersion()) <= 0
+      if (communicationMode.isWAN() && Version.GFE_80.compareTo(conn.getWanSiteVersion()) <= 0
-      byte mode =
-          isPrimary ? Acceptor.PRIMARY_SERVER_TO_CLIENT : Acceptor.SECONDARY_SERVER_TO_CLIENT;
+      CommunicationMode mode = isPrimary ? CommunicationMode.PrimaryServerToClient
+          : CommunicationMode.SecondaryServerToClient;
-      return SecurityService.getCredentials(securityProperties);
+      return Credentials.getCredentials(securityProperties);
-      AuthInitialize auth = SecurityService.getObjectOfType(authInitMethod, AuthInitialize.class);
+      AuthInitialize auth =
+          CallbackInstantiator.getObjectOfType(authInitMethod, AuthInitialize.class);
-      DistributedSystem system) throws GemFireSecurityException, IOException {
+      DistributedSystem system, SecurityService securityService)
+      throws GemFireSecurityException, IOException {
-      InternalLogWriter securityLogWriter, DistributedMember member)
+      InternalLogWriter securityLogWriter, DistributedMember member,
+      SecurityService securityService)
-      if (auth != null)
+      if (auth != null) {
+      }
-        (InternalLogWriter) this.system.getSecurityLogWriter(), this.id.getDistributedMember());
+        (InternalLogWriter) this.system.getSecurityLogWriter(), this.id.getDistributedMember(),
+        this.securityService);
-    Properties peerWanProps = readCredentials(dis, dos, this.system);
+    Properties peerWanProps = readCredentials(dis, dos, this.system, this.securityService);
-        (InternalLogWriter) this.system.getSecurityLogWriter(), member);
+        (InternalLogWriter) this.system.getSecurityLogWriter(), member, this.securityService);
