GEODE-6897: implement CMS rebalance operation (#3820)


-import java.util.ArrayList;
-import java.util.List;
-
-
+/**
+ * This base class provides the common attributes returned from all {@link ClusterManagementService}
+ * methods
+ */
-  // this error code should include a one-to-one mapping to the http status code returned
-  // by the controller
+  /**
+   * these status codes generally have a one-to-one mapping to the http status code returned by the
+   * REST controller
+   */
-    // configuration failed validation
+    /** configuration failed validation */
-    // user is not authenticated
+    /** user is not authenticated */
-    // user is not authorized to do this operation
+    /** user is not authorized to do this operation */
-    // entity you are trying to create already exists
+    /** entity you are trying to create already exists */
-    // entity you are trying to modify/delete is not found
+    /** entity you are trying to modify/delete is not found */
-    // operation not successful, this includes precondition is not met (either service is not
-    // running
-    // or no servers available, or the configuration encountered some error when trying to be
-    // realized
-    // on one member (configuration is not fully realized on all applicable members).
+    /**
+     * operation not successful, this includes precondition is not met (either service is not
+     * running or no servers available, or the configuration encountered some error when trying to
+     * be realized on one member (configuration is not fully realized on all applicable members).
+     */
-    // configuration is realized on members, but encountered some error when persisting the
-    // configuration.
-    // the operation is still deemed unsuccessful.
+    /**
+     * configuration is realized on members, but encountered some error when persisting the
+     * configuration. the operation is still deemed unsuccessful.
+     */
-    // async operation launched successfully
+    /** async operation launched successfully */
-    // async operation has not yet completed
+    /** async operation has not yet completed */
-    // operation is successful, configuration is realized and persisted
+    /** operation is successful, configuration is realized and persisted */
-  private List<RealizationResult> memberStatuses = new ArrayList<>();
-
-  private StatusCode statusCode = StatusCode.OK;
+  protected StatusCode statusCode = StatusCode.OK;
+  /**
+   * for internal use only
+   */
+  /**
+   * for internal use only
+   */
+  /**
+   * for internal use only
+   */
+  /**
+   * for internal use only
+   */
-    this.memberStatuses = copyFrom.memberStatuses;
-  public void addMemberStatus(String member, boolean success, String message) {
-    addMemberStatus(new RealizationResult().setMemberName(member)
-        .setSuccess(success).setMessage(message));
-  }
-
-  public void addMemberStatus(RealizationResult result) {
-    this.memberStatuses.add(result);
-    // if any member failed, status code will be error
-    if (!result.isSuccess()) {
-      statusCode = StatusCode.ERROR;
-    }
-  }
-
+  /**
+   * for internal use only
+   */
+  /**
+   * for internal use only
+   */
-  public List<RealizationResult> getMemberStatuses() {
-    return memberStatuses;
-  }
-
+  /**
+   * Returns an optional message to accompany {@link #getStatusCode()}
+   */
+  /**
+   * Returns the full path (not including http://server:port) by which this result can be referenced
+   * via REST
+   */
+  /**
+   * for internal use only
+   */
+  /**
+   * Returns true if {@link #getStatusCode()} has a non-error value
+   */
+  /**
+   * Returns the {@link StatusCode} for this request, such as ERROR or OK.
+   */
