GEODE-7475: Include remote stack trace in AsyncInvocation timeout (#4344)

* Add stack trace of remote thread as the cause of an AsyncInvocation TimeoutException
* Clean up AsyncInvocation and SerializableRunnable/SerializableCallable hierarchy of classes
* New tests for StackTrace, VM.dumpThreads, and AsyncInvocation asyncTimeoutHandler
* Deprecate and reorganize some additional dunit methods that are either not used or have a newer preferred alternative
* Trigger remote VM to dump all threads to stdout when an AsyncInvocation times out
+import org.apache.geode.test.dunit.VM;
-   * Creates a new <code>CacheSerializableRunnable</code> with the given name
+   * Creates a new {@code CacheSerializableRunnable}.
+  public CacheSerializableRunnable() {
+    // super
+  }
+
+  /**
+   * Creates a new {@code CacheSerializableRunnable} with the given name.
+   *
+   * @deprecated Please pass name as the first argument to {@link VM} invoke or asyncInvoke.
+   */
+  @Deprecated
-   * Creates a new <code>CacheSerializableRunnable</code> with the given name
-   */
-  public CacheSerializableRunnable(String name, Object[] args) {
-    super(name);
-    this.args = args;
-  }
-
-  /**
-   * <code>run2</code> in a {@link CacheSerializableRunnableException}.
+   * {@code run2} in a {@link CacheSerializableRunnableException}.
-      if (args == null) {
-        run2();
-      } else {
-        run3();
-      }
-
-    } catch (CacheException ex) {
-      String s = "While invoking \"" + this + "\"";
-      throw new CacheSerializableRunnableException(s, ex);
+      run2();
+    } catch (CacheException exception) {
+      String message = "While invoking \"" + this + "\"";
+      throw new CacheSerializableRunnableException(message, exception);
-  public void run3() throws CacheException {}
-
