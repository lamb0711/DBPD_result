Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A message used for debugging purposes.  For example if a test
- * fails it can call {@link org.apache.geode.internal.cache.PartitionedRegion#sendDumpAllPartitionedRegions()} 
- * which sends this message to all VMs that have that PartitionedRegion defined.
+ * A message used for debugging purposes. For example if a test fails it can call
+ * {@link org.apache.geode.internal.cache.PartitionedRegion#sendDumpAllPartitionedRegions()} which
+ * sends this message to all VMs that have that PartitionedRegion defined.
-public final class DumpAllPRConfigMessage extends PartitionMessage
-  {
+public final class DumpAllPRConfigMessage extends PartitionMessage {
-  
+
-  public static PartitionResponse send(Set recipients, PartitionedRegion r) 
-      {
+  public static PartitionResponse send(Set recipients, PartitionedRegion r) {
-    /*Set failures = */r.getDistributionManager().putOutgoing(m);
-//    if (failures != null && failures.size() > 0) {
-//      throw new PartitionedRegionCommunicationException("Failed sending ", m);
-//    }
+    /* Set failures = */r.getDistributionManager().putOutgoing(m);
+    // if (failures != null && failures.size() > 0) {
+    // throw new PartitionedRegionCommunicationException("Failed sending ", m);
+    // }
-  protected boolean operateOnPartitionedRegion(DistributionManager dm, 
-      PartitionedRegion pr, long startTime) throws CacheException {
+  protected boolean operateOnPartitionedRegion(DistributionManager dm, PartitionedRegion pr,
+      long startTime) throws CacheException {
