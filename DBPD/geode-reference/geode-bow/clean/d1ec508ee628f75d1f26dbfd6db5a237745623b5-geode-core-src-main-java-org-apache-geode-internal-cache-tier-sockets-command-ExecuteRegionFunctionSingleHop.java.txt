GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long start) throws IOException {
+  public void cmdExecute(Message clientMessage, ServerConnection servConn, long start)
+      throws IOException {
-      byte[] bytes = msg.getPart(0).getSerializedForm();
+      byte[] bytes = clientMessage.getPart(0).getSerializedForm();
-      regionName = msg.getPart(1).getString();
-      function = msg.getPart(2).getStringOrObject();
-      args = msg.getPart(3).getObject();
-      Part part = msg.getPart(4);
+      regionName = clientMessage.getPart(1).getString();
+      function = clientMessage.getPart(2).getStringOrObject();
+      args = clientMessage.getPart(3).getObject();
+      Part part = clientMessage.getPart(4);
-      isExecuteOnAllBuckets = msg.getPart(5).getSerializedForm()[0];
+      isExecuteOnAllBuckets = clientMessage.getPart(5).getSerializedForm()[0];
-        bucketIdsSize = msg.getPart(6).getInt();
+        bucketIdsSize = clientMessage.getPart(6).getInt();
-            buckets.add(msg.getPart(partNumber + i).getInt());
+            buckets.add(clientMessage.getPart(partNumber + i).getInt());
-        filterSize = msg.getPart(6).getInt();
+        filterSize = clientMessage.getPart(6).getInt();
-            filter.add(msg.getPart(partNumber + i).getStringOrObject());
+            filter.add(clientMessage.getPart(partNumber + i).getStringOrObject());
-      removedNodesSize = msg.getPart(partNumber).getInt();
+      removedNodesSize = clientMessage.getPart(partNumber).getInt();
-          removedNodesSet.add(msg.getPart(partNumber + i).getStringOrObject());
+          removedNodesSet.add(clientMessage.getPart(partNumber + i).getStringOrObject());
-        writeChunkedException(msg, exception, false, servConn);
+        writeChunkedException(clientMessage, exception, servConn);
-      sendError(hasResult, msg, message, servConn);
+      sendError(hasResult, clientMessage, message, servConn);
-      sendError(hasResult, msg, message, servConn);
+      sendError(hasResult, clientMessage, message, servConn);
-          sendError(hasResult, msg, message, servConn);
+          sendError(hasResult, clientMessage, message, servConn);
-            sendError(hasResult, msg, message, servConn);
+            sendError(hasResult, clientMessage, message, servConn);
-      m.setTransactionId(msg.getTransactionId());
+      m.setTransactionId(clientMessage.getTransactionId());
-      sendException(hasResult, msg, message, servConn, ioe);
+      sendException(hasResult, clientMessage, message, servConn, ioe);
-        synchronized (msg) {
+        synchronized (clientMessage) {
-        sendException(hasResult, msg, message, servConn, fe);
+        sendException(hasResult, clientMessage, message, servConn, fe);
-      sendException(hasResult, msg, message, servConn, e);
+      sendException(hasResult, clientMessage, message, servConn, e);
