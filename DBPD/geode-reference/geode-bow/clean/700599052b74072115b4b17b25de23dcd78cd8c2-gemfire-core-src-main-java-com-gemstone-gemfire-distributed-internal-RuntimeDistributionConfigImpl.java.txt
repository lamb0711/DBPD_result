GEODE-913: refactor AbstractDistributionConfig

* use annotations to annotate the config attributes and its setters/getters/checkers
* delete multiple huge if/else statements to use annoations
* delete unnecessary checks use annotated checkers.
* delete all isXXModifiers to use attribute lists to denote if the attribute is modifiable or not.

-import java.io.File;
-
+import java.io.File;
+import java.util.Arrays;
+import java.util.List;
+
-
-    checkLogLevel(value);
-    this.logLevel = value;
+    this.logLevel = (Integer)checkAttribute(LOG_LEVEL_NAME, value);
-  @Override
-  public boolean isLogLevelModifiable() {
-    return true;
-  }
-    checkStatisticSamplingEnabled(value);
-    this.statisticSamplingEnabled = value;
+    this.statisticSamplingEnabled = (Boolean)checkAttribute(STATISTIC_SAMPLING_ENABLED_NAME, value);
-  @Override
-  public boolean isStatisticSamplingEnabledModifiable() {
-    return true;
-  }
+
-    checkStatisticSampleRate(value);
+    value = (Integer)checkAttribute(STATISTIC_SAMPLE_RATE_NAME, value);
-  @Override
-  public boolean isStatisticSampleRateModifiable() {
-    return true;
-  }
+
-    checkStatisticArchiveFile(value);
+    value = (File)checkAttribute(STATISTIC_ARCHIVE_FILE_NAME, value);
-  @Override
-  public boolean isStatisticArchiveFileModifiable() {
-    return true;
-  }
+
-    checkArchiveDiskSpaceLimit(value);
-    this.archiveDiskSpaceLimit = value;
+    this.archiveDiskSpaceLimit = (Integer)checkAttribute(ARCHIVE_DISK_SPACE_LIMIT_NAME, value);
-  @Override
-  public boolean isArchiveDiskSpaceLimitModifiable() {
-    return true;
-  }
+
-    checkArchiveFileSizeLimit(value);
-    this.archiveFileSizeLimit = value;
+    this.archiveFileSizeLimit = (Integer)checkAttribute(ARCHIVE_FILE_SIZE_LIMIT_NAME, value);
-  @Override
-  public boolean isArchiveFileSizeLimitModifiable() {
-    return true;
-  }
+
-    checkLogDiskSpaceLimit(value);
-    this.logDiskSpaceLimit = value;
+    this.logDiskSpaceLimit = (Integer)checkAttribute(LOG_DISK_SPACE_LIMIT_NAME, value);
-  @Override
-  public boolean isLogDiskSpaceLimitModifiable() {
-    return true;
-  }
+
-    checkLogFileSizeLimit(value);
-    this.logFileSizeLimit = value;
+    this.logFileSizeLimit = (Integer)checkAttribute(LOG_FILE_SIZE_LIMIT_NAME, value);
-  @Override
-  public boolean isLogFileSizeLimitModifiable() {
-    return true;
-  }
+
+  public List<String> getModifiableAttributes(){
+    String[] modifiables = {HTTP_SERVICE_PORT_NAME,JMX_MANAGER_HTTP_PORT_NAME, ARCHIVE_DISK_SPACE_LIMIT_NAME,
+            ARCHIVE_FILE_SIZE_LIMIT_NAME, LOG_DISK_SPACE_LIMIT_NAME, LOG_FILE_SIZE_LIMIT_NAME,
+            LOG_LEVEL_NAME, STATISTIC_ARCHIVE_FILE_NAME, STATISTIC_SAMPLE_RATE_NAME, STATISTIC_SAMPLING_ENABLED_NAME};
+    return Arrays.asList(modifiables);
+  };
