GEODE-1570: improve rest security framework

 * use annotations for authorization
 * consolidate tests
 * delete unused classes

+import org.apache.logging.log4j.Logger;
+import org.json.JSONException;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.security.access.prepost.PreAuthorize;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+
-import org.apache.logging.log4j.Logger;
-import org.json.JSONException;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
+  @PreAuthorize("@securityService.authorize('DATA', 'READ')")
-    securityService.authorizeDataRead();
-    if(logger.isDebugEnabled()){
-      logger.debug("Listing all resources (Regions) in GemFire...");
-    }
+    logger.debug("Listing all resources (Regions) in GemFire...");
+  @PreAuthorize("@securityService.authorize('DATA', 'READ', #region)")
-    securityService.authorizeRegionRead(region);
-    if(logger.isDebugEnabled()){
-      logger.debug("Reading all Keys in Region ({})...", region);
-    }
-    
+    logger.debug("Reading all Keys in Region ({})...", region);
+
+  @PreAuthorize("@securityService.authorizeKeys('WRITE', #region, #keys)")
-    for (String key : keys)
-      securityService.authorizeRegionWrite(region, key);
-    if(logger.isDebugEnabled()){
-      logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[])keys), region);
-    }
-    
+    logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[])keys), region);
+
+  @PreAuthorize("@securityService.authorize('DATA', 'WRITE', #regon)")
-    securityService.authorizeRegionWrite(region);
-    if(logger.isDebugEnabled()){
-      logger.debug("Deleting all data in Region ({})...", region);
-    }
+    logger.debug("Deleting all data in Region ({})...", region);
+  @PreAuthorize("@securityService.authorize('CLUSTER', 'READ')")
-    securityService.authorizeClusterRead();
-    if(logger.isDebugEnabled()){
-      logger.debug("Executing function to get REST enabled gemfire nodes in the DS!");
-    }
+    logger.debug("Executing function to get REST enabled gemfire nodes in the DS!");
