GEODE-6280: Create new public module for the Management API (#3083)

- This moves the classes under `org.apache.geode.cache.configuration` package
  into a public module: `geode-managament`. The intent is that this module
  will have no dependencies to `geode-core` but will allow consumers to perform
  administration tasks (creating regions, etc.).
- `geode-core` will now depend on both `geode-management` as well as
  `geode-common` (transitively). Suggestions on how to improve these new
  dependencies are welcome.

Signed-off-by: Peter Tran <ptran@pivotal.io>
Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>
-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.Declarable;
-import org.apache.geode.internal.ClassPathLoader;
- *
- *
- *
-   * This accessor method returns a reference to the live list,
-   * not a snapshot. Therefore any modification you make to the
-   * returned list will be present inside the JAXB object.
-   * This is why there is not a <CODE>set</CODE> method for the parameter property.
+   * This accessor method returns a reference to the live list, not a snapshot. Therefore any
+   * modification you make to the returned list will be present inside the JAXB object. This is why
+   * there is not a <CODE>set</CODE> method for the parameter property.
-   * Objects of the following type(s) are allowed in the list
-   * {@link ParameterType }
-   *
-   *
+   * Objects of the following type(s) are allowed in the list {@link ParameterType }
-  public <T> T newInstance(Cache cache) {
-    try {
-      Class<T> loadedClass = (Class<T>) ClassPathLoader.getLatest().forName(className);
-      T object = loadedClass.newInstance();
-      if (object instanceof Declarable) {
-        Declarable declarable = (Declarable) object;
-        Properties initProperties = new Properties();
-        for (ParameterType parameter : parameters) {
-          initProperties.put(parameter.getName(), parameter.newInstance(cache));
-        }
-        declarable.initialize(cache, initProperties);
-      }
-      return object;
-    } catch (Exception e) {
-      throw new RuntimeException("Error instantiating class: <" + className + ">", e);
-    }
-  }
