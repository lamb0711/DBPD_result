Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * </p> 
- * RetryRule can be used globally for all tests in a test case by specifying a 
- * retryCount when instantiating it:
+ * </p>
+ * RetryRule can be used globally for all tests in a test case by specifying a retryCount when
+ * instantiating it:
+ * 
- * </p> 
+ * </p>
- * </p> 
- * RetryRule can be used locally for specific tests by annotating the test 
- * method with {@literal @}Rule and specifying a retryCount for that test:
+ * </p>
+ * RetryRule can be used locally for specific tests by annotating the test method with
+ * {@literal @}Rule and specifying a retryCount for that test:
+ * 
- * This version of RetryRule will retry a test that fails because of any kind 
- * of Throwable.
+ * This version of RetryRule will retry a test that fails because of any kind of Throwable.
-  
+
-  
+
-    protected AbstractRetryRule() {
-    }
-    protected void evaluate(final Statement base, final Description description, final int retryCount) throws Throwable {
+    protected AbstractRetryRule() {}
+
+    protected void evaluate(final Statement base, final Description description,
+        final int retryCount) throws Throwable {
-        
+
-      
+
-      
+
+
-  
+
-    
+
-    
+
-    protected void evaluatePerCase(final Statement base, final Description description) throws Throwable {
+    protected void evaluatePerCase(final Statement base, final Description description)
+        throws Throwable {
-    
-    protected LocalRetryRule() {
-    }
-    
+
+    protected LocalRetryRule() {}
+
-        @Override 
+        @Override
-    protected void evaluatePerTest(final Statement base, final Description description) throws Throwable {
+    protected void evaluatePerTest(final Statement base, final Description description)
+        throws Throwable {
