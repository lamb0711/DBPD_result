GEODE-6904: Fix hang on locator when restarting due to lock (#3777)

Only hold the locatorLock while reading the locator variable in
restartWithDS. Holding this lock while recovering cluster configuration
was causing other messages to the locator, including the StartupMessage,
to block waiting for this lock.

In addition, wait forever for StartupMessage responses.
StartupOperation had a 15 second timeout, after which it would stop
waiting. That resulted in not having correct metadata about other
members in the system. We were also not waking up the thread in
waitForReplies when a StartupResponseMessage came in with a
rejectionMessage.

Co-Authored-By: Dan Smith <dsmith@pivotal.io>

-import java.util.HashSet;
-  boolean sendStartupMessage(Set recipients, long timeout, Set<InetAddress> interfaces,
+  boolean sendStartupMessage(Set recipients, Set<InetAddress> interfaces,
-      logger.debug("Waiting {} milliseconds to receive startup responses", timeout);
+      logger.debug("Waiting to receive startup responses");
-    boolean timedOut = true;
-    Set<InternalDistributedMember> unresponsive = null;
-    try {
-      timedOut = !proc.waitForReplies(timeout);
-    } finally {
-      if (timedOut) {
-        unresponsive = new HashSet<>();
-        proc.collectUnresponsiveMembers(unresponsive);
-        if (!unresponsive.isEmpty()) {
-          for (Iterator it = unresponsive.iterator(); it.hasNext();) {
-            InternalDistributedMember um = (InternalDistributedMember) it.next();
-            if (!dm.getViewMembers().contains(um)) {
-              // Member slipped away and we didn't notice.
-              it.remove();
-              dm.handleManagerDeparture(um, true,
-                  "disappeared during startup handshake");
-            } else if (dm.isCurrentMember(um)) {
-              // the member must have connected back to us and now we just
-              // need to get its startup response
-              logger.warn(
-                  "Membership: received connection from <{}> but received no startup response after {} ms.",
-                  new Object[] {um, timeout});
-            }
-          } // for
-
-          // Tell the dm who we expect to be waiting for...
-          this.dm.setUnfinishedStartups(unresponsive);
-
-          // Re-examine list now that we have elided the startup problems....
-          if (!unresponsive.isEmpty()) {
-            logger.warn(
-                "Membership: startup timed out after waiting {} milliseconds for responses from {}",
-                new Object[] {Long.valueOf(timeout), unresponsive});
-          }
-        } // !isEmpty
-      } // timedOut
-    } // finally
+    proc.waitForReplies();
