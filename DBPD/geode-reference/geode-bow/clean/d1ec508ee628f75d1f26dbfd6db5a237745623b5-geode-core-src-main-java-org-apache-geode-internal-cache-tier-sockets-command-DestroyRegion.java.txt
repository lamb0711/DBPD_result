GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-    CacheServerStats stats = servConn.getCacheServerStats();
-    servConn.setAsTrue(REQUIRES_RESPONSE);
+    CacheServerStats stats = serverConnection.getCacheServerStats();
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
-    regionNamePart = msg.getPart(0);
-    eventPart = msg.getPart(1);
+    regionNamePart = clientMessage.getPart(0);
+    eventPart = clientMessage.getPart(1);
-    if (msg.getNumberOfParts() > 2) {
-      callbackArgPart = msg.getPart(2);
+    if (clientMessage.getNumberOfParts() > 2) {
+      callbackArgPart = clientMessage.getPart(2);
-              servConn.getName(), MessageType.getString(msg.getMessageType()),
-              servConn.getProxyID());
+              serverConnection.getName(), MessageType.getString(clientMessage.getMessageType()),
+              serverConnection.getProxyID());
-        servConn.setFlagProcessMessagesAsFalse();
-        servConn.setClientDisconnectedException(se);
+        serverConnection.setFlagProcessMessagesAsFalse();
+        serverConnection.setClientDisconnectedException(se);
-        writeException(msg, e, false, servConn);
-        servConn.setAsTrue(RESPONDED);
+        writeException(clientMessage, e, false, serverConnection);
+        serverConnection.setAsTrue(RESPONDED);
-          servConn.getName(), msg.getPayloadLength(), servConn.getSocketString(), regionName);
+          serverConnection.getName(), clientMessage.getPayloadLength(),
+          serverConnection.getSocketString(), regionName);
-          servConn.getName()));
+          serverConnection.getName()));
-      writeErrorResponse(msg, MessageType.DESTROY_REGION_DATA_ERROR, errMessage.toString(),
-          servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeErrorResponse(clientMessage, MessageType.DESTROY_REGION_DATA_ERROR,
+          errMessage.toString(), serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-    LocalRegion region = (LocalRegion) servConn.getCache().getRegion(regionName);
+    LocalRegion region = (LocalRegion) serverConnection.getCache().getRegion(regionName);
-      writeRegionDestroyedEx(msg, regionName, reason, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeRegionDestroyedEx(clientMessage, regionName, reason, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-    EventID eventId = new EventID(servConn.getEventMemberIDByteArray(), threadId, sequenceId);
+    EventID eventId =
+        new EventID(serverConnection.getEventMemberIDByteArray(), threadId, sequenceId);
-      AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-      region.basicBridgeDestroyRegion(callbackArg, servConn.getProxyID(),
+      region.basicBridgeDestroyRegion(callbackArg, serverConnection.getProxyID(),
-      if (servConn.getCachedRegionHelper().getCache().getCancelCriterion()
+      if (serverConnection.getCachedRegionHelper().getCache().getCancelCriterion()
-              servConn.getName(), MessageType.getString(msg.getMessageType()),
-              servConn.getProxyID());
+              serverConnection.getName(), MessageType.getString(clientMessage.getMessageType()),
+              serverConnection.getProxyID());
-        servConn.setFlagProcessMessagesAsFalse();
-        servConn.setClientDisconnectedException(e);
+        serverConnection.setFlagProcessMessagesAsFalse();
+        serverConnection.setClientDisconnectedException(e);
-        writeException(msg, e, false, servConn);
-        servConn.setAsTrue(RESPONDED);
+        writeException(clientMessage, e, false, serverConnection);
+        serverConnection.setAsTrue(RESPONDED);
-      checkForInterrupt(servConn, e);
+      checkForInterrupt(serverConnection, e);
-      writeException(msg, e, false, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeException(clientMessage, e, false, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-    writeReply(msg, servConn);
-    servConn.setAsTrue(RESPONDED);
+    writeReply(clientMessage, serverConnection);
+    serverConnection.setAsTrue(RESPONDED);
-      logger.debug("{}: Sent destroy region response for region {}", servConn.getName(),
+      logger.debug("{}: Sent destroy region response for region {}", serverConnection.getName(),
