GEODE-6322: refactor createRegionCommand to use RegionConfig only (#3156)

* get rid of usages of xxxArgs and RegionConfigFactory
* the resulting cluster configuration xml for region does not have excessive default values

-    regionAttributesType.setEntryIdleTime(getExpirationAttributes(entryExpirationIdleTime,
+    regionAttributesType.setEntryIdleTime(ExpirationAttributesType.generate(entryExpirationIdleTime,
-    regionAttributesType.setEntryTimeToLive(getExpirationAttributes(entryExpirationTTL,
+    regionAttributesType.setEntryTimeToLive(ExpirationAttributesType.generate(entryExpirationTTL,
-        getExpirationAttributes(regionExpirationIdleTime, regionExpirationIdleTimeAction, null));
+        ExpirationAttributesType.generate(regionExpirationIdleTime, regionExpirationIdleTimeAction,
+            null));
-        getExpirationAttributes(regionExpirationTTL, regionExpirationTTLAction, null));
+        ExpirationAttributesType.generate(regionExpirationTTL, regionExpirationTTLAction, null));
-        combine(existingAttributes.getEntryIdleTime(), deltaAttributes.getEntryIdleTime()));
+        ExpirationAttributesType.combine(existingAttributes.getEntryIdleTime(),
+            deltaAttributes.getEntryIdleTime()));
-        combine(existingAttributes.getEntryTimeToLive(), deltaAttributes.getEntryTimeToLive()));
+        ExpirationAttributesType.combine(existingAttributes.getEntryTimeToLive(),
+            deltaAttributes.getEntryTimeToLive()));
-        combine(existingAttributes.getRegionIdleTime(), deltaAttributes.getRegionIdleTime()));
+        ExpirationAttributesType.combine(existingAttributes.getRegionIdleTime(),
+            deltaAttributes.getRegionIdleTime()));
-        combine(existingAttributes.getRegionTimeToLive(), deltaAttributes.getRegionTimeToLive()));
+        ExpirationAttributesType.combine(existingAttributes.getRegionTimeToLive(),
+            deltaAttributes.getRegionTimeToLive()));
-
-  ExpirationAttributesType getExpirationAttributes(Integer timeout,
-      ExpirationAction action, ClassName expiry) {
-    if (timeout == null && action == null && expiry == null) {
-      return null;
-    }
-    if (expiry != null) {
-      return new ExpirationAttributesType(timeout, action,
-          expiry.getClassName(), expiry.getInitProperties());
-    } else {
-      return new ExpirationAttributesType(timeout, action, null, null);
-    }
-  }
-
-  // this is a helper method to combine the existing with the delta ExpirationAttributesType
-  ExpirationAttributesType combine(ExpirationAttributesType existing,
-      ExpirationAttributesType delta) {
-    if (delta == null) {
-      return existing;
-    }
-
-    if (existing == null) {
-      existing = new ExpirationAttributesType();
-      existing.setAction(ExpirationAction.INVALIDATE.toXmlString());
-      existing.setTimeout("0");
-    }
-
-    if (delta.getTimeout() != null) {
-      existing.setTimeout(delta.getTimeout());
-    }
-    if (delta.getAction() != null) {
-      existing.setAction(delta.getAction());
-    }
-    if (delta.getCustomExpiry() != null) {
-      if (delta.getCustomExpiry().equals(DeclarableType.EMPTY)) {
-        existing.setCustomExpiry(null);
-      } else {
-        existing.setCustomExpiry(delta.getCustomExpiry());
-      }
-    }
-    return existing;
-  }
-
