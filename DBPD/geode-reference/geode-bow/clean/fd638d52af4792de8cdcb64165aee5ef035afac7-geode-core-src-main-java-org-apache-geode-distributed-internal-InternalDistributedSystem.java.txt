Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

-import org.apache.geode.internal.security.SecurityService;
-import org.apache.geode.internal.security.SecurityServiceFactory;
-import org.apache.geode.security.PostProcessor;
-import org.apache.geode.security.SecurityManager;
-  private volatile SecurityService securityService;
-
-    return newInstance(config, SecurityConfig.get());
-  }
-
-  public static InternalDistributedSystem newInstance(Properties config,
-      SecurityConfig securityConfig) {
-    if (securityConfig == null) {
-      return newInstance(config, null, null);
-    } else {
-      return newInstance(config, securityConfig.getSecurityManager(),
-          securityConfig.getPostProcessor());
-    }
-  }
-
-  public static InternalDistributedSystem newInstance(Properties config,
-      SecurityManager securityManager, PostProcessor postProcessor) {
-      newSystem.initialize(securityManager, postProcessor);
+      newSystem.initialize();
-        // bug44365 - logwriters accumulate, causing mem leak
-        LoggingThreadGroup.cleanUpThreadGroups();
+        LoggingThreadGroup.cleanUpThreadGroups(); // bug44365 - logwriters accumulate, causing mem
+                                                  // leak
+
-   *
+   * 
+
+    // if (DistributionConfigImpl.multicastTest) {
+    // this.logger.warning("Use of multicast has been forced");
+    // }
+    // if (DistributionConfigImpl.forceDisableTcp) {
+    // this.logger.warning("Use of UDP has been forced");
+    // }
+    // if
+    // (org.apache.geode.distributed.internal.membership.jgroup.JGroupMembershipManager.multicastTest)
+    // {
+    // this.logger.warning("Use of multicast for all distributed cache operations has been forced");
+    // }
+
-  public SecurityService getSecurityService() {
-    return this.securityService;
-  }
-
-  private void initialize(SecurityManager securityManager, PostProcessor postProcessor) {
+  private void initialize() {
-
-    this.securityService =
-        SecurityServiceFactory.create(this.config, securityManager, postProcessor);
-
