Merge branch 'release/1.0.0-incubating.M3'

-import java.lang.reflect.Method;
-
-import com.gemstone.gemfire.StatisticDescriptor;
-import com.gemstone.gemfire.Statistics;
-import com.gemstone.gemfire.StatisticsFactory;
-import com.gemstone.gemfire.StatisticsType;
-import com.gemstone.gemfire.StatisticsTypeFactory;
+import com.gemstone.gemfire.*;
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
+import java.lang.reflect.Method;
+
- * @since 9.0
+ * @since Geode 1.0
-  public static final String STAY_CONNECTED_ON_OUTOFOFFHEAPMEMORY_PROPERTY = "gemfire.offheap.stayConnectedOnOutOfOffHeapMemory";
+  public static final String STAY_CONNECTED_ON_OUTOFOFFHEAPMEMORY_PROPERTY = DistributionConfig.GEMFIRE_PREFIX + "offheap.stayConnectedOnOutOfOffHeapMemory";
+  private static final int defragmentationsInProgressId;
+    final String defragmentationsInProgressDesc = "Current number of defragment operations currently in progress.";
+    final String defragmentationsInProgress = "defragmentationsInProgress";
-            f.createIntCounter(defragmentations, defragmentationDesc, "defragmentations"),
+            f.createIntCounter(defragmentations, defragmentationDesc, "operations"),
+            f.createIntGauge(defragmentationsInProgress, defragmentationsInProgressDesc, "operations"),
+    defragmentationsInProgressId = statsType.nameToId(defragmentationsInProgress);
-    final String offHeapSlabConfig = System.getProperty("gemfire.OFF_HEAP_SLAB_SIZE");
+    final String offHeapSlabConfig = System.getProperty(DistributionConfig.GEMFIRE_PREFIX + "OFF_HEAP_SLAB_SIZE");
+  public int getDefragmentationsInProgress() {
+    return this.stats.getInt(defragmentationsInProgressId);
+  }
+  
+  @Override
+    this.stats.incInt(defragmentationsInProgressId, 1);
+    this.stats.incInt(defragmentationsInProgressId, -1);
+    setDefragmentationsInProgress(oldStats.getDefragmentationsInProgress());
+  
+  private void setDefragmentationsInProgress(int value) {
+    this.stats.setInt(defragmentationsInProgressId, value);
+  }
