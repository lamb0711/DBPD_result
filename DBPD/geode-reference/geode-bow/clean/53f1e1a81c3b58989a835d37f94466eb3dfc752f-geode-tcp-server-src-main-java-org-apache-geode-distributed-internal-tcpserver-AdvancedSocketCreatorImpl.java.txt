GEODE-7852: Adding a SocketFactory configuration for client Pools (#4830)

Adding the ability to provide a SocketFactory to a client pool for use in
creating sockets. Adding an implementation of this SocketFactory that
configures the pool to use an SNI proxy.

Adding an automated test of the SniSocketFactory that uses docker compose
to use a real SNI proxy and geode servers that are not reachable without
going through the proxy.

Co-authored-by: Bill Burcham <bburcham@pivotal.io>
+      ConnectionWatcher optionalWatcher, boolean allowClientSocketFactory, int socketBufferSize,
+      boolean useSSL) throws IOException {
+    return connect(addr, timeout, optionalWatcher, allowClientSocketFactory, socketBufferSize,
+        useSSL, Socket::new);
+  }
+
+  @Override
+  public Socket connect(HostAndPort addr, int timeout,
-      int socketBufferSize, boolean useSSL) throws IOException {
+      int socketBufferSize, boolean useSSL, TcpSocketFactory socketFactory)
+      throws IOException {
-      socket = new Socket();
+      socket = socketFactory.createSocket();
-        InetAddress serverAddress = inetSocketAddress.getAddress();
-        if (serverAddress == null) {
-          serverAddress = InetAddress.getByName(inetSocketAddress.getHostString());
-        }
-        socket.connect(
-            new InetSocketAddress(serverAddress, inetSocketAddress.getPort()),
-            Math.max(timeout, 0));
+        socket.connect(inetSocketAddress, Math.max(timeout, 0));
