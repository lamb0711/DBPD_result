GEODE-5649 getAll() does not trigger client metadata refresh when primary bucket not known

If the primary for a bucket was not known when creating one-hop tasks we
were not scheduling a metadata refresh.

These changes initiate a refresh but allow the current operation to
continue as a non-single-hop operation.

This closes #2402

+import org.apache.geode.internal.cache.LocalRegion;
+  /** for testing - the current number of metadata refresh tasks running or queued to run */
+  /** for testing - the total number of scheduled metadata refreshes */
+  private long totalRefreshTaskCount = 0;
+
-        groupByServerToBuckets(prAdvisor, bucketToKeysMap.keySet(), primaryMembersNeeded);
+        groupByServerToBuckets(prAdvisor, bucketToKeysMap.keySet(), primaryMembersNeeded, region);
+      if (logger.isDebugEnabled()) {
+        logger.debug("One or more primary bucket locations are unknown "
+            + "- scheduling metadata refresh for region {}", region.getFullPath());
+      }
+      scheduleGetPRMetaData((LocalRegion) region, false);
-    return groupByServerToBuckets(prAdvisor, allBucketIds, primaryOnly);
+    return groupByServerToBuckets(prAdvisor, allBucketIds, primaryOnly, region);
-      ClientPartitionAdvisor prAdvisor, Set<Integer> bucketSet, boolean primaryOnly) {
+      ClientPartitionAdvisor prAdvisor, Set<Integer> bucketSet, boolean primaryOnly,
+      Region region) {
+          logger.info("Primary for bucket {} is not known for Region {}.  "
+              + "Known server locations: {}", bucketId, region.getFullPath(),
+              prAdvisor.adviseServerLocations(bucketId));
+        totalRefreshTaskCount++;
+        totalRefreshTaskCount++;
-  public int getRefreshTaskCount() {
+  /** For Testing */
+  public int getRefreshTaskCount_TEST_ONLY() {
+
+  /** for testing */
+  public long getTotalRefreshTaskCount_TEST_ONLY() {
+    synchronized (fetchTaskCountLock) {
+      return totalRefreshTaskCount;
+    }
+  }
