GEODE-1372 added unit test and some more fixes.

+import java.util.Arrays;
-  
+  private byte[] coordinatorPublicKey;  
+
+  private int requestId;
-      boolean networkPartitionDectionEnabled, boolean usePreferredCoordinators) {
+      boolean networkPartitionDectionEnabled, boolean usePreferredCoordinators, byte[] pk) {
+    this.coordinatorPublicKey = pk;
-      InternalDistributedMember senderId) {
+      InternalDistributedMember senderId, byte[] pk, int requestId) {
+    this.coordinatorPublicKey = pk;
+    this.requestId = requestId;
+  public byte[] getCoordinatorPublicKey() {
+    return coordinatorPublicKey;
+  }
+  
+  public int getRequestId() {
+    return requestId;
+  }
+  
+    InternalDataSerializer.writeByteArray(coordinatorPublicKey, out);
-    isShortForm = in.readBoolean();
+    coordinatorPublicKey = InternalDataSerializer.readByteArray(in);
+    isShortForm = in.readBoolean();    
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj)
+      return true;
+    if (obj == null)
+      return false;
+    if (getClass() != obj.getClass())
+      return false;
+    FindCoordinatorResponse other = (FindCoordinatorResponse) obj;
+    if (coordinator == null) {
+      if (other.coordinator != null)
+        return false;
+    } else if (!coordinator.equals(other.coordinator))
+      return false;
+    if (!Arrays.equals(coordinatorPublicKey, other.coordinatorPublicKey))
+      return false;
+    if (fromView != other.fromView)
+      return false;
+    if (isShortForm != other.isShortForm)
+      return false;
+    if (networkPartitionDetectionEnabled != other.networkPartitionDetectionEnabled)
+      return false;
+    if (registrants == null) {
+      if (other.registrants != null)
+        return false;
+    } else if (!registrants.equals(other.registrants))
+      return false;
+    //as we are not sending requestId as part of FinDCoordinator resposne
+    /*if (requestId != other.requestId)
+      return false;*/
+    if (senderId == null) {
+      if (other.senderId != null)
+        return false;
+    } else if (!senderId.equals(other.senderId))
+      return false;
+    if (usePreferredCoordinators != other.usePreferredCoordinators)
+      return false;
+    if (view == null) {
+      if (other.view != null)
+        return false;
+    } else if (!view.equals(other.view))
+      return false;
+    return true;
+  }
+
+  
