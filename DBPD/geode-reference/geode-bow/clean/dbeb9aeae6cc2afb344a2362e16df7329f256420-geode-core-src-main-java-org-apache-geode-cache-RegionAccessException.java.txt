Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Indicates that an attempt to access the region has failed.  Failure is
- * due to one or more missing {@link MembershipAttributes#getRequiredRoles 
- * required roles}.  Region operations may throw this exception when the 
- * {@link MembershipAttributes} have been configured with {@link 
- * LossAction#NO_ACCESS} or {@link LossAction#LIMITED_ACCESS}.
+ * Indicates that an attempt to access the region has failed. Failure is due to one or more missing
+ * {@link MembershipAttributes#getRequiredRoles required roles}. Region operations may throw this
+ * exception when the {@link MembershipAttributes} have been configured with
+ * {@link LossAction#NO_ACCESS} or {@link LossAction#LIMITED_ACCESS}.
-private static final long serialVersionUID = 3142958723089038406L;
-  
-  /** 
-   * Set of missing required roles causing access to the region to fail.
-   * missingRoles is transient to avoid NotSerializableException. See {@link
-   * #writeObject} and {@link #readObject} for custom serialization.
+  private static final long serialVersionUID = 3142958723089038406L;
+
+  /**
+   * Set of missing required roles causing access to the region to fail. missingRoles is transient
+   * to avoid NotSerializableException. See {@link #writeObject} and {@link #readObject} for custom
+   * serialization.
-  
-  /** 
+
+  /**
+   * 
-  
-  /** 
-   * Constructs a <code>RegionAccessException</code> with a message and
-   * a cause.
+
+  /**
+   * Constructs a <code>RegionAccessException</code> with a message and a cause.
+   * 
-  public RegionAccessException(String s,  String regionFullPath, Set missingRoles, Throwable ex) {
+  public RegionAccessException(String s, String regionFullPath, Set missingRoles, Throwable ex) {
-  
-  /** 
+
+  /**
+   * 
-  
-  /** 
-   * Override writeObject which is used in serialization. Customize 
-   * serialization of this exception to avoid escape of InternalRole
-   * which is not Serializable. 
+
+  /**
+   * Override writeObject which is used in serialization. Customize serialization of this exception
+   * to avoid escape of InternalRole which is not Serializable.
-  private void writeObject(java.io.ObjectOutputStream out)
-  throws IOException {
+  private void writeObject(java.io.ObjectOutputStream out) throws IOException {
-      String name = ((Role)iter.next()).getName();
+      String name = ((Role) iter.next()).getName();
-  
-  /** 
-   * Override readObject which is used in serialization. Customize 
-   * serialization of this exception to avoid escape of InternalRole
-   * which is not Serializable. 
+
+  /**
+   * Override readObject which is used in serialization. Customize serialization of this exception
+   * to avoid escape of InternalRole which is not Serializable.
-  private void readObject(java.io.ObjectInputStream in)
-  throws IOException, ClassNotFoundException {
+  private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException {
-    Set roleNames = (Set)in.readObject();
+    Set roleNames = (Set) in.readObject();
-     
+
