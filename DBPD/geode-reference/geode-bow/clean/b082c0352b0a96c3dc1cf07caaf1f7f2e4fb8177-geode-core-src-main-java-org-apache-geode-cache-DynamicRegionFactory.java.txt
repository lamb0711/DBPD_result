GEODE-7803: provide undeprecated internal region create (#4722)

You can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.
InternalRegionFactory used to be named RegionFactoryImpl.

-import java.io.IOException;
-import org.apache.geode.InternalGemFireError;
+import org.apache.geode.internal.cache.InternalRegionFactory;
-        InternalRegionArguments ira = new InternalRegionArguments().setDestroyLockFlag(true)
-            .setInternalRegion(true).setSnapshotInputStream(null).setImageTarget(null);
-        AttributesFactory af = new AttributesFactory();
+        InternalRegionFactory factory = cache.createInternalRegionFactory();
+        factory.setDestroyLockFlag(true).setInternalRegion(true).setSnapshotInputStream(null)
+            .setImageTarget(null);
-          af.setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);
-          af.setDiskWriteAttributes(new DiskWriteAttributesFactory().create());
+          factory.setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);
+          factory.setDiskWriteAttributes(new DiskWriteAttributesFactory().create());
-            af.setDiskDirs(new File[] {this.config.getDiskDir()});
+            factory.setDiskDirs(new File[] {this.config.getDiskDir()});
-          af.setScope(Scope.LOCAL);
-          af.setDataPolicy(DataPolicy.NORMAL);
-          af.setStatisticsEnabled(true);
+          factory.setScope(Scope.LOCAL);
+          factory.setDataPolicy(DataPolicy.NORMAL);
+          factory.setStatisticsEnabled(true);
-              af.setPoolName(cpName);
+              factory.setPoolName(cpName);
-          ira.setInternalMetaRegion(new LocalMetaRegion(af.create(), ira));
+          factory.setInternalMetaRegion(new LocalMetaRegion(factory.getCreateAttributes(),
+              factory.getInternalRegionArguments()));
-          af.setScope(Scope.DISTRIBUTED_ACK);
-          af.setValueConstraint(DynamicRegionAttributes.class);
+          factory.setScope(Scope.DISTRIBUTED_ACK);
+          factory.setValueConstraint(DynamicRegionAttributes.class);
-            af.setDataPolicy(DataPolicy.REPLICATE);
+            factory.setDataPolicy(DataPolicy.REPLICATE);
-              af.addGatewaySenderId(gs.getId());
+              factory.addGatewaySenderId(gs.getId());
-          ira.setInternalMetaRegion(new DistributedMetaRegion(af.create())); // bug fix 35432
+          factory.setInternalMetaRegion(new DistributedMetaRegion(factory.getCreateAttributes()));
-
-        try {
-          this.dynamicRegionList =
-              theCache.createVMRegion(DYNAMIC_REGION_LIST_NAME, af.create(), ira);
-        } catch (IOException e) {
-          // only if loading snapshot, not here
-          throw new InternalGemFireError(
-              "unexpected exception", e);
-        } catch (ClassNotFoundException e) {
-          // only if loading snapshot, not here
-          throw new InternalGemFireError(
-              "unexpected exception", e);
-        }
+        this.dynamicRegionList = factory.create(DYNAMIC_REGION_LIST_NAME);
