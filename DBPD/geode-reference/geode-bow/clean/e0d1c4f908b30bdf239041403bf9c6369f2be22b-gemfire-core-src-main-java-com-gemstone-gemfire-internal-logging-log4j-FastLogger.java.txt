Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

-import org.apache.logging.log4j.Level;
- * Overrides is enabled checks for log levels below INFO to avoid performance
- * penalties when the log level is INFO or above.
+ * Overrides is-enabled checks for log levels below INFO to avoid performance
+ * penalties when the log level is INFO or above. If delegating is true
+ * then it will always delegate to ExtendedLoggerWrapper for is-enabled checks.
-  private static volatile boolean debugAvailable = true;
+  private static volatile boolean delegating = true;
-  public static void setDebugAvailable(final boolean newValue) {
-    StatusLogger.getLogger().debug("Setting debugAvailable to {}", newValue);
-    debugAvailable = newValue;
+  public static void setDelegating(final boolean newValue) {
+    StatusLogger.getLogger().debug("Setting delegating to {}", newValue);
+    delegating = newValue;
-  /**
-   * Checks whether this Logger is enabled for the {@link Level#DEBUG DEBUG} Level.
-   *
-   * @return boolean - {@code true} if this Logger is enabled for level DEBUG, {@code false} otherwise.
-   */
-    return debugAvailable && super.isDebugEnabled();
+    return delegating && super.isDebugEnabled();
-  /**
-   * Checks whether this Logger is enabled for the {@link Level#DEBUG DEBUG} Level.
-   *
-   * @param marker The marker data specific to this log statement.
-   * @return boolean - {@code true} if this Logger is enabled for level DEBUG, {@code false} otherwise.
-   */
-    return debugAvailable && super.isDebugEnabled(marker);
+    return delegating && super.isDebugEnabled(marker);
-  /**
-   * Checks whether this Logger is enabled for the {@link Level#TRACE TRACE} level.
-   *
-   * @return boolean - {@code true} if this Logger is enabled for level TRACE, {@code false} otherwise.
-   */
-    return debugAvailable && super.isTraceEnabled();
+    return delegating && super.isTraceEnabled();
-  /**
-   * Checks whether this Logger is enabled for the {@link Level#TRACE TRACE} level.
-   *
-   * @param marker The marker data specific to this log statement.
-   * @return boolean - {@code true} if this Logger is enabled for level TRACE, {@code false} otherwise.
-   */
-    return debugAvailable && super.isTraceEnabled(marker);
+    return delegating && super.isTraceEnabled(marker);
-  public boolean isDebugAvailable() {
-    return debugAvailable;
+  public boolean isDelegating() {
+    return delegating;
-  public Logger getExtendedLogger() {
+  public ExtendedLogger getExtendedLogger() {
