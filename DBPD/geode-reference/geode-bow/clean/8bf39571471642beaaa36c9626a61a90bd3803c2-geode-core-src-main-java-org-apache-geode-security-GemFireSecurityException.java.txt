Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The base class for all org.apache.geode.security package related
- * exceptions.
+ * The base class for all org.apache.geode.security package related exceptions.
-   * @param  message the detail message (which is saved for later retrieval
-   *         by the {@link #getMessage()} method).  (A <tt>null</tt> value
-   *         is permitted.)
+   * @param message the detail message (which is saved for later retrieval by the
+   *        {@link #getMessage()} method). (A <tt>null</tt> value is permitted.)
-   * <p>Note that the detail message associated with {@code cause} <i>is</i>
-   * automatically used as this exception's detail message.
+   * <p>
+   * Note that the detail message associated with {@code cause} <i>is</i> automatically used as this
+   * exception's detail message.
-   * @param  cause the cause (which is saved for later retrieval by the
-   *         {@link #getCause()} method).  (A <tt>null</tt> value is
-   *         permitted, and indicates that the cause is nonexistent or
-   *         unknown.)
+   * @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method).
+   *        (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or
+   *        unknown.)
-   * <p>If {@code message} is null, then the detail message associated with
-   * {@code cause} <i>is</i> automatically used as this exception's detail
-   * message.
+   * <p>
+   * If {@code message} is null, then the detail message associated with {@code cause} <i>is</i>
+   * automatically used as this exception's detail message.
-   * @param  message the detail message (which is saved for later retrieval
-   *         by the {@link #getMessage()} method).  (A <tt>null</tt> value
-   *         is permitted.)
-   * @param  cause the cause (which is saved for later retrieval by the
-   *         {@link #getCause()} method).  (A <tt>null</tt> value is
-   *         permitted, and indicates that the cause is nonexistent or
-   *         unknown.)
+   * @param message the detail message (which is saved for later retrieval by the
+   *        {@link #getMessage()} method). (A <tt>null</tt> value is permitted.)
+   * @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method).
+   *        (A <tt>null</tt> value is permitted, and indicates that the cause is nonexistent or
+   *        unknown.)
-   * @param  object the {@code object} to test for implementing {@code Serializable}.
+   * @param object the {@code object} to test for implementing {@code Serializable}.
-   * Returns {@link NamingException#getResolvedObj()} if the {@code cause}
-   * is a {@code NamingException}. Returns <tt>null</tt> for any other type
-   * of {@code cause}.
+   * Returns {@link NamingException#getResolvedObj()} if the {@code cause} is a
+   * {@code NamingException}. Returns <tt>null</tt> for any other type of {@code cause}.
-   * @return {@code NamingException#getResolvedObj()} if the {@code cause}
-   *         is a {@code NamingException}.
+   * @return {@code NamingException#getResolvedObj()} if the {@code cause} is a
+   *         {@code NamingException}.
