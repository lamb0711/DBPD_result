GEODE-1373: resolve the shiro subject in JMX AccessControlContext first

+import java.security.AccessController;
+import java.util.Set;
+import com.gemstone.gemfire.internal.security.shiro.ShiroPrincipal;
-  public static void login(String username, String password){
-    if(!isShiroConfigured())
-      return;
+  /**
+   *
+   * @param username
+   * @param password
+   * @return null if security is not enabled, otherwise return a shiro subject
+   */
+  public static Subject login(String username, String password){
+    if(!isSecured())
+      return null;
+
+    return currentUser;
+  }
+
+  /**
+   * It first looks the shiro subject in AccessControlContext since JMX will use multiple threads to process operations from the same client.
+   * then it looks into Shiro's thead context.
+   *
+   * @return the shiro subject, null if security is not enabled
+   */
+  public static Subject getSubject(){
+    if(!isSecured())
+      return null;
+
+    Subject currentUser = null;
+
+    // First try get the principal out of AccessControlContext instead of Shiro's Thread context
+    // since threads can be shared between JMX clients.
+    javax.security.auth.Subject jmxSubject =
+      javax.security.auth.Subject.getSubject(AccessController.getContext());
+
+    if(jmxSubject!=null){
+      Set<ShiroPrincipal> principals = jmxSubject.getPrincipals(ShiroPrincipal.class);
+      if(principals.size()>0){
+        ShiroPrincipal principal = principals.iterator().next();
+        currentUser = principal.getSubject();
+        ThreadContext.bind(currentUser);
+        return currentUser;
+      }
+    }
+
+    // in other cases like admin rest call or pulse authorization
+    currentUser = SecurityUtils.getSubject();
+
+    if(currentUser==null || currentUser.getPrincipal()==null){
+      throw new GemFireSecurityException("Error: Anonymous User");
+    }
+
+    return currentUser;
-    if(!isShiroConfigured())
+    Subject currentUser = getSubject();
+    if(currentUser==null)
-    Subject currentUser = SecurityUtils.getSubject();
-    if(!isShiroConfigured())
+    Subject currentUser = getSubject();
+    if(currentUser==null)
-    Subject currentUser = SecurityUtils.getSubject();
-    if(!isShiroConfigured())
+    Subject currentUser = getSubject();
+    if(currentUser==null)
-
-    Subject currentUser = SecurityUtils.getSubject();
-  private static boolean isShiroConfigured(){
+  private static boolean isSecured(){
