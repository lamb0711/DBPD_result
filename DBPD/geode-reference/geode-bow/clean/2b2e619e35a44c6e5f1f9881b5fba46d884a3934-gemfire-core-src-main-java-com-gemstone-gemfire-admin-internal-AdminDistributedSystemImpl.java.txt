GEODE-657: Prevent two backups from happening at the same time

Adding a dlock to prevent two backups from occuring at the same time.

+    BackupStatus status = null;
+    if (BackupDataStoreHelper.obtainLock(dm)) {
+    try {
-    FlushToDiskRequest.send(dm, recipients);
-    Map<DistributedMember, Set<PersistentID>> existingDataStores 
-        = PrepareBackupRequest.send(dm, recipients);
-    Map<DistributedMember, Set<PersistentID>> successfulMembers 
-        = FinishBackupRequest.send(dm, recipients, targetDir, baselineDir);
+    BackupDataStoreResult result = BackupDataStoreHelper.backupAllMembers(
+        dm, recipients, targetDir, baselineDir);
-    for(Set<PersistentID> onlineMembersIds : successfulMembers.values()) {
+    for(Set<PersistentID> onlineMembersIds : result.getSuccessfulMembers().values()) {
-    existingDataStores.keySet().removeAll(successfulMembers.keySet());
-    for(Set<PersistentID> lostMembersIds : existingDataStores.values()) {
+    result.getExistingDataStores().keySet().removeAll(result.getSuccessfulMembers().keySet());
+    for(Set<PersistentID> lostMembersIds : result.getExistingDataStores().values()) {
-    return new BackupStatusImpl(successfulMembers, missingMembers);
+    status = new BackupStatusImpl(result.getSuccessfulMembers(), missingMembers);
+    } finally {
+      BackupDataStoreHelper.releaseLock(dm);
+    }
+    } else {
+      throw new AdminException(LocalizedStrings.DistributedSystem_BACKUP_ALREADY_IN_PROGRESS.toLocalizedString());
+    }
+    return status;
