Geode-7498: show index type (#4434)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Dale Emery <demery@pivotal.io>
co-authored-by: Jinmei Liao jliao@pivotal.io

* use enum instead of boolean to indicate index type

+
+
+import org.apache.geode.management.configuration.IndexType;
+
+  /**
+   * based on the cache.xsd, index type can have only two values "range", "hash"
+   * <attribute name="type" default="range">
+   * <simpleType>
+   * <restriction base="{http://www.w3.org/2001/XMLSchema}string">
+   * <enumeration value="range"/>
+   * <enumeration value="hash"/>
+   * </restriction>
+   * </simpleType>
+   * </attribute>
+   */
+  private static final String HASH = "hash";
+  private static final String RANGE = "range";
+
-  protected Index fromNonNullXmlObject(RegionConfig.Index xmlObject) {
+  protected Index fromNonNullXmlObject(RegionConfig.Index regionConfigIndex) {
-    index.setName(xmlObject.getName());
-    index.setExpression(xmlObject.getExpression());
-    index.setRegionPath(xmlObject.getFromClause());
-    index.setKeyIndex(xmlObject.isKeyIndex());
+    index.setName(regionConfigIndex.getName());
+    index.setExpression(regionConfigIndex.getExpression());
+    index.setRegionPath(regionConfigIndex.getFromClause());
+
+    Boolean keyIndex = regionConfigIndex.isKeyIndex();
+    if (keyIndex != null && keyIndex) {
+      index.setIndexType(IndexType.KEY);
+    } else if (HASH.equalsIgnoreCase(regionConfigIndex.getType())) {
+      index.setIndexType(IndexType.HASH_LEGACY);
+    }
+    // functional is the default type
+    else {
+      index.setIndexType(IndexType.FUNCTIONAL);
+    }
+
-  protected RegionConfig.Index fromNonNullConfigObject(Index configObject) {
-    RegionConfig.Index index = new RegionConfig.Index();
-    index.setName(configObject.getName());
-    index.setFromClause(configObject.getRegionPath());
-    index.setExpression(configObject.getExpression());
-    index.setKeyIndex(configObject.getKeyIndex());
-    return index;
+  protected RegionConfig.Index fromNonNullConfigObject(Index index) {
+    RegionConfig.Index regionConfigIndex = new RegionConfig.Index();
+    regionConfigIndex.setName(index.getName());
+    regionConfigIndex.setFromClause(index.getRegionPath());
+    regionConfigIndex.setExpression(index.getExpression());
+
+    if (index.getIndexType() == IndexType.KEY) {
+      regionConfigIndex.setKeyIndex(true);
+    } else if (index.getIndexType() == IndexType.HASH_LEGACY) {
+      regionConfigIndex.setType(HASH);
+    } else {
+      regionConfigIndex.setType(RANGE);
+    }
+
+    return regionConfigIndex;
