Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * this rule can help you start up locator/server in different VMs
- * you can multiple locators/servers combination
+ * this rule can help you start up locator/server in different VMs you can multiple locators/servers
+ * combination
-    Invoke.invokeInEveryVM("Stop each VM", ()->stop());
+    Invoke.invokeInEveryVM("Stop each VM", () -> stop());
-   * Returns getHost(0).getVM(0) as a locator instance with the given
-   * configuration properties.
+   * Returns getHost(0).getVM(0) as a locator instance with the given configuration properties.
+   * 
+   * 
+   * 
-    properties.setProperty(NAME, "server-"+index);
+    properties.setProperty(NAME, "server-" + index);
+   * 
-  public VM getNodeVM(int index){
+  public VM getNodeVM(int index) {
-  public int getPort(int index){
+  public int getPort(int index) {
-  public final void stop(){
-    if(serverStarter!=null) {
+  public final void stop() {
+    if (serverStarter != null) {
-    if(locatorStarter!=null){
+    if (locatorStarter != null) {
