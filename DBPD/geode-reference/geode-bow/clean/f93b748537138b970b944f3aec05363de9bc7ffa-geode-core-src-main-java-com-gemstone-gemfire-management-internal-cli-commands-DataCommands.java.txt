GEODE-1712: introduce SecurityService interface for mocking

* create Unit Tests for client commands that use security

+import java.security.Security;
-import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
+import com.gemstone.gemfire.internal.security.IntegratedSecurityService;
+import com.gemstone.gemfire.internal.security.SecurityService;
+  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+
-    GeodeSecurityUtil.authorizeRegionRead(regionName);
+    this.securityService.authorizeRegionRead(regionName);
-    GeodeSecurityUtil.authorizeRegionWrite(regionName);
+    this.securityService.authorizeRegionWrite(regionName);
-    GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+    this.securityService.authorizeRegionWrite(regionPath);
-    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
-    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
-      GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+      this.securityService.authorizeRegionWrite(regionPath);
-      GeodeSecurityUtil.authorizeRegionWrite(regionPath, key);
+      this.securityService.authorizeRegionWrite(regionPath, key);
