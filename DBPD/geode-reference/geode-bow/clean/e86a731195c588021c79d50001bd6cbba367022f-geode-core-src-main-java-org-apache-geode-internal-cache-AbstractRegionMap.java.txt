Merge branch 'release/1.3.0'

+      CachedDeserializable newValueCd = (CachedDeserializable) newValue;
-        actualVal =
-            BlobHelper.deserializeBlob(((CachedDeserializable) newValue).getSerializedValue(),
-                sender.getVersionObject(), null);
-        newValue = CachedDeserializableFactory.create(actualVal,
-            ((CachedDeserializable) newValue).getValueSizeInBytes());
+        actualVal = BlobHelper.deserializeBlob(newValueCd.getSerializedValue(),
+            sender.getVersionObject(), null);
+        newValue = new VMCachedDeserializable(actualVal, newValueCd.getSizeInBytes());
-                newValue = CachedDeserializableFactory.create(original,
-                    ((CachedDeserializable) newValue).getSizeInBytes());
+                newValue = new VMCachedDeserializable(original, newValueCd.getSizeInBytes());
+                        } else {
+                          Assert.assertTrue(event.getVersionTag() == null);
+                          Assert.assertTrue(newRe == tombstone);
+                          event.setVersionTag(getVersionTagFromStamp(tombstone.getVersionStamp()));
+  private VersionTag getVersionTagFromStamp(VersionStamp stamp) {
+    VersionTag tag = VersionTag.create(stamp.getMemberID());
+    tag.setEntryVersion(stamp.getEntryVersion());
+    tag.setRegionVersion(stamp.getRegionVersion());
+    tag.setVersionTimeStamp(stamp.getVersionTimeStamp());
+    tag.setDistributedSystemId(stamp.getDistributedSystemId());
+    return tag;
+  }
+
-            {
+            // Fix GEODE-3204, do not invalidate the region entry if it is a removed token
+            if (!Token.isRemoved(re.getValueAsToken())) {
-              boolean wasTombstone = re.isTombstone();
-                  if (wasTombstone) {
-                    owner.unscheduleTombstone(re);
-                  }
+              return;
-        } else { // re == null
+        }
+        { // re == null or region entry is removed token.
-    final boolean isClientTXOriginator = owner.cache.isClient() && !hasRemoteOrigin;
+    final boolean isClientTXOriginator = owner.getCache().isClient() && !hasRemoteOrigin;
