GEODE-7803: provide undeprecated internal region create (#4722)

You can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.
InternalRegionFactory used to be named RegionFactoryImpl.

-import java.io.IOException;
-import org.apache.geode.cache.AttributesFactory;
-import org.apache.geode.cache.RegionAttributes;
-import org.apache.geode.internal.cache.InternalRegionArguments;
+import org.apache.geode.internal.cache.InternalRegionFactory;
-    @SuppressWarnings("deprecation")
-    AttributesFactory<Object, Object> factory = getAttributesFactory();
+    InternalRegionFactory factory = cache.createInternalRegionFactory();
-    RegionAttributes<Object, Object> regionAttrs = factory.create();
-
-    InternalRegionArguments internalArgs = new InternalRegionArguments();
-    internalArgs.setIsUsedForMetaRegion(true);
-    internalArgs.setMetaRegionWithTransactions(true);
+    factory.setIsUsedForMetaRegion(true);
+    factory.setMetaRegionWithTransactions(true);
-      idToType = cache.createVMRegion(REGION_NAME, regionAttrs, internalArgs);
-    } catch (IOException | TimeoutException | RegionExistsException | ClassNotFoundException ex) {
+      idToType = factory.create(REGION_NAME);
+    } catch (TimeoutException | RegionExistsException ex) {
-  @SuppressWarnings("deprecation")
-  protected AttributesFactory<Object, Object> getAttributesFactory() {
-    return new AttributesFactory<>();
-  }
-
-  @VisibleForTesting
