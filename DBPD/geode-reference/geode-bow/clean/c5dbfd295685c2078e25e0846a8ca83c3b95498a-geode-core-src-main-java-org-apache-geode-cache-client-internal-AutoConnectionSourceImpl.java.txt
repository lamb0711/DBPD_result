Revert "GEODE-2804 Update InetSocketAddress, when there is IOException."

This reverts commit e216fde1e4b1613bde22112cfb1544be022c3aac.

We are reverting previous fix. As that fix caused some more issues.
Currently we cache InetAddress in Geode. Solution was to cache hostname
but in certain cases that's not enough.

+    InetAddress addr = locator.getAddress();
+    int port = locator.getPort();
-      returnObj = tcpClient.requestToServer(locator, request, connectionTimeout, true);
+      returnObj = tcpClient.requestToServer(addr, port, request, connectionTimeout);
-      updateLocatorInLocatorList(locator);
-  /**
-   * If connecting to the locator fails with an IOException, this may be because the locator's IP
-   * has changed. Add the locator back to the list of locators using host address rather than IP.
-   * This will cause another DNS lookup, hopefully finding the locator.
-   * 
-   * @param locator
-   */
-  protected void updateLocatorInLocatorList(InetSocketAddress locator) {
-    if (locator.getHostName() != null) {
-      LocatorList locatorList = locators.get();
-      List<InetSocketAddress> newLocatorsList = new ArrayList<>();
-
-      for (InetSocketAddress tloc : locatorList.getLocators()) {
-        if (tloc.equals(locator)) {
-          /**
-           * This call doesn't throw UnknownHostException;
-           */
-          InetSocketAddress changeLoc =
-              new InetSocketAddress(locator.getHostName(), locator.getPort());
-          newLocatorsList.add(changeLoc);
-          logger.info("updateLocatorInLocatorList changing locator list: loc form: " + locator
-              + " ,loc to: " + changeLoc);
-        } else {
-          newLocatorsList.add(tloc);
-        }
-      }
-
-      logger.info("updateLocatorInLocatorList locator list from:" + locatorList.getLocators()
-          + " to: " + newLocatorsList);
-
-      LocatorList newLocatorList = new LocatorList(newLocatorsList);
-      locators.set(newLocatorList);
-    }
-  }
-
-  protected List<InetSocketAddress> getCurrentLocators() {
-    return locators.get().locators;
-  }
-
-    addbadLocators(newLocators, badLocators);
+    newLocators.addAll(badLocators);
-
-  /**
-   * This method will add bad locator only when locator with hostname and port is not already in
-   * list.
-   */
-  protected void addbadLocators(List<InetSocketAddress> newLocators,
-      Set<InetSocketAddress> badLocators) {
-    for (InetSocketAddress badLoc : badLocators) {
-      boolean addIt = true;
-      for (InetSocketAddress goodloc : newLocators) {
-        boolean isSameHost = badLoc.getHostName().equals(goodloc.getHostName());
-        if (isSameHost) {
-          boolean isSamePort = badLoc.getPort() == goodloc.getPort();
-          if (isSamePort) {
-            // ip has been changed so don't add this in current list
-            addIt = false;
-            break;
-          }
-        }
-      }
-      if (addIt) {
-        newLocators.add(badLoc);
-      }
-    }
-  }
-
