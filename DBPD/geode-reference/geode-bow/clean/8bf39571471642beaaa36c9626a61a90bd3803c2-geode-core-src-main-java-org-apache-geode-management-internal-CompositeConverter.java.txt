Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  CompositeConverter(Class targetClass, CompositeType compositeType,
-      String[] itemNames, Method[] getters) throws OpenDataException {
+  CompositeConverter(Class targetClass, CompositeType compositeType, String[] itemNames,
+      Method[] getters) throws OpenDataException {
-        throw openDataException("Error calling getter for " + itemNames[i]
-            + ": " + e, e);
+        throw openDataException("Error calling getter for " + itemNames[i] + ": " + e, e);
-   * Determine how to convert back from the CompositeData into the original Java
-   * type. For a type that is not reconstructible, this method will fail every
-   * time, and will throw the right exception.
+   * Determine how to convert back from the CompositeData into the original Java type. For a type
+   * that is not reconstructible, this method will fail every time, and will throw the right
+   * exception.
-  private synchronized void makeCompositeBuilder()
-      throws InvalidObjectException {
+  private synchronized void makeCompositeBuilder() throws InvalidObjectException {
-    CompositeBuilder[][] builders = {
-        { new CompositeBuilderViaFrom(targetClass, itemNames), },
-        { new CompositeBuilderViaConstructor(targetClass, itemNames), },
-        {
-            new CompositeBuilderCheckGetters(targetClass, itemNames,
-                getterConverters),
+    CompositeBuilder[][] builders = {{new CompositeBuilderViaFrom(targetClass, itemNames),},
+        {new CompositeBuilderViaConstructor(targetClass, itemNames),},
+        {new CompositeBuilderCheckGetters(targetClass, itemNames, getterConverters),
-            new CompositeBuilderViaProxy(targetClass, itemNames), }, };
+            new CompositeBuilderViaProxy(targetClass, itemNames),},};
-      String msg = "Do not know how to make a " + targetClass.getName()
-          + " from a CompositeData: " + whyNots;
+      String msg = "Do not know how to make a " + targetClass.getName() + " from a CompositeData: "
+          + whyNots;
-  public final Object fromNonNullOpenValue(Object value)
-      throws InvalidObjectException {
+  public final Object fromNonNullOpenValue(Object value) throws InvalidObjectException {
-    return compositeBuilder.fromCompositeData((CompositeData) value, itemNames,
-        getterConverters);
+    return compositeBuilder.fromCompositeData((CompositeData) value, itemNames, getterConverters);
