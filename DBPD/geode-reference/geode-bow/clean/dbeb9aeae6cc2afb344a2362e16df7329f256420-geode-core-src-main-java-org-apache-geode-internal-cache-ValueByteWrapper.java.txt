Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A wrapper class for the operation which has been recovered to be recovered by
- * the htree
+ * A wrapper class for the operation which has been recovered to be recovered by the htree
-class ValueByteWrapper
-{
+class ValueByteWrapper {
-   * @param value
-   *          byte[] bytes read from oplog
-   * @param userBit
-   *          A byte describing the nature of the value i.e whether it is:
-   *          serialized , invalid or empty byte array etc.
+   * @param value byte[] bytes read from oplog
+   * @param userBit A byte describing the nature of the value i.e whether it is: serialized ,
+   *        invalid or empty byte array etc.
-   * boolean isSerialized() { return isSerialized; }
+   *         boolean isSerialized() { return isSerialized; }
-  byte[] getValueBytes()
-  {
+  byte[] getValueBytes() {
-   * Getter method for the userBit assosciated with the value read from Oplog
-   * during initialization
+   * Getter method for the userBit assosciated with the value read from Oplog during initialization
-  byte getUserBit()
-  {
+  byte getUserBit() {
