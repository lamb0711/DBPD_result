Merge pull request #3717 from Bill/feature/initial-cleanup-GEODE-6883

GEODE-6883: Removing some dependencies on core from membership
-import org.apache.geode.LogWriter;
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.distributed.internal.DistributionConfig;
-import org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticator;
-import org.apache.geode.internal.security.SecurityService;
-import org.apache.geode.internal.security.SecurityServiceFactory;
-import org.apache.geode.security.AuthenticationFailedException;
-  private final SecurityService securityService;
-  private final InternalDistributedSystem distributedSystem;
-  private LogWriter logWriter;
-  private LogWriter securityLogWriter;
-
-    this.securityService = SecurityServiceFactory.create();
-    this.distributedSystem = null;
-      InternalDistributedSystem system,
-      RemoteTransportConfig transport, DMStats stats, SecurityService securityService) {
-    this.distributedSystem = system;
+      RemoteTransportConfig transport, DMStats stats,
+      final Authenticator authenticator, DistributionConfig config) {
-    this.config = new ServiceConfig(transport, system.getConfig());
+    this.config = new ServiceConfig(transport, config);
-    this.logWriter = distributedSystem.getLogWriter();
-    this.securityLogWriter = distributedSystem.getSecurityLogWriter();
-    this.securityService = securityService;
-    this.auth = new GMSAuthenticator();
+    this.auth = authenticator;
-    this.auth.init(this);
-      logger.debug("starting Authenticator");
-      this.auth.start();
-        this.auth.stop();
-    this.auth.started();
-    this.auth.setLocalAddress(address);
-          this.auth.emergencyClose();
+          this.messenger.emergencyClose();
-            this.messenger.emergencyClose();
+            this.manager.emergencyClose();
-            try {
-              this.manager.emergencyClose();
-            } finally {
-              this.cancelCriterion.cancel("Membership services are shut down");
-              this.stopped = true;
-            }
+            this.cancelCriterion.cancel("Membership services are shut down");
+            this.stopped = true;
-            this.auth.stop();
+            this.messenger.stop();
-              this.messenger.stop();
+              this.manager.stop();
-              try {
-                this.manager.stop();
-              } finally {
-                this.cancelCriterion.cancel("Membership services are shut down");
-                this.stopped = true;
-              }
+              this.cancelCriterion.cancel("Membership services are shut down");
+              this.stopped = true;
-  public InternalDistributedSystem getDistributedSystem() {
-    return this.distributedSystem;
-  }
-
-  public SecurityService getSecurityService() {
-    return this.securityService;
-  }
-
-  /**
-   * returns the DistributedSystem's log writer
-   *
-   * @deprecated use a log4j-based LogService
-   */
-  public LogWriter getLogWriter() {
-    return this.logWriter;
-  }
-
-  /**
-   * returns the DistributedSystem's security log writer
-   *
-   * @deprecated use a log4j-based LogService
-   */
-  public LogWriter getSecurityLogWriter() {
-    return this.securityLogWriter;
-  }
-
-    try {
-      this.auth.installView(v);
-    } catch (AuthenticationFailedException e) {
-      return;
-    }
-          this.auth.memberSuspected(initiator, suspect, reason);
+          this.messenger.memberSuspected(initiator, suspect, reason);
-          try {
-            this.messenger.memberSuspected(initiator, suspect, reason);
-          } finally {
-            this.manager.memberSuspected(initiator, suspect, reason);
-          }
+          this.manager.memberSuspected(initiator, suspect, reason);
