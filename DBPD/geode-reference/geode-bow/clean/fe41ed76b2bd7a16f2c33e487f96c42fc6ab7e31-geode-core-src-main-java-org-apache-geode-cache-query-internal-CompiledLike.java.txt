GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.logging.LogService;
-/**
- * 
- *
- */
-  final static int WILDCARD_PERCENT = 0;
+  private static final Logger logger = LogService.getLogger();
-  final static int WILDCARD_UNDERSCORE = 1;
+  private static final int WILDCARD_PERCENT = 0;
-  private Object wildcardTypeKey = new Object();
+  private static final int WILDCARD_UNDERSCORE = 1;
-  private Object wildcardPositionKey = new Object();
+  private final Object wildcardTypeKey = new Object();
-  private Object patternLengthKey = new Object();
+  private final Object wildcardPositionKey = new Object();
-  final static String LOWEST_STRING = "";
+  private final Object patternLengthKey = new Object();
-  final static char BOUNDARY_CHAR = (char) 255;
+  static final String LOWEST_STRING = "";
-  final static char UNDERSCORE = '_';
+  private static final char BOUNDARY_CHAR = (char) 255;
-  final static char PERCENT = '%';
+  private static final char UNDERSCORE = '_';
-  final static char BACKSLASH = '\\';
+  private static final char PERCENT = '%';
+
+  private static final char BACKSLASH = '\\';
-  private Object isIndexEvaluatedKey = new Object();
+  private final Object isIndexEvaluatedKey = new Object();
-  // private final CompiledBindArgument bindArg;
-  public CompiledLike(CompiledValue var, CompiledValue pattern) {
+  CompiledLike(CompiledValue var, CompiledValue pattern) {
-   * @param context
-   * @throws AmbiguousNameException
-   * @throws TypeMismatchException
-   * @throws NameResolutionException
-   * @throws FunctionDomainException
-   * @throws QueryInvocationTargetException
-      if (GemFireCacheImpl.getInstance().getLogger().fineEnabled()) {
-        GemFireCacheImpl.getInstance().getLogger()
-            .fine("IndexManager TestHook is set in getExpandedOperandsWithIndexInfoSetIfAny.");
+      if (logger.isDebugEnabled()) {
+        logger.debug("IndexManager TestHook is set in getExpandedOperandsWithIndexInfoSetIfAny.");
-
-   * @param var
-   * @param pattern
-    StringBuffer sb = new StringBuffer();
+    StringBuilder sb = new StringBuilder();
-   * @param buffer
-  /*
-   * @Override public Object evaluate(ExecutionContext context) throws FunctionDomainException,
-   * TypeMismatchException, NameResolutionException, QueryInvocationTargetException { CompiledValue
-   * iterEvaluator = (CompiledValue)context.cacheGet(this.bindArg); if(iterEvaluator == null) {
-   * String pattern = (String)this.bindArg.evaluate(context); CompiledComparison[] cvs =
-   * getRangeIfSargable(this.var, pattern);
-   * 
-   * for (CompiledComparison cp : cvs) { cp.computeDependencies(context);
-   * 
-   * } if(cvs.length ==2 ) { iterEvaluator = new CompiledJunction(cvs,
-   * OQLLexerTokenTypes.LITERAL_and); }else { iterEvaluator = cvs[0]; }
-   * context.cachePut(this.bindArg, iterEvaluator);
-   * 
-   * } return iterEvaluator.evaluate(context); }
-   */
-
-      // GemFireCacheImpl.getInstance().getLogger().fine("### DEBUG : string :" + strPattern + "
-      // pattern :" + pattern.toString());
