Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * MBean that provides access to information and management functionality for a
- * {@link CacheServer}.
+ * MBean that provides access to information and management functionality for a {@link CacheServer}.
- * <p>The will be one CacheServermBean per {@link CacheServer} started in GemFire node.
+ * <p>
+ * The will be one CacheServermBean per {@link CacheServer} started in GemFire node.
- * <p> ObjectName for this MBean is GemFire:service=CacheServer,port={0},type=Member,member={1}
+ * <p>
+ * ObjectName for this MBean is GemFire:service=CacheServer,port={0},type=Member,member={1}
-   * Returns a string representing the IP address or host name that this
-   * CacheServer will listen on.
+   * Returns a string representing the IP address or host name that this CacheServer will listen on.
-  
+
-   * Returns the maximum amount of time between client pings. This value is used to determine the 
+   * Returns the maximum amount of time between client pings. This value is used to determine the
-  
+
-  
+
-  
+
-  
+
-   * Returns the name or IP address to pass to the client as the location
-   * where the server is listening. When the server connects to the locator it tells
-   * the locator the host and port where it is listening for client connections. If
-   * the host the server uses by default is one that the client can’t translate into
-   * an IP address, the client will have no route to the server’s host and won’t be
-   * able to find the server. For this situation, you must supply the server’s
+   * Returns the name or IP address to pass to the client as the location where the server is
+   * listening. When the server connects to the locator it tells the locator the host and port where
+   * it is listening for client connections. If the host the server uses by default is one that the
+   * client can’t translate into an IP address, the client will have no route to the server’s host
+   * and won’t be able to find the server. For this situation, you must supply the server’s
-  
+
-   * Returns the eviction policy that is executed when the capacity of the client
-   * queue is reached.
+   * Returns the eviction policy that is executed when the capacity of the client queue is reached.
-  
+
-   * Returns the total number of client connections that timed out and were
-   * closed.
+   * Returns the total number of client connections that timed out and were closed.
-   * Returns the current number of connections waiting for a thread to start
-   * processing their message.
+   * Returns the current number of connections waiting for a thread to start processing their
+   * message.
-   * Returns the load from client to server connections as reported by the load
-   * probe installed in this server.
+   * Returns the load from client to server connections as reported by the load probe installed in
+   * this server.
-   * Returns the estimate of how much load is added for each new connection as
-   * reported by the load probe installed in this server.
+   * Returns the estimate of how much load is added for each new connection as reported by the load
+   * probe installed in this server.
-   * Returns the load from queues as reported by the load probe installed in
-   * this server.
+   * Returns the load from queues as reported by the load probe installed in this server.
-   * Returns the estimate of how much load is added for each new queue as
-   * reported by the load probe installed in this server.
+   * Returns the estimate of how much load is added for each new queue as reported by the load probe
+   * installed in this server.
-  
+
-  
+
-   * @param indexName
-   *          Name of the index to be removed.
+   * @param indexName Name of the index to be removed.
-   * @param queryName
-   *          Name of the CQ to execute.
-   * @deprecated This method is dangerous because it only modifies the
-   * target cache server - other copies of the CQ on other servers are
-   * not affected. Using the client side CQ methods to modify a CQ.
+   * @param queryName Name of the CQ to execute.
+   * @deprecated This method is dangerous because it only modifies the target cache server - other
+   *             copies of the CQ on other servers are not affected. Using the client side CQ
+   *             methods to modify a CQ.
-   * @param queryName
-   *          Name of the CQ to stop.
-   *          
-   * @deprecated This method is dangerous because it only modifies the
-   * target cache server - other copies of the CQ on other servers are
-   * not affected. Using the client side CQ methods to modify a CQ.         
+   * @param queryName Name of the CQ to stop.
+   * 
+   * @deprecated This method is dangerous because it only modifies the target cache server - other
+   *             copies of the CQ on other servers are not affected. Using the client side CQ
+   *             methods to modify a CQ.
-   * @param regionName
-   *          Name of the region from which to remove CQs.
-   * @deprecated This method is dangerous because it only modifies the
-   * target cache server - other copies of the CQ on other servers are
-   * not affected. Using the client side CQ methods to modify a CQ.         
+   * @param regionName Name of the region from which to remove CQs.
+   * @deprecated This method is dangerous because it only modifies the target cache server - other
+   *             copies of the CQ on other servers are not affected. Using the client side CQ
+   *             methods to modify a CQ.
-  
-  
+
+
-   * @param queryName
-   *          Name of the CQ to unregister.
-   * @deprecated This method is dangerous because it only modifies the
-   * target cache server - other copies of the CQ on other servers are
-   * not affected. Using the client side CQ methods to modify a CQ.         
+   * @param queryName Name of the CQ to unregister.
+   * @deprecated This method is dangerous because it only modifies the target cache server - other
+   *             copies of the CQ on other servers are not affected. Using the client side CQ
+   *             methods to modify a CQ.
-   * Returns health and statistic information for the give client id. Some of the
-   * information (CPUs, NumOfCacheListenerCalls, NumOfGets,NumOfMisses,
-   * NumOfPuts,NumOfThreads, ProcessCpuTime) only available for clients which
-   * have set a "StatisticsInterval".
+   * Returns health and statistic information for the give client id. Some of the information (CPUs,
+   * NumOfCacheListenerCalls, NumOfGets,NumOfMisses, NumOfPuts,NumOfThreads, ProcessCpuTime) only
+   * available for clients which have set a "StatisticsInterval".
-   * @param clientId
-   *          ID of the client for which to retrieve information.
+   * @param clientId ID of the client for which to retrieve information.
-  
+
-   * Returns health and statistic information for all clients. Some of the
-   * information (CPUs, NumOfCacheListenerCalls, NumOfGets,NumOfMisses,
-   * NumOfPuts,NumOfThreads, ProcessCpuTime) only available for clients which
-   * have set a "StatisticsInterval".
+   * Returns health and statistic information for all clients. Some of the information (CPUs,
+   * NumOfCacheListenerCalls, NumOfGets,NumOfMisses, NumOfPuts,NumOfThreads, ProcessCpuTime) only
+   * available for clients which have set a "StatisticsInterval".
-  
+
-   * Shows a list of client with their queue statistics. Client queue statistics
-   * shown in this method are the following
+   * Shows a list of client with their queue statistics. Client queue statistics shown in this
+   * method are the following
-   * eventsEnqued,eventsRemoved , eventsConflated ,markerEventsConflated ,
-   * eventsExpired, eventsRemovedByQrm , eventsTaken , numVoidRemovals
+   * eventsEnqued,eventsRemoved , eventsConflated ,markerEventsConflated , eventsExpired,
+   * eventsRemovedByQrm , eventsTaken , numVoidRemovals
-  
+
-   * Shows queue statistics of the given client. Client queue statistics
-   * shown in this method are the following
+   * Shows queue statistics of the given client. Client queue statistics shown in this method are
+   * the following
-   * eventsEnqued,eventsRemoved , eventsConflated ,markerEventsConflated ,
-   * eventsExpired, eventsRemovedByQrm , eventsTaken , numVoidRemovals
+   * eventsEnqued,eventsRemoved , eventsConflated ,markerEventsConflated , eventsExpired,
+   * eventsRemovedByQrm , eventsTaken , numVoidRemovals
-   * @param clientId the ID of client which is returned by the attribute ClientIds 
+   * @param clientId the ID of client which is returned by the attribute ClientIds
