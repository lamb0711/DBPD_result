GEODE-2757: Do not process netsearch reply from a departed node that membership listener already detected.

-  private InternalDistributedMember selectedNode;
+  private volatile InternalDistributedMember selectedNode;
+  private ArrayList<InternalDistributedMember> departedMembers;
+
+        if (departedMembers == null) {
+          departedMembers = new ArrayList<InternalDistributedMember>();
+        }
+        departedMembers.add(id);
-      if (responseQueue != null)
+      if (responseQueue != null) {
+      }
+  InternalDistributedMember getSelectedNode() {
+    return this.selectedNode;
+  }
+
-        this.requestInProgress = true;
-        this.remoteGetInProgress = true;
+
+          this.requestInProgress = true;
+          this.remoteGetInProgress = true;
-        }
-        sendValueRequest(replicate);
-        waitForObject2(this.remainingTimeout);
-        if (this.authorative) {
-          if (this.result != null) {
-            this.netSearch = true;
+
+          sendValueRequest(replicate);
+          waitForObject2(this.remainingTimeout);
+
+          if (this.authorative) {
+            if (this.result != null) {
+              this.netSearch = true;
+            }
+            return;
+          } else {
+            // clear anything that might have been set by our query.
+            this.selectedNode = null;
+            this.selectedNodeDead = false;
+            this.lastNotifySpot = 0;
+            this.result = null;
-          return;
-        } else {
-          // clear anything that might have been set by our query.
-          this.selectedNode = null;
-          this.selectedNodeDead = false;
-          this.lastNotifySpot = 0;
-          this.result = null;
-      boolean serialized, boolean requestorTimedOut, boolean authorative, VersionTag versionTag) {
+      boolean serialized, boolean requestorTimedOut, boolean authorative, VersionTag versionTag,
+      InternalDistributedMember responder) {
+    if (departedMembers != null && departedMembers.contains(responder)) {
+      if (isDebugEnabled) {
+        logger.debug("ignore the reply received from a departed member");
+      }
+      return;
+    }
-        final DM dm = this.region.cache.getDistributedSystem().getDistributionManager();
+        final DM dm = this.region.getCache().getDistributedSystem().getDistributionManager();
-          this.requestorTimedOut, this.authoritative, this.versionTag);
+          this.requestorTimedOut, this.authoritative, this.versionTag, getSender());
