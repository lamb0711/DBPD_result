Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

+import static com.sun.tools.doclint.Entity.part;
+
-    //TODO:hitesh need to add security header here from server
+    //hitesh: need to add security header here from server
-    //TODO:hitesh setting second bit of flags byte for client 
+    //hitesh: setting second bit of flags byte for client 
-        try {
-          bytesRead = this.is.read(cb.array(),hdr, headerLength-hdr);
-        }
-        catch (SocketTimeoutException e) {
-//          bytesRead = 0;
-          // TODO add a cancellation check
-          throw e;
-        }
+        bytesRead = this.is.read(cb.array(),hdr, headerLength-hdr);
-    //TODO:Hitesh ???
-    // TODO why is the msgType set twice, here and after reading the payload fields?
-    this.msgType = type;
-    //TODO:Hitesh
-    //TODO:Hitesh look if securePart can be cached here
-            try {
-              res = this.is.read(partBytes, off, remaining);
-            }
-            catch (SocketTimeoutException e) {
-              // TODO: add cancellation check
-              throw e;
-            }
+            res = this.is.read(partBytes, off, remaining);
-        try {
-          res = this.is.read(cb.array(), pos, bytesToRead);
-        }
-        catch (SocketTimeoutException e) {
-          // TODO add a cancellation check
-          throw e;
-        }
+        res = this.is.read(cb.array(), pos, bytesToRead);
