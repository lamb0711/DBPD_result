GEODE-8076: simplify redis concurrency code (#5019)

Added StripedExecutor which is used by the redis set functions to cause all operations for a given key to be executed sequentially.
Note that DeltaSet has been renamed to RedisSet.
The RedisSet interface is now named RedisSetCommands.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Murtuza <mboxwala@pivotal.io>
Co-authored-by: Sarah <sabbey@pivotal.io>
Co-authored-by: john <jhutchison@gmail.com>
-public class GeodeRedisSetWithFunctions implements RedisSet {
+public class RedisSetCommandsFunctionExecutor implements RedisSetCommands {
-  private final ByteArrayWrapper key;
-  private final Region<ByteArrayWrapper, DeltaSet> region;
+  private final Region<ByteArrayWrapper, RedisSet> region;
-  public GeodeRedisSetWithFunctions(ByteArrayWrapper key,
-      Region<ByteArrayWrapper, DeltaSet> region) {
-
-    this.key = key;
+  public RedisSetCommandsFunctionExecutor(Region<ByteArrayWrapper, RedisSet> region) {
-    FunctionService.registerFunction(new CommandFunction());
+    SynchronizedStripedExecutor stripedExecutor = new SynchronizedStripedExecutor();
+    FunctionService.registerFunction(new CommandFunction(stripedExecutor));
-  public long sadd(ArrayList<ByteArrayWrapper> membersToAdd) {
-    ResultCollector<Object[], List<Long>> results = executeFunction(SADD, membersToAdd);
+  public long sadd(ByteArrayWrapper key, ArrayList<ByteArrayWrapper> membersToAdd) {
+    ResultCollector<Object[], List<Long>> results = executeFunction(SADD, key, membersToAdd);
-  public long srem(ArrayList<ByteArrayWrapper> membersToRemove, AtomicBoolean setWasDeleted) {
-    ResultCollector<Object[], List<Long>> results = executeFunction(SREM, membersToRemove);
+  public long srem(ByteArrayWrapper key, ArrayList<ByteArrayWrapper> membersToRemove,
+      AtomicBoolean setWasDeleted) {
+    ResultCollector<Object[], List<Long>> results = executeFunction(SREM, key, membersToRemove);
-  public Set<ByteArrayWrapper> members() {
+  public Set<ByteArrayWrapper> members(ByteArrayWrapper key) {
-        executeFunction(SMEMBERS, null);
+        executeFunction(SMEMBERS, key, null);
-  public boolean del() {
-    ResultCollector<Object[], List<Boolean>> results = executeFunction(DEL, null);
+  public boolean del(ByteArrayWrapper key) {
+    ResultCollector<Object[], List<Boolean>> results = executeFunction(DEL, key, null);
+      ByteArrayWrapper key,
-
