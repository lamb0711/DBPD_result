Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-            LocalizedStrings.DiskWriteAttributesImpl_COMPACTION_CANNOT_BE_SET_TO_TRUE_IF_MAXOPLOGSIZE_IS_SET_TO_INFINITE_INFINITE_IS_REPRESENTED_BY_SIZE_ZERO_0
-                .toLocalizedString());
+            "Compaction cannot be set to true if max-oplog-size is set to infinite (infinite is represented by size zero : 0)");
-              LocalizedStrings.DiskWriteAttributesImpl_CANNOT_SET_MAXOPLOGS_SIZE_TO_INFINITY_0_IF_COMPACTION_IS_SET_TO_TRUE
-                  .toLocalizedString());
+              "Cannot set maxOplogs size to infinity (0) if compaction is set to true");
-          LocalizedStrings.DiskWriteAttributesImpl_0_PROPERTY_HAS_TO_BE_TRUE_OR_FALSE_OR_NULL_AND_CANNOT_BE_1
-              .toLocalizedString(new Object[] {property, propertyString}));
+          String.format("%s property has to be true or false or null and cannot be %s",
+              new Object[] {property, propertyString}));
-          LocalizedStrings.DiskWriteAttributesImpl_0_HAS_TO_BE_A_VALID_NUMBER_AND_NOT_1
-              .toLocalizedString(new Object[] {property, propertyString}));
+          String.format("%s has to be a valid number and not %s",
+              new Object[] {property, propertyString}));
-          LocalizedStrings.DiskWriteAttributesImpl_0_HAS_TO_BE_POSITIVE_NUMBER_AND_THE_VALUE_GIVEN_1_IS_NOT_ACCEPTABLE
-              .toLocalizedString(new Object[] {property, Long.valueOf(returnValue)}));
+          String.format("%s has to be positive number and the value given %s is not acceptable",
+              new Object[] {property, Long.valueOf(returnValue)}));
-          LocalizedStrings.DiskWriteAttributesImpl_0_HAS_TO_BE_A_VALID_NUMBER_AND_NOT_1
-              .toLocalizedString(new Object[] {property, propertyString}));
+          String.format("%s has to be a valid number and not %s",
+              new Object[] {property, propertyString}));
-          LocalizedStrings.DiskWriteAttributesImpl_0_HAS_TO_BE_POSITIVE_NUMBER_AND_THE_VALUE_GIVEN_1_IS_NOT_ACCEPTABLE
-              .toLocalizedString(new Object[] {property, Integer.valueOf(returnValue)}));
+          String.format("%s has to be positive number and the value given %s is not acceptable",
+              new Object[] {property, Integer.valueOf(returnValue)}));
-          LocalizedStrings.DiskWriteAttributesImpl_0_HAS_TO_BE_LESS_THAN_2_BUT_WAS_1
-              .toLocalizedString(
-                  new Object[] {property, Integer.valueOf(returnValue), Integer.valueOf(100)}));
+          String.format(
+              "%s has to be a number that does not exceed %s so the value given %s is not acceptable",
+
+              new Object[] {property, Integer.valueOf(returnValue), Integer.valueOf(100)}));
-    int result = 0;
+    long result = 0;
-    return result;
+    return (int) (result & 0xFFFFFFFF);
