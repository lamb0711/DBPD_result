GEODE-4876: Add version of getServerHostName without Host

Add getServerHostName() to NetworkUtils so that tests can avoid
importing Host.

+import static org.apache.geode.distributed.ConfigurationProperties.SERVER_BIND_ADDRESS;
+import static org.apache.geode.distributed.internal.DistributionConfig.GEMFIRE_PREFIX;
+
+import java.io.UncheckedIOException;
+import java.net.InetAddress;
-import org.apache.geode.distributed.internal.DistributionConfig;
- * <code>NetworkUtils</code> provides static utility methods to perform network DNS lookups or
+ * {@code NetworkUtils} provides static utility methods to perform network DNS lookups or
- * These methods can be used directly: <code>NetworkUtils.getIPLiteral()</code>, however, they are
+ * These methods can be used directly: {@code NetworkUtils.getIPLiteral()}, however, they are
- * import static org.apache.geode.test.dunit.NetworkUtils.*;
+ * import static org.apache.geode.test.dunit.NetworkUtils.getIPLiteral;
-  protected NetworkUtils() {}
+  protected NetworkUtils() {
+    // nothing
+  }
-   * Get the IP literal name for the current host. Use this instead of "localhost" to avoid IPv6
+   * Returns the IP literal name for the current host. Use this instead of "localhost" to avoid IPv6
-   * Get the host name to use for a server cache in client/server dunit testing.
+   * Returns the host name to use for a server cache in client/server DUnit testing.
-   * @param host the dunit Host to get a machine host name for
+  public static String getServerHostName() {
+    String serverBindAddress = System.getProperty(GEMFIRE_PREFIX + SERVER_BIND_ADDRESS);
+    return serverBindAddress != null ? serverBindAddress : getCanonicalHostName();
+  }
+
+  /**
+   * Returns the host name to use for a server cache in client/server DUnit testing.
+   *
+   * @param host the DUnit Host to get a machine host name for
+   * @return the host name
+   * @deprecated Please use {@link #getServerHostName()} instead.
+   */
+  @Deprecated
-    String serverBindAddress =
-        System.getProperty(DistributionConfig.GEMFIRE_PREFIX + "server-bind-address");
+    String serverBindAddress = System.getProperty(GEMFIRE_PREFIX + SERVER_BIND_ADDRESS);
+
+  /**
+   * Returns {@code InetAddress.getLocalHost().getCanonicalHostName()}.
+   *
+   * @return the canonical host name
+   * @throws UncheckedIOException if underlying call threw {@code UnknownHostException}.
+   */
+  private static String getCanonicalHostName() {
+    try {
+      return InetAddress.getLocalHost().getCanonicalHostName();
+    } catch (UnknownHostException e) {
+      throw new UncheckedIOException(e);
+    }
+  }
