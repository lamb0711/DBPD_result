GEODE-7507 remove GMSMembership's dependency on DistributionMessage (#4384)

* GEODE-7507 remove GMSMembership's dependency on DistributionMessage

Prior to this change-set the membership module wrapped all messages in a
GMSMessageAdapter.  This is no longer necessary and I've deleted that
class.  Instead, our messages now implement GMSMessage (now renamed
DistributionMessage) and the geode-core abstract DistributionMessage
class (now renamed ClusterMessage) implements the membership module's
API.

Most of the files in the diff are only affected by the renaming of
GMSMessage and DistributionMessage.  The primary changes are in GMSManager
and DistributionMessage (now named ClusterMessage).

* rebase on develop, rename DistributionMessageObserver

* making pmdMain happy

* revert renaming message class/interface

* fix serialization test

* rename GMSMessage to Message

* fixes for Dan's comments

* addressing pmdMain issue

* removing DistributionMessage from another arch unit test

-import org.apache.geode.distributed.internal.DistributionMessage;
-import org.apache.geode.distributed.internal.membership.adapter.GMSMessageAdapter;
+import org.apache.geode.distributed.internal.membership.gms.api.Message;
-import org.apache.geode.distributed.internal.membership.gms.interfaces.GMSMessage;
-import org.apache.geode.internal.serialization.DataSerializableFixedID;
-    DistributionMessage dmsg;
+    Message dmsg;
-    StartupEvent(DistributionMessage d) {
+    StartupEvent(Message d) {
-  protected void handleOrDeferMessage(DistributionMessage msg) {
+  protected void handleOrDeferMessage(Message msg) {
-  private void dispatchMessage(DistributionMessage msg) {
-    InternalDistributedMember m = msg.getSender();
+  private void dispatchMessage(Message msg) {
+    InternalDistributedMember m = (InternalDistributedMember) msg.getSender();
-  public void replacePartialIdentifierInMessage(DistributionMessage msg) {
-    InternalDistributedMember sender = msg.getSender();
+  public void replacePartialIdentifierInMessage(Message msg) {
+    InternalDistributedMember sender = (InternalDistributedMember) msg.getSender();
-        o.dmsg.setSender(latestView.getCanonicalID(o.dmsg.getSender()));
+        o.dmsg.setSender(latestView.getCanonicalID((InternalDistributedMember) o.dmsg.getSender()));
-  public void processMessage(final DistributionMessage msg) {
+  public void processMessage(final Message msg) {
-      final DistributionMessage content)
+      final Message content)
-    Set<MemberIdentifier> failures = services.getMessenger().send(new GMSMessageAdapter(content));
+    Set<MemberIdentifier> failures = services.getMessenger().send(content);
-    public void processMessage(GMSMessage msg) {
-      DistributionMessage distributionMessage =
-          (DistributionMessage) ((GMSMessageAdapter) msg).getGeodeMessage();
+    public void processMessage(Message msg) {
-      if (distributionMessage.getSender().isPartial()) {
-        replacePartialIdentifierInMessage(distributionMessage);
+      if (((InternalDistributedMember) msg.getSender()).isPartial()) {
+        replacePartialIdentifierInMessage(msg);
-      handleOrDeferMessage(distributionMessage);
+      handleOrDeferMessage(msg);
-
-    @Override
-    public GMSMessage wrapMessage(Object receivedMessage) {
-      if (receivedMessage instanceof GMSMessage) {
-        return (GMSMessage) receivedMessage;
-      }
-      // Geode's DistributionMessage class isn't known by GMS classes
-      return new GMSMessageAdapter((DistributionMessage) receivedMessage);
-    }
-
-    @Override
-    public DataSerializableFixedID unwrapMessage(GMSMessage messageToSend) {
-      if (messageToSend instanceof GMSMessageAdapter) {
-        return ((GMSMessageAdapter) messageToSend).getGeodeMessage();
-      }
-      return (DataSerializableFixedID) messageToSend;
-    }
-
