GEODE-8312: Improve Redis pub/sub capabilities (#5316)

* Improve pub/sub implementation
* Keep regular subscribed channel names as byte[]'s

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
+import java.util.stream.Collectors;
-      String channel, byte[] message) {
+      byte[] channel, byte[] message) {
-  public long subscribe(String channel, ExecutionHandlerContext context, Client client) {
-    if (subscriptions.exists(channel, client)) {
-      return subscriptions.findSubscriptions(client).size();
-    }
-    Subscription subscription = new ChannelSubscription(client, channel, context);
-    subscriptions.add(subscription);
-    return subscriptions.findSubscriptions(client).size();
+  public long subscribe(byte[] channel, ExecutionHandlerContext context, Client client) {
+    return subscriptions.subscribe(channel, context, client);
-    if (subscriptions.exists(pattern, client)) {
-      return subscriptions.findSubscriptions(client).size();
-    }
-    Subscription subscription = new PatternSubscription(client, pattern, context);
-    subscriptions.add(subscription);
-
-    return subscriptions.findSubscriptions(client).size();
+    return subscriptions.psubscribe(pattern, context, client);
-            publishMessageToSubscribers((String) publishMessage[0], (byte[]) publishMessage[1]);
+            publishMessageToSubscribers((byte[]) publishMessage[0], (byte[]) publishMessage[1]);
-  public long unsubscribe(String channel, Client client) {
-    subscriptions.remove(channel, client);
-    return subscriptions.findSubscriptions(client).size();
+  public long unsubscribe(byte[] channel, Client client) {
+    return subscriptions.unsubscribe(channel, client);
-    subscriptions.remove(pattern, client);
-    return subscriptions.findSubscriptions(client).size();
+    return subscriptions.unsubscribe(pattern, client);
+  }
+
+  @Override
+  public List<byte[]> findSubscribedChannels(Client client) {
+    return subscriptions.findSubscriptions(client).stream()
+        .map(Subscription::getChannelName)
+        .collect(Collectors.toList());
-  long publishMessageToSubscribers(String channel, byte[] message) {
+  long publishMessageToSubscribers(byte[] channel, byte[] message) {
