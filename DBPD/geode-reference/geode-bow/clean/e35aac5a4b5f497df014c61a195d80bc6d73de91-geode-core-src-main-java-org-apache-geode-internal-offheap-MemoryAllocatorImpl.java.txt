Merge branch 'release/1.5.0'

-import org.apache.geode.cache.RegionService;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.cache.InternalRegion;
-  public List<OffHeapStoredObject> getLostChunks() {
+  public List<OffHeapStoredObject> getLostChunks(InternalCache cache) {
-    List<OffHeapStoredObject> regionChunks = getRegionLiveChunks();
+    List<OffHeapStoredObject> regionChunks = getRegionLiveChunks(cache);
-  private List<OffHeapStoredObject> getRegionLiveChunks() {
+  private List<OffHeapStoredObject> getRegionLiveChunks(InternalCache cache) {
-    RegionService gfc = GemFireCacheImpl.getInstance();
-    if (gfc != null) {
-      Iterator<Region<?, ?>> rootIt = gfc.rootRegions().iterator();
+    if (cache != null) {
+      Iterator<Region<?, ?>> rootIt = cache.rootRegions().iterator();
-        this.basicGetRegionLiveChunks((LocalRegion) r, result);
+        this.basicGetRegionLiveChunks((InternalRegion) r, result);
-  private void basicGetRegionLiveChunks(LocalRegion r, List<OffHeapStoredObject> result) {
+  private void basicGetRegionLiveChunks(InternalRegion r, List<OffHeapStoredObject> result) {
-      RegionEntry re = ((LocalRegion) r).getRegionEntry(key);
+      RegionEntry re = r.getRegionEntry(key);
-  public synchronized List<MemoryBlock> getOrphans() {
+  public synchronized List<MemoryBlock> getOrphans(InternalCache cache) {
-    List<OffHeapStoredObject> regionChunks = getRegionLiveChunks();
+    List<OffHeapStoredObject> regionChunks = getRegionLiveChunks(cache);
