GEODE-5194: allow gfsh to connect if serialization version matches (#4202)

* GEODE-5194: allow gfsh to connect if serialization version matches

This builds on the previous work that relaxed the version check to
ignore patch version changes.  Now even differing minor versions may be
compatible (i.e. no changes to gfsh commands or options).  Serialization
version is not a perfect proxy for when gfsh commands have changed, but
this is at least an improvement over the previous check...

Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

* empty

* rename geodeVersion to geodeSerializationVersion to more accurately reflect what it represents

-      remoteVersion = invoker.getRemoteVersion();
-      if (versionComponent(remoteVersion, VERSION_MAJOR)
-          .equalsIgnoreCase(versionComponent(gfshVersion, VERSION_MAJOR))
-          && versionComponent(remoteVersion, VERSION_MINOR)
-              .equalsIgnoreCase(versionComponent(gfshVersion, VERSION_MINOR))) {
+      String gfshGeodeSerializationVersion = gfsh.getGeodeSerializationVersion();
+      String remoteGeodeSerializationVersion = invoker.getRemoteGeodeSerializationVersion();
+      if (hasSameMajorMinor(gfshGeodeSerializationVersion, remoteGeodeSerializationVersion)) {
-      gfsh.logInfo("failed to get the the remote version.", e);
+      // we failed to get the remote geode serialization version; get remote product version for
+      // error message
+      try {
+        remoteVersion = invoker.getRemoteVersion();
+      } catch (Exception ex) {
+        gfsh.logInfo("failed to get the the remote version.", ex);
+      }
-  private String versionComponent(String version, int component) {
+  private static boolean hasSameMajorMinor(String gfshVersion, String remoteVersion) {
+    return versionComponent(remoteVersion, VERSION_MAJOR)
+        .equalsIgnoreCase(versionComponent(gfshVersion, VERSION_MAJOR))
+        && versionComponent(remoteVersion, VERSION_MINOR)
+            .equalsIgnoreCase(versionComponent(gfshVersion, VERSION_MINOR));
+  }
+
+  private static String versionComponent(String version, int component) {
