Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Empty implementation of <code>DistributedLockStats</code> used when there is
- * currently no connection to the distributed system.
+ * Empty implementation of <code>DistributedLockStats</code> used when there is currently no
+ * connection to the distributed system.
-  public int getLockWaitsInProgress() { return -1; }
-  
-  public int getLockWaitsCompleted() { return -1; }
-  
-  public int getLockWaitsFailed() { return -1; }
+  public int getLockWaitsInProgress() {
+    return -1;
+  }
-  public long getLockWaitTime() { return -1; }
-  
-  public long getLockWaitFailedTime() { return -1; }
+  public int getLockWaitsCompleted() {
+    return -1;
+  }
-  public long startLockWait() { return -1; }
+  public int getLockWaitsFailed() {
+    return -1;
+  }
+
+  public long getLockWaitTime() {
+    return -1;
+  }
+
+  public long getLockWaitFailedTime() {
+    return -1;
+  }
+
+  public long startLockWait() {
+    return -1;
+  }
-  public int getWaitingQueueSize() { return -1; }
+  public int getWaitingQueueSize() {
+    return -1;
+  }
+
-  
-  public int getSerialQueueSize() { return -1; }
+
+  public int getSerialQueueSize() {
+    return -1;
+  }
+
-  
-  public int getNumSerialThreads() { return -1; }
+
+  public int getNumSerialThreads() {
+    return -1;
+  }
+
-  
-  public int getWaitingThreads() { return -1; }
+
+  public int getWaitingThreads() {
+    return -1;
+  }
+
-  public int getServices() { return -1; }
+  public int getServices() {
+    return -1;
+  }
+
-  public int getGrantors() { return -1; }
+  public int getGrantors() {
+    return -1;
+  }
+
-  
-  public int getGrantWaitsInProgress() { return -1; }
-  public int getGrantWaitsCompleted() { return -1; }
-  public int getGrantWaitsFailed() { return -1; }
-  public long getGrantWaitTime() { return -1; }
-  public long getGrantWaitFailedTime() { return -1; }
-  public long startGrantWait() { return -1; }
+
+  public int getGrantWaitsInProgress() {
+    return -1;
+  }
+
+  public int getGrantWaitsCompleted() {
+    return -1;
+  }
+
+  public int getGrantWaitsFailed() {
+    return -1;
+  }
+
+  public long getGrantWaitTime() {
+    return -1;
+  }
+
+  public long getGrantWaitFailedTime() {
+    return -1;
+  }
+
+  public long startGrantWait() {
+    return -1;
+  }
+
+
+
+
+
+
+
-  
-  public int getCreateGrantorsInProgress() { return -1; }
-  public int getCreateGrantorsCompleted() { return -1; }
-  public long getCreateGrantorTime() { return -1; }
-  public long startCreateGrantor() { return -1; }
+
+  public int getCreateGrantorsInProgress() {
+    return -1;
+  }
+
+  public int getCreateGrantorsCompleted() {
+    return -1;
+  }
+
+  public long getCreateGrantorTime() {
+    return -1;
+  }
+
+  public long startCreateGrantor() {
+    return -1;
+  }
+
-  
-  public int getServiceCreatesInProgress() { return -1; }
-  public int getServiceCreatesCompleted() { return -1; }
-  public long startServiceCreate() { return -1; }
+
+  public int getServiceCreatesInProgress() {
+    return -1;
+  }
+
+  public int getServiceCreatesCompleted() {
+    return -1;
+  }
+
+  public long startServiceCreate() {
+    return -1;
+  }
+
+
-  public long getServiceCreateLatchTime() { return -1; }
-  public long getServiceInitLatchTime() { return -1; }
-  public int getGrantorWaitsInProgress() { return -1; }
-  public int getGrantorWaitsCompleted() { return -1; }
-  public int getGrantorWaitsFailed() { return -1; }
-  public long getGrantorWaitTime() { return -1; }
-  public long getGrantorWaitFailedTime() { return -1; }
-  public long startGrantorWait() { return -1; }
+  public long getServiceCreateLatchTime() {
+    return -1;
+  }
+
+  public long getServiceInitLatchTime() {
+    return -1;
+  }
+
+  public int getGrantorWaitsInProgress() {
+    return -1;
+  }
+
+  public int getGrantorWaitsCompleted() {
+    return -1;
+  }
+
+  public int getGrantorWaitsFailed() {
+    return -1;
+  }
+
+  public long getGrantorWaitTime() {
+    return -1;
+  }
+
+  public long getGrantorWaitFailedTime() {
+    return -1;
+  }
+
+  public long startGrantorWait() {
+    return -1;
+  }
+
-  
+
-    return new DummyQueueStatHelper(); 
-  }
-  public PoolStatHelper getWaitingPoolHelper() { 
-    return new DummyPoolStatHelper(); 
-  }
-  public QueueStatHelper getWaitingQueueHelper() { 
-    return new DummyQueueStatHelper(); 
+    return new DummyQueueStatHelper();
-  public int getGrantorThreadsInProgress() { return -1; }
-  public int getGrantorThreadsCompleted() { return -1; }
-  public long getGrantorThreadTime() { return -1; }
-  public long getGrantorThreadExpireAndGrantLocksTime() { return -1; }
-  public long getGrantorThreadHandleRequestTimeoutsTime() { return -1; }
-  public long getGrantorThreadRemoveUnusedTokensTime() { return -1; }
-  public long startGrantorThread() { return -1; }
-  public long endGrantorThreadExpireAndGrantLocks(long start) { return -1; }
-  public long endGrantorThreadHandleRequestTimeouts(long timing) { return -1; }
+  public PoolStatHelper getWaitingPoolHelper() {
+    return new DummyPoolStatHelper();
+  }
+
+  public QueueStatHelper getWaitingQueueHelper() {
+    return new DummyQueueStatHelper();
+  }
+
+  public int getGrantorThreadsInProgress() {
+    return -1;
+  }
+
+  public int getGrantorThreadsCompleted() {
+    return -1;
+  }
+
+  public long getGrantorThreadTime() {
+    return -1;
+  }
+
+  public long getGrantorThreadExpireAndGrantLocksTime() {
+    return -1;
+  }
+
+  public long getGrantorThreadHandleRequestTimeoutsTime() {
+    return -1;
+  }
+
+  public long getGrantorThreadRemoveUnusedTokensTime() {
+    return -1;
+  }
+
+  public long startGrantorThread() {
+    return -1;
+  }
+
+  public long endGrantorThreadExpireAndGrantLocks(long start) {
+    return -1;
+  }
+
+  public long endGrantorThreadHandleRequestTimeouts(long timing) {
+    return -1;
+  }
+
+
-  
-  public int getPendingRequests() { return -1; }
+
+  public int getPendingRequests() {
+    return -1;
+  }
+
-    
-  public int getDestroyReadWaitsInProgress() { return -1; }
-  public int getDestroyReadWaitsCompleted() { return -1; }
-  public int getDestroyReadWaitsFailed() { return -1; }
-  public long getDestroyReadWaitTime() { return -1; }
-  public long getDestroyReadWaitFailedTime() { return -1; }
-  public long startDestroyReadWait() { return -1; }
+
+  public int getDestroyReadWaitsInProgress() {
+    return -1;
+  }
+
+  public int getDestroyReadWaitsCompleted() {
+    return -1;
+  }
+
+  public int getDestroyReadWaitsFailed() {
+    return -1;
+  }
+
+  public long getDestroyReadWaitTime() {
+    return -1;
+  }
+
+  public long getDestroyReadWaitFailedTime() {
+    return -1;
+  }
+
+  public long startDestroyReadWait() {
+    return -1;
+  }
+
-  public int getDestroyWriteWaitsInProgress() { return -1; }
-  public int getDestroyWriteWaitsCompleted() { return -1; }
-  public int getDestroyWriteWaitsFailed() { return -1; }
-  public long getDestroyWriteWaitTime() { return -1; }
-  public long getDestroyWriteWaitFailedTime() { return -1; }
-  public long startDestroyWriteWait() { return -1; }
+  public int getDestroyWriteWaitsInProgress() {
+    return -1;
+  }
+
+  public int getDestroyWriteWaitsCompleted() {
+    return -1;
+  }
+
+  public int getDestroyWriteWaitsFailed() {
+    return -1;
+  }
+
+  public long getDestroyWriteWaitTime() {
+    return -1;
+  }
+
+  public long getDestroyWriteWaitFailedTime() {
+    return -1;
+  }
+
+  public long startDestroyWriteWait() {
+    return -1;
+  }
+
-  
-  public int getDestroyReads() { return -1; }
+
+  public int getDestroyReads() {
+    return -1;
+  }
+
-  
-  public int getDestroyWrites() { return -1; }
+
+  public int getDestroyWrites() {
+    return -1;
+  }
+
-    
-  public int getLockReleasesInProgress() { return -1; }
-  public int getLockReleasesCompleted() { return -1; }
-  public long getLockReleaseTime() { return -1; }
-  public long startLockRelease() { return -1; }
+
+  public int getLockReleasesInProgress() {
+    return -1;
+  }
+
+  public int getLockReleasesCompleted() {
+    return -1;
+  }
+
+  public long getLockReleaseTime() {
+    return -1;
+  }
+
+  public long startLockRelease() {
+    return -1;
+  }
+
-    
-  public int getBecomeGrantorRequests() { return -1; }
+
+  public int getBecomeGrantorRequests() {
+    return -1;
+  }
+
-  public int getTokens() { return -1; }
+  public int getTokens() {
+    return -1;
+  }
+
-  public int getGrantTokens() { return -1; }
-  public void incGrantTokens(int val)  {}
+  public int getGrantTokens() {
+    return -1;
+  }
-  public int getRequestQueues() { return -1; }
+  public void incGrantTokens(int val) {}
+
+  public int getRequestQueues() {
+    return -1;
+  }
+
-  public int getFreeResourcesCompleted() { return -1; }
+  public int getFreeResourcesCompleted() {
+    return -1;
+  }
+
-  public int getFreeResourcesFailed() { return -1; }
+
+  public int getFreeResourcesFailed() {
+    return -1;
+  }
+
-  
+
-    public void endJob(){}
+
+    public void endJob() {}
-  
+
+
+
