GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long start) throws IOException {
-    servConn.setAsTrue(REQUIRES_RESPONSE);
-    TXManagerImpl txMgr = (TXManagerImpl) servConn.getCache().getCacheTransactionManager();
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
+      throws IOException {
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
+    TXManagerImpl txMgr = (TXManagerImpl) serverConnection.getCache().getCacheTransactionManager();
-        (InternalDistributedMember) servConn.getProxyID().getDistributedMember();
-    int uniqId = msg.getTransactionId();
+        (InternalDistributedMember) serverConnection.getProxyID().getDistributedMember();
+    int uniqId = clientMessage.getTransactionId();
-        writeCommitResponse(commitMsg, msg, servConn);
+        writeCommitResponse(commitMsg, clientMessage, serverConnection);
-        servConn.setAsTrue(RESPONDED);
+        serverConnection.setAsTrue(RESPONDED);
-        sendException(msg, servConn, txMgr.getExceptionForToken(commitMsg, txId));
+        sendException(clientMessage, serverConnection, txMgr.getExceptionForToken(commitMsg, txId));
-      writeCommitResponse(commitMsg, msg, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeCommitResponse(commitMsg, clientMessage, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-      sendException(msg, servConn, e);
+      sendException(clientMessage, serverConnection, e);
-    responseMsg.addObjPart(response, zipValues);
+    responseMsg.addObjPart(response, false);
