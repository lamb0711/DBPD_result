GEODE-4131: Do not reference deployed jars as byte arrays anymore (#1212)

* GEODE-4131: Do not reference deployed jars as byte arrays anymore

- All jars are streamed between locators and servers using the RMIIO library.
- Whenever an upload happens (either deploying jars or importing cluster
  config) we stage the files initially and then proceed with the command.
+import org.apache.geode.distributed.DistributedMember;
-  private Map<String, Configuration> requestedConfiguration = new HashMap<String, Configuration>();
-  private byte[][] jarBytes;
-  private String[] jarNames;
+  private Map<String, Configuration> requestedConfiguration = new HashMap<>();
+  private Map<String, Set<String>> jarNames = new HashMap<>();
+  // This is set to the member from which this object was received
+  private transient DistributedMember member;
+
-    DataSerializer.writeHashMap((HashMap<?, ?>) requestedConfiguration, out);
-    DataSerializer.writeStringArray(jarNames, out);
-    DataSerializer.writeArrayOfByteArrays(jarBytes, out);
+    DataSerializer.writeHashMap(requestedConfiguration, out);
+    DataSerializer.writeHashMap(jarNames, out);
-    this.jarNames = DataSerializer.readStringArray(in);
-    this.jarBytes = DataSerializer.readArrayOfByteArrays(in);
+    this.jarNames = DataSerializer.readHashMap(in);
-
-  public String[] getJarNames() {
-    return this.jarNames;
+  public void addJar(String group, Set<String> jarNames) {
+    this.jarNames.put(group, jarNames);
-  public byte[][] getJars() {
-    return this.jarBytes;
+  public Map<String, Set<String>> getJarNames() {
+    return jarNames;
-  public void addJarsToBeDeployed(String[] jarNames, byte[][] jarBytes) {
-    this.jarNames = jarNames;
-    this.jarBytes = jarBytes;
+  public DistributedMember getMember() {
+    return member;
+  }
+
+  public void setMember(DistributedMember member) {
+    this.member = member;
