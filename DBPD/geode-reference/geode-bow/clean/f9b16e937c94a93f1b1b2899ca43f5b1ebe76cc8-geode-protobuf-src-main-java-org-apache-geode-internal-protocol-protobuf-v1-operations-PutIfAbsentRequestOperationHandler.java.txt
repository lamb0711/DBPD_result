GEODE-4819: Separating authorization out from protobuf handlers (#1674)

Separating out authentication from the logic of parsing protobuf
messages. All region operations should be done through the new
AuthenticatingCache API, which does authentication and the operation.

In a future change we should move AuthenticationCache to the core and
refactor gfsh, the REST API, and the old client to also go through this
layer.

-  private static final Logger logger = LogManager.getLogger();
-    Region<Object, Object> region;
-    try {
-      region = messageExecutionContext.getCache().getRegion(regionName);
-    } catch (IllegalArgumentException ex) {
-      return Failure.of(BasicTypes.ErrorCode.INVALID_REQUEST,
-          "Invalid region name: \"" + regionName + "\"");
-    }
-
-    if (region == null) {
-      logger.error("Received PutIfAbsentRequest for nonexistent region: {}", regionName);
-      return Failure.of(BasicTypes.ErrorCode.SERVER_ERROR,
-          "Region \"" + regionName + "\" not found");
-    }
-
-    final Object oldValue = region.putIfAbsent(decodedKey, decodedValue);
+    final Object oldValue = messageExecutionContext.getAuthorizingCache().putIfAbsent(regionName,
+        decodedKey, decodedValue);
-
-  public static ResourcePermission determineRequiredPermission(RegionAPI.PutIfAbsentRequest request,
-      ProtobufSerializationService serializer) throws DecodingException {
-    return new ResourcePermission(ResourcePermission.Resource.DATA,
-        ResourcePermission.Operation.WRITE, request.getRegionName(),
-        serializer.decode(request.getEntry().getKey()).toString());
-  }
