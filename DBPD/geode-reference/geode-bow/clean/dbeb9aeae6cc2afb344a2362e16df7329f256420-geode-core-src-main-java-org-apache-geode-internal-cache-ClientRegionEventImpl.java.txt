Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//import org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID;
+// import org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID;
- * Class <code>ClientRegionEventImpl</code> is a
- * region event with the client's
- * host and port for notification purposes.
+ * Class <code>ClientRegionEventImpl</code> is a region event with the client's host and port for
+ * notification purposes.
-public final class ClientRegionEventImpl extends RegionEventImpl
-  {
+public final class ClientRegionEventImpl extends RegionEventImpl {
-  private  ClientProxyMembershipID context;
+  private ClientProxyMembershipID context;
-  public ClientRegionEventImpl() {
-  }
-  
+  public ClientRegionEventImpl() {}
+
+   * 
-  public ClientRegionEventImpl(LocalRegion region, Operation op, Object callbackArgument,boolean originRemote, DistributedMember distributedMember,ClientProxyMembershipID contx) {
-    super(region, op,callbackArgument, originRemote,distributedMember);
+  public ClientRegionEventImpl(LocalRegion region, Operation op, Object callbackArgument,
+      boolean originRemote, DistributedMember distributedMember, ClientProxyMembershipID contx) {
+    super(region, op, callbackArgument, originRemote, distributedMember);
-  public ClientRegionEventImpl(LocalRegion region, Operation op, Object callbackArgument,boolean originRemote, DistributedMember distributedMember,ClientProxyMembershipID contx,EventID eventId) {
-      super(region, op,callbackArgument, originRemote,distributedMember, eventId);
-      setContext(contx);
+  public ClientRegionEventImpl(LocalRegion region, Operation op, Object callbackArgument,
+      boolean originRemote, DistributedMember distributedMember, ClientProxyMembershipID contx,
+      EventID eventId) {
+    super(region, op, callbackArgument, originRemote, distributedMember, eventId);
+    setContext(contx);
-   *  
+   * 
-  protected void setContext(ClientProxyMembershipID contx)
-  {
+  protected void setContext(ClientProxyMembershipID contx) {
-  public ClientProxyMembershipID getContext()
-  {
+  public ClientProxyMembershipID getContext() {
-  public String toString()
-  {
+  public String toString() {
-  public void toData(DataOutput out) throws IOException
-  {
+  public void toData(DataOutput out) throws IOException {
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException
-  {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
