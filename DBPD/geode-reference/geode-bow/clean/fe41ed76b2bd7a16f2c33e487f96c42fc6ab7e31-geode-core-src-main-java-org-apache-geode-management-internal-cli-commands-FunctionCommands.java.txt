GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+
+import org.springframework.shell.core.CommandMarker;
+import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
-import org.apache.geode.cache.Cache;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
-import org.springframework.shell.core.CommandMarker;
-import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Set;
- * 
+
+  private InternalCache getCache() {
+    return (InternalCache) CacheFactory.getAnyInstance();
+  }
+
-      Cache cache = CacheFactory.getAnyInstance();
-
+      InternalCache cache = getCache();
-          DistributedRegionMXBean bean =
-              ManagementService.getManagementService(GemFireCacheImpl.getInstance())
-                  .getDistributedRegionMXBean(onRegion);
+          DistributedRegionMXBean bean = ManagementService.getManagementService(getCache())
+              .getDistributedRegionMXBean(onRegion);
-            bean = ManagementService.getManagementService(GemFireCacheImpl.getInstance())
+            bean = ManagementService.getManagementService(getCache())
-  DistributedMember getMember(Cache cache, String memberNameOrId) {
+  DistributedMember getMember(InternalCache cache, String memberNameOrId) {
-      String[] arguments, Cache cache, DistributedMember member, TabularResultData resultTable,
-      String onRegion) {
+      String[] arguments, InternalCache cache, DistributedMember member,
+      TabularResultData resultTable, String onRegion) {
-      Cache cache = CacheFactory.getAnyInstance();
+      InternalCache cache = getCache();
-
-  Result executeFunction(Cache cache, Set<DistributedMember> DsMembers, String functionId) {
+  Result executeFunction(InternalCache cache, Set<DistributedMember> DsMembers, String functionId) {
-    Cache cache = CacheFactory.getAnyInstance();
+    InternalCache cache = getCache();
