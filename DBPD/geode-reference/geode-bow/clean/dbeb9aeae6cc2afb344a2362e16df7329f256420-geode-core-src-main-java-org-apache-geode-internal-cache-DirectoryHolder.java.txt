Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A holder for a disk Directory. Used for maintaining the available space and
- * updating disk statistics
+ * A holder for a disk Directory. Used for maintaining the available space and updating disk
+ * statistics
-public class DirectoryHolder
-{
+public class DirectoryHolder {
-  
+
-  
+
-  
+
-  
+
+
-    }
-    else {
-      //convert megabytes to bytes
+    } else {
+      // convert megabytes to bytes
+
-    sb.append("dir=").append(getDir())
-      .append(" maxSpace=").append(getCapacity())
-      .append(" usedSpace=").append(getUsedSpace())
-      .append(" availableSpace=").append(getAvailableSpace());
+    sb.append("dir=").append(getDir()).append(" maxSpace=").append(getCapacity())
+        .append(" usedSpace=").append(getUsedSpace()).append(" availableSpace=")
+        .append(getAvailableSpace());
-  public void incrementTotalOplogSize(long incrementSize)
-  {
+  public void incrementTotalOplogSize(long incrementSize) {
-  public void decrementTotalOplogSize(long decrementSize)
-  {
+  public void decrementTotalOplogSize(long decrementSize) {
-  public File getDir()
-  {
+  public File getDir() {
-  int getArrayIndex()
-  {
+  int getArrayIndex() {
-  public long getCapacity()
-  {
+  public long getCapacity() {
-  
+
-  //Added for the stats checking test in OplogJUnitTest
+  // Added for the stats checking test in OplogJUnitTest
-	return this.dirStats.getDiskSpace();
+    return this.dirStats.getDiskSpace();
-  
+
