GEODE-6626: Separate CacheServer and GatewayReceiver

Introduce new interfaces and then have GatewayReceiverServer extend
CacheServerImpl to override behavior.

-import org.apache.geode.internal.cache.CacheServerImpl;
+import org.apache.geode.internal.cache.InternalCacheServer;
-@SuppressWarnings("deprecation")
-  private final int timeBetPings;
+  private final int maximumTimeBetweenPings;
-  private final List<GatewayTransportFilter> filters;
-  private final String bindAdd;
+  private final List<GatewayTransportFilter> gatewayTransportFilters;
+  private final String bindAddress;
-  private CacheServer receiver;
-  private int port;
+  private volatile int port;
+  private volatile InternalCacheServer receiverServer;
-  GatewayReceiverImpl(InternalCache cache, int startPort, int endPort, int timeBetPings,
-      int buffSize, String bindAdd, List<GatewayTransportFilter> filters, String hostnameForSenders,
-      boolean manualStart) {
+  GatewayReceiverImpl(final InternalCache cache, final int startPort, final int endPort,
+      final int maximumTimeBetweenPings, final int socketBufferSize, final String bindAddress,
+      final List<GatewayTransportFilter> gatewayTransportFilters, final String hostnameForSenders,
+      final boolean manualStart) {
-    this.timeBetPings = timeBetPings;
-    socketBufferSize = buffSize;
-    this.bindAdd = bindAdd;
-    this.filters = filters;
+    this.maximumTimeBetweenPings = maximumTimeBetweenPings;
+    this.socketBufferSize = socketBufferSize;
+    this.bindAddress = bindAddress;
+    this.gatewayTransportFilters = gatewayTransportFilters;
-    if (receiver != null) {
-      return ((CacheServerImpl) receiver).getExternalAddress();
+    if (receiverServer != null) {
+      return receiverServer.getExternalAddress();
-    if (bindAdd != null && !bindAdd.isEmpty()) {
-      return bindAdd;
+    if (bindAddress != null && !bindAddress.isEmpty()) {
+      return bindAddress;
-    return filters;
+    return gatewayTransportFilters;
-    return timeBetPings;
+    return maximumTimeBetweenPings;
-    return receiver;
+    return receiverServer;
-    receiver.setPort(port);
-    receiver.setSocketBufferSize(socketBufferSize);
-    receiver.setMaximumTimeBetweenPings(timeBetPings);
+    CacheServer cacheServer = receiverServer;
+
+    cacheServer.setPort(port);
+    cacheServer.setSocketBufferSize(socketBufferSize);
+    cacheServer.setMaximumTimeBetweenPings(maximumTimeBetweenPings);
-      receiver.setHostnameForClients(hostnameForSenders);
+      cacheServer.setHostnameForClients(hostnameForSenders);
-    receiver.setBindAddress(bindAdd);
-    receiver.setGroups(new String[] {GatewayReceiver.RECEIVER_GROUP});
-    ((CacheServerImpl) receiver).setGatewayTransportFilter(filters);
+    cacheServer.setBindAddress(bindAddress);
+    cacheServer.setGroups(new String[] {GatewayReceiver.RECEIVER_GROUP});
+
-      receiver.start();
+      cacheServer.start();
-      logger.info("Failed to create server socket on  {}[{}]",
-          bindAdd, port);
+      logger.info("Failed to create server socket on {}[{}]", bindAddress, port);
-    if (receiver == null) {
-      receiver = cache.addCacheServer(true);
+    if (receiverServer == null) {
+      receiverServer = cache.addGatewayReceiverServer(this);
-    if (receiver.isRunning()) {
+
+    if (receiverServer.isRunning()) {
-    receiver.stop();
+
+    receiverServer.stop();
-    if (receiver == null) {
+
+    if (receiverServer == null) {
-      if (receiver.isRunning()) {
+      if (receiverServer.isRunning()) {
-      cache.removeCacheServer(receiver);
+      cache.removeGatewayReceiverServer(receiverServer);
+
-    return bindAdd;
+    return bindAddress;
-    if (receiver != null) {
-      return receiver.isRunning();
+    if (receiverServer != null) {
+      return receiverServer.isRunning();
