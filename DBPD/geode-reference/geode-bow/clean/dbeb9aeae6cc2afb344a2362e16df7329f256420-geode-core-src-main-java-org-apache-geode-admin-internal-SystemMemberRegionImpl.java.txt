Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//import org.apache.geode.internal.Assert;
-//import org.apache.geode.internal.admin.*;
+// import org.apache.geode.internal.Assert;
+// import org.apache.geode.internal.admin.*;
- * @since GemFire     3.5
+ * @since GemFire 3.5
-  public SystemMemberRegionImpl(SystemMemberCacheImpl cache, Region r)
-  {
+  public SystemMemberRegionImpl(SystemMemberCacheImpl cache, Region r) {
-    this.r = (AdminRegion)r;
+    this.r = (AdminRegion) r;
-        Region r = (Region)it.next();
+        Region r = (Region) it.next();
-  
+
-  
+
-    return (String)r.getUserAttribute();
+    return (String) r.getUserAttribute();
+
-  
+
-  
+
-  
+
-  
+
-   * This method will return an empty string if there are no CacheListeners
-   * defined on the region. If there are more than 1 CacheListeners defined,
-   * this method will return the description of the 1st CacheListener in the
-   * list returned by the getCacheListeners method. If there is only one
+   * This method will return an empty string if there are no CacheListeners defined on the region.
+   * If there are more than 1 CacheListeners defined, this method will return the description of the
+   * 1st CacheListener in the list returned by the getCacheListeners method. If there is only one
-    }
-    else {
+    } else {
-   * This method will return an empty array if there are no CacheListeners
-   * defined on the region. If there are one or more than 1 CacheListeners
-   * defined, this method will return an array which has the description of all
-   * the CacheListeners
+   * This method will return an empty array if there are no CacheListeners defined on the region. If
+   * there are one or more than 1 CacheListeners defined, this method will return an array which has
+   * the description of all the CacheListeners
-   * @return String[] the region's <code>CacheListeners</code> descriptions as a
-   *         String array
+   * @return String[] the region's <code>CacheListeners</code> descriptions as a String array
-    }
-    else {
+    } else {
-  
+
-  
+
-	/**
-	 * Returns a string representation of the object.
-	 * 
-	 * @return a string representation of the object
-	 */
+  /**
+   * Returns a string representation of the object.
+   * 
+   * @return a string representation of the object
+   */
-	public String toString() {
-		return getName();
-	}
+  public String toString() {
+    return getName();
+  }
-  public SystemMemberRegion createSubregion(String name,
-                                            RegionAttributes attrs)
-    throws AdminException {
+  public SystemMemberRegion createSubregion(String name, RegionAttributes attrs)
+      throws AdminException {
-    Region r =
-      this.cache.getVM().createSubregion(this.cache.getCacheInfo(),
-                                         this.getFullPath(), name, attrs);
+    Region r = this.cache.getVM().createSubregion(this.cache.getCacheInfo(), this.getFullPath(),
+        name, attrs);
-  
+
-  
+
