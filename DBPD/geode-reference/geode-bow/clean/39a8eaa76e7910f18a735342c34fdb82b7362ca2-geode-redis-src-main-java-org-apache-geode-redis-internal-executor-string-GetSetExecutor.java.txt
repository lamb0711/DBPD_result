GEODE-7886 Update strings tests to cover sad as well as happy paths (#4821)


Co-authored-by: Sarah Abbey <sabbey@pivotal.io>
+import org.apache.geode.cache.TimeoutException;
+import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.redis.internal.RedisConstants;
+import org.apache.geode.redis.internal.RedisDataType;
-    Region<ByteArrayWrapper, ByteArrayWrapper> r = context.getRegionProvider().getStringsRegion();
-
-    if (commandElems.size() < 3) {
+    if (commandElems.size() != 3) {
+    Region<ByteArrayWrapper, ByteArrayWrapper> region =
+        context.getRegionProvider().getStringsRegion();
+
-
-    ByteArrayWrapper oldValueWrapper = r.get(key);
-    r.put(key, newValueWrapper);
-
+    ByteArrayWrapper oldValueWrapper;
+    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
+      oldValueWrapper = region.get(key);
+      if (oldValueWrapper != null) {
+        try {
+          checkDataType(oldValueWrapper, RedisDataType.REDIS_STRING, context);
+        } catch (Exception e) {
+          command.setResponse(
+              Coder.getErrorResponse(context.getByteBufAllocator(),
+                  RedisConstants.ERROR_WRONG_TYPE));
+          return;
+        }
+      }
+      region.put(key, newValueWrapper);
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+      command.setResponse(
+          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
+      return;
+    } catch (TimeoutException e) {
+      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
+          "Timeout acquiring lock. Please try again."));
+      return;
+    }
