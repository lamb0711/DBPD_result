GEODE-6588: Cleanup static analyzer warnings and generics (#3646)


-  static final String CALLING_SYSTEM_EXIT =
+  private static final String CALLING_SYSTEM_EXIT =
-  public static final String DISTRIBUTION_HALTED_MESSAGE =
-      "Distribution halted due to JVM corruption";
-  public static final String DISTRIBUTED_SYSTEM_DISCONNECTED_MESSAGE =
-      "Distributed system disconnected due to JVM corruption";
-  public static final int WATCHDOG_WAIT =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "WATCHDOG_WAIT", 15).intValue();
+  private static final int WATCHDOG_WAIT =
+      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "WATCHDOG_WAIT", 15);
-  protected static void runWatchDog() {
+  private static void runWatchDog() {
-    for (;;) {
-      if (stopping) {
-        return;
-      }
+    while (!stopping) {
-
-  static long minimumMemoryThreshold = Long.getLong(
+  private static long minimumMemoryThreshold = Long.getLong(
-  public static final long MEMORY_POLL_INTERVAL =
+  private static final long MEMORY_POLL_INTERVAL =
-  public static final boolean MONITOR_MEMORY =
+  private static final boolean MONITOR_MEMORY =
-  protected static void runProctor() {
+  private static void runProctor() {
-            new Object[] {PROCTOR_NAME, Long.valueOf(minimumMemoryThreshold),
-                Long.valueOf(maxMemory), Integer.valueOf(WATCHDOG_WAIT)}));
+            PROCTOR_NAME, minimumMemoryThreshold, maxMemory, WATCHDOG_WAIT));
-    for (;;) {
-      if (isCacheClosing) {
-        break;
-      }
+    while (!isCacheClosing) {
-  /**
-   * If true, we track the progress of emergencyClose on System.err
-   */
-  public static final boolean TRACE_CLOSE = false;
+  private static final String WATCHDOG_NAME = "SystemFailure Watchdog";
-  protected static final String WATCHDOG_NAME = "SystemFailure Watchdog";
-
-  protected static final String PROCTOR_NAME = "SystemFailure Proctor";
+  private static final String PROCTOR_NAME = "SystemFailure Proctor";
-    if (TRACE_CLOSE) {
-      System.err.println("SystemFailure: closing GemFireCache");
-    }
-    if (TRACE_CLOSE) {
-      System.err.println("SystemFailure: closing admins");
-    }
-
-    if (TRACE_CLOSE) {
-      System.err.println("SystemFailure: end of emergencyClose");
-    }
-  private static void throwFailure() throws InternalGemFireError, Error {
+  private static void throwFailure() throws Error {
