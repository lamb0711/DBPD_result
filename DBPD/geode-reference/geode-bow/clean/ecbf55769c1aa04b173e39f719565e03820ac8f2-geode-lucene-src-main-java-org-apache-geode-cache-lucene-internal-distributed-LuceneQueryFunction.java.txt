GEODE-2825: Lucene query function will wait until index is returned if an index is defined

  * If an index is in a defined state but not yet created, the query will now wait
    until the index is created or no longer defined.  Instead of throwing an
    exception and possibly getting a stack overflow

-      if (index == null && service instanceof LuceneServiceImpl) {
-        if (((LuceneServiceImpl) service).getDefinedIndex(searchContext.getIndexName(),
-            region.getFullPath()) != null) {
-          // The node may be in the process of recovering, where we have the index defined but yet
-          // to be recovered
-          // If we retry fast enough, we could get a stack overflow based on the way function
-          // execution is currently written
-          // Instead we will add an artificial sleep to slow down the retry at this point
-          // Hopefully in the future, the function execution would retry without adding to the stack
-          // and this can be removed
+      if (index == null) {
+        while (service instanceof LuceneServiceImpl && (((LuceneServiceImpl) service)
+            .getDefinedIndex(searchContext.getIndexName(), region.getFullPath()) != null)) {
-            Thread.sleep(1000);
+            Thread.sleep(10);
-            Thread.currentThread().interrupt();
+            return null;
-          throw new InternalFunctionInvocationTargetException(
-              "Defined Lucene Index has not been created");
+          region.getCache().getCancelCriterion().checkCancelInProgress(null);
+        index =
+            (LuceneIndexImpl) service.getIndex(searchContext.getIndexName(), region.getFullPath());
+
+
