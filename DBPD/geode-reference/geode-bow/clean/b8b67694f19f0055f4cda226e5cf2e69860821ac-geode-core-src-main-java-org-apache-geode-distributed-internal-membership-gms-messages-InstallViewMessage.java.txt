Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.NetView;
+import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.Version;
-public class InstallViewMessage extends HighPriorityDistributionMessage {
+public class InstallViewMessage extends AbstractGMSMessage {
+
-  private NetView view;
+  private GMSMembershipView view;
-  public InstallViewMessage(NetView view, Object credentials, boolean preparing) {
+  public InstallViewMessage(GMSMembershipView view, Object credentials, boolean preparing) {
-  public InstallViewMessage(NetView view, Object credentials, int previousViewId,
+  public InstallViewMessage(GMSMembershipView view, Object credentials, int previousViewId,
-  public NetView getView() {
+  public GMSMembershipView getView() {
-  public int getPreviousViewId() {
-    return previousViewId;
-  }
-
+  public Version[] getSerializationVersions() {
+    return null;
+  }
+
+  @Override
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
-  }
-
-  @Override
-  public void toData(DataOutput out) throws IOException {
-    super.toData(out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
-    DataSerializer.writeObject(this.view, out);
-    DataSerializer.writeObject(this.credentials, out);
+    context.getSerializer().writeObject(this.view, out);
+    context.getSerializer().writeObject(this.credentials, out);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    super.fromData(in);
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
-    this.view = DataSerializer.readObject(in);
-    this.credentials = DataSerializer.readObject(in);
+    this.view = (GMSMembershipView) context.getDeserializer().readObject(in);
+    this.credentials = context.getDeserializer().readObject(in);
