Merge branch 'release/1.3.0'

+import org.apache.geode.security.ResourcePermission.Target;
-  public String showLog(int numberOfLines);
+  String showLog(int numberOfLines);
-  public String viewLicense();
+  String viewLicense();
-  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-  public String[] compactAllDiskStores();
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.MANAGE,
+      target = Target.DISK)
+  String[] compactAllDiskStores();
-  public boolean createManager();
+  boolean createManager();
-  public void shutDownMember();
+  void shutDownMember();
-  public JVMMetrics showJVMMetrics();
+  JVMMetrics showJVMMetrics();
-  public OSMetrics showOSMetrics();
+  OSMetrics showOSMetrics();
-   * Executes a command on the member.
+   * Executes a command on the member. this is the method that's used by the HttpOperationInvoker
+   * and JmxOperationInvoker
-  public String[] listDiskStores(boolean includeRegionOwned);
+  String[] listDiskStores(boolean includeRegionOwned);
-  public GemFireProperties listGemFireProperties();
+  GemFireProperties listGemFireProperties();
-  public String getHost();
+  String getHost();
-  public String getName();
+  String getName();
-  public String getId();
+  String getId();
-  public String getMember();
+  String getMember();
-  public String[] getGroups();
+  String[] getGroups();
-  public int getProcessId();
+  int getProcessId();
-  public String status();
+  String status();
-  public String getVersion();
+  String getVersion();
-  public boolean isLocator();
+  boolean isLocator();
-  public long getLockTimeout();
+  long getLockTimeout();
-  public long getLockLease();
+  long getLockLease();
-  public boolean isServer();
+  boolean isServer();
-   * @return True if this member has at least one GatwaySender, false otherwise.
+   * @return True if this member has at least one GatewaySender, false otherwise.
-  public boolean hasGatewaySender();
+  boolean hasGatewaySender();
-  public boolean isManager();
+  boolean isManager();
-  public boolean isManagerCreated();
+  boolean isManagerCreated();
-   * @return True if this member has at least one GatwayReceiver, false otherwise.
+   * @return True if this member has at least one GatewayReceiver, false otherwise.
-  public boolean hasGatewayReceiver();
+  boolean hasGatewayReceiver();
-  public String getClassPath();
+  String getClassPath();
-  public long getCurrentTime();
+  long getCurrentTime();
-  public long getMemberUpTime();
+  long getMemberUpTime();
-  public float getCpuUsage();
+  float getCpuUsage();
-  public long getCurrentHeapSize();
+  long getCurrentHeapSize();
-  public long getMaximumHeapSize();
+  long getMaximumHeapSize();
-  public long getFreeHeapSize();
+  long getFreeHeapSize();
-  public long getMaxMemory();
+  long getMaxMemory();
-  public long getFreeMemory();
+  long getFreeMemory();
-  public long getUsedMemory();
+  long getUsedMemory();
-  public String[] fetchJvmThreads();
+  String[] fetchJvmThreads();
-  public long getFileDescriptorLimit();
+  long getFileDescriptorLimit();
-  public long getTotalFileDescriptorOpen();
+  long getTotalFileDescriptorOpen();
-  public int getTotalRegionCount();
+  int getTotalRegionCount();
-  public int getPartitionRegionCount();
+  int getPartitionRegionCount();
-  public String[] listRegions();
+  String[] listRegions();
-  public String[] getDiskStores();
+  String[] getDiskStores();
-  public String[] getRootRegionNames();
+  String[] getRootRegionNames();
-  public int getTotalRegionEntryCount();
+  int getTotalRegionEntryCount();
-  public int getTotalBucketCount();
+  int getTotalBucketCount();
-  public int getTotalPrimaryBucketCount();
+  int getTotalPrimaryBucketCount();
-  public long getGetsAvgLatency();
+  long getGetsAvgLatency();
-  public long getPutsAvgLatency();
+  long getPutsAvgLatency();
-  public long getPutAllAvgLatency();
+  long getPutAllAvgLatency();
-  public int getTotalMissCount();
+  int getTotalMissCount();
-  public int getTotalHitCount();
+  int getTotalHitCount();
-  public float getGetsRate();
+  float getGetsRate();
-  public float getPutsRate();
+  float getPutsRate();
-  public float getPutAllRate();
+  float getPutAllRate();
-  public float getCreatesRate();
+  float getCreatesRate();
-  public float getDestroysRate();
+  float getDestroysRate();
-  public long getCacheWriterCallsAvgLatency();
+  long getCacheWriterCallsAvgLatency();
-  public long getCacheListenerCallsAvgLatency();
+  long getCacheListenerCallsAvgLatency();
-  public int getTotalLoadsCompleted();
+  int getTotalLoadsCompleted();
-  public long getLoadsAverageLatency();
+  long getLoadsAverageLatency();
-  public int getTotalNetLoadsCompleted();
+  int getTotalNetLoadsCompleted();
-  public long getNetLoadsAverageLatency();
+  long getNetLoadsAverageLatency();
-  public int getTotalNetSearchCompleted();
+  int getTotalNetSearchCompleted();
-  public long getNetSearchAverageLatency();
+  long getNetSearchAverageLatency();
-  public int getTotalDiskTasksWaiting();
+  int getTotalDiskTasksWaiting();
-  public float getBytesSentRate();
+  float getBytesSentRate();
-  public float getBytesReceivedRate();
+  float getBytesReceivedRate();
-  public String[] listConnectedGatewayReceivers();
+  String[] listConnectedGatewayReceivers();
-  public String[] listConnectedGatewaySenders();
+  String[] listConnectedGatewaySenders();
-  public int getNumRunningFunctions();
+  int getNumRunningFunctions();
-  public float getFunctionExecutionRate();
+  float getFunctionExecutionRate();
-   * Returns the number of currently executing functions that will return resutls.
+   * Returns the number of currently executing functions that will return results.
-  public int getNumRunningFunctionsHavingResults();
+  int getNumRunningFunctionsHavingResults();
-  public int getTotalTransactionsCount();
+  int getTotalTransactionsCount();
-  public long getTransactionCommitsAvgLatency();
+  long getTransactionCommitsAvgLatency();
-  public int getTransactionCommittedTotalCount();
+  int getTransactionCommittedTotalCount();
-  public int getTransactionRolledBackTotalCount();
+  int getTransactionRolledBackTotalCount();
-  public float getTransactionCommitsRate();
+  float getTransactionCommitsRate();
-  public float getDiskReadsRate();
+  float getDiskReadsRate();
-  public float getDiskWritesRate();
+  float getDiskWritesRate();
-  public long getDiskFlushAvgLatency();
+  long getDiskFlushAvgLatency();
-  public int getTotalBackupInProgress();
+  int getTotalBackupInProgress();
-  public int getTotalBackupCompleted();
+  int getTotalBackupCompleted();
-  public int getLockWaitsInProgress();
+  int getLockWaitsInProgress();
-  public long getTotalLockWaitTime();
+  long getTotalLockWaitTime();
-  public int getTotalNumberOfLockService();
+  int getTotalNumberOfLockService();
-  public int getTotalNumberOfGrantors();
+  int getTotalNumberOfGrantors();
-  public int getLockRequestQueues();
+  int getLockRequestQueues();
-  public float getLruEvictionRate();
+  float getLruEvictionRate();
-  public float getLruDestroyRate();
+  float getLruDestroyRate();
+
+  /**
+   * Returns the number of initial images in progress.
+   * 
+   * @deprecated as typo in name has been corrected: use
+   *             {@link MemberMXBean#getInitialImagesInProgress} instead.
+   */
+  @Deprecated
+  int getInitialImagesInProgres();
-  public int getInitialImagesInProgres();
+  int getInitialImagesInProgress();
-  public long getInitialImageTime();
+  long getInitialImageTime();
-  public int getInitialImageKeysReceived();
+  int getInitialImageKeysReceived();
-  public long getDeserializationAvgLatency();
+  long getDeserializationAvgLatency();
-  public long getDeserializationLatency();
+  long getDeserializationLatency();
-  public float getDeserializationRate();
+  float getDeserializationRate();
-  public long getSerializationAvgLatency();
+  long getSerializationAvgLatency();
-  public long getSerializationLatency();
+  long getSerializationLatency();
-  public float getSerializationRate();
+  float getSerializationRate();
-  public float getPDXDeserializationRate();
+  float getPDXDeserializationRate();
-  public long getPDXDeserializationAvgLatency();
+  long getPDXDeserializationAvgLatency();
-  public long getTotalDiskUsage();
+  long getTotalDiskUsage();
-  public int getNumThreads();
+  int getNumThreads();
-  public double getLoadAverage();
+  double getLoadAverage();
-  public long getGarbageCollectionCount();
+  long getGarbageCollectionCount();
-  public long getGarbageCollectionTime();
+  long getGarbageCollectionTime();
-  public float getAverageReads();
+  float getAverageReads();
-  public float getAverageWrites();
+  float getAverageWrites();
-  public long getJVMPauses();
+  long getJVMPauses();
-  public int getHostCpuUsage();
+  int getHostCpuUsage();
-  public boolean isCacheServer();
+  boolean isCacheServer();
-  public String getRedundancyZone();
+  String getRedundancyZone();
-  public int getRebalancesInProgress();
+  int getRebalancesInProgress();
-  public int getReplyWaitsInProgress();
+  int getReplyWaitsInProgress();
-  public int getReplyWaitsCompleted();
+  int getReplyWaitsCompleted();
-  public int getVisibleNodes();
+  int getVisibleNodes();
-  public int getOffHeapObjects();
+  int getOffHeapObjects();
-  public long getOffHeapMaxMemory();
+  long getOffHeapMaxMemory();
-  public long getOffHeapFreeMemory();
+  long getOffHeapFreeMemory();
-  public long getOffHeapUsedMemory();
+  long getOffHeapUsedMemory();
-  public int getOffHeapFragmentation();
+  int getOffHeapFragmentation();
-   * Returns the total time spent compacting in millseconds.
+   * Returns the total time spent compacting in milliseconds.
-  public long getOffHeapCompactionTime();
+  long getOffHeapCompactionTime();
