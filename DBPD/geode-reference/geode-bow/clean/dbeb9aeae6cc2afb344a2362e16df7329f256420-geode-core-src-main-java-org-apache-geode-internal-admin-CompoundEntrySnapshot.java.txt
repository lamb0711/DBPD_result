Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//import org.apache.geode.cache.*;
+// import org.apache.geode.cache.*;
- * Presents an amalgam snapshot of all the {@linkplain
- * org.apache.geode.cache.Region.Entry regions entries} in a
- * distributed system.
+ * Presents an amalgam snapshot of all the {@linkplain org.apache.geode.cache.Region.Entry regions
+ * entries} in a distributed system.
-  
-  private long lastModifiedTime = 0L; //the latest modified time
-  private long lastAccessTime   = 0L; //the latest access time
-  private long numHits          = 0L; //sum of all hits
-  private long numMisses        = 0L; //sum of all misses
-  private float hitRatio        = 0f; //calculated from all
-  private long hitResponders    = 0;
-  private double hitRatioSum    = 0.0;
-  //private Map individuals      = new HashMap();
-  private Set allValues        = new HashSet();
+
+  private long lastModifiedTime = 0L; // the latest modified time
+  private long lastAccessTime = 0L; // the latest access time
+  private long numHits = 0L; // sum of all hits
+  private long numMisses = 0L; // sum of all misses
+  private float hitRatio = 0f; // calculated from all
+  private long hitResponders = 0;
+  private double hitRatioSum = 0.0;
+  // private Map individuals = new HashMap();
+  private Set allValues = new HashSet();
-   * Creates a <code>CompoundEntrySnapshot</code> for the region entry
-   * with the given key ("name").
+   * Creates a <code>CompoundEntrySnapshot</code> for the region entry with the given key ("name").
-   * Amalgamates an <code>EntrySnapshot</code> into this
-   * <code>CompoundEntrySnapshot</code>. 
+   * Amalgamates an <code>EntrySnapshot</code> into this <code>CompoundEntrySnapshot</code>.
-   * @param systemEntity
-   *        The member of the distributed system that sent the
-   *        snapshot
-   * @param snap
-   *        The snapshot to be amalgamated
+   * @param systemEntity The member of the distributed system that sent the snapshot
+   * @param snap The snapshot to be amalgamated
-   * @throws IllegalArgumentException
-   *         If <code>snap</code> is for a region entry other than the
-   *         one amalgamated by this snapshot.
+   * @throws IllegalArgumentException If <code>snap</code> is for a region entry other than the one
+   *         amalgamated by this snapshot.
-      throw new IllegalArgumentException(LocalizedStrings.CompoundEntrySnapshot_ALL_SNAPSHOTS_IN_A_COMPOUND_SNAPSHOT_MUST_HAVE_THE_SAME_NAME.toLocalizedString());
+      throw new IllegalArgumentException(
+          LocalizedStrings.CompoundEntrySnapshot_ALL_SNAPSHOTS_IN_A_COMPOUND_SNAPSHOT_MUST_HAVE_THE_SAME_NAME
+              .toLocalizedString());
-    //individuals.put(systemEntity, snap);
+    // individuals.put(systemEntity, snap);
-    
+
-      this.hitRatio = (float)(hitRatioSum/hitResponders);      
+      this.hitRatio = (float) (hitRatioSum / hitResponders);
-  }  
+  }
-   * Returns the name ("key") of the region entry amalgamated by this
-   * snapshot. 
+   * Returns the name ("key") of the region entry amalgamated by this snapshot.
-   * Since this snapshot does not represent a single region entry,
-   * this method returns <code>null</code>.
+   * Since this snapshot does not represent a single region entry, this method returns
+   * <code>null</code>.
-   * Since this snapshot does not represent a single region entry,
-   * this method returns <code>null</code>.
+   * Since this snapshot does not represent a single region entry, this method returns
+   * <code>null</code>.
-   * Returns an <code>Iterator</code> containing the value of this
-   * region entry across all <code>Region</code> instances in the
-   * distributed system.
+   * Returns an <code>Iterator</code> containing the value of this region entry across all
+   * <code>Region</code> instances in the distributed system.
-   * Returns an <code>Iterator</code> containing the
-   * <code>userAttributes</code> of this region entry across all
-   * <code>Region</code> instances in the distributed system.
+   * Returns an <code>Iterator</code> containing the <code>userAttributes</code> of this region
+   * entry across all <code>Region</code> instances in the distributed system.
-   * Returns the most recent <code>lastModifiedTime</code> of any
-   * instance of this snapshot's region entry across the
-   * distributed system.
+   * Returns the most recent <code>lastModifiedTime</code> of any instance of this snapshot's region
+   * entry across the distributed system.
-   * Returns the most recent <code>lastAccessTime</code> of any
-   * instance of this snapshot's region entry across the
-   * distributed system.
+   * Returns the most recent <code>lastAccessTime</code> of any instance of this snapshot's region
+   * entry across the distributed system.
-   * Returns the cumulative number of hits across all instances of the
-   * snapshot's region entry.
+   * Returns the cumulative number of hits across all instances of the snapshot's region entry.
-   * Returns the cumulative number of misses across all instances of
-   * this snapshot's region entry.
+   * Returns the cumulative number of misses across all instances of this snapshot's region entry.
-  
+
-   * Returns the aggregate hit ratio across all instances of this
-   * snapshot's region entry.
+   * Returns the aggregate hit ratio across all instances of this snapshot's region entry.
