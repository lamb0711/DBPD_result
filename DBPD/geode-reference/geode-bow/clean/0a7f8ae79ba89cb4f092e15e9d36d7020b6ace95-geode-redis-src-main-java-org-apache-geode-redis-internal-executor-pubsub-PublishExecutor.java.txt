GEODE-8168: Redis pipelined command responses can be corrupted (#5145)


-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import io.netty.buffer.ByteBuf;
-
-import org.apache.geode.redis.internal.Coder;
+import org.apache.geode.redis.internal.RedisResponse;
-  private ExecutorService executorService = Executors.newSingleThreadExecutor();
-
-  public void executeCommand(Command command, ExecutionHandlerContext context) {
+  public RedisResponse executeCommandWithResponse(Command command,
+      ExecutionHandlerContext context) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.PUBLISH));
-      return;
+      return RedisResponse.error(ArityDef.PUBLISH);
+    long publishCount = context.getPubSub().publish(channelName, args.get(2));
-    executorService.submit(new PublishingRunnable(context, channelName, args.get(2)));
-  }
-
-  public static class PublishingRunnable implements Runnable {
-
-    private final ExecutionHandlerContext context;
-    private final String channelName;
-    private final byte[] message;
-
-    public PublishingRunnable(ExecutionHandlerContext context, String channelName, byte[] message) {
-      this.context = context;
-      this.channelName = channelName;
-      this.message = message;
-    }
-
-    @Override
-    public void run() {
-      long publishCount = context.getPubSub().publish(channelName, message);
-      ByteBuf response = Coder.getIntegerResponse(context.getByteBufAllocator(), publishCount);
-      context.writeToChannel(response);
-    }
+    return RedisResponse.integer(publishCount);
