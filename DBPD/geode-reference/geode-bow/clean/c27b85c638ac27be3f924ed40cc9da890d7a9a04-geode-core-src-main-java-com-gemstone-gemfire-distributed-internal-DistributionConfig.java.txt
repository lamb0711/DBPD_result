GEODE-420: Initial Alias defintion and removal of deprecated SSL-ENABLED properties

-   *
-   *
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
-   *                                                    when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
+   * when writing to the system's configuration file.
-   *
-   *              Multiple elements are allowed and must be seperated by a comma.
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * Multiple elements are allowed and must be seperated by a comma.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
-   *                                                    when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
+   * when writing to the system's configuration file.
-   *
-   *
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
-   *                                                    when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
+   * when writing to the system's configuration file.
-   *
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
-   *                                                    when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
+   * when writing to the system's configuration file.
-   *
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
-   *                                                    when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
+   * when writing to the system's configuration file.
-   * Returns the value of the {@link ConfigurationProperties#SSL_ENABLED}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #getClusterSSLEnabled} instead.
-   */
-  @ConfigAttributeGetter(name = SSL_ENABLED)
-  boolean getSSLEnabled();
-
-  /**
-   * The default {@link ConfigurationProperties#SSL_ENABLED} state.
-   * <p> Actual value of this constant is <code>false</code>.
-   *
-   * @deprecated as of 8.0 use {@link #DEFAULT_CLUSTER_SSL_ENABLED} instead.
-   */
-  boolean DEFAULT_SSL_ENABLED = false;
-
-  /**
-   * The name of the {@link ConfigurationProperties#SSL_ENABLED} property
-   *
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_ENABLED_NAME} instead.
-   */
-  @ConfigAttribute(type = Boolean.class)
-  String SSL_ENABLED_NAME = SSL_ENABLED;
-
-  /**
-   * Sets the value of the {@link ConfigurationProperties#SSL_ENABLED}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #setClusterSSLEnabled} instead.
-   */
-  @ConfigAttributeSetter(name = SSL_ENABLED)
-  void setSSLEnabled(boolean enabled);
-
-  /**
-   * Returns the value of the {@link ConfigurationProperties#SSL_PROTOCOLS}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #getClusterSSLProtocols} instead.
-   */
-  @ConfigAttributeGetter(name = SSL_PROTOCOLS)
-  String getSSLProtocols();
-
-  /**
-   * Sets the value of the {@link ConfigurationProperties#SSL_PROTOCOLS}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #setClusterSSLProtocols} instead.
-   */
-  @ConfigAttributeSetter(name = SSL_PROTOCOLS)
-  void setSSLProtocols(String protocols);
-
-  /**
-   * The default {@link ConfigurationProperties#SSL_PROTOCOLS} value.
-   * <p> Actual value of this constant is <code>any</code>.
-   *
-   * @deprecated as of 8.0 use {@link #DEFAULT_CLUSTER_SSL_PROTOCOLS} instead.
-   */
-  String DEFAULT_SSL_PROTOCOLS = "any";
-  /**
-   * The name of the {@link ConfigurationProperties#SSL_PROTOCOLS} property
-   *
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_PROTOCOLS_NAME} instead.
-   */
-  @ConfigAttribute(type = String.class)
-  String SSL_PROTOCOLS_NAME = SSL_PROTOCOLS;
-
-  /**
-   * Returns the value of the {@link ConfigurationProperties#SSL_CIPHERS}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #getClusterSSLCiphers} instead.
-   */
-  @ConfigAttributeGetter(name = SSL_CIPHERS)
-  String getSSLCiphers();
-
-  /**
-   * Sets the value of the {@link ConfigurationProperties#SSL_CIPHERS}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #setClusterSSLCiphers} instead.
-   */
-  @ConfigAttributeSetter(name = SSL_CIPHERS)
-  void setSSLCiphers(String ciphers);
-
-  /**
-   * The default {@link ConfigurationProperties#SSL_CIPHERS} value.
-   * <p> Actual value of this constant is <code>any</code>.
-   *
-   * @deprecated as of 8.0 use {@link #DEFAULT_CLUSTER_SSL_CIPHERS} instead.
-   */
-  String DEFAULT_SSL_CIPHERS = "any";
-  /**
-   * The name of the {@link ConfigurationProperties#SSL_CIPHERS} property
-   *
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_CIPHERS_NAME} instead.
-   */
-  @ConfigAttribute(type = String.class)
-  String SSL_CIPHERS_NAME = SSL_CIPHERS;
-
-  /**
-   * Returns the value of the {@link ConfigurationProperties#SSL_REQUIRE_AUTHENTICATION}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #getClusterSSLRequireAuthentication} instead.
-   */
-  @ConfigAttributeGetter(name = SSL_REQUIRE_AUTHENTICATION)
-  boolean getSSLRequireAuthentication();
-
-  /**
-   * Sets the value of the {@link ConfigurationProperties#SSL_REQUIRE_AUTHENTICATION}
-   * property.
-   *
-   * @deprecated as of 8.0 use {@link #setClusterSSLRequireAuthentication} instead.
-   */
-  @ConfigAttributeSetter(name = SSL_REQUIRE_AUTHENTICATION)
-  void setSSLRequireAuthentication(boolean enabled);
-
-  /**
-   * The default {@link ConfigurationProperties#SSL_REQUIRE_AUTHENTICATION} value.
-   * <p> Actual value of this constant is <code>true</code>.
-   *
-   * @deprecated as of 8.0 use {@link #DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION} instead.
-   */
-  boolean DEFAULT_SSL_REQUIRE_AUTHENTICATION = true;
-  /**
-   * The name of the {@link ConfigurationProperties#SSL_REQUIRE_AUTHENTICATION} property
-   *
-   * @deprecated as of 8.0 use {@link #CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME} instead.
-   */
-  @ConfigAttribute(type = Boolean.class)
-  String SSL_REQUIRE_AUTHENTICATION_NAME = SSL_REQUIRE_AUTHENTICATION;
-
-  /**
-   *
-   *
-   *
-   *
-   *
-   *
-      = new FlowControlParams(1048576, (float) 0.25, 5000);
+    = new FlowControlParams(1048576, (float) 0.25, 5000);
-   *
-   *
-   *
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error when writing to
-   *                                                    the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error when writing to
+   * the system's configuration file.
-   *
-   *
+   * The static String definition of the cluster ssl prefix <i>"cluster-ssl"</i> used in conjunction with other <i>cluster-ssl-*</i> properties property
+   * <a name="cluster-ssl"/a></p>
+   * <U>Description</U>: The cluster-ssl property prefix
+   */
+  String CLUSTER_SSL_PREFIX = "cluster-ssl";
+
+  /**
-   *
-   *
-   *
-   *
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProperties()}
-   *
-   *
-   * @throws IllegalArgumentException                   if the specified value is not acceptable.
+   * @throws IllegalArgumentException if the specified value is not acceptable.
-   * @throws com.gemstone.gemfire.GemFireIOException    if the set failure is caused by an error
-   *                                                    when writing to the system's configuration file.
+   * @throws com.gemstone.gemfire.GemFireIOException if the set failure is caused by an error
+   * when writing to the system's configuration file.
-   *
-   * @deprecated as of 8.0 use {@link #getJmxManagerSSLEnabled} instead.
-   */
-  @ConfigAttributeGetter(name = JMX_MANAGER_SSL)
-  boolean getJmxManagerSSL();
-
-  /**
-   * @deprecated as of 8.0 use {@link #setJmxManagerSSLEnabled} instead.
-   */
-  @ConfigAttributeSetter(name = JMX_MANAGER_SSL)
-  void setJmxManagerSSL(boolean value);
-
-  /**
-   * @deprecated as of 8.0 use {@link #JMX_MANAGER_SSL_ENABLED_NAME} instead.
-   */
-  @ConfigAttribute(type = Boolean.class)
-  String JMX_MANAGER_SSL_NAME = JMX_MANAGER_SSL;
-
-  /**
-   * @deprecated as of 8.0 use {@link #DEFAULT_JMX_MANAGER_SSL_ENABLED} instead.
-   */
-  boolean DEFAULT_JMX_MANAGER_SSL = false;
-
-  /**
+   * @deprecated Geode 1.0 use {@link #getClusterSSLEnabled()}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_ENABLED}
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_ENABLED}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLEnabled(boolean)}
-   *
-   *
-   *
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProtocols()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLProtocols(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_PROTOCOLS}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_PROTOCOLS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_PROTOCOLS}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLCiphers()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLCiphers(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_CIPHERS}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_CIPHERS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_CIPHERS}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLRequireAuthentication()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLRequireAuthentication(boolean)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_REQUIRE_AUTHENTICATION} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_KEYSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStoreType()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStoreType(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_TYPE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_KEYSTORE_TYPE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_TYPE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_KEYSTORE_PASSWORD} propery
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_TRUSTSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_HTTP_PORT} property
+   * Set the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_HTTP_PORT} for jmx-manager.
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#JMX_MANAGER_HTTP_PORT} property.
-   *
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#MEMCACHED_PORT} property
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#MEMCACHED_PROTOCOL} property
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#MEMCACHED_BIND_ADDRESS} property
-   * @return the bind address for GeodeRedisServer
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#REDIS_BIND_ADDRESS} property
+   * @return the bind address for GemFireRedisServer
-   * @return the authentication password for GeodeRedisServer
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#REDIS_PASSWORD} property
+   * @return the authentication password for GemFireRedisServer
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_PORT} property
+   * Set the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_PORT} for HTTP service.
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_PORT} property
-   *
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_BIND_ADDRESS} property
+   * Set the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_BIND_ADDRESS} for HTTP service.
-   *
+   * @deprecated Geode 1.0 use {@link #getClusterSSLEnabled()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLEnabled(boolean)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_ENABLED}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_ENABLED} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_ENABLED}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLRequireAuthentication()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLRequireAuthentication(boolean)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_REQUIRE_AUTHENTICATION} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProtocols()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLProtocols(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_PROTOCOLS}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_PROTOCOLS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_PROTOCOLS}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLCiphers()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLCiphers(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_CIPHERS}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_CIPHERS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_CIPHERS}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_KEYSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_KEYSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStoreType()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStoreType(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_TYPE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_KEYSTORE_TYPE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_TYPE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_TRUSTSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+  /**
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProperties()}
+   */
+   * Returns the value of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#START_DEV_REST_API} property
+   * Set the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#START_DEV_REST_API} for HTTP service.
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#START_DEV_REST_API} property
-   *
+  /**
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProperties()}
+   */
+   * @deprecated Geode 1.0 use {@link #getClusterSSLEnabled()}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_ENABLED}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_ENABLED} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_ENABLED}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLEnabled(boolean)}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProtocols()}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_PROTOCOLS}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_PROTOCOLS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_PROTOCOLS}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLCiphers()} 
+   * @deprecated Geode 1.0 use {@link #setClusterSSLCiphers(String)} 
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_CIPHERS} 
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_CIPHERS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_CIPHERS} 
+   * @deprecated Geode 1.0 use {@link #getClusterSSLRequireAuthentication()} 
+   * @deprecated Geode 1.0 use {@link #setClusterSSLRequireAuthentication(boolean)} 
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_REQUIRE_AUTHENTICATION} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_KEYSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStoreType()}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_TYPE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_KEYSTORE_TYPE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_TYPE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStorePassword()}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_KEYSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStore()}
+   * @deprecated Geode 1.0 use {@link #setServerSSLTrustStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_TRUSTSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#SERVER_SSL_TRUSTSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLEnabled()}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_ENABLED}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_ENABLED} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_ENABLED}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLEnabled()}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProtocols()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_PROTOCOLS}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_PROTOCOLS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_PROTOCOLS}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLCiphers()} 
+   * @deprecated Geode 1.0 use {@link #setClusterSSLCiphers(String)} 
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_CIPHERS} 
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_CIPHERS} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_CIPHERS} 
+   * @deprecated Geode 1.0 use {@link #getClusterSSLRequireAuthentication()}
+   * @deprecated Geode 1.0 use {@link #setGatewaySSLRequireAuthentication(boolean)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_REQUIRE_AUTHENTICATION} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_REQUIRE_AUTHENTICATION}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_KEYSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStoreType(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_TYPE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_KEYSTORE_TYPE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_TYPE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLKeyStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_KEYSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_KEYSTORE_PASSWORD}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStore()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLTrustStore(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_TRUSTSTORE} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE}
+   * @deprecated Geode 1.0 use {@link #getClusterSSLTrustStorePassword()}
+   * @deprecated Geode 1.0 use {@link #setClusterSSLKeyStorePassword(String)}
+   * @deprecated Geode 1.0 use {@link #DEFAULT_CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+   * The name of the {@link com.gemstone.gemfire.distributed.ConfigurationProperties#GATEWAY_SSL_TRUSTSTORE_PASSWORD} property
+   * @deprecated Geode 1.0 use {@link com.gemstone.gemfire.distributed.ConfigurationProperties#CLUSTER_SSL_TRUSTSTORE_PASSWORD}
+  /**
+   * @deprecated Geode 1.0 use {@link #getClusterSSLProperties()}
+   */
-   *
+   * Gets the value of {@link com.gemstone.gemfire.distributed.ConfigurationProperties#LOCK_MEMORY}
+
+  /**
+   * Returns the value of the {@link ConfigurationProperties#CLUSTER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeGetter(name = CLUSTER_SSL_ALIAS)
+  String getClusterSSLAlias();
+
+  /**
+   * Sets the value of the {@link ConfigurationProperties#CLUSTER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeSetter(name = CLUSTER_SSL_ALIAS)
+  void setClusterSSLAlias(String alias);
+
+  String DEFAULT_CLUSTER_SSL_ALIAS = "";
+
+  /**
+   * The name of the {@link ConfigurationProperties#CLUSTER_SSL_ALIAS} property
+   */
+  @ConfigAttribute(type = String.class)
+  String CLUSTER_SSL_ALIAS_NAME = CLUSTER_SSL_ALIAS;
+
+  /**
+   * Returns the value of the {@link ConfigurationProperties#GATEWAY_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeGetter(name = GATEWAY_SSL_ALIAS)
+  String getGatewaySSLAlias();
+
+  /**
+   * Sets the value of the {@link ConfigurationProperties#GATEWAY_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeSetter(name = GATEWAY_SSL_ALIAS)
+  void setGatewaySSLAlias(String alias);
+
+  /**
+   * The name of the {@link ConfigurationProperties#GATEWAY_SSL_ALIAS} property
+   */
+  @ConfigAttribute(type = String.class)
+  String GATEWAY_SSL_ALIAS_NAME = GATEWAY_SSL_ALIAS;
+
+  /**
+   * Returns the value of the {@link ConfigurationProperties#CLUSTER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeGetter(name = HTTP_SERVICE_SSL_ALIAS)
+  String getHTTPServiceSSLAlias();
+
+  /**
+   * Sets the value of the {@link ConfigurationProperties#HTTP_SERVICE_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeSetter(name = HTTP_SERVICE_SSL_ALIAS)
+  void setHTTPServiceSSLAlias(String alias);
+
+  /**
+   * The name of the {@link ConfigurationProperties#HTTP_SERVICE_SSL_ALIAS} property
+   */
+  @ConfigAttribute(type = String.class)
+  String HTTP_SERVICE_SSL_ALIAS_NAME = HTTP_SERVICE_SSL_ALIAS;
+
+  /**
+   * Returns the value of the {@link ConfigurationProperties#JMX_MANAGER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeGetter(name = JMX_MANAGER_SSL_ALIAS)
+  String getJMXManagerSSLAlias();
+
+  /**
+   * Sets the value of the {@link ConfigurationProperties#JMX_MANAGER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeSetter(name = JMX_MANAGER_SSL_ALIAS)
+  void setJMXManagerSSLAlias(String alias);
+
+  /**
+   * The name of the {@link ConfigurationProperties#JMX_MANAGER_SSL_ALIAS} property
+   */
+  @ConfigAttribute(type = String.class)
+  String JMX_MANAGER_SSL_ALIAS_NAME = JMX_MANAGER_SSL_ALIAS;
+
+  /**
+   * Returns the value of the {@link ConfigurationProperties#SERVER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeGetter(name = SERVER_SSL_ALIAS)
+  String getServerSSLAlias();
+
+  /**
+   * Sets the value of the {@link ConfigurationProperties#SERVER_SSL_ALIAS}
+   * property.
+   */
+  @ConfigAttributeSetter(name = SERVER_SSL_ALIAS)
+  void setServerSSLAlias(String alias);
+
+  /**
+   * The name of the {@link ConfigurationProperties#SERVER_SSL_ALIAS} property
+   */
+  @ConfigAttribute(type = String.class)
+  String SERVER_SSL_ALIAS_NAME = SERVER_SSL_ALIAS;
+
-        } catch (IllegalAccessException e) {
+        }
+        catch (IllegalAccessException e) {
-      } else if (method.isAnnotationPresent(ConfigAttributeSetter.class)) {
+      }
+      else if (method.isAnnotationPresent(ConfigAttributeSetter.class)) {
