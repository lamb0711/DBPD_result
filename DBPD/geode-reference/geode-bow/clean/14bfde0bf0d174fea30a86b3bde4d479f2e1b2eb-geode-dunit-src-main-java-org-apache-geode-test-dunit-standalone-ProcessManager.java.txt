Merge branch 'release/1.8.0'

+import org.apache.commons.lang.SystemUtils;
-      linkStreams(version, vmNum, holder, process.getErrorStream(), System.err);
-      linkStreams(version, vmNum, holder, process.getInputStream(), System.out);
+      linkStreams(version, vmNum, holder, holder.getErrorStream(), System.err);
+      linkStreams(version, vmNum, holder, holder.getInputStream(), System.out);
-      holder.getProcess().waitFor();
+      holder.waitFor();
+    cmds.add("-XX:SoftRefLRUPolicyMSPerMB=1");
+    if (SystemUtils.isJavaVersionAtLeast(900)) {
+      // needed for client stats gathering, see VMStats50 class, it's using class inspection
+      // to call getProcessCpuTime method
+      cmds.add("--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED");
+      // needed for server side code
+      cmds.add("--add-opens=java.xml/jdk.xml.internal=ALL-UNNAMED");
+      cmds.add("--add-opens=java.base/jdk.internal.module=ALL-UNNAMED");
+      cmds.add("--add-opens=java.base/java.lang.module=ALL-UNNAMED");
+    }
-  public static class ProcessHolder {
-    private final Process process;
-    private volatile boolean killed = false;
-
-    public ProcessHolder(Process process) {
-      this.process = process;
-    }
-
-    public void kill() {
-      this.killed = true;
-      process.destroy();
-    }
-
-    public void killForcibly() {
-      this.killed = true;
-      process.destroyForcibly();
-    }
-
-    public Process getProcess() {
-      return process;
-    }
-
-    public boolean isKilled() {
-      return killed;
-    }
-
-    public boolean isAlive() {
-      return !killed && process.isAlive();
-    }
-  }
-
