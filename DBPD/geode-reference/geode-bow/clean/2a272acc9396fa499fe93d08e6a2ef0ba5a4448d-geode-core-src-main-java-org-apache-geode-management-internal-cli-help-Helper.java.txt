GEODE-2880: fix help, hint, regionName, filePath value completions

+  static final String AVAILABLE = "Available";
+  static final String NOT_AVAILABLE = "Not Available";
+  /**
+   * get help string for a specific command, or a brief description of all the commands if buffer is
+   * null or empty
+   */
+    if (StringUtils.isBlank(buffer)) {
+      return getHelp().toString(terminalWidth);
+    }
+
-    return getHelp(method).toString(terminalWidth);
+
+    HelpBlock helpBlock = getHelp(method.getDeclaredAnnotation(CliCommand.class),
+        method.getParameterAnnotations(), method.getParameterTypes());
+    return helpBlock.toString(terminalWidth);
-  private HelpBlock getHelp(Method method) {
-    return getHelp(method.getDeclaredAnnotation(CliCommand.class), method.getParameterAnnotations(),
-        method.getParameterTypes());
+  public Set<String> getTopicNames() {
+    return topics.keySet();
+  boolean isAvailable(String command) {
+    MethodTarget target = availabilityIndicators.get(command);
+    if (target == null) {
+      return true;
+    }
+    try {
+      return (Boolean) target.getMethod().invoke(target.getTarget());
+    } catch (Exception e) {
+      return false;
+    }
+  }
+
+  HelpBlock getHelp() {
+    HelpBlock root = new HelpBlock();
+    commands.keySet().stream().sorted().map(commands::get).forEach(method -> {
+      root.addChild(getHelp(method.getDeclaredAnnotation(CliCommand.class), null, null));
+    });
+    return root;
+  }
+
+  /**
+   * returns a short description and help string of the command if annotations is null or returns a
+   * details description of the command with the syntax and parameter description
+   */
+    boolean isAvailable = isAvailable(commandName);
+
+    if (annotations == null && parameterTypes == null) {
+      String available = isAvailable ? AVAILABLE : NOT_AVAILABLE;
+      HelpBlock help = new HelpBlock(commandName + " (" + available + ")");
+      help.addChild(new HelpBlock(cliCommand.help()));
+      return help;
+    }
+
-    boolean available = true;
-    MethodTarget target = availabilityIndicators.get(commandName);
-    if (target != null) {
-      try {
-        available = (Boolean) target.getMethod().invoke(target.getTarget());
-      } catch (Exception e) {
-      }
-    }
-    availability.addChild(new HelpBlock(available + ""));
+    availability.addChild(new HelpBlock(isAvailable + ""));
