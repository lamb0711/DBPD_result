GEODE-2410: Lucene afterPrimary and afterSecondary calls pass through the same crit section.

	* afterPrimary and afterSecondary calls are passed through the same critical section.
	* If the caller is primary bucket, it will try to acquire a Dlock on the bucket and create the index repo.
	* If it is secondary it will clean up the repo - close the writer and release the locks.
	* If the primary changes to secondary while waiting for indexes to be created, it will exit from the critical section without acquiring the lock.

-import org.apache.geode.cache.Region;
-      repo = createOneIndexRepository(bucketId, this.serializer, this.index, this.userRegion);
+      repo = computeRepository(bucketId, this.serializer, this.index, this.userRegion, repo);
-  public IndexRepository createOneIndexRepository(Integer bucketId, LuceneSerializer serializer,
-      LuceneIndexImpl index, PartitionedRegion userRegion) throws IOException {
-    return indexRepositoryFactory.createIndexRepository(bucketId, serializer, index, userRegion);
+  public IndexRepository computeRepository(Integer bucketId, LuceneSerializer serializer,
+      LuceneIndexImpl index, PartitionedRegion userRegion, IndexRepository oldRepository)
+      throws IOException {
+    return indexRepositoryFactory.computeIndexRepository(bucketId, serializer, index, userRegion,
+        oldRepository);
