Merge branch 'release/1.4.0'

+import java.util.ArrayList;
-import java.util.concurrent.atomic.AtomicReference;
-import org.apache.geode.management.internal.cli.CliUtil;
-    AtomicReference<XmlEntity> xmlEntity = new AtomicReference<>();
+    List<XmlEntity> xmlEntities = new ArrayList<>();
-      final Set<DistributedMember> targetMembers = CliUtil.findMembers(group, memberNameOrID);
+      final Set<DistributedMember> targetMembers = findMembers(group, memberNameOrID);
-      final ResultCollector<?, ?> rc = CliUtil.executeFunction(createDefinedIndexesFunction,
+      final ResultCollector<?, ?> rc = executeFunction(createDefinedIndexesFunction,
-            if (xmlEntity.get() == null) {
-              xmlEntity.set(cliFunctionResult.getXmlEntity());
+            // Only add the XmlEntity if it wasn't previously added from the result of another
+            // successful member.
+            XmlEntity resultEntity = cliFunctionResult.getXmlEntity();
+            if ((null != resultEntity) && (!xmlEntities.contains(resultEntity))) {
+              xmlEntities.add(cliFunctionResult.getXmlEntity());
+
+      // TODO: GEODE-3916.
+      // The index creation might succeed in some members and fail in others, the current logic only
+      // reports to the user the members on which the operation was successful, giving no details
+      // about the failures. We should report the exact details of what failed/succeeded, and
+      // where/why.
-    if (xmlEntity.get() != null) {
+    for (XmlEntity xmlEntity : xmlEntities) {
-          () -> getSharedConfiguration().addXmlEntity(xmlEntity.get(), group));
+          () -> getSharedConfiguration().addXmlEntity(xmlEntity, group));
+
