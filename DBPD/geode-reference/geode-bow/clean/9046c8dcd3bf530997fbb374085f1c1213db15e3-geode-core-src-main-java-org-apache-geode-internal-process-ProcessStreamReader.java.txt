GEODE-2966: RefactorLauncherLifecycleCommands

 - Extract several commands into their own classes.
 - Extract utility methods into their own classes.
 - Rename AbstractCommandsSupport to GfshCommand, and convert it from an abstract class to an interface

+import org.apache.commons.lang.SystemUtils;
+  private static final int DEFAULT_PROCESS_OUTPUT_WAIT_TIME_MILLISECONDS = 5000;
+  public static String waitAndCaptureProcessStandardOutputStream(final Process process) {
+    return waitAndCaptureProcessStandardOutputStream(process,
+        DEFAULT_PROCESS_OUTPUT_WAIT_TIME_MILLISECONDS);
+  }
+
+  public static String waitAndCaptureProcessStandardOutputStream(final Process process,
+      final long waitTimeMilliseconds) {
+    return waitAndCaptureProcessStream(process, process.getInputStream(), waitTimeMilliseconds);
+  }
+
+  public static String waitAndCaptureProcessStandardErrorStream(final Process process) {
+    return waitAndCaptureProcessStandardErrorStream(process,
+        DEFAULT_PROCESS_OUTPUT_WAIT_TIME_MILLISECONDS);
+  }
+
+  public static String waitAndCaptureProcessStandardErrorStream(final Process process,
+      final long waitTimeMilliseconds) {
+    return waitAndCaptureProcessStream(process, process.getErrorStream(), waitTimeMilliseconds);
+  }
+
+  private static String waitAndCaptureProcessStream(final Process process,
+      final InputStream processInputStream, long waitTimeMilliseconds) {
+    final StringBuffer buffer = new StringBuffer();
+
+    InputListener inputListener = line -> {
+      buffer.append(line);
+      buffer.append(SystemUtils.LINE_SEPARATOR);
+    };
+
+    ProcessStreamReader reader = new ProcessStreamReader.Builder(process)
+        .inputStream(processInputStream).inputListener(inputListener).build();
+
+    try {
+      reader.start();
+
+      final long endTime = (System.currentTimeMillis() + waitTimeMilliseconds);
+
+      while (System.currentTimeMillis() < endTime) {
+        try {
+          reader.join(waitTimeMilliseconds);
+        } catch (InterruptedException ignore) {
+        }
+      }
+    } finally {
+      reader.stop();
+    }
+
+    return buffer.toString();
+  }
+
