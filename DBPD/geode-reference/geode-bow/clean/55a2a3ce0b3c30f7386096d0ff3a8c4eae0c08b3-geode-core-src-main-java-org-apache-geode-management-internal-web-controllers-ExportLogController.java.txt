GEODE-2267: enhance error output for gfsh.

* correctly output error message if gfsh execution has an error
* export logs should output correct log message over http connection as well

+import org.apache.commons.io.IOUtils;
+import org.apache.geode.management.cli.Result;
+import org.springframework.http.MediaType;
-    // the result is json string from CommandResult
+    return getResponse(result);
-    // parse the result to get the file path. This file Path should always exist in the file system
-    String filePath = ResultBuilder.fromJson(result).nextLine().trim();
+  }
+  ResponseEntity<InputStreamResource> getResponse(String result) {
+    // the result is json string from CommandResul
+    Result commandResult = ResultBuilder.fromJson(result);
+    if (commandResult.getStatus().equals(Result.Status.OK)) {
+      return getOKResponse(commandResult);
+
+    } else {
+      return getErrorResponse(result);
+    }
+  }
+
+  private ResponseEntity<InputStreamResource> getErrorResponse(String result) {
+    InputStreamResource isr;// if the command is successful, the output is the filepath,
+    // else we need to send the orignal result back so that the receiver will know to turn it
+    // into a Result object
+    try {
+      isr = new InputStreamResource(IOUtils.toInputStream(result, "UTF-8"));
+      respHeaders.set(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE);
+      return new ResponseEntity<InputStreamResource>(isr, respHeaders, HttpStatus.OK);
+    } catch (Exception e) {
+      throw new RuntimeException("IO Error writing file to output stream", e);
+    }
+  }
+
+  private ResponseEntity<InputStreamResource> getOKResponse(Result commandResult) {
+    HttpHeaders respHeaders = new HttpHeaders();
+    InputStreamResource isr;// if the command is successful, the output is the filepath,
+    String filePath = commandResult.nextLine().trim();
-      InputStreamResource isr = new InputStreamResource(new FileInputStream(zipFile));
+      isr = new InputStreamResource(new FileInputStream(zipFile));
+      respHeaders.set(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_OCTET_STREAM_VALUE);
-    } catch (Exception ex) {
-      throw new RuntimeException("IOError writing file to output stream", ex);
+    } catch (Exception e) {
+      throw new RuntimeException("IO Error writing file to output stream", e);
+
