GEODE-3719: Improve invocations of disk store backups (#853)

* GEODE-3719: Improve invocations of disk store backups

  * Standardize pattern for invoking a backup and the result returned
+import org.apache.geode.management.internal.DiskBackupStatusImpl;
+import java.util.stream.Collectors;
+
-        Set<PersistentID> missingMembers = MissingPersistentIDsRequest.send(dm);
-        Iterator<DistributedMember> it = result.getSuccessfulMembers().keySet().iterator();
-        Map<String, String[]> backedUpDiskStores = new HashMap<>();
-        while (it.hasNext()) {
-          DistributedMember member = it.next();
-          Set<PersistentID> setOfDisk = result.getSuccessfulMembers().get(member);
-          String[] setOfDiskStr = new String[setOfDisk.size()];
-          int j = 0;
-          for (PersistentID id : setOfDisk) {
-            setOfDiskStr[j] = id.getDirectory();
-            j++;
-          }
-          backedUpDiskStores.put(member.getId(), setOfDiskStr);
-        }
+        DiskBackupStatusImpl diskBackupStatus = new DiskBackupStatusImpl();
+        Map<DistributedMember, Set<PersistentID>> successfulMembers = result.getSuccessfulMembers();
+        diskBackupStatus.generateBackedUpDiskStores(successfulMembers);
-        for (Set<PersistentID> onlineMembersIds : result.getSuccessfulMembers().values()) {
-          missingMembers.removeAll(onlineMembersIds);
-        }
+        Set<PersistentID> successfulIds = result.getSuccessfulMembers().values().stream()
+            .flatMap(Set::stream).collect(Collectors.toSet());
+        Set<PersistentID> missingIds =
+            result.getExistingDataStores().values().stream().flatMap(Set::stream)
+                .filter((v) -> !successfulIds.contains(v)).collect(Collectors.toSet());
-        result.getExistingDataStores().keySet().removeAll(result.getSuccessfulMembers().keySet());
-        String[] setOfMissingDiskStr = null;
-
-        if (result.getExistingDataStores().size() > 0) {
-          setOfMissingDiskStr = new String[result.getExistingDataStores().size()];
-          int j = 0;
-          for (Set<PersistentID> lostMembersIds : result.getExistingDataStores().values()) {
-            for (PersistentID id : lostMembersIds) {
-              setOfMissingDiskStr[j] = id.getDirectory();
-              j++;
-            }
-          }
-        }
-
-        DiskBackupStatus diskBackupStatus = new DiskBackupStatus();
-        diskBackupStatus.setBackedUpDiskStores(backedUpDiskStores);
-        diskBackupStatus.setOfflineDiskStores(setOfMissingDiskStr);
+        diskBackupStatus.generateOfflineDiskStores(missingIds);
