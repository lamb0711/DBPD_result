GEODE-6857: Moves function timeout to function operations.

* Extracts out an abstract function operation that manages setting
  and restoring timeout.

* Move timeout property read to AbstractExecution constructor.

-import org.apache.geode.cache.client.internal.ExecuteFunctionOp.ExecuteFunctionOpImpl;
-import org.apache.geode.cache.client.internal.ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl;
-import org.apache.geode.cache.client.internal.ExecuteRegionFunctionSingleHopOp.ExecuteRegionFunctionSingleHopOpImpl;
-import org.apache.geode.distributed.internal.DistributionConfig;
-  // TODO: DEFAULT_CLIENT_FUNCTION_TIMEOUT should be private
-  public static final int DEFAULT_CLIENT_FUNCTION_TIMEOUT = 0;
-  private static final String CLIENT_FUNCTION_TIMEOUT_SYSTEM_PROPERTY =
-      DistributionConfig.GEMFIRE_PREFIX + "CLIENT_FUNCTION_TIMEOUT";
-
-  static int getClientFunctionTimeout() {
-    int time = Integer.getInteger(CLIENT_FUNCTION_TIMEOUT_SYSTEM_PROPERTY,
-        DEFAULT_CLIENT_FUNCTION_TIMEOUT);
-    return time >= 0 ? time : DEFAULT_CLIENT_FUNCTION_TIMEOUT;
-  }
-
-      if (op instanceof ExecuteFunctionOpImpl || op instanceof ExecuteRegionFunctionOpImpl
-          || op instanceof ExecuteRegionFunctionSingleHopOpImpl) {
-        int previousTimeout = getSocket().getSoTimeout();
-        getSocket().setSoTimeout(getClientFunctionTimeout());
-        try {
-          result = op.attempt(this);
-        } finally {
-          getSocket().setSoTimeout(previousTimeout);
-        }
-      } else {
-        result = op.attempt(this);
-      }
+      result = op.attempt(this);
