GEODE-8127: ensure that redis function executes on primary  (#5133)

The redis function now either throws an exception because it is not on the primary
or locks the primary for the duration of the function.

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Sarah <sabbey@pivotal.io>
+import org.apache.geode.internal.cache.LocalDataSet;
+import org.apache.geode.internal.cache.PartitionedRegion;
+
+
-    Object result = compute(localRegion, key, command, args);
-    context.getResultSender().lastResult(result);
+
+    Runnable computation = () -> {
+      Object result = compute(localRegion, key, command, args);
+      context.getResultSender().lastResult(result);
+    };
+
+    computeWithPrimaryLocked(key, (LocalDataSet) localRegion, computation);
+
+  public static void computeWithPrimaryLocked(Object key, LocalDataSet localDataSet, Runnable r) {
+    PartitionedRegion partitionedRegion = localDataSet.getProxy();
+
+    partitionedRegion.computeWithPrimaryLocked(key, r);
+  }
+
