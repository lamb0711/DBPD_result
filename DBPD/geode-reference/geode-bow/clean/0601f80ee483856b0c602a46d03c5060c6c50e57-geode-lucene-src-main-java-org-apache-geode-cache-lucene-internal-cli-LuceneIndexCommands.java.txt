GEODE-5145: Added support for destroying an index during region creation


-import java.util.ArrayList;
-import java.util.HashSet;
+import org.apache.geode.internal.Version;
-    Result result;
-    List<CliFunctionResult> accumulatedResults = new ArrayList<>();
-    final XmlEntity xmlEntity =
-        executeDestroyIndexFunction(accumulatedResults, indexName, regionPath);
-    result = getDestroyIndexResult(accumulatedResults, indexName, regionPath);
+
+    // Get members >= Geode 1.8 (when the new destroy code path went into the product)
+    Set<DistributedMember> validVersionMembers =
+        getNormalMembersWithSameOrNewerVersion(Version.GEODE_180);
+    if (validVersionMembers.isEmpty()) {
+      return ResultBuilder.createInfoResult(CliStrings.format(
+          LuceneCliStrings.LUCENE_DESTROY_INDEX__MSG__COULD_NOT_FIND__MEMBERS_GREATER_THAN_VERSION_0,
+          Version.GEODE_180));
+    }
+
+    // Execute the destroy index function
+    LuceneDestroyIndexInfo indexInfo = new LuceneDestroyIndexInfo(indexName, regionPath);
+    ResultCollector<?, ?> rc =
+        executeFunction(destroyIndexFunction, indexInfo, validVersionMembers);
+
+    // Get the result
+    List<CliFunctionResult> cliFunctionResults = (List<CliFunctionResult>) rc.getResult();
+    Result result = getDestroyIndexResult(cliFunctionResults, indexName, regionPath);
+
+    // Get and process the xml entity
+    XmlEntity xmlEntity = findXmlEntity(cliFunctionResults);
-  private XmlEntity executeDestroyIndexFunction(List<CliFunctionResult> accumulatedResults,
-      String indexName, String regionPath) {
-    // Destroy has three cases:
-    //
-    // - no members define the region
-    // In this case, send the request to all members to handle the case where the index has been
-    // created, but not the region
-    //
-    // - all members define the region
-    // In this case, send the request to one of the region members to destroy the index on all
-    // member
-    //
-    // - some members define the region; some don't
-    // In this case, send the request to one of the region members to destroy the index in all the
-    // region members. Then send the function to the remaining members to handle the case where
-    // the index has been created, but not the region
-    XmlEntity xmlEntity = null;
-    Set<DistributedMember> regionMembers = findMembersForRegion(regionPath);
-    Set<DistributedMember> normalMembers = getAllNormalMembers();
-    LuceneDestroyIndexInfo indexInfo = new LuceneDestroyIndexInfo(indexName, regionPath);
-    ResultCollector<?, ?> rc;
-    if (regionMembers.isEmpty()) {
-      // Attempt to destroy the proxy index on all members
-      indexInfo.setDefinedDestroyOnly(true);
-      rc = executeFunction(destroyIndexFunction, indexInfo, normalMembers);
-      accumulatedResults.addAll((List<CliFunctionResult>) rc.getResult());
-    } else {
-      // Attempt to destroy the index on a region member
-      indexInfo.setDefinedDestroyOnly(false);
-      Set<DistributedMember> singleMember = new HashSet<>();
-      singleMember.add(regionMembers.iterator().next());
-      rc = executeFunction(destroyIndexFunction, indexInfo, singleMember);
-      List<CliFunctionResult> cliFunctionResults = (List<CliFunctionResult>) rc.getResult();
-      CliFunctionResult cliFunctionResult = cliFunctionResults.get(0);
-      xmlEntity = cliFunctionResult.getXmlEntity();
-      for (DistributedMember regionMember : regionMembers) {
-        accumulatedResults.add(new CliFunctionResult(regionMember.getId(),
-            cliFunctionResult.isSuccessful(), cliFunctionResult.getMessage()));
-      }
-      // If that succeeds, destroy the proxy index(es) on all other members if necessary
-      if (cliFunctionResult.isSuccessful()) {
-        normalMembers.removeAll(regionMembers);
-        if (!normalMembers.isEmpty()) {
-          indexInfo.setDefinedDestroyOnly(true);
-          rc = executeFunction(destroyIndexFunction, indexInfo, normalMembers);
-          accumulatedResults.addAll((List<CliFunctionResult>) rc.getResult());
-        }
-      } else {
-        // @todo Should dummy results be added to the accumulatedResults for the non-region
-        // members in the failed case
-      }
-    }
-    return xmlEntity;
-  }
-
