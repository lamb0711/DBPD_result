Merge branch 'release/1.5.0'

-import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.internal.cache.InternalRegion;
-          // scheduleGetPRMetaData((LocalRegion)region);
-      scheduleGetPRMetaData((LocalRegion) region, false);
+      scheduleGetPRMetaData((InternalRegion) region, false);
-      scheduleGetPRMetaData((LocalRegion) region, false);
+      scheduleGetPRMetaData((InternalRegion) region, false);
-    // ServerLocation randomFirstServer =
-    // prAdvisor.adviseRandomServerLocation(); // get a random server here
-        // HashSet<Integer> rBuckets = prunedServerToBucketsMap
-        // .get(randomFirstServer);
-        // HashSet<Integer> remainingBuckets = new HashSet<Integer>(buckets);
-        // remainingBuckets.removeAll(currentBucketSet);
-        // rBuckets.addAll(remainingBuckets);
-        // prunedServerToBucketsMap.put(randomFirstServer, rBuckets);
-    // return node;
-          scheduleGetPRMetaData((LocalRegion) region, true);
+          scheduleGetPRMetaData((InternalRegion) region, true);
-  public void scheduleGetPRMetaData(final LocalRegion region, final boolean isRecursive) {
+  public void scheduleGetPRMetaData(final InternalRegion region, final boolean isRecursive) {
-  public void getClientPRMetadata(LocalRegion region) {
+  public void getClientPRMetadata(InternalRegion region) {
-    if (region.clientMetaDataLock.tryLock()) {
+    if (region.getClientMetaDataLock().tryLock()) {
-          LocalRegion leaderRegion = (LocalRegion) region.getCache().getRegion(colocatedWith);
+          InternalRegion leaderRegion = (InternalRegion) region.getCache().getRegion(colocatedWith);
-        region.clientMetaDataLock.unlock();
+        region.getClientMetaDataLock().unlock();
-  public void scheduleGetPRMetaData(final LocalRegion region, final boolean isRecursive,
+  public void scheduleGetPRMetaData(final InternalRegion region, final boolean isRecursive,
