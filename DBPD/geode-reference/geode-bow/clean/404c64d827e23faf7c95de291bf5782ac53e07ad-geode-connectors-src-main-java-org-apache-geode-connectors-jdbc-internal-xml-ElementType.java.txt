GEODE-5861: change jdbc connector to use jndi binding (#2650)

The jdbc connector now uses the existing "jndi-binding" xml/gfsh instead of adding "jdbc-connection" xml/gfsh. All the old "jdbc-connection" commands have been removed.

The create jndi-binding command has been changed in the following ways:
* the driver-class-name gfsh parameter is now optional.
* --url can be used as a replacement for --connnection-url
* the --type now defaults to SIMPLE (it used to not have a default).
* the --type=POOLED now defaults to creating a Hikari pool and an SPI exists to customize the class 
that implements the pool.

New External APIS:
  DataSourceFactoryTest: this is the SPI users can implement for the POOLED type.

Co-authored-by: @BenjaminPerryRoss 
-  CONNECTION("connection") {
-    @Override
-    void startElement(Stack<Object> stack, Attributes attributes) {
-      if (!(stack.peek() instanceof JdbcServiceConfiguration)) {
-        throw new CacheXmlException(
-            "jdbc <connection> elements must occur within <connector-service> elements");
-      }
-      ConnectorService.Connection connection = new ConnectorService.Connection();
-      connection.setName(attributes.getValue(JdbcConnectorServiceXmlParser.NAME));
-      connection.setUrl(attributes.getValue(JdbcConnectorServiceXmlParser.URL));
-      connection.setUser(attributes.getValue(JdbcConnectorServiceXmlParser.USER));
-      connection.setPassword(attributes.getValue(JdbcConnectorServiceXmlParser.PASSWORD));
-      connection.setParameters(parseParameters(attributes));
-      stack.push(connection);
-    }
-
-    private String[] parseParameters(Attributes attributes) {
-      String[] result = null;
-      String value = attributes.getValue(JdbcConnectorServiceXmlParser.PARAMETERS);
-      if (value != null) {
-        result = value.split(",");
-      }
-      return result;
-    }
-
-    @Override
-    void endElement(Stack<Object> stack) {
-      ConnectorService.Connection config = (ConnectorService.Connection) stack.pop();
-      JdbcServiceConfiguration connectorService = (JdbcServiceConfiguration) stack.peek();
-      connectorService.addConnectionConfig(config);
-    }
-  },
