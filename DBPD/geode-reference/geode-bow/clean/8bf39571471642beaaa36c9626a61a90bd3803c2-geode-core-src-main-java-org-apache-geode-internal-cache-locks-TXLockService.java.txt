Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-/** 
+/**
- * This is an abstract class defining the public facade for the transaction
- * locking service. 
+ * This is an abstract class defining the public facade for the transaction locking service.
-  
+
-  //   TLS instances
+  // TLS instances
-  
+
-  
+
-  //   Static methods
+  // Static methods
-  
+
-  
+
-  
+
-  
+
-  //   Instance methods
+  // Instance methods
-  
-  /** 
+
+  /**
-   * @param participants set of members participating in tx; each member is
-   * identified by a serializable <code>IpAddress</code> from JGroups; the 
-   * grantor will use this to recover if the tx originator departs; null or
-   * empty is allowed
+   * @param participants set of members participating in tx; each member is identified by a
+   *        serializable <code>IpAddress</code> from JGroups; the grantor will use this to recover
+   *        if the tx originator departs; null or empty is allowed
-   * @return a generated serializable object to be used as the tx lock 
-   * reference (txLockId)
+   * @return a generated serializable object to be used as the tx lock reference (txLockId)
-   * @throws IllegalArgumentException if regionLockReqs is null or or if either
-   * arguments contain instances of unexpected classes 
+   * @throws IllegalArgumentException if regionLockReqs is null or or if either arguments contain
+   *         instances of unexpected classes
-  throws CommitConflictException;
-  
-  /** 
+      throws CommitConflictException;
+
+  /**
-   * @param txLockId the tx lock reference as generated from the call to 
-   * <code>txLock</code>
+   * @param txLockId the tx lock reference as generated from the call to <code>txLock</code>
-  /** 
+  /**
-   * @param txLockId the tx lock reference as generated from the call to 
-   * <code>txLock</code>
+   * @param txLockId the tx lock reference as generated from the call to <code>txLock</code>
-   * @param updatedParticipants the set of new participants generated
-   * from the advisor for each <code>Region</code> in the transaction.
+   * @param updatedParticipants the set of new participants generated from the advisor for each
+   *        <code>Region</code> in the transaction.
-    
-  /** 
-   * Returns true if this process is the lock grantor for this service. 
+
+  /**
+   * Returns true if this process is the lock grantor for this service.
-  
-  /** 
-   * Makes this process explicitly become the lock grantor for this service. 
+
+  /**
+   * Makes this process explicitly become the lock grantor for this service.
-  
+
-  
-  /** 
-   * Destroys this tx lock service and removes the static reference to it. 
+
+  /**
+   * Destroys this tx lock service and removes the static reference to it.
-        if (this == DTLS) DTLS = null;
+        if (this == DTLS)
+          DTLS = null;
-  
+
-  //   Hidden template methods
+  // Hidden template methods
-  
+
