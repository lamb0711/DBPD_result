Merge branch 'release/1.4.0'

-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-  public static abstract class CacheOperationMessage extends SerialDistributionMessage
+  public abstract static class CacheOperationMessage extends SerialDistributionMessage
-    protected final static short POSSIBLE_DUPLICATE_MASK = POS_DUP;
-    protected final static short OLD_VALUE_MASK = DistributionMessage.UNRESERVED_FLAGS_START;
-    protected final static short DIRECT_ACK_MASK = (OLD_VALUE_MASK << 1);
-    protected final static short FILTER_INFO_MASK = (DIRECT_ACK_MASK << 1);
-    protected final static short CALLBACK_ARG_MASK = (FILTER_INFO_MASK << 1);
-    protected final static short DELTA_MASK = (CALLBACK_ARG_MASK << 1);
-    protected final static short NEEDS_ROUTING_MASK = (DELTA_MASK << 1);
-    protected final static short VERSION_TAG_MASK = (NEEDS_ROUTING_MASK << 1);
-    protected final static short PERSISTENT_TAG_MASK = (VERSION_TAG_MASK << 1);
-    protected final static short UNRESERVED_FLAGS_START = (PERSISTENT_TAG_MASK << 1);
+    protected static final short POSSIBLE_DUPLICATE_MASK = POS_DUP;
+    protected static final short OLD_VALUE_MASK = DistributionMessage.UNRESERVED_FLAGS_START;
+    protected static final short DIRECT_ACK_MASK = (OLD_VALUE_MASK << 1);
+    protected static final short FILTER_INFO_MASK = (DIRECT_ACK_MASK << 1);
+    protected static final short CALLBACK_ARG_MASK = (FILTER_INFO_MASK << 1);
+    protected static final short DELTA_MASK = (CALLBACK_ARG_MASK << 1);
+    protected static final short NEEDS_ROUTING_MASK = (DELTA_MASK << 1);
+    protected static final short VERSION_TAG_MASK = (NEEDS_ROUTING_MASK << 1);
+    protected static final short PERSISTENT_TAG_MASK = (VERSION_TAG_MASK << 1);
+    protected static final short UNRESERVED_FLAGS_START = (PERSISTENT_TAG_MASK << 1);
-    private final static int INHIBIT_NOTIFICATIONS_MASK = 0x400;
+    private static final int INHIBIT_NOTIFICATIONS_MASK = 0x400;
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-      InternalCache gfc = (InternalCache) CacheFactory.getInstance(dm.getSystem());
+      InternalCache gfc = dm.getExistingCache();
-      // do this before CacheFactory.getInstance for bug 33471
-     * 
+     *
-  static private class ReliableCacheReplyProcessor extends CacheOperationReplyProcessor {
+  private static class ReliableCacheReplyProcessor extends CacheOperationReplyProcessor {
