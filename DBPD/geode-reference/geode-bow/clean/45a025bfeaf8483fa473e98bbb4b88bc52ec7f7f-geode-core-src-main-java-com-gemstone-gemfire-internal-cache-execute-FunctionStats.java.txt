Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import com.gemstone.gemfire.internal.DummyStatisticsImpl;
+import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
-  private static FunctionStats disabledStats ;
+  private final static FunctionStats dummy = createDummy();
-    InternalDistributedSystem iDS = InternalDistributedSystem.getAnyInstance();
-    this._stats = iDS.createAtomicStatistics(this._type);
-    aggregateStats = iDS.getFunctionServiceStats();
+    this._stats = new DummyStatisticsImpl(this._type, null, 0);
+    this.aggregateStats = FunctionServiceStats.createDummy();
+  }
+
+  static FunctionStats createDummy() {
+    return new FunctionStats();
-  
-
-//  // /////////////////// Instance Methods /////////////////////
-//
-//  public FunctionStats(Statistics statistics) {
-//    this._stats = statistics;
-//  }
-
-
-  
-  public static FunctionStats getFunctionStats(String functionID,
-      InternalDistributedSystem ds) {
-    boolean statsDisabled = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "statsDisabled");
-    if (statsDisabled) {
-      if(disabledStats == null){
-        disabledStats = new FunctionStats();
-      }
-      return disabledStats;
-    }
-   else {
-      if (ds == null) {
-        ds = InternalDistributedSystem.getAnyInstance();
-      }
+  public static FunctionStats getFunctionStats(String functionID, InternalDistributedSystem ds) {
+    if (isDisabled()) {
+      return dummy;
+    } else {
+
+  public static FunctionStats getFunctionStats(String functionID) {
+    if (isDisabled()) {
+      return dummy;
+    } else {
+      InternalDistributedSystem ds = InternalDistributedSystem.getAnyInstance();
+      return ds.getFunctionStats(functionID);
+    }
+  }
+
+  private static boolean isDisabled() {
+    return Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "statsDisabled");
+  }
