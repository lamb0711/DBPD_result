Making File and ChunkKey DataSerializableFixedId

These classes should implement DataSerializableFixedId for efficient
serialization. As part of this change, I also added a section to
LuceneServiceImpl's constructor to register all DataSerializableFixedId
classes in the lucene service.

-import java.io.Serializable;
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import com.gemstone.gemfire.internal.DataSerializableFixedID;
+import com.gemstone.gemfire.internal.Version;
+
-public class ChunkKey implements Serializable {
-
-  private static final long serialVersionUID = 1L;
-
+public class ChunkKey implements DataSerializableFixedID {
+  
+  /**
+   * Constructor used for serialization only.
+   */
+  public ChunkKey() {
+  }
+  @Override
+  public Version[] getSerializationVersions() {
+    return null;
+  }
+
+  @Override
+  public int getDSFID() {
+    return LUCENE_CHUNK_KEY;
+  }
+
+  @Override
+  public void toData(DataOutput out) throws IOException {
+    out.writeInt(chunkId);
+    out.writeLong(fileId.getMostSignificantBits());
+    out.writeLong(fileId.getLeastSignificantBits());
+  }
+
+  @Override
+  public void fromData(DataInput in)
+      throws IOException, ClassNotFoundException {
+    chunkId = in.readInt();
+    long high = in.readLong();
+    long low = in.readLong();
+    fileId = new UUID(high, low);
+  }
+
