GEODE-2267: Enhance server/locator startup rules

* be able to return the rule itself so that we can start the server/locator at rule declaration time.
* rearrange the class structure
* do not delete the workingDir if the rule is created with a workingDir (then it's up for the caller to delete it)

+import static org.apache.geode.distributed.Locator.startLocatorAndDS;
-import org.apache.commons.io.FileUtils;
-import org.apache.geode.distributed.Locator;
-import org.junit.rules.ExternalResource;
-import java.io.Serializable;
-import java.nio.file.Files;
+import java.io.IOException;
-public class LocatorStarterRule extends ExternalResource implements Serializable {
+public class LocatorStarterRule extends MemberStarterRule implements Locator {
-  public InternalLocator locator;
-
-  private File workingDir;
-  private String oldUserDir;
+  private transient InternalLocator locator;
-  @Override
-  protected void before() throws Exception {
-    oldUserDir = System.getProperty("user.dir");
-    if (workingDir == null) {
-      workingDir = Files.createTempDirectory("locator").toAbsolutePath().toFile();
-    }
-    System.setProperty("user.dir", workingDir.toString());
+  public InternalLocator getLocator() {
+    return locator;
-  protected void after() {
+  protected void stopMember() {
-    FileUtils.deleteQuietly(workingDir);
-    if (oldUserDir == null) {
-      System.clearProperty("user.dir");
-    } else {
-      System.setProperty("user.dir", oldUserDir);
-    }
-
-  public org.apache.geode.test.dunit.rules.Locator startLocator() throws Exception {
+  public LocatorStarterRule startLocator() {
-  public org.apache.geode.test.dunit.rules.Locator startLocator(Properties properties)
-      throws Exception {
+  public LocatorStarterRule startLocator(Properties properties) {
-    String name = properties.getProperty(NAME);
+    name = properties.getProperty(NAME);
-      int jmxPort = Integer.parseInt(properties.getProperty(JMX_MANAGER_PORT));
+      jmxPort = Integer.parseInt(properties.getProperty(JMX_MANAGER_PORT));
-
-    locator = (InternalLocator) Locator.startLocatorAndDS(0, null, properties);
-    int locatorPort = locator.getPort();
-    locator.resetInternalLocatorFileNamesWithCorrectPortNumber(locatorPort);
+    try {
+      locator = (InternalLocator) startLocatorAndDS(0, null, properties);
+    } catch (IOException e) {
+      throw new RuntimeException("unable to start up locator.", e);
+    }
+    memberPort = locator.getPort();
+    locator.resetInternalLocatorFileNamesWithCorrectPortNumber(memberPort);
-    return new org.apache.geode.test.dunit.rules.Locator(locatorPort, workingDir, name);
+    return this;
