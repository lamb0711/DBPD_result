Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-          LocalizedStrings.DefaultQueryService_CACHE_MUST_NOT_BE_NULL.toLocalizedString());
+          "cache must not be null");
-      String reason = LocalizedStrings.QueryMonitor_LOW_MEMORY_CANCELED_QUERY
-          .toLocalizedString(QueryMonitor.getMemoryUsedDuringLowMemory());
+      String reason = String.format(
+          "Query execution canceled due to memory threshold crossed in system, memory used: %s bytes.",
+          QueryMonitor.getMemoryUsedBytes());
-          LocalizedStrings.DefaultQueryService_THE_QUERY_STRING_MUST_NOT_BE_NULL
-              .toLocalizedString());
+          "The query string must not be null");
-          LocalizedStrings.DefaultQueryService_THE_QUERY_STRING_MUST_NOT_BE_EMPTY
-              .toLocalizedString());
+          "The query string must not be empty");
-    // UnsupportedOperationException(LocalizedStrings.DefaultQueryService_INDEX_CREATION_IS_NOT_SUPPORTED_FOR_REGIONS_WHICH_OVERFLOW_TO_DISK_THE_REGION_INVOLVED_IS_0.toLocalizedString(regionPath));
+    // UnsupportedOperationException(String.format("The specified index conditions are not supported
+    // for regions which overflow to disk. The region involved is %s",regionPath));
-            LocalizedStrings.ResourceManager_LOW_MEMORY_FOR_INDEX
-                .toLocalizedString(region.getName()),
+            String.format(
+                "Cannot create index on region %s because the target member is running low on memory",
+                region.getName()),
-        region.getCache().getLoggerI18n().info(
-            LocalizedStrings.DefaultQueryService_EXCEPTION_WHILE_CREATING_INDEX_ON_PR_DEFAULT_QUERY_PROCESSOR,
+        region.getCache().getLogger().info(
+            "Exception while creating index on pr default query processor.",
-        region.getCache().getLoggerI18n().info(
-            LocalizedStrings.DefaultQueryService_EXCEPTION_WHILE_CREATING_INDEX_ON_PR_DEFAULT_QUERY_PROCESSOR,
+        region.getCache().getLogger().info(
+            "Exception while creating index on pr default query processor.",
-          LocalizedStrings.DefaultQueryService_DEFAULTQUERYSERVICECREATEINDEXFIRST_ITERATOR_OF_INDEX_FROM_CLAUSE_DOES_NOT_EVALUATE_TO_A_REGION_PATH_THE_FROM_CLAUSE_USED_FOR_INDEX_CREATION_IS_0
-              .toLocalizedString(fromClause));
+          String.format(
+              "DefaultQueryService::createIndex:First Iterator of Index >From Clause does not evaluate to a Region Path. The from clause used for Index creation is %s",
+              fromClause));
-          LocalizedStrings.DefaultQueryService_REGION_0_NOT_FOUND_FROM_1
-              .toLocalizedString(new Object[] {regionPath, fromClause}));
+          String.format("Region ' %s ' not found: from %s",
+              new Object[] {regionPath, fromClause}));
-        logger.info(LocalizedMessage
-            .create(LocalizedStrings.DefaultQueryService_EXCEPTION_REMOVING_INDEX___0), ex);
+        logger.info(String.format("Exception removing index : %s", ex));
-        logger.info(LocalizedMessage
-            .create(LocalizedStrings.DefaultQueryService_EXCEPTION_REMOVING_INDEX___0), ex);
+        logger.info(String.format("Exception removing index : %s", ex));
-          LocalizedStrings.DefaultQueryService_CQNAME_MUST_NOT_BE_NULL.toLocalizedString());
+          "cqName must not be null");
-          LocalizedStrings.DefaultQueryService_CQNAME_MUST_NOT_BE_NULL.toLocalizedString());
+          "cqName must not be null");
-      logger.info(
-          LocalizedMessage.create(
-              LocalizedStrings.DefaultQueryService_EXCEPTION_WHILE_CREATING_INDEX_ON_PR_DEFAULT_QUERY_PROCESSOR),
+      logger.info("Exception while creating index on pr default query processor.",
-          LocalizedMessage.create(
-              LocalizedStrings.DefaultQueryService_EXCEPTION_WHILE_CREATING_INDEX_ON_PR_DEFAULT_QUERY_PROCESSOR),
+          "Exception while creating index on pr default query processor.",
-      logger.info(
-          LocalizedMessage.create(
-              LocalizedStrings.DefaultQueryService_EXCEPTION_WHILE_CREATING_INDEX_ON_PR_DEFAULT_QUERY_PROCESSOR),
+      logger.info("Exception while creating index on pr default query processor.",
