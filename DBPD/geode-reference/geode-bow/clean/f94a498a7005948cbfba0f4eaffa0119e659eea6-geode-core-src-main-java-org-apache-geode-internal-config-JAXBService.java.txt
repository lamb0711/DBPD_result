GEODE-6918: Cleanup InternalLocator use of workingDirectory (#3782)

* Pass workingDirectory to InternalConfigurationPersistenceService
* Fixup InternalConfigurationPersistenceService constructors
* Create InternalLocatorIntegrationTest
* Use Path instead of String or File
* Cleanup InternalConfigurationPersistenceService and JAXBService

-
+import java.util.HashSet;
+import java.util.Set;
+import javax.xml.transform.Source;
+import org.apache.geode.internal.lang.SystemPropertyHelper;
+import org.apache.geode.management.internal.cli.util.ClasspathScanLoadHelper;
-  Marshaller marshaller;
-  Unmarshaller unmarshaller;
-  NameSpaceFilter nameSpaceFilter;
+
+  private final Marshaller marshaller;
+  private final Unmarshaller unmarshaller;
+  private final NameSpaceFilter nameSpaceFilter;
-          return (element.namespace() + " " + element.schemaLocation());
+          return element.namespace() + " " + element.schemaLocation();
-  public void validateWith(URL url) {
+  public static JAXBService create(Class<?>... xsdClasses) {
+    if (xsdClasses != null && xsdClasses.length > 0) {
+      return new JAXBService(xsdClasses);
+    }
+    // else, scan the classpath to find all the classes annotated with XSDRootElement
+    return new JAXBService(scanForClasses().toArray(new Class[0]));
+  }
+
+  public static JAXBService createWithValidation(Class<?>... xsdClasses) {
+    JAXBService jaxbService = create(xsdClasses);
+    jaxbService.validateWithLocalCacheXSD();
+    return jaxbService;
+  }
+
+  static Set<String> getPackagesToScan() {
+    Set<String> packages = new HashSet<>();
+    String sysProperty = SystemPropertyHelper.getProperty(SystemPropertyHelper.PACKAGES_TO_SCAN);
+    if (sysProperty != null) {
+      packages = Arrays.stream(sysProperty.split(",")).collect(Collectors.toSet());
+    } else {
+      packages.add("*");
+    }
+    return packages;
+  }
+
+  private static Set<Class<?>> scanForClasses() {
+    // scan the classpath to find all the classes annotated with XSDRootElement
+    Set<String> packages = getPackagesToScan();
+    try (ClasspathScanLoadHelper scanner = new ClasspathScanLoadHelper(packages)) {
+      return scanner.scanClasspathForAnnotation(XSDRootElement.class,
+          packages.toArray(new String[] {}));
+    }
+  }
+
+  private void validateWith(URL url) {
-    Schema schema;
-      schema = factory.newSchema(url);
+      Schema schema = factory.newSchema(url);
+      marshaller.setSchema(schema);
-    marshaller.setSchema(schema);
-      SAXSource source = new SAXSource(nameSpaceFilter, new InputSource(new StringReader(xml)));
+      Source source = new SAXSource(nameSpaceFilter, new InputSource(new StringReader(xml)));
-      SAXSource source = new SAXSource(nameSpaceFilter, new InputSource(new StringReader(xml)));
+      Source source = new SAXSource(nameSpaceFilter, new InputSource(new StringReader(xml)));
-
