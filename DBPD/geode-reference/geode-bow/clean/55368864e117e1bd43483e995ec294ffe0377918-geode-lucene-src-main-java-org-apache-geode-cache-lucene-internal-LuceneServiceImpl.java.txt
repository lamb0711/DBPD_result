GEODE-5082: Reindex not allowed on mixed server versions. (#1803)

         * Lucene reindex is not allowed when the members hosting the region are of different versions.
	* Any exception during the reindex will now clear the lucene index from the index defined map.
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.Version;
+    try {
+      // If the region does not yet exist, install LuceneRegionListener and return
+      PartitionedRegion region = (PartitionedRegion) cache.getRegion(regionPath);
+      if (region == null) {
+        LuceneRegionListener regionListener = new LuceneRegionListener(this, cache, indexName,
+            regionPath, fields, analyzer, fieldAnalyzers, serializer);
+        cache.addRegionListener(regionListener);
+        return;
+      } else if (allowOnExistingRegion) {
+        validateAllMembersAreTheSameVersion(region);
+      }
-    // If the region does not yet exist, install LuceneRegionListener and return
-    PartitionedRegion region = (PartitionedRegion) cache.getRegion(regionPath);
-    if (region == null) {
-      LuceneRegionListener regionListener = new LuceneRegionListener(this, cache, indexName,
-          regionPath, fields, analyzer, fieldAnalyzers, serializer);
-      cache.addRegionListener(regionListener);
-      return;
-    }
+      if (!allowOnExistingRegion) {
+        definedIndexMap.remove(LuceneServiceImpl.getUniqueIndexName(indexName, regionPath));
+        throw new IllegalStateException("The lucene index must be created before region");
+      }
-    if (!allowOnExistingRegion) {
+      // do work normally handled by LuceneRegionListener (if region already exists)
+      createIndexOnExistingRegion(region, indexName, regionPath, fields, analyzer, fieldAnalyzers,
+          serializer);
+    } catch (Exception exception) {
-      throw new IllegalStateException("The lucene index must be created before region");
+      throw exception;
+  }
-    // do work normally handled by LuceneRegionListener (if region already exists)
-    createIndexOnExistingRegion(region, indexName, regionPath, fields, analyzer, fieldAnalyzers,
-        serializer);
+  protected void validateAllMembersAreTheSameVersion(PartitionedRegion region) {
+    Set<InternalDistributedMember> remoteMembers = region.getRegionAdvisor().adviseAllPRNodes();
+    Version localVersion =
+        cache.getDistributionManager().getDistributionManagerId().getVersionObject();
+    if (!remoteMembers.isEmpty()) {
+      for (InternalDistributedMember remoteMember : remoteMembers) {
+        if (!remoteMember.getVersionObject().equals(localVersion)) {
+          throw new IllegalStateException(
+              "The lucene index cannot be created on a existing region if all members hosting the region : "
+                  + region.getFullPath() + ", are not the same Apache Geode version ");
+        }
+      }
+    }
