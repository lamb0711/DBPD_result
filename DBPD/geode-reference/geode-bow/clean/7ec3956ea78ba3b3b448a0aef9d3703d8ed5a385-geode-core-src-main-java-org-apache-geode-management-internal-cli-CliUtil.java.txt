GEODE-4517: Remove getAnyInstancce call from CliUtil.

* CliUtil.getCacheIfExists now takes supplier, but will squelch error and return null as before.
* LogWriter.getInstance now explicitly takes a Cache, to hook into the cache's LogWriter.  This perhaps should be replaced by the LogService logger in a future commit.
* GfshExecutionStrategy adopts the Gfsh shell's LogWriter, since the shell will necessarily have finished instantiating the LogWriter's singleton before GfshExecutionStrategy can instantiate.
* In some instances, the LogWriter has been replaced with the Log4j LogService logger.
* Launcher explicitly passes a null Cache, since it does not yet exist.
* Other minor improvements: visibility, typo corrections, etc.
+import java.util.function.Supplier;
-import org.apache.commons.lang.StringUtils;
+import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.CacheFactory;
+import org.apache.geode.internal.lang.StringUtils;
-  public static InternalCache getCacheIfExists() {
-    InternalCache cache;
+  /**
+   * Returns the InternalCache returned by the provided method.
+   * If the provided method would raise a CacheClosedException, returns null instead.
+   */
+  public static InternalCache getCacheIfExists(Supplier<InternalCache> getCacheMethod) {
+    InternalCache cache = null;
-      cache = getInternalCache();
-    } catch (CacheClosedException e) {
-      // ignore & return null
-      cache = null;
+      cache = getCacheMethod.get();
+    } catch (CacheClosedException ignored) {
-
+
-    Set<DistributedMember> members = findMembers(null, null);
+    Set<DistributedMember> members = findMembers(null, null, cache);
-  public static Set<String> getAllRegionNames() {
-    InternalCache cache = getInternalCache();
+  public static Set<String> getAllRegionNames(Cache cache) {
-      String[] members) {
-    InternalCache cache = getInternalCache();
+      String[] members, InternalCache cache) {
-
-  public static Set<DistributedMember> findMembers(String[] groups, String[] members) {
-    InternalCache cache = getInternalCache();
+  public static Set<DistributedMember> findMembers(String[] groups, String[] members,
+      InternalCache cache) {
-  public static DistributedMember getDistributedMemberByNameOrId(String memberNameOrId) {
-    DistributedMember memberFound = null;
-
-    if (memberNameOrId != null) {
-      InternalCache cache = getInternalCache();
-      Set<DistributedMember> memberSet = CliUtil.getAllMembers(cache);
-      for (DistributedMember member : memberSet) {
-        if (memberNameOrId.equalsIgnoreCase(member.getId())
-            || memberNameOrId.equalsIgnoreCase(member.getName())) {
-          memberFound = member;
-          break;
-        }
-      }
+  public static DistributedMember getDistributedMemberByNameOrId(String memberNameOrId,
+      InternalCache cache) {
+    if (memberNameOrId == null) {
+      return null;
-    return memberFound;
+
+    Set<DistributedMember> memberSet = CliUtil.getAllMembers(cache);
+    return memberSet.stream().filter(member -> memberNameOrId.equalsIgnoreCase(member.getId())
+        || memberNameOrId.equalsIgnoreCase(member.getName())).findFirst().orElse(null);
+
-
-
-
-
-
-    private final int dataLength;
+    private final int dataLength;
-
-  // Methods that will be removed by the next commit:
-
-  private static InternalCache getInternalCache() {
-    return (InternalCache) CacheFactory.getAnyInstance();
-  }
