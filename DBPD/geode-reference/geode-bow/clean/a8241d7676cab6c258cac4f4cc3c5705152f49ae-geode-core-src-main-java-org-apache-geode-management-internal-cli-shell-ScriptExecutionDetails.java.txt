GEODE-5971: refactor ExportLogsCommand and ExecuteScriptCommand to usâ€¦ (#3285)


-import org.apache.geode.management.internal.cli.result.CompositeResultData;
+import org.apache.geode.management.internal.cli.result.ModelCommandResult;
+import org.apache.geode.management.internal.cli.result.model.DataResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-    this.commandAndStatusList = new ArrayList<CommandAndStatus>();
+    this.commandAndStatusList = new ArrayList<>();
-  Result getResult() {
-    CompositeResultData compositeResultData = ResultBuilder.createCompositeResultData();
-    compositeResultData.setHeader(
+  ResultModel getResult() {
+    ResultModel result = new ResultModel();
+    result.setHeader(
-      CompositeResultData.SectionResultData section = compositeResultData.addSection("" + (i + 1));
+      DataResultModel commandDetail = result.addData("command" + commandSrNo);
-      section.addData("Command-" + String.valueOf(commandSrNo), commandAndStatus.command);
-      section.addData("Status", commandAndStatus.status);
+      commandDetail.addData("Command-" + String.valueOf(commandSrNo), commandAndStatus.command);
+      commandDetail.addData("Status", commandAndStatus.status);
-        compositeResultData.setStatus(Result.Status.ERROR);
+        result.setStatus(Result.Status.ERROR);
-        section.setFooter(Gfsh.LINE_SEPARATOR);
+        result.setFooter(Gfsh.LINE_SEPARATOR);
-    return ResultBuilder.buildResult(compositeResultData);
+    return result;
-  void logScriptExecutionInfo(LogWrapper logWrapper, Result result) {
-    logWrapper.info(ResultBuilder.resultAsString(result));
+  void logScriptExecutionInfo(LogWrapper logWrapper, ResultModel result) {
+    logWrapper.info(ResultBuilder.resultAsString(new ModelCommandResult(result)));
