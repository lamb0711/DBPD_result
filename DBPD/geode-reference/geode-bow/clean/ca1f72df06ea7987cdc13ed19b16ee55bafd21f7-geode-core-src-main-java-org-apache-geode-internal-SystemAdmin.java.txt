GEODE-5212: Ensure that MergeLogs closes its InputStreams (#2513)

- Other refactoring which converted a pair of linked structures (log filename
  and the associated InputStream) into a Map.
+import java.io.InputStream;
+import java.nio.file.Paths;
+import java.util.stream.Collectors;
+import org.apache.commons.lang.StringUtils;
+
-  public void mergeLogs(String outOption, List args) {
-    FileInputStream[] input = new FileInputStream[args.size()];
-    String[] inputNames = new String[args.size()]; // note we don't want any extra names printed.
+  public void mergeLogs(String outOption, List<String> args) {
+    Map<String, InputStream> inputs = new HashMap<>();
-    Iterator it = args.iterator();
-    int idx = 0;
+    List<String> normalizedFiles =
+        args.stream().map(f -> Paths.get(f).toAbsolutePath().toString()).collect(
+            Collectors.toList());
+    int prefixLength =
+        StringUtils.getCommonPrefix(normalizedFiles.toArray(new String[] {})).length();
+
-    while (it.hasNext()) {
-      String fileName = (String) it.next();
+
+    for (String fileName : normalizedFiles) {
-        input[idx] = new FileInputStream(fileName);
-        inputNames[idx] = (new File(fileName)).getAbsolutePath();
-        idx++;
+        String shortName = fileName.substring(prefixLength);
+        inputs.put(shortName, new FileInputStream(fileName));
-    if (idx > 0) {
-      // strip off any common filename prefix
-      boolean strip = true;
-      do {
-        if (inputNames[0].length() == 0) {
-          break;
-        }
-        if (inputNames[0].indexOf('/') == -1 && inputNames[0].indexOf('\\') == -1) {
-          // no more directories to strip off
-          break;
-        }
-        char c = inputNames[0].charAt(0);
-        for (int i = 1; i < idx; i++) {
-          if (inputNames[i].charAt(0) != c) {
-            strip = false;
-            break;
-          }
-        }
-        for (int i = 0; i < idx; i++) {
-          inputNames[i] = inputNames[i].substring(1);
-        }
-      } while (strip);
-    }
-
-    if (MergeLogFiles.mergeLogFiles(input, inputNames, mergedFile)) {
+    if (MergeLogFiles.mergeLogFiles(inputs, mergedFile)) {
-              new Object[] {Integer.valueOf(idx), ((outOption != null) ? outOption : "stdout")}));
+              new Object[] {Integer.valueOf(args.size()),
+                  ((outOption != null) ? outOption : "stdout")}));
