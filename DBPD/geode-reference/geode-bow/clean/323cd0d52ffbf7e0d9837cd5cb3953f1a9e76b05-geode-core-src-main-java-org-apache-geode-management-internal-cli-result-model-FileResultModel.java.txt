GEODE-5971: Remove FileResult (#3487)


+import com.fasterxml.jackson.annotation.JsonIgnore;
+import org.apache.commons.io.FilenameUtils;
+  public static final int FILE_TYPE_FILE = 2;
+  // this saves only the name part of the file, no directory info is saved.
+
+  // some commands saves file data in bytes like ExportConfigCommand
-  private int length;
+
+  // some commands has files to download over http, like ExportLogCommand
+  // it's also used for uploading files by the preExecutor (like DeployCommand)
+  private File file;
-  /**
-   * @param fileName only the name of the file, should not include directory information
-   */
-    this.filename = fileName;
+    this.filename = FilenameUtils.getName(fileName);
-    if (fileType != FILE_TYPE_BINARY && fileType != FILE_TYPE_TEXT) {
+    if (fileType != FILE_TYPE_BINARY && fileType != FILE_TYPE_FILE) {
-    this.filename = file.getName();
+    this.filename = FilenameUtils.getName(file.getName());
-    try {
-      this.data = FileUtils.readFileToByteArray(file);
-    } catch (IOException e) {
-      throw new RuntimeException("Unable to read file: " + file.getAbsolutePath(), e);
+    if (fileType == FILE_TYPE_BINARY) {
+      try {
+        this.data = FileUtils.readFileToByteArray(file);
+      } catch (IOException e) {
+        throw new RuntimeException("Unable to read file: " + file.getAbsolutePath(), e);
+      }
+    } else {
+      this.file = file;
-  public int getLength() {
-    return this.data.length;
+  @JsonIgnore
+  public long getLength() {
+    if (type == FILE_TYPE_BINARY || type == FILE_TYPE_TEXT) {
+      return this.data.length;
+    } else {
+      return this.file.length();
+    }
-  /**
-   * Save the file to the current working directory
-   *
-   * @return the message you would like to return to the user.
-   */
-  public String saveFile() throws IOException {
-    return saveFile(null);
+  public File getFile() {
+    return file;
