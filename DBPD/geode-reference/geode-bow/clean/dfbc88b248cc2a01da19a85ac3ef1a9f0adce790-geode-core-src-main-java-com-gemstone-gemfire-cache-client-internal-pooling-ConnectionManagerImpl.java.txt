Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

-//     while (!allConnectionsMap.containsConnection(oldPC)) {
-//       // ok the connection has already been removed so we really can't do an
-//       // exchange yet.
-//       // As a quick hack lets just get a connection using borrow.
-//       // If it turns out to be in our excludedServer set then
-//       // we can loop and try to exchange it.
-//       // But first make sure oldPC's socket gets closed.
-//       oldPC.internalDestroy();
-//       newConnection = (PooledConnection)borrowConnection(acquireTimeout);
-//       if (excludedServers.contains(newConnection.getServer())) {
-//         oldPC = newConnection; // loop and try to exchange it
-//         newConnection = null;
-//       } else {
-//         // we found one so we can just return it
-//         return newConnection;
-//       }
-//     }
-          // need to reserve space for the following create
-//           if (connectionCount >= maxConnections) {
-//             throw new AllConnectionsInUseException();
-//           } else {
-          // WARNING: we may be going over maxConnections here
-          // @todo grid: this needs to be fixed
-            //We need to create a connection. Reserve space for it.
-            needToUndoEstimate = true;
-            connectionCount++;
-//             logger.info("DEBUG: exchangeConnection conCount(+1)->" + connectionCount);
-//             getPoolStats().incConCount(1);
-//           }
+          //We need to create a connection. Reserve space for it.
+          needToUndoEstimate = true;
+          connectionCount++;
