GEODE-5087: send a BatchDestroyOperation for each dropped event at serial primary sender (#1924)


+import org.apache.geode.cache.EntryOperation;
+import org.apache.geode.internal.cache.PartitionedRegion;
+import org.apache.geode.internal.cache.PartitionedRegionHelper;
+  protected void registerEventDroppedInPrimaryQueue(EntryEventImpl droppedEvent) {
+    if (queue == null) {
+      return;
+    }
+    ConcurrentParallelGatewaySenderQueue cpgsq = (ConcurrentParallelGatewaySenderQueue) queue;
+    PartitionedRegion prQ = cpgsq.getRegion(droppedEvent.getRegion().getFullPath());
+    if (prQ == null) {
+      if (logger.isDebugEnabled()) {
+        logger.debug("shadow partitioned region " + droppedEvent.getRegion().getFullPath()
+            + " is not created yet.");
+      }
+      return;
+    }
+    int bucketId = PartitionedRegionHelper.getHashKey((EntryOperation) droppedEvent);
+    long shadowKey = droppedEvent.getTailKey();
+
+    ParallelGatewaySenderQueue pgsq = (ParallelGatewaySenderQueue) cpgsq.getQueueByBucket(bucketId);
+    boolean isPrimary = prQ.getRegionAdvisor().getBucketAdvisor(bucketId).isPrimary();
+    if (isPrimary) {
+      pgsq.sendQueueRemovalMesssageForDroppedEvent(prQ, bucketId, shadowKey);
+      this.sender.getStatistics().incEventsDroppedDueToPrimarySenderNotRunning();
+      if (logger.isDebugEnabled()) {
+        logger.debug("register dropped event for primary queue. BucketId is " + bucketId
+            + ", shadowKey is " + shadowKey + ", prQ is " + prQ.getFullPath());
+      }
+    }
+  }
+
+  @Override
