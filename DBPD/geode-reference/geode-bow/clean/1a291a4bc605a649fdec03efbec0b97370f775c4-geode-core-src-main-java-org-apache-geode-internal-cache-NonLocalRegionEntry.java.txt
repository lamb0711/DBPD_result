GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

-import org.apache.geode.internal.cache.CachedDeserializable;
-import org.apache.geode.internal.cache.CachedDeserializableFactory;
-import org.apache.geode.internal.cache.DistributedRegion;
-import org.apache.geode.internal.cache.EntryEventImpl;
-import org.apache.geode.internal.cache.EntrySnapshot;
-import org.apache.geode.internal.cache.InternalRegion;
-import org.apache.geode.internal.cache.RegionClearedException;
-import org.apache.geode.internal.cache.RegionEntry;
-import org.apache.geode.internal.cache.RegionEntryContext;
-import org.apache.geode.internal.cache.Token;
-import org.apache.geode.internal.cache.lru.NewLRUClockHand;
+import org.apache.geode.internal.cache.eviction.EvictionList;
-  public void setCachedValue(Object newValue) {
+  void setCachedValue(Object newValue) {
-  public void setRecentlyUsed() {
+  public void setRecentlyUsed(RegionEntryContext context) {
-    // TODO Auto-generated method stub
-
+    // nothing
-    // TODO Auto-generated method stub
-    // TODO Auto-generated method stub
-
+    // nothing
-  public void setInUseByTransaction(boolean inUseByTransaction) {
-    // nothing
-  }
-
-  @Override
-  public void decRefCount(NewLRUClockHand lruList, InternalRegion region) {
+  public void decRefCount(EvictionList lruList, InternalRegion region) {
-  public void resetRefCount(NewLRUClockHand lruList) {
+  public void resetRefCount(EvictionList lruList) {
