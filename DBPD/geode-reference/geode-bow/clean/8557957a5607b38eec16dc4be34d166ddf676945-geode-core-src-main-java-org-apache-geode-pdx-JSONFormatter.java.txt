GEODE-6327: Ability to specify identity fields on JSON documents

- * JSONFormatter has a static method {@link JSONFormatter#fromJSON(String)} to convert a JSON
- * document into a {@link PdxInstance} and a static method {@link JSONFormatter#toJSON(PdxInstance)}
- * to convert a {@link PdxInstance} into a JSON Document.
+ * JSONFormatter has a static method {@link JSONFormatter#fromJSON(String, String...)} to convert a
+ * JSON document into a {@link PdxInstance} and a static method
+ * {@link JSONFormatter#toJSON(PdxInstance)} to convert a {@link PdxInstance} into a JSON Document.
-   * Converts a JSON document into a PdxInstance
+   * Converts a String JSON document into a PdxInstance
-   * @return the PdxInstance.
-   * @throws JSONFormatterException if unable to parse the JSON document
+   * @param jsonString The JSON String to convert to PDX
+   * @param identityFields Any desired identity fields on the JSON object to be used for equals and
+   *        hashCode computations
+   * @throws JSONFormatterException if unable to create the PdxInstance
+   * @return The PdxInstance
-  public static PdxInstance fromJSON(String jsonString) {
-    return new JSONFormatter().toPdxInstance(jsonString);
+  public static PdxInstance fromJSON(String jsonString, String... identityFields) {
+    return new JSONFormatter().toPdxInstance(jsonString, identityFields);
-   * Converts a JSON document into a PdxInstance
+   * Converts a Byte Array JSON document into a PdxInstance
-   * @return the PdxInstance.
-   * @throws JSONFormatterException if unable to parse the JSON document
+   * @param jsonByteArray The JSON Object as a byte array to convert to PDX
+   * @param identityFields Any desired identity fields on the JSON object to be used for equals and
+   *        hashCode computations
+   * @throws JSONFormatterException if unable to create the PdxInstance
+   * @return The PdxInstance
-  public static PdxInstance fromJSON(byte[] jsonByteArray) {
-    return new JSONFormatter().toPdxInstance(jsonByteArray);
+  public static PdxInstance fromJSON(byte[] jsonByteArray, String... identityFields) {
+    return new JSONFormatter().toPdxInstance(jsonByteArray, identityFields);
-   * Converts a JSON document into a PdxInstance
+   * Converts a JSON document (String or Byte Array) into a PdxInstance
-   * @param json either a json string or a byte[]
-   * @return the PdxInstance.
-   * @throws JSONFormatterException if unable to parse the JSON document
+   * @param json The JSON document (String or Byte Array) to convert to PDX
+   * @param identityFields Any desired identity fields on the JSON object to be used for equals and
+   *        hashCode computations
+   * @return The PdxInstance
+   * @throws JSONFormatterException if unable to create the PdxInstance
-  public PdxInstance toPdxInstance(Object json) {
+  public PdxInstance toPdxInstance(Object json, String... identityFields) {
-      return getPdxInstance(jp, states.NONE, null).getPdxInstance();
+      return getPdxInstance(jp, states.NONE, null, identityFields).getPdxInstance();
-   * Converts a PdxInstance into a JSON document
+   * Converts a PdxInstance into a JSON document in String form
-   * @return the JSON string.
-   * @throws JSONFormatterException if unable to create the JSON document
+   * @param pdxInstance the JSON string.
+   * @return the JSON string
+   *         JSONFormatterException if unable to create the JSON document
-   * @return the JSON string.
+   * @param pdxInstance The PdxInstance to convert
+   * @return the JSON string
-   * @return the JSON byte array.
+   * @param pdxInstance The PdxInstance to convert
+   * @return the JSON byte array
-   * @return the JSON byte array.
+   * @param pdxInstance The PdxInstance to convert
+   * @return the JSON byte array
-  private JSONToPdxMapper createJSONToPdxMapper(String className, JSONToPdxMapper parent) {
+  private JSONToPdxMapper createJSONToPdxMapper(String className, JSONToPdxMapper parent,
+      String... identityFields) {
-      return new PdxInstanceSortedHelper(className, parent);
+      return new PdxInstanceSortedHelper(className, parent, identityFields);
-      return new PdxInstanceHelper(className, parent);
+      return new PdxInstanceHelper(className, parent, identityFields);
-      JSONToPdxMapper currentPdxInstance) throws IOException {
+      JSONToPdxMapper currentPdxInstance, String... identityFields) throws IOException {
-      currentPdxInstance = createJSONToPdxMapper(null, null);// from getlist
+      currentPdxInstance = createJSONToPdxMapper(null, null, identityFields);// from getlist
-          JSONToPdxMapper tmp = createJSONToPdxMapper(currentFieldName, currentPdxInstance);
+          JSONToPdxMapper tmp =
+              createJSONToPdxMapper(currentFieldName, currentPdxInstance, identityFields);
