GEODE-1938: Update with review comments.
Cleaned up the error handling for getAllPools()

-/**
- *
- */
-        sendTypeToAllPools(newType, newTypeId, pool);
+        sendTypeToPool(newType, newTypeId, pool);
-  private void sendTypeToAllPools(PdxType type, int id, Pool pool) {
+  private void sendTypeToPool(PdxType type, int id, Pool pool) {
-      if (pools.isEmpty()) {
-        if (this.cache.isClosed()) {
-          throw this.cache.getCacheClosedException("PDX detected cache was closed", null);
-        } else {
-          throw new CacheClosedException("Client pools have been closed so the PDX type registry can not lookup a type.");
-        }
-      } else {
-        throw new InternalGemFireError("getType: Unable to determine PDXType for id " + typeId + " from existing client to server pools " + pools);
-      }
+      throw returnCorrectExceptionForFailure(pools, typeId, lastException);
-  private static Collection<Pool> getAllPools() {
+  private Collection<Pool> getAllPools() {
+
+
+    if (pools.isEmpty()) {
+      if (this.cache.isClosed()) {
+        throw new CacheClosedException("PDX detected cache was closed");
+      }
+      throw new CacheClosedException("Client pools have been closed so the PDX type registry is not available.");
+    }
-        sendEnumIdToAllPools(enumInfo, result, pool);
+        sendEnumIdToPool(enumInfo, result, pool);
-  private void sendEnumIdToAllPools(EnumInfo enumInfo, int id, Pool pool) {
+  private void sendEnumIdToPool(EnumInfo enumInfo, int id, Pool pool) {
-    if (pools.isEmpty()) {
-      if (this.cache.isClosed()) {
-        throw new CacheClosedException("PDX detected cache was closed");
-      }
-      throw new CacheClosedException("Client pools have been closed so the PDX type registry is not available.");
-    }
-    if (pools.isEmpty()) {
-      if (this.cache.isClosed()) {
-        throw new CacheClosedException("PDX detected cache was closed");
-      }
-      throw new CacheClosedException("Client pools have been closed so the PDX type registry is not available.");
-    }
-        sendTypeToAllPools(importedType, typeId, pool);
+        sendTypeToPool(importedType, typeId, pool);
-        sendEnumIdToAllPools(importedInfo, enumId, pool);
+        sendEnumIdToPool(importedInfo, enumId, pool);
-      if (pools.isEmpty()) {
-        if (this.cache.isClosed()) {
-          throw this.cache.getCacheClosedException("PDX detected cache was closed", null);
-        } else {
-          throw new CacheClosedException("Client pools have been closed so the PDX type registry can not lookup a type.");
-        }
-      } else {
-        throw new InternalGemFireError("Unable to determine PDXType for id " + typeId);
-      }
+      throw new InternalGemFireError("Unable to determine PDXType for id " + typeId);
