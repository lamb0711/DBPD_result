Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public abstract class IndexCreationHelper {  
-  
+public abstract class IndexCreationHelper {
+
-  //	The value in these fields is set during the execution of prepareFromClause
+  // The value in these fields is set during the execution of prepareFromClause
-  //While the value of fromClause is reset in execution of prepareFromClause,
+  // While the value of fromClause is reset in execution of prepareFromClause,
-  //String imports;
+  // String imports;
-  //Asif : The array containing the canonicalized iterator names
-  //which will get reused.
-  //TODO: Asif : How to make it final so that the invokers do not end up
+  // Asif : The array containing the canonicalized iterator names
+  // which will get reused.
+  // TODO: Asif : How to make it final so that the invokers do not end up
-  //Asif : Array containing canonicalized iterator definitions
-  //TODO: Asif : How to make it final so that the invokers do not end up
+  // Asif : Array containing canonicalized iterator definitions
+  // TODO: Asif : How to make it final so that the invokers do not end up
-  IndexCreationHelper(String fromClause, String projectionAttributes,
-      Cache cache) throws IndexInvalidException {
+  IndexCreationHelper(String fromClause, String projectionAttributes, Cache cache)
+      throws IndexInvalidException {
-    //this.indexedExpression = indexedExpression;
+    // this.indexedExpression = indexedExpression;
-    this.compiler = new QCompiler(true /* used from index creation*/);
+    this.compiler = new QCompiler(true /* used from index creation */);
-   * TODO:Asif . Check if this function is required public String getImports() {
-   * return this.imports; }
+   * TODO:Asif . Check if this function is required public String getImports() { return
+   * this.imports; }
-   *Asif: This function returns the canonicalized Iterator Definitions of the from
-   * clauses used in Index creation
+   * Asif: This function returns the canonicalized Iterator Definitions of the from clauses used in
+   * Index creation
-  
+
-   return false; 
-  } 
-  
+    return false;
+  }
+
+
+
