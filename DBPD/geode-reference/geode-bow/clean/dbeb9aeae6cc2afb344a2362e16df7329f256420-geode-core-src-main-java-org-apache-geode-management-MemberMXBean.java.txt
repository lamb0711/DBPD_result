Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * ObjectName of the MBean
- * :GemFire:type=Member,member=&ltname-or-dist-member-id&gt
+ * ObjectName of the MBean :GemFire:type=Member,member=&ltname-or-dist-member-id&gt
-   * @param numberOfLines
-   *          Number of lines to return, up to a maximum of 100.
+   * @param numberOfLines Number of lines to return, up to a maximum of 100.
-  
+
-  
+
-   * Shuts down the member. This is an asynchronous call and it will 
-   * return immediately without waiting for a result.
+   * Shuts down the member. This is an asynchronous call and it will return immediately without
+   * waiting for a result.
-  
+
-  
+
-   * @param commandString
-   *          Command to be executed.
+   * @param commandString Command to be executed.
-  
+
-   * @param commandString
-   *          Command to be execute.
-   * @param env
-   *          Environmental properties to use during command execution.
+   * @param commandString Command to be execute.
+   * @param env Environmental properties to use during command execution.
-  
+
-   * @param commandString
-   *          Command to be execute.
-   * @param env
-   *          Environmental properties to use during command execution.
-   * @param binaryData
-   *          Binary data specific to the command being executed.
+   * @param commandString Command to be execute.
+   * @param env Environmental properties to use during command execution.
+   * @param binaryData Binary data specific to the command being executed.
-   * @param includeRegionOwned
-   *          Whether to include disk stores owned by a region.
+   * @param includeRegionOwned Whether to include disk stores owned by a region.
-   * Returns the name or IP address of the host on which this member is
-   * running.
+   * Returns the name or IP address of the host on which this member is running.
-  
+
-  
+
-  
+
- 
+
-   * Returns the number of seconds that this member will wait for a
-   * distributed lock.
+   * Returns the number of seconds that this member will wait for a distributed lock.
-   * Returns the number of second that this member will lease a distributed
-   * lock.
+   * Returns the number of second that this member will lease a distributed lock.
-   * Any long-running GemFire process that was started with "start server" command from GFSH.
-   * It returns true even if that process has --disable-default-server=true.
+   * Any long-running GemFire process that was started with "start server" command from GFSH. It
+   * returns true even if that process has --disable-default-server=true.
-   * Returns whether this member has created the Manager service (it may be
-   * created, but not running).
+   * Returns whether this member has created the Manager service (it may be created, but not
+   * running).
-   * Returns the time (as a percentage) that this member's process time with
-   * respect to Statistics sample time interval. If process time between two
-   * sample time t1 & t2 is p1 and p2 
-   * cpuUsage = ((p2-p1) * 100) / ((t2-t1))
+   * Returns the time (as a percentage) that this member's process time with respect to Statistics
+   * sample time interval. If process time between two sample time t1 & t2 is p1 and p2 cpuUsage =
+   * ((p2-p1) * 100) / ((t2-t1))
-   * ProcessCpuTime is obtained from OperatingSystemMXBean.
-   * If process CPU time is not available in the platform it will be shown as -1
+   * ProcessCpuTime is obtained from OperatingSystemMXBean. If process CPU time is not available in
+   * the platform it will be shown as -1
+   * 
+   * 
+   * 
-  
+
-  
+
-  
+
-   * Returns the maximum number of open file descriptors allowed for the member's
-   * host operating system.
+   * Returns the maximum number of open file descriptors allowed for the member's host operating
+   * system.
-  
-  
+
+
-  
+
-   * Returns the number of puts per second. Only includes puts done explicitly
-   * on this member's cache, not those pushed from another member.
+   * Returns the number of puts per second. Only includes puts done explicitly on this member's
+   * cache, not those pushed from another member.
-  
+
-   * Returns the total number of times that a load on this cache has completed,
-   * as a result of either a local get or a remote net load.
+   * Returns the total number of times that a load on this cache has completed, as a result of
+   * either a local get or a remote net load.
-  
+
-  
+
-   * Returns the total number of times the a network load initiated by this cache
-   * has completed.
+   * Returns the total number of times the a network load initiated by this cache has completed.
-  
+
-  
+
-   * Returns the total number of times that a network search initiated by this cache 
-   * has completed.
+   * Returns the total number of times that a network search initiated by this cache has completed.
-  
+
-   * Returns the current number of disk tasks (op-log compaction, asynchronous
-   * recovery, etc.) that are waiting for a thread to run.
+   * Returns the current number of disk tasks (op-log compaction, asynchronous recovery, etc.) that
+   * are waiting for a thread to run.
-   * Returns the number of currently executing functions that will return
-   * resutls.
+   * Returns the number of currently executing functions that will return resutls.
-  
+
-   * Returns the number of bytes reads per second from all the disks of the member. 
+   * Returns the number of bytes reads per second from all the disks of the member.
-   * Returns the number of bytes written per second to disk to all the disks of the member. 
+   * Returns the number of bytes written per second to disk to all the disks of the member.
-   * Returns the average disk flush latency time in nanoseconds. 
+   * Returns the average disk flush latency time in nanoseconds.
-  
+
-  
+
-  
+
-   * Returns the rate of entries destroyed either by destroy cache operations or
-   * eviction.
+   * Returns the rate of entries destroyed either by destroy cache operations or eviction.
-   * Returns the total amount of time spent performing a "get initial image"
-   * operation when creating a region.
+   * Returns the total amount of time spent performing a "get initial image" operation when creating
+   * a region.
-   * Return the number of keys received while performing a "get initial image"
-   * operation when creating a region.
+   * Return the number of keys received while performing a "get initial image" operation when
+   * creating a region.
-  
+
-   * Returns the average time (in nanoseconds) spent deserializing objects.
-   * Includes deserializations that result in a PdxInstance.
+   * Returns the average time (in nanoseconds) spent deserializing objects. Includes
+   * deserializations that result in a PdxInstance.
-   * Returns the average latency (in nanoseconds) spent deserializing objects.
-   * Includes deserializations that result in a PdxInstance.
+   * Returns the average latency (in nanoseconds) spent deserializing objects. Includes
+   * deserializations that result in a PdxInstance.
-   * Returns the instantaneous rate of deserializing objects.
-   * Includes deserializations that result in a PdxInstance.
+   * Returns the instantaneous rate of deserializing objects. Includes deserializations that result
+   * in a PdxInstance.
-   * Returns the average time (in nanoseconds) spent serializing objects.
-   * Includes serializations that result in a PdxInstance.
+   * Returns the average time (in nanoseconds) spent serializing objects. Includes serializations
+   * that result in a PdxInstance.
-   * Returns the average latency (in nanoseconds) spent serializing objects.
-   * Includes serializations that result in a PdxInstance.
+   * Returns the average latency (in nanoseconds) spent serializing objects. Includes serializations
+   * that result in a PdxInstance.
-   * Returns the instantaneous rate of serializing objects.
-   * Includes serializations that result in a PdxInstance.
+   * Returns the instantaneous rate of serializing objects. Includes serializations that result in a
+   * PdxInstance.
-  
+
-  
+
-   * Returns the system load average for the last minute. The system load
-   * average is the sum of the number of runnable entities queued to the
-   * available processors and the number of runnable entities running on the
-   * available processors averaged over a period of time.
+   * Returns the system load average for the last minute. The system load average is the sum of the
+   * number of runnable entities queued to the available processors and the number of runnable
+   * entities running on the available processors averaged over a period of time.
-  
+
-  public long getGarbageCollectionTime();  
-  
+  public long getGarbageCollectionTime();
+
-  
+
-   * Returns the number JVM pauses (which may or may not include full garbage
-   * collection pauses) detected by GemFire.
+   * Returns the number JVM pauses (which may or may not include full garbage collection pauses)
+   * detected by GemFire.
-  
-  
+
+
-   * Returns the underlying host's current cpuActive percentage 
+   * Returns the underlying host's current cpuActive percentage
-  
+
-   * Returns true if a cache server is running on this member and able server requests from GemFire clients
+   * Returns true if a cache server is running on this member and able server requests from GemFire
+   * clients
-  
+
-  
+
-   * Returns current number of cache rebalance operations being directed by this process. 
+   * Returns current number of cache rebalance operations being directed by this process.
-  
+
-  
+
-   * Returns total number of times waits for a reply have completed. 
+   * Returns total number of times waits for a reply have completed.
-  
+
-   * The current number of nodes in this distributed system visible to this member. 
+   * The current number of nodes in this distributed system visible to this member.
-  
+
-  
+
-  
+
-  
+
