GEODE-2644: Cleanup logging related files

Cleanup files that helped fix logging related test failures or helped
with reviewing and understanding code while working on GEODE-2644.

* Remove warnings and improve code cleanliness
* Improve testing and failure messages

+import java.io.IOException;
+import java.io.StringWriter;
-import org.apache.geode.LogWriter;
-
-  /**
-   * Use the log writer to use some of its formatting code.
-   */
-  private final LogWriter logWriter;
-
-  public GemFireFormatter(LogWriter logWriter) {
-    this.logWriter = logWriter;
+  public GemFireFormatter() {
+    // nothing
-  public String format(LogRecord record) {
-    java.io.StringWriter sw = new java.io.StringWriter();
+  public String format(final LogRecord record) {
+    StringWriter sw = new StringWriter();
-    // if (record.getLoggerName() != null) {
-    // pw.print(' ');
-    // pw.print(record.getLoggerName());
-    // }
-    // if (record.getSourceClassName() != null) {
-    // pw.print(' ');
-    // pw.print(record.getSourceClassName());
-    // }
-    // if (record.getSourceMethodName() != null) {
-    // pw.print(' ');
-    // pw.print(record.getSourceMethodName());
-    // }
-        pw.println(
-            "Ignoring the following exception:");
+        pw.println("Ignoring the following exception:");
-    } catch (java.io.IOException ignore) {
+    } catch (IOException ignore) {
-    String result = sw.toString();
-    return result;
+    return sw.toString();
