Feature/expand pubsub support (#5284)

Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
Co-authored-by: Sarah <sabbey@pivotal.io>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
+import org.apache.geode.annotations.VisibleForTesting;
+import org.apache.geode.redis.internal.executor.GlobPattern;
+import org.apache.geode.redis.internal.netty.ExecutionHandlerContext;
-  public boolean exists(Object channelOrPattern, Client client) {
+  @VisibleForTesting
+  boolean exists(Object channelOrPattern, Client client) {
-  public void add(Subscription subscription) {
+  @VisibleForTesting
+  void add(Subscription subscription) {
-  public void remove(Object channel, Client client) {
-    subscriptions.removeIf(subscription -> subscription.isEqualTo(channel, client));
+  @VisibleForTesting
+  boolean remove(Object channel, Client client) {
+    return subscriptions.removeIf(subscription -> subscription.isEqualTo(channel, client));
-  public int size() {
+  @VisibleForTesting
+  int size() {
+
+  public synchronized long subscribe(String channel, ExecutionHandlerContext context,
+      Client client) {
+    if (!exists(channel, client)) {
+      add(new ChannelSubscription(client, channel, context));
+    }
+    return findSubscriptions(client).size();
+  }
+
+  public synchronized long psubscribe(GlobPattern pattern, ExecutionHandlerContext context,
+      Client client) {
+    if (!exists(pattern, client)) {
+      add(new PatternSubscription(client, pattern, context));
+    }
+    return findSubscriptions(client).size();
+  }
+
+  public synchronized long unsubscribe(Object channelOrPattern, Client client) {
+    remove(channelOrPattern, client);
+    return findSubscriptions(client).size();
+  }
+
