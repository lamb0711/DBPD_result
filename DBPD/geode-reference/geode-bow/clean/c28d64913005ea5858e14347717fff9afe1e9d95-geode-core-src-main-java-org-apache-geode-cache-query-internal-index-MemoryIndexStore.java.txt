Merge branch 'release/1.4.0'

- * 
+ *
-   * 
+   *
+  public Iterator<IndexStoreEntry> getKeysIterator() {
+    return new MemoryIndexStoreKeyIterator(this.valueToEntriesMap);
+  }
+
+  private class MemoryIndexStoreKeyIterator implements Iterator<IndexStoreEntry> {
+
+    private final Map valuesToEntriesMap;
+    private Object currKey;
+    private Iterator<Map.Entry> mapIterator;
+
+    public MemoryIndexStoreKeyIterator(Map valuesToEntriesMap) {
+      this.valuesToEntriesMap = valuesToEntriesMap;
+    }
+
+    @Override
+    public boolean hasNext() {
+      if (mapIterator == null) {
+        mapIterator = this.valuesToEntriesMap.entrySet().iterator();
+      }
+      if (mapIterator.hasNext()) {
+        Map.Entry currentEntry = mapIterator.next();
+        currKey = currentEntry.getKey();
+        if (currKey == IndexManager.NULL || currKey == QueryService.UNDEFINED) {
+          return hasNext();
+        }
+        return currKey != null;
+      }
+      return false;
+    }
+
+    @Override
+    public MemoryIndexStoreKey next() {
+      return new MemoryIndexStoreKey(currKey);
+    }
+  }
+
-      this(submap, indexKey, keysToRemove, GemFireCacheImpl.getInstance().cacheTimeMillis());
+      this(submap, indexKey, keysToRemove, cache.cacheTimeMillis());
+  class MemoryIndexStoreKey implements IndexStoreEntry {
+    private Object indexKey;
+
+    public MemoryIndexStoreKey(Object indexKey) {
+      this.indexKey = indexKey;
+    }
+
+    @Override
+
+    public Object getDeserializedKey() {
+      return indexKey;
+    }
+
+    @Override
+    public Object getDeserializedValue() {
+      throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public Object getDeserializedRegionKey() {
+      throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public boolean isUpdateInProgress() {
+      throw new UnsupportedOperationException();
+    }
+  }
-
