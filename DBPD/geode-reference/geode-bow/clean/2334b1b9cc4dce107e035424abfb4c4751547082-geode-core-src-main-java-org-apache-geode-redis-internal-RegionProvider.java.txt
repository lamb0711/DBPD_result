GEODE-3881: Replace bespoke random string generation with extant three-phrase generator. (#1880)

* GEODE-3881: Replace bespoke random string generation with extant three-phrase generator.
- Add unit test for three-phrase generator to ensure compatibility with region names.
- Rename parameter to improve clarity.
- Remove dead code.

* GEODE-3881: Why does the spotlessApply task not work consistently?!

* GEODE-3881: Change assertion messages to indicate failures.

-
-   * @param key Name of Region to create
+   * @param regionPath Name of Region to create
-  private Region<?, ?> createRegionGlobally(String key) {
+  private Region<?, ?> createRegionGlobally(String regionPath) {
-    r = cache.getRegion(key);
+    r = cache.getRegion(regionPath);
-      Result result = createRegionCmd.createRegion(key, defaultRegionType, null, null, true, null,
-          null, null, null, null, null, null, null, false, false, true, false, false, false, true,
-          null, null, null, null, null, null, null, null, null, null, null, null, null, false, null,
-          null, null, null, null, null, null, null, null, null, null);
+      Result result = createRegionCmd.createRegion(regionPath, defaultRegionType, null, null, true,
+          null, null, null, null, null, null, null, null, false, false, true, false, false, false,
+          true, null, null, null, null, null, null, null, null, null, null, null, null, null, false,
+          null, null, null, null, null, null, null, null, null, null, null);
-      r = cache.getRegion(key);
+      r = cache.getRegion(regionPath);
-        String err = "";
+        String err = "Unable to create region named \"" + regionPath + "\":\n";
-    /*
-     * if (query instanceof ListQuery) { return
-     * this.queryService.newQuery(((ListQuery)query).getQueryString(this.regions.get(key).
-     * getFullPath())); } else { return
-     * this.queryService.newQuery(((SortedSetQuery)query).getQueryString(this.regions.get(key).
-     * getFullPath())); }
-     */
-
