GEODE-7803: provide undeprecated internal region create (#4722)

You can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.
InternalRegionFactory used to be named RegionFactoryImpl.

-import org.apache.geode.InternalGemFireError;
-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.cache.DataPolicy;
-import org.apache.geode.cache.Scope;
+import org.apache.geode.cache.RegionShortcut;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-import org.apache.geode.internal.cache.InternalRegionArguments;
+import org.apache.geode.internal.cache.CacheFactoryStatics;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.cache.InternalRegionFactory;
-  private final Cache cache;
+  private final InternalCache cache;
-    this.cache = CacheFactory.getAnyInstance();
+    this.cache = CacheFactoryStatics.getAnyInstance();
-  @SuppressWarnings("unchecked")
-    GemFireCacheImpl gemFireCache = (GemFireCacheImpl) cache;
-    InternalRegionArguments ira = new InternalRegionArguments().setInternalRegion(true);
-    RegionAttributesCreation regionAttributesCreation = new RegionAttributesCreation();
-    regionAttributesCreation.setScope(Scope.DISTRIBUTED_ACK);
-    regionAttributesCreation.setDataPolicy(DataPolicy.REPLICATE);
-    regionAttributesCreation.addCacheListener(new RegionConfigurationCacheListener());
-
-    try {
-      return gemFireCache.createVMRegion(REGION_CONFIGURATION_METADATA_REGION,
-          regionAttributesCreation, ira);
-    } catch (IOException | ClassNotFoundException e) {
-      InternalGemFireError assErr = new InternalGemFireError("unexpected exception");
-      assErr.initCause(e);
-
-      throw assErr;
-    }
+    InternalRegionFactory<String, RegionConfiguration> regionFactory =
+        cache.createInternalRegionFactory(RegionShortcut.REPLICATE);
+    regionFactory.addCacheListener(new RegionConfigurationCacheListener());
+    regionFactory.setInternalRegion(true);
+    return regionFactory.create(REGION_CONFIGURATION_METADATA_REGION);
