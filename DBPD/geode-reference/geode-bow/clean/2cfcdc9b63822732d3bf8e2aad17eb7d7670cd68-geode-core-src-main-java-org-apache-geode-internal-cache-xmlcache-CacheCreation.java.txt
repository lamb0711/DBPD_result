GEODE-6990: Add xml persistence for OQL authorization (#4161)

- Added new cache.xml infrastructure for query-config-service including the
method authorizer
- Added a new CacheService QueryConfigurationService to store long
lasting configuration details for the QueryService
- Added testing for both of the above

Co-authored-by: Benjamin Ross <bross@pivotal.io>
Co-authored-by: Donal Evans <doevans@pivotal.io>
+import org.apache.geode.cache.query.internal.QueryConfigurationService;
+import org.apache.geode.cache.query.internal.QueryConfigurationServiceException;
+import org.apache.geode.cache.query.internal.QueryConfigurationServiceImpl;
+import org.apache.geode.cache.query.internal.xml.QueryConfigurationServiceCreation;
+import org.apache.geode.cache.query.internal.xml.QueryMethodAuthorizerCreation;
+  private QueryConfigurationServiceCreation queryConfigurationServiceCreation;
+
-      throws TimeoutException, CacheWriterException, GatewayException, RegionExistsException {
+      throws TimeoutException, CacheWriterException, GatewayException, RegionExistsException,
+      QueryConfigurationServiceException {
+    if (queryConfigurationServiceCreation != null) {
+      QueryConfigurationServiceImpl queryConfigService =
+          (QueryConfigurationServiceImpl) cache.getService(QueryConfigurationService.class);
+      if (queryConfigService != null) {
+        QueryMethodAuthorizerCreation authorizerCreation =
+            queryConfigurationServiceCreation.getMethodAuthorizerCreation();
+        if (authorizerCreation != null) {
+          queryConfigService.updateMethodAuthorizer(cache, authorizerCreation);
+        }
+      }
+    }
+
+  public QueryConfigurationServiceCreation getQueryConfigurationServiceCreation() {
+    return queryConfigurationServiceCreation;
+  }
+
+  public void setQueryConfigurationServiceCreation(
+      QueryConfigurationServiceCreation queryConfigurationServiceCreation) {
+    this.queryConfigurationServiceCreation = queryConfigurationServiceCreation;
+  }
+
