Merge branch 'release/1.4.0'

+import static org.apache.geode.internal.i18n.LocalizedStrings.LOCATOR_UNABLE_TO_RECOVER_VIEW;
+
-import org.apache.geode.InternalGemFireException;
-
-import org.apache.geode.distributed.internal.ClusterConfigurationService;
-import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.InternalGemFireException;
+import org.apache.geode.distributed.internal.ClusterConfigurationService;
+import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember.InternalDistributedMemberWrapper;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember.InternalDistributedMemberWrapper;
-import static org.apache.geode.internal.i18n.LocalizedStrings.LOCATOR_UNABLE_TO_RECOVER_VIEW;
-
-   * @param stateFile the file to persist state to/recover from
-  public GMSLocator(InetAddress bindAddress, File stateFile, String locatorString,
-      boolean usePreferredCoordinators, boolean networkPartitionDetectionEnabled,
-      LocatorStats stats, String securityUDPDHAlgo) {
+  public GMSLocator(InetAddress bindAddress, String locatorString, boolean usePreferredCoordinators,
+      boolean networkPartitionDetectionEnabled, LocatorStats stats, String securityUDPDHAlgo) {
-    this.viewFile = stateFile;
+  /**
+   * Test hook - set the persistent view file
+   */
+  public void setViewFile(File file) {
+    this.viewFile = file;
+  }
+
+    if (this.viewFile == null) {
+      this.viewFile = new File("locator" + server.getPort() + "view.dat");
+    }
