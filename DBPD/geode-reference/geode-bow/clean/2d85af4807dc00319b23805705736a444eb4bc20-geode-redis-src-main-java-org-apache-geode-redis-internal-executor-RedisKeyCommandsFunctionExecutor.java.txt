GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

+import static org.apache.geode.redis.internal.RedisCommandType.DEL;
+import static org.apache.geode.redis.internal.RedisCommandType.EXISTS;
+import static org.apache.geode.redis.internal.RedisCommandType.PERSIST;
+import static org.apache.geode.redis.internal.RedisCommandType.PEXPIREAT;
+import static org.apache.geode.redis.internal.RedisCommandType.PTTL;
+import static org.apache.geode.redis.internal.RedisCommandType.TYPE;
+
-import org.apache.geode.redis.internal.RedisCommandType;
-  private Region<ByteArrayWrapper, RedisData> region;
+  private final Region<ByteArrayWrapper, RedisData> region;
-    return (boolean) CommandFunction.execute(RedisCommandType.DEL, key, new Object[] {}, region);
+    return CommandFunction.execute(DEL, key, null, region);
-    return (boolean) CommandFunction.execute(RedisCommandType.EXISTS, key, new Object[] {}, region);
+    return CommandFunction.execute(EXISTS, key, null, region);
+  }
+
+  @Override
+  public long pttl(ByteArrayWrapper key) {
+    return CommandFunction.execute(PTTL, key, null, region);
+  }
+
+  @Override
+  public int pexpireat(ByteArrayWrapper key, long timestamp) {
+    return CommandFunction.execute(PEXPIREAT, key, timestamp, region);
+  }
+
+  @Override
+  public int persist(ByteArrayWrapper key) {
+    return CommandFunction.execute(PERSIST, key, null, region);
+  }
+
+  @Override
+  public String type(ByteArrayWrapper key) {
+    return CommandFunction.execute(TYPE, key, null, region);
