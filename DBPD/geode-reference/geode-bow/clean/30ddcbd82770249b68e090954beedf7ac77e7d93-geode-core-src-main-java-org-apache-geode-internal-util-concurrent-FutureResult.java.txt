GEODE-6588: Cleanup static analyzer warnings and generics (#3646)


-public class FutureResult implements Future {
+public class FutureResult<V> implements Future<V> {
-  private Object value;
+  private V value;
-    this.latch = new StoppableCountDownLatch(crit, 1);
+    latch = new StoppableCountDownLatch(crit, 1);
-  public FutureResult(Object value) {
+  public FutureResult(V value) {
-    this.latch = null;
+    latch = null;
-    if (this.isCancelled)
+    if (isCancelled)
-    this.isCancelled = true;
-    if (this.latch != null)
-      this.latch.countDown();
+    isCancelled = true;
+    if (latch != null)
+      latch.countDown();
-  public Object get() throws InterruptedException {
+  public V get() throws InterruptedException {
-    if (this.isCancelled) {
+    if (isCancelled) {
-    if (this.latch != null)
-      this.latch.await();
-    if (this.isCancelled) {
+    if (latch != null)
+      latch.await();
+    if (isCancelled) {
-    return this.value;
+    return value;
-  public Object get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException {
+  public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException {
-    if (this.isCancelled) {
+    if (isCancelled) {
-    if (this.latch != null) {
-      if (!this.latch.await(unit.toMillis(timeout))) {
+    if (latch != null) {
+      if (!latch.await(unit.toMillis(timeout))) {
-    return this.value;
+    return value;
-    return this.isCancelled;
+    return isCancelled;
-    return this.latch == null || this.latch.getCount() == 0L || this.isCancelled;
+    return latch == null || latch.getCount() == 0L || isCancelled;
-  public void set(Object value) {
+  public void set(V value) {
-    if (this.latch != null)
-      this.latch.countDown();
+    if (latch != null)
+      latch.countDown();
