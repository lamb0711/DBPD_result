GEODE-6194: add composite keys to jdbc (#3015)

Multiple --id column names can now be specified on "create jdbc-mapping"
using a comma separated list. 
The key object itself must then be a JSON string whose names are
the corresponding pdx field name for each id column name. 
The extension team is looking into changing composite keys for both GGC and JDBC
to something other than JSON.

+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
-        String key = getPrimaryKeyColumnNameFromMetaData(realTableName, metaData, ids);
+        List<String> keys = getPrimaryKeyColumnNamesFromMetaData(realTableName, metaData, ids);
-        result = new TableMetaData(realTableName, key, quoteString);
+        result = new TableMetaData(realTableName, keys, quoteString);
-  private String getPrimaryKeyColumnNameFromMetaData(String tableName, DatabaseMetaData metaData,
+  private List<String> getPrimaryKeyColumnNamesFromMetaData(String tableName,
+      DatabaseMetaData metaData,
+    List<String> keys = new ArrayList<>();
+
-      if (!doesColumnExistInTable(tableName, metaData, ids)) {
-        throw new JdbcConnectorException(
-            "The table " + tableName + " does not have a column named " + ids);
+      keys.addAll(Arrays.asList(ids.split(",")));
+      for (String key : keys) {
+        checkColumnExistsInTable(tableName, metaData, key);
-      return ids;
+    } else {
+      try (ResultSet primaryKeys = metaData.getPrimaryKeys(null, null, tableName)) {
+        while (primaryKeys.next()) {
+          String key = primaryKeys.getString("COLUMN_NAME");
+          keys.add(key);
+        }
+        if (keys.isEmpty()) {
+          throw new JdbcConnectorException(
+              "The table " + tableName + " does not have a primary key column.");
+        }
+      }
-    try (ResultSet primaryKeys = metaData.getPrimaryKeys(null, null, tableName)) {
-      if (!primaryKeys.next()) {
-        throw new JdbcConnectorException(
-            "The table " + tableName + " does not have a primary key column.");
-      }
-      String key = primaryKeys.getString("COLUMN_NAME");
-      if (primaryKeys.next()) {
-        throw new JdbcConnectorException(
-            "The table " + tableName + " has more than one primary key column.");
-      }
-      return key;
-    }
+    return keys;
-  private boolean doesColumnExistInTable(String tableName, DatabaseMetaData metaData,
+  private void checkColumnExistsInTable(String tableName, DatabaseMetaData metaData,
-          return true;
+          return;
+    } else if (caseInsensitiveMatches == 0) {
+      throw new JdbcConnectorException(
+          "The table " + tableName + " does not have a column named " + columnName);
-    return caseInsensitiveMatches != 0;
