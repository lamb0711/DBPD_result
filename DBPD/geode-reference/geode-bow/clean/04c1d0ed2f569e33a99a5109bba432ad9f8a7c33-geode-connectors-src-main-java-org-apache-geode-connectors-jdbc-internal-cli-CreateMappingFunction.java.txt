GEODE-5935: move jdbc xml mapping to be in a region  (#2739)

The jdbc region-mapping xml element is now jdbc:mapping.
It no longer has a "region" attribute since it is nested in a region.
Creating a jdbc-mapping requires that the region already exists.
The jdbc:mapping element is now nested in a region element instead of the cache element.
The old connector-service element has been completely removed.
Some of the jdbc-mapping gfsh commands now require at least one server to be running.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen21@apache.org>
Co-authored-by: Ben Ross @BenjaminPerryRoss 

+import org.apache.geode.cache.Cache;
-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
-public class CreateMappingFunction extends CliFunction<ConnectorService.RegionMapping> {
+public class CreateMappingFunction extends CliFunction<RegionMapping> {
-  public CliFunctionResult executeFunction(FunctionContext<ConnectorService.RegionMapping> context)
+  public CliFunctionResult executeFunction(FunctionContext<RegionMapping> context)
-    ConnectorService.RegionMapping regionMapping = context.getArguments();
+    RegionMapping regionMapping = context.getArguments();
+
+    verifyRegionExists(context, regionMapping);
+  private void verifyRegionExists(FunctionContext<RegionMapping> context,
+      RegionMapping regionMapping) {
+    Cache cache = context.getCache();
+    String regionName = regionMapping.getRegionName();
+    if (cache.getRegion(regionName) == null) {
+      throw new IllegalStateException(
+          "create jdbc-mapping requires that the region \"" + regionName + "\" exists.");
+    }
+  }
+
-      ConnectorService.RegionMapping regionMapping) throws RegionMappingExistsException {
+      RegionMapping regionMapping) throws RegionMappingExistsException {
