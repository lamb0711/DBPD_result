Merge branch 'release/1.0.0-incubating.M1'

- * ========================================================================= 
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved. 
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- * =========================================================================
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+  private volatile boolean isMetadataStable = true; 
+  
-      Set<Integer> bucketsWithoutServer = new HashSet<Integer>();
-          bucketsWithoutServer.add(bucketId);          
-          continue;
+          //If we don't have the metadata for some buckets, return
+          //null, indicating that we don't have any metadata. This
+          //will cause us to use the non-single hop path.
+          return null;
-      if (!serverToBucketsMap.isEmpty() ) {
-        serverToBucketsMap.entrySet().iterator().next().getValue().addAll(
-            bucketsWithoutServer);
-      }
-      
-    Set<Integer> bucketSetWithoutServer =  new HashSet<Integer>();
-      if ((serversList == null || serversList.size() == 0) ) {       
-        bucketSetWithoutServer.add(bucketId);        
-        continue;
+      if (serversList == null || serversList.size() == 0) {
+        //If we don't have the metadata for some buckets, return
+        //null, indicating that we don't have any metadata. This
+        //will cause us to use the non-single hop path.
+        return null;
-    prunedServerToBucketsMap.entrySet().iterator().next().getValue().addAll(
-        bucketSetWithoutServer);
-    
+    this.setMetadataStable(false);
+  public boolean isMetadataStable() {
+    return isMetadataStable;
+  }
+
+  public void setMetadataStable(boolean isMetadataStable) {
+    this.isMetadataStable = isMetadataStable;
+  }
+
