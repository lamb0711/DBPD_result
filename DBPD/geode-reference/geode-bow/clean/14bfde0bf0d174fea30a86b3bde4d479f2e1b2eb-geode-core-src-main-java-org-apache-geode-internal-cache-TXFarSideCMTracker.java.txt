Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-  public boolean commitProcessReceived(Object key, DistributionManager dm) {
-    // Assume that after the member has departed that we have all its pending
-    // transaction messages
-    if (key instanceof TXLockId) {
-      TXLockId lk = (TXLockId) key;
-      waitForMemberToDepart(lk.getMemberId(), dm);
-    } else if (key instanceof TXId) {
-      TXId id = (TXId) key;
-      waitForMemberToDepart(id.getMemberId(), dm);
-    } else {
-      Assert.assertTrue(false, "TXTracker received an unknown key class: " + key.getClass());
-    }
-
-    final TXCommitMessage mess;
-    synchronized (this.txInProgress) {
-      mess = (TXCommitMessage) this.txInProgress.get(key);
-      if (null != mess && mess.isProcessing()) {
+  public boolean commitProcessReceived(Object key) {
+    final TXCommitMessage message;
+    synchronized (txInProgress) {
+      message = (TXCommitMessage) getTxInProgress().get(key);
+      if (foundTxInProgress(message)) {
-      for (int i = this.txHistory.length - 1; i >= 0; --i) {
-        if (key.equals(this.txHistory[i])) {
-          return true;
-        }
+
+      if (foundFromHistory(key)) {
+        return true;
-    if (mess != null) {
-      synchronized (mess) {
-        if (!mess.isProcessing()) {
+    if (message != null) {
+      synchronized (message) {
+        if (!message.isProcessing()) {
-          mess.setDontProcess();
+          message.setDontProcess();
+  Map getTxInProgress() {
+    return txInProgress;
+  }
+
+  boolean foundTxInProgress(TXCommitMessage message) {
+    return null != message && message.isProcessing();
+  }
+
+  boolean foundFromHistory(Object key) {
+    for (int i = this.txHistory.length - 1; i >= 0; --i) {
+      if (key.equals(this.txHistory[i])) {
+        return true;
+      }
+    }
+    return false;
+  }
+
-            logger.error(LocalizedMessage.create(
-                LocalizedStrings.TxFarSideTracker_WAITING_TO_COMPLETE_ON_MESSAGE_0_CAUGHT_AN_INTERRUPTED_EXCEPTION,
-                commitMessage), ie);
+            logger.error(
+                String.format("Waiting to complete on message %s caught an interrupted exception",
+                    commitMessage),
+                ie);
