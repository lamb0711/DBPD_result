GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-public class GetOperationContext extends KeyValueOperationContext {
+public abstract class GetOperationContext extends KeyValueOperationContext {
-   * 
-   * @param key
-   *                the key for this operation
-   * @param postOperation
-   *                true if the context is for the post-operation case
+   *
+   * @param code          the {@link com.gemstone.gemfire.cache.operations.OperationContext.OperationCode} for this
+   *                      context
+   * @param key           the key for this operation
+   * @param postOperation true if the context is for the post-operation case
-  public GetOperationContext(Object key, boolean postOperation) {
-    super(key, null, false, postOperation);
-  }
-
-  /**
-   * Return the operation associated with the <code>OperationContext</code>
-   * object.
-   * 
-   * @return <code>OperationCode.GET</code>.
-   */
-  @Override
-  public OperationCode getOperationCode() {
-    return OperationCode.GET;
-  }
-
-  /**
-   * Set the post-operation flag to true.
-   */
-  @Override
-  public void setPostOperation() {
-    super.setPostOperation();
+  protected GetOperationContext(OperationCode code, Object key, boolean postOperation) {
+    super(code, key, null, false, postOperation);
