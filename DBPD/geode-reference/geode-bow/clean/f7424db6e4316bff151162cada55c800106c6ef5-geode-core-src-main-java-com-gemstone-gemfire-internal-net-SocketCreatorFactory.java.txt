GEODE-420: Amended method signature in SSLConfigurationFactory.java and SocketCreatorFactory.java to be more generic.
Deprecated Cluster-ssl-* configuration and replaced it with new ssl-* configuration properties.

-  private static final String NON_SSL = "Non_SSL";
-    initialize();
-  private void initialize() {
-    //Hack... get a default cluster socket creator initialized
-    getClusterSSLSocketCreator();
-  }
-
+    System.out.println("SocketCreatorFactory.getSSLSocketCreatorForComponent SSLEnabledComponent:"+sslEnabledComponent);
+    System.out.println("SocketCreatorFactory.getSSLSocketCreatorForComponent SSLEnabledComponent:"+sslConfigForComponent);
-  public static SocketCreator getClusterSSLSocketCreator() {
-    SSLConfig sslConfigForComponent = SSLConfigurationFactory.getSSLConfigForComponent(SSLEnabledComponent.CLUSTER);
-    return getInstance().getOrCreateSocketCreatorForSSLEnabledComponent(SSLEnabledComponent.CLUSTER, sslConfigForComponent);
-  }
-
-  public static SocketCreator getServerSSLSocketCreator() {
-    SSLConfig sslConfigForComponent = SSLConfigurationFactory.getSSLConfigForComponent(SSLEnabledComponent.SERVER);
-    return getInstance().getOrCreateSocketCreatorForSSLEnabledComponent(SSLEnabledComponent.SERVER, sslConfigForComponent);
-  }
-
-  public static SocketCreator getGatewaySSLSocketCreator() {
-    SSLConfig sslConfigForComponent = SSLConfigurationFactory.getSSLConfigForComponent(SSLEnabledComponent.GATEWAY);
-    return getInstance().getOrCreateSocketCreatorForSSLEnabledComponent(SSLEnabledComponent.GATEWAY, sslConfigForComponent);
-  }
-
-  public static SocketCreator getJMXManagerSSLSocketCreator() {
-    SSLConfig sslConfigForComponent = SSLConfigurationFactory.getSSLConfigForComponent(SSLEnabledComponent.JMX);
-    return getInstance().getOrCreateSocketCreatorForSSLEnabledComponent(SSLEnabledComponent.JMX, sslConfigForComponent);
-  }
-
-  public static SocketCreator getHTTPServiceSSLSocketCreator() {
-    SSLConfig sslConfigForComponent = SSLConfigurationFactory.getSSLConfigForComponent(SSLEnabledComponent.HTTP_SERVICE);
-    return getInstance().getOrCreateSocketCreatorForSSLEnabledComponent(SSLEnabledComponent.HTTP_SERVICE, sslConfigForComponent);
-  }
-
-      } else if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), sslComponent.getConstant())) {
+      } else if (ArrayUtils.contains(distributionConfig.getSSLEnabledComponents(), sslComponent)) {
