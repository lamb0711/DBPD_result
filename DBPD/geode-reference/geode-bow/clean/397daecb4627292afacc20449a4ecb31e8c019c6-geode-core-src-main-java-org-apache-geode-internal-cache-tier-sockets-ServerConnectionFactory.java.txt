GEODE-3774: moved service loader initialization around to avoid double-check locking

+  private final ClientProtocolServiceLoader clientProtocolServiceLoader;
-  private Map<String, Class<? extends Authenticator>> authenticators = null;
+  private Map<String, Class<? extends Authenticator>> authenticators;
-  public ServerConnectionFactory() {}
+  public ServerConnectionFactory() {
-  private synchronized void initializeAuthenticatorsMap() {
-    if (authenticators != null) {
-      return;
-    }
-    HashMap<String, Class<? extends Authenticator>> tmp = new HashMap<>();
-
+    authenticators = new HashMap<>();
-      tmp.put(streamAuthenticator.implementationID(), streamAuthenticator.getClass());
+      authenticators.put(streamAuthenticator.implementationID(), streamAuthenticator.getClass());
-
-    authenticators = tmp;
-  }
-
-  private synchronized ClientProtocolService initializeClientProtocolService(
-      StatisticsFactory statisticsFactory, String statisticsName) {
-    if (clientProtocolService != null) {
-      return clientProtocolService;
-    }
-
-    // use temp to make sure we publish properly.
-    ClientProtocolService tmp = new ClientProtocolServiceLoader().loadService();
-    tmp.initializeStatistics(statisticsName, statisticsFactory);
-
-    clientProtocolService = tmp;
-    return clientProtocolService;
+    clientProtocolServiceLoader = new ClientProtocolServiceLoader();
-    if (authenticators == null) {
-      initializeAuthenticatorsMap();
-    }
-  private ClientProtocolService getOrCreateClientProtocolService(
+  private synchronized ClientProtocolService getClientProtocolService(
-      return initializeClientProtocolService(statisticsFactory, serverName);
+      clientProtocolService = clientProtocolServiceLoader.lookupService();
+      clientProtocolService.initializeStatistics(serverName, statisticsFactory);
-    if (communicationMode == ProtobufClientServerProtocol.getModeNumber()) {
+    if (ProtobufClientServerProtocol.getModeNumber() == communicationMode) {
-        getOrCreateClientProtocolService(cache.getDistributedSystem(), acceptor.getServerName());
+        getClientProtocolService(cache.getDistributedSystem(), acceptor.getServerName());
