GEODE-1377: Initial move of system properties from private to public

-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.net.BindException;
-import java.net.Inet4Address;
-import java.net.Inet6Address;
-import java.net.InetAddress;
-import java.net.InetSocketAddress;
-import java.net.NetworkInterface;
-import java.net.ServerSocket;
-import java.net.Socket;
-import java.net.SocketAddress;
-import java.net.SocketException;
-import java.net.UnknownHostException;
-import java.nio.channels.ServerSocketChannel;
-import java.security.GeneralSecurityException;
-import java.security.KeyStore;
-import java.security.KeyStoreException;
-import java.security.NoSuchAlgorithmException;
-import java.security.SecureRandom;
-import java.security.UnrecoverableKeyException;
-import java.security.cert.Certificate;
-import java.security.cert.CertificateException;
-import java.security.cert.X509Certificate;
-import java.util.Enumeration;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Hashtable;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Random;
-import java.util.Set;
-import java.util.StringTokenizer;
-import java.util.Vector;
-
-import javax.naming.Context;
-import javax.naming.NamingEnumeration;
-import javax.naming.directory.Attribute;
-import javax.naming.directory.Attributes;
-import javax.naming.directory.DirContext;
-import javax.naming.directory.InitialDirContext;
-import javax.net.ServerSocketFactory;
-import javax.net.SocketFactory;
-import javax.net.ssl.SSLContext;
-import javax.net.ssl.SSLException;
-import javax.net.ssl.SSLPeerUnverifiedException;
-import javax.net.ssl.SSLServerSocket;
-import javax.net.ssl.SSLSession;
-import javax.net.ssl.SSLSocket;
-
-
-import java.util.*;
-
-import javax.net.ssl.*;
-
+import javax.naming.Context;
+import javax.naming.NamingEnumeration;
+import javax.naming.directory.Attribute;
+import javax.naming.directory.Attributes;
+import javax.naming.directory.DirContext;
+import javax.naming.directory.InitialDirContext;
+import javax.net.ServerSocketFactory;
+import javax.net.SocketFactory;
+import javax.net.ssl.*;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.net.*;
+import java.nio.channels.ServerSocketChannel;
+import java.security.*;
+import java.security.cert.Certificate;
+import java.security.cert.CertificateException;
+import java.security.cert.X509Certificate;
+import java.util.*;
+
-  public static final String USE_LINK_LOCAL_ADDRESSES_PROPERTY = 
-      "gemfire.net.useLinkLocalAddresses";
+  public static final String USE_LINK_LOCAL_ADDRESSES_PROPERTY =
+      DistributionConfig.GEMFIRE_PREFIX + "net.useLinkLocalAddresses";
-  public static final boolean FORCE_DNS_USE = Boolean.getBoolean("gemfire.forceDnsUse");
+  public static final boolean FORCE_DNS_USE = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "forceDnsUse");
-    String str = System.getProperty("gemfire.setTcpKeepAlive");
+    String str = System.getProperty(DistributionConfig.GEMFIRE_PREFIX + "setTcpKeepAlive");
-      ENABLE_TCP_KEEP_ALIVE = Boolean.getBoolean("gemfire.setTcpKeepAlive");
+      ENABLE_TCP_KEEP_ALIVE = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "setTcpKeepAlive");
-   * initialized using defaults in {@link 
-   * com.gemstone.gemfire.distributed.internal.DistributionConfig}. If any 
+   * initialized using defaults in {@link
+   * DistributionConfig}. If any
-   * initializing it using defaults in {@link 
-   * com.gemstone.gemfire.distributed.internal.DistributionConfig}. If any 
+   * initializing it using defaults in {@link
+   * DistributionConfig}. If any
-   * Perform initialization using defaults in {@link 
-   * com.gemstone.gemfire.distributed.internal.DistributionConfig}.  If any
+   * Perform initialization using defaults in {@link
+   * DistributionConfig}.  If any
-    String className = System.getProperty("gemfire.clientSocketFactory");
+    String className = System.getProperty(DistributionConfig.GEMFIRE_PREFIX + "clientSocketFactory");
