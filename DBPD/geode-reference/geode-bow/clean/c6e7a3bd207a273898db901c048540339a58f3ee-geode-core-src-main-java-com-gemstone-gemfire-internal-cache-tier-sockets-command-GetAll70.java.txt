client server

client server

+import java.io.IOException;
+import java.util.Iterator;
+import java.util.Set;
+
-import com.gemstone.gemfire.i18n.LogWriterI18n;
-import com.gemstone.gemfire.internal.cache.tier.sockets.*;
+import com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommand;
+import com.gemstone.gemfire.internal.cache.tier.sockets.ChunkedMessage;
+import com.gemstone.gemfire.internal.cache.tier.sockets.Message;
+import com.gemstone.gemfire.internal.cache.tier.sockets.ObjectPartList;
+import com.gemstone.gemfire.internal.cache.tier.sockets.Part;
+import com.gemstone.gemfire.internal.cache.tier.sockets.ServerConnection;
+import com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList;
+import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
-import java.io.IOException  ;
-import java.util.Iterator;
-import java.util.Set;
-
+      try {
+        GeodeSecurityUtil.authorizeRegionRead(regionName, key.toString());
+      }
+      catch (NotAuthorizedException ex) {
+        logger.warn(LocalizedMessage.create(LocalizedStrings.GetAll_0_CAUGHT_THE_FOLLOWING_EXCEPTION_ATTEMPTING_TO_GET_VALUE_FOR_KEY_1, new Object[]{servConn.getName(), key}), ex);
+        values.addExceptionPart(key, ex);
+        continue;
+      }
+
+
+        data = GeodeSecurityUtil.postProcess(regionName, key, data);
+
