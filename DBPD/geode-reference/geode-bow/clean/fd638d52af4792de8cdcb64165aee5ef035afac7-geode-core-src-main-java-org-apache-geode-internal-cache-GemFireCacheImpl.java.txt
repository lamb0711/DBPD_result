Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

-import org.apache.geode.internal.security.SecurityServiceFactory;
-  private final SecurityService securityService;
+  private final SecurityService securityService = SecurityService.getSecurityService();
-  public static GemFireCacheImpl createClient(InternalDistributedSystem system, PoolFactory pf,
+  public static GemFireCacheImpl createClient(DistributedSystem system, PoolFactory pf,
-  public static GemFireCacheImpl create(InternalDistributedSystem system, CacheConfig cacheConfig) {
+  public static GemFireCacheImpl create(DistributedSystem system, CacheConfig cacheConfig) {
-  static GemFireCacheImpl createWithAsyncEventListeners(InternalDistributedSystem system,
+  static GemFireCacheImpl createWithAsyncEventListeners(DistributedSystem system,
-  public static Cache create(InternalDistributedSystem system, boolean existingOk,
+  public static Cache create(DistributedSystem system, boolean existingOk,
-  private static GemFireCacheImpl basicCreate(InternalDistributedSystem system, boolean existingOk,
+  private static GemFireCacheImpl basicCreate(DistributedSystem system, boolean existingOk,
-  private GemFireCacheImpl(boolean isClient, PoolFactory pf, InternalDistributedSystem system,
+  private GemFireCacheImpl(boolean isClient, PoolFactory pf, DistributedSystem system,
-      this.system = system;
+      this.system = (InternalDistributedSystem) system;
-
-      this.securityService = this.system.getSecurityService();
-
-  public SecurityService getSecurityService() {
-    return this.securityService;
-  }
-
-  @Override
+    // first initialize the security service using the security properties
+    this.securityService.initSecurity(this.system.getConfig().getSecurityProps());
+    // secondly if cacheConfig has a securityManager, use that instead
+    if (this.cacheConfig.getSecurityManager() != null) {
+      this.securityService.setSecurityManager(this.cacheConfig.getSecurityManager());
+    }
+    // if cacheConfig has a postProcessor, use that instead
+    if (this.cacheConfig.getPostProcessor() != null) {
+      this.securityService.setPostProcessor(this.cacheConfig.getPostProcessor());
+    }
+
