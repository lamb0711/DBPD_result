Fixing a resource leak in IndexRepositoryImpl

The IndexRepositoryImpl was not closing the old DirectoryReader when it
refreshed. Instead of using Directory reader, using SearcherManager to
get an IndexSearcher and refresh the searcher after changes.

-import org.apache.lucene.index.DirectoryReader;
+import org.apache.lucene.search.SearcherManager;
-  private volatile DirectoryReader reader;
-  private volatile IndexSearcher searcher;
+  private final SearcherManager searcherManager;
-    reader = DirectoryReader.open(writer, APPLY_ALL_DELETES);
+    searcherManager = new SearcherManager(writer, APPLY_ALL_DELETES, null);
-    IndexSearcher searcherSnapshot = searcher;
-    TopDocs docs = searcherSnapshot.search(query, limit);
-    for(ScoreDoc scoreDoc : docs.scoreDocs) {
-      Document doc = searcher.doc(scoreDoc.doc);
-      Object key = SerializerUtil.getKey(doc);
-      collector.collect(key, scoreDoc.score);
+    IndexSearcher searcher = searcherManager.acquire();
+    try {
+      TopDocs docs = searcher.search(query, limit);
+      for(ScoreDoc scoreDoc : docs.scoreDocs) {
+        Document doc = searcher.doc(scoreDoc.doc);
+        Object key = SerializerUtil.getKey(doc);
+        collector.collect(key, scoreDoc.score);
+      }
+    } finally {
+      searcherManager.release(searcher);
-    DirectoryReader newReader = DirectoryReader.openIfChanged(reader);
-    if(newReader != null) {
-      reader = newReader;
-      searcher = new IndexSearcher(reader);
-    }
+    searcherManager.maybeRefresh();
