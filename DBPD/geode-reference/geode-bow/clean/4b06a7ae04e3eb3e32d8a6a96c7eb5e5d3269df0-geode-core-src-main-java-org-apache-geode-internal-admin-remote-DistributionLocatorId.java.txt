Revert "GEODE-7808: standardize on use of HostAndPort to form client-side connections (#4743)" (#4761)

This reverts commit 0af626462642c6352840cd6e81a5265c74045c7f.
That commit seems to have caused a severe performance drop in several
Benchmark tests:

org.apache.geode.benchmark.tests.PartitionedGetBenchmark
              average ops/second  Baseline:    981794.46  Test:     41239.82  Difference:  -95.8%
org.apache.geode.benchmark.tests.ReplicatedGetBenchmark
              average ops/second  Baseline:    972769.18  Test:     41299.96  Difference:  -95.8%
org.apache.geode.benchmark.tests.PartitionedNonIndexedQueryBenchmark
              average ops/second  Baseline:        90.05  Test:        70.52  Difference:  -21.7%
+import java.net.InetSocketAddress;
+import org.apache.commons.validator.routines.InetAddressValidator;
-import org.apache.geode.distributed.internal.tcpserver.HostAndPort;
+import org.apache.geode.internal.net.SocketCreator;
-  public HostAndPort getHost() throws UnknownHostException {
-    if (host == null && hostname == null) {
+  public InetSocketAddress getHost() throws UnknownHostException {
+    if (this.hostname != null) {
+      boolean isIpString = InetAddressValidator.getInstance().isValid(this.hostname);
+      if (isIpString) {
+        if (this.host == null) {
+          this.host = InetAddress.getByName(this.hostname);
+        }
+        return new InetSocketAddress(this.host, this.port);
+      }
+    }
+
+    if (this.hostname == null) {
+      if (this.host != null) {
+        return new InetSocketAddress(this.host, this.port);
+      }
-    String addr = hostname;
-    if (host != null) {
-      addr = host.getHostName();
-    }
-    return new HostAndPort(addr, port);
+    return new InetSocketAddress(this.hostname, this.port);
-        sb.append(this.host.getHostName());
+        sb.append(SocketCreator.getHostName(this.host));
