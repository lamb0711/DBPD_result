GEODE-6588: Cleanup generics and other static analyzer issues. (#3391)


-import java.util.Iterator;
-  private static void writeServerLocations(Collection/* <ServerLocation> */ serverLocations,
+  private static void writeServerLocations(Collection<ServerLocation> serverLocations,
-    int length = serverLocations.size();
-    out.writeInt(length);
-    for (Iterator itr = serverLocations.iterator(); itr.hasNext();) {
-      ServerLocation next = (ServerLocation) itr.next();
-      InternalDataSerializer.invokeToData(next, out);
+    out.writeInt(serverLocations.size());
+    for (ServerLocation serverLocation : serverLocations) {
+      InternalDataSerializer.invokeToData(serverLocation, out);
-    int length = bucketServerLocations.size();
-    out.writeInt(length);
-    for (Iterator itr = bucketServerLocations.iterator(); itr.hasNext();) {
-      ServerLocation next = (ServerLocation) itr.next();
-      InternalDataSerializer.invokeToData(next, out);
+    out.writeInt(bucketServerLocations.size());
+    for (BucketServerLocation66 serverLocation : bucketServerLocations) {
+      InternalDataSerializer.invokeToData(serverLocation, out);
-  public static ArrayList/* <ServerLocation> */ readServerLocationList(DataInput in)
+  private static <T extends Collection<ServerLocation>> T readServerLocations(DataInput in,
+      int size, T serverLocations)
-    int size = in.readInt();
-    if (size < 0) {
-      return null;
-    }
-    ArrayList serverLocations = new ArrayList(size);
+
-  public static void writeServerLocationList(List/* <ServerLocation> */ serverLocations,
+
+  static ArrayList<ServerLocation> readServerLocationList(DataInput in)
+      throws IOException, ClassNotFoundException {
+    int size = in.readInt();
+    if (size < 0) {
+      return null;
+    }
+    return readServerLocations(in, size, new ArrayList<>(size));
+  }
+
+  static void writeServerLocationList(List<ServerLocation> serverLocations,
-  public static void writeServerLocationSet(Set/* <ServerLocation> */ serverLocations,
+  static void writeServerLocationSet(Set<ServerLocation> serverLocations,
-  public static HashSet/* <ServerLocation> */ readServerLocationSet(DataInput in)
+  static HashSet<ServerLocation> readServerLocationSet(DataInput in)
-    HashSet serverLocations = new HashSet(size);
-    for (int i = 0; i < size; i++) {
-      ServerLocation next = new ServerLocation();
-      InternalDataSerializer.invokeFromData(next, in);
-      serverLocations.add(next);
-    }
-    return serverLocations;
+    return readServerLocations(in, size, new HashSet<>(size));
-    HashSet bucketServerLocations = new HashSet(size);
+    HashSet<BucketServerLocation66> bucketServerLocations = new HashSet<>(size);
