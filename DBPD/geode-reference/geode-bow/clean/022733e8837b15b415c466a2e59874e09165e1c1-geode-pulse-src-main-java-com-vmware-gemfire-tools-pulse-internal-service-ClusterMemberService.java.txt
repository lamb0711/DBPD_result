GEODE-907: Switch all fields from floats to doubles

- This is because when Jackson serializes a float (to JSON) it does so
  through an implicit cast to a double which alters the precision.
  Practically, a number like 23.99F ends up being 23.98999999234D which
  messes with unit tests and displaying in the UI.

-      DecimalFormat df2 = new DecimalFormat(
-          PulseConstants.DECIMAL_FORMAT_PATTERN);
+      DecimalFormat df2 = new DecimalFormat(PulseConstants.DECIMAL_FORMAT_PATTERN);
-        float heapUsage = ((float) currentHeap / (float) usedHeapSize) * 100;
-        memberJSON
-            .put(this.HEAP_USAGE, Double.valueOf(df2.format(heapUsage)));
+        double heapUsage = ((double) currentHeap / (double) usedHeapSize) * 100;
+        memberJSON.put(this.HEAP_USAGE, Double.valueOf(df2.format(heapUsage)));
-      Float currentCPUUsage = clusterMember.getCpuUsage();
+      double currentCPUUsage = clusterMember.getCpuUsage();
-      memberJSON.put("cpuUsage", Float.valueOf(df2.format(currentCPUUsage)));
+      memberJSON.put("cpuUsage", df2.format(currentCPUUsage));
-      memberJSON.put("uptime",
-          TimeUtils.convertTimeSecondsToHMS(clusterMember.getUptime()));
+      memberJSON.put("uptime", TimeUtils.convertTimeSecondsToHMS(clusterMember.getUptime()));
