Add GfshParserRule to facilitate command unit tests

-
-  private CommandManager commandManager = null;
-
-  public GfshParser() {
-    this(null);
-  }
-
-  public GfshParser(Properties cacheProperties) {
-    this.commandManager = new CommandManager(cacheProperties);
-
+  public GfshParser(CommandManager commandManager) {
-    List<Converter<?>> converters = commandManager.getConverters();
-    for (Converter<?> converter : converters) {
+    for (Converter<?> converter : commandManager.getConverters()) {
-        arrayConverter.setConverters(new HashSet<>(converters));
+        arrayConverter.setConverters(new HashSet<>(commandManager.getConverters()));
-  public CommandManager getCommandManager() {
-    return commandManager;
-  }
-
-  // convenience method for testing
-  int completeAdvanced(String userInput, final List<Completion> candidates) {
-    return completeAdvanced(userInput, userInput.length(), candidates);
-  }
-
-  /**
-   * test only used to demonstrate what's the super class's completeAdvanced behavior
-   *
-   */
-  int completeSuperAdvanced(String userInput, final List<Completion> candidates) {
-    return super.completeAdvanced(userInput, userInput.length(), candidates);
-  }
-
