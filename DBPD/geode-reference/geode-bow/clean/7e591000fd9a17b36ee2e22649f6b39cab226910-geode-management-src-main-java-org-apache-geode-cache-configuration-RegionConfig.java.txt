GEODE-6744: list index rest api (#3550)

Co-authored-by: Owen Nichols <onichols@pivotal.io>


+import javax.xml.bind.annotation.XmlTransient;
+import org.apache.commons.lang3.StringUtils;
-  public static class Index extends CacheElement {
+  public static class Index extends CacheElement implements RestfulEndpoint {
+    @XmlTransient
+    protected String regionName;
+
+    public Index() {}
+
+    public Index(Index index) {
+      this.name = index.name;
+      this.expression = index.expression;
+      this.fromClause = index.fromClause;
+      this.imports = index.imports;
+      this.keyIndex = index.keyIndex;
+      this.type = index.type;
+    }
+      // this should return a "key" value because some production code relies on this method
+      // returning a type string that would turn into IndexType enum object
+      if (keyIndex == Boolean.TRUE) {
+        return "key";
+      }
+
-      if ("range".equalsIgnoreCase(value) || "hash".equalsIgnoreCase(value)
-          || "key".equalsIgnoreCase(value)) {
+      if ("range".equalsIgnoreCase(value) || "hash".equalsIgnoreCase(value)) {
+        setKeyIndex(false);
+      }
+      // we need to avoid setting the "type" to key since by xsd definition, it should only contain
+      // "hash" and "range" value.
+      else if ("key".equalsIgnoreCase(value)) {
+        this.type = null;
+        setKeyIndex(true);
+    }
-      setKeyIndex("key".equalsIgnoreCase(value));
+    public String getRegionName() {
+      return regionName;
+    }
+
+    public void setRegionName(String regionName) {
+      this.regionName = regionName;
+      if (fromClause == null) {
+        fromClause = "/" + regionName;
+      } else if (!fromClause.contains(regionName)) {
+        throw new IllegalArgumentException(
+            "Invalid regionName for this index with fromClause = " + fromClause);
+      }
+    @JsonIgnore
+
+    @Override
+    public String getEndpoint() {
+      if (StringUtils.isBlank(regionName)) {
+        throw new IllegalArgumentException("regionName is required.");
+      }
+      return RegionConfig.REGION_CONFIG_ENDPOINT + "/" + regionName + "/indexes";
+    }
