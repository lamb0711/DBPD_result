Merge branch 'release/1.3.0'

+
-import org.apache.geode.internal.security.IntegratedSecurityService;
+import org.apache.commons.lang.StringUtils;
+
+import org.apache.geode.security.ResourcePermission.Operation;
+import org.apache.geode.security.ResourcePermission.Resource;
+import org.apache.geode.security.ResourcePermission.Target;
- *
+
+  // TODO: make volatile or verify this is thread-safe
-  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+  private final SecurityService securityService;
-  public MBeanServerWrapper() {}
+  public MBeanServerWrapper(SecurityService securityService) {
+    this.securityService = securityService;
+  }
-    Object result = mbs.invoke(name, operationName, params, signature);
-
-    return result;
+    return mbs.invoke(name, operationName, params, signature);
-    MBeanInfo beanInfo = null;
+    MBeanInfo beanInfo;
-    MBeanFeatureInfo[] featureInfos = null;
+    MBeanFeatureInfo[] featureInfos;
+    String targetCode = (String) descriptor.getFieldValue("target");
-      return new ResourcePermission(resource, operationCode);
+      if (StringUtils.isBlank(targetCode)) {
+        return new ResourcePermission(Resource.valueOf(resource), Operation.valueOf(operationCode));
+      } else {
+        return new ResourcePermission(Resource.valueOf(resource), Operation.valueOf(operationCode),
+            Target.valueOf(targetCode).getName());
+      }
-  public ObjectInputStream deserialize(ObjectName name, byte[] data)
-      throws InstanceNotFoundException, OperationsException {
+  public ObjectInputStream deserialize(ObjectName name, byte[] data) throws OperationsException {
-    return deserialize(className, data);
+    return mbs.deserialize(className, data);
-      throws InstanceNotFoundException, OperationsException, ReflectionException {
+      throws OperationsException, ReflectionException {
