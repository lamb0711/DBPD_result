GEODE-5145: Added support for destroying an index during region creation


+import org.apache.geode.cache.RegionDestroyedException;
+import org.apache.geode.internal.i18n.LocalizedStrings;
-      fileAndChunkRegion.destroyRegion();
-      if (logger.isDebugEnabled()) {
-        logger.debug("Destroyed fileAndChunkRegion=" + fileAndChunkRegion.getName());
+      try {
+        fileAndChunkRegion.destroyRegion();
+        if (logger.isDebugEnabled()) {
+          logger.debug("Destroyed fileAndChunkRegion=" + fileAndChunkRegion.getName());
+        }
+      } catch (RegionDestroyedException e) {
+        if (logger.isDebugEnabled()) {
+          logger.debug("Already destroyed fileAndChunkRegion=" + fileAndChunkRegion.getName());
+        }
-    PartitionedRegion pr = (PartitionedRegion) getDataRegion();
-    DistributionManager dm = pr.getDistributionManager();
-    Set<InternalDistributedMember> recipients = pr.getRegionAdvisor().adviseAllPRNodes();
+    DistributionManager dm = getDataRegion().getDistributionManager();
+    Set<InternalDistributedMember> recipients = dm.getOtherNormalDistributionManagerIds();
-        if (!(e.getCause() instanceof CancelException)) {
+        Throwable cause = e.getCause();
+        if (cause instanceof IllegalArgumentException) {
+          // If the IllegalArgumentException is index not found, then its ok; otherwise rethrow it.
+          String fullRegionPath =
+              regionPath.startsWith(Region.SEPARATOR) ? regionPath : Region.SEPARATOR + regionPath;
+          String indexNotFoundMessage = LocalizedStrings.LuceneService_INDEX_0_NOT_FOUND_IN_REGION_1
+              .toLocalizedString(indexName, fullRegionPath);
+          if (!cause.getLocalizedMessage().equals(indexNotFoundMessage)) {
+            throw e;
+          }
+        } else if (!(cause instanceof CancelException)) {
