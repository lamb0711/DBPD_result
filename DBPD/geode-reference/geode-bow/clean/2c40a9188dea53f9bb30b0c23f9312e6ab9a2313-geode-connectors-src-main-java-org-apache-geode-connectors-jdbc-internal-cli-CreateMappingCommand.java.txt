GEODE-6365: Add server group support for list and destroy jdbc-mapping (#3175)

Co-authored-by: Xiaojian Zhou <gzhou@pivotal.io>
Co-authored-by: Ben Ross <bross@pivotal.io>
Co-authored-by: Jianxia Chen <jchen@pivotal.io>




+import org.apache.geode.connectors.util.internal.MappingCommandUtils;
-  public static String createAsyncEventQueueName(String regionPath) {
-    if (regionPath.startsWith("/")) {
-      regionPath = regionPath.substring(1);
-    }
-    return "JDBC#" + regionPath.replace('/', '_');
-  }
-
-        CacheConfig cacheConfig = configurationPersistenceService.getCacheConfig(group);
-        RegionConfig regionConfig = checkForRegion(regionName, cacheConfig);
+        CacheConfig cacheConfig =
+            MappingCommandUtils.getCacheConfig(configurationPersistenceService, group);
+        RegionConfig regionConfig = checkForRegion(regionName, cacheConfig, group);
-  private RegionConfig checkForRegion(String regionName, CacheConfig cacheConfig)
+  private RegionConfig checkForRegion(String regionName, CacheConfig cacheConfig, String groupName)
-    RegionConfig regionConfig = findRegionConfig(cacheConfig, regionName);
-    if (regionConfig == null) {
-      throw new PreconditionException("A region named " + regionName + " must already exist.");
-    }
-    return regionConfig;
+    return MappingCommandUtils.checkForRegion(regionName, cacheConfig, groupName);
-      String queueName = createAsyncEventQueueName(regionName);
+      String queueName = MappingCommandUtils.createAsyncEventQueueName(regionName);
-    String queueName = createAsyncEventQueueName(regionName);
+    String queueName = MappingCommandUtils.createAsyncEventQueueName(regionName);
