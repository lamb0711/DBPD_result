GEODE-646: OffHeapRegionEntryHelper needs unit test

Added unit tests to cover OffHeapRegionEntryHelper.

closes #83

-  private static final long NULL_ADDRESS = 0L<<1;
-  private static final long INVALID_ADDRESS = 1L<<1;
-  private static final long LOCAL_INVALID_ADDRESS = 2L<<1;
-  private static final long DESTROYED_ADDRESS = 3L<<1;
-  public static final long REMOVED_PHASE1_ADDRESS = 4L<<1;
-  private static final long REMOVED_PHASE2_ADDRESS = 5L<<1;
-  private static final long END_OF_STREAM_ADDRESS = 6L<<1;
-  private static final long NOT_AVAILABLE_ADDRESS = 7L<<1;
-  private static final long TOMBSTONE_ADDRESS = 8L<<1;
+  protected static final long NULL_ADDRESS = 0L<<1;
+  protected static final long INVALID_ADDRESS = 1L<<1;
+  protected static final long LOCAL_INVALID_ADDRESS = 2L<<1;
+  protected static final long DESTROYED_ADDRESS = 3L<<1;
+  protected static final long REMOVED_PHASE1_ADDRESS = 4L<<1;
+  protected static final long REMOVED_PHASE2_ADDRESS = 5L<<1;
+  protected static final long END_OF_STREAM_ADDRESS = 6L<<1;
+  protected static final long NOT_AVAILABLE_ADDRESS = 7L<<1;
+  protected static final long TOMBSTONE_ADDRESS = 8L<<1;
-  //TODO:Asif:Check if this is a valid equality conditions
-  public static boolean isAddressInvalidOrRemoved(long address) {
-    return address == INVALID_ADDRESS || address == LOCAL_INVALID_ADDRESS 
-        || address == REMOVED_PHASE2_ADDRESS || address == NULL_ADDRESS; 
-  }
-  
-  
+ /*
+  * This method is optimized for cases where if the caller wants to convert address to a Token
+  * compared to addressToObject which would deserialize the value.
+  */
-  private static long SERIALIZED_BIT = 2L;
+  static long SERIALIZED_BIT = 2L;
-  private static long COMPRESSED_BIT = 4L;
+  static long COMPRESSED_BIT = 4L;
-  static byte[] decodeAddressToBytes(long addr) {
-    byte[] result = decodeAddressToBytes(addr, true, false);
-    boolean isSerialized = (addr & SERIALIZED_BIT) != 0;
-    if (!isSerialized) {
-      result = EntryEventImpl.serialize(result);
-    }
-    return result;
-  }
-
-    addr >>= 1; // shift left 1 to convert to array index;
+    addr >>= 1; // shift right 1 to convert to array index;
