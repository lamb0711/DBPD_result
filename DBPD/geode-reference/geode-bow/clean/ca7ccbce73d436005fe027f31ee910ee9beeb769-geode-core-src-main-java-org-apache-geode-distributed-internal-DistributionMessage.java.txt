GEODE-7820: Avoid Unnecessary toArray Invocations (#4741)

Avoid unnecessary invocations to the 'toArray' method and directly
use the java collection received instead.
-import java.util.Arrays;
+import java.util.ArrayList;
-  private static final InternalDistributedMember[] ALL_RECIPIENTS_ARRAY = {null};
-
-  @Immutable
-  private static final InternalDistributedMember[] EMPTY_RECIPIENTS_ARRAY =
-      new InternalDistributedMember[0];
-
-  @Immutable
-  private transient InternalDistributedMember[] recipients = null;
+  private transient List<InternalDistributedMember> recipients = null;
-    this.recipients = new InternalDistributedMember[] {recipient};
+
+    this.recipients = Collections.singletonList(recipient);
-    this.recipients = (InternalDistributedMember[]) recipients
-        .toArray(EMPTY_RECIPIENTS_ARRAY);
+    this.recipients = new ArrayList<>(recipients);
-    InternalDistributedMember[] recipients = getRecipientsArray();
-        || recipients.length == 1 && recipients[0] == ALL_RECIPIENTS) {
+        || recipients.size() == 1 && recipients.get(0) == ALL_RECIPIENTS) {
-    return Arrays.asList(recipients);
-  }
+    return recipients;
+  }
-
-  /**
-   * Returns the intended recipient(s) of this message. If the message is intended to delivered to
-   * all distribution managers, then the array will contain ALL_RECIPIENTS. If the recipients have
-   * not been set null is returned.
-   */
-  public InternalDistributedMember[] getRecipientsArray() {
-    if (this.multicast || this.recipients == null) {
-      return ALL_RECIPIENTS_ARRAY;
-    }
-    return this.recipients;
-  }
-
-        || ((this.recipients.length > 0) && (this.recipients[0] == ALL_RECIPIENTS));
+        || ((!this.recipients.isEmpty()) && (this.recipients.get(0) == ALL_RECIPIENTS));
-      for (int i = 0; i < this.recipients.length; i++) {
+      for (int i = 0; i < this.recipients.size(); i++) {
-        sb.append(this.recipients[i]);
+        sb.append(this.recipients.get(i));
+
-      if (this.recipients != null && this.recipients.length <= 10) { // set a limit on recipients
-        Breadcrumbs.setSendSide(procId + " recipients=" + Arrays.toString(this.recipients));
+
+      if (this.recipients != null && this.recipients.size() <= 10) { // set a limit on recipients
+        Breadcrumbs.setSendSide(procId + " recipients=" + getRecipients());
