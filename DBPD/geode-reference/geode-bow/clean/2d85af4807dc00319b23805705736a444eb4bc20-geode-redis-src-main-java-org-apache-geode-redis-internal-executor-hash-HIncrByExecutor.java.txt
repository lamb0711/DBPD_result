GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

-  private static final String ERROR_FIELD_NOT_USABLE = "The value at this field is not an integer";
-
-  private static final String ERROR_OVERFLOW =
-      "This incrementation cannot be performed due to overflow";
-
-    try {
-      long value = redisHashCommands.hincrby(key, field, increment);
-      return RedisResponse.integer(value);
-    } catch (NumberFormatException ex) {
-      return RedisResponse.error(ERROR_FIELD_NOT_USABLE);
-    } catch (ArithmeticException ex) {
-      return RedisResponse.error(ERROR_OVERFLOW);
-    }
+    long value = redisHashCommands.hincrby(key, field, increment);
+    return RedisResponse.integer(value);
