GEODE-5333: Destroy failed connection in ConnectionConnector (#2072)

Added unit test for new functionality in ConnectionConnector

Refactored ConnectionFactoryImpl, ConnectionConnector, and
ClientSideHandshakeImpl improve testability of ConnectionConnector
+import org.apache.logging.log4j.Logger;
+
-import org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID;
+import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.internal.net.SocketCreatorFactory;
-import org.apache.geode.internal.security.SecurableCommunicationChannel;
+  private static final Logger logger = LogService.getLogger();
+
-      int socketBufferSize, int handshakeTimeout, int readTimeout, ClientProxyMembershipID proxyId,
-      CancelCriterion cancelCriterion, boolean usedByGateway, GatewaySender sender,
-      boolean multiuserSecureMode) {
+      int socketBufferSize, int handshakeTimeout, int readTimeout, CancelCriterion cancelCriterion,
+      boolean usedByGateway, GatewaySender sender, SocketCreator socketCreator,
+      ClientSideHandshakeImpl handshake) {
-    this.handshake =
-        new ClientSideHandshakeImpl(proxyId, sys, sys.getSecurityService(), multiuserSecureMode);
+    this.handshake = handshake;
-    if (this.usedByGateway || (this.gatewaySender != null)) {
-      this.socketCreator =
-          SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.GATEWAY);
+    this.socketCreator = socketCreator;
+    if (this.socketCreator != null && (this.usedByGateway || (this.gatewaySender != null))) {
-    } else {
-      // If configured use SSL properties for cache-server
-      this.socketCreator =
-          SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.SERVER);
-    ConnectionImpl connection = new ConnectionImpl(this.ds, this.cancelCriterion);
-    ClientSideHandshake connHandShake = new ClientSideHandshakeImpl(handshake);
-    connection.connect(endpointManager, location, connHandShake, socketBufferSize, handshakeTimeout,
-        readTimeout, getCommMode(forQueue), this.gatewaySender, this.socketCreator);
-    connection.setHandshake(connHandShake);
-    return connection;
+    ConnectionImpl connection = null;
+    boolean initialized = false;
+    try {
+      connection = getConnection(this.ds, this.cancelCriterion);
+      ClientSideHandshake connHandShake = getClientSideHandshake(handshake);
+      connection.connect(endpointManager, location, connHandShake, socketBufferSize,
+          handshakeTimeout, readTimeout, getCommMode(forQueue), this.gatewaySender,
+          this.socketCreator);
+      connection.setHandshake(connHandShake);
+      initialized = true;
+      return connection;
+    } finally {
+      if (!initialized && connection != null) {
+        if (logger.isDebugEnabled()) {
+          logger.debug("Destroy failed connection to {}", location);
+        }
+        destroyConnection(connection);
+      }
+    }
+  }
+
+  void destroyConnection(ConnectionImpl connection) {
+    connection.destroy();
+  }
+
+  ConnectionImpl getConnection(InternalDistributedSystem ds, CancelCriterion cancelCriterion) {
+    return new ConnectionImpl(ds, cancelCriterion);
+  }
+
+  ClientSideHandshake getClientSideHandshake(ClientSideHandshakeImpl handshake) {
+    return new ClientSideHandshakeImpl(handshake);
