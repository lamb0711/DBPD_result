GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.InternalGemFireError;
-import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.internal.cache.execute.BucketMovedException;
-import org.apache.geode.internal.cache.ha.ThreadIdentifier;
-import org.apache.geode.internal.cache.wan.parallel.WaitUntilParallelGatewaySenderFlushedCoordinator;
+import org.apache.geode.InternalGemFireError;
-import org.apache.geode.cache.Cache;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.cache.execute.BucketMovedException;
+import org.apache.geode.internal.cache.ha.ThreadIdentifier;
+import org.apache.geode.internal.cache.wan.parallel.WaitUntilParallelGatewaySenderFlushedCoordinator;
-  public Cache getCache() {
+  public InternalCache getCache() {
-      Set<LocalRegion> regions = ((GemFireCacheImpl) this.cache).getApplicationRegions();
+      Set<LocalRegion> regions = this.cache.getApplicationRegions();
-      ((GemFireCacheImpl) this.cache).removeGatewaySender(this);
+      this.cache.removeGatewaySender(this);
-
-
-      gotLock = ((GemFireCacheImpl) getCache()).getGatewaySenderLockService()
-          .lock(META_DATA_REGION_NAME, -1, -1);
+      gotLock = getCache().getGatewaySenderLockService().lock(META_DATA_REGION_NAME, -1, -1);
-        ((GemFireCacheImpl) getCache()).getGatewaySenderLockService().unlock(META_DATA_REGION_NAME);
+        getCache().getGatewaySenderLockService().unlock(META_DATA_REGION_NAME);
-    final Cache cache = sender.getCache();
+    final InternalCache cache = sender.getCache();
-        region = ((GemFireCacheImpl) cache).createVMRegion(META_DATA_REGION_NAME, ra, ira);
+        region = cache.createVMRegion(META_DATA_REGION_NAME, ra, ira);
-
-   * 
-   *
