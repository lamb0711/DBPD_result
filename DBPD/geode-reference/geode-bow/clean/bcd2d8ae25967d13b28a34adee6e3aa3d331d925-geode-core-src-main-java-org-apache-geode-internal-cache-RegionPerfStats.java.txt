Revert "GEODE-7326: Add cache gets timers (#4201)"

This reverts commit 55980e37f0a57256fdd0af6f10e1d70ce1f90676.

-import static java.util.concurrent.TimeUnit.NANOSECONDS;
-
-import io.micrometer.core.instrument.Timer;
-  private static final String HIT_TAG_VALUE = "hit";
-  private static final String MISS_TAG_VALUE = "miss";
-  private final Timer cacheGetsHitTimer;
-  private final Timer cacheGetsMissTimer;
-      CachePerfStats cachePerfStats, InternalRegion region, MeterRegistry meterRegistry) {
-    this(statisticsFactory, textId, clock, cachePerfStats, region, meterRegistry,
-        registerEntriesGauge(region, meterRegistry),
-        registerCacheGetsTimer(region, meterRegistry, HIT_TAG_VALUE),
-        registerCacheGetsTimer(region, meterRegistry, MISS_TAG_VALUE));
-  }
-
-  @VisibleForTesting
-  RegionPerfStats(StatisticsFactory statisticsFactory, String textId, StatisticsClock clock,
-      CachePerfStats cachePerfStats, InternalRegion region, MeterRegistry meterRegistry,
-      Gauge entriesGauge, Timer cacheGetsHitTimer, Timer cacheGetsMissTimer) {
+      CachePerfStats cachePerfStats, InternalRegion region,
+      MeterRegistry meterRegistry) {
-
-    this.entriesGauge = entriesGauge;
-    this.cacheGetsHitTimer = cacheGetsHitTimer;
-    this.cacheGetsMissTimer = cacheGetsMissTimer;
-
+    entriesGauge = Gauge.builder("geode.cache.entries", region::getLocalSize)
+        .description("Current number of entries in the region.")
+        .tag("region", region.getName())
+        .tag("data.policy", region.getDataPolicy().toString())
+        .baseUnit("entries")
+        .register(meterRegistry);
-    entriesGauge.close();
-
-    meterRegistry.remove(cacheGetsHitTimer);
-    cacheGetsHitTimer.close();
-
-    meterRegistry.remove(cacheGetsMissTimer);
-    cacheGetsMissTimer.close();
-
-  public void endGetForClient(long start, boolean miss) {
-    long totalNanos = clock.isEnabled() ? getTime() - start : 0;
-    if (miss) {
-      cacheGetsMissTimer.record(totalNanos, NANOSECONDS);
-    } else {
-      cacheGetsHitTimer.record(totalNanos, NANOSECONDS);
-    }
-  }
-
-  @Override
-
-  private static Gauge registerEntriesGauge(InternalRegion region, MeterRegistry meterRegistry) {
-    return Gauge.builder("geode.cache.entries", region::getLocalSize)
-        .description("Current number of entries in the region.")
-        .tag("region", region.getName())
-        .tag("data.policy", region.getDataPolicy().toString())
-        .baseUnit("entries")
-        .register(meterRegistry);
-  }
-
-  private static Timer registerCacheGetsTimer(InternalRegion region, MeterRegistry meterRegistry,
-      String resultTagValue) {
-    return Timer.builder("geode.cache.gets")
-        .description("Total time and count for GET requests from Java or native clients.")
-        .tag("region", region.getName())
-        .tag("result", resultTagValue)
-        .register(meterRegistry);
-  }
