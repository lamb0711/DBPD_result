GEODE-8059: replace multiple redis set functions with one CommandFunction (#5035)


+import static org.apache.geode.redis.internal.RedisCommandType.DEL;
+import static org.apache.geode.redis.internal.RedisCommandType.SADD;
+import static org.apache.geode.redis.internal.RedisCommandType.SMEMBERS;
+import static org.apache.geode.redis.internal.RedisCommandType.SREM;
+
+import org.apache.geode.redis.internal.RedisCommandType;
+import org.apache.geode.redis.internal.executor.CommandFunction;
-    FunctionService.registerFunction(new SaddFunction());
-    FunctionService.registerFunction(new SremFunction());
-    FunctionService.registerFunction(new SmembersFunction());
-    FunctionService.registerFunction(new SdelFunction());
+    FunctionService.registerFunction(new CommandFunction());
-    ResultCollector<ArrayList<ByteArrayWrapper>, List<Long>> results = FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(key))
-        .setArguments(membersToAdd)
-        .execute(SaddFunction.ID);
-
+    ResultCollector<Object[], List<Long>> results = executeFunction(SADD, membersToAdd);
-    ResultCollector<ArrayList<ByteArrayWrapper>, List<Long>> results = FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(key))
-        .setArguments(membersToRemove)
-        .execute(SremFunction.ID);
+    ResultCollector<Object[], List<Long>> results = executeFunction(SREM, membersToRemove);
-    ResultCollector<Void, List<Set<ByteArrayWrapper>>> results = FunctionService
-        .onRegion(region)
-        .withFilter(Collections.singleton(key))
-        .execute(SmembersFunction.ID);
+    ResultCollector<Object[], List<Set<ByteArrayWrapper>>> results =
+        executeFunction(SMEMBERS, null);
-    ResultCollector<Void, List<Boolean>> results = FunctionService
+    ResultCollector<Object[], List<Boolean>> results = executeFunction(DEL, null);
+    return results.getResult().get(0);
+  }
+
+  private ResultCollector executeFunction(RedisCommandType command,
+      ArrayList<ByteArrayWrapper> commandArguments) {
+    return FunctionService
-        .execute(SdelFunction.ID);
-    return results.getResult().get(0);
+        .setArguments(new Object[] {command, commandArguments})
+        .execute(CommandFunction.ID);
