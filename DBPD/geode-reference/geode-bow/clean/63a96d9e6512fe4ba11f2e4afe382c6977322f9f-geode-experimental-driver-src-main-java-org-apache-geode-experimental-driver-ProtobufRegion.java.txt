GEODE-4317 add error handling to the experimental ProtobufDriver's Region implementation

I've added checks to ProtobufRegion for "error" responses from the server.
Along the way I found we were converting some keys to their string
representations and fixed that as well.

The exceptions thrown show the error text returned by the server.  The
handling of putAll responses was already looking for errors but wasn't
including the server's message text so I changed it to do so.

This closes #1322

-  @Override
-  public V get(K key) throws IOException {
-    final OutputStream outputStream = socket.getOutputStream();
-    ClientProtocol.Message.newBuilder()
-        .setRequest(ClientProtocol.Request.newBuilder().setGetRequest(RegionAPI.GetRequest
-            .newBuilder().setRegionName(name).setKey(ValueEncoder.encodeValue(key))))
-        .build().writeDelimitedTo(outputStream);
-
+  private ClientProtocol.Response readResponse() throws IOException {
-    return (V) ValueEncoder.decodeValue(ClientProtocol.Message.parseDelimitedFrom(inputStream)
-        .getResponse().getGetResponse().getResult());
+    ClientProtocol.Response response =
+        ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse();
+    final ClientProtocol.ErrorResponse errorResponse = response.getErrorResponse();
+    if (errorResponse != null && errorResponse.hasError()) {
+      throw new IOException(errorResponse.getError().getMessage());
+    }
+    return response;
+
-    final InputStream inputStream = socket.getInputStream();
-    return new RegionAttributes(ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse()
-        .getGetRegionResponse().getRegion());
+    return new RegionAttributes(readResponse().getGetRegionResponse().getRegion());
+  public V get(K key) throws IOException {
+    final OutputStream outputStream = socket.getOutputStream();
+    ClientProtocol.Message.newBuilder()
+        .setRequest(ClientProtocol.Request.newBuilder().setGetRequest(RegionAPI.GetRequest
+            .newBuilder().setRegionName(name).setKey(ValueEncoder.encodeValue(key))))
+        .build().writeDelimitedTo(outputStream);
+
+    final ClientProtocol.Response response = readResponse();
+    return (V) ValueEncoder.decodeValue(response.getGetResponse().getResult());
+  }
+
+  @Override
-      getAllRequest.addKey(ValueEncoder.encodeValue(key.toString()));
+      getAllRequest.addKey(ValueEncoder.encodeValue(key));
-    final InputStream inputStream = socket.getInputStream();
-    final RegionAPI.GetAllResponse getAllResponse =
-        ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getGetAllResponse();
+    final RegionAPI.GetAllResponse getAllResponse = readResponse().getGetAllResponse();
+    Map<Object, String> failures = new HashMap<>();
+    if (getAllResponse.getFailuresCount() > 0) {
+      for (BasicTypes.KeyedError keyedError : getAllResponse.getFailuresList()) {
+        failures.put(ValueEncoder.decodeValue(keyedError.getKey()),
+            keyedError.getError().getMessage());
+      }
+      throw new IOException("Unable to process the following keys: " + failures);
+    }
-    final InputStream inputStream = socket.getInputStream();
-    ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getPutResponse();
+    readResponse();
-    final InputStream inputStream = socket.getInputStream();
-    final RegionAPI.PutAllResponse putAllResponse =
-        ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getPutAllResponse();
+    final RegionAPI.PutAllResponse putAllResponse = readResponse().getPutAllResponse();
-      StringBuilder builder = new StringBuilder();
+      Map<Object, String> failures = new HashMap<>();
-        if (0 < builder.length()) {
-          builder.append(", ");
-        }
-        builder.append(ValueEncoder.decodeValue(keyedError.getKey()).toString());
+        failures.put(ValueEncoder.decodeValue(keyedError.getKey()),
+            keyedError.getError().getMessage());
-      throw new IOException("Unable to put the following keys: " + builder.toString());
+      throw new IOException("Unable to put the following keys: " + failures);
-    final InputStream inputStream = socket.getInputStream();
-    ClientProtocol.Message.parseDelimitedFrom(inputStream).getResponse().getRemoveResponse();
+    readResponse();
