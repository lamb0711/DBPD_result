Merge branch 'release/1.5.0'

+  /**
+   * interval that server sends pings if connection is idle. This is only known for
+   * CacheClientUpdater subscription feed status objects
+   */
+  private final int pingInterval;
-  private byte epType = (byte) 0;
+  private byte endpointType = (byte) 0;
-   * Default constructor Called when connectionsPerServer=0
+   * Constructor Called when connectionsPerServer is nto equal to 0
+   *
-  public ServerQueueStatus(DistributedMember memberId) {
-    this((byte) 0, 0, memberId);
+  public ServerQueueStatus(byte endpointType, int queueSize, DistributedMember memberId,
+      int pingInterval) {
+    this.qSize = queueSize;
+    this.endpointType = endpointType;
+    this.memberId = memberId;
+    this.pingInterval = pingInterval;
-   * @param epType
-   * @param qSize
-  public ServerQueueStatus(byte epType, int qSize, DistributedMember memberId) {
-    this.qSize = qSize;
-    this.epType = epType;
+  public ServerQueueStatus(byte endpointType, int queueSize, DistributedMember memberId) {
+    this.qSize = queueSize;
+    this.endpointType = endpointType;
-
+    this.pingInterval = -1;
-   *
-   * @return epType
-    return this.epType == (byte) 2;
+    return this.endpointType == (byte) 2;
-   *
-   * @return epType
-    return this.epType == (byte) 1;
+    return this.endpointType == (byte) 1;
-   *
-   * @return epType
-    return this.epType == (byte) 0;
+    return this.endpointType == (byte) 0;
-   * returns qSize of the HARegionQueue for this client
-   *
-   * @return qSize
+   * returns size of the HARegionQueue for this client
+  /** returns the time between server-to-client ping messages on idle subscription connections */
+  public int getPingInterval() {
+    if (this.pingInterval < 0) {
+      throw new IllegalStateException(
+          "ping interval is only known for a subscription feed connection");
+    }
+    return this.pingInterval;
+  }
+
-    buffer.append("ServerQueueStatus [").append("qSize=").append(this.qSize).append("; epType=")
-        .append(getTypeAsString()).append("]");
+    buffer.append("ServerQueueStatus [").append("queueSize=").append(this.qSize)
+        .append("; endpointType=").append(getTypeAsString()).append("; pingInterval=")
+        .append(this.pingInterval).append("ms]");
