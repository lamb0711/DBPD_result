Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class SingleHopQuarterPartitionResolver implements FixedPartitionResolver,
-    Declarable2, DataSerializable {
+public class SingleHopQuarterPartitionResolver
+    implements FixedPartitionResolver, Declarable2, DataSerializable {
-  Object[][] months = new Object[12][12]; 
-  
+  Object[][] months = new Object[12][12];
+
-  public String getPartitionName(EntryOperation opDetails,
-      Set allAvailablePartitions) {
-    Date date = (Date)opDetails.getKey();
+  public String getPartitionName(EntryOperation opDetails, Set allAvailablePartitions) {
+    Date date = (Date) opDetails.getKey();
-    }
-    else if (month == 3 || month == 4 || month == 5) {
+    } else if (month == 3 || month == 4 || month == 5) {
-    }
-    else if (month == 6 || month == 7 || month == 8) {
+    } else if (month == 6 || month == 7 || month == 8) {
-    }
-    else if (month == 9 || month == 10 || month == 11) {
+    } else if (month == 9 || month == 10 || month == 11) {
-    }
-    else {
+    } else {
-    Date date = (Date)opDetails.getKey();
+    Date date = (Date) opDetails.getKey();
-//    if(true){
-//      return month;
-//    }
+    // if(true){
+    // return month;
+    // }
-    case 0:
-      return "January";
-    case 1:
-      return "February";
-    case 2:
-      return "March";
-    case 3:
-      return "April";
-    case 4:
-      return "May";
-    case 5:
-      return "June";
-    case 6:
-      return "July";
-    case 7:
-      return "August";
-    case 8:
-      return "September";
-    case 9:
-      return "October";
-    case 10:
-      return "November";
-    case 11:
-      return "December";
-    default:
-      return null;
+      case 0:
+        return "January";
+      case 1:
+        return "February";
+      case 2:
+        return "March";
+      case 3:
+        return "April";
+      case 4:
+        return "May";
+      case 5:
+        return "June";
+      case 6:
+        return "July";
+      case 7:
+        return "August";
+      case 8:
+        return "September";
+      case 9:
+        return "October";
+      case 10:
+        return "November";
+      case 11:
+        return "December";
+      default:
+        return null;
-    QuarterPartitionResolver other = (QuarterPartitionResolver)obj;
+    QuarterPartitionResolver other = (QuarterPartitionResolver) obj;
