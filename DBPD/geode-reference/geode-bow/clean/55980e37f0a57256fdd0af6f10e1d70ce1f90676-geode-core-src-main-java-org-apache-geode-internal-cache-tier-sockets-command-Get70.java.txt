GEODE-7326: Add cache gets timers (#4201)

* GEODE-7326: Add cache gets timers

- Add timers to record get operations from a Java client
- Tag each timer with region name and result (hit/miss)
- Close existing entries gauge when closing RegionPerfStats
- Improve micrometer assertj assertions
- Record time measurement in Get70 instead of LocalRegion.get()
- Update timer descriptions to clarify the type of client
- Add unit tests for instrumented code (Get70)
- Refactor acceptance test for get that errors
- Improve comments in TimerAssert
- Make public fields immutable on Get70.Entry

Authored-by: Aaron Lindsey <alindsey@pivotal.io>
Co-authored-by: Kirk Lund <klund@apache.org>

+import org.apache.geode.internal.cache.CachePerfStats;
+import org.apache.geode.internal.cache.InternalRegion;
-      String reason = String.format("%s was not found during get request",
-          regionName);
+      String reason = String.format("%s was not found during get request", regionName);
-
+    CachePerfStats regionPerfStats = ((InternalRegion) region).getRegionPerfStats();
+    regionPerfStats.endGetForClient(startparam, entry.keyNotPresent);
-    Entry result = new Entry();
-    result.value = data;
-    result.isObject = isObject;
-    result.keyNotPresent = !wasInvalid && (data == null || data == Token.TOMBSTONE);
-    result.versionTag = versionTag;
-    return result;
+    boolean keyNotPresent = !wasInvalid && (data == null || data == Token.TOMBSTONE);
+    return new Entry(data, isObject, keyNotPresent, versionTag);
-    Entry result = new Entry();
-    result.value = data;
-    result.isObject = isObject;
-    result.keyNotPresent = !wasInvalid && (data == null || data == Token.TOMBSTONE);
-    result.versionTag = versionTag;
-    return result;
+    boolean keyNotPresent = !wasInvalid && (data == null || data == Token.TOMBSTONE);
+    return new Entry(data, isObject, keyNotPresent, versionTag);
-    public Object value;
-    public boolean isObject;
-    public boolean keyNotPresent;
-    public VersionTag versionTag;
+    public final Object value;
+    public final boolean isObject;
+    public final boolean keyNotPresent;
+    public final VersionTag versionTag;
+
+    public Entry(Object value, boolean isObject, boolean keyNotPresent, VersionTag versionTag) {
+      this.value = value;
+      this.isObject = isObject;
+      this.keyNotPresent = keyNotPresent;
+      this.versionTag = versionTag;
+    }
