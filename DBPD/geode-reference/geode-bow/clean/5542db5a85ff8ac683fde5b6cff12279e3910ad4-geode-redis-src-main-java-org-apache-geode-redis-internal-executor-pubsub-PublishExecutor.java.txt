GEODE-7998: Do not block Netty threads when publishing (#5042)

- Now delegate PUBLISH responses to a background executor in order to
  free up the Netty worker thread. This prevents possible deadlocks.

Co-authored-by: Murtuza Boxwala <mboxwala@vmware.com>
Co-authored-by: Ray Ingles <ringles@vmware.com>
Co-authored-by: Jens Deppe <jdeppe@vmware.com>

+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+  private ExecutorService executorService = Executors.newSingleThreadExecutor();
-    long publishCount = context.getPubSub().publish(channelName, args.get(2));
-    writeResponse(command, context, publishCount);
+    executorService.submit(new PublishingRunnable(context, channelName, args.get(2)));
-  private void writeResponse(Command command, ExecutionHandlerContext context,
-      long publishCount) {
-    ByteBuf response = Coder.getIntegerResponse(context.getByteBufAllocator(), publishCount);
-    command.setResponse(response);
+  public static class PublishingRunnable implements Runnable {
+
+    private final ExecutionHandlerContext context;
+    private final String channelName;
+    private final byte[] message;
+
+    public PublishingRunnable(ExecutionHandlerContext context, String channelName, byte[] message) {
+      this.context = context;
+      this.channelName = channelName;
+      this.message = message;
+    }
+
+    @Override
+    public void run() {
+      long publishCount = context.getPubSub().publish(channelName, message);
+      ByteBuf response = Coder.getIntegerResponse(context.getByteBufAllocator(), publishCount);
+      context.writeToChannel(response);
+    }
+
