GEODE-2127 old client support service is not set up to handle arrays

Array classes start with some number of left-brackets ("[") followed by
"L" and the name of the class the array contains.  This adds a unit test
for arrays and adds support for handling them in OldClientSupportProvider.

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import org.apache.geode.distributed.internal.DistributionConfig;
+  static final String ALWAYS_CONVERT_CLASSES_NAME =
+      DistributionConfig.GEMFIRE_PREFIX + "old-client-support.convert-all";
+
+  /** whether to always convert new package names to old on outgoing serialization */
+  static final boolean ALWAYS_CONVERT_CLASSES = Boolean.getBoolean(ALWAYS_CONVERT_CLASSES_NAME);
+
+  private final Map<String, String> oldClassNamesToNew = new ConcurrentHashMap<>();
+  private final Map<String, String> newClassNamesToOld = new ConcurrentHashMap<>();
+
-    if (name.startsWith(GEMFIRE)) {
-      return GEODE + name.substring(GEMFIRE.length());
+    // tcpserver was moved to a different package in Geode.
+    String oldPackage = "com.gemstone.org.jgroups.stack.tcpserver";
+    String newPackage = "org.apache.geode.distributed.internal.tcpserver";
+    if (name.startsWith(oldPackage)) {
+      String cached = oldClassNamesToNew.get(name);
+      if (cached == null) {
+        cached = newPackage + name.substring(oldPackage.length());
+        oldClassNamesToNew.put(name, cached);
+      }
+      return cached;
-    return name;
+    return processClassName(name, GEMFIRE, GEODE, oldClassNamesToNew);
-    // tcpserver was moved to a different package in Geode.
-    String oldPackage = "com.gemstone.org.jgroups.stack.tcpserver";
-    String newPackage = "org.apache.geode.distributed.internal.tcpserver";
-    if (name.startsWith(oldPackage)) {
-      return newPackage + name.substring(oldPackage.length());
-    }
-    if (name.startsWith(GEMFIRE)) {
-      return GEODE + name.substring(GEMFIRE.length());
-    }
-    return name;
+    return processIncomingClassName(name);
-    // tcpserver was moved to a different package in Geode
+    // tcpserver was moved to a different package
+    if (ALWAYS_CONVERT_CLASSES) {
+      return processClassName(name, GEODE, GEMFIRE, newClassNamesToOld);
+    }
-        if (name.startsWith(GEODE)) {
-          name = GEMFIRE + name.substring(GEODE.length());
-        }
+        return processClassName(name, GEODE, GEMFIRE, newClassNamesToOld);
-
-  /**
-   * translates the given exception into one that can be sent to an old GemFire client
-   * 
-   * @param theThrowable the exception to convert
-   * @param clientVersion the version of the client
-   * @return the exception to give the client
-   */
+  @Override
+
+  private String processClassName(String p_className, String oldPackage, String newPackage,
+      Map<String, String> cache) {
+    String cached = cache.get(p_className);
+    if (cached != null) {
+      return cached;
+    }
+
+    String className = p_className;
+
+    if (className.startsWith(oldPackage)) {
+      className = newPackage + className.substring(oldPackage.length());
+
+    } else if (className.startsWith("[") && className.contains("[L" + oldPackage)) {
+      int idx = className.indexOf("[L") + 2;
+      className =
+          className.substring(0, idx) + newPackage + className.substring(idx, oldPackage.length());
+    }
+
+    if (className != p_className) {
+      cache.put(p_className, className);
+    }
+
+    return className;
+  }
+
+
