Merge branch 'release/1.4.0'

- * 
+ *
- * 
+ *
+import java.util.Collection;
+import java.util.Collections;
+import org.apache.geode.cache.lucene.LuceneIndex;
+import org.apache.geode.cache.lucene.LuceneSerializer;
-   * The set of indexed fields for this mapper
-   */
-  private String[] indexedFields;
-
-  /**
-   * 
+   *
-  public HeterogeneousLuceneSerializer(String[] indexedFields) {
-    this.indexedFields = indexedFields;
-    pdxMapper = new PdxLuceneSerializer(indexedFields);
+  public HeterogeneousLuceneSerializer() {
+    final PrimitiveSerializer primitiveSerializer = new PrimitiveSerializer();
+    SerializerUtil.supportedPrimitiveTypes().stream()
+        .forEach(type -> mappers.put(type, primitiveSerializer));
-
-    addSerializersForPrimitiveValues();
-  }
-
-  /**
-   * Add serializers for the primitive value types (String, Number, etc.) if the user has requested
-   * that the whole value be serialized
-   */
-  private void addSerializersForPrimitiveValues() {
-    if (Arrays.asList(indexedFields).contains(LuceneService.REGION_VALUE_FIELD)) {
-      final PrimitiveSerializer primitiveSerializer = new PrimitiveSerializer();
-      SerializerUtil.supportedPrimitiveTypes().stream()
-          .forEach(type -> mappers.put(type, primitiveSerializer));
-    }
+    pdxMapper = new PdxLuceneSerializer();
-  public void toDocument(Object value, Document doc) {
+  public Collection<Document> toDocuments(LuceneIndex index, Object value) {
-      return;
+      return Collections.emptyList();
-    LuceneSerializer mapper = getFieldMapper(value);
+    LuceneSerializer mapper = getFieldMapper(value, index.getFieldNames());
-    mapper.toDocument(value, doc);
+    Collection<Document> docs = mapper.toDocuments(index, value);
-      logger.debug("HeterogeneousLuceneSerializer.toDocument:" + doc);
+      logger.debug("HeterogeneousLuceneSerializer.toDocuments:" + docs);
+
+    return docs;
-  private LuceneSerializer getFieldMapper(Object value) {
+  private LuceneSerializer getFieldMapper(Object value, String[] indexedFields) {
-
