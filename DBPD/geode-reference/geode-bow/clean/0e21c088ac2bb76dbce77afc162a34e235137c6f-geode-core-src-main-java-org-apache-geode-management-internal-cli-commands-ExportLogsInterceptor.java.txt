GEODE-1897: refactor GfshParseResult for easy access of converted optâ€¦ (#961)

* GEODE-1897: refactor GfshParseResult for easy access of converted option value

* fix test errors

+import java.io.File;
+import java.io.IOException;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.time.LocalDateTime;
+
+import org.apache.logging.log4j.Logger;
+
-import org.apache.logging.log4j.Level;
-import org.apache.logging.log4j.Logger;
-
-import java.io.File;
-import java.io.IOException;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-import java.time.LocalDateTime;
-import java.util.Map;
-    // the arguments are in the order of it's being declared
-    Map<String, String> arguments = parseResult.getParamValueStrings();
-    if (arguments.get("group") != null && arguments.get("member") != null) {
+    if (parseResult.getParamValueAsString("group") != null
+        && parseResult.getParamValueAsString("member") != null) {
-    String logLevel = arguments.get("log-level");
+    String logLevel = parseResult.getParamValueAsString("log-level");
-    String start = arguments.get("start-time");
-    String end = arguments.get("end-time");
+    String start = parseResult.getParamValueAsString("start-time");
+    String end = parseResult.getParamValueAsString("end-time");
-    boolean onlyLogs = Boolean.parseBoolean(arguments.get("logs-only"));
-    boolean onlyStats = Boolean.parseBoolean(arguments.get("stats-only"));
+    boolean onlyLogs = (boolean) parseResult.getParamValue("logs-only");
+    boolean onlyStats = (boolean) parseResult.getParamValue("stats-only");
-      String dirName = parseResult.getParamValueStrings().get("dir");
+      String dirName = parseResult.getParamValueAsString("dir");
