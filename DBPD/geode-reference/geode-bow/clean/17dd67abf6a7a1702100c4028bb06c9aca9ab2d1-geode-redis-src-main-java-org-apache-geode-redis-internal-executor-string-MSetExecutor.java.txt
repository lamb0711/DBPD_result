GEODE-8182: change String commands to use one region (#5165)

* changed all String commands to use the function and to use a single region
* renabled tests ignored for GEODE-8182
* removed the RedisLockService since it is not used in the new data model
* removed the unused del methods on RedisSetCommands and RedisHashCommands
* removed the KeyRegistar since it was no longer needed with a single data region

Co-authored-by: Ray Ingles <ringles@pivotal.io>
-import java.util.HashMap;
-import java.util.Map;
-import org.apache.geode.cache.Region;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-import org.apache.geode.redis.internal.RedisData;
-import org.apache.geode.redis.internal.RedisDataTypeMismatchException;
-
-    Region<ByteArrayWrapper, RedisData> region =
-        context.getRegionProvider().getStringsRegion();
+    RedisStringCommands stringCommands = getRedisStringCommands(context);
-    Map<ByteArrayWrapper, RedisString> map = new HashMap<>();
+    // TODO: make this atomic
-      try {
-        checkAndSetDataType(key, context);
-      } catch (RedisDataTypeMismatchException e) {
-        continue;
-      }
-      byte[] value = commandElems.get(i + 1);
-      ByteArrayWrapper byteArrayWrapper = new ByteArrayWrapper(value);
-      map.put(key, new RedisString(byteArrayWrapper));
-
+      byte[] valueArray = commandElems.get(i + 1);
+      ByteArrayWrapper value = new ByteArrayWrapper(valueArray);
+      stringCommands.set(key, value, null);
-    ByteArrayWrapper key = command.getKey();
-    checkAndSetDataType(key, context);
-
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      region.putAll(map);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
-    }
