GEODE-1723 Merge from 82 for performance improvement.

Other improvement:We take lock on key while doing op on BucketRegion.
In that case we notify to other thread only when there is a thread
waiting for it. Modified one condition to log message to reduce garbage.

-  private Map map = null;
+  private ConcurrentHashMap map = null;
-  public HAContainerMap(HashMap containerMap) {
+  public HAContainerMap(ConcurrentHashMap containerMap) {
-  public Object getKey(Object key) {
-    synchronized (map) {
-      Entry entry = (Entry)map.get(key);
-      return (entry == null) ? null : entry.getKey();
-    }
-  }
+	public Object getKey(Object key) {
+		Entry entry = (Entry) map.get(key);
+		return (entry == null) ? null : entry.getKey();
+	}
-    synchronized (map) {
-      map.clear();
-    }
+    map.clear();
-    synchronized (map) {
-      return map.containsKey(key);
-    }
+    return map.containsKey(key);
-    synchronized (map) {
-      Entry entry = (Entry)map.get(key);
-      return (entry == null) ? null : entry.getValue();
-    }
+    Entry entry = (Entry)map.get(key);
+    return (entry == null) ? null : entry.getValue();
-    synchronized (map) {
-      return map.get(key);
-    }
+    return map.get(key);
-    synchronized (map) {
-      return map.isEmpty();
-    }
+    return map.isEmpty();
-    synchronized (map) {
-      return map.keySet();
-    }
+    return map.keySet();
-    Entry entry = new Entry(key, value);
-    synchronized (map) {
-      return map.put(key, entry);
-    }
+    Entry old = (Entry) map.put(key, new Entry(key, value));
+    return old != null ? old.getValue() : null;
+  }
+
+  @SuppressWarnings("unchecked")
+  public Object putIfAbsent(Object key, Object value) {
+    Entry old = (Entry) map.putIfAbsent(key, new Entry(key, value));
+    return old != null ? old.getValue() : null;
-    //synchronized (map) {
-    //  map.putAll(t);
-    //}
-    synchronized (map) {
-      Entry entry = (Entry)map.remove(key);
-      return (entry == null) ? null : entry.getValue();
-    }
+    Entry entry = (Entry)map.remove(key);
+    return (entry == null) ? null : entry.getValue();
-    synchronized (map) {
-      return map.size();
-    }
+    return map.size();
