GEODE-8182: change String commands to use one region (#5165)

* changed all String commands to use the function and to use a single region
* renabled tests ignored for GEODE-8182
* removed the RedisLockService since it is not used in the new data model
* removed the unused del methods on RedisSetCommands and RedisHashCommands
* removed the KeyRegistar since it was no longer needed with a single data region

Co-authored-by: Ray Ingles <ringles@pivotal.io>
+
-import org.apache.geode.cache.Region;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-import org.apache.geode.redis.internal.RedisConstants;
-import org.apache.geode.redis.internal.RedisData;
-import org.apache.geode.redis.internal.RedisDataType;
-    Region<ByteArrayWrapper, RedisData> region =
-        context.getRegionProvider().getStringsRegion();
-
-    checkAndSetDataType(key, context);
-
-    ByteArrayWrapper oldValueWrapper = null;
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      RedisString redisString = (RedisString) region.get(key);
-      if (redisString != null) {
-        oldValueWrapper = redisString.getValue();
-        try {
-          checkDataType(oldValueWrapper, RedisDataType.REDIS_STRING, context);
-        } catch (Exception e) {
-          command.setResponse(
-              Coder.getErrorResponse(context.getByteBufAllocator(),
-                  RedisConstants.ERROR_WRONG_TYPE));
-          return;
-        }
-      }
-      region.put(key, new RedisString(newValueWrapper));
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
-    }
+
+    RedisStringCommands stringCommands = getRedisStringCommands(context);
+    ByteArrayWrapper oldValueWrapper = stringCommands.get(key);
+    stringCommands.set(key, newValueWrapper, null);
