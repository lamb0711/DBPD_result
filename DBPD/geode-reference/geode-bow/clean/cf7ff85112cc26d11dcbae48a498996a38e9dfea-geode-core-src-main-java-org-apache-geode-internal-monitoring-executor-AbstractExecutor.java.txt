GEODE-5142 new Thread Monitoring Mechanism

Fixing an NPE that may occur if a monitored thread disappears during
expiry but before we've reported on its state.

+  public AbstractExecutor(ThreadsMonitoring tMonitoring, long threadID) {
+    this.startTime = System.currentTimeMillis();
+    this.numIterationsStuck = 0;
+    this.threadID = threadID;
+  }
+
+    boolean logThreadDetails = (thread != null);
-        .append(this.numIterationsStuck).append("> ").append(System.lineSeparator())
-        .append("Thread Name <").append(thread.getThreadName()).append(">")
-        .append(System.lineSeparator()).append("Thread state <").append(thread.getThreadState())
-        .append(">").append(System.lineSeparator());
+        .append(this.numIterationsStuck).append("> ").append(System.lineSeparator());
+    if (logThreadDetails) {
+      strb.append("Thread Name <").append(thread.getThreadName()).append(">")
+          .append(System.lineSeparator()).append("Thread state <").append(thread.getThreadState())
+          .append(">").append(System.lineSeparator());
-    if (thread.getLockName() != null)
-      strb.append("Waiting on <").append(thread.getLockName()).append(">")
-          .append(System.lineSeparator());
+      if (thread.getLockName() != null)
+        strb.append("Waiting on <").append(thread.getLockName()).append(">")
+            .append(System.lineSeparator());
-    if (thread.getLockOwnerName() != null)
-      strb.append("Owned By <").append(thread.getLockOwnerName()).append("> and ID <")
-          .append(thread.getLockOwnerId()).append(">").append(System.lineSeparator());
+      if (thread.getLockOwnerName() != null)
+        strb.append("Owned By <").append(thread.getLockOwnerName()).append("> and ID <")
+            .append(thread.getLockOwnerId()).append(">").append(System.lineSeparator());
+    }
+
-        .append(System.lineSeparator()).append("Thread Stack:").append(System.lineSeparator());
+        .append(System.lineSeparator());
-    for (int i = 0; i < thread.getStackTrace().length; i++) {
-      String row = thread.getStackTrace()[i].toString();
-      strb.append(row).append(System.lineSeparator());
+    if (logThreadDetails) {
+      strb.append("Thread Stack:").append(System.lineSeparator());
+      for (int i = 0; i < thread.getStackTrace().length; i++) {
+        String row = thread.getStackTrace()[i].toString();
+        strb.append(row).append(System.lineSeparator());
+      }
