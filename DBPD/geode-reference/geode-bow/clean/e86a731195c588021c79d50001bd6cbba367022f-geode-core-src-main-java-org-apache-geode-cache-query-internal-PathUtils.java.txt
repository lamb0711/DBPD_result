Merge branch 'release/1.3.0'

-import java.lang.reflect.*;
-import java.util.*;
+import java.lang.reflect.Field;
+import java.lang.reflect.Member;
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.StringTokenizer;
+import org.apache.geode.cache.query.NameNotFoundException;
-import org.apache.geode.cache.query.NameNotFoundException;
-import org.apache.geode.cache.query.types.*;
-import org.apache.geode.cache.query.internal.types.*;
+import org.apache.geode.cache.query.internal.types.TypeUtils;
+import org.apache.geode.cache.query.types.ObjectType;
-  public static Object evaluateAttribute(Object target, String attribute)
+  public static Object evaluateAttribute(ExecutionContext context, Object target, String attribute)
-      return new AttributeDescriptor(attribute).read(target);
+      return new AttributeDescriptor(
+          context.getCache().getQueryService().getMethodInvocationAuthorizer(), attribute)
+              .read(target);
-  public static ObjectType[] calculateTypesAlongPath(ObjectType initialType, String[] pathArray)
-      throws NameNotFoundException {
+  public static ObjectType[] calculateTypesAlongPath(ExecutionContext context,
+      ObjectType initialType, String[] pathArray) throws NameNotFoundException {
-      Member member = new AttributeDescriptor(pathArray[i - 1]).getReadMember(currentType);
+      Member member = new AttributeDescriptor(
+          context.getCache().getQueryService().getMethodInvocationAuthorizer(), pathArray[i - 1])
+              .getReadMember(currentType.resolveClass());
+
-            member = new AttributeDescriptor(stepStr).getReadMember(clazz);
+            member = new AttributeDescriptor(
+                context.getCache().getQueryService().getMethodInvocationAuthorizer(), stepStr)
+                    .getReadMember(clazz);
