GEODE-2929: remove superfluous uses of final from internal classes

-  public final void setEntryFactory(RegionEntryFactory f) {
+  public void setEntryFactory(RegionEntryFactory f) {
-  public final RegionEntryFactory getEntryFactory() {
+  public RegionEntryFactory getEntryFactory() {
-  protected final void _setAttributes(Attributes a) {
+  protected void _setAttributes(Attributes a) {
-  public final Attributes getAttributes() {
+  public Attributes getAttributes() {
-  protected final LocalRegion _getOwner() {
+  protected LocalRegion _getOwner() {
-  protected final Object _getOwnerObject() {
+  protected Object _getOwnerObject() {
-  public final void setOwner(Object r) {
+  public void setOwner(Object r) {
-  protected final CustomEntryConcurrentHashMap<Object, Object> _getMap() {
+  protected CustomEntryConcurrentHashMap<Object, Object> _getMap() {
-  protected final void _setMap(CustomEntryConcurrentHashMap<Object, Object> m) {
+  protected void _setMap(CustomEntryConcurrentHashMap<Object, Object> m) {
-  public final boolean containsKey(Object key) {
+  public boolean containsKey(Object key) {
-  public final RegionEntry getEntryInVM(Object key) {
+  public RegionEntry getEntryInVM(Object key) {
-  public final RegionEntry putEntryIfAbsent(Object key, RegionEntry re) {
+  public RegionEntry putEntryIfAbsent(Object key, RegionEntry re) {
-  public final RegionEntry getOperationalEntryInVM(Object key) {
+  public RegionEntry getOperationalEntryInVM(Object key) {
-  public final void removeEntry(Object key, RegionEntry re, boolean updateStat) {
+  public void removeEntry(Object key, RegionEntry re, boolean updateStat) {
-  public final void removeEntry(Object key, RegionEntry re, boolean updateStat,
-      EntryEventImpl event, final LocalRegion owner) {
+  public void removeEntry(Object key, RegionEntry re, boolean updateStat, EntryEventImpl event,
+      final LocalRegion owner) {
-  protected final void incEntryCount(int delta) {
+  protected void incEntryCount(int delta) {
-  final void incClearCount(LocalRegion lr) {
+  void incClearCount(LocalRegion lr) {
-  public final RegionEntry initRecoveredEntry(Object key, DiskEntry.RecoveredEntry value) {
+  public RegionEntry initRecoveredEntry(Object key, DiskEntry.RecoveredEntry value) {
-  public final RegionEntry updateRecoveredEntry(Object key, DiskEntry.RecoveredEntry value) {
+  public RegionEntry updateRecoveredEntry(Object key, DiskEntry.RecoveredEntry value) {
-  public final boolean initialImagePut(final Object key, final long lastModified, Object newValue,
+  public boolean initialImagePut(final Object key, final long lastModified, Object newValue,
-  public final boolean destroy(EntryEventImpl event, boolean inTokenMode, boolean duringRI,
+  public boolean destroy(EntryEventImpl event, boolean inTokenMode, boolean duringRI,
-  public final void txApplyDestroy(Object key, TransactionId txId, TXRmtEvent txEvent,
+  public void txApplyDestroy(Object key, TransactionId txId, TXRmtEvent txEvent,
-  public final boolean invalidate(EntryEventImpl event, boolean invokeCallbacks,
-      boolean forceNewEntry, boolean forceCallbacks) throws EntryNotFoundException {
+  public boolean invalidate(EntryEventImpl event, boolean invokeCallbacks, boolean forceNewEntry,
+      boolean forceCallbacks) throws EntryNotFoundException {
-  public final void txApplyInvalidate(Object key, Object newValue, boolean didDestroy,
-      TransactionId txId, TXRmtEvent txEvent, boolean localOp, EventID eventId,
-      Object aCallbackArgument, List<EntryEventImpl> pendingCallbacks,
-      FilterRoutingInfo filterRoutingInfo, ClientProxyMembershipID bridgeContext,
-      TXEntryState txEntryState, VersionTag versionTag, long tailKey) {
+  public void txApplyInvalidate(Object key, Object newValue, boolean didDestroy, TransactionId txId,
+      TXRmtEvent txEvent, boolean localOp, EventID eventId, Object aCallbackArgument,
+      List<EntryEventImpl> pendingCallbacks, FilterRoutingInfo filterRoutingInfo,
+      ClientProxyMembershipID bridgeContext, TXEntryState txEntryState, VersionTag versionTag,
+      long tailKey) {
-  public static final EntryEventImpl createCBEvent(final LocalRegion re, Operation op, Object key,
+  public static EntryEventImpl createCBEvent(final LocalRegion re, Operation op, Object key,
-  public final void writeSyncIfPresent(Object key, Runnable runner) {
+  public void writeSyncIfPresent(Object key, Runnable runner) {
-  public final void removeIfDestroyed(Object key) {
+  public void removeIfDestroyed(Object key) {
-  protected final RegionEntry putEntryIfAbsentForTest(RegionEntry entry) {
+  protected RegionEntry putEntryIfAbsentForTest(RegionEntry entry) {
