merge of develop to feature/GEODE-77

Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

Conflicts:
	gemfire-core/build.gradle
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/cache/LocalRegion.java
	gemfire-jgroups/build.gradle

+import com.gemstone.gemfire.internal.Sendable;
+import com.gemstone.gemfire.internal.offheap.annotations.Retained;
-public interface StoredObject extends OffHeapReference, CachedDeserializable {
+public interface StoredObject extends Releasable, Sendable, CachedDeserializable {
+  /**
+   * Call to indicate that this object's memory is in use by the caller.
+   * The memory will stay allocated until {@link #release()} is called.
+   * It is ok for a thread other than the one that called this method to call release.
+   * This method is called implicitly at the time the chunk is allocated.
+   * Note: @Retained tells you that "this" is retained by this method.
+   * 
+   * @throws IllegalStateException if the max ref count is exceeded.
+   * @return true if we are able to retain this chunk; false if we need to retry
+   */
+  @Retained
+  public boolean retain();
+
+  /**
+   * Returns true if the value stored in this memory chunk is a serialized object. Returns false if it is a byte array.
+   */
+  public boolean isSerialized();
+
+  /**
+   * Returns true if the value stored in this memory chunk is compressed. Returns false if it is uncompressed.
+   */
+  public boolean isCompressed();
+
+  /**
+   * Returns the data stored in this object as a deserialized heap object.
+   * If it is not serialized then the result will be a byte[].
+   * Otherwise the deserialized heap form of the stored object is returned.
+   * @return the data stored in this object as a deserialized heap object.
+   */
+  public Object getValueAsDeserializedHeapObject();
+
+  /**
+   * Returns the data stored in this object as a heap byte array.
+   * If it is not serialized then the result will only contain the raw bytes stored in this object.
+   * Otherwise the serialized heap form of the stored object is returned.
+   * @return the data stored in this object as a heap byte array.
+   */
+  public byte[] getValueAsHeapByteArray();
