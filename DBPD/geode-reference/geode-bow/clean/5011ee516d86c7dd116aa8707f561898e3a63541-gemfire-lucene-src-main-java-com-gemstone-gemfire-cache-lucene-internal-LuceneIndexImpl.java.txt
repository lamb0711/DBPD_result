Adding xml parsing and generation logic

We now have an xsd for the lucene elements, and a LuceneXmlParser
service. Geode already has a mechanism to plug in additional xml parsers
like LuceneXmlParsers by using the java service loader, which I have
done.

I've written a LuceneIndexCreation object to match other configuration
objects that get generated when a cache is parsed. This creation is
attached to regions on index creation time so that when xml is
generated, the creation object and generate the appropriate xml snippet.

+import com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation;
+import com.gemstone.gemfire.internal.cache.PartitionedRegion;
-  protected void initialize() {
+  protected abstract void initialize();
+  
+  /**
+   * Register an extension with the region
+   * so that xml will be generated for this index.
+   */
+  protected void addExtension(PartitionedRegion dataRegion) {
+    LuceneIndexCreation creation = new LuceneIndexCreation();
+    creation.setName(this.getName());
+    creation.setFieldNames(this.getFieldNames());
+    creation.setRegion(dataRegion);
+    creation.setFieldFieldAnalyzerMap(this.getFieldAnalyzerMap());
+    dataRegion.getExtensionPoint().addExtension(creation, creation);
