GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

-package org.apache.geode.internal.cache.lru;
+package org.apache.geode.internal.cache.eviction;
-import org.apache.geode.internal.cache.RegionEntry;
- * The lru action on the map for evicting items must be called while the current thread is free of
- * any map synchronizations.
+ * A RegionMap should implement EvictableMap if it needs to support Eviction.
+ *
+ * <p>
+ * The eviction action on the map for evicting items must be called while the current thread is free
+ * of any map synchronizations.
-public interface LRUMapCallbacks {
+public interface EvictableMap {
-   * is made. This will then perform the lru removals, or region.localDestroy() calls to make up for
-   * the recent addition.
+   * is made. This will then perform the eviction removals, or region.localDestroy() calls to make
+   * up for the recent addition.
-  public void lruUpdateCallback();
-
-  public void lruUpdateCallback(int n);
+  void lruUpdateCallback();
-  public boolean disableLruUpdateCallback();
+  boolean disableLruUpdateCallback();
-  public void enableLruUpdateCallback();
+  void enableLruUpdateCallback();
-  public void resetThreadLocals();
+  void resetThreadLocals();
-   * @param drv the disk region whose limit is checked
+   * @param diskRegionView the disk region whose limit is checked
-  public boolean lruLimitExceeded(DiskRegionView drv);
+  boolean lruLimitExceeded(DiskRegionView diskRegionView);
-  public void lruCloseStats();
+  void lruCloseStats();
-  public void lruEntryFaultIn(LRUEntry entry);
+  void lruEntryFaultIn(EvictableEntry entry);
