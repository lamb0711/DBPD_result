GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-import com.gemstone.gemfire.cache.operations.OperationContext;
+import com.gemstone.gemfire.cache.operations.internal.ResourceOperationContext;
-public class KeySetOperationContext extends OperationContext {
+public class KeySetOperationContext extends ResourceOperationContext {
-  /** True if this is a post-operation context */
-  private boolean postOperation;
-
-    this.postOperation = postOperation;
-  }
-
-  /**
-   * Return the operation associated with the <code>OperationContext</code>
-   * object.
-   * 
-   * @return <code>OperationCode.KEY_SET</code>.
-   */
-  @Override
-  public OperationCode getOperationCode() {
-    return OperationCode.KEY_SET;
-  }
-
-  /**
-   * True if the context is for post-operation.
-   */
-  @Override
-  public boolean isPostOperation() {
-    return this.postOperation;
-  }
-
-  /**
-   * Set the post-operation flag to true.
-   */
-  public void setPostOperation() {
-    this.postOperation = true;
+    super(Resource.DATA, OperationCode.KEY_SET, postOperation);
