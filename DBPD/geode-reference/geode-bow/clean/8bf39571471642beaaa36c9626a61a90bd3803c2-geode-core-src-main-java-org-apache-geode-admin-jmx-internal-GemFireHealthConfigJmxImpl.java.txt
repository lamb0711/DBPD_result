Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The JMX "managed resource" that represents the configuration for
- * the health of GemFire.  Basically, it provides the behavior of
- * <code>GemFireHealthConfigImpl</code>, but does some JMX stuff like
- * registering beans with the agent.
+ * The JMX "managed resource" that represents the configuration for the health of GemFire.
+ * Basically, it provides the behavior of <code>GemFireHealthConfigImpl</code>, but does some JMX
+ * stuff like registering beans with the agent.
- * Unlike other <code>ManagedResource</code>s this class cannot simply
- * subclass <code>GemFireHealthImpl</code> because it instances are
- * serialized and sent to other VMs.  This is problematic because the
- * other VMs most likely do not have JMX classes like
- * <code>ModelMBean</code> on their classpaths.  So, instead we
- * delegate all of the <code>GemFireHealthConfig</code> behavior to
- * another object which IS serialized.
+ * Unlike other <code>ManagedResource</code>s this class cannot simply subclass
+ * <code>GemFireHealthImpl</code> because it instances are serialized and sent to other VMs. This is
+ * problematic because the other VMs most likely do not have JMX classes like
+ * <code>ModelMBean</code> on their classpaths. So, instead we delegate all of the
+ * <code>GemFireHealthConfig</code> behavior to another object which IS serialized.
-@edu.umd.cs.findbugs.annotations.SuppressWarnings(justification="This class is deprecated. Also, any further changes so close to the release is inadvisable.") 
+@edu.umd.cs.findbugs.annotations.SuppressWarnings(
+    justification = "This class is deprecated. Also, any further changes so close to the release is inadvisable.")
-  implements GemFireHealthConfig, ManagedResource, java.io.Serializable {
+    implements GemFireHealthConfig, ManagedResource, java.io.Serializable {
-  ///////////////////////  Constructors  ///////////////////////
+  /////////////////////// Constructors ///////////////////////
-   * Creates a new <code>GemFireHealthConfigJmxImpl</code> that
-   * configures the health monitoring of components running on the
-   * given host.
+   * Creates a new <code>GemFireHealthConfigJmxImpl</code> that configures the health monitoring of
+   * components running on the given host.
-  GemFireHealthConfigJmxImpl(GemFireHealthJmxImpl health,
-                             String hostName)
-    throws AdminException {
+  GemFireHealthConfigJmxImpl(GemFireHealthJmxImpl health, String hostName) throws AdminException {
-    this.mbeanName = new StringBuffer()
-      .append(MBEAN_NAME_PREFIX)
-      .append("GemFireHealthConfig,id=")
-      .append(MBeanUtil.makeCompliantMBeanNameProperty(health.getDistributedSystem().getId()))
-      .append(",host=") 
-      .append((hostName == null ? "default" : MBeanUtil.makeCompliantMBeanNameProperty(hostName)))
-      .toString(); 
+    this.mbeanName = new StringBuffer().append(MBEAN_NAME_PREFIX).append("GemFireHealthConfig,id=")
+        .append(MBeanUtil.makeCompliantMBeanNameProperty(health.getDistributedSystem().getId()))
+        .append(",host=")
+        .append((hostName == null ? "default" : MBeanUtil.makeCompliantMBeanNameProperty(hostName)))
+        .toString();
-  //////////////////////  Instance Methods  //////////////////////
+  ////////////////////// Instance Methods //////////////////////
-   * Applies the changes made to this config back to the health
-   * monitor.
+   * Applies the changes made to this config back to the health monitor.
-  
+
-   * Replace this object with the delegate that can be properly
-   * serialized. 
+   * Replace this object with the delegate that can be properly serialized.
-  //////////////////////  MemberHealthConfig  //////////////////////
+  ////////////////////// MemberHealthConfig //////////////////////
-  
+
-  //////////////////////  CacheHealthConfig  //////////////////////
+  ////////////////////// CacheHealthConfig //////////////////////
-    public long getMaxNetSearchTime() {
+  public long getMaxNetSearchTime() {
-  //////////////////////  GemFireHealthConfig  //////////////////////
+  ////////////////////// GemFireHealthConfig //////////////////////
-  
+
