GEODE-8330: Structural Improvements to Versioning

Follow-on to GEODE-8240, this commit eliminates redundancy in 
versioning code and provides a single way to convert a short
to a version and a single way to acquire a known version from
a (possibly unknown) version.
-import org.apache.geode.internal.serialization.UnsupportedSerializationVersionException;
+import org.apache.geode.internal.serialization.Versioning;
+import org.apache.geode.internal.serialization.VersioningIO;
-    Version recoveredGFVersion;
-    short ver = Version.readOrdinal(dis);
-    try {
-      recoveredGFVersion = Version.fromOrdinal(ver);
-    } catch (UnsupportedSerializationVersionException e) {
+    short ver = VersioningIO.readOrdinal(dis);
+    final Version recoveredGFVersion =
+        Versioning.getKnownVersionOrDefault(
+            Versioning.getVersionOrdinal(ver), null);
+    if (recoveredGFVersion == null) {
-          String.format("Unknown version ordinal %s found when recovering Oplogs", ver), e,
+          String.format("Unknown version ordinal %s found when recovering Oplogs", ver),
-      this.gfversion.writeOrdinal(this.krf.dos, false);
+      VersioningIO.writeOrdinal(this.krf.dos, this.gfversion.ordinal(), false);
-      Version.TOKEN.writeOrdinal(this.krf.dos, false);
+      VersioningIO.writeOrdinal(this.krf.dos, Version.TOKEN.ordinal(), false);
-      this.gfversion.writeOrdinal(this.krf.dos, false);
+      VersioningIO.writeOrdinal(this.krf.dos, this.gfversion.ordinal(), false);
-      dataVersion.writeOrdinal(this.krf.dos, false);
+      VersioningIO.writeOrdinal(this.krf.dos, dataVersion.ordinal(), false);
-      Version.writeOrdinal(bb, ordinal, false);
+      VersioningIO.writeOrdinal(bb, ordinal, false);
