Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+	private boolean offHeap;
+	private String hdfsStoreName;
+	private Boolean hdfsWriteOnly;
+	
+		this.offHeap = ra.getOffHeap();
+		this.hdfsStoreName = ra.getHDFSStoreName();
+		this.hdfsWriteOnly = ra.getHDFSWriteOnly();
+	public boolean getOffHeap() {
+	  return this.offHeap;
+	}
+	
+	public String getHdfsStoreName() {
+		return hdfsStoreName;
+	}
+
+
+	public Boolean getHdfsWriteOnly() {
+		return hdfsWriteOnly;
+	}
+	
-			if (dataPolicy.equals(RegionAttributesDefault.DATA_POLICY)) {
+			if (!dataPolicy.equals(RegionAttributesDefault.DATA_POLICY)) {
-			if (diskStoreName != null && diskStoreName.equals(RegionAttributesDefault.DISK_STORE_NAME)) {
+			if (diskStoreName != null && !diskStoreName.equals(RegionAttributesDefault.DISK_STORE_NAME)) {
-			if (scope.equals(RegionAttributesDefault.SCOPE)) {
+			if (!scope.equals(RegionAttributesDefault.SCOPE)) {
+			
+            if (this.offHeap != RegionAttributesDefault.OFF_HEAP) {
+                nonDefaultAttributes.put(RegionAttributesNames.OFF_HEAP, Boolean.toString(this.offHeap));
+             }            
+            if (this.hdfsStoreName != null ) {
+                nonDefaultAttributes.put(RegionAttributesNames.HDFSSTORE, this.hdfsStoreName);
+                nonDefaultAttributes.put(RegionAttributesNames.HDFS_WRITEONLY, Boolean.toString(this.hdfsWriteOnly));
+             }
