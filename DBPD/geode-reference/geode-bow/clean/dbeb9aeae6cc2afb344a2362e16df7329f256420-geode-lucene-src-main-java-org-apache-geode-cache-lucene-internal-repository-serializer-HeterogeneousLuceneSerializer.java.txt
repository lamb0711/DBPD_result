Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *   http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An implementation of LuceneSerializer that reads the fields
- * of a given object using reflection or from a PDX instance and
- * writes them to a lucene document.
+ * An implementation of LuceneSerializer that reads the fields of a given object using reflection or
+ * from a PDX instance and writes them to a lucene document.
-  
+
-  private Map<Class<?>, LuceneSerializer> mappers = new CopyOnWriteWeakHashMap<Class<?>, LuceneSerializer>();
-  
+  private Map<Class<?>, LuceneSerializer> mappers =
+      new CopyOnWriteWeakHashMap<Class<?>, LuceneSerializer>();
+
-  
+
-   * Add serializers for the primitive value types (String, Number, etc.)
-   * if the user has requested that the whole value be serialized
+   * Add serializers for the primitive value types (String, Number, etc.) if the user has requested
+   * that the whole value be serialized
-    if(Arrays.asList(indexedFields).contains(LuceneService.REGION_VALUE_FIELD)) {
+    if (Arrays.asList(indexedFields).contains(LuceneService.REGION_VALUE_FIELD)) {
-        .forEach(type -> mappers.put(type, primitiveSerializer));
+          .forEach(type -> mappers.put(type, primitiveSerializer));
-    
+
+    if (value == null) {
+      return;
+    }
+
-    
+
-      logger.debug("HeterogeneousLuceneSerializer.toDocument:"+doc);
+      logger.debug("HeterogeneousLuceneSerializer.toDocument:" + doc);
-    if(value instanceof PdxInstance) {
+    if (value instanceof PdxInstance) {
-      if(mapper == null) {
+      if (mapper == null) {
-  
+
