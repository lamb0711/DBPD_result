GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-
+  private static final String LINE_SEPARATOR = System.getProperty("line.separator");
+
-      return (Long.parseLong(actualVersionDigits) >= Long.parseLong(expectedVersionDigits));
+      return Long.parseLong(actualVersionDigits) >= Long.parseLong(expectedVersionDigits);
-    return (jvmVendor != null && jvmVendor.contains(expectedJvmVendorName));
+    return jvmVendor != null && jvmVendor.contains(expectedJvmVendorName);
-  // @see java.lang.System#getProperty(String) with "java.vm.name".
+  /**
+   * Returns true if the expectedJvmName matches {@code System.getProperty("java.vm.name")}.
+   */
-    return (jvmName != null && jvmName.contains(expectedJvmName));
+    return jvmName != null && jvmName.contains(expectedJvmName);
-   * <code>System.getProperty("java.class.path")</code>.
+   * {@code System.getProperty("java.class.path")}.
-   * @throws MalformedURLException
-   * <code>System.getProperty("java.class.path")</code>.
+   * {@code System.getProperty("java.class.path")}.
-   * @throws MalformedURLException
-   * Returns the value of {code System.getProperty("os.name")}.
+   * Returns the value of {@code System.getProperty("os.name")}.
-   * Returns the value of {code System.getProperty("os.version")}.
+   * Returns the value of {@code System.getProperty("os.version")}.
-   * Returns the value of {code System.getProperty("os.arch")}.
+   * Returns the value of {@code System.getProperty("os.arch")}.
-   * Returns the value of {code System.getProperty("java.class.path")}.
+   * Returns the value of {@code System.getProperty("java.class.path")}.
-   * Returns the value of {code System.getProperty("sun.boot.class.path")}.
+   * Returns the value of {@code System.getProperty("sun.boot.class.path")}.
-  // @see java.lang.System#getProperty(String) with "os.name".
+  /**
+   * Returns true if expectedOsName matches {@code System.getProperty("os.name")}.
+   */
-    return (osName != null && osName.contains(expectedOsName));
+    return osName != null && osName.contains(expectedOsName);
+  /**
+   * Returns the value of {@code System.getProperty("line.separator")}.
+   */
+  public static String getLineSeparator() {
+    return LINE_SEPARATOR;
+  }
