Merge remote-tracking branch 'origin/develop' into geode-6400

+
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.MediaType;
+  private static final String VERSION = "/v2";
+
+  public ClientClusterManagementService(String host, int port) {
+    this(host, port, null, null, null, null);
+  }
+
-    templateHandler.setBaseUrl(schema + "://" + host + ":" + port + "/geode-management/v2");
+    templateHandler.setBaseUrl(schema + "://" + host + ":" + port + "/geode-management");
-    HttpHeaders headers = new HttpHeaders();
-    headers.setContentType(MediaType.APPLICATION_JSON);
-    return restTemplate.postForObject(endPoint, config, ClusterManagementResult.class);
+    return restTemplate.postForEntity(VERSION + endPoint, config, ClusterManagementResult.class)
+        .getBody();
+  @Override
+  public ClusterManagementResult list(CacheElement config) {
+    String endPoint = getEndpoint(config);
+    String id = config.getId();
+
+    // return restTemplate
+    // .getForEntity(VERSION + endPoint + ((id == null) ? "" : "/{id}"),
+    // ClusterManagementResult.class, id)
+    // .getBody();
+
+    return restTemplate
+        .getForEntity(VERSION + endPoint + ((id == null) ? "" : "/?id=" + id),
+            ClusterManagementResult.class)
+        .getBody();
+
+  }
+
-    return restTemplate.getForObject("/ping", String.class).equals("pong");
+    return restTemplate.getForEntity(VERSION + "/ping", String.class)
+        .getBody().equals("pong");
