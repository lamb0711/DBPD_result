Merge pull request #2506 from jujoramos/feature/GEODE-5523

GEODE-5523: Remove DefaultHashMap

The internal class `DefaultHashMap` was designed as an internal
workaround to return a default value whenever the value returned by
`Map.get(K)` was `null`. Starting with Java 8 the `Map` interface
added the method `getOrDefault`, which does something similar in a more
efficient way but it returns the default only if the key doesn't exist.
After inspecting the code, we don't insert `null` values into the
`statsMap`, so it is safe to delete the old `DefaultHashMap` class and
replace its usage by `Map.getOrDefault`.
-  protected DefaultHashMap statsMap;
+  protected Map<String, Number> statsMap;
-  protected String monitorName;
+  private String monitorName;
-    this.statsMap = new DefaultHashMap();
+    this.statsMap = new HashMap<>();
+
-    Number value = statsMap.get(statName);
+    Number value = statsMap.getOrDefault(statName, 0);
-
-  public static class DefaultHashMap { // TODO: delete this class
-    private Map<String, Number> internalMap = new HashMap<>();
-
-    public DefaultHashMap() {}
-
-    public Number get(final String key) {
-      return internalMap.get(key) != null ? internalMap.get(key) : 0;
-    }
-
-    public void put(final String key, final Number value) {
-      internalMap.put(key, value);
-    }
-
-    public void clear() {
-      internalMap.clear();
-    }
-
-    /**
-     * For testing only
-     */
-    Map<String, Number> getInternalMap() {
-      return this.internalMap;
-    }
-  }
-
