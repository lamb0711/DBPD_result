Merge pull request #1053 from apache/feature/GEODE-3940

Feature/geode 3940
-import java.io.SyncFailedException;
-import org.apache.commons.io.FileUtils;
+import org.apache.geode.internal.cache.backup.BackupManager;
+  public Object getLock() {
+    return lock;
+  }
+
-  File getOplogFile() throws SyncFailedException, IOException {
+  File getOplogFileForTest() throws IOException {
+  public File getCrfFile() {
+    return this.crf.f;
+  }
+
+  public File getDrfFile() {
+    return this.drf.f;
+  }
+
-  Set<String> gatherMatchingOplogFiles(Set<String> oplogFileNames) {
+  public Set<String> gatherMatchingOplogFiles(Set<String> oplogFileNames) {
-  Map<File, File> mapBaseline(Collection<File> baselineOplogFiles) {
+  public Map<File, File> mapBaseline(Collection<File> baselineOplogFiles) {
-  private File getKrfFile() {
+  public File getKrfFile() {
-  public void copyTo(File targetDir) throws IOException {
-    if (this.crf.f != null && this.crf.f.exists()) {
-      FileUtils.copyFileToDirectory(this.crf.f, targetDir);
-    }
-    if (this.drf.f.exists()) {
-      FileUtils.copyFileToDirectory(this.drf.f, targetDir);
-    }
-
-    // this krf existence check fixes 45089
-    // TODO: should we wait for the async KRF creation to finish by calling this.finishKrf?
-    if (getParent().getDiskInitFile().hasKrf(this.oplogId)) {
-      if (this.getKrfFile().exists()) {
-        FileUtils.copyFileToDirectory(this.getKrfFile(), targetDir);
-      }
-    }
-  }
-
-  DirectoryHolder getDirectoryHolder() {
+  public DirectoryHolder getDirectoryHolder() {
-  void finishKrf() {
+  public void finishKrf() {
