Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2005-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-public final class StructSet /*extends ObjectOpenCustomHashSet*/ implements Set, SelectResults, DataSerializableFixedID {
+public final class StructSet /*extends ObjectOpenCustomHashSet*/ implements Set, SelectResults, 
+DataSerializableFixedID, StructFields {
-    return new CollectionTypeImpl(java.util.Set.class, this.structType);
+    return new CollectionTypeImpl(StructSet.class, this.structType);
-    return this.contents;
+    return this;
-    return this.contents.toArray();
+    Struct[] structs = new Struct[this.contents.size()];
+    int i = 0;
+    for (Iterator iter = this.iterator(); iter.hasNext();) {      
+      structs[i++]  = (Struct)iter.next();
+    }
+    return structs;    
-  public Object[] toArray(Object[] a) {
-    return this.contents.toArray(a);
+  public Object[] toArray(Object[] a) {    
+    Object[] array = this.contents.toArray(a);
+    int i = 0;
+    for(Object o : array) {
+      array[i++] = new StructImpl((StructTypeImpl)this.structType, (Object[])o);
+    }
+    return array;
+    if(o instanceof Struct) {
+      o = ((Struct)o).getFieldValues();
+    }
+    //TODO: Asif : This is wrong ,we need to fix this.
