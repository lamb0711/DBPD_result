GEODE-8338: change redis commands not be repeated when a server dies (#5351)

The redis functions are no longer HA.
The product does have some cases when it can safely retry the function
but if a server dies the client will see a redis error containing "memberDeparted".
In that case the client app can check to see if the redis operation should be done
again, or if it already happened even though a server died.

Co-authored-by: Sarah Abbey <sabbey@vmware.com>
Co-authored-by: Darrel Schneider <darrel@vmware.com>
-import org.apache.geode.redis.internal.executor.CommandFunction;
+import org.apache.geode.redis.internal.executor.RedisCommandsFunctionInvoker;
-public class RedisHashCommandsFunctionInvoker implements RedisHashCommands {
-
-  private final Region<ByteArrayWrapper, RedisData> region;
+public class RedisHashCommandsFunctionInvoker extends RedisCommandsFunctionInvoker
+    implements RedisHashCommands {
-    this.region = region;
+    super(region);
-    return CommandFunction.invoke(HSET, key, new Object[] {fieldsToSet, NX}, region);
+    return invokeCommandFunction(key, HSET, fieldsToSet, NX);
-    return CommandFunction.invoke(HDEL, key, fieldsToRemove, region);
+    return invokeCommandFunction(key, HDEL, fieldsToRemove);
-    return CommandFunction.invoke(HGETALL, key, null, region);
+    return invokeCommandFunction(key, HGETALL);
-    return CommandFunction.invoke(HEXISTS, key, field, region);
+    return invokeCommandFunction(key, HEXISTS, field);
-    return CommandFunction.invoke(HGET, key, field, region);
+    return invokeCommandFunction(key, HGET, field);
-    return CommandFunction.invoke(HLEN, key, null, region);
+    return invokeCommandFunction(key, HLEN);
-    return CommandFunction.invoke(HSTRLEN, key, field, region);
+    return invokeCommandFunction(key, HSTRLEN, field);
-    return CommandFunction.invoke(HMGET, key, fields, region);
+    return invokeCommandFunction(key, HMGET, fields);
-    return CommandFunction.invoke(HVALS, key, null, region);
+    return invokeCommandFunction(key, HVALS);
-    return CommandFunction.invoke(HKEYS, key, null, region);
+    return invokeCommandFunction(key, HKEYS);
-    return CommandFunction.invoke(HSCAN, key, new Object[] {matchPattern, count, cursor}, region);
+    return invokeCommandFunction(key, HSCAN, matchPattern, count, cursor);
-    return CommandFunction.invoke(HINCRBY, key, new Object[] {field, increment}, region);
+    return invokeCommandFunction(key, HINCRBY, field, increment);
-    return CommandFunction.invoke(HINCRBYFLOAT, key, new Object[] {field, increment}, region);
+    return invokeCommandFunction(key, HINCRBYFLOAT, field, increment);
