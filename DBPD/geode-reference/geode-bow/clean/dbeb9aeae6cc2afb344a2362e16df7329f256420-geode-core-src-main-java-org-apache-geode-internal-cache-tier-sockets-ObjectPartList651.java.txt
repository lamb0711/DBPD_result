Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * [bruce] THIS CLASS IS OBSOLETE AS OF V7.0.  It is replaced with VersionedObjectList
- *  
+ * [bruce] THIS CLASS IS OBSOLETE AS OF V7.0. It is replaced with VersionedObjectList
+ * 
-  public ObjectPartList651 () {
+  public ObjectPartList651() {
+
-   super(maximumchunksize,b);
+    super(maximumchunksize, b);
-  
+
-  
+
-      System.arraycopy(this.objectTypeArray, 0, temp, 0,
-          this.objectTypeArray.length);
+      System.arraycopy(this.objectTypeArray, 0, temp, 0, this.objectTypeArray.length);
-      System.arraycopy(other.objectTypeArray, 0, this.objectTypeArray,
-          temp.length, other.objectTypeArray.length);
+      System.arraycopy(other.objectTypeArray, 0, this.objectTypeArray, temp.length,
+          other.objectTypeArray.length);
-  
+
-        
+
-          out.write((byte[])value);
-        }
-        else if (objectType == EXCEPTION) {
+          out.write((byte[]) value);
+        } else if (objectType == EXCEPTION) {
-          DataSerializer
-              .writeByteArray(CacheServerHelper.serialize(value), out);
+          DataSerializer.writeByteArray(CacheServerHelper.serialize(value), out);
-        }
-        else {
+        } else {
-    }
-    else {
+    } else {
-        if (objectType==EXCEPTION) {
+        if (objectType == EXCEPTION) {
-        }
-        else {
+        } else {
-  
+
