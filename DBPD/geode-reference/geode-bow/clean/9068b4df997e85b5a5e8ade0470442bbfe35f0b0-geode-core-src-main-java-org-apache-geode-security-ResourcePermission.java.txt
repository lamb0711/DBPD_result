GEODE-7004: Optimized ResourcePermission constructor (#3839)


Co-authored-by: Kamilla Aslami <kaslami@pivotal.io>
Co-authored-by: Jacob Barrett <jbarrett@pivotal.io>

+import java.util.Collections;
+import org.apache.shiro.util.CollectionUtils;
-    setParts(this.resource + ":" + this.operation + ":" + this.target + ":" + this.key, true);
+    setParts(Arrays.asList(
+        Collections.singleton(this.resource),
+        Collections.singleton(this.operation),
+        Collections.singleton(this.target),
+        Collections.singleton(this.key)));
-    this(resource == null ? null : resource.getName(),
-        operation == null ? null : operation.getName(), target == null ? null : target.getName(),
+    init(resource == null ? NULL : resource.getName(),
+        operation == null ? NULL : operation.getName(), target == null ? null : target.getName(),
-    this(resource == null ? null : resource.getName(),
-        operation == null ? null : operation.getName(), target, key);
+    init(resource == null ? NULL : resource.getName(),
+        operation == null ? NULL : operation.getName(), parseTarget(target), key);
+  }
+
+  private String parseTarget(String target) {
+    return target == null ? null : StringUtils.stripStart(target, Region.SEPARATOR);
-    this.resource = parsePart(resource, r -> Resource.valueOf(r).getName());
-    this.operation = parsePart(operation, o -> Operation.valueOf(o).getName());
+    init(parsePart(resource, r -> Resource.valueOf(r).getName()),
+        parsePart(operation, o -> Operation.valueOf(o).getName()), parseTarget(target), key);
+  }
+
+  private void init(String resource, String operation, String target, String key) {
+    this.resource = resource;
+    this.operation = operation;
-      this.target = StringUtils.stripStart(target, Region.SEPARATOR);
+      this.target = target;
+
-    setParts(this.resource + ":" + this.operation + ":" + this.target + ":" + this.key, true);
+    setParts(Arrays.asList(
+        Collections.singleton(this.resource),
+        Collections.singleton(this.operation),
+        CollectionUtils.asSet(this.target.split(SUBPART_DIVIDER_TOKEN)),
+        CollectionUtils.asSet(this.key.split(SUBPART_DIVIDER_TOKEN))));
