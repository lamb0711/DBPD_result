Revert "* GEODE-6861: have create/delete/update return SimpleClusterManagementResult which does not need generics."

This reverts commit b3157c94

+import com.fasterxml.jackson.annotation.JsonIgnore;
-public class ClusterManagementResult<R extends CacheElement> extends SimpleClusterManagementResult {
+public class ClusterManagementResult<R extends CacheElement> {
+  // this error code should include a one-to-one mapping to the http status code returned
+  // by the controller
+  public enum StatusCode {
+    // configuration failed validation
+    ILLEGAL_ARGUMENT,
+    // user is not authenticated
+    UNAUTHENTICATED,
+    // user is not authorized to do this operation
+    UNAUTHORIZED,
+    // entity you are trying to create already exists
+    ENTITY_EXISTS,
+    // entity you are trying to modify/delete is not found
+    ENTITY_NOT_FOUND,
+    // operation not successful, this includes precondition is not met (either service is not
+    // running
+    // or no servers available, or the configuration encountered some error when trying to be
+    // realized
+    // on one member (configuration is not fully realized on all applicable members).
+    ERROR,
+    // configuration is realized on members, but encountered some error when persisting the
+    // configuration.
+    // the operation is still deemed unsuccessful.
+    FAIL_TO_PERSIST,
+    // operation is successful, configuration is realized and persisted
+    OK
+  }
+
+  private List<RealizationResult> memberStatuses = new ArrayList<>();
+
+  // we will always have statusCode when the object is created
+  private StatusCode statusCode = StatusCode.OK;
+  private String statusMessage;
+
-    super(success, message);
+    setStatus(success, message);
-    super(statusCode, message);
+    this.statusCode = statusCode;
+    this.statusMessage = message;
+  }
+
+  public void addMemberStatus(String member, boolean success, String message) {
+    addMemberStatus(new RealizationResult().setMemberName(member)
+        .setSuccess(success).setMessage(message));
+  }
+
+  public void addMemberStatus(RealizationResult result) {
+    this.memberStatuses.add(result);
+    // if any member failed, status code will be error
+    if (!result.isSuccess()) {
+      statusCode = StatusCode.ERROR;
+    }
+  }
+
+  public void setStatus(boolean success, String message) {
+    if (!success) {
+      statusCode = StatusCode.ERROR;
+    }
+    this.statusMessage = message;
+  }
+
+  public void setStatus(StatusCode code, String message) {
+    this.statusCode = code;
+    this.statusMessage = message;
+  }
+
+  public List<RealizationResult> getMemberStatuses() {
+    return memberStatuses;
+  }
+
+  public String getStatusMessage() {
+    return statusMessage;
+  }
+
+  @JsonIgnore
+  public boolean isSuccessful() {
+    return statusCode == StatusCode.OK;
+  }
+
+  public StatusCode getStatusCode() {
+    return statusCode;
