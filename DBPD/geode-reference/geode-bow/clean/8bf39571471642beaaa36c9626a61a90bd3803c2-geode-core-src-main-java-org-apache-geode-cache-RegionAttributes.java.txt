Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-/** Defines attributes for configuring a region.
- * These are <code>EvictionAttributes</code>,
- * <code>CacheListener</code>, <code>CacheLoader</code>, <code>CacheWriter</code>,
- * scope, data policy, and expiration attributes
- * for the region itself, expiration attributes for the region entries,
- * and whether statistics are enabled for the region and its entries.
+/**
+ * Defines attributes for configuring a region. These are <code>EvictionAttributes</code>,
+ * <code>CacheListener</code>, <code>CacheLoader</code>, <code>CacheWriter</code>, scope, data
+ * policy, and expiration attributes for the region itself, expiration attributes for the region
+ * entries, and whether statistics are enabled for the region and its entries.
- * <p>Note that the <code>RegionAttributes</code> are not distributed with the region.
+ * <p>
+ * Note that the <code>RegionAttributes</code> are not distributed with the region.
-public interface RegionAttributes<K,V> {
+public interface RegionAttributes<K, V> {
-  /** Returns the cache loader associated with this region.
+  /**
+   * Returns the cache loader associated with this region.
+   * 
-  public CacheLoader<K,V> getCacheLoader();
+  public CacheLoader<K, V> getCacheLoader();
-  /** Returns the cache writer associated with this region.
+  /**
+   * Returns the cache writer associated with this region.
+   * 
-  public CacheWriter<K,V> getCacheWriter();
+  public CacheWriter<K, V> getCacheWriter();
-  /** Returns the class that the keys in this region are constrained to.
+  /**
+   * Returns the class that the keys in this region are constrained to.
-   * @return the <code>Class</code> the keys must be an
-   * <code>instanceof</code>
+   * @return the <code>Class</code> the keys must be an <code>instanceof</code>
-  /** Returns the class that the values in this region are constrained to.
+  /**
+   * Returns the class that the values in this region are constrained to.
-   * @return the <code>Class</code> the values must be an
-   * <code>instanceof</code>
+   * @return the <code>Class</code> the values must be an <code>instanceof</code>
-  
+
-  /** Gets the <code>timeToLive</code> expiration attributes for the region as a whole.
-   * Default is 0 which indicates that no expiration of this type will happen.
+  /**
+   * Gets the <code>timeToLive</code> expiration attributes for the region as a whole. Default is 0
+   * which indicates that no expiration of this type will happen.
+   * 
-  /** Gets the idleTimeout expiration attributes for the region as a whole.
-   * Default is 0 which indicates that no expiration of this type will happen.
-   * Note that the XML element that corresponds to this method "region-idle-time", does not include "out" in its name.
+  /**
+   * Gets the idleTimeout expiration attributes for the region as a whole. Default is 0 which
+   * indicates that no expiration of this type will happen. Note that the XML element that
+   * corresponds to this method "region-idle-time", does not include "out" in its name.
-  /** Gets the <code>timeToLive</code> expiration attributes for entries in this region.
-   * Default is 0 which indicates that no expiration of this type is set.
+  /**
+   * Gets the <code>timeToLive</code> expiration attributes for entries in this region. Default is 0
+   * which indicates that no expiration of this type is set.
+   * 
-  /** Gets the <code>idleTimeout</code> expiration attributes for entries in this region.
-   * Default is 0 which indicates that no expiration of this type is set.
-   * Note that the XML element that corresponds to this method "entry-idle-time", does not include "out" in its name.
+  /**
+   * Gets the <code>idleTimeout</code> expiration attributes for entries in this region. Default is
+   * 0 which indicates that no expiration of this type is set. Note that the XML element that
+   * corresponds to this method "entry-idle-time", does not include "out" in its name.
+   * 
-  /** Gets the <code>entryTimeToLive</code> <code>CustomExpiry</code>, if any 
-   * for entries in this region
+  /**
+   * Gets the <code>entryTimeToLive</code> <code>CustomExpiry</code>, if any for entries in this
+   * region
+   * 
-  public CustomExpiry<K,V> getCustomEntryTimeToLive();
-  
-  /** Gets the <code>idleTimeout</code> <code>CustomExpiry</code>, if any 
-   * for entries in this region
-   * @return the idleTimeout CustomExpiry for entries in this region
-   */
-  public CustomExpiry<K,V> getCustomEntryIdleTimeout();
+  public CustomExpiry<K, V> getCustomEntryTimeToLive();
-   * Gets the flag telling a region to ignore JTA transactions.
-   * Default value is set to false.
+   * Gets the <code>idleTimeout</code> <code>CustomExpiry</code>, if any for entries in this region
+   * 
+   * @return the idleTimeout CustomExpiry for entries in this region
+   */
+  public CustomExpiry<K, V> getCustomEntryIdleTimeout();
+
+  /**
+   * Gets the flag telling a region to ignore JTA transactions. Default value is set to false.
+   * 
-  /** Returns the type of mirroring for this region.
+  /**
+   * Returns the type of mirroring for this region.
-  /** Returns the data policy for this region.
-   * Default value of DataPolicy is set to 'Normal'. Please refer the gemfire documentation for more details on this.
+  /**
+   * Returns the data policy for this region. Default value of DataPolicy is set to 'Normal'. Please
+   * refer the gemfire documentation for more details on this.
-  /** Returns the scope of the region.
-   *  Default scope is DISTRIBUTED_NO_ACK. Please refer the gemfire documentation for more details on this.
+  /**
+   * Returns the scope of the region. Default scope is DISTRIBUTED_NO_ACK. Please refer the gemfire
+   * documentation for more details on this.
+   * 
- /**
-   * Attributes that control the size of the <code>Region</code> using an
-   * {@link EvictionAlgorithm} and a {@link EvictionAction}.
+  /**
+   * Attributes that control the size of the <code>Region</code> using an {@link EvictionAlgorithm}
+   * and a {@link EvictionAction}.
+   * 
-  /** Returns the cache listener for the region.
+  /**
+   * Returns the cache listener for the region.
+   * 
-  public CacheListener<K,V> getCacheListener();
+  public CacheListener<K, V> getCacheListener();
-  /** Returns an array of all the cache listeners on this attributes.
-   * Modifications to the returned array will not effect the attributes.
+  /**
+   * Returns an array of all the cache listeners on this attributes. Modifications to the returned
+   * array will not effect the attributes.
+   * 
-  public CacheListener<K,V>[] getCacheListeners();
+  public CacheListener<K, V>[] getCacheListeners();
-  /** Returns the initial capacity of the entries map.
-   * Default is 16.
+  /**
+   * Returns the initial capacity of the entries map. Default is 16.
+   * 
-  /** Returns the load factor of the entries map.
-   * Default is 0.75.
+  /**
+   * Returns the load factor of the entries map. Default is 0.75.
+   * 
-   * Returns true if this member is configured to be lock grantor for the
-   * region. Result will always be false if the scope is not
-   * <code>Scope.GLOBAL</code>.
+   * Returns true if this member is configured to be lock grantor for the region. Result will always
+   * be false if the scope is not <code>Scope.GLOBAL</code>.
-   * This attribute does not indicate whether or not this member is currently
-   * lock grantor. It only indicates that at the time of region creation, this
-   * member should attempt to become lock grantor.
-   * Default value is false.
+   * This attribute does not indicate whether or not this member is currently lock grantor. It only
+   * indicates that at the time of region creation, this member should attempt to become lock
+   * grantor. Default value is false.
-   * Returns true if multicast communications are enabled for this region.
-   * Multicast must also be enabled in the DistributedSystem.
-   * Default value is set to false.
+   * Returns true if multicast communications are enabled for this region. Multicast must also be
+   * enabled in the DistributedSystem. Default value is set to false.
-   * @return true if this region is configured to allow use of multicast
-   * for distributed messaging
+   * @return true if this region is configured to allow use of multicast for distributed messaging
-  /** Returns the concurrencyLevel of the entries map.
-   * Default is 16.
+  /**
+   * Returns the concurrencyLevel of the entries map. Default is 16.
+   * 
-   * Returns whether or not a persistent backup should be made of the
-   * region (as opposed to just writing the overflow data to disk).
+   * Returns whether or not a persistent backup should be made of the region (as opposed to just
+   * writing the overflow data to disk).
-   * Returns the <code>DiskWriteAttributes</code> that configure how
-   * the region is written to disk.
+   * Returns the <code>DiskWriteAttributes</code> that configure how the region is written to disk.
-   * Returns the directories to which the region's data are written.  If
-   * multiple directories are used, GemFire will attempt to distribute the
-   * data evenly amongst them.
+   * Returns the directories to which the region's data are written. If multiple directories are
+   * used, GemFire will attempt to distribute the data evenly amongst them.
-   * Returns the value of <code>IndexMaintenanceSynchronous</code> which
-   * specifies whether the region indexes are updated synchronously when a
-   * region is modified or asynchronously in a background thread. 
-   * Default value is true.
+   * Returns the value of <code>IndexMaintenanceSynchronous</code> which specifies whether the
+   * region indexes are updated synchronously when a region is modified or asynchronously in a
+   * background thread. Default value is true.
-   * Returns the <code>PartitionAttributes</code> that configure how
-   * the region is partitioned.
+   * Returns the <code>PartitionAttributes</code> that configure how the region is partitioned.
-   * Returns the <code>MembershipAttributes</code> that configure required
-   * roles for reliable access to the region.
+   * Returns the <code>MembershipAttributes</code> that configure required roles for reliable access
+   * to the region.
-   * Returns the <code>SubscriptionAttributes</code> that configure
-   * how this region behaves as a subscriber to remote caches.
+   * Returns the <code>SubscriptionAttributes</code> that configure how this region behaves as a
+   * subscriber to remote caches.
-  /** Returns whether the statistics are enabled for this region and its
-   * entries.
-   * Default is false.
+  /**
+   * Returns whether the statistics are enabled for this region and its entries. Default is false.
+   * 
-   * @return True if acks are sent after updates are processed;
-   *         false if acks are sent before updates are processed.
+   * 
+   * @return True if acks are sent after updates are processed; false if acks are sent before
+   *         updates are processed.
-   * Returns whether or not this region is a publisher. Publishers are regions
-   * on which distributed write operations are done.
-   * @return True if a publisher;
-   *         false if not (default).
+   * Returns whether or not this region is a publisher. Publishers are regions on which distributed
+   * write operations are done.
+   * 
+   * @return True if a publisher; false if not (default).
-   * Returns whether or not conflation is enabled for sending
-   * messages from a cache server to its clients.
+   * Returns whether or not conflation is enabled for sending messages from a cache server to its
+   * clients.
-   * Note: This parameter is only valid for cache server to client
-   * communication. It has no effect in peer to peer communication.
+   * Note: This parameter is only valid for cache server to client communication. It has no effect
+   * in peer to peer communication.
-   * @deprecated as of GemFire 5.0, use {@link #getEnableSubscriptionConflation} instead
-   #
-   * @return True if conflation is enabled;
-   *         false conflation is not enabled (default).
+   * @deprecated as of GemFire 5.0, use {@link #getEnableSubscriptionConflation} instead #
+   * @return True if conflation is enabled; false conflation is not enabled (default).
-   * Returns whether or not conflation is enabled for sending
-   * messages from a cache server to its clients.
+   * Returns whether or not conflation is enabled for sending messages from a cache server to its
+   * clients.
-   * Note: This parameter is only valid for cache server to client
-   * communication. It has no effect in peer to peer communication.
+   * Note: This parameter is only valid for cache server to client communication. It has no effect
+   * in peer to peer communication.
-   * @return True if conflation is enabled;
-   *         false conflation is not enabled (default).
+   * @return True if conflation is enabled; false conflation is not enabled (default).
-   * Returns whether or not conflation is enabled for sending
-   * messages from a cache server to its clients.
+   * Returns whether or not conflation is enabled for sending messages from a cache server to its
+   * clients.
-   * Note: This parameter is only valid for cache server to client
-   * communication. It has no effect in peer to peer communication.
+   * Note: This parameter is only valid for cache server to client communication. It has no effect
+   * in peer to peer communication.
-   * @return True if conflation is enabled;
-   *         false conflation is not enabled (default).
+   * @return True if conflation is enabled; false conflation is not enabled (default).
+
-   * Returns whether or not async conflation is enabled for sending
-   * messages to async peers.
+   * Returns whether or not async conflation is enabled for sending messages to async peers.
-   * @return True if async conflation is enabled;
-   *         false async conflation is not enabled (default).
+   * @return True if async conflation is enabled; false async conflation is not enabled (default).
+   * 
-  
-  
+
+
-   * Returns the name of the {@link Pool} that this region
-   * will use to communicate with servers, if any.
-   * Returns <code>null</code> if this region communicates with peers.
-   * @return the name of the client-server {@link Pool}
-   * this region will use for server communication; <code>null</code> is returned if
-   * the region communicates with peers.
+   * Returns the name of the {@link Pool} that this region will use to communicate with servers, if
+   * any. Returns <code>null</code> if this region communicates with peers.
+   * 
+   * @return the name of the client-server {@link Pool} this region will use for server
+   *         communication; <code>null</code> is returned if the region communicates with peers.
-  
+
-   * Returns whether or not cloning is enabled on region.
-   * Default is false.
+   * Returns whether or not cloning is enabled on region. Default is false.
-   * @return True if cloning is enabled;
-   *         false cloning is not enabled (default).
+   * @return True if cloning is enabled; false cloning is not enabled (default).
-   * Returns the name of the {@link DiskStore} that this region belongs
-   * to, if any.
-   * Returns <code>null</code> if this region belongs to default {@link DiskStore}.
-   * @return the name of the {@link DiskStore} of this region; 
-   * <code>null</code> is returned if this region belongs to default 
-   * {@link DiskStore}.
+   * Returns the name of the {@link DiskStore} that this region belongs to, if any. Returns
+   * <code>null</code> if this region belongs to default {@link DiskStore}.
+   * 
+   * @return the name of the {@link DiskStore} of this region; <code>null</code> is returned if this
+   *         region belongs to default {@link DiskStore}.
-  
+
-   * Returns true if configured synchronous disk writes.
-   * Default is set to true.
+   * Returns true if configured synchronous disk writes. Default is set to true.
-  
+
-  
+
-  
+
-   * When this is enabled, concurrent updates will be conflated if they are
-   * applied out of order.
+   * When this is enabled, concurrent updates will be conflated if they are applied out of order.
-  
+
+   * 
-   * @return True if a usage of off-heap memory is enabled;
-   *         false if usage of off-heap memory is disabled (default).
+   * 
+   * @return True if a usage of off-heap memory is enabled; false if usage of off-heap memory is
+   *         disabled (default).
-
