GEODE-3948 Improve CQ performance under flaky network conditions

This adds a new PoolFactory setting allowing subscription connections to
time out and initiate failover to a backup server. The new setting is
setSubscriptionTimeoutMultiplier:

A server has an inactivity monitor that ensures a message is sent to a client at least once a
minute (60,000 milliseconds). If a subscription timeout multipler is set in the client it
enables timing out of the subscription feed with failover to another server.

A value of zero (the default) disables timeouts

A value of one will time out the server connection after one of its ping intervals (not
recommended)

A value of two or more will time out the server connection after that many ping intervals have
elapsed

The client/server handshake is modified for clients having version 1.5 or
later. The server sends its ping-interval setting to the client. The client
then uses this and the multiplier to establish a read-timeout in the
CacheClientUpdater subscription processor.

Two tests are added to ensure that 1) the Message method that allows a
read to timeout functions correctly and 2) the CacheClientUpdater
correctly receives the multiplier setting.

This closes #1364

+  /**
+   * interval that server sends pings if connection is idle. This is only known for
+   * CacheClientUpdater subscription feed status objects
+   */
+  private final int pingInterval;
-   * Default constructor Called when connectionsPerServer=0
+   * Constructor Called when connectionsPerServer is nto equal to 0
+   *
-  public ServerQueueStatus(DistributedMember memberId) {
-    this((byte) 0, 0, memberId);
+  public ServerQueueStatus(byte endpointType, int queueSize, DistributedMember memberId,
+      int pingInterval) {
+    this.qSize = queueSize;
+    this.endpointType = endpointType;
+    this.memberId = memberId;
+    this.pingInterval = pingInterval;
-   * @param endpointType
-   * @param queueSize
-
+    this.pingInterval = -1;
+  /** returns the time between server-to-client ping messages on idle subscription connections */
+  public int getPingInterval() {
+    if (this.pingInterval < 0) {
+      throw new IllegalStateException(
+          "ping interval is only known for a subscription feed connection");
+    }
+    return this.pingInterval;
+  }
+
-        .append("; endpointType=").append(getTypeAsString()).append("]");
+        .append("; endpointType=").append(getTypeAsString()).append("; pingInterval=")
+        .append(this.pingInterval).append("ms]");
