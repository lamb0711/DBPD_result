GEODE-2400: use a function to implement waitUntilFlushed, then accessor and client
can have this feature.

+import java.util.concurrent.TimeUnit;
+import org.apache.geode.cache.execute.Execution;
+import org.apache.geode.cache.execute.ResultCollector;
+import org.apache.geode.cache.lucene.internal.distributed.WaitUntilFlushedFunction;
+import org.apache.geode.cache.lucene.internal.distributed.WaitUntilFlushedFunctionContext;
+    FunctionService.registerFunction(new WaitUntilFlushedFunction());
+
+    DSFIDFactory.registerDSFID(DataSerializableFixedID.WAIT_UNTIL_FLUSHED_FUNCTION_CONTEXT,
+        WaitUntilFlushedFunctionContext.class);
+
+  public boolean waitUntilFlushed(String indexName, String regionPath, long timeout, TimeUnit unit)
+      throws InterruptedException {
+    Region dataRegion = this.cache.getRegion(regionPath);
+    if (dataRegion == null) {
+      logger.info("Data region " + regionPath + " not found");
+      return false;
+    }
+
+    WaitUntilFlushedFunctionContext context =
+        new WaitUntilFlushedFunctionContext(indexName, timeout, unit);
+    Execution execution = FunctionService.onRegion(dataRegion);
+    ResultCollector rs = execution.withArgs(context).execute(WaitUntilFlushedFunction.ID);
+    List<Boolean> results = (List<Boolean>) rs.getResult();
+    for (Boolean oneResult : results) {
+      if (oneResult == false) {
+        return false;
+      }
+    }
+    return true;
+  }
