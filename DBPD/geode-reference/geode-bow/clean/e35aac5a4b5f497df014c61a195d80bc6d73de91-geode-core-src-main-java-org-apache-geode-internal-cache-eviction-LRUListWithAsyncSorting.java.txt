Merge branch 'release/1.5.0'

-  private static final int MAX_EVICTION_ATTEMPTS = 10;
+  private static final int DEFAULT_MAX_EVICTION_ATTEMPTS = 10;
+  private final int maxEvictionAttempts;
-  LRUListWithAsyncSorting(InternalEvictionStatistics stats, BucketRegion region) {
-    this(stats, region, SINGLETON_EXECUTOR);
-    logger.info("Using experimental LRUListWithAsyncSorting");
+  LRUListWithAsyncSorting(EvictionController controller) {
+    this(controller, SINGLETON_EXECUTOR, DEFAULT_MAX_EVICTION_ATTEMPTS);
-  LRUListWithAsyncSorting(InternalEvictionStatistics stats, BucketRegion region,
-      ExecutorService executor) {
-    super(stats, region);
+  LRUListWithAsyncSorting(EvictionController controller, ExecutorService executor,
+      int maxEvictionAttempts) {
+    super(controller);
+    this.maxEvictionAttempts = maxEvictionAttempts;
-  public void clear(RegionVersionVector regionVersionVector) {
-    super.clear(regionVersionVector);
+  public void clear(RegionVersionVector regionVersionVector, BucketRegion bucketRegion) {
+    super.clear(regionVersionVector, bucketRegion);
-      if (evictionNode.isRecentlyUsed() && evictionAttempts < MAX_EVICTION_ATTEMPTS) {
+      if (evictionNode.isRecentlyUsed() && evictionAttempts < maxEvictionAttempts) {
-        stats.incGreedyReturns(1);
+        getStatistics().incGreedyReturns(1);
-    return size() > 0 && (double) recentlyUsedCount / size() >= this.scanThreshold;
+    return size() >= maxEvictionAttempts
+        && (double) recentlyUsedCount / size() >= this.scanThreshold;
