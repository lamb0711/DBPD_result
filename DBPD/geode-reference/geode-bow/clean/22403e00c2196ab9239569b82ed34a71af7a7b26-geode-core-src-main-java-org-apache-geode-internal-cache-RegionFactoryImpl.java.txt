GEODE-7799: Distribute rebalance status to other locators (#4692)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>

+import java.io.IOException;
+
+import org.apache.geode.InternalGemFireError;
+import org.apache.geode.cache.CacheExistsException;
+import org.apache.geode.cache.CacheWriterException;
+import org.apache.geode.cache.Region;
+import org.apache.geode.cache.RegionExistsException;
+import org.apache.geode.cache.TimeoutException;
+  private InternalRegionArguments internalRegionArguments;
+
-  public RegionFactoryImpl(InternalCache cache, RegionAttributes ra) {
+  public RegionFactoryImpl(InternalCache cache, RegionAttributes<K, V> ra) {
+
+  public void setInternalRegionArguments(
+      InternalRegionArguments internalRegionArguments) {
+    this.internalRegionArguments = internalRegionArguments;
+  }
+
+  @Override
+  public Region<K, V> create(String name)
+      throws CacheExistsException, RegionExistsException, CacheWriterException, TimeoutException {
+    if (internalRegionArguments == null) {
+      return super.create(name);
+    }
+    try {
+      return getCache().createVMRegion(name, getRegionAttributes(), internalRegionArguments);
+    } catch (IOException | ClassNotFoundException e) {
+      throw new InternalGemFireError("unexpected exception", e);
+    }
+  }
