Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//import java.util.*;
+// import java.util.*;
- * An index that is built over the data stored in a GemFire {@link
- * Region}.
+ * An index that is built over the data stored in a GemFire {@link Region}.
- * For a description of the types of indexes that GemFire currently supports,
- * see {@linkplain IndexType}.
+ * For a description of the types of indexes that GemFire currently supports, see
+ * {@linkplain IndexType}.
- * An index is specified using a name, indexedExpression, fromClause, and
- * optionally a projectionAttributes.
+ * An index is specified using a name, indexedExpression, fromClause, and optionally a
+ * projectionAttributes.
- * The indexedExpression is the lookup value for the index. The way that an
- * indexedExpression is specified and used varies depending on the type of
- * index. For more information, see {@linkplain IndexType}.
+ * The indexedExpression is the lookup value for the index. The way that an indexedExpression is
+ * specified and used varies depending on the type of index. For more information, see
+ * {@linkplain IndexType}.
- * The fromClause specifies the collection(s) of objects that the index ranges
- * over, and must contain one and only one region path.
+ * The fromClause specifies the collection(s) of objects that the index ranges over, and must
+ * contain one and only one region path.
- * The optional projectAttributes specifies a tranformation that is done on
- * the values and is used for pre-computing a corresponding projection as
- * defined in a query.
+ * The optional projectAttributes specifies a tranformation that is done on the values and is used
+ * for pre-computing a corresponding projection as defined in a query.
+   * 
-      
+
+   * 
-  public Region<?,?> getRegion();
-  
+  public Region<?, ?> getRegion();
+
-   * @throws UnsupportedOperationException
-   *           for indexes created on Maps. Example: Index on Maps with
-   *           expression p['key']. <br>
-   *           On Map type indexes the stats are created at individual key level
-   *           that can be viewed in VSD stats.
+   * @throws UnsupportedOperationException for indexes created on Maps. Example: Index on Maps with
+   *         expression p['key']. <br>
+   *         On Map type indexes the stats are created at individual key level that can be viewed in
+   *         VSD stats.
-  
+
+
-  
+
-  
-    /**
+
+  /**
+
-   * @return the projectionAttributes, or "*" if there were none
-   * specified at index creation.
+   * 
+   * @return the projectionAttributes, or "*" if there were none specified at index creation.
+
-   * @return the projectionAttributes, or "*" if there were none
-   * specified at index creation.
+   * 
+   * @return the projectionAttributes, or "*" if there were none specified at index creation.
