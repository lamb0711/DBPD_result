GEODE-5010: Introduce *ResultModel objects to replace *ResultData (#1870)


- The changes here are intended to allow for support of both the old and new
  model for producing results. As such the interface structures are a mess but
  will be cleaned up once all commands have been converted.
- Not all types of return values are supported but will be added as commands
  are converted. In particular commands that return actual result data in the
  form of files or file content.
- Sub-sections are not supported anymore.
- All commands should now return a ResultModel object

-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.model.TabularResultModel;
-  public Result execute(@CliOption(key = ID, mandatory = true, help = ID_HELP) String id,
+  public ResultModel execute(@CliOption(key = ID, mandatory = true, help = ID_HELP) String id,
+    ResultModel result = new ResultModel();
+
-      return ResultBuilder.createUserErrorResult("Cluster Configuration Service is not available. "
+      return result.createError("Cluster Configuration Service is not available. "
-      return ResultBuilder.createGemFireErrorResult("Unable to lock the cluster configuration.");
+      return result.createCommandProcessingError("Unable to lock the cluster configuration.");
-    TabularResultData tableData = ResultBuilder.createTabularResultData();
+    TabularResultModel tableData = result.addTable();
+    boolean xmlUpdated = false;
-        boolean xmlUpdated = false;
-    if (tableData.rowSize("Group") == 0) {
+    if (!xmlUpdated) {
-    return ResultBuilder.buildResult(tableData);
+
+    return result;
-    public Result preExecution(GfshParseResult parseResult) {
+    public ResultModel preExecution(GfshParseResult parseResult) {
+      ResultModel resultModel = new ResultModel();
-        return ResultBuilder
-            .createUserErrorResult("need to specify at least one option to modify.");
+        resultModel.createError("need to specify at least one option to modify.");
-      return ResultBuilder.createInfoResult("");
+      return resultModel;
