GEODE-5935: move jdbc xml mapping to be in a region  (#2739)

The jdbc region-mapping xml element is now jdbc:mapping.
It no longer has a "region" attribute since it is nested in a region.
Creating a jdbc-mapping requires that the region already exists.
The jdbc:mapping element is now nested in a region element instead of the cache element.
The old connector-service element has been completely removed.
Some of the jdbc-mapping gfsh commands now require at least one server to be running.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen21@apache.org>
Co-authored-by: Ben Ross @BenjaminPerryRoss 

-import java.util.ArrayList;
-import java.util.List;
-
+import org.apache.geode.cache.Region;
-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
+import org.apache.geode.internal.cache.extension.ExtensionPoint;
-public class JdbcServiceConfiguration implements Extension<Cache> {
+public class RegionMappingConfiguration implements Extension<Region<?, ?>> {
-  private final List<ConnectorService.RegionMapping> mappings = new ArrayList<>();
+  private final RegionMapping mapping;
-  void addRegionMapping(ConnectorService.RegionMapping mapping) {
-    mappings.add(mapping);
+  public RegionMappingConfiguration(RegionMapping mapping) {
+    this.mapping = mapping;
-  public XmlGenerator<Cache> getXmlGenerator() {
+  public XmlGenerator<Region<?, ?>> getXmlGenerator() {
-  public void beforeCreate(Extensible<Cache> source, Cache cache) {
+  public void beforeCreate(Extensible<Region<?, ?>> source, Cache cache) {
-  public void onCreate(Extensible<Cache> source, Extensible<Cache> target) {
-    InternalCache internalCache = (InternalCache) target;
+  public void onCreate(Extensible<Region<?, ?>> source, Extensible<Region<?, ?>> target) {
+    final ExtensionPoint<Region<?, ?>> extensionPoint = target.getExtensionPoint();
+    final Region<?, ?> region = extensionPoint.getTarget();
+    InternalCache internalCache = (InternalCache) region.getRegionService();
-    mappings.forEach(mapping -> createRegionMapping(service, mapping));
+    createRegionMapping(service, mapping);
-      ConnectorService.RegionMapping regionMapping) {
+      RegionMapping regionMapping) {
