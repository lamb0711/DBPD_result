GEODE-2996: incorporating review feedback and adding integration test

Addresses review feedback for GEODE-2996, mainly refactoring getOpertionHandler to handle failures like the putOperationHandler
Adding put operations to the RoundTripCacheConnectionJUnitTest, which is the integration test for the protobuf module
Removing service loading for protobuf operations and instead have the ProtobufStreamProcessor populate its OperationHandlerRegistry
Remove exception throwing from OperationHandler.process calls and remove TypeEncodingException

Signed-off-by: Brian Rowe <browe@pivotal.io>
Signed-off-by: Alexander Murmann <amurmann@pivotal.io>

This closes #605

-import org.apache.geode.protocol.protobuf.ClientProtocol;
-import org.apache.geode.serialization.exception.TypeEncodingException;
-      RegionAPI.GetRequest request, Cache cache) throws TypeEncodingException {
+      RegionAPI.GetRequest request, Cache cache) {
-    BasicTypes.EncodedValue key = request.getKey();
-    BasicTypes.EncodingType encodingType = key.getEncodingType();
-    byte[] value = key.getValue().toByteArray();
-    Object decodedValue = serializationService.decode(encodingType, value);
+    try {
+      Object decodedKey = ProtobufUtilities.decodeValue(serializationService, request.getKey());
-    Region region = cache.getRegion(regionName);
-    Object resultValue = region.get(decodedValue);
-    return buildGetResponse(serializationService, resultValue);
+      Region region = cache.getRegion(regionName);
+
+      if (region == null) {
+        return buildGetResponseFailure();
+      }
+
+      Object resultValue = region.get(decodedKey);
+
+      if (resultValue == null) {
+        return buildGetResponseKeyNotFound();
+      }
+
+      return buildGetResponseSuccess(serializationService, resultValue);
+    } catch (UnsupportedEncodingTypeException ex) {
+      // can be thrown by encoding or decoding.
+      cache.getLogger().error("encoding not supported ", ex);
+    } catch (CodecNotRegisteredForTypeException ex) {
+      cache.getLogger().error("codec error in protobuf deserialization ", ex);
+    }
+    return buildGetResponseFailure();
-  @Override
-  public int getOperationCode() {
-    return ClientProtocol.Request.RequestAPICase.GETREQUEST.getNumber();
+  private RegionAPI.GetResponse buildGetResponseKeyNotFound() {
+    return RegionAPI.GetResponse.newBuilder().setSuccess(true).setKeyExists(false).build();
-  private RegionAPI.GetResponse buildGetResponse(SerializationService serializationService,
-      Object resultValue) throws TypeEncodingException {
+  private RegionAPI.GetResponse buildGetResponseFailure() {
+    return RegionAPI.GetResponse.newBuilder().setSuccess(false).build();
+  }
+
+  // throws if the object in the cache is not of a class that be serialized via the protobuf
+  // protocol.
+  private RegionAPI.GetResponse buildGetResponseSuccess(SerializationService serializationService,
+      Object resultValue)
+      throws UnsupportedEncodingTypeException, CodecNotRegisteredForTypeException {
-    return RegionAPI.GetResponse.newBuilder()
+    return RegionAPI.GetResponse.newBuilder().setSuccess(true).setKeyExists(true)
