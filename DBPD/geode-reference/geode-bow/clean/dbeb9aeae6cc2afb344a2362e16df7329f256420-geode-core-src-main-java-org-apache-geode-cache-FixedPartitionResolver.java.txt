Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Implementers of interface <code>FixedPartitionResolver</code> helps to
- * achieve explicit mapping of a "user defined" partition to a data member node.
+ * Implementers of interface <code>FixedPartitionResolver</code> helps to achieve explicit mapping
+ * of a "user defined" partition to a data member node.
- * GemFire uses the partition name returned by {@link FixedPartitionResolver#getPartitionName(EntryOperation, Set)} to determine on
- * which member the data is being managed. Say, for example, you want to
- * partition all Trades according to quarters. You can implement
- * FixedPartitionResolver to get the name of the quarter based on the date given
- * as part of {@link org.apache.geode.cache.EntryOperation}.
+ * GemFire uses the partition name returned by
+ * {@link FixedPartitionResolver#getPartitionName(EntryOperation, Set)} to determine on which member
+ * the data is being managed. Say, for example, you want to partition all Trades according to
+ * quarters. You can implement FixedPartitionResolver to get the name of the quarter based on the
+ * date given as part of {@link org.apache.geode.cache.EntryOperation}.
- * &nbsp &nbsp public String getPartitionName(EntryOperation opDetails, Set
- * allAvailablePartitions) {<br>
+ * &nbsp &nbsp public String getPartitionName(EntryOperation opDetails, Set allAvailablePartitions)
+ * {<br>
-   * This method is used to get the name of the partition for the given entry
-   * operation.
+   * This method is used to get the name of the partition for the given entry operation.
-   * @param opDetails
-   *          the details of the entry operation e.g. {@link Region#get(Object)}
-   * @param targetPartitions
-   *           Avoid using this parameter.This set is deprecated from 8.0 and same will be removed in future release.
-   *           Represents all the available primary partitions on the nodes.
+   * @param opDetails the details of the entry operation e.g. {@link Region#get(Object)}
+   * @param targetPartitions Avoid using this parameter.This set is deprecated from 8.0 and same
+   *        will be removed in future release. Represents all the available primary partitions on
+   *        the nodes.
-   * @return partition-name associated with node which allows mapping of given
-   *         data to user defined partition
+   * @return partition-name associated with node which allows mapping of given data to user defined
+   *         partition
