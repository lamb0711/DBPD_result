GEODE-5971: refactor ExportLogsCommand and ExecuteScriptCommand to usâ€¦ (#3285)


-import org.apache.geode.management.internal.cli.result.CommandResult;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-  public Result preExecution(GfshParseResult parseResult) {
+  public ResultModel preExecution(GfshParseResult parseResult) {
-      return ResultBuilder.createUserErrorResult("Can't specify both group and member.");
+      return ResultModel.createError("Can't specify both group and member.");
-      return ResultBuilder.createUserErrorResult("Invalid log level: " + logLevel);
+      return ResultModel.createError("Invalid log level: " + logLevel);
-        return ResultBuilder.createUserErrorResult("start-time has to be earlier than end-time.");
+        return ResultModel.createError("start-time has to be earlier than end-time.");
-      return ResultBuilder.createUserErrorResult("logs-only and stats-only can't both be true");
+      return ResultModel.createError("logs-only and stats-only can't both be true");
-    return ResultBuilder.createInfoResult("");
+    return ResultModel.createInfo("");
-  public CommandResult postExecution(GfshParseResult parseResult, CommandResult commandResult,
+  public ResultModel postExecution(GfshParseResult parseResult, ResultModel commandResult,
-    // in the command over http case, the command result is in the downloaded temp file
+      // in the command over http case, the command result is in the downloaded temp file
-        commandResult = (CommandResult) ResultBuilder
-            .createInfoResult("Logs exported to: " + exportedLogFile.getAbsolutePath());
+        return ResultModel.createInfo("Logs exported to: " + exportedLogFile.getAbsolutePath());
-        commandResult = ResultBuilder.createGemFireErrorResult(e.getMessage());
+        return ResultModel.createError(e.getMessage());
-    } else if (commandResult.getStatus() == Result.Status.OK) {
-      commandResult = (CommandResult) ResultBuilder.createInfoResult(
-          "Logs exported to the connected member's file system: " + commandResult.nextLine());
-    return commandResult;
+
+    // otherwise if result status is false, return it
+    if (commandResult.getStatus() != Result.Status.OK) {
+      return commandResult;
+    }
+
+    // if there is no downloaded file. File is saved on the locator/manager.
+    return ResultModel.createInfo(
+        "Logs exported to the connected member's file system: "
+            + commandResult.getFileToDownload().toString());
