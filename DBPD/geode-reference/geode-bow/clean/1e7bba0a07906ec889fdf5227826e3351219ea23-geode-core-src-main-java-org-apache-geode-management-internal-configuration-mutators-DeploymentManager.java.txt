GEODE-7398 :show deployer and deploy time (#4509)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

+import static java.util.Collections.emptyList;
+import static java.util.stream.Collectors.toList;
+
-import java.util.stream.Collectors;
-import java.util.stream.Stream;
+import java.util.function.Predicate;
-  public List<Deployment> list(Deployment filterConfig, String groupName) {
-    Configuration existing = persistenceService.getConfiguration(groupName);
-    Stream<String> stream = existing.getJarNames().stream();
-    if (filterConfig.getJarFileName() != null) {
-      stream = stream.filter(x -> x.equals(filterConfig.getJarFileName()));
+  public List<Deployment> list(Deployment filter, String groupName) {
+    Configuration configuration = persistenceService.getConfiguration(groupName);
+    if (configuration == null) {
+      return emptyList();
-    return stream.map(jar -> {
-      Deployment deployment = new Deployment();
-      deployment.setJarFileName(jar);
-      return deployment;
-    }).collect(Collectors.toList());
+
+    return configuration.getDeployments().stream()
+        .filter(deploymentsForJarName(filter.getJarFileName()))
+        .collect(toList());
+  }
+
+  private static Predicate<Deployment> deploymentsForJarName(String jarFileName) {
+    return jarFileName == null ? d -> true : d -> d.getJarFileName().equals(jarFileName);
