GEODE-6945:geode-managment should create its own set of configurationâ€¦ (#3928)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>

* do not use xml domain object for region configuration
* add RegionType.UNSUPPORTED

-import java.util.Objects;
-import org.apache.geode.management.api.CorrespondWith;
-import org.apache.geode.management.api.RestfulEndpoint;
-import org.apache.geode.management.runtime.RuntimeRegionInfo;
-public class RegionConfig extends CacheElement implements RestfulEndpoint,
-    CorrespondWith<RuntimeRegionInfo> {
+public class RegionConfig implements Identifiable<String>, Serializable {
-  public RegionConfig(RegionConfig config) {
-    this.regionAttributes = config.getRegionAttributes();
-    this.type = config.getType();
-    this.entries = config.getEntries();
-    this.indexes = config.getIndexes();
-    this.name = config.getName();
-    this.regionElements = config.getCustomRegionElements();
-    this.regions = config.getRegions();
-    this.setGroup(config.getGroup());
-  }
-
-  @Override
-  public boolean isGlobalRuntime() {
-    return true;
-  }
-
-  @Override
-  @JsonIgnore
-  public String getEndpoint() {
-    return REGION_CONFIG_ENDPOINT;
-  }
-
-    boolean regionPrefixedWithSlash = value.startsWith("/");
-    String[] regionSplit = value.split("/");
-
-    boolean hasSubRegions =
-        regionPrefixedWithSlash ? regionSplit.length > 2 : regionSplit.length > 1;
-    if (hasSubRegions) {
-      throw new IllegalArgumentException("Sub-regions are unsupported");
-    }
-
-    this.name = regionPrefixedWithSlash ? regionSplit[1] : value;
+    this.name = value.startsWith("/") ? value.substring(1) : value;
-  @Override
-  public boolean equals(Object that) {
-    if (this == that) {
-      return true;
-    }
-    if (that == null || getClass() != that.getClass()) {
-      return false;
-    }
-    RegionConfig config = (RegionConfig) that;
-    return Objects.equals(getName(), config.getName()) &&
-        Objects.equals(getType(), config.getType());
-  }
-
