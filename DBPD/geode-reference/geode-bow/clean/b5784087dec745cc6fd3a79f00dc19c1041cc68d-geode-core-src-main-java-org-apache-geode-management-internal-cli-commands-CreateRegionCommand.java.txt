GEODE-3876: refactor expiry options for create region and alter regioâ€¦ (#1356)

* GEODE-3876: refactor expiry options for create region and alter region command

* add ExpirationActionConverter for client side validation/conversion
* reworked ExpirationAttr
* fix buggy behavior of altering expiration attributes
* add more tests


+import org.apache.geode.cache.ExpirationAction;
-          help = CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION__HELP) String entryExpirationIdleTimeAction,
+          help = CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION__HELP) ExpirationAction entryExpirationIdleTimeAction,
-          help = CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION__HELP) String entryExpirationTTLAction,
+          help = CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION__HELP) ExpirationAction entryExpirationTTLAction,
-          help = CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION__HELP) String regionExpirationIdleTimeAction,
+          help = CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION__HELP) ExpirationAction regionExpirationIdleTimeAction,
-          help = CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION__HELP) String regionExpirationTTLAction,
+          help = CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION__HELP) ExpirationAction regionExpirationTTLAction,
-      String statisticsEnabled =
-          parseResult.getParamValueAsString(CliStrings.CREATE_REGION__STATISTICSENABLED);
-      if (!Boolean.parseBoolean(statisticsEnabled)) {
-        String entryIdle =
-            parseResult.getParamValueAsString(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIME);
-        String entryTtl =
-            parseResult.getParamValueAsString(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTIMETOLIVE);
-        String regionIdle =
-            parseResult.getParamValueAsString(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIME);
-        String regionTtl =
-            parseResult.getParamValueAsString(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTL);
-        if (entryIdle != null || entryTtl != null || regionIdle != null || regionTtl != null) {
-          String message =
-              LocalizedStrings.AttributesFactory_STATISTICS_MUST_BE_ENABLED_FOR_EXPIRATION
-                  .toLocalizedString();
-          return ResultBuilder.createUserErrorResult(message + ".");
-        }
+      // if any expiration value is set, statistics must be enabled
+      Boolean statisticsEnabled =
+          (Boolean) parseResult.getParamValue(CliStrings.CREATE_REGION__STATISTICSENABLED);
+      Integer entryIdle =
+          (Integer) parseResult.getParamValue(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIME);
+      Integer entryTtl =
+          (Integer) parseResult.getParamValue(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTIMETOLIVE);
+      Integer regionIdle =
+          (Integer) parseResult.getParamValue(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIME);
+      Integer regionTtl =
+          (Integer) parseResult.getParamValue(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTL);
+      ExpirationAction entryIdleAction = (ExpirationAction) parseResult
+          .getParamValue(CliStrings.CREATE_REGION__ENTRYEXPIRATIONIDLETIMEACTION);
+      ExpirationAction entryTtlAction = (ExpirationAction) parseResult
+          .getParamValue(CliStrings.CREATE_REGION__ENTRYEXPIRATIONTTLACTION);
+      ExpirationAction regionIdleAction = (ExpirationAction) parseResult
+          .getParamValue(CliStrings.CREATE_REGION__REGIONEXPIRATIONIDLETIMEACTION);
+      ExpirationAction regionTtlAction = (ExpirationAction) parseResult
+          .getParamValue(CliStrings.CREATE_REGION__REGIONEXPIRATIONTTLACTION);
+
+      if ((entryIdle != null || entryTtl != null || regionIdle != null || regionTtl != null
+          || entryIdleAction != null || entryTtlAction != null || regionIdleAction != null
+          || regionTtlAction != null) && (statisticsEnabled == null || !statisticsEnabled)) {
+        String message =
+            LocalizedStrings.AttributesFactory_STATISTICS_MUST_BE_ENABLED_FOR_EXPIRATION
+                .toLocalizedString();
+        return ResultBuilder.createUserErrorResult(message + ".");
+
