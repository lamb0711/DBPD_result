change more string commands to have CommandFunction support (#5184)

* CommandFunction now supports getrange, setrange, bitcount, bitop, bitpos, getbit, setbit, incrbyfloat, mget, and strlen.

Added integration test coverage for untested string commands.

+import static org.apache.geode.redis.internal.RedisCommandType.BITCOUNT;
+import static org.apache.geode.redis.internal.RedisCommandType.BITOP;
+import static org.apache.geode.redis.internal.RedisCommandType.BITPOS;
+import static org.apache.geode.redis.internal.RedisCommandType.GETBIT;
+import static org.apache.geode.redis.internal.RedisCommandType.GETRANGE;
+import static org.apache.geode.redis.internal.RedisCommandType.INCRBYFLOAT;
+import static org.apache.geode.redis.internal.RedisCommandType.MGET;
+import static org.apache.geode.redis.internal.RedisCommandType.SETBIT;
+import static org.apache.geode.redis.internal.RedisCommandType.SETRANGE;
+import static org.apache.geode.redis.internal.RedisCommandType.STRLEN;
+
+import java.util.List;
+
+  @Override
+  public ByteArrayWrapper getrange(ByteArrayWrapper key, long start, long end) {
+    return CommandFunction.execute(GETRANGE, key, new Object[] {start, end}, region);
+  }
+
+  @Override
+  public long bitcount(ByteArrayWrapper key, int start, int end) {
+    return CommandFunction.execute(BITCOUNT, key, new Object[] {start, end}, region);
+  }
+
+  @Override
+  public long bitcount(ByteArrayWrapper key) {
+    return CommandFunction.execute(BITCOUNT, key, null, region);
+  }
+
+  @Override
+  public int strlen(ByteArrayWrapper key) {
+    return CommandFunction.execute(STRLEN, key, null, region);
+  }
+
+  @Override
+  public int getbit(ByteArrayWrapper key, int offset) {
+    return CommandFunction.execute(GETBIT, key, offset, region);
+  }
+
+  @Override
+  public int setbit(ByteArrayWrapper key, long offset, int value) {
+    return CommandFunction.execute(SETBIT, key, new Object[] {offset, value}, region);
+  }
+
+  @Override
+  public double incrbyfloat(ByteArrayWrapper key, double increment) {
+    return CommandFunction.execute(INCRBYFLOAT, key, increment, region);
+  }
+
+  @Override
+  public int bitop(String operation, ByteArrayWrapper destKey, List<ByteArrayWrapper> sources) {
+    return CommandFunction.execute(BITOP, destKey, new Object[] {operation, sources}, region);
+  }
+
+  @Override
+  public int bitpos(ByteArrayWrapper key, int bit, int start, Integer end) {
+    return CommandFunction.execute(BITPOS, key, new Object[] {bit, start, end}, region);
+  }
+
+  @Override
+  public int setrange(ByteArrayWrapper key, int offset, byte[] value) {
+    return CommandFunction.execute(SETRANGE, key, new Object[] {offset, value}, region);
+  }
+
+  @Override
+  public ByteArrayWrapper mget(ByteArrayWrapper key) {
+    return CommandFunction.execute(MGET, key, null, region);
+  }
