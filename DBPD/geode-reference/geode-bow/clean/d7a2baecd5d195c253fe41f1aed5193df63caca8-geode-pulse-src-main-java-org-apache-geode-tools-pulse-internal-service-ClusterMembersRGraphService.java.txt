GEODE-7869: Cleanup warnings in geode-pulse

-  private final String CLUSTER = "clustor";
-  private final String MEMBER_COUNT = "memberCount";
-  private final String ID = "id";
-  private final String NAME = "name";
-  private final String DATA = "data";
-  private final String MEMORY_USAGE = "memoryUsage";
-  private final String CPU_USAGE = "cpuUsage";
-  private final String REGIONS = "regions";
-  private final String HOST = "host";
-  private final String PORT = "port";
-  private final String CLIENTS = "clients";
-  private final String GC_PAUSES = "gcPauses";
-  private final String GATEWAY_SENDER = "gatewaySender";
-  private final String GATEWAY_RECEIVER = "gatewayReceiver";
-  private final String LOAD_AVG = "loadAvg";
-  private final String SOCKETS = "sockets";
-  private final String THREADS = "threads";
-  private final String NUM_THREADS = "numThreads";
+  private static final String CLUSTER = "clustor";
+  private static final String MEMBER_COUNT = "memberCount";
+  private static final String ID = "id";
+  private static final String NAME = "name";
+  private static final String DATA = "data";
+  private static final String MEMORY_USAGE = "memoryUsage";
+  private static final String CPU_USAGE = "cpuUsage";
+  private static final String REGIONS = "regions";
+  private static final String HOST = "host";
+  private static final String PORT = "port";
+  private static final String CLIENTS = "clients";
+  private static final String GC_PAUSES = "gcPauses";
+  private static final String GATEWAY_SENDER = "gatewaySender";
+  private static final String GATEWAY_RECEIVER = "gatewayReceiver";
+  private static final String LOAD_AVG = "loadAvg";
+  private static final String SOCKETS = "sockets";
+  private static final String THREADS = "threads";
+  private static final String NUM_THREADS = "numThreads";
-  private final String MEMBER_NODE_TYPE_NORMAL = "Normal";
-  private final String MEMBER_NODE_TYPE_WARNING = "Warning";
-  private final String MEMBER_NODE_TYPE_ERROR = "Error";
-  private final String MEMBER_NODE_TYPE_SEVERE = "Severe";
-  private final String CHILDREN = "children";
+  private static final String MEMBER_NODE_TYPE_NORMAL = "Normal";
+  private static final String MEMBER_NODE_TYPE_WARNING = "Warning";
+  private static final String MEMBER_NODE_TYPE_ERROR = "Error";
+  private static final String MEMBER_NODE_TYPE_SEVERE = "Severe";
+  private static final String CHILDREN = "children";
-    responseJSON.put(this.CLUSTER,
-        getPhysicalServerJson(cluster, repository.getHost(), repository.getPort()));
-    responseJSON.put(this.MEMBER_COUNT, cluster.getMemberCount());
+    responseJSON.set(CLUSTER,
+        getPhysicalServerJson(cluster));
+    responseJSON.put(MEMBER_COUNT, cluster.getMemberCount());
-  private ObjectNode getPhysicalServerJson(Cluster cluster, String host, String port) {
+  private ObjectNode getPhysicalServerJson(Cluster cluster) {
-    clusterTopologyJSON.put(this.ID, cluster.getClusterId());
-    clusterTopologyJSON.put(this.NAME, cluster.getClusterId());
+    clusterTopologyJSON.put(ID, cluster.getClusterId());
+    clusterTopologyJSON.put(NAME, cluster.getClusterId());
-    clusterTopologyJSON.put(this.DATA, data1);
+    clusterTopologyJSON.set(DATA, data1);
-      childHostObject.put(this.ID, hostName);
-      childHostObject.put(this.NAME, hostName);
+      childHostObject.put(ID, hostName);
+      childHostObject.put(NAME, hostName);
-        memberJSONObj.put(this.ID, member.getId());
-        memberJSONObj.put(this.NAME, member.getName());
+        memberJSONObj.put(ID, member.getId());
+        memberJSONObj.put(NAME, member.getName());
-          memberData.put(this.MEMORY_USAGE, TWO_PLACE_DECIMAL_FORMAT.format(heapUsage));
+          memberData.put(MEMORY_USAGE, TWO_PLACE_DECIMAL_FORMAT.format(heapUsage));
-          memberData.put(this.MEMORY_USAGE, 0);
+          memberData.put(MEMORY_USAGE, 0);
-        memberData.put(this.CPU_USAGE, TWO_PLACE_DECIMAL_FORMAT.format(currentCPUUsage));
-        memberData.put(this.REGIONS, member.getMemberRegions().size());
-        memberData.put(this.HOST, member.getHost());
+        memberData.put(CPU_USAGE, TWO_PLACE_DECIMAL_FORMAT.format(currentCPUUsage));
+        memberData.put(REGIONS, member.getMemberRegions().size());
+        memberData.put(HOST, member.getHost());
-          memberData.put(this.PORT, "-");
+          memberData.put(PORT, "-");
-          memberData.put(this.PORT, member.getMemberPort());
+          memberData.put(PORT, member.getMemberPort());
-        memberData.put(this.CLIENTS, member.getMemberClientsHMap().size());
-        memberData.put(this.GC_PAUSES, member.getGarbageCollectionCount());
-        memberData.put(this.NUM_THREADS, member.getNumThreads());
+        memberData.put(CLIENTS, member.getMemberClientsHMap().size());
+        memberData.put(GC_PAUSES, member.getGarbageCollectionCount());
+        memberData.put(NUM_THREADS, member.getNumThreads());
-        String memberNodeType = "";
+        String memberNodeType;
-          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_SEVERE);
+          memberNodeType = getMemberNodeType(member, MEMBER_NODE_TYPE_SEVERE);
-          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_ERROR);
+          memberNodeType = getMemberNodeType(member, MEMBER_NODE_TYPE_ERROR);
-          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_WARNING);
+          memberNodeType = getMemberNodeType(member, MEMBER_NODE_TYPE_WARNING);
-          memberNodeType = getMemberNodeType(member, this.MEMBER_NODE_TYPE_NORMAL);
+          memberNodeType = getMemberNodeType(member, MEMBER_NODE_TYPE_NORMAL);
-        memberData.put(this.GATEWAY_SENDER, member.getGatewaySenderList().size());
+        memberData.put(GATEWAY_SENDER, member.getGatewaySenderList().size());
-          memberData.put(this.GATEWAY_RECEIVER, 1);
+          memberData.put(GATEWAY_RECEIVER, 1);
-          memberData.put(this.GATEWAY_RECEIVER, 0);
+          memberData.put(GATEWAY_RECEIVER, 0);
-        memberJSONObj.put(this.DATA, memberData);
-        memberJSONObj.put(this.CHILDREN, mapper.createArrayNode());
+        memberJSONObj.set(DATA, memberData);
+        memberJSONObj.set(CHILDREN, mapper.createArrayNode());
-      data.put(this.LOAD_AVG, TWO_PLACE_DECIMAL_FORMAT.format(hostLoadAvg));
-      data.put(this.SOCKETS, hostSockets);
-      data.put(this.THREADS, hostNumThreads);
-      data.put(this.CPU_USAGE, TWO_PLACE_DECIMAL_FORMAT.format(hostCpuUsage));
-      data.put(this.MEMORY_USAGE, hostMemoryUsage);
+      data.put(LOAD_AVG, TWO_PLACE_DECIMAL_FORMAT.format(hostLoadAvg));
+      data.put(SOCKETS, hostSockets);
+      data.put(THREADS, hostNumThreads);
+      data.put(CPU_USAGE, TWO_PLACE_DECIMAL_FORMAT.format(hostCpuUsage));
+      data.put(MEMORY_USAGE, hostMemoryUsage);
-        hostStatus = this.MEMBER_NODE_TYPE_SEVERE;
+        hostStatus = MEMBER_NODE_TYPE_SEVERE;
-        hostStatus = this.MEMBER_NODE_TYPE_ERROR;
+        hostStatus = MEMBER_NODE_TYPE_ERROR;
-        hostStatus = this.MEMBER_NODE_TYPE_WARNING;
+        hostStatus = MEMBER_NODE_TYPE_WARNING;
-        hostStatus = this.MEMBER_NODE_TYPE_NORMAL;
+        hostStatus = MEMBER_NODE_TYPE_NORMAL;
-      childHostObject.put(this.DATA, data);
+      childHostObject.set(DATA, data);
-      childHostObject.put(this.CHILDREN, membersArray);
+      childHostObject.set(CHILDREN, membersArray);
-    clusterTopologyJSON.put(this.CHILDREN, childHostArray);
+    clusterTopologyJSON.set(CHILDREN, childHostArray);
-    severeAlertList = new ArrayList<String>();
-    errorAlertsList = new ArrayList<String>();
-    warningAlertsList = new ArrayList<String>();
+    severeAlertList = new ArrayList<>();
+    errorAlertsList = new ArrayList<>();
+    warningAlertsList = new ArrayList<>();
-        if (errorAlertsList.contains(alert.getMemberName())) {
-          errorAlertsList.remove(alert.getMemberName());
-        } else if (warningAlertsList.contains(alert.getMemberName())) {
+        if (!errorAlertsList.remove(alert.getMemberName())) {
-          if (warningAlertsList.contains(alert.getMemberName())) {
-            warningAlertsList.remove(alert.getMemberName());
-          }
+          warningAlertsList.remove(alert.getMemberName());
