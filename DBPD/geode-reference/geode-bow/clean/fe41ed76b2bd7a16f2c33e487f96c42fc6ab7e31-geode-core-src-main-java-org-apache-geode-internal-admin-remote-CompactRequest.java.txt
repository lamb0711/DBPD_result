GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import org.apache.logging.log4j.Logger;
+
+import org.apache.geode.cache.DiskStore;
+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.internal.logging.LogService;
- *
-  public CompactRequest() {}
+  private static final Logger logger = LogService.getLogger();
+
+  public CompactRequest() {
+    // do nothing
+  }
-      e.printStackTrace();
+      logger.warn(e);
-    GemFireCacheImpl cache = GemFireCacheImpl.getInstance();
-    HashSet<PersistentID> compactedStores = new HashSet<PersistentID>();
+    InternalCache cache = GemFireCacheImpl.getInstance();
+    HashSet<PersistentID> compactedStores = new HashSet<>();
-      for (DiskStoreImpl store : cache.listDiskStoresIncludingRegionOwned()) {
+      for (DiskStore store : cache.listDiskStoresIncludingRegionOwned()) {
-          compactedStores.add(store.getPersistentID());
+          compactedStores.add(((DiskStoreImpl) store).getPersistentID());
+  @Override
-    public CompactReplyProcessor(DM dm, Collection initMembers) {
+    CompactReplyProcessor(DM dm, Collection initMembers) {
-        final HashSet<PersistentID> persistentIds = ((CompactResponse) msg).getPersistentIds();
+        final Set<PersistentID> persistentIds = ((CompactResponse) msg).getPersistentIds();
-          results.put(msg.getSender(), persistentIds);
+          this.results.put(msg.getSender(), persistentIds);
-
-
