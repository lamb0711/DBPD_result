Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class acts as a monitor and listen for VM stats update on behalf of
- * MemberMBean.
+ * This class acts as a monitor and listen for VM stats update on behalf of MemberMBean.
-    processCPUTimeAvailable = MBeanJMXAdapter.isAttributeAvailable(
-        processCPUTimeAttr, ManagementFactory.OPERATING_SYSTEM_MXBEAN_NAME);
-    if(!processCPUTimeAvailable){
+    processCPUTimeAvailable = MBeanJMXAdapter.isAttributeAvailable(processCPUTimeAttr,
+        ManagementFactory.OPERATING_SYSTEM_MXBEAN_NAME);
+    if (!processCPUTimeAvailable) {
-      log(name,value);
+      log(name, value);
-   * Right now it only refreshes CPU usage in terms of percentage. This method
-   * can be used for any other computation based on Stats in future.
+   * Right now it only refreshes CPU usage in terms of percentage. This method can be used for any
+   * other computation based on Stats in future.
-   * Returns the time (as a percentage) that this member's process time with
-   * respect to Statistics sample time interval. If process time between two
-   * sample time t1 & t2 is p1 and p2 cpuUsage = ((p2-p1) * 100) / ((t2-t1)
-   *  
+   * Returns the time (as a percentage) that this member's process time with respect to Statistics
+   * sample time interval. If process time between two sample time t1 & t2 is p1 and p2 cpuUsage =
+   * ((p2-p1) * 100) / ((t2-t1)
+   * 
-      
-      //Some JVM like IBM is not handled by Stats layer properly. Ignoring the attribute for such cases
-      if(processCpuTime == null){
+
+      // Some JVM like IBM is not handled by Stats layer properly. Ignoring the attribute for such
+      // cases
+      if (processCpuTime == null) {
