Revert " GEODE-6580: Cleanup static analyzer warnings. (#3415)"

This reverts commit 80a32b19c3cdbfe75c37d7b70104ea708739d2cd.

-  private final MembershipListener membershipListener;
+  private final MembershipListener ml;
-    membershipListener = new MembershipListener() {
+    this.ml = new MembershipListener() {
-    getDistributionManager().addMembershipListener(membershipListener);
+    getDistributionManager().addMembershipListener(this.ml);
-    return (advisee instanceof DistributedRegion)
-        && ((DistributedRegion) advisee).shouldSyncForCrashedMember(id);
+    return (this.advisee instanceof DistributedRegion)
+        && ((DistributedRegion) this.advisee).shouldSyncForCrashedMember(id);
-    if (advisee instanceof DistributedRegion) {
-      return (DistributedRegion) advisee;
+    if (this.advisee instanceof DistributedRegion) {
+      return (DistributedRegion) this.advisee;
-    Profile[] profs = profiles; // volatile read
+    Profile[] profs = this.profiles; // volatile read
-    return profileVersionSequencer.incrementAndGet();
+    return this.profileVersionSequencer.incrementAndGet();
-    return advisee;
+    return this.advisee;
-        membershipClosed = true;
+        this.membershipClosed = true;
-      getDistributionManager().removeMembershipListener(membershipListener);
+      getDistributionManager().removeMembershipListener(this.ml);
-  public Set<InternalDistributedMember> addMembershipListenerAndAdviseGeneric(
-      MembershipListener listener) {
+  public Set addMembershipListenerAndAdviseGeneric(MembershipListener listener) {
-    synchronized (initializeLock) {
-      initialized = true;
+    synchronized (this.initializeLock) {
+      this.initialized = true;
-    if (initialized) {
+    if (this.initialized) {
-    synchronized (initializeLock) {
-      if (!initialized) {
+    synchronized (this.initializeLock) {
+      if (!this.initialized) {
-    synchronized (initializeLock) {
-      return initialized;
+    synchronized (this.initializeLock) {
+      return this.initialized;
-    return initialized;
+    return this.initialized;
-    Profile[] profs = profiles;
+    Profile[] profs = this.profiles;
-      return getDistributionManager().getViewMembers().contains(memberId);
+      return this.getDistributionManager().getViewMembers().contains(memberId);
-          removedProfiles.put(profileToRemove.getDistributedMember(),
+          this.removedProfiles.put(profileToRemove.getDistributedMember(),
-        removedProfiles.remove(memberId);
+        this.removedProfiles.remove(memberId);
-      removedProfiles.remove(memberId);
+      this.removedProfiles.remove(memberId);
-    return numActiveProfiles;
+    return this.numActiveProfiles;
-    numActiveProfiles = newValue;
+    this.numActiveProfiles = newValue;
-    Profile[] allProfiles = profiles; // volatile read
+    Profile[] allProfiles = this.profiles; // volatile read
-    Assert.assertHoldsLock(initializeLock, true);
+    Assert.assertHoldsLock(this.initializeLock, true);
-    Profile[] locProfiles = profiles; // grab current profiles
+    Profile[] locProfiles = this.profiles; // grab current profiles
-    Profile[] locProfiles = profiles; // grab current profiles
+    Profile[] locProfiles = this.profiles; // grab current profiles
-    final Profile[] locProfiles = profiles; // grab current profiles
+    final Profile[] locProfiles = this.profiles; // grab current profiles
-    Profile[] locProfiles = profiles;
+    Profile[] locProfiles = this.profiles;
-      Profile[] oldProfiles = profiles; // volatile read
+      Profile[] oldProfiles = this.profiles; // volatile read
-      profiles = oldProfiles; // volatile write
+      this.profiles = oldProfiles; // volatile write
-    Profile[] snap = profiles; // volatile read
+    Profile[] snap = this.profiles; // volatile read
-    profiles = newProfiles; // volatile write
+    this.profiles = newProfiles; // volatile write
-      Profile profileRemoved = profiles[i];
+      Profile profileRemoved = this.profiles[i];
-    Profile[] profs = profiles; // volatile read
+    Profile[] profs = this.profiles; // volatile read
-    Profile[] oldProfiles = profiles; // volatile read
+    Profile[] oldProfiles = this.profiles; // volatile read
-    profiles = newProfiles; // volatile write
-    if (numActiveProfiles > 0) {
-      numActiveProfiles--;
+    this.profiles = newProfiles; // volatile write
+    if (this.numActiveProfiles > 0) {
+      this.numActiveProfiles--;
-      peerMemberId = memberId;
+      this.peerMemberId = memberId;
-      return peerMemberId;
+      return this.peerMemberId;
-      return version;
+      return this.version;
-      return serialNumber;
+      return this.serialNumber;
-      return getId().hashCode();
+      return this.getId().hashCode();
-      if (!getClass().equals(obj.getClass()))
+      if (!this.getClass().equals(obj.getClass()))
-      return peerMemberId;
+      return this.peerMemberId;
-      InternalDataSerializer.invokeToData(peerMemberId, out);
-      out.writeInt(version);
-      out.writeInt(serialNumber);
+      InternalDataSerializer.invokeToData(this.peerMemberId, out);
+      out.writeInt(this.version);
+      out.writeInt(this.serialNumber);
-      peerMemberId = new InternalDistributedMember();
-      InternalDataSerializer.invokeFromData(peerMemberId, in);
-      version = in.readInt();
-      serialNumber = in.readInt();
+      this.peerMemberId = new InternalDistributedMember();
+      InternalDataSerializer.invokeFromData(this.peerMemberId, in);
+      this.version = in.readInt();
+      this.serialNumber = in.readInt();
-      sb.append("memberId=").append(peerMemberId);
-      sb.append("; version=").append(version);
-      sb.append("; serialNumber=").append(serialNumber);
-      sb.append("; initialMembershipVersion=").append(initialMembershipVersion);
+      sb.append("memberId=").append(this.peerMemberId);
+      sb.append("; version=").append(this.version);
+      sb.append("; serialNumber=").append(this.serialNumber);
+      sb.append("; initialMembershipVersion=").append(this.initialMembershipVersion);
-      currentVersionOperationThreads = new HashMap<>();
-      previousVersionOperationThreads = new HashMap<>();
+      this.currentVersionOperationThreads = new HashMap<>();
+      this.previousVersionOperationThreads = new HashMap<>();
