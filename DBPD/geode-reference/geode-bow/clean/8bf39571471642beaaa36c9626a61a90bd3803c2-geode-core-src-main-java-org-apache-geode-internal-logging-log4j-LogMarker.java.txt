Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  public static final Marker GEODE_VERBOSE = MarkerManager.getMarker("GEODE_VERBOSE").setParents(GEMFIRE_VERBOSE);
+  public static final Marker GEODE_VERBOSE =
+      MarkerManager.getMarker("GEODE_VERBOSE").setParents(GEMFIRE_VERBOSE);
-  public static final Marker BRIDGE_SERVER = MarkerManager.getMarker("BRIDGE_SERVER").addParents(GEODE_VERBOSE);
+  public static final Marker BRIDGE_SERVER =
+      MarkerManager.getMarker("BRIDGE_SERVER").addParents(GEODE_VERBOSE);
-  public static final Marker PERSIST_VIEW = MarkerManager.getMarker("PERSIST_VIEW").addParents(PERSIST);
-  public static final Marker PERSIST_ADVISOR = MarkerManager.getMarker("PERSIST_ADVISOR").addParents(PERSIST);
-  public static final Marker PERSIST_RECOVERY = MarkerManager.getMarker("PERSIST_RECOVERY").addParents(PERSIST);
-  public static final Marker PERSIST_WRITES = MarkerManager.getMarker("PERSIST_WRITES").addParents(PERSIST);
+  public static final Marker PERSIST_VIEW =
+      MarkerManager.getMarker("PERSIST_VIEW").addParents(PERSIST);
+  public static final Marker PERSIST_ADVISOR =
+      MarkerManager.getMarker("PERSIST_ADVISOR").addParents(PERSIST);
+  public static final Marker PERSIST_RECOVERY =
+      MarkerManager.getMarker("PERSIST_RECOVERY").addParents(PERSIST);
+  public static final Marker PERSIST_WRITES =
+      MarkerManager.getMarker("PERSIST_WRITES").addParents(PERSIST);
-  public static final Marker TOMBSTONE = MarkerManager.getMarker("TOMBSTONE").addParents(GEODE_VERBOSE);
-  public static final Marker TOMBSTONE_COUNT = MarkerManager.getMarker("TOMBSTONE_COUNT").addParents(TOMBSTONE);
+  public static final Marker TOMBSTONE =
+      MarkerManager.getMarker("TOMBSTONE").addParents(GEODE_VERBOSE);
+  public static final Marker TOMBSTONE_COUNT =
+      MarkerManager.getMarker("TOMBSTONE_COUNT").addParents(TOMBSTONE);
-  public static final Marker LRU_TOMBSTONE_COUNT = MarkerManager.getMarker("LRU_TOMBSTONE_COUNT").addParents(LRU, TOMBSTONE_COUNT);
+  public static final Marker LRU_TOMBSTONE_COUNT =
+      MarkerManager.getMarker("LRU_TOMBSTONE_COUNT").addParents(LRU, TOMBSTONE_COUNT);
-  public static final Marker VERSION_TAG = MarkerManager.getMarker("VERSION_TAG").addParents(GEODE_VERBOSE); // gemfire.VersionTag.DEBUG
-  public static final Marker VERSIONED_OBJECT_LIST = MarkerManager.getMarker("VERSIONED_OBJECT_LIST").addParents(GEODE_VERBOSE); // gemfire.VersionedObjectList.DEBUG
+  public static final Marker VERSION_TAG =
+      MarkerManager.getMarker("VERSION_TAG").addParents(GEODE_VERBOSE); // gemfire.VersionTag.DEBUG
+  public static final Marker VERSIONED_OBJECT_LIST =
+      MarkerManager.getMarker("VERSIONED_OBJECT_LIST").addParents(GEODE_VERBOSE); // gemfire.VersionedObjectList.DEBUG
-  public static final Marker OBJECT_PART_LIST = MarkerManager.getMarker("OBJECT_PART_LIST").addParents(GEODE_VERBOSE); // gemfire.ObjectPartList.DEBUG
+  public static final Marker OBJECT_PART_LIST =
+      MarkerManager.getMarker("OBJECT_PART_LIST").addParents(GEODE_VERBOSE); // gemfire.ObjectPartList.DEBUG
-  public static final Marker SERIALIZER = MarkerManager.getMarker("SERIALIZER").addParents(GEODE_VERBOSE); // DataSerializer.DEBUG
+  public static final Marker SERIALIZER =
+      MarkerManager.getMarker("SERIALIZER").addParents(GEODE_VERBOSE); // DataSerializer.DEBUG
-   * If the <code>"DataSerializer.DUMP_SERIALIZED"</code> system
-   * property is set, the class names of the objects that are
-   * serialized by {@link org.apache.geode.DataSerializer#writeObject(Object, DataOutput)} using standard Java
-   * serialization are logged to {@linkplain System#out standard out}.
-   * This aids in determining which classes should implement {@link
-   * DataSerializable} (or should be special cased by a custom
+   * If the <code>"DataSerializer.DUMP_SERIALIZED"</code> system property is set, the class names of
+   * the objects that are serialized by
+   * {@link org.apache.geode.DataSerializer#writeObject(Object, DataOutput)} using standard Java
+   * serialization are logged to {@linkplain System#out standard out}. This aids in determining
+   * which classes should implement {@link DataSerializable} (or should be special cased by a custom
-  public static final Marker DUMP_SERIALIZED = MarkerManager.getMarker("DUMP_SERIALIZED").addParents(SERIALIZER); // DataSerializer.DUMP_SERIALIZED
-  public static final Marker TRACE_SERIALIZABLE = MarkerManager.getMarker("TRACE_SERIALIZABLE").addParents(SERIALIZER); // DataSerializer.TRACE_SERIALIZABLE
-  public static final Marker DEBUG_DSFID = MarkerManager.getMarker("DEBUG_DSFID").addParents(SERIALIZER); // DataSerializer.DEBUG_DSFID
+  public static final Marker DUMP_SERIALIZED =
+      MarkerManager.getMarker("DUMP_SERIALIZED").addParents(SERIALIZER); // DataSerializer.DUMP_SERIALIZED
+  public static final Marker TRACE_SERIALIZABLE =
+      MarkerManager.getMarker("TRACE_SERIALIZABLE").addParents(SERIALIZER); // DataSerializer.TRACE_SERIALIZABLE
+  public static final Marker DEBUG_DSFID =
+      MarkerManager.getMarker("DEBUG_DSFID").addParents(SERIALIZER); // DataSerializer.DEBUG_DSFID
-  public static final Marker STATISTICS = MarkerManager.getMarker("STATISTICS").addParents(GEODE_VERBOSE);
-  public static final Marker STATE_FLUSH_OP = MarkerManager.getMarker("STATE_FLUSH_OP").addParents(GEODE_VERBOSE);
+  public static final Marker STATISTICS =
+      MarkerManager.getMarker("STATISTICS").addParents(GEODE_VERBOSE);
+  public static final Marker STATE_FLUSH_OP =
+      MarkerManager.getMarker("STATE_FLUSH_OP").addParents(GEODE_VERBOSE);
-  public static final Marker DISTRIBUTION = MarkerManager.getMarker("DISTRIBUTION").addParents(GEODE_VERBOSE);
-  public static final Marker DISTRIBUTION_STATE_FLUSH_OP = MarkerManager.getMarker("DISTRIBUTION_STATE_FLUSH_OP").addParents(DISTRIBUTION, STATE_FLUSH_OP);
-  public static final Marker DISTRIBUTION_BRIDGE_SERVER = MarkerManager.getMarker("DISTRIBUTION_BRIDGE_SERVER").addParents(DISTRIBUTION, BRIDGE_SERVER);
-  public static final Marker DISTRIBUTION_VIEWS = MarkerManager.getMarker("DISTRIBUTION_VIEWS").addParents(DISTRIBUTION);
+  public static final Marker DISTRIBUTION =
+      MarkerManager.getMarker("DISTRIBUTION").addParents(GEODE_VERBOSE);
+  public static final Marker DISTRIBUTION_STATE_FLUSH_OP = MarkerManager
+      .getMarker("DISTRIBUTION_STATE_FLUSH_OP").addParents(DISTRIBUTION, STATE_FLUSH_OP);
+  public static final Marker DISTRIBUTION_BRIDGE_SERVER =
+      MarkerManager.getMarker("DISTRIBUTION_BRIDGE_SERVER").addParents(DISTRIBUTION, BRIDGE_SERVER);
+  public static final Marker DISTRIBUTION_VIEWS =
+      MarkerManager.getMarker("DISTRIBUTION_VIEWS").addParents(DISTRIBUTION);
-  public static final Marker DM_BRIDGE_SERVER = MarkerManager.getMarker("DM_BRIDGE").addParents(BRIDGE_SERVER, DM);
+  public static final Marker DM_BRIDGE_SERVER =
+      MarkerManager.getMarker("DM_BRIDGE").addParents(BRIDGE_SERVER, DM);
-  public static final Marker GII_VERSIONED_ENTRY = MarkerManager.getMarker("GII_VERSION_ENTRY").addParents(GII);
+  public static final Marker GII_VERSIONED_ENTRY =
+      MarkerManager.getMarker("GII_VERSION_ENTRY").addParents(GII);
-  public static final Marker PERSISTENCE = MarkerManager.getMarker("PERSISTENCE").addParents(GEODE_VERBOSE);
-  public static final Marker DISK_STORE_MONITOR = MarkerManager.getMarker("DISK_STORE_MONITOR").addParents(PERSISTENCE);
+  public static final Marker PERSISTENCE =
+      MarkerManager.getMarker("PERSISTENCE").addParents(GEODE_VERBOSE);
+  public static final Marker DISK_STORE_MONITOR =
+      MarkerManager.getMarker("DISK_STORE_MONITOR").addParents(PERSISTENCE);
-  public static final Marker MANAGED_ENTITY = MarkerManager.getMarker("MANAGED_ENTITY").addParents(GEODE_VERBOSE);
+  public static final Marker MANAGED_ENTITY =
+      MarkerManager.getMarker("MANAGED_ENTITY").addParents(GEODE_VERBOSE);
-  public static final Marker CACHE_XML = MarkerManager.getMarker("CACHE_XML").addParents(GEODE_VERBOSE);
-  public static final Marker CACHE_XML_PARSER = MarkerManager.getMarker("CACHE_XML_PARSER").addParents(GEODE_VERBOSE, CACHE_XML);
+  public static final Marker CACHE_XML =
+      MarkerManager.getMarker("CACHE_XML").addParents(GEODE_VERBOSE);
+  public static final Marker CACHE_XML_PARSER =
+      MarkerManager.getMarker("CACHE_XML_PARSER").addParents(GEODE_VERBOSE, CACHE_XML);
