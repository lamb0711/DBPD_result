GEODE-6166: Improves put performance (#2970)

* Encode Operation ordinal in Message Part directly
* Don't allocate hashmap until we need it.
* Add putByte to Part and pre-allocate serialized form.
* Use Deque to avoid allocating lots of LinkedList.Node objects

+import java.util.ArrayDeque;
-  private final LinkedList/* <PooledConnection> */ availableConnections =
-      new LinkedList/* <PooledConnection> */();
+  private final ArrayDeque<PooledConnection> availableConnections = new ArrayDeque<>();
-        PooledConnection connection = (PooledConnection) availableConnections.removeFirst();
+        PooledConnection connection = availableConnections.removeFirst();
-      for (Iterator itr = availableConnections.iterator(); itr.hasNext();) {
-        PooledConnection nextConnection = (PooledConnection) itr.next();
+      for (Iterator<PooledConnection> itr = availableConnections.iterator(); itr.hasNext();) {
+        PooledConnection nextConnection = itr.next();
-      for (Iterator itr = availableConnections.iterator(); itr.hasNext();) {
-        PooledConnection nextConnection = (PooledConnection) itr.next();
+      for (Iterator<PooledConnection> itr = availableConnections.iterator(); itr.hasNext();) {
+        PooledConnection nextConnection = itr.next();
-      for (Iterator itr = availableConnections.iterator(); itr.hasNext();) {
-        PooledConnection conn = (PooledConnection) itr.next();
-        if (badConnections.contains(conn)) {
-          itr.remove();
-        }
-      }
+      availableConnections.removeIf(badConnections::contains);
