Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A message that is sent to a VM that hosts a cache to perform an
- * administrative operation on one of its bridge servers.
+ * A message that is sent to a VM that hosts a cache to perform an administrative operation on one
+ * of its bridge servers.
-  ///////////////////  Instance Fields  ////////////////////
+  /////////////////// Instance Fields ////////////////////
-  ////////////////////  Static Methods  ////////////////////
+  //////////////////// Static Methods ////////////////////
-   * Creates a <code>BridgeServerRequest</code> for adding a new
-   * bridge server.
+   * Creates a <code>BridgeServerRequest</code> for adding a new bridge server.
-    request.friendlyName = LocalizedStrings.BridgeServerRequest_ADD_BRIDGE_SERVER.toLocalizedString();
+    request.friendlyName =
+        LocalizedStrings.BridgeServerRequest_ADD_BRIDGE_SERVER.toLocalizedString();
-   * Creates a <code>BridgeServerRequest</code> for adding a new
-   * bridge server.
+   * Creates a <code>BridgeServerRequest</code> for adding a new bridge server.
-  public static BridgeServerRequest createForInfo(CacheInfo cache,
-                                                  int id) {
+  public static BridgeServerRequest createForInfo(CacheInfo cache, int id) {
-    request.friendlyName = LocalizedStrings.BridgeServerRequest_GET_INFO_ABOUT_BRIDGE_SERVER_0.toLocalizedString(Integer.valueOf(id));
+    request.friendlyName = LocalizedStrings.BridgeServerRequest_GET_INFO_ABOUT_BRIDGE_SERVER_0
+        .toLocalizedString(Integer.valueOf(id));
-   * Creates a <code>BridgeServerRequest</code> for starting a
-   * bridge server.
+   * Creates a <code>BridgeServerRequest</code> for starting a bridge server.
-  public static BridgeServerRequest createForStart(CacheInfo cache,
-                                                   RemoteBridgeServer bridge) {
+  public static BridgeServerRequest createForStart(CacheInfo cache, RemoteBridgeServer bridge) {
-    request.friendlyName = LocalizedStrings.BridgeServerRequest_START_BRIDGE_SERVER_0.toLocalizedString(bridge);
+    request.friendlyName =
+        LocalizedStrings.BridgeServerRequest_START_BRIDGE_SERVER_0.toLocalizedString(bridge);
-   * Creates a <code>BridgeServerRequest</code> for stopping a
-   * bridge server.
+   * Creates a <code>BridgeServerRequest</code> for stopping a bridge server.
-  public static BridgeServerRequest createForStop(CacheInfo cache,
-                                                  RemoteBridgeServer bridge) {
+  public static BridgeServerRequest createForStop(CacheInfo cache, RemoteBridgeServer bridge) {
-    request.friendlyName = LocalizedStrings.BridgeServerRequest_STOP_BRIDGE_SERVER_0.toLocalizedString(bridge);
+    request.friendlyName =
+        LocalizedStrings.BridgeServerRequest_STOP_BRIDGE_SERVER_0.toLocalizedString(bridge);
-    case ADD_OPERATION:
-      return LocalizedStrings.BridgeServerRequest_ADD_BRIDGE_SERVER.toLocalizedString();
-    case INFO_OPERATION:
-      return LocalizedStrings.BridgeServerRequest_GET_INFO_ABOUT_BRIDGE_SERVER_0.toLocalizedString();
-    default:
-      return LocalizedStrings.BridgeServerRequest_UNKNOWN_OPERATION_0.toLocalizedString(Integer.valueOf(op));
+      case ADD_OPERATION:
+        return LocalizedStrings.BridgeServerRequest_ADD_BRIDGE_SERVER.toLocalizedString();
+      case INFO_OPERATION:
+        return LocalizedStrings.BridgeServerRequest_GET_INFO_ABOUT_BRIDGE_SERVER_0
+            .toLocalizedString();
+      default:
+        return LocalizedStrings.BridgeServerRequest_UNKNOWN_OPERATION_0
+            .toLocalizedString(Integer.valueOf(op));
-  ////////////////////  Instance Methods  ////////////////////
+  //////////////////// Instance Methods ////////////////////
-  @Override  
+  @Override
-   * Returns the id of the bridge server for which information is
-   * requested.
+   * Returns the id of the bridge server for which information is requested.
-  @Override  
+  @Override
-  @Override  
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  @Override
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    this.bridgeInfo =
-      (RemoteBridgeServer) DataSerializer.readObject(in);
+    this.bridgeInfo = (RemoteBridgeServer) DataSerializer.readObject(in);
-  @Override  
+  @Override
-    return "BridgeServerRequest: " +
-      getOperationDescription(this.operation);
+    return "BridgeServerRequest: " + getOperationDescription(this.operation);
