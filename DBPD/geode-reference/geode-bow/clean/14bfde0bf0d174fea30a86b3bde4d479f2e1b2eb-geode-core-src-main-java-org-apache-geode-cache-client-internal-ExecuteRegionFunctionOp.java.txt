Merge branch 'release/1.8.0'

+
+    // For testing only
+    ExecuteRegionFunctionOpImpl() {
+      super(MessageType.EXECUTE_REGION_FUNCTION,
+          0);
+      resultCollector = null;
+      function = null;
+      isReExecute = (byte) 0;
+      regionName = "";
+      executor = null;
+      hasResult = (byte) 0;
+      failedNodes = null;
+      functionId = null;
+      executeOnBucketSet = true;
+      isHA = true;
+    }
+
-    private void addFunctionException(final FunctionException result) {
-      if (this.functionException == null) {
-        this.functionException = result;
+    void addFunctionException(final FunctionException result) {
+      if (result.getCause() instanceof FunctionInvocationTargetException) {
+        if (this.functionException == null) {
+          this.functionException = result;
+        }
+        this.functionException.addException(result.getCause());
+      } else if (result instanceof FunctionInvocationTargetException) {
+        if (this.functionException == null) {
+          this.functionException = new FunctionException(result);
+        }
+        this.functionException.addException(result);
+      } else {
+        if (this.functionException == null) {
+          this.functionException = result;
+        }
+        this.functionException.addException(result);
-      this.functionException.addException(result);
+    }
+
+    FunctionException getFunctionException() {
+      return functionException;
