GEODE-7752: Removed the current optionality on the ClusterManagementServiceBuilder. (#4650)

The Transport is not responsible to set the ConnectionConfig.
-
-import javax.net.ssl.HostnameVerifier;
-import javax.net.ssl.SSLContext;
-
-import org.apache.geode.management.api.BaseConnectionConfig;
- * Concrete implementation of {@link ConnectionConfig} which can be used
- * to derive most (if not all) of the connection properties from an existing {@link Cache} or
- * {@link ClientCache}.
+ * Concrete implementation of {@link ConnectionConfig} which can be used to derive most (if not all)
+ * of the connection properties from an existing {@link Cache} or {@link ClientCache}.
-public class GeodeConnectionConfig
-    implements ConnectionConfig {
+public class GeodeConnectionConfig extends ConnectionConfig {
-  private BaseConnectionConfig connectionConfig;
-
-  @Override
-  public String getHost() {
-    return connectionConfig.getHost();
-  }
-
-  @Override
-  public int getPort() {
-    return connectionConfig.getPort();
-  }
-
-  @Override
-  public String getAuthToken() {
-    return connectionConfig.getAuthToken();
-  }
-
-  public GeodeConnectionConfig setAuthToken(String authToken) {
-    connectionConfig.setAuthToken(authToken);
-    return this;
-  }
-
-  @Override
-  public SSLContext getSslContext() {
-    return connectionConfig.getSslContext();
-  }
-
-  @Override
-  public String getUsername() {
-    return connectionConfig.getUsername();
-  }
-
-  public GeodeConnectionConfig setUsername(String username) {
-    connectionConfig.setUsername(username);
-    return this;
-  }
-
-  @Override
-  public String getPassword() {
-    return connectionConfig.getPassword();
-  }
-
-  public GeodeConnectionConfig setPassword(String password) {
-    connectionConfig.setPassword(password);
-    return this;
-  }
-
-  @Override
-  public HostnameVerifier getHostnameVerifier() {
-    return connectionConfig.getHostnameVerifier();
-  }
-
-  @Override
-  public boolean getFollowRedirects() {
-    return connectionConfig.getFollowRedirects();
-  }
-
-  public GeodeConnectionConfig setFollowRedirects(boolean followRedirects) {
-    connectionConfig.setFollowRedirects(followRedirects);
-    return this;
-  }
-
-  public GeodeConnectionConfig setHostnameVerifier(
-      HostnameVerifier hostnameVerifier) {
-    connectionConfig.setHostnameVerifier(hostnameVerifier);
-    return this;
-  }
-
-    connectionConfig = new BaseConnectionConfig(cmsInfo.getHostName(),
-        cmsInfo.getHttpPort());
+    setHost(cmsInfo.getHostName());
+    setPort(cmsInfo.getHttpPort());
-      connectionConfig.setUsername(username);
-      connectionConfig.setPassword(password);
+      setUsername(username);
+      setPassword(password);
-      connectionConfig.setSslContext(SSLUtil.createAndConfigureSSLContext(sslConfig, false));
+      setSslContext(SSLUtil.createAndConfigureSSLContext(sslConfig, false));
