Introduce RedisResponse to SET executors (#5114)


-import org.apache.geode.redis.internal.Coder;
+import org.apache.geode.redis.internal.RedisResponse;
-  public void executeCommand(Command command, ExecutionHandlerContext context) {
+  public RedisResponse executeCommandWithResponse(Command command,
+      ExecutionHandlerContext context) {
+    RedisResponse response;
+
-        doActualSetOperation(command, context, commandElems, setsStartIndex, regionProvider,
-            destination, firstSetKey);
+        response = doActualSetOperation(command, context, commandElems, setsStartIndex,
+            regionProvider, destination, firstSetKey);
-        command.setResponse(
-            Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
+        response = RedisResponse.error("Thread interrupted");
-        command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-            "Timeout acquiring lock. Please try again."));
+        return RedisResponse.error("Timeout acquiring lock. Please try again");
-      doActualSetOperation(command, context, commandElems, setsStartIndex, regionProvider,
-          destination, firstSetKey);
+      response = doActualSetOperation(command, context, commandElems, setsStartIndex,
+          regionProvider, destination, firstSetKey);
+
+    return response;
-  private boolean doActualSetOperation(Command command, ExecutionHandlerContext context,
+  private RedisResponse doActualSetOperation(Command command, ExecutionHandlerContext context,
-      respondBulkStrings(command, context, firstSet);
-      return true;
+      return respondBulkStrings(firstSet);
+    RedisResponse response;
+
-        command
-            .setResponse(
-                Coder.getIntegerResponse(context.getByteBufAllocator(), resultSet.size()));
+        response = RedisResponse.integer(resultSet.size());
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), 0));
+        response = RedisResponse.integer(0);
-        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
+        response = RedisResponse.emptyArray();
-        respondBulkStrings(command, context, resultSet);
+        response = respondBulkStrings(resultSet);
-    return false;
+
+    return response;
