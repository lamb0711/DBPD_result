GEODE-3819: Refactor CreateRegionCommandDUnitTest to use gfsh rules (#928)

* GEODE-3819: Refactor CreateRegionCommandDUnitTest to use gfsh rules

* GEODE-3819: Refactor CreateRegionCommandDUnitTest to use gfsh rules

* GEODE-3819: Refactor CreateRegionCommandDUnitTest to use gfsh rules

* GEODE-3819: Refactor CreateRegionCommandDUnitTest to use gfsh rules

+    String lastError = null;
-                  useAttributesFrom));
+                  regionPath));
+        } else {
+          lastError = regionCreateResult.getMessage();
+
+    if (lastError != null) {
+      result = ResultBuilder.createUserErrorResult(lastError);
+    }
+
-
-    if (regionFunctionArgs.hasPartitionAttributes()) {
-      if (regionFunctionArgs.isPartitionResolverSet()) {
-        String partitionResolverClassName = regionFunctionArgs.getPartitionResolver();
-        try {
-          Class<PartitionResolver> resolverClass = (Class<PartitionResolver>) ClassPathLoader
-              .getLatest().forName(partitionResolverClassName);
-          PartitionResolver partitionResolver = resolverClass.newInstance();
-        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {
-          throw new IllegalArgumentException(
-              CliStrings.format(CliStrings.CREATE_REGION__MSG__INVALID_PARTITION_RESOLVER,
-                  new Object[] {regionFunctionArgs.getPartitionResolver()}),
-              e);
-        }
-      }
-    }
