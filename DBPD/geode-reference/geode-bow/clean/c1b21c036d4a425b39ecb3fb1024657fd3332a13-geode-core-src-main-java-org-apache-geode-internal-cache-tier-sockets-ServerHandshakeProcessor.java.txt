GEODE-4439 Refactor HandShake.java

Created ServerSideHandshake and ServerSideHandshakeImpl for servers.

Created ClientSideHandshake and ClientSideHandshakeImpl for clients.

Message encryption/decryption is now in an Encryptor interface.

HandShake is renamed Handshake.

-import static org.apache.geode.distributed.ConfigurationProperties.*;
+import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_CLIENT_ACCESSOR;
+import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_CLIENT_ACCESSOR_PP;
+import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_CLIENT_AUTHENTICATOR;
-import org.apache.geode.internal.cache.tier.CommunicationMode;
+import org.apache.geode.internal.cache.tier.ServerSideHandshake;
-public class ServerHandShakeProcessor {
+public class ServerHandshakeProcessor {
-  /**
-   * Test hook for server version support
-   *
-   * @since GemFire 5.7
-   */
-  public static void setSeverVersionForTesting(short ver) {
-    currentServerVersion = Version.fromOrdinalOrCurrent(ver);
-  }
-
-  public static boolean readHandShake(ServerConnection connection, SecurityService securityService,
+  public static boolean readHandshake(ServerConnection connection, SecurityService securityService,
-    boolean validHandShake = false;
-    Version clientVersion = null;
-      clientVersion = readClientVersion(connection);
+      Version clientVersion = readClientVersion(connection);
+
+      if (logger.isDebugEnabled()) {
+        logger.debug("Client version: {}", clientVersion);
+      }
+
+      // Read the appropriate handshake
+      if (clientVersion.compareTo(Version.GFE_57) >= 0) {
+        return readGFEHandshake(connection, clientVersion, securityService, acceptorImpl);
+      } else {
+        connection.refuseHandshake(
+            "Unsupported version " + clientVersion + "Server's current version " + Acceptor.VERSION,
+            REPLY_REFUSED);
+        return false;
+      }
-      validHandShake = false;
-      validHandShake = false;
-      validHandShake = false;
-    if (clientVersion != null) {
-
-      if (logger.isDebugEnabled())
-        logger.debug("Client version: {}", clientVersion);
-
-      // Read the appropriate handshake
-      if (clientVersion.compareTo(Version.GFE_57) >= 0) {
-        validHandShake = readGFEHandshake(connection, clientVersion, securityService, acceptorImpl);
-      } else {
-        connection.refuseHandshake(
-            "Unsupported version " + clientVersion + "Server's current version " + Acceptor.VERSION,
-            REPLY_REFUSED);
-      }
-    }
-
-    return validHandShake;
+    return false;
-    // write dummy epType
+    // write dummy endpointType
-    // write dummy qSize
+    // write dummy queueSize
-    int handShakeTimeout = connection.getHandShakeTimeout();
+    int handshakeTimeout = connection.getHandShakeTimeout();
-      HandShake handshake = new HandShake(socket, handShakeTimeout, system, clientVersion,
-          connection.getCommunicationMode(), securityService);
+      ServerSideHandshake handshake = new ServerSideHandshakeImpl(socket, handshakeTimeout, system,
+          clientVersion, connection.getCommunicationMode(), securityService);
-      ClientProxyMembershipID proxyId = handshake.getMembership();
+      ClientProxyMembershipID proxyId = handshake.getMembershipId();
-          new Object[] {connection.getName(), Integer.valueOf(handShakeTimeout)}));
+          new Object[] {connection.getName(), Integer.valueOf(handshakeTimeout)}));
-    } catch (EOFException e) {
+    } catch (EOFException | SocketException e) {
-    } catch (SocketException e) { // no need to warn client just gave up on this
-      // server before we could handshake
-      logger.info("{} {}", connection.getName(), e);
-      connection.stats.incFailedConnectionAttempts();
-      connection.cleanup();
-      return false;
-          HandShake.REPLY_EXCEPTION_AUTHENTICATION_REQUIRED);
+          Handshake.REPLY_EXCEPTION_AUTHENTICATION_REQUIRED);
-          HandShake.REPLY_EXCEPTION_AUTHENTICATION_FAILED);
+          Handshake.REPLY_EXCEPTION_AUTHENTICATION_FAILED);
-      Object principal = ((HandShake) connection.getHandshake()).verifyCredentials();
+      Object principal = connection.getHandshake().verifyCredentials();
