GEODE-4145: Clean up protobuf error codes.

Remove all unused error codes.
Condense all operation server exceptions into one ServerError type
Condense all protocol errors into one InvalidRequest type
Renumber error codes to be more compactable in protobuf msgs

-import static org.apache.geode.internal.protocol.ProtocolErrorCode.CONSTRAINT_VIOLATION;
-import static org.apache.geode.internal.protocol.ProtocolErrorCode.DATA_UNREACHABLE;
-import static org.apache.geode.internal.protocol.ProtocolErrorCode.OPERATION_TIMEOUT;
-import static org.apache.geode.internal.protocol.ProtocolErrorCode.REGION_NOT_FOUND;
-import static org.apache.geode.internal.protocol.ProtocolErrorCode.VALUE_ENCODING_ERROR;
+import static org.apache.geode.internal.protocol.ProtocolErrorCode.INVALID_REQUEST;
+import static org.apache.geode.internal.protocol.ProtocolErrorCode.SERVER_ERROR;
-import org.apache.geode.cache.CacheLoaderException;
-import org.apache.geode.cache.PartitionedRegionStorageException;
-import org.apache.geode.cache.TimeoutException;
-          .of(ProtobufResponseUtilities.makeErrorResponse(REGION_NOT_FOUND, "Region not found"));
+          .of(ProtobufResponseUtilities.makeErrorResponse(SERVER_ERROR, "Region not found"));
-      return createKeyedError(key, "Encoding not supported.", VALUE_ENCODING_ERROR);
-    } catch (org.apache.geode.distributed.LeaseExpiredException | TimeoutException e) {
-      logger.error("Operation timed out: {}", e);
-      return createKeyedError(key, "Operation timed out: " + e.getMessage(), OPERATION_TIMEOUT);
-    } catch (CacheLoaderException | PartitionedRegionStorageException e) {
-      logger.error("Data unreachable: {}", e);
-      return createKeyedError(key, "Data unreachable: " + e.getMessage(), DATA_UNREACHABLE);
-    } catch (NullPointerException | IllegalArgumentException e) {
-      logger.error("Invalid input: {}", e);
-      return createKeyedError(key, "Invalid input: " + e.getMessage(), CONSTRAINT_VIOLATION);
+      return createKeyedError(key, "Encoding not supported.", INVALID_REQUEST);
+    } catch (Exception ex) {
+      logger.error("Failure in protobuf getAll operation for key: " + key, ex);
+      return createKeyedError(key, ex.toString(), SERVER_ERROR);
