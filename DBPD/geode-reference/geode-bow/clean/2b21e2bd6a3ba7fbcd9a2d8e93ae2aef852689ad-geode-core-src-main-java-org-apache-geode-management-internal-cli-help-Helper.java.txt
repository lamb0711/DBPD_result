Revert "GEODE-3007: Simplify support for custom GFSH commands (#1042)" (#1072)

This reverts commit 0e5dd6ba45519463147337c8265db15e8f1840fc.
-import static java.util.stream.Collectors.joining;
-
+import java.util.ArrayList;
-import org.springframework.shell.core.CommandMarker;
-  private final Map<String, MethodTarget> availabilityIndicators = new HashMap<>();
+  private final Map<String, MethodTarget> availabilityIndicators =
+      new HashMap<String, MethodTarget>();
-  public void registerCommand(CommandMarker commandMarker) {
-    for (Method method : commandMarker.getClass().getMethods()) {
-      CliCommand cliCommand = method.getAnnotation(CliCommand.class);
-      CliAvailabilityIndicator availability = method.getAnnotation(CliAvailabilityIndicator.class);
-      if (cliCommand == null && availability == null) {
-        continue;
-      }
-
-      if (cliCommand != null) {
-        addCommand(cliCommand, method);
-      }
-
-      if (availability != null) {
-        addAvailabilityIndicator(availability, new MethodTarget(method, commandMarker));
-      }
-    }
-  }
-
-  protected void addCommand(CliCommand command, Method commandMethod) {
+  public void addCommand(CliCommand command, Method commandMethod) {
-  private void addAvailabilityIndicator(CliAvailabilityIndicator availability,
-      MethodTarget target) {
+  public void addAvailabilityIndicator(CliAvailabilityIndicator availability, MethodTarget target) {
-      topics.keySet().stream().sorted()
+      List<String> sortedTopics = new ArrayList<>(topics.keySet());
+      Collections.sort(sortedTopics);
+      sortedTopics.stream()
-    topic.relatedCommands.stream().sorted().forEach(command -> builder.append(command.command)
+    Collections.sort(topic.relatedCommands);
+    topic.relatedCommands.stream().forEachOrdered(command -> builder.append(command.command)
-  private boolean isAvailable(String command) {
+  boolean isAvailable(String command) {
-
-    String synonyms = getSynonyms(cliOption).stream().collect(joining(","));
-    if (StringUtils.isNotEmpty(synonyms)) {
-      optionNode.addChild(new HelpBlock(SYNONYMS_SUB_NAME + synonyms));
+    if (getSynonyms(cliOption).size() > 0) {
+      StringBuilder builder = new StringBuilder();
+      for (String string : getSynonyms(cliOption)) {
+        if (builder.length() > 0) {
+          builder.append(",");
+        }
+        builder.append(string);
+      }
+      optionNode.addChild(new HelpBlock(SYNONYMS_SUB_NAME + builder.toString()));
-
+    List<String> synonyms = new ArrayList<>();
-      return Collections.emptyList();
+      return synonyms;
-      return Collections.emptyList();
+      return synonyms;
-    return Arrays.asList(keys).subList(1, keys.length);
+    for (int i = 1; i < keys.length; i++) {
+      synonyms.add(keys[i]);
+    }
+    return synonyms;
