Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Collects unique stack traces for later examination.  This works best and is most useful when traces are added at the same point of origin.
- * This will collect all unique code paths while the collector is turned on.  This class will affect timing and performance so its use is suspect
- * while diagnosing concurrency issues.
+ * Collects unique stack traces for later examination. This works best and is most useful when
+ * traces are added at the same point of origin. This will collect all unique code paths while the
+ * collector is turned on. This class will affect timing and performance so its use is suspect while
+ * diagnosing concurrency issues.
- * Example: 
- * <code>
+ * Example: <code>
- * </code> 
+ * </code>
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-  
+
-   * Adds a stack trace to this collector if it is unique.  
+   * Adds a stack trace to this collector if it is unique.
+   * 
-   * @return true if the stack trace was not already present in this collector.  This
-   * will always return false if the collector is turned off.
+   * @return true if the stack trace was not already present in this collector. This will always
+   *         return false if the collector is turned off.
-    return add(this.stackTraceSet,throwable);
+    return add(this.stackTraceSet, throwable);
-  
+
-   * Adds a stack trace to a collection Set if it is unique.  
+   * Adds a stack trace to a collection Set if it is unique.
+   * 
-   * @return true if the stack trace was not already present in this collector.  This
-   * will always return false if the collector is turned off.
+   * @return true if the stack trace was not already present in this collector. This will always
+   *         return false if the collector is turned off.
-    if(this.on) {
+    if (this.on) {
-    
-    return false;    
+
+    return false;
-  
+
+   * 
-    
+
-   * Returns true if the throwable parameter is contained by 
-   * this collector. 
+   * Returns true if the throwable parameter is contained by this collector.
+   * 
-  
+
-   * Returns true if the stackTrace parameter is contained
-   * by this collector.
+   * Returns true if the stackTrace parameter is contained by this collector.
+   * 
-  
+
+   * 
-    
+
-  
+
