GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-import org.apache.geode.internal.cache.tier.CachedRegionHelper;
-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-    servConn.setAsTrue(REQUIRES_RESPONSE);
-    servConn.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
-    regionNamePart = msg.getPart(0);
+    regionNamePart = clientMessage.getPart(0);
-    keysPart = msg.getPart(1);
+    keysPart = clientMessage.getPart(1);
-      writeChunkedException(msg, e, false, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeChunkedException(clientMessage, e, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-      buffer.append(servConn.getName()).append(": Received getAll request (")
-          .append(msg.getPayloadLength()).append(" bytes) from ").append(servConn.getSocketString())
-          .append(" for region ").append(regionName).append(" keys ");
+      buffer.append(serverConnection.getName()).append(": Received getAll request (")
+          .append(clientMessage.getPayloadLength()).append(" bytes) from ")
+          .append(serverConnection.getSocketString()).append(" for region ").append(regionName)
+          .append(" keys ");
-      logger.warn("{}: {}", servConn.getName(), message);
-      writeChunkedErrorResponse(msg, MessageType.GET_ALL_DATA_ERROR, message, servConn);
-      servConn.setAsTrue(RESPONDED);
+      logger.warn("{}: {}", serverConnection.getName(), message);
+      writeChunkedErrorResponse(clientMessage, MessageType.GET_ALL_DATA_ERROR, message,
+          serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-    LocalRegion region = (LocalRegion) servConn.getCache().getRegion(regionName);
+    LocalRegion region = (LocalRegion) serverConnection.getCache().getRegion(regionName);
-      writeRegionDestroyedEx(msg, regionName, reason, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeRegionDestroyedEx(clientMessage, regionName, reason, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-    ChunkedMessage chunkedResponseMsg = servConn.getChunkedResponseMessage();
+    ChunkedMessage chunkedResponseMsg = serverConnection.getChunkedResponseMessage();
-    chunkedResponseMsg.setTransactionId(msg.getTransactionId());
+    chunkedResponseMsg.setTransactionId(clientMessage.getTransactionId());
-      fillAndSendGetAllResponseChunks(region, regionName, keys, servConn);
-      servConn.setAsTrue(RESPONDED);
+      fillAndSendGetAllResponseChunks(region, regionName, keys, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-      checkForInterrupt(servConn, e);
+      checkForInterrupt(serverConnection, e);
-      writeChunkedException(msg, e, false, servConn);
-      servConn.setAsTrue(RESPONDED);
+      writeChunkedException(clientMessage, e, serverConnection);
+      serverConnection.setAsTrue(RESPONDED);
-      if (values.size() == maximumChunkSize) {
+      if (values.size() == MAXIMUM_CHUNK_SIZE) {
-    ObjectPartList651 values = new ObjectPartList651(maximumChunkSize, includeKeys);
+    ObjectPartList651 values = new ObjectPartList651(MAXIMUM_CHUNK_SIZE, includeKeys);
-    chunkedResponseMsg.addObjPart(list, zipValues);
+    chunkedResponseMsg.addObjPart(list, false);
