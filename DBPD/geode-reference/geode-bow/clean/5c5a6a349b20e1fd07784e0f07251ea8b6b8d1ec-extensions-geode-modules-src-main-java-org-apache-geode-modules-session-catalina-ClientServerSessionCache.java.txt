GEODE:6784 Added unit tests to classes in the tomcat module (#4061)

Co-authored-by: Benjamin Ross <bross@pivotal.io>
Co-authored-by: Donal Evans <doevans@pivotal.io>
-      Execution execution = FunctionService.onRegion(getSessionRegion()).withFilter(sessionIds);
+      Execution execution = getExecutionForFunctionOnRegionWithFilter(sessionIds);
-      Execution execution = FunctionService.onServers(getCache())
-          .setArguments(new Object[] {this.sessionRegion.getFullPath(), sessionIds});
+      Object[] arguments = new Object[] {this.sessionRegion.getFullPath(), sessionIds};
+      Execution execution = getExecutionForFunctionOnServersWithArguments(arguments);
-      PoolImpl pool = (PoolImpl) PoolManager.find(getOperatingRegionName());
+      PoolImpl pool = findPoolInPoolManager();
-    Execution execution = FunctionService.onServers(this.cache);
+    Execution execution = getExecutionForFunctionOnServers();
-  private void createSessionRegionOnServers() {
+  void createSessionRegionOnServers() {
-    Execution execution = FunctionService.onServer(this.cache).setArguments(configuration);
+    Execution execution = getExecutionForFunctionOnServerWithRegionConfiguration(configuration);
-  private Region<String, HttpSession> createLocalSessionRegion() {
+  Region<String, HttpSession> createLocalSessionRegion() {
+
+  // Helper methods added to improve unit testing of class
+  Execution getExecutionForFunctionOnServers() {
+    return getExecutionForFunctionOnServersWithArguments(null);
+  }
+
+  Execution getExecutionForFunctionOnServersWithArguments(Object[] arguments) {
+    if (arguments != null && arguments.length > 0) {
+      return FunctionService.onServers(getCache()).setArguments(arguments);
+    } else {
+      return FunctionService.onServers(getCache());
+    }
+  }
+
+  Execution getExecutionForFunctionOnServerWithRegionConfiguration(RegionConfiguration arguments) {
+    if (arguments != null) {
+      return FunctionService.onServer(getCache()).setArguments(arguments);
+    } else {
+      return FunctionService.onServer(getCache());
+    }
+  }
+
+  Execution getExecutionForFunctionOnRegionWithFilter(Set<?> filter) {
+    if (filter != null && filter.size() > 0) {
+      return FunctionService.onRegion(getSessionRegion()).withFilter(filter);
+    } else {
+      return FunctionService.onRegion(getSessionRegion());
+    }
+  }
+
+  PoolImpl findPoolInPoolManager() {
+    return (PoolImpl) PoolManager.find(getOperatingRegionName());
+  }
