GEODE-832: Modifying the dunit framework to allow lambda expressions

Lambdas can now be used for VM.invoke and VM.invokeAsync. For example

vm.invoke(() -> {System.out.println("Hello from remote VM")})
String value = vm.invoke(() -> {return "Hello from remote VM")

This theoretically could be more efficient than using anonymous
classes, because they do not capture (and Serialize) a reference to
the enclosing test class unless they reference state of that class.

-  public AsyncInvocation invokeAsync(Runnable r) {
+  public AsyncInvocation invokeAsync(SerializableRunnableIF r) {
-  public AsyncInvocation invokeAsync(Callable c) {
+  public <T> AsyncInvocation<T> invokeAsync(SerializableCallableIF<T> c) {
-  public void invoke(Runnable r) {
+  public void invoke(SerializableRunnableIF r) {
-  public Object invoke(Callable c) {
-    return invoke(c, "call");
+  public <T>  T invoke(SerializableCallableIF<T> c) {
+    return (T) invoke(c, "call");
