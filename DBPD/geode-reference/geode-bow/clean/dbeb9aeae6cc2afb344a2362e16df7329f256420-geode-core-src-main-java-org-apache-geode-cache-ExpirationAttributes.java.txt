Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-/** Immutable parameter object for accessing and setting the attributes associated with 
- * <code>timeToLive</code> and <code>idleTimeout</code>. If the expiration
- * action is not specified, it defaults to <code>ExpirationAction.INVALIDATE</code>.
- * If the timeout is not specified, it defaults to zero (which means to never timeout).
+/**
+ * Immutable parameter object for accessing and setting the attributes associated with
+ * <code>timeToLive</code> and <code>idleTimeout</code>. If the expiration action is not specified,
+ * it defaults to <code>ExpirationAction.INVALIDATE</code>. If the timeout is not specified, it
+ * defaults to zero (which means to never timeout).
-public class ExpirationAttributes implements DataSerializable { 
+public class ExpirationAttributes implements DataSerializable {
-  
-  /** The number of seconds since this value or region was created before it expires. */  
-  private  int timeout;
-  
-  /** The action that should take place when this object or region expires.
-   */  
-  private  ExpirationAction action;
-  /** Constructs a default <code>ExpirationAttributes</code>, which indicates no expiration
-   * will take place.
+  /** The number of seconds since this value or region was created before it expires. */
+  private int timeout;
+
+  /**
+   * The action that should take place when this object or region expires.
+   */
+  private ExpirationAction action;
+
+  /**
+   * Constructs a default <code>ExpirationAttributes</code>, which indicates no expiration will take
+   * place.
-  
-  /** Constructs an <code>ExpirationAttributes</code> with the specified expiration time
-   * and the default expiration action <code>ExpirationAction.INVALIDATE</code>.
+
+  /**
+   * Constructs an <code>ExpirationAttributes</code> with the specified expiration time and the
+   * default expiration action <code>ExpirationAction.INVALIDATE</code>.
+   * 
-  
-  /** Constructs an <code>ExpirationAttributes</code> with the specified expiration time and
+
+  /**
+   * Constructs an <code>ExpirationAttributes</code> with the specified expiration time and
+   * 
-  
-  /** Returns the number of seconds before a region or value expires.
+
+  /**
+   * Returns the number of seconds before a region or value expires.
-   * @return the relative number of seconds before a region or value expires
-   * or zero if it will never expire
-   */  
+   * @return the relative number of seconds before a region or value expires or zero if it will
+   *         never expire
+   */
-  
-  /** Returns the action that should take place when this value or region expires.
+
+  /**
+   * Returns the action that should take place when this value or region expires.
-   */  
+   */
-  
+
-    ExpirationAttributes ea = (ExpirationAttributes)obj;
+    ExpirationAttributes ea = (ExpirationAttributes) obj;
-  
+
-  
-  /** Returns a string representation of this <code>ExpirationAttributes</code>. If the timeout
-   * is zero, returns <code>"NO EXPIRATION"</code>.
+
+  /**
+   * Returns a string representation of this <code>ExpirationAttributes</code>. If the timeout is
+   * zero, returns <code>"NO EXPIRATION"</code>.
+   * 
-    return "timeout: " + this.timeout +  ";action: " + this.action;
+    return "timeout: " + this.timeout + ";action: " + this.action;
-  
+
-    this.action = (ExpirationAction)DataSerializer.readObject(in);
+    this.action = (ExpirationAction) DataSerializer.readObject(in);
