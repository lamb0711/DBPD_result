GEODE-7400: Prevent RejectedExecutionException in FederatingManager (#4270)

Commit f0c96db73263bb1b3cb04558f2a720d70f43421f changed the
FederatingManager class so that it reuses the same ExecutorService
between restarts. After that change, if we start the manager after
previously starting and stopping it, we get RejectedExecutionException
because it tries to invoke a task on the same ExecutorService which has
been shut down.

This commit changes the FederatingManager so that it invokes a supplier
to get a new ExecutorService each time it is started to prevent the
RejectedExecutionException.

Co-authored-by: Aaron Lindsey <alindsey@pivotal.io>
Co-authored-by: Kirk Lund <klund@apache.org>
+import java.util.function.Supplier;
+  private final Supplier<ExecutorService> executorServiceSupplier;
+  private final MBeanProxyFactory proxyFactory;
+  private final MemberMessenger messenger;
+
-  private final ExecutorService executorService;
-  private final MBeanProxyFactory proxyFactory;
-  private final MemberMessenger messenger;
+  private ExecutorService executorService;
+  @VisibleForTesting
+    this(repo, system, service, cache, statisticsFactory, statisticsClock, proxyFactory, messenger,
+        () -> executorService);
+  }
+
+  FederatingManager(ManagementResourceRepo repo, InternalDistributedSystem system,
+      SystemManagementService service, InternalCache cache, StatisticsFactory statisticsFactory,
+      StatisticsClock statisticsClock, MBeanProxyFactory proxyFactory, MemberMessenger messenger,
+      Supplier<ExecutorService> executorServiceSupplier) {
-    this.executorService = executorService;
+    this.executorServiceSupplier = executorServiceSupplier;
+      executorService = executorServiceSupplier.get();
+
-  private void executeTask(Runnable task) {
+  private synchronized void executeTask(Runnable task) {
