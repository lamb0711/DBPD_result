GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-import com.gemstone.gemfire.cache.operations.OperationContext;
+import com.gemstone.gemfire.cache.operations.internal.ResourceOperationContext;
-public class QueryOperationContext extends OperationContext {
+public class QueryOperationContext extends ResourceOperationContext {
-  /** True if this is a post-operation context */
-  private boolean postOperation;
-
-   * 
-   * @param queryString
-   *                the query string for this operation
-   * @param regionNames
-   *                names of regions that are part of the query string
-   * @param postOperation
-   *                true to set the post-operation flag
+   *
+   * @param queryString   the query string for this operation
+   * @param regionNames   names of regions that are part of the query string
+   * @param postOperation true to set the post-operation flag
-  public QueryOperationContext(String queryString, Set regionNames,
-      boolean postOperation) {
+  public QueryOperationContext(String queryString, Set regionNames, boolean postOperation) {
+    this(OperationCode.QUERY, queryString, regionNames, postOperation);
+  }
+
+  QueryOperationContext(OperationCode code, String queryString, Set regionNames, boolean postOperation) {
+    super(Resource.DATA, code, postOperation);
-    this.queryResult = null;
-    this.postOperation = postOperation;
-   * 
-   * @param queryString
-   *                the query string for this operation
-   * @param regionNames
-   *                names of regions that are part of the query string
-   * @param postOperation
-   *                true to set the post-operation flag
-   * @param queryParams
-   *                the bind parameters for the query
+   *
+   * @param queryString   the query string for this operation
+   * @param regionNames   names of regions that are part of the query string
+   * @param postOperation true to set the post-operation flag
+   * @param queryParams   the bind parameters for the query
-  public QueryOperationContext(String queryString, Set regionNames,
-      boolean postOperation, Object[] queryParams) {
-    this(queryString, regionNames, postOperation);
+  public QueryOperationContext(String queryString, Set regionNames, boolean postOperation, Object[] queryParams) {
+    this(OperationCode.QUERY, queryString, regionNames, postOperation);
-  
-  /**
-   * Return the operation associated with the <code>OperationContext</code>
-   * object.
-   * 
-   * @return the <code>OperationCode</code> of this operation
-   */
-  @Override
-  public OperationCode getOperationCode() {
-    return OperationCode.QUERY;
-  }
-
-  /**
-   * True if the context is for post-operation.
-   */
-  @Override
-  public boolean isPostOperation() {
-    return this.postOperation;
-  }
-
-  /**
-   * Set the post-operation flag to true.
-   */
-  public void setPostOperation() {
-    this.postOperation = true;
-  }
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-
