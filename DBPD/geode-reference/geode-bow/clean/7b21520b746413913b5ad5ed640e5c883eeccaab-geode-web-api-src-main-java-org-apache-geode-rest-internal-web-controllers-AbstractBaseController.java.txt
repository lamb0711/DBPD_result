GEODE-1570 - developer REST API should be secured

* Merged with develop after org.apache package rename
* Moved classes to internal.
* this closes #251

-import org.apache.logging.log4j.Logger;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.util.Assert;
-import org.springframework.util.ClassUtils;
-import org.springframework.util.CollectionUtils;
-import org.springframework.util.StringUtils;
-import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
-
+import org.apache.geode.distributed.LeaseExpiredException;
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.i18n.LogWriterI18n;
-import org.apache.geode.internal.i18n.LocalizedStrings;
+import org.apache.geode.internal.security.IntegratedSecurityService;
+import org.apache.geode.internal.security.SecurityService;
+import org.apache.logging.log4j.Logger;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.util.Assert;
+import org.springframework.util.ClassUtils;
+import org.springframework.util.CollectionUtils;
+import org.springframework.util.StringUtils;
+import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
+
+  protected SecurityService securityService = IntegratedSecurityService.getSecurityService();
-      return new ResponseEntity<>(queryResultAsJson, headers, HttpStatus.OK);
+      return new ResponseEntity<String>(queryResultAsJson, headers, HttpStatus.OK);
-    }catch(org.apache.geode.distributed.LeaseExpiredException lee){
+    }catch(LeaseExpiredException lee){
-    }catch(org.apache.geode.distributed.LeaseExpiredException lee){
+    }catch(LeaseExpiredException lee){
-    }catch(org.apache.geode.distributed.LeaseExpiredException lee){
+    }catch(LeaseExpiredException lee){
-    } catch (org.apache.geode.distributed.LeaseExpiredException lee) {
+    } catch (LeaseExpiredException lee) {
-    } catch(org.apache.geode.distributed.LeaseExpiredException lee) {
+    } catch(LeaseExpiredException lee) {
-    } catch (org.apache.geode.distributed.LeaseExpiredException lee) {
+    } catch (LeaseExpiredException lee) {
-    } catch(org.apache.geode.distributed.LeaseExpiredException lee){
+    } catch(LeaseExpiredException lee){
-    }catch(org.apache.geode.distributed.LeaseExpiredException lee){
+    }catch(LeaseExpiredException lee){
-    String returnString = writer.toString();
-    returnString = returnString.replace("\n"," ");
-    returnString = returnString.replace("\t"," ");
-    return String.format("{\"message\" : \"%1$s\", \"stackTrace\" : \"%2$s\"}", t.getMessage(), returnString);
+    return String.format("{\"message\" : \"%1$s\", \"stackTrace\" : \"%2$s\"}", t.getMessage(), writer.toString());
-    } catch(org.apache.geode.distributed.LeaseExpiredException lee) {
+    } catch(LeaseExpiredException lee) {
