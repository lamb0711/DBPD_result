GEODE-5971: Refactor durable client commands to extend GfshCommand (#2858)


-import org.apache.geode.management.internal.cli.domain.MemberResult;
-    MemberResult memberResult = new MemberResult(memberNameOrId);
+    context.getResultSender().lastResult(createFunctionResult(memberNameOrId, durableClientId));
+  }
+
+  private CliFunctionResult createFunctionResult(String memberNameOrId, String durableClientId) {
-      if (cacheClientNotifier != null) {
-        CacheClientProxy ccp = cacheClientNotifier.getClientProxy(durableClientId);
-        if (ccp != null) {
-          boolean isClosed = cacheClientNotifier.closeDurableClientProxy(durableClientId);
-          if (isClosed) {
-            memberResult.setSuccessMessage(
-                CliStrings.format(CliStrings.CLOSE_DURABLE_CLIENTS__SUCCESS, durableClientId));
-          } else {
-            memberResult.setErrorMessage(
-                CliStrings.format(CliStrings.NO_CLIENT_FOUND_WITH_CLIENT_ID, durableClientId));
-          }
-        } else {
-          memberResult.setErrorMessage(
-              CliStrings.format(CliStrings.NO_CLIENT_FOUND_WITH_CLIENT_ID, durableClientId));
-        }
+      if (cacheClientNotifier == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.NO_CLIENT_FOUND);
+      }
+
+      CacheClientProxy ccp = cacheClientNotifier.getClientProxy(durableClientId);
+      if (ccp == null) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.format(CliStrings.NO_CLIENT_FOUND_WITH_CLIENT_ID, durableClientId));
+      }
+
+      boolean isClosed = cacheClientNotifier.closeDurableClientProxy(durableClientId);
+      if (isClosed) {
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.OK,
+            CliStrings.format(CliStrings.CLOSE_DURABLE_CLIENTS__SUCCESS, durableClientId));
-        memberResult.setErrorMessage(CliStrings.NO_CLIENT_FOUND);
+        return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+            CliStrings.format(CliStrings.NO_CLIENT_FOUND_WITH_CLIENT_ID, durableClientId));
-      memberResult.setExceptionMessage(e.getMessage());
-    } finally {
-      context.getResultSender().lastResult(memberResult);
+      return new CliFunctionResult(memberNameOrId, CliFunctionResult.StatusState.ERROR,
+          e.getMessage());
-  @Override
-  public String getId() {
-    return CloseDurableClientFunction.class.getName();
-  }
-
