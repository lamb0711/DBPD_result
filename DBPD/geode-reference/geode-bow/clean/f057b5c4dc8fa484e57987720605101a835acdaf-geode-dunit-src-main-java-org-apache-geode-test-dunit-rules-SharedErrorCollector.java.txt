GEODE-8125: Extract AccessibleErrorCollector from SharedErrorCollector (#5112)


-import java.lang.reflect.Field;
-import java.util.Collection;
+import org.apache.geode.test.junit.rules.accessible.AccessibleErrorCollector;
-  private static volatile VisibleErrorCollector errorCollector;
+  private static volatile AccessibleErrorCollector errorCollector;
-    VisibleErrorCollector allErrors = errorCollector;
+    AccessibleErrorCollector allErrors = errorCollector;
-    errorCollector = new VisibleErrorCollector();
+    errorCollector = new AccessibleErrorCollector();
-  /**
-   * Increases visibility of {@link #verify()} to public and uses reflection to acquire access to
-   * the {@code List} of {@code Throwable}s in {@link ErrorCollector}.
-   */
-  private static class VisibleErrorCollector extends ErrorCollector {
-
-    private final List<Throwable> visibleErrors;
-
-    private VisibleErrorCollector() {
-      visibleErrors = getErrorsReference();
-    }
-
-    @Override
-    public void verify() throws Throwable {
-      super.verify();
-    }
-
-    List<Throwable> errors() {
-      return visibleErrors;
-    }
-
-    void addErrors(Collection<Throwable> errors) {
-      visibleErrors.addAll(errors);
-    }
-
-    private List<Throwable> getErrorsReference() {
-      try {
-        Field superErrors = ErrorCollector.class.getDeclaredField("errors");
-        superErrors.setAccessible(true);
-        return (List<Throwable>) superErrors.get(this);
-      } catch (IllegalAccessException | NoSuchFieldException e) {
-        throw new RuntimeException(e);
-      }
-    }
-  }
