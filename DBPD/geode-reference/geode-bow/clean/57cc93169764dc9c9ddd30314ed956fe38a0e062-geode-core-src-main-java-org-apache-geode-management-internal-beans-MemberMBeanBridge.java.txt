GEODE-7710: Add getRedundancyZone to DistributionManager (#4809)

Avoids having to check instanceof and cast to
ClusterDistributionManager in MemberMBeanBridge.
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.DistributionManager;
-  private InternalDistributedSystem system;
-  private StatisticsManager statisticsManager;
-  private DistributionManager dm;
+  private final InternalDistributedSystem system;
+  private final StatisticsManager statisticsManager;
-  private MBeanStatsMonitor monitor;
+  private final MBeanStatsMonitor monitor;
-  private MemberLevelDiskMonitor diskMonitor;
-  private AggregateRegionStatsMonitor regionMonitor;
+  private final MemberLevelDiskMonitor diskMonitor;
+  private final AggregateRegionStatsMonitor regionMonitor;
-  private String osName = System.getProperty("os.name", "unknown");
-  private GCStatsMonitor gcMonitor;
-  private VMStatsMonitor vmStatsMonitor;
-  private MBeanStatsMonitor systemStatsMonitor;
-  private float instCreatesRate = 0;
-  private float instGetsRate = 0;
-  private float instPutsRate = 0;
-  private float instPutAllRate = 0;
+  private final String osName = System.getProperty("os.name", "unknown");
+  private final GCStatsMonitor gcMonitor;
+  private final VMStatsMonitor vmStatsMonitor;
+  private final MBeanStatsMonitor systemStatsMonitor;
+  private float instCreatesRate;
+  private float instGetsRate;
+  private float instPutsRate;
+  private float instPutAllRate;
-  private boolean cacheServer = false;
+  private boolean cacheServer;
-  private volatile boolean lockServicesStatsAdded = false;
+  private volatile boolean lockServicesStatsAdded;
-    dm = system.getDistributionManager();
-
-    if (dm instanceof ClusterDistributionManager) {
-      ClusterDistributionManager distManager =
-          (ClusterDistributionManager) system.getDistributionManager();
-      redundancyZone = distManager
-          .getRedundancyZone(cache.getInternalDistributedSystem().getDistributedMember());
-    }
+    redundancyZone = system.getDistributionManager()
+        .getRedundancyZone(cache.getInternalDistributedSystem().getDistributedMember());
-    monitor =
-        new MBeanStatsMonitor("MemberMXBeanMonitor");
+    monitor = new MBeanStatsMonitor("MemberMXBeanMonitor");
-    vmStatsMonitor =
-        new VMStatsMonitor("VMStatsMonitor");
+    vmStatsMonitor = new VMStatsMonitor("VMStatsMonitor");
-    systemStatsMonitor =
-        new MBeanStatsMonitor("SystemStatsManager");
+    systemStatsMonitor = new MBeanStatsMonitor("SystemStatsManager");
-    QueryDataFunction qDataFunction = new QueryDataFunction();
-    FunctionService.registerFunction(qDataFunction);
+    FunctionService.registerFunction(new QueryDataFunction());
-    if ((null != allocator)) {
+    if (null != allocator) {
-      Statistics[] systemStats;
-      systemStats = system.findStatisticsByType(LinuxSystemStats.getType());
+      Statistics[] systemStats = system.findStatisticsByType(LinuxSystemStats.getType());
-    final InternalDistributedSystem ids = dm.getSystem();
-    if (ids.isConnected()) {
+    if (system.isConnected()) {
-        if (ids.isConnected()) {
-          ids.disconnect();
+        if (system.isConnected()) {
+          system.disconnect();
-    if ((cache != null && !cache.getGatewayReceivers().isEmpty())) {
+    if (cache != null && !cache.getGatewayReceivers().isEmpty()) {
-    if ((cache != null && !cache.getGatewaySenders().isEmpty())) {
+    if (cache != null && !cache.getGatewaySenders().isEmpty()) {
-    } else if (ServerLauncher.getInstance() != null) {
+    }
+    if (ServerLauncher.getInstance() != null) {
-    // TODO implement for non-launcher processes and other GemFire processes (Managers, etc)...
-    return (cache != null && !cache.getGatewayReceivers().isEmpty());
+    return cache != null && !cache.getGatewayReceivers().isEmpty();
-    return (cache != null && !cache.getAllGatewaySenders().isEmpty());
+    return cache != null && !cache.getAllGatewaySenders().isEmpty();
-    } else {
-      return ManagementConstants.NOT_AVAILABLE_INT;
+    return ManagementConstants.NOT_AVAILABLE_INT;
