Merge branch 'release/1.5.0'

-import java.io.*;
+import java.io.ByteArrayOutputStream;
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Hashtable;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Properties;
+import java.util.Set;
+import java.util.TimerTask;
+import java.util.UUID;
-import javax.management.*;
+import javax.management.MBeanException;
+import javax.management.MalformedObjectNameException;
+import javax.management.Notification;
+import javax.management.ObjectName;
+import javax.management.RuntimeMBeanException;
+import javax.management.RuntimeOperationsException;
-import javax.management.openmbean.*;
+import javax.management.openmbean.CompositeData;
+import javax.management.openmbean.CompositeDataSupport;
+import javax.management.openmbean.CompositeType;
+import javax.management.openmbean.OpenDataException;
+import javax.management.openmbean.OpenType;
+import javax.management.openmbean.SimpleType;
+import javax.management.openmbean.TabularData;
+import javax.management.openmbean.TabularDataSupport;
+import javax.management.openmbean.TabularType;
-import org.apache.geode.admin.*;
+import org.apache.geode.admin.AdminException;
+import org.apache.geode.admin.CacheServer;
+import org.apache.geode.admin.CacheServerConfig;
+import org.apache.geode.admin.CacheVm;
+import org.apache.geode.admin.CacheVmConfig;
+import org.apache.geode.admin.DistributedSystemConfig;
+import org.apache.geode.admin.DistributionLocator;
+import org.apache.geode.admin.DistributionLocatorConfig;
+import org.apache.geode.admin.GemFireHealth;
+import org.apache.geode.admin.SystemMember;
+import org.apache.geode.admin.SystemMemberCacheEvent;
+import org.apache.geode.admin.SystemMemberCacheListener;
+import org.apache.geode.admin.SystemMemberRegionEvent;
+import org.apache.geode.admin.SystemMemberType;
-import org.apache.geode.internal.admin.*;
+import org.apache.geode.internal.admin.ApplicationVM;
+import org.apache.geode.internal.admin.ClientMembershipMessage;
+import org.apache.geode.internal.admin.GemFireVM;
+import org.apache.geode.internal.admin.GfManagerAgent;
+import org.apache.geode.internal.admin.StatAlert;
+import org.apache.geode.internal.admin.StatAlertDefinition;
-            new Notification(NOTIF_MEMBER_JOINED, ((ManagedResource) member).getObjectName(), // Pass
-                                                                                              // the
-                                                                                              // ObjName
-                                                                                              // of
-                                                                                              // the
-                                                                                              // Source
-                                                                                              // Member
+            // Pass the ObjName of the Source Member
+            new Notification(NOTIF_MEMBER_JOINED, ((ManagedResource) member).getObjectName(),
-        // String mess = "Gemfire AlertNotification: System Member Joined, System member Id: " +
-        // joined.getId().toString();
-        // sendEmail("Gemfire AlertNotification: Member Joined, ID: " + joined.getId().toString(),
-        // mess);
-            new Notification(NOTIF_MEMBER_LEFT, ((ManagedResource) member).getObjectName(), // Pass
-                                                                                            // the
-                                                                                            // ObjName
-                                                                                            // of
-                                                                                            // the
-                                                                                            // Source
-                                                                                            // Member
+            // Pass the ObjName of the Source Member
+            new Notification(NOTIF_MEMBER_LEFT, ((ManagedResource) member).getObjectName(),
-        // String mess = "Gemfire AlertNotification: System Member Left the system, System member
-        // Id: " + left.getId().toString();
-        // sendEmail("Gemfire AlertNotification: Member Left, ID: " + left.getId().toString(),
-        // mess);
-            new Notification(NOTIF_MEMBER_CRASHED, ((ManagedResource) member).getObjectName(), // Pass
-                                                                                               // the
-                                                                                               // ObjName
-                                                                                               // of
-                                                                                               // the
-                                                                                               // Source
-                                                                                               // Member
+            // Pass the ObjName of the Source Member
+            new Notification(NOTIF_MEMBER_CRASHED, ((ManagedResource) member).getObjectName(),
-        // String mess = "Gemfire AlertNotification: System Member Crashed, System member Id: " +
-        // crashed.getId().toString();
-        // sendEmail("Gemfire AlertNotification: Member Crashed, ID: " + crashed.getId().toString(),
-        // mess);
-        // String mess = "Gemfire AlertNotification: System Alert :" + alert.toString();
-        // sendEmail("Gemfire AlertNotification: System Alert", mess);
-    }
-    // catch (AdminException e) { logger.warn(e.getMessage(), e); throw e; }
-    catch (RuntimeException e) {
+    } catch (RuntimeException e) {
-    }
-    // catch (AdminException e) { logger.warn(e.getMessage(), e); throw e; }
-    catch (RuntimeException e) {
+    } catch (RuntimeException e) {
-  // TODO: yet to set the timer task
-  // private SystemTimer systemwideAlertNotificationScheduler = new SystemTimer();
-
-    // Number[] values = null;
-      // defId = Integer.valueOf(alert.getDefinitionId());
-      // values = alert.getValues();
-
-      // StatAlertDefinition statAlertDef = (StatAlertDefinition)ALERT_DEFINITIONS.get(defId);
-      // if (statAlertDef.getFunctionId() != 0) {
-      /*
-       * StatAlert with alert definitions having functions assigned will get evaluated at manager
-       * side only.
-       *
-       * Is combination of systemwide alerts with function valid? It should be & hence such
-       * evaluation should be skipped on manager side. Or is it to be evaluated at manager as well
-       * as aggragator?
-       */
-      // }
-
-      // TODO: is this object required? Or earlier canbe resused?
-      // sendEmail("Gemfire AlertNotification on Member:" + objName, buf.toString());
