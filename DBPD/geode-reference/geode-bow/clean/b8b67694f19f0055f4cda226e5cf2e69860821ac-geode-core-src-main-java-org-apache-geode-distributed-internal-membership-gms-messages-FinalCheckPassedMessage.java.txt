Merge branch 'develop' into feature/GEODE-7049

-import org.apache.geode.DataSerializer;
-import org.apache.geode.distributed.internal.ClusterDistributionManager;
-import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.Version;
+import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.GMSUtil;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+import org.apache.geode.internal.serialization.Version;
-public class FinalCheckPassedMessage extends HighPriorityDistributionMessage {
+public class FinalCheckPassedMessage extends AbstractGMSMessage {
-  private InternalDistributedMember suspect;
+  private GMSMember suspect;
-  public FinalCheckPassedMessage(InternalDistributedMember recipient,
-      InternalDistributedMember suspect) {
+  public FinalCheckPassedMessage(GMSMember recipient,
+      GMSMember suspect) {
-  public void process(ClusterDistributionManager dm) {
-    throw new IllegalStateException("this message is not intended to execute in a thread pool");
-  }
-
-  @Override
-  public void toData(DataOutput out) throws IOException {
-    DataSerializer.writeObject(suspect, out);
+  public void toData(DataOutput out,
+      SerializationContext context) throws IOException {
+    GMSUtil.writeMemberID(suspect, out, context);
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-    suspect = (InternalDistributedMember) DataSerializer.readObject(in);
+  public void fromData(DataInput in,
+      DeserializationContext context) throws IOException, ClassNotFoundException {
+    suspect = GMSUtil.readMemberID(in, context);
-  public InternalDistributedMember getSuspect() {
+  public GMSMember getSuspect() {
