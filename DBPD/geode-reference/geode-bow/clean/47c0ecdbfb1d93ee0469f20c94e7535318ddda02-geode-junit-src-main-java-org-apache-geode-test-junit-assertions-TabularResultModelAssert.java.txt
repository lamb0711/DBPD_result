GEODE-5971: refactor DescribeRegionCommand to use ResultModel and improve Tabular asserts

-import static org.assertj.core.api.Assertions.fail;
-
-import org.apache.commons.lang3.StringUtils;
-import org.assertj.core.api.ListAssert;
+  /**
+   * verifies that the table has the expected number of rows
+   */
-  public TabularResultModelAssert hasRowContaining(String... rowValues) {
-
-    for (int i = 0; i < actual.getRowSize(); i++) {
-      try {
-        hasRow(i).contains(rowValues);
-        return this;
-      } catch (AssertionError ignore) {
-      } ;
-    }
-    fail("Did not find [" + StringUtils.join(rowValues, ", ") + "] in any rows");
-    return null;
-  }
-
-
+  /**
+   * verifies that the table has the expected number of columns
+   */
-  public ListAssert<String> hasColumns() {
-    return assertThat(actual.getHeaders());
+  /**
+   * verifies that the table is empty
+   */
+  public void isEmpty() {
+    hasRowSize(0);
-   * return a ListAssert for a column of values
+   * return a ListAssert-like handle to assert on the header row
-  public ListAssert<String> hasColumn(String header) {
-    return assertThat(actual.getValuesInColumn(header));
+  public TabularResultModelRowAssert<String> hasColumns() {
+    return new TabularResultModelRowAssert<>(this, actual.getHeaders());
-   * return a ListAssert for a row of values
+   * return a ListAssert-like handle to assert on the values of a named column
-  public ListAssert<String> hasRow(int rowIndex) {
-    return assertThat(actual.getValuesInRow(rowIndex));
+  public TabularResultModelColumnAssert<String> hasColumn(String header) {
+    return new TabularResultModelColumnAssert<>(this, actual.getValuesInColumn(header));
+  }
+
+  /**
+   * return a ListAssert-like handle to assert on a specific row
+   */
+  public TabularResultModelRowAssert<String> hasRow(int rowIndex) {
+    return new TabularResultModelRowAssert<>(this, actual.getValuesInRow(rowIndex));
+  }
+
+  /**
+   * return a ListAssert-like handle to assert on any row
+   */
+  public TabularResultModelAnyRowAssert<String> hasAnyRow() {
+    return new TabularResultModelAnyRowAssert<>(this);
