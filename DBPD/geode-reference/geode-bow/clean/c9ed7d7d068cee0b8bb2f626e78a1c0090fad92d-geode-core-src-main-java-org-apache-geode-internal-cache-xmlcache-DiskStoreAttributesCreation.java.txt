GEODE-8283: Provide REST interface for disk-store creation (#5288)

* GEODE-8283: Provide REST interface for disk-store creation

- Provides create, get, list and delete operations
- Can create with locator only running

Co-Authored-By: Jason Huynh <jhuynh@vmware.com>

* Fix spotless issues

* Add missing documentation files to assembly

* Updating assembly validation txt (#4)

* Updating assembly validation txt
Trying to remove disk store folders after test

* Attempt to clear out disk dirs between runs

* Added temporary folder and forced disk dirs to use the absolute path

* Fix jq issues

* Disk store rest api (#5)

* Updating assembly validation txt
Trying to remove disk store folders after test

* Attempt to clear out disk dirs between runs

* Added temporary folder and forced disk dirs to use the absolute path

* Added tests for groups
Prevent removal of disk store from specific groups to be consistent with region api

* Add JQ testing for disk-store controller

* Change DiskDir size to be Integer

- spottless apply

* Fix serializables

* Remove Id field from DiskStore

- Rebase against develop

Co-authored-by: Jason Huynh <jhuynh@vmware.com>
Co-authored-by: Jason Huynh <huynhja@gmail.com>
-
-              new Object[] {Integer.valueOf(sizes.length), Integer.valueOf(diskDirs.length)}));
+              sizes.length, diskDirs.length));
-    // for (int i=0; i < disk_dirs.length; i++) {
-    // if (! disk_dirs[i].isDirectory()) {
-    //// throw new
-    // IllegalArgumentException(String.format("%s was not an existing directory for disk store
-    // %s.",new
-    // Object[] {disk_dirs[i], name}));
-    // if (!diskDirs[i].mkdirs()) {
-    // throw new RuntimeException("Cannot create directory" + diskDirs[i].getAbsolutePath() + "Num
-    // disk dirs to be created : " + disk_dirs.length + " Dir Name " + disk_dirs[i].getName());
-    // }
-    // }
-    // }
-
-  private void verifyNonNegativeDirSize(int[] sizes) {
-    for (int i = 0; i < sizes.length; i++) {
-      if (sizes[i] < 0) {
-        throw new IllegalArgumentException(
-            String.format("Dir size cannot be negative : %s for disk store %s",
-                new Object[] {Integer.valueOf(sizes[i]), name}));
-      }
-    }
-  }
