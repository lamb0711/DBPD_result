Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ * 
-@XmlType(name = "link", propOrder = { "method", "href", "relation" })
+@XmlType(name = "link", propOrder = {"method", "href", "relation"})
-  // This enum type is used in place of Spring's org.springframework.http.HttpMethod enum due to classpath issues
-  // between the GemFire Locator/Manager and the embedded HTTP service using Tomcat with Java/Tomcat's class resolution
+  // This enum type is used in place of Spring's org.springframework.http.HttpMethod enum due to
+  // classpath issues
+  // between the GemFire Locator/Manager and the embedded HTTP service using Tomcat with
+  // Java/Tomcat's class resolution
-  public Link() {
-  }
+  public Link() {}
-      && ObjectUtils.equals(getMethod(), that.getMethod());
+        && ObjectUtils.equals(getMethod(), that.getMethod());
-   * The HTTP Request-Line begins with a method token, followed by the Request-URI and the protocol version, and ending
-   * with CRLF.  However, this method just returns a String representation similar to the HTTP Request-Line based on
-   * values of the Link's properties, which only includes method and request URI.
+   * The HTTP Request-Line begins with a method token, followed by the Request-URI and the protocol
+   * version, and ending with CRLF. However, this method just returns a String representation
+   * similar to the HTTP Request-Line based on values of the Link's properties, which only includes
+   * method and request URI.
+   * 
-   * @see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html</a>
+   * @see <a href=
+   *      "http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html</a>
-    return getMethod().name().concat(StringUtils.SPACE).concat(UriUtils.decode(getHref().toString()));
+    return getMethod().name().concat(StringUtils.SPACE)
+        .concat(UriUtils.decode(getHref().toString()));
