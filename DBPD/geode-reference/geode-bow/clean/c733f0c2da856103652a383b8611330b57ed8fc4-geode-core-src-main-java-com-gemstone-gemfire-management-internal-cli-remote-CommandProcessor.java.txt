GEODE-17: Shiro Integration

GEODE-17: associate async request with correct shiro user

GEODE-17

GEODE-17: fix shiro dependency

+import java.lang.reflect.Method;
-import org.springframework.shell.core.Parser;
-import org.springframework.shell.event.ParseResult;
-
+import com.gemstone.gemfire.management.internal.security.ResourceOperation;
+import com.gemstone.gemfire.security.GemFireSecurityException;
+import com.gemstone.gemfire.security.ShiroUtil;
+import org.springframework.shell.core.Parser;
+import org.springframework.shell.event.ParseResult;
+
+        //do general authorization check here
+        Method method = parseResult.getMethod();
+        ResourceOperation resourceOperation = method.getAnnotation(ResourceOperation.class);
+        if(resourceOperation!=null){
+          ShiroUtil.authorize(resourceOperation);
+        }
+
-      } catch (RuntimeException e) {
+      } catch (GemFireSecurityException e) {
+        setLastExecutionStatus(1);
+        if (logWrapper.infoEnabled()) {
+          logWrapper.info("Could not execute \""+cmdStmt.getCommandString()+"\".", e);
+        }
+        return ResultBuilder.createGemFireUnAuthorizedErrorResult("Unauthorized while processing command <" +cmdStmt.getCommandString()+"> Reason : " + e.getMessage());
+      }catch (RuntimeException e) {
