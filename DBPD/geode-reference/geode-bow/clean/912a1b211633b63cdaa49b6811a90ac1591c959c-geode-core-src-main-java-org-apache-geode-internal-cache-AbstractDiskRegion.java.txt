GEODE-4902: Refactor LogMarker class and usage (#1678)

* GEODE-4902: Refactor LogMarker and usage
* Distinguish those markers at the TRACE and DEBUG levels (now Markers named *_VERBOSE) from those that log at a coarser grainularity (now Markers named *_MARKER)
* Suppress only *_VERBOSE markers by default, from previous behavior of suppressing all markers.
* Refactor some pathological log checks, e.g., change a log from debug to trace when it is gated behind ifTraceEnabled block.
* Remove unused Markers.
* Remove any log marker logic from AdminWaiters exception message generation.  Exceptions now always include a full message.
* Remove marker-gated print to System.out in PersistentOplogSet -- direct calls to System.out should not exist in that class.
* Add marker EVENT_ID_TO_STRING_VERBOSE to explicitly distinguish instance of marker used in logic not immediately consumed by a logger.  The consumption of EventId::toString should only exist at logging in any event.
**
* Remove nearby dead code and dead code detected during marker removal.
* Expand wildcard imports in touched files.
* Remove TODO comments, at least one of which was a decade old.
* Collapse nearby, redundant catch blocks
* Remove empty finally blocks
* Update documentation page to refer to GEODE_VERBOSE, from deprecated GEMFIRE_VERBOSE
* The change in log marker names causes one class to compile larger.  Updated sanctionedDataSerializables.

-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - member offline {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - member offline {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - member offline and equal {}",
-          getDiskStoreID().abbrev(), this.getName(), persistentID);
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE,
+          "PersistentView {} - {} - member offline and equal {}", getDiskStoreID().abbrev(),
+          this.getName(), persistentID);
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - member online {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - member online {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - member removed {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - member removed {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - member revoked {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - member revoked {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - initializing local id: {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - initializing local id: {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - initialized local id: {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - initialized local id: {}",
-      if (logger.isDebugEnabled()) {
-        logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - endDestroyDataStorage: {}",
-            getDiskStoreID().abbrev(), this.getName(), getMyPersistentID());
+      if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+        logger.trace(LogMarker.PERSIST_VERBOSE,
+            "PersistentView {} - {} - endDestroyDataStorage: {}", getDiskStoreID().abbrev(),
+            this.getName(), getMyPersistentID());
-      if (logger.isDebugEnabled()) {
-        logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - endDestroy: {}",
+      if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+        logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - endDestroy: {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - beginDestroy: {}",
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE, "PersistentView {} - {} - beginDestroy: {}",
-    if (logger.isDebugEnabled()) {
-      logger.trace(LogMarker.PERSIST, "PersistentView {} - {} - beginDestroyDataStorage: {}",
-          getDiskStoreID().abbrev(), this.getName(), getMyPersistentID());
+    if (logger.isTraceEnabled(LogMarker.PERSIST_VERBOSE)) {
+      logger.trace(LogMarker.PERSIST_VERBOSE,
+          "PersistentView {} - {} - beginDestroyDataStorage: {}", getDiskStoreID().abbrev(),
+          this.getName(), getMyPersistentID());
-    if (isBucket() && !logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY)) {
+    if (isBucket() && !logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY_VERBOSE)) {
-    if (logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY)) {
+    if (logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY_VERBOSE)) {
-    if (isBucket() && logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY)) {
+    if (isBucket() && logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY_VERBOSE)) {
-    if (logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY)) {
+    if (logger.isTraceEnabled(LogMarker.PERSIST_RECOVERY_VERBOSE)) {
-    // TODO: make this a flag
-    // if (isBucket() && !DiskStoreImpl.TRACE_RECOVERY) {
-    // name = getPrName();
-    // }
-   *
-   * @param msg
-   *
-   * @param msg
-    // TODO - RVV - I'm not sure about this recordGCVersion method. It seems
-    // like it's not doing the right thing if the current member is the member
-    // we just recovered.
