Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A message sent to a data store telling that data store to globally
- * destroy the region on behalf of a PR accessor.
+ * A message sent to a data store telling that data store to globally destroy the region on behalf
+ * of a PR accessor.
-public final class DestroyRegionOnDataStoreMessage extends PartitionMessage
-  {
+public final class DestroyRegionOnDataStoreMessage extends PartitionMessage {
-  private DestroyRegionOnDataStoreMessage(InternalDistributedMember recipient, int regionId, ReplyProcessor21 rp, Object callbackArg) {
+  private DestroyRegionOnDataStoreMessage(InternalDistributedMember recipient, int regionId,
+      ReplyProcessor21 rp, Object callbackArg) {
-   * Sends a DestroyRegionOnDataStoreMessage requesting that another VM destroy an existing
-   * region
+   * Sends a DestroyRegionOnDataStoreMessage requesting that another VM destroy an existing region
-  public static void send(InternalDistributedMember recipient, PartitionedRegion r, Object callbackArg)
-  {
+  public static void send(InternalDistributedMember recipient, PartitionedRegion r,
+      Object callbackArg) {
-    DestroyRegionOnDataStoreMessage m = new DestroyRegionOnDataStoreMessage(recipient, r.getPRId(), rp, callbackArg);
+    DestroyRegionOnDataStoreMessage m =
+        new DestroyRegionOnDataStoreMessage(recipient, r.getPRId(), rp, callbackArg);
-  
+
-  protected boolean operateOnPartitionedRegion(DistributionManager dm, 
-      PartitionedRegion pr, long startTime) throws CacheException {
+  protected boolean operateOnPartitionedRegion(DistributionManager dm, PartitionedRegion pr,
+      long startTime) throws CacheException {
-    if(pr == null || !pr.isInitialized()) {
-    	return true;
+    if (pr == null || !pr.isInitialized()) {
+      return true;
-    
-    
+
+
-  
+
-  public int getProcessorType()
-  {
+  public int getProcessorType() {
+
-  public final void fromData(final DataInput in)
-      throws IOException, ClassNotFoundException {
+  public final void fromData(final DataInput in) throws IOException, ClassNotFoundException {
-    callbackArg= DataSerializer.readObject(in);
+    callbackArg = DataSerializer.readObject(in);
-  public final void toData(final DataOutput out)
-      throws IOException {
+  public final void toData(final DataOutput out) throws IOException {
