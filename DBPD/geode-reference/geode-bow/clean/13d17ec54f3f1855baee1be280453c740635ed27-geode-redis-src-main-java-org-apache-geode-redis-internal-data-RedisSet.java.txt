GEODE-8313: Improve RedisData synchronization for toData (#5318)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
-        members.remove(memberToPop);
+        membersRemove(memberToPop);
-
-      members.addAll(addsDeltaInfo.getAdds());
+      membersAddAll(addsDeltaInfo);
-      members.removeAll(remsDeltaInfo.getRemoves());
+      membersRemoveAll(remsDeltaInfo);
-  // DATA SERIALIZABLE
+  /**
+   * Since GII (getInitialImage) can come in and call toData while other threads
+   * are modifying this object, the striped executor will not protect toData.
+   * So any methods that modify "members" needs to be thread safe with toData.
+   */
-  public void toData(DataOutput out) throws IOException {
+  public synchronized void toData(DataOutput out) throws IOException {
+  private synchronized boolean membersAdd(ByteArrayWrapper memberToAdd) {
+    return members.add(memberToAdd);
+  }
+
+  private boolean membersRemove(ByteArrayWrapper memberToRemove) {
+    return members.remove(memberToRemove);
+  }
+
+  private synchronized boolean membersAddAll(AddsDeltaInfo addsDeltaInfo) {
+    return members.addAll(addsDeltaInfo.getAdds());
+  }
+
+  private synchronized boolean membersRemoveAll(RemsDeltaInfo remsDeltaInfo) {
+    return members.removeAll(remsDeltaInfo.getRemoves());
+  }
+
+
-    membersToAdd.removeIf(memberToAdd -> !members.add(memberToAdd));
+    membersToAdd.removeIf(memberToAdd -> !membersAdd(memberToAdd));
-    membersToRemove.removeIf(memberToRemove -> !members.remove(memberToRemove));
+    membersToRemove.removeIf(memberToRemove -> !membersRemove(memberToRemove));
