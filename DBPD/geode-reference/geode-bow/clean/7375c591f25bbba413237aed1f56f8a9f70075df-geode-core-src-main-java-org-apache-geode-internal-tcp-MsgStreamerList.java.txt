GEODE-8020: buffer management problems (#5048)

* GEODE-8020: buffer management problems

This fixes some buffer handling in MsgStreamerList and alters
MstStreamer to avoid creating MsgStreamerList and VersionedMsgStreamers
during normal, non-upgrade, operations.

It also changes NioSslEngine to use synchronization in more places,
notably the close() method, which was possibly allowing multiple threads to
change the state of the engine.

* revert unnecessary change to ClusterCommunicationsDUnitTest

* fixing another null version check

* renamed new BufferPool property

* restore logging of ssl exceptions
-        // TODO: shouldn't we call continue here?
-        // It seems wrong to call writeMessage on a streamer we have just released.
-        // But why do we call release on a streamer when we had an exception on one
-        // of the previous streamer?
-        // release clears the direct bb and returns it to the pool but leaves
-        // it has the "buffer". THen we call writeMessage and it will use "buffer"
-        // that has also been returned to the pool.
-        // I think we only have a MsgStreamerList when a DS has a mix of versions
-        // which usually is just during a rolling upgrade so that might be why we
-        // haven't noticed this causing a bug.
-      }
-      try {
-        result += streamer.writeMessage();
-        // if there is an exception we need to finish the
-        // loop and release the other streamer's buffers
-      } catch (RuntimeException e) {
-        ex = e;
-      } catch (IOException e) {
-        ioex = e;
+      } else {
+        try {
+          result += streamer.writeMessage();
+          // if there is an exception we need to finish the
+          // loop and release the other streamer's buffers
+        } catch (RuntimeException e) {
+          ex = e;
+        } catch (IOException e) {
+          ioex = e;
+        }
