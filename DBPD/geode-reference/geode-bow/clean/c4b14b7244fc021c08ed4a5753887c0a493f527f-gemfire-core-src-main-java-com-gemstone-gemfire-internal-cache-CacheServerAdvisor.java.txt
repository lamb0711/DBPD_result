Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

Conflicts:
	gemfire-core/src/main/java/com/gemstone/gemfire/distributed/internal/PooledExecutorWithDMStats.java
	gemfire-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheClientNotifier.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/i18n/ParentLocalizedStrings.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/logging/LogService.java
	gemfire-core/src/test/java/com/gemstone/gemfire/cache/client/internal/AutoConnectionSourceWithUDPDUnitTest.java
	gemfire-core/src/test/java/com/gemstone/gemfire/internal/FDDUnitTest.java
	gemfire-core/src/test/resources/com/gemstone/gemfire/codeAnalysis/sanctionedSerializables.txt

- * Used to give advise to a bridge server.
- * Bridge server currently need to know about controller's
+ * Used to give advice to a cache server.
+ * Cache server currently need to know about controller's
-public class BridgeServerAdvisor extends GridAdvisor {
+public class CacheServerAdvisor extends GridAdvisor {
-  /** Creates a new instance of BridgeServerAdvisor */
-  private BridgeServerAdvisor(DistributionAdvisee server) {
+  private CacheServerAdvisor(DistributionAdvisee server) {
-  public static BridgeServerAdvisor createBridgeServerAdvisor(DistributionAdvisee server) {
-    BridgeServerAdvisor advisor = new BridgeServerAdvisor(server);
+  public static CacheServerAdvisor createCacheServerAdvisor(DistributionAdvisee server) {
+    CacheServerAdvisor advisor = new CacheServerAdvisor(server);
-    return "BridgeServerAdvisor for " + getAdvisee().getFullPath();
+    return "CacheServerAdvisor for " + getAdvisee().getFullPath();
-    return new BridgeServerProfile(memberId, version);
+    return new CacheServerProfile(memberId, version);
-   * Describes a bridge server for distribution purposes.
+   * Describes a cache server for distribution purposes.
-  public static class BridgeServerProfile extends GridAdvisor.GridProfile {
+  public static class CacheServerProfile extends GridAdvisor.GridProfile {
-    public BridgeServerProfile() {
+    public CacheServerProfile() {
-    public BridgeServerProfile(InternalDistributedMember memberId, int version) {
+    public CacheServerProfile(InternalDistributedMember memberId, int version) {
-    public BridgeServerProfile(BridgeServerProfile toCopy) {
+    public CacheServerProfile(CacheServerProfile toCopy) {
-     * Used to process an incoming bridge server profile. Any controller in this
-     * vm needs to be told about this incoming new bridge server. The reply
+     * Used to process an incoming cache server profile. Any controller in this
+     * vm needs to be told about this incoming new cache server. The reply
-      // tell local controllers about this bridge server
+      // tell local controllers about this cache server
-      // for QRM messaging we need bridge servers to know about each other
+      // for QRM messaging we need cache servers to know about each other
-      return BRIDGE_SERVER_PROFILE;
+      return CACHE_SERVER_PROFILE;
