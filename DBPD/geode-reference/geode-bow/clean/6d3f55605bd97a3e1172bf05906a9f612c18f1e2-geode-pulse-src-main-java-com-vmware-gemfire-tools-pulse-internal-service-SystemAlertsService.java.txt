GEODE-907: Converted core functionality to use jackson

-import javax.servlet.http.HttpServletRequest;
-
+import com.fasterxml.jackson.databind.JsonNode;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.node.ArrayNode;
+import com.fasterxml.jackson.databind.node.ObjectNode;
+import com.vmware.gemfire.tools.pulse.internal.data.Cluster;
+import com.vmware.gemfire.tools.pulse.internal.data.Repository;
+import com.vmware.gemfire.tools.pulse.internal.util.StringUtils;
-import com.vmware.gemfire.tools.pulse.internal.data.Cluster;
-import com.vmware.gemfire.tools.pulse.internal.data.Repository;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONArray;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONException;
-import com.vmware.gemfire.tools.pulse.internal.json.JSONObject;
-import com.vmware.gemfire.tools.pulse.internal.util.StringUtils;
+import javax.servlet.http.HttpServletRequest;
-  public JSONObject execute(final HttpServletRequest request) throws Exception {
+  private static final ObjectMapper mapper = new ObjectMapper();
+
+  public ObjectNode tempExecute(final HttpServletRequest request) throws Exception {
-    JSONObject responseJSON = new JSONObject();
+    ObjectNode responseJSON = mapper.createObjectNode();
-    try {
-      JSONObject requestDataJSON = new JSONObject(
-          request.getParameter("pulseData"));
-      int pageNumber = 1; // Default
-      String strPageNumber = requestDataJSON.getJSONObject("SystemAlerts")
-          .getString("pageNumber");
-      if (StringUtils.isNotNullNotEmptyNotWhiteSpace(strPageNumber)) {
-        try {
-          pageNumber = Integer.valueOf(strPageNumber);
-        } catch (NumberFormatException e) {
-        }
+    JsonNode requestDataJSON = mapper.readTree(request.getParameter("pulseData"));
+    int pageNumber = 1; // Default
+    String strPageNumber = requestDataJSON.get("SystemAlerts").get("pageNumber").textValue();
+    if (StringUtils.isNotNullNotEmptyNotWhiteSpace(strPageNumber)) {
+      try {
+        pageNumber = Integer.valueOf(strPageNumber);
+      } catch (NumberFormatException e) {
-
-      // clucter's Members
-      responseJSON.put("systemAlerts", getAlertsJson(cluster, pageNumber));
-      responseJSON.put("pageNumber", cluster.getNotificationPageNumber());
-      responseJSON.put("connectedFlag", cluster.isConnectedFlag());
-      responseJSON.put("connectedErrorMsg", cluster.getConnectionErrorMsg());
-
-    } catch (JSONException e) {
-      throw new Exception(e);
+    // cluster's Members
+    responseJSON.put("systemAlerts", getAlertsJson(cluster, pageNumber));
+    responseJSON.put("pageNumber", cluster.getNotificationPageNumber());
+    responseJSON.put("connectedFlag", cluster.isConnectedFlag());
+    responseJSON.put("connectedErrorMsg", cluster.getConnectionErrorMsg());
+
-  public static JSONObject getAlertsJson(Cluster cluster, int pageNumber)
-      throws JSONException {
+  public static ObjectNode getAlertsJson(Cluster cluster, int pageNumber) {
-    JSONObject alertsJsonObject = new JSONObject();
+    ObjectNode alertsJsonObject = mapper.createObjectNode();
-      JSONArray errorJsonArray = new JSONArray();
-      JSONArray severeJsonArray = new JSONArray();
-      JSONArray warningJsonArray = new JSONArray();
-      JSONArray infoJsonArray = new JSONArray();
+      ArrayNode errorJsonArray = mapper.createArrayNode();
+      ArrayNode severeJsonArray = mapper.createArrayNode();
+      ArrayNode warningJsonArray = mapper.createArrayNode();
+      ArrayNode infoJsonArray = mapper.createArrayNode();
-        JSONObject objAlertJson = new JSONObject();
+        ObjectNode objAlertJson = mapper.createObjectNode();
-          severeJsonArray.put(objAlertJson);
+          severeJsonArray.add(objAlertJson);
-          errorJsonArray.put(objAlertJson);
+          errorJsonArray.add(objAlertJson);
-          warningJsonArray.put(objAlertJson);
+          warningJsonArray.add(objAlertJson);
-          infoJsonArray.put(objAlertJson);
+          infoJsonArray.add(objAlertJson);
