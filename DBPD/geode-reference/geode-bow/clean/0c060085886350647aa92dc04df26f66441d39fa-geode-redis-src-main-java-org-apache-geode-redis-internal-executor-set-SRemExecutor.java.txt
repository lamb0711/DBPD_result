GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4781)

* Revert "Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)"

This reverts commit f0982cdedf1b122f734919d0647434cca33ec254.

* Fix sporadic test failures for concurrent HSetNX
+import java.util.Set;
+import org.apache.geode.cache.TimeoutException;
+import org.apache.geode.redis.internal.AutoCloseableLock;
-  private final int NONE_REMOVED = 0;
+  private static final int NONE_REMOVED = 0;
-    @SuppressWarnings("unchecked")
-    Region<ByteArrayWrapper, Boolean> keyRegion =
-        (Region<ByteArrayWrapper, Boolean>) context.getRegionProvider().getRegion(key);
-    if (keyRegion == null) {
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NONE_REMOVED));
-      return;
-    }
+    Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
+    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
+      Set<ByteArrayWrapper> set = region.get(key);
-    for (int i = 2; i < commandElems.size(); i++) {
-      Object oldVal;
-      oldVal = keyRegion.remove(new ByteArrayWrapper(commandElems.get(i)));
-      if (oldVal != null)
-        numRemoved++;
+      if (set == null || set.isEmpty()) {
+        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NONE_REMOVED));
+        return;
+      }
+
+      for (int i = 2; i < commandElems.size(); i++) {
+        if (set.remove(new ByteArrayWrapper(commandElems.get(i)))) {
+          numRemoved++;
+        }
+      }
+
+      region.put(key, set);
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+      command.setResponse(
+          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
+      return;
+    } catch (TimeoutException e) {
+      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
+          "Timeout acquiring lock. Please try again."));
+      return;
