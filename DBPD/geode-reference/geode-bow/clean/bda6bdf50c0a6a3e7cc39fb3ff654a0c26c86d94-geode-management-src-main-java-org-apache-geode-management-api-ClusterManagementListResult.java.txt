GEODE-7717: ClusterManagementListResult should show a list of EntityInfo (#4673)

* only show links in the EntityInfo level
* rework list member responses

-import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
-import com.fasterxml.jackson.annotation.JsonProperty;
-  /**
-   * for internal use only
-   */
+
-  /**
-   * for internal use only
-   */
-  // Override the mapper setting so that we always show result
-  @JsonInclude
-  @JsonProperty
-  private List<EntityGroupInfo<T, R>> result = new ArrayList<>();
+  private final Map<String, EntityInfo<T, R>> entities = new HashMap<>();
-  public List<EntityGroupInfo<T, R>> getResult() {
-    return result;
+  @JsonIgnore
+  public List<EntityGroupInfo<T, R>> getEntityGroupInfo() {
+    return entities.values().stream()
+        .flatMap(x -> x.getGroups().stream())
+        .collect(Collectors.toList());
+  }
+
+  // this annotation makes sure we always show the result even though it's an empty list
+  @JsonInclude
+  public List<EntityInfo<T, R>> getResult() {
+    return entities.values().stream().collect(Collectors.toList());
+  }
+
+  public void setResult(List<EntityInfo<T, R>> entities) {
+    this.entities.clear();
+    for (EntityInfo entity : entities) {
+      this.entities.put(entity.getId(), entity);
+    }
+  }
+
+  public void addEntityInfo(EntityInfo<T, R> entityInfo) {
+    this.entities.put(entityInfo.getId(), entityInfo);
+  }
+
+  @JsonIgnore
+  public void setEntityGroupInfo(List<EntityGroupInfo<T, R>> entityGroupInfos) {
+    this.entities.clear();
+    for (EntityGroupInfo entityGroupInfo : entityGroupInfos) {
+      String id = entityGroupInfo.getConfiguration().getId();
+      EntityInfo<T, R> entity = this.entities.get(id);
+      if (entity == null) {
+        entity = new EntityInfo<>();
+        entity.setId(id);
+        this.entities.put(id, entity);
+      }
+      entity.getGroups().add(entityGroupInfo);
+    }
-    return result.stream().map(EntityGroupInfo::getConfiguration).collect(Collectors.toList());
+    return getEntityGroupInfo().stream().map(EntityGroupInfo::getConfiguration)
+        .collect(Collectors.toList());
-    return result.stream().flatMap(r -> r.getRuntimeInfo().stream()).collect(Collectors.toList());
-  }
-
-  /**
-   * for internal use only
-   */
-  public void setResult(List<EntityGroupInfo<T, R>> result) {
-    this.result = result;
+    return getEntityGroupInfo().stream().flatMap(r -> r.getRuntimeInfo().stream())
+        .collect(Collectors.toList());
