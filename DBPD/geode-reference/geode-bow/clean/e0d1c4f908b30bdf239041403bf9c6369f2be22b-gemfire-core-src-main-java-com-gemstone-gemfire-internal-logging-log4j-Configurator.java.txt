Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

+import org.apache.logging.log4j.core.Appender;
+import org.apache.logging.log4j.core.filter.AbstractFilterable;
-      LogService.setFastLoggerDebugAvailableFlag();
+      LogService.configureFastLoggerDelegating();
+
+  public static boolean hasContextWideFilter(final Configuration config) {
+    return config.hasFilter();
+  }
+  
+  public static boolean hasAppenderFilter(final Configuration config) {
+    for (Appender appender : config.getAppenders().values()) {
+      if (appender instanceof AbstractFilterable) {
+        if (((AbstractFilterable) appender).hasFilter()) {
+          return true;
+        }
+      }
+    }
+    return false;
+  }
+  
+  public static boolean hasDebugOrLower(final Configuration config) {
+    for (LoggerConfig loggerConfig : config.getLoggers().values()) {
+      boolean isDebugOrLower = loggerConfig.getLevel().isLessSpecificThan(Level.DEBUG);
+      if (isDebugOrLower) {
+        return true;
+      }
+    }
+    return false;
+  }
+  
+  public static boolean hasLoggerFilter(final Configuration config) {
+    for (LoggerConfig loggerConfig : config.getLoggers().values()) {
+      boolean isRoot = loggerConfig.getName().equals("");
+      boolean isGemFire = loggerConfig.getName().startsWith(LogService.BASE_LOGGER_NAME);
+      boolean hasFilter = loggerConfig.hasFilter();
+      boolean isGemFireVerboseFilter = hasFilter && LogService.GEMFIRE_VERBOSE_FILTER.equals(loggerConfig.getFilter().toString());
+      
+      if (isRoot || isGemFire) {
+        // check for Logger Filter
+        if (hasFilter && !isGemFireVerboseFilter) {
+          return true;
+        }
+      }
+    }
+    return false;
+  }
+  
+  public static boolean hasAppenderRefFilter(final Configuration config) {
+    for (LoggerConfig loggerConfig : config.getLoggers().values()) {
+      boolean isRoot = loggerConfig.getName().equals("");
+      boolean isGemFire = loggerConfig.getName().startsWith(LogService.BASE_LOGGER_NAME);
+      boolean hasFilter = loggerConfig.hasFilter();
+      boolean isGemFireVerboseFilter = hasFilter && LogService.GEMFIRE_VERBOSE_FILTER.equals(loggerConfig.getFilter().toString());
+      
+      if (isRoot || isGemFire) {
+        // check for AppenderRef Filter
+        for (AppenderRef appenderRef : loggerConfig.getAppenderRefs()) {
+          if (appenderRef.getFilter() != null) {
+            return true;
+          }
+        }
+      }
+    }
+    return false;
+  }
