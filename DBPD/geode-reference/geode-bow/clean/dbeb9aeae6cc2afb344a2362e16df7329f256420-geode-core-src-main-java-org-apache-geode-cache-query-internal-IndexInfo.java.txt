Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-import org.apache.geode.cache.query.IndexType;
-import org.apache.geode.cache.query.internal.parse.OQLLexerTokenTypes;
-public class IndexInfo
-{
+public class IndexInfo {
-  IndexInfo(CompiledValue key, CompiledValue path, IndexProtocol index,
-      int matchLevel, int mapping[], int op) {
+  IndexInfo(CompiledValue key, CompiledValue path, IndexProtocol index, int matchLevel,
+      int mapping[], int op) {
-  
-  Object evaluateIndexKey(ExecutionContext context) throws FunctionDomainException, TypeMismatchException, NameResolutionException, QueryInvocationTargetException {
-    if(((AbstractIndex)_index).isMapType()) {
-       //assert _path.getType() == OQLLexerTokenTypes.METHOD_INV;
-       //Get the map key & value. both need to be passed as index key.      
-       CompiledValue mapKey = ((MapIndexable)this._path).getMapLookupKey();
-       return new Object[]{ this._key.evaluate(context),mapKey.evaluate(context)};
-    }else {
+
+  Object evaluateIndexKey(ExecutionContext context) throws FunctionDomainException,
+      TypeMismatchException, NameResolutionException, QueryInvocationTargetException {
+    if (((AbstractIndex) _index).isMapType()) {
+      // assert _path.getType() == OQLLexerTokenTypes.METHOD_INV;
+      // Get the map key & value. both need to be passed as index key.
+      CompiledValue mapKey = ((MapIndexable) this._path).getMapLookupKey();
+      return new Object[] {this._key.evaluate(context), mapKey.evaluate(context)};
+    } else {
-  
+
-   
+
