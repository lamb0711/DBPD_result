Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An {@link AuthInitialize} implementation that obtains the user name and
- * password as the credentials from the given set of properties. If 
- * keep-extra-props property exits, it will copy rest of the
- * properties provided in getCredential props argument will also be 
- * copied as new credentials.
+ * An {@link AuthInitialize} implementation that obtains the user name and password as the
+ * credentials from the given set of properties. If keep-extra-props property exits, it will copy
+ * rest of the properties provided in getCredential props argument will also be copied as new
+ * credentials.
-  public Properties getCredentials(final Properties securityProperties, final DistributedMember server, final boolean isPeer) throws AuthenticationFailedException {
-    final Properties securityPropertiesCopy = super.getCredentials(securityProperties, server, isPeer);
+  public Properties getCredentials(final Properties securityProperties,
+      final DistributedMember server, final boolean isPeer) throws AuthenticationFailedException {
+    final Properties securityPropertiesCopy =
+        super.getCredentials(securityProperties, server, isPeer);
-    	for (Iterator it = securityProperties.keySet().iterator(); it.hasNext();) {
-    		final String key = (String) it.next();
-    		if (key.startsWith(SECURITY_PREFIX) &&
-    		    key.equalsIgnoreCase(USER_NAME) == false &&
-    		    key.equalsIgnoreCase(PASSWORD) == false &&
-    		    key.equalsIgnoreCase(EXTRA_PROPS) == false) {
-    			securityPropertiesCopy.setProperty(key, securityProperties.getProperty(key));
-    		}
-    	}
-    	this.securityLogWriter.fine("got everything and now have: " + securityPropertiesCopy.keySet().toString());
+      for (Iterator it = securityProperties.keySet().iterator(); it.hasNext();) {
+        final String key = (String) it.next();
+        if (key.startsWith(SECURITY_PREFIX) && key.equalsIgnoreCase(USER_NAME) == false
+            && key.equalsIgnoreCase(PASSWORD) == false
+            && key.equalsIgnoreCase(EXTRA_PROPS) == false) {
+          securityPropertiesCopy.setProperty(key, securityProperties.getProperty(key));
+        }
+      }
+      this.securityLogWriter
+          .fine("got everything and now have: " + securityPropertiesCopy.keySet().toString());
