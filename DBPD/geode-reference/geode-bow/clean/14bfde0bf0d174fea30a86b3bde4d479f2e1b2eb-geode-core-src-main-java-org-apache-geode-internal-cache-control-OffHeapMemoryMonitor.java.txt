Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingThread;
-      ThreadGroup group =
-          LoggingThreadGroup.createThreadGroup("OffHeapMemoryMonitor Threads", logger);
-      Thread t = new Thread(group, this.offHeapMemoryUsageListener);
-      t.setName(t.getName() + " OffHeapMemoryListener");
+      Thread t =
+          new LoggingThread("OffHeapMemoryListener", this.offHeapMemoryUsageListener);
-      t.setDaemon(true);
-            LocalizedStrings.MemoryThresholds_CRITICAL_PERCENTAGE_GT_ZERO_AND_LTE_100
-                .toLocalizedString());
+            "Critical percentage must be greater than 0.0 and less than or equal to 100.0.");
-            LocalizedStrings.OffHeapMemoryMonitor_NO_OFF_HEAP_MEMORY_HAS_BEEN_CONFIGURED
-                .toLocalizedString());
+            "No off-heap memory has been configured.");
-            LocalizedStrings.MemoryThresholds_CRITICAL_PERCENTAGE_GTE_EVICTION_PERCENTAGE
-                .toLocalizedString());
+            "Critical percentage must be greater than the eviction percentage.");
-            LocalizedStrings.MemoryThresholds_EVICTION_PERCENTAGE_GT_ZERO_AND_LTE_100
-                .toLocalizedString());
+            "Eviction percentage must be greater than 0.0 and less than or equal to 100.0.");
-            LocalizedStrings.OffHeapMemoryMonitor_NO_OFF_HEAP_MEMORY_HAS_BEEN_CONFIGURED
-                .toLocalizedString());
+            "No off-heap memory has been configured.");
-            LocalizedStrings.MemoryMonitor_EVICTION_PERCENTAGE_LTE_CRITICAL_PERCENTAGE
-                .toLocalizedString());
+            "Eviction percentage must be less than the critical percentage.");
-      logger.error(
-          LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_CRITICAL_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+      logger.error("Member: {} above {} critical threshold",
+          new Object[] {event.getMember(), "off-heap"});
-      logger.error(
-          LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_CRITICAL_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+      logger.error("Member: {} below {} critical threshold",
+          new Object[] {event.getMember(), "off-heap"});
-          .info(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_ABOVE_HIGH_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+          .info("Member: {} above {} eviction threshold",
+              new Object[] {event.getMember(), "off-heap"});
-          .info(LocalizedMessage.create(LocalizedStrings.MemoryMonitor_MEMBER_BELOW_HIGH_THRESHOLD,
-              new Object[] {event.getMember(), "off-heap"}));
+          .info("Member: {} below {} eviction threshold",
+              new Object[] {event.getMember(), "off-heap"});
-        logger.error(LocalizedMessage
-            .create(LocalizedStrings.MemoryMonitor_EXCEPTION_OCCURRED_WHEN_NOTIFYING_LISTENERS), t);
+        logger.error("Exception occurred when notifying listeners ", t);
