GEODE-3026: Removed the AsyncEventQueue for the Lucene index if the region isn't created

* GEODE-3026: Removed the AsyncEventQueue for the Lucene index if region fails to be created

* GEODE-3026: Renamed RegionService to RegionCacheService

* GEODE-3026: Moved RegionCacheService API to RegionListener

* GEODE-3026: Updated dunit test

+import java.util.concurrent.atomic.AtomicBoolean;
+  private AtomicBoolean beforeCreateInvoked = new AtomicBoolean();
+
+  private AtomicBoolean afterCreateInvoked = new AtomicBoolean();
+
-    if (path.equals(this.regionPath)) {
+    if (path.equals(this.regionPath) && this.beforeCreateInvoked.compareAndSet(false, true)) {
-    if (region.getFullPath().equals(this.regionPath)) {
+    if (region.getFullPath().equals(this.regionPath)
+        && this.afterCreateInvoked.compareAndSet(false, true)) {
-      this.cache.removeRegionListener(this);
+    }
+  }
+
+  @Override
+  public void beforeDestroyed(Region region) {
+    if (region.getFullPath().equals(this.regionPath)) {
+      this.service.beforeRegionDestroyed(region);
+    }
+  }
+
+  @Override
+  public void cleanupFailedInitialization(Region region) {
+    // Reset the booleans
+    this.beforeCreateInvoked.set(false);
+    this.afterCreateInvoked.set(false);
+
+    // Clean up the region in the LuceneService
+    if (region.getFullPath().equals(this.regionPath)) {
+      this.service.cleanupFailedInitialization(region);
