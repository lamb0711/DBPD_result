Merge branch 'develop' into feature/GEODE-7049

+import org.apache.geode.distributed.internal.membership.gms.api.MembershipStatistics;
+
-public interface DMStats {
+public interface DMStats extends MembershipStatistics {
-   * Increments the total number of message bytes sent by the distribution manager
-   */
-  void incSentBytes(long bytes);
-
-  /**
-  void incUDPDispatchRequestTime(long val);
-
-   * increments the number of unicast writes performed and the number of bytes written
-   *
-   * @since GemFire 5.0
-   */
-  void incUcastWriteBytes(int bytesWritten);
-
-  /**
-   * increment the number of unicast datagram payload bytes received and the number of unicast reads
-   * performed
-   */
-  void incUcastReadBytes(int amount);
-
-  /**
-   * increment the number of multicast datagrams sent and the number of multicast bytes transmitted
-   */
-  void incMcastWriteBytes(int bytesWritten);
-
-  /**
-   * increment the number of multicast datagram payload bytes received, and the number of mcast
-   * messages read
-   */
-  void incMcastReadBytes(int amount);
-
-  /**
-  long startMsgSerialization();
-
-  void endMsgSerialization(long start);
-
-  long startUDPMsgEncryption();
-
-  void endUDPMsgEncryption(long start);
-
-  long startUDPMsgDecryption();
-
-  void endUDPMsgDecryption(long start);
-
-  long startMsgDeserialization();
-
-  void endMsgDeserialization(long start);
-
-   * increment the number of unicast UDP retransmission requests received from other processes
-   *
-   * @since GemFire 5.0
-   */
-  void incUcastRetransmits();
-
-  /**
-   * increment the number of multicast UDP retransmissions sent to other processes
-   *
-   * @since GemFire 5.0
-   */
-  void incMcastRetransmits();
-
-  /**
-   * increment the number of multicast UDP retransmission requests sent to other processes
-   *
-   * @since GemFire 5.0
-   */
-  void incMcastRetransmitRequests();
-
-  /**
-  // Stats for GMSHealthMonitor
-  long getHeartbeatRequestsSent();
-
-  void incHeartbeatRequestsSent();
-
-  long getHeartbeatRequestsReceived();
-
-  void incHeartbeatRequestsReceived();
-
-  long getHeartbeatsSent();
-
-  void incHeartbeatsSent();
-
-  void incHeartbeatsReceived();
-
-
-  long getSuspectsSent();
-
-  void incSuspectsSent();
-
-  long getSuspectsReceived();
-
-  void incSuspectsReceived();
-
-
-  long getFinalCheckRequestsSent();
-
-  void incFinalCheckRequestsSent();
-
-  long getFinalCheckRequestsReceived();
-
-  void incFinalCheckRequestsReceived();
-
-  long getFinalCheckResponsesSent();
-
-  void incFinalCheckResponsesSent();
-
-  long getFinalCheckResponsesReceived();
-
-  void incFinalCheckResponsesReceived();
-
-
-  long getTcpFinalCheckRequestsSent();
-
-  void incTcpFinalCheckRequestsSent();
-
-  long getTcpFinalCheckRequestsReceived();
-
-  void incTcpFinalCheckRequestsReceived();
-
-  long getTcpFinalCheckResponsesSent();
-
-  void incTcpFinalCheckResponsesSent();
-
-  long getTcpFinalCheckResponsesReceived();
-
-  void incTcpFinalCheckResponsesReceived();
-
-  void incUdpFinalCheckRequestsSent();
-
-  // UDP final check is implemented using HeartbeatRequestMessage and HeartbeatMessage
-  // So the following code is commented out.
-
-  // public long getUdpFinalCheckRequestsReceived();
-  //
-  // public void incUdpFinalCheckRequestsReceived();
-  //
-  // public long getUdpFinalCheckResponsesSent();
-  //
-  // public void incUdpFinalCheckResponsesSent();
-
-  void incUdpFinalCheckResponsesReceived();
