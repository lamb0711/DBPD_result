Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A type registration that is used for loners. In the 
- * loner case, we'll try to be helpful and not decide
- * what type registration to give the user until they actually 
- * use it.
+ * A type registration that is used for loners. In the loner case, we'll try to be helpful and not
+ * decide what type registration to give the user until they actually use it.
-  
+
-  
+
-  
-  
+
+
-    //do nothing. This type registry is initialized lazily.
+    // do nothing. This type registry is initialized lazily.
-  
+
-    if(delegate != null) {
+    if (delegate != null) {
-  
+
-   * Actually initialize the delegate. This is method
-   * is called when the type registry is used. At that time,
-   * it creates the registry.
+   * Actually initialize the delegate. This is method is called when the type registry is used. At
+   * that time, it creates the registry.
-  
+
-    if(delegate != null) {
+    if (delegate != null) {
-    
+
-   * Check to see if the current member is a loner and we can't tell
-   * if the user wants a peer or a client type registry.
+   * Check to see if the current member is a loner and we can't tell if the user wants a peer or a
+   * client type registry.
+   * 
-   * @return true if this member is a loner and we can't determine what
-   * type of registry they want.
+   * @return true if this member is a loner and we can't determine what type of registry they want.
-    return isLoner && !pdxConfigured/* && !hasGateways*/;
+    return isLoner && !pdxConfigured/* && !hasGateways */;
-  public void testClearRegistry() {
-  }
-  
+  public void testClearRegistry() {}
+
-  
+
