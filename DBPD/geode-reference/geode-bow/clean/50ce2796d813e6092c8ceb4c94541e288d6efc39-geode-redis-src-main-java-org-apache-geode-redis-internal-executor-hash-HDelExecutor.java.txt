Decouple geode in sadd,srem,smembers (#4912)

This commit builds a GeodeRedisSetSynchronized class that brings
together "set" methods.  These three are necessary for Spring-Session so
they are the only ones included.
-import java.util.Map;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-    List<byte[]> commandElems = command.getProcessedCommand();
+    List<ByteArrayWrapper> commandElems = command.getProcessedCommandWrappers();
-    int numDeleted = 0;
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Map<ByteArrayWrapper, ByteArrayWrapper> map = getMap(context, key);
-
-      if (map == null || map.isEmpty()) {
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), numDeleted));
-        return;
-      }
-
-      for (int i = START_FIELDS_INDEX; i < commandElems.size(); i++) {
-        ByteArrayWrapper field = new ByteArrayWrapper(commandElems.get(i));
-        Object oldValue = map.remove(field);
-        if (oldValue != null) {
-          numDeleted++;
-        }
-      }
-      // save map
-      saveMap(map, context, key);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
-    }
-
+    RedisHash hash = new GeodeRedisHashSynchronized(key, context);
+    int numDeleted = hash.hdel(commandElems.subList(2, commandElems.size()));
