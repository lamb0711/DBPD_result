GEODE-37 changed import to org.apache.geode

-package com.gemstone.gemfire.distributed.internal.locks;
+package org.apache.geode.distributed.internal.locks;
-import com.gemstone.gemfire.CancelCriterion;
-import com.gemstone.gemfire.CancelException;
-import com.gemstone.gemfire.cache.CommitConflictException;
-import com.gemstone.gemfire.distributed.DistributedSystemDisconnectedException;
-import com.gemstone.gemfire.distributed.LockServiceDestroyedException;
-import com.gemstone.gemfire.distributed.internal.DM;
-import com.gemstone.gemfire.distributed.internal.DistributionConfig;
-import com.gemstone.gemfire.distributed.internal.MembershipListener;
-import com.gemstone.gemfire.distributed.internal.locks.DLockQueryProcessor.DLockQueryMessage;
-import com.gemstone.gemfire.distributed.internal.locks.DLockRequestProcessor.DLockRequestMessage;
-import com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember;
-import com.gemstone.gemfire.internal.Assert;
-import com.gemstone.gemfire.internal.cache.IdentityArrayList;
-import com.gemstone.gemfire.internal.cache.TXReservationMgr;
-import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
-import com.gemstone.gemfire.internal.logging.LogService;
-import com.gemstone.gemfire.internal.logging.log4j.LocalizedMessage;
-import com.gemstone.gemfire.internal.logging.log4j.LogMarker;
-import com.gemstone.gemfire.internal.util.concurrent.StoppableCountDownLatch;
-import com.gemstone.gemfire.internal.util.concurrent.StoppableReentrantReadWriteLock;
+import org.apache.geode.CancelCriterion;
+import org.apache.geode.CancelException;
+import org.apache.geode.cache.CommitConflictException;
+import org.apache.geode.distributed.DistributedSystemDisconnectedException;
+import org.apache.geode.distributed.LockServiceDestroyedException;
+import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.DistributionConfig;
+import org.apache.geode.distributed.internal.MembershipListener;
+import org.apache.geode.distributed.internal.locks.DLockQueryProcessor.DLockQueryMessage;
+import org.apache.geode.distributed.internal.locks.DLockRequestProcessor.DLockRequestMessage;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.Assert;
+import org.apache.geode.internal.cache.IdentityArrayList;
+import org.apache.geode.internal.cache.TXReservationMgr;
+import org.apache.geode.internal.i18n.LocalizedStrings;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.log4j.LogMarker;
+import org.apache.geode.internal.util.concurrent.StoppableCountDownLatch;
+import org.apache.geode.internal.util.concurrent.StoppableReentrantReadWriteLock;
-   * see com.gemstone.gemfire.internal.cache.TXCommitMessage#updateLockMembers()
+   * see org.apache.geode.internal.cache.TXCommitMessage#updateLockMembers()
-   * @see com.gemstone.gemfire.internal.cache.locks.TXLockUpdateParticipantsMessage
-   * @see com.gemstone.gemfire.internal.cache.locks.TXLockBatch#getBatchId()
+   * @see org.apache.geode.internal.cache.locks.TXLockUpdateParticipantsMessage
+   * @see org.apache.geode.internal.cache.locks.TXLockBatch#getBatchId()
-   * see com.gemstone.gemfire.internal.cache.locks.TXCommitMessage#updateLockMembers()
+   * see org.apache.geode.internal.cache.locks.TXCommitMessage#updateLockMembers()
-   * @see com.gemstone.gemfire.internal.cache.locks.TXLockUpdateParticipantsMessage
-   * @see com.gemstone.gemfire.internal.cache.locks.TXLockBatch#getBatchId()
+   * @see org.apache.geode.internal.cache.locks.TXLockUpdateParticipantsMessage
+   * @see org.apache.geode.internal.cache.locks.TXLockBatch#getBatchId()
-    // fixed by Darrel in com.gemstone.gemfire.internal.tcp.Connection
+    // fixed by Darrel in org.apache.geode.internal.tcp.Connection
-     * @see com.gemstone.gemfire.distributed.DistributedLockService#suspendLocking(long)
+     * @see org.apache.geode.distributed.DistributedLockService#suspendLocking(long)
