GEODE-7450 SSL peerAppDataBuffer expansion needs work (#4330)

The expansion logic for the decrypted buffer in NioSslEngine was
expanding the buffer to twice its old capacity and wouldn't go
beyond that.  Some ciphers will compress data a lot more than that, so
we need to continually increase available space in the decryption buffer
if the SslEngine reports a BUFFER_OVERFLOW status.  The changes in
this commit do that by always doubling the available space in the
decryption buffer in response to a BUFFER_OVERFLOW.

Along with that I found it unnecessary to take preemptive action to
increase the size of the buffer and deleted that code.
-    // it's better to be pro-active about avoiding buffer overflows
-    expandPeerAppData(wrappedBuffer);
-          expandPeerAppData(wrappedBuffer);
+          // buffer overflow expand and try again - double the available decryption space
+          int newCapacity =
+              (peerAppData.capacity() - peerAppData.position()) * 2 + peerAppData.position();
+          peerAppData =
+              bufferPool.expandWriteBufferIfNeeded(TRACKED_RECEIVER, peerAppData, newCapacity);
+          peerAppData.limit(peerAppData.capacity());
-  void expandPeerAppData(ByteBuffer wrappedBuffer) {
-    if (peerAppData.capacity() - peerAppData.position() < 2 * wrappedBuffer.remaining()) {
-      peerAppData =
-          bufferPool.expandWriteBufferIfNeeded(TRACKED_RECEIVER, peerAppData,
-              expandedCapacity(wrappedBuffer, peerAppData));
-    }
-  }
-
-    } else {
-      peerAppData =
-          bufferPool.expandReadBufferIfNeeded(TRACKED_RECEIVER, peerAppData, bytes);
