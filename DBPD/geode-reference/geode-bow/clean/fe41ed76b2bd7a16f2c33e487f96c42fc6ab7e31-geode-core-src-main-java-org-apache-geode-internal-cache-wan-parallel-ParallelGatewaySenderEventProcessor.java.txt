GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-/**
- * 
- */
-
-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.cache.CacheException;
-import org.apache.geode.cache.EntryEvent;
-import org.apache.geode.cache.Region;
-import org.apache.geode.cache.wan.GatewayQueueEvent;
-import org.apache.geode.internal.cache.Conflatable;
-import org.apache.geode.internal.cache.DistributedRegion;
-import org.apache.geode.internal.cache.EntryEventImpl;
-import org.apache.geode.internal.cache.EnumListenerEvent;
-import org.apache.geode.internal.cache.EventID;
-import org.apache.geode.internal.cache.ForceReattemptException;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-import org.apache.geode.internal.cache.LocalRegion;
-import org.apache.geode.internal.cache.wan.AbstractGatewaySender;
-import org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor;
-import org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackDispatcher;
-import org.apache.geode.internal.cache.wan.GatewaySenderEventImpl;
-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
-import org.apache.geode.internal.cache.PartitionedRegion;
-import org.apache.geode.internal.size.SingleObjectSizer;
-
-import java.io.IOException;
-import java.util.HashSet;
-import java.util.Set;
+import org.apache.logging.log4j.Logger;
-/**
- * 
- */
+import org.apache.geode.cache.CacheException;
+import org.apache.geode.cache.EntryEvent;
+import org.apache.geode.cache.Region;
+import org.apache.geode.internal.cache.Conflatable;
+import org.apache.geode.internal.cache.DistributedRegion;
+import org.apache.geode.internal.cache.EntryEventImpl;
+import org.apache.geode.internal.cache.EnumListenerEvent;
+import org.apache.geode.internal.cache.EventID;
+import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.internal.cache.PartitionedRegion;
+import org.apache.geode.internal.cache.wan.AbstractGatewaySender;
+import org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor;
+import org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackDispatcher;
+import org.apache.geode.internal.cache.wan.GatewaySenderEventImpl;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.internal.logging.LoggingThreadGroup;
+
-    // this.queue = new ParallelGatewaySenderQueue(sender, userRegions, id, nDispatcher);
-    for (LocalRegion region : ((GemFireCacheImpl) ((AbstractGatewaySender) sender).getCache())
-        .getApplicationRegions()) {
+    for (LocalRegion region : sender.getCache().getApplicationRegions()) {
-    // TODO : Kishor : Looks like for PDX region bucket id is set to -1.
-    // int bucketId = -1;
-    // if (!(region instanceof DistributedRegion && ((DistributedRegion)region)
-    // .isPdxTypesRegion())) {
-    // bucketId = PartitionedRegionHelper.getHashKey(event);
-    // }
+    // TODO: Looks like for PDX region bucket id is set to -1.
-
-  /*
-   * public int size(PartitionedRegion pr, int bucketId) throws ForceReattemptException { return
-   * ((ParallelGatewaySenderQueue)this.queue).size(pr, bucketId); }
-   */
-
-    // TODO Auto-generated method stub
-    // TODO Auto-generated method stub
-
