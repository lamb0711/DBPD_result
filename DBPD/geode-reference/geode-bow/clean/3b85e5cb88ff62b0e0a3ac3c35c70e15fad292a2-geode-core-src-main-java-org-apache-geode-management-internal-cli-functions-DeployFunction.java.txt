GEODE-7436: Deploy jar using semantic versioning scheme  (#4382)

Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Joris Melchior <jmelchior@pivotal.io>

* Deploy jar using semantic versioning scheme
* always add sequence number at the end of the filename no matter what version scheme the deployed file uses.

* fix window's tests

-import java.util.HashMap;
+import java.util.HashSet;
-import java.util.Map;
+import java.util.Set;
-      Map<String, File> stagedFiles;
-
-      stagedFiles = stageJarContent(jarFilenames, jarStreams);
-      stagingDir = stagedFiles.values().stream().findFirst().get().getParentFile();
+      Set<File> stagedFiles = stageJarContent(jarFilenames, jarStreams);
+      stagingDir = stagedFiles.stream().findFirst().get().getParentFile();
+        // if deploy(jar) returns null, i.e. the staged file bytes matched the latest
+        // deployed version
-  private Map<String, File> stageJarContent(List<String> jarNames,
+  private Set<File> stageJarContent(List<String> jarNames,
-    Map<String, File> stagedJars = new HashMap<>();
+    Set<File> stagedJars = new HashSet<>();
-        stagedJars.put(jarNames.get(i), tempJar.toFile());
+        stagedJars.add(tempJar.toFile());
