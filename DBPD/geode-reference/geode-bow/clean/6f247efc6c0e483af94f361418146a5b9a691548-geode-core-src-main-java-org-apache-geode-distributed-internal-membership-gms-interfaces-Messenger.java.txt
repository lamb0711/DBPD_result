GEODE-7479: Change Membership interface to use MemberIdentifier interface (#4420)

Changing all classes in Membership to be parameterized by an ID type,
which extends MemberIdentifier. This allows core to create a membership
system that manages InternalDistributedMember objects in a type safe
way.

Removing all uses of InternalDistributedMember, DistributedMember, and
friends from within the membership code.

-public interface Messenger extends Service {
+public interface Messenger<ID extends MemberIdentifier> extends Service<ID> {
-  <T> void addHandler(Class<T> c, MessageHandler<T> h);
+  <T extends Message<ID>> void addHandler(Class<T> c, MessageHandler<T> h);
-  Set<MemberIdentifier> send(Message m, GMSMembershipView alternateView);
+  Set<ID> send(Message<ID> m, GMSMembershipView<ID> alternateView);
-  Set<MemberIdentifier> send(Message m);
+  Set<ID> send(Message<ID> m);
-  Set<MemberIdentifier> sendUnreliably(Message m);
+  Set<ID> sendUnreliably(Message<ID> m);
-  MemberIdentifier getMemberID();
+  ID getMemberID();
-  GMSQuorumChecker getQuorumChecker();
+  GMSQuorumChecker<ID> getQuorumChecker();
-  void getMessageState(MemberIdentifier member, Map<String, Long> state,
+  void getMessageState(ID member, Map<String, Long> state,
-  void waitForMessageState(MemberIdentifier member, Map<String, Long> state)
+  void waitForMessageState(ID member, Map<String, Long> state)
-  byte[] getPublicKey(MemberIdentifier mbr);
+  byte[] getPublicKey(ID mbr);
-  void setPublicKey(byte[] publickey, MemberIdentifier mbr);
+  void setPublicKey(byte[] publickey, ID mbr);
