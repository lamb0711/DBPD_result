Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * @since GemFire     3.5
+ * @since GemFire 3.5
- * @deprecated as of 7.0 use the <code><a href="{@docRoot}/org/apache/geode/management/package-summary.html">management</a></code> package instead
+ * @deprecated as of 7.0 use the <code><a href=
+ *             "{@docRoot}/org/apache/geode/management/package-summary.html">management</a></code>
+ *             package instead
-  
+
-  
-  /** 
-   * Gets identifying name of this member.
-   * For applications this is the string form of {@link #getDistributedMember}.
-   * For cache servers it is a unique cache server string.
+
+  /**
+   * Gets identifying name of this member. For applications this is the string form of
+   * {@link #getDistributedMember}. For cache servers it is a unique cache server string.
-  
-  /** 
-   * Retrieves display friendly name for this member.  If this member defined 
-   * an optional name for its connection to the distributed system, that name 
-   * will be returned.  Otherwise the returned value will be {@link
-   * org.apache.geode.admin.SystemMember#getId}.
+
+  /**
+   * Retrieves display friendly name for this member. If this member defined an optional name for
+   * its connection to the distributed system, that name will be returned. Otherwise the returned
+   * value will be {@link org.apache.geode.admin.SystemMember#getId}.
-  
+
-  
+
-  
+
-   @Deprecated
-   public java.util.Properties getLicense();
+  @Deprecated
+  public java.util.Properties getLicense();
-  
-  /** 
+
+  /**
-  
+
-   * Sets the configuration of this member.  The argument is an array of any
-   * and all configuration parameters that are to be updated in the member.
+   * Sets the configuration of this member. The argument is an array of any and all configuration
+   * parameters that are to be updated in the member.
-   * @throws org.apache.geode.admin.AdminException
-   *         if this fails to make the configuration changes
+   * @throws org.apache.geode.admin.AdminException if this fails to make the configuration changes
-  public ConfigurationParameter[] setConfiguration(ConfigurationParameter[] parms) throws org.apache.geode.admin.AdminException;
-  
+  public ConfigurationParameter[] setConfiguration(ConfigurationParameter[] parms)
+      throws org.apache.geode.admin.AdminException;
+
-  
-  /** 
-   * Retrieves this members statistic resources. If the member is not running 
-   * then an empty array is returned. 
+
+  /**
+   * Retrieves this members statistic resources. If the member is not running then an empty array is
+   * returned.
-   *@param statisticsTypeName String ame of the Statistics Type
+   * @param statisticsTypeName String ame of the Statistics Type
-  public StatisticResource[] getStat(String statisticsTypeName) throws org.apache.geode.admin.AdminException;
-  
-  /** 
-   * Retrieves this members statistic resources. If the member is not running 
-   * then an empty array is returned. All Stats are returned
+  public StatisticResource[] getStat(String statisticsTypeName)
+      throws org.apache.geode.admin.AdminException;
+
+  /**
+   * Retrieves this members statistic resources. If the member is not running then an empty array is
+   * returned. All Stats are returned
-  
+
-   * Returns whether or not this system member hosts a GemFire {@link
-   * org.apache.geode.cache.Cache Cache}.
+   * Returns whether or not this system member hosts a GemFire {@link org.apache.geode.cache.Cache
+   * Cache}.
-  public boolean hasCache()
-    throws org.apache.geode.admin.AdminException;
+  public boolean hasCache() throws org.apache.geode.admin.AdminException;
-   * Returns an object that provides admin access to this member's cache.
-   * If the member currently has no cache then <code>null</code> is returned.
+   * Returns an object that provides admin access to this member's cache. If the member currently
+   * has no cache then <code>null</code> is returned.
-  
+
-  
+
-   * Returns the {@link org.apache.geode.distributed.DistributedMember}
-   * that represents this system member.
+   * Returns the {@link org.apache.geode.distributed.DistributedMember} that represents this system
+   * member.
