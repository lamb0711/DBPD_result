Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

Conflicts:
	gemfire-core/src/main/java/com/gemstone/gemfire/distributed/internal/PooledExecutorWithDMStats.java
	gemfire-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheClientNotifier.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/i18n/ParentLocalizedStrings.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/logging/LogService.java
	gemfire-core/src/test/java/com/gemstone/gemfire/cache/client/internal/AutoConnectionSourceWithUDPDUnitTest.java
	gemfire-core/src/test/java/com/gemstone/gemfire/internal/FDDUnitTest.java
	gemfire-core/src/test/resources/com/gemstone/gemfire/codeAnalysis/sanctionedSerializables.txt

-import com.gemstone.gemfire.cache.util.BridgeMembership;
-import com.gemstone.gemfire.cache.util.BridgeMembershipEvent;
-import com.gemstone.gemfire.cache.util.BridgeMembershipListener;
-import com.gemstone.gemfire.cache.util.BridgeMembershipListenerAdapter;
-import com.gemstone.gemfire.cache.util.BridgeServer;
+import com.gemstone.gemfire.management.membership.ClientMembership;
+import com.gemstone.gemfire.management.membership.ClientMembershipEvent;
+import com.gemstone.gemfire.management.membership.ClientMembershipListener;
-public abstract class AbstractBridgeServer implements CacheServer, BridgeServer {
+public abstract class AbstractCacheServer implements CacheServer {
-   * Listener that would listen to bridge membership and notify the admin 
-   * members(if any exist) as clients of this server leave/crash. 
+   * Listens to client membership events and notifies any admin 
+   * members as clients of this server leave/crash. 
-  protected final BridgeMembershipListener listener;
+  protected final ClientMembershipListener listener;
-  public AbstractBridgeServer(InternalCache cache) {
+  public AbstractCacheServer(InternalCache cache) {
-  public AbstractBridgeServer(InternalCache cache, boolean attachListener) {
+  public AbstractCacheServer(InternalCache cache, boolean attachListener) {
-    listener = new BridgeMembershipListenerAdapter() {
-      /**
-       * Invoked when a client connected to this process or when this process 
-       * has got connected with a BridgeServer.
-       * 
-       * @param event
-       *          BridgeMembershipEvent associated with client getting connected
-       */
+    listener = new ClientMembershipListener() {
+
-      public void memberJoined(BridgeMembershipEvent event) {
-        /* process events for clients only */
+      public void memberJoined(ClientMembershipEvent event) {
-      
-      /**
-       * Invoked when a client has gracefully disconnected from this process
-       * or when this process has gracefully disconnected from a BridgeServer.
-       * 
-       * @param event
-       *          BridgeMembershipEvent associated with client leaving gracefully
-       */
+
-      public void memberLeft(BridgeMembershipEvent event) {
-        /* process events for clients only */
+      public void memberLeft(ClientMembershipEvent event) {
-      /**
-       * Invoked when a client has unexpectedly disconnected from this process
-       * or when this process has unexpectedly disconnected from a BridgeServer.
-       * 
-       * @param event
-       *          BridgeMembershipEvent associated with client getting
-       *          disconnected unexpectedly
-       */
-      public void memberCrashed(BridgeMembershipEvent event) {
-        /* process events for clients only */
+      public void memberCrashed(ClientMembershipEvent event) {
-
+      
-       *          BridgeMembershipEvent associated for a change in client
-       *          membership
+       *          describes a change in client membership
-      private void createAndSendMessage(BridgeMembershipEvent event, int type) {
+      private void createAndSendMessage(ClientMembershipEvent event, int type) {
-        Cache cacheInstance = AbstractBridgeServer.this.cache;
+        Cache cacheInstance = AbstractCacheServer.this.cache;
-    BridgeMembership.registerBridgeMembershipListener(listener);
+    ClientMembership.registerClientMembershipListener(listener);
