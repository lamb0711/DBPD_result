GEODE-3300: Complete and expose parallel export feature for use

This closes #704

-import java.io.FileFilter;
-import java.util.Set;
-  @SuppressWarnings("unchecked")
+    createDirectoryIfNeeded(dir);
+
+    for (Region<?, ?> region : cache.rootRegions()) {
+      for (Region<?, ?> subRegion : region.subregions(true)) {
+        saveRegion(subRegion, dir, format, options);
+      }
+      saveRegion(region, dir, format, options);
+    }
+  }
+
+  private void createDirectoryIfNeeded(File dir) throws IOException {
-
-    for (Region<?, ?> r : (Set<Region<?, ?>>) cache.rootRegions()) {
-      for (Region<?, ?> sub : r.subregions(true)) {
-        saveRegion(sub, dir, format, options);
-      }
-      saveRegion(r, dir, format, options);
-    }
-    File[] snapshots = dir.listFiles(new FileFilter() {
-      @Override
-      public boolean accept(File pathname) {
-        return !pathname.isDirectory();
-      }
-    });
+    if (!dir.exists() || !dir.isDirectory()) {
+      throw new FileNotFoundException("Unable to load snapshot from " + dir.getCanonicalPath()
+          + " as the file does not exist or is not a directory");
+    }
+    File[] snapshotFiles = getSnapshotFiles(dir);
+    load(snapshotFiles, format, createOptions());
+  }
-    if (snapshots == null) {
+  private File[] getSnapshotFiles(File dir) throws IOException {
+    File[] snapshotFiles = dir.listFiles(pathname -> pathname.getName().endsWith(".gfd"));
+
+    if (snapshotFiles == null) {
+      throw new IOException("Unable to access " + dir.getCanonicalPath());
+    } else if (snapshotFiles.length == 0) {
-    load(snapshots, format, createOptions());
+
+    return snapshotFiles;
-  public void load(File[] snapshots, SnapshotFormat format, SnapshotOptions<Object, Object> options)
-      throws IOException, ClassNotFoundException {
+  public void load(File[] snapshotFiles, SnapshotFormat format,
+      SnapshotOptions<Object, Object> options) throws IOException, ClassNotFoundException {
-    for (File f : snapshots) {
-      GFSnapshotImporter in = new GFSnapshotImporter(f);
+    for (File file : snapshotFiles) {
+      GFSnapshotImporter in = new GFSnapshotImporter(file);
-          throw new RegionNotFoundException(
-              LocalizedStrings.Snapshot_COULD_NOT_FIND_REGION_0_1.toLocalizedString(regionName, f));
+          throw new RegionNotFoundException(LocalizedStrings.Snapshot_COULD_NOT_FIND_REGION_0_1
+              .toLocalizedString(regionName, file));
-        rs.load(f, format, options);
+        rs.load(file, format, options);
-  @SuppressWarnings({"rawtypes", "unchecked"})
-    RegionSnapshotService<?, ?> rs = region.getSnapshotService();
-    String name = "snapshot" + region.getFullPath().replace('/', '-');
+    RegionSnapshotService<?, ?> regionSnapshotService = region.getSnapshotService();
+    String name = "snapshot" + region.getFullPath().replace('/', '-')
+        + RegionSnapshotService.SNAPSHOT_FILE_EXTENSION;
-    rs.save(f, format, options);
+    regionSnapshotService.save(f, format, options);
