GEODE-3974: function security improvement (#1287)

* GEODE-3974: function security improvement

* function executed on a local member does not log out user accidentally
* Mark some internal functions as InternalEntity
* test refactor

-import org.apache.geode.cache.CacheFactory;
+import org.apache.geode.management.internal.security.ResourcePermissions;
-  private final Cache cache;
-
-  public TouchReplicatedRegionEntriesFunction() {
-    this(CacheFactory.getAnyInstance());
-  }
-
-  public TouchReplicatedRegionEntriesFunction(Cache cache) {
-    this.cache = cache;
-  }
-
+    Cache cache = context.getCache();
-    if (this.cache.getLogger().fineEnabled()) {
+    if (cache.getLogger().fineEnabled()) {
-      this.cache.getLogger().fine(builder.toString());
+      cache.getLogger().fine(builder.toString());
-    Region region = this.cache.getRegion(regionName);
+    Region region = cache.getRegion(regionName);
+  // the actual regionName used in the function body is passed in as an function arugment,
+  // this regionName is not really used in function. Hence requiring DATA:READ on all regions
-    return Collections.singletonList(new ResourcePermission(ResourcePermission.Resource.DATA,
-        ResourcePermission.Operation.READ, regionName));
+    return Collections.singletonList(ResourcePermissions.DATA_READ);
