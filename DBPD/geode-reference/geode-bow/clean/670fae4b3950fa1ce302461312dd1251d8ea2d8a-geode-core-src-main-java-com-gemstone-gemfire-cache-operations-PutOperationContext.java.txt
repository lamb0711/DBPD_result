GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-  public PutOperationContext(Object key,Object value,
-      boolean isObject) {
-    super(key, value, isObject);
-    this.opType = UNKNOWN;
+  public PutOperationContext(Object key,Object value, boolean isObject) {
+    this(key, value, isObject, false);
-  public PutOperationContext(Object key, Object value,
-      boolean isObject, boolean postOperation) {
-    super(key, value, isObject, postOperation);
-    this.opType = UNKNOWN;
+  public PutOperationContext(Object key, Object value, boolean isObject, boolean postOperation) {
+    this(key, value, isObject, UNKNOWN, postOperation);
-  public PutOperationContext(Object key, Object value,
-      boolean isObject, byte opType, boolean isPostOperation) {
-    super(key, value, isObject, isPostOperation);
+  public PutOperationContext(Object key, Object value, boolean isObject, byte opType, boolean isPostOperation) {
+    super(OperationCode.PUT, key, value, isObject, isPostOperation);
-   * Return the operation associated with the <code>OperationContext</code>
-   * object.
-   * 
-   * @return <code>OperationCode.PUT</code>.
-   */
-  @Override
-  public OperationCode getOperationCode() {
-    return OperationCode.PUT;
-  }
-
-  /**
