Merge pull request #4952 from jmelchio/key-query-param2

GEODE-7938: added keys query param to GET, PUT, and DELETE /{region} â€¦
-import javax.servlet.http.HttpServletRequest;
-
+import org.springframework.web.bind.annotation.RequestParam;
-   * Delete data for single key or specific keys in region
+   * Delete data for one or more keys from a region
-  @RequestMapping(method = RequestMethod.DELETE, value = "/{region}/**",
+  @RequestMapping(method = RequestMethod.DELETE, value = "/{region}/{keys}",
-      notes = "Delete data for one or more keys in a region. The keys, ** in the endpoint, are a comma separated list.")
+      notes = "Delete data for one or more keys in a region. Deprecated in favor of /{region}?keys=.")
-      HttpServletRequest request) {
-    String[] keys = parseKeys(request, region);
-    securityService.authorize("WRITE", region, keys);
-    logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[]) keys),
-        region);
-
+      @PathVariable("keys") String[] keys) {
+    return deleteRegionKeys(region, keys);
+  }
+  private ResponseEntity<?> deleteRegionKeys(String region, String[] keys) {
+    securityService.authorize("WRITE", region, keys);
+    logger.debug("Delete data for keys {} on region {}", ArrayUtils.toString((Object[]) keys),
+        region);
-   * Delete all data in region
+   * Delete all data in region or just the given keys
+   * @param encodedKeys optional comma separated list of keys
-  @ApiOperation(value = "delete all data", notes = "Delete all data in the region")
+  @ApiOperation(value = "delete all data or the specified keys",
+      notes = "Delete all in the region or just the specified keys")
-  @PreAuthorize("@securityService.authorize('DATA', 'WRITE', #region)")
-  public ResponseEntity<?> delete(@PathVariable("region") String region) {
+  public ResponseEntity<?> deleteAllOrGivenKeys(@PathVariable("region") String region,
+      @RequestParam(value = "keys", required = false) final String[] encodedKeys) {
+    if (encodedKeys == null || encodedKeys.length == 0) {
+      return deleteAllRegionData(region);
+    } else {
+      String[] decodedKeys = decode(encodedKeys);
+      return deleteRegionKeys(region, decodedKeys);
+    }
+  }
+  private ResponseEntity<?> deleteAllRegionData(String region) {
+    securityService.authorize("DATA", "WRITE", region);
+    logger.debug("Deleting all data in Region ({})...", region);
