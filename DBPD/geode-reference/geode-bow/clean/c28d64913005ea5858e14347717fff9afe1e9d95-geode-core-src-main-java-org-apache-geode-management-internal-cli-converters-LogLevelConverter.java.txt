Merge branch 'release/1.4.0'

-import org.apache.geode.management.cli.ConverterHint;
-import org.apache.logging.log4j.Level;
-import org.springframework.shell.core.Completion;
-import org.springframework.shell.core.Converter;
-import org.springframework.shell.core.MethodTarget;
-
-import java.util.LinkedHashSet;
-import java.util.List;
+import java.util.Arrays;
+import java.util.stream.Collectors;
+
+import org.apache.logging.log4j.Level;
+
+import org.apache.geode.management.cli.ConverterHint;
- * 
+ *
-public class LogLevelConverter implements Converter<String> {
-  private Set<Completion> logLevels;
+public class LogLevelConverter extends BaseStringConverter {
+  private final Set<String> logLevels;
-    logLevels = new LinkedHashSet<Completion>();
-    Level[] levels = Level.values();
-    for (Level level : levels) {
-      logLevels.add(new Completion(level.name()));
-    }
+    logLevels = Arrays.stream(Level.values()).map(Level::name).collect(Collectors.toSet());
-  public boolean supports(Class<?> type, String optionContext) {
-    return String.class.equals(type) && optionContext.contains(ConverterHint.LOG_LEVEL);
+  public String getConverterHint() {
+    return ConverterHint.LOG_LEVEL;
-  public String convertFromText(String value, Class<?> targetType, String optionContext) {
-    return value;
+  public Set<String> getCompletionValues() {
+    return logLevels;
-  @Override
-  public boolean getAllPossibleValues(List<Completion> completions, Class<?> targetType,
-      String existingData, String optionContext, MethodTarget target) {
-    completions.addAll(logLevels);
-    return !completions.isEmpty();
-  }
