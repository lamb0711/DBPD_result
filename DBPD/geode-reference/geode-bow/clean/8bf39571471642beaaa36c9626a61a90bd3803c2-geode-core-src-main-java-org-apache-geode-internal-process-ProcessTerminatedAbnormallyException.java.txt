Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The ProcessTerminatedAbnormallyException class is a GemFireException (or RuntimeException) indicating that a process
- * terminated abnormally, and it's exit code is captured along with this RuntimeException.
+ * The ProcessTerminatedAbnormallyException class is a GemFireException (or RuntimeException)
+ * indicating that a process terminated abnormally, and it's exit code is captured along with this
+ * RuntimeException.
+ * 
-   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit value of the process.
+   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit
+   * value of the process.
+   * 
-   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit value of the process
-   * and a message indicating the reason of the abnormal termination.
+   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit
+   * value of the process and a message indicating the reason of the abnormal termination.
+   * 
-   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit value of the process
-   * and a Throwable representing the underlying cause of the process termination.
+   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit
+   * value of the process and a Throwable representing the underlying cause of the process
+   * termination.
+   * 
-   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit value of the process
-   * as well as a message indicating the reason of the abnormal termination along with a Throwable representing the
-   * underlying cause of the process termination.
+   * Constructs an instance of the ProcessTerminatedAbnormallyException class with the given exit
+   * value of the process as well as a message indicating the reason of the abnormal termination
+   * along with a Throwable representing the underlying cause of the process termination.
+   * 
-  public ProcessTerminatedAbnormallyException(final int exitValue, final String message, final Throwable cause) {
+  public ProcessTerminatedAbnormallyException(final int exitValue, final String message,
+      final Throwable cause) {
+   * 
