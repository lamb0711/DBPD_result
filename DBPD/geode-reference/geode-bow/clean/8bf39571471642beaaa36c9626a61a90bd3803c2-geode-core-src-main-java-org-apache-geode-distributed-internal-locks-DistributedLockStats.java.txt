Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-  
+
-  
+
-  
+
-   * @param start the timestamp taken when the operation started 
+   * @param start the timestamp taken when the operation started
+
-  
+
+
-  
-  // incNumSerialThreads everytime we execute with dlock getSerialExecutor() 
+
+  // incNumSerialThreads everytime we execute with dlock getSerialExecutor()
+
-  
+
+
-  // current number of lock services used by this system member 
+  // current number of lock services used by this system member
+
-  // current number of lock grantors hosted by this system member 
+  // current number of lock grantors hosted by this system member
+
-  
+
+
+
+
+
+
+
+
+
+
+
+
+
-  
+
+
+
+
+
-  
+
+
+
+
+
+
+
+
+
+
+
+
+
-  
+
+
+
+
+
+
+
+
+
+
+
+
+
-  
-  // current number of lock grantors hosted by this system member 
+
+  // current number of lock grantors hosted by this system member
+
-    
+
+
+
+
+
+
+
+
+
+
+
+
+
-  
-  // current number of DLockService destroy read locks held by this process 
+
+  // current number of DLockService destroy read locks held by this process
+
-  
-  // current number of DLockService destroy write locks held by this process 
+
+  // current number of DLockService destroy write locks held by this process
+
-    
+
+
+
+
+
-    
+
+
-  // current number of lock tokens used by this system member 
+  // current number of lock tokens used by this system member
+
+
-  // current number of lock request queues used by this system member 
+  // current number of lock request queues used by this system member
+
+
+
+
