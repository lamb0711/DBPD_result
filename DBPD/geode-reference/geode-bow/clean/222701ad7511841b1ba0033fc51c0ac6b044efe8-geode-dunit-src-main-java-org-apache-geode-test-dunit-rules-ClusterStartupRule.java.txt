GEODE-4110: improve junit ClientCacheRule (#2872)

* refactor some multiUser tests to use the ClientCacheRule
* add more convenience methods in ClientCacheRule
* clean up the ClusterStarterRule.startClient interface
* deprecate the SecurityTestUtils to favor using rules
-import static org.apache.geode.distributed.ConfigurationProperties.SECURITY_CLIENT_AUTH_INIT;
-import org.apache.geode.security.templates.UserPasswordAuthInit;
-  public static MemberStarterRule memberStarter;
+  public static MemberStarterRule<?> memberStarter;
-  public ClientVM startClientVM(int index, Properties properties,
-      SerializableConsumerIF<ClientCacheFactory> cacheFactorySetup, String clientVersion)
-      throws Exception {
+  public ClientVM startClientVM(int index, String clientVersion,
+      SerializableConsumerIF<ClientCacheRule> clientCacheRuleSetUp) throws Exception {
-      clientCacheRule =
-          new ClientCacheRule().withProperties(properties).withCacheSetup(cacheFactorySetup);
+      clientCacheRule = new ClientCacheRule();
-        clientCacheRule.before();
+        clientCacheRuleSetUp.accept(clientCacheRule);
+        clientCacheRule.createCache();
-      SerializableConsumerIF<ClientCacheFactory> cacheFactorySetup) throws Exception {
-    return startClientVM(index, new Properties(), cacheFactorySetup,
-        VersionManager.CURRENT_VERSION);
+      SerializableConsumerIF<ClientCacheRule> clientCacheRuleSetUp) throws Exception {
+    return startClientVM(index, VersionManager.CURRENT_VERSION, clientCacheRuleSetUp);
+  public ClientVM startClientVM(int index, String clientVersion, Properties properties,
+      SerializableConsumerIF<ClientCacheFactory> cacheFactorySetup)
+      throws Exception {
+    return startClientVM(index, clientVersion,
+        c -> c.withProperties(properties).withCacheSetup(cacheFactorySetup));
+  }
+
+
-    return startClientVM(index, properties, cacheFactorySetup, VersionManager.CURRENT_VERSION);
-  }
-
-  // convenient startClientMethod
-  public ClientVM startClientVM(int index, String username, String password,
-      boolean subscriptionEnabled, int... serverPorts) throws Exception {
-    Properties props = new Properties();
-    props.setProperty(UserPasswordAuthInit.USER_NAME, username);
-    props.setProperty(UserPasswordAuthInit.PASSWORD, password);
-    props.setProperty(SECURITY_CLIENT_AUTH_INIT, UserPasswordAuthInit.class.getName());
-
-    return startClientVM(index, props, (ccf) -> {
-      ccf.setPoolSubscriptionEnabled(subscriptionEnabled);
-      for (int serverPort : serverPorts) {
-        ccf.addPoolServer("localhost", serverPort);
-      }
-    });
-  }
-
-  // convenient startClientMethod
-  public ClientVM startClientVM(int index, boolean subscriptionEnabled, int... serverPorts)
-      throws Exception {
-    return startClientVM(index, ccf -> {
-      ccf.setPoolSubscriptionEnabled(subscriptionEnabled);
-      for (int port : serverPorts) {
-        ccf.addPoolServer("localhost", port);
-      }
-    });
+    return startClientVM(index,
+        c -> c.withProperties(properties).withCacheSetup(cacheFactorySetup));
