GEODE-212: improve off-heap + ResourceManager performance

The synchronous code that notifies the async listener now does
a quick check to see if an event might be needed. This is done
with no synchronization. It just does two volatile reads.
The only time the synchronized notify is now needed is if we might
have crossed a threshold boundary or if the listener indicates it
really wants an event.

The old code called System.currentTimeMillis everytime it created
a MemoryEvent. This timestamp was only used by off-heap to reduce
how many notifications were done when the state is not normal.
Heap does notifications in abnormal states every time the amount
of memory changes. Off-heap does it when abnormal at most every second
by using the timestamp.
To get rid of all these currentTimeMillis calls the new code has the
background OffHeapMemoryUsageListener times out its wait call every
second. If it times out it will set a volatile that indicates it
wants the next abnormal event.

-  private volatile MemoryState state;
+  private final MemoryState state;
-  private final long eventTime;
-    this.eventTime = System.currentTimeMillis();
-  public long getEventTime() {
-    return this.eventTime;
-  }
-
-        .append(",eventTime:" + this.eventTime)
