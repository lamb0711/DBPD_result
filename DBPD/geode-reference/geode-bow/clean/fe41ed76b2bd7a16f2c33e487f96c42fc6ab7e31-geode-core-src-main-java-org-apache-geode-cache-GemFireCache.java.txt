GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-   * Returns the name of this cache. This method does not throw <code>CacheClosedException</code> if
-   * the cache is closed.
+   * Returns the name of this cache. This method does not throw {@code CacheClosedException} if the
+   * cache is closed.
-   * <code>CacheClosedException</code> if the cache is closed.
+   * {@code CacheClosedException} if the cache is closed.
-   * Returns the <code>ResourceManager</code> for managing this cache's resources.
+   * Returns the {@code ResourceManager} for managing this cache's resources.
-   * @return <code>ResourceManager</code> for managing this cache's resources
+   * @return {@code ResourceManager} for managing this cache's resources
-   * Returns the <code>RegionAttributes</code> with the given <code>id</code> or <code>null</code>
-   * if no <code>RegionAttributes</code> with that id exists.
+   * Returns the {@code RegionAttributes} with the given {@code id} or {@code null} if no
+   * {@code RegionAttributes} with that id exists.
-   * Sets the <code>id</code> of the given <code>RegionAttributes</code>. If a region attributes
-   * named <code>name</code> already exists, the mapping will be overwritten with
-   * <code>attrs</code>. However, changing the mapping will not effect existing regions.
+   * Sets the {@code id} of the given {@code RegionAttributes}. If a region attributes named
+   * {@code name} already exists, the mapping will be overwritten with {@code attrs}. However,
+   * changing the mapping will not effect existing regions.
-   * @param attrs The attributes to associate with <code>id</code>. If <code>attrs</code> is
-   *        <code>null</code>, any existing <code>RegionAttributes</code> associated with
-   *        <code>id</code> will be removed.
+   * @param attrs The attributes to associate with {@code id}. If {@code attrs} is {@code null}, any
+   *        existing {@code RegionAttributes} associated with {@code id} will be removed.
-   * Because this method may perform a {@link Region#put(Object, Object) put} on a
-   * <code>Region</code>, it declares that it throws a <code>TimeoutException</code>,
-   * <code>CacheWriterException</code>, <code>GatewayException</code>, or
-   * <code>RegionExistsException</code>.
+   * Because this method may perform a {@link Region#put(Object, Object) put} on a {@code Region},
+   * it declares that it throws a {@code TimeoutException}, {@code CacheWriterException},
+   * {@code GatewayException}, or {@code RegionExistsException}.
-   * @throws CacheXmlException If the XML read from <code>is</code> does not conform to the dtd or
-   *         if an <code>IOException</code> occurs while reading the XML.
+   * @throws CacheXmlException If the XML read from {@code is} does not conform to the dtd or if an
+   *         {@code IOException} occurs while reading the XML.
-   * Gets the logging object for GemFire. This method does not throw
-   * <code>CacheClosedException</code> if the cache is closed.
+   * Gets the logging object for GemFire. This method does not throw {@code CacheClosedException} if
+   * the cache is closed.
-   * <code>CacheClosedException</code> if the cache is closed.
+   * {@code CacheClosedException} if the cache is closed.
-   * Returns the DiskStore by name or <code>null</code> if no disk store is found.
+   * Returns the DiskStore by name or {@code null} if no disk store is found.
-   * @param name the name of the disk store to find. If <code>null</code> then the default disk
-   *        store, if it exists, is returned.
+   * @param name the name of the disk store to find. If {@code null} then the default disk store, if
+   *        it exists, is returned.
-   * Returns the Declarable used to initialize this cache or <code>null</code> if it does not have
-   * an initializer.
+   * Returns the Declarable used to initialize this cache or {@code null} if it does not have an
+   * initializer.
-   * Returns the Properties used to initialize the cache initializer or <code>null</code> if no
+   * Returns the Properties used to initialize the cache initializer or {@code null} if no
