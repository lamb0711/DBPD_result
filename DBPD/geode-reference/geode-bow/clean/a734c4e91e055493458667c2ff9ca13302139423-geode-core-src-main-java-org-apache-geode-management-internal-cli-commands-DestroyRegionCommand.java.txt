 GEODE-5971: refactor DestroyRegionCommand and CreateRegionCommand.interceptor (#3299)

* GEODE-5971: refactor DestroyRegionCommand and CreateRegionCommand.interceptor to use ResultModel

+import java.util.Objects;
-import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.cli.GfshCommand;
-import org.apache.geode.management.internal.cli.result.CommandResult;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.remote.CommandExecutor;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-public class DestroyRegionCommand extends InternalGfshCommand {
+public class DestroyRegionCommand extends GfshCommand {
-  public Result destroyRegion(
+  public ResultModel destroyRegion(
-      return ResultBuilder.createGemFireErrorResult(e.getMessage());
+      return ResultModel.createError(e.getMessage());
-    CommandResult result = ResultBuilder.buildResult(resultsList);
+    ResultModel result = ResultModel.createMemberStatusResult(resultsList);
+    InternalConfigurationPersistenceService configurationPersistenceService =
+        getConfigurationPersistenceService();
-      persistClusterConfiguration(result,
-          () -> ((InternalConfigurationPersistenceService) getConfigurationPersistenceService())
-              .deleteXmlEntity(xmlEntity, null));
+      if (configurationPersistenceService == null) {
+        result.addInfo().addLine(CommandExecutor.SERVICE_NOT_RUNNING_CHANGE_NOT_PERSISTED);
+      } else {
+        configurationPersistenceService.deleteXmlEntity(xmlEntity, null);
+      }
+  private XmlEntity findXmlEntity(List<CliFunctionResult> functionResults) {
+    return functionResults.stream().filter(CliFunctionResult::isSuccessful)
+        .map(CliFunctionResult::getXmlEntity).filter(Objects::nonNull).findFirst().orElse(null);
+  }
+
