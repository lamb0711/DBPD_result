GEODE-5541: A create followed by a destroy of the same key will not invoke cache listener on remote nodes. (#2282)

* Both far side and near side will check if need to add destroy event in pending callbacks in LocalRegion to avoid invoke a no op destroy event.
-      this.entries.txApplyDestroy(key, rmtOrigin, event, inTokenMode, needRIDestroyToken, op,
+      if (!needsPendingCallbacksForDestroy(key, txEntryState)) {
+        pendingCallbacks = new ArrayList<>();
+      }
+      getRegionMap().txApplyDestroy(key, rmtOrigin, event, inTokenMode, needRIDestroyToken, op,
+  boolean needsPendingCallbacksForDestroy(Object key, TXEntryState txEntryState) {
+    if (isProxy()) {
+      return true;
+    }
+    if (txEntryState != null) {
+      // nearside on tx host
+      // a destroy on destroyed or removed token, to local committed state, becomes a noop
+      // since nothing needed to be done locally.
+      // We don't want to actually do the destroy since we told the
+      // transaction listener that no destroy was done.
+      Object originalValue = txEntryState.getOriginalValue();
+      return originalValue != null && !Token.isRemoved(originalValue);
+    }
+    // farside without TXEntryState
+    RegionEntry regionEntry = basicGetEntry(key);
+    return regionEntry != null && !regionEntry.isDestroyedOrRemoved();
+  }
+
