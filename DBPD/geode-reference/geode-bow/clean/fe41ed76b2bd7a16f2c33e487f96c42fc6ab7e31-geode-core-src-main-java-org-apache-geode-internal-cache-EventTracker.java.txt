GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-/**
- * 
- */
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
+
+import org.apache.logging.log4j.Logger;
+
-import org.apache.logging.log4j.Logger;
-
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.util.*;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ConcurrentMap;
-
-  GemFireCacheImpl cache;
+  InternalCache cache;
-   * 
+   *
-  public static ExpiryTask startTrackerServices(GemFireCacheImpl cache) {
+  public static ExpiryTask startTrackerServices(InternalCache cache) {
-        PoolFactory.DEFAULT_SUBSCRIPTION_MESSAGE_TRACKING_TIMEOUT / 3).longValue();
+        PoolFactory.DEFAULT_SUBSCRIPTION_MESSAGE_TRACKING_TIMEOUT / 3);
-   * 
+   *
-  public static void stopTrackerServices(GemFireCacheImpl cache) {
+  public static void stopTrackerServices(InternalCache cache) {
-   * @param event
-   * @param eventID
+
+
-    BulkOpHolder() {}
+    BulkOpHolder() {
+      // do nothing
+    }
-  static class ExpiryTask extends SystemTimerTask {
+  public static class ExpiryTask extends SystemTimerTask {
-    GemFireCacheImpl cache;
+    InternalCache cache;
-    public ExpiryTask(GemFireCacheImpl cache, long expiryTime) {
+    public ExpiryTask(InternalCache cache, long expiryTime) {
