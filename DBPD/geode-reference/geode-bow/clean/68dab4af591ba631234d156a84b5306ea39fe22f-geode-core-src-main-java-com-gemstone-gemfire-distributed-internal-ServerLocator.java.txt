GEODE-956 Product use log shows duplicate entries

The product use logger was adding up the load of all of the servers and
displaying it, but each load is a float between zero and 1.0 so the total
was always zero.  I've modified it to figure out the correct connection
count for each CacheServer and also log the subscription queue count.

The list of servers now has duplicate entries removed by putting all of
the servers into a Set.

-  private volatile ArrayList cachedLocators;
+  private volatile List<ServerLocation> cachedLocators;
+
+  private static final long SERVER_LOAD_LOG_INTERVAL = (60 * 60 * 1000); // log server load once an hour
+  private volatile long lastLogTime;
+
-    ArrayList controllers = getLocators();
+    List<ServerLocation> controllers = getLocators();
-  private ArrayList getLocators() {
+  private List<ServerLocation> getLocators() {
-        List profiles = advisor.fetchControllers();
-        ArrayList result = new ArrayList(profiles.size() + 1);
-        for (Iterator itr = profiles.iterator(); itr.hasNext(); ) {
-          result.add(buildServerLocation((ControllerProfile) itr.next()));
+        List<ControllerProfile> profiles = advisor.fetchControllers();
+        List<ServerLocation> result = new ArrayList<>(profiles.size() + 1);
+        for (ControllerProfile profile: profiles) {
+          result.add(buildServerLocation(profile));
-    logServers();
+    logServers();
-      StringBuilder sb = new StringBuilder(1000);
+      long now = System.currentTimeMillis();
+      long lastLogTime = this.lastLogTime;
+      if (now < lastLogTime + SERVER_LOAD_LOG_INTERVAL) {
+        return;
+      }
+      this.lastLogTime = now;
+      
+      int queues = 0;
-        connections += l.getConnectionLoad();
+        queues += l.getSubscriptionConnectionLoad();
+        connections = (int)Math.ceil(l.getConnectionLoad() / l.getLoadPerConnection());
-      sb.append("server summary: ")
-        .append(loadMap.size())
-        .append(" cache servers with ")
-        .append(connections)
-        .append(" client connections")
-        .append(File.separator)
-      .append("current cache servers : ");
+      Set<DistributedMember> servers;
-        String[] ids = new String[ownerMap.size()];
-        int i=0;
-        for (DistributedMember id: ownerMap.values()) {
-          ids[i++] = id.toString();
-        }
-        Arrays.sort(ids);
-        for (i=0; i<ids.length; i++) {
-          sb.append(ids[i]).append(' ');
-        }
+        servers = new HashSet<>(ownerMap.values());
+      }
+
+      StringBuilder sb = new StringBuilder(1000);
+      sb.append("server count: ")
+        .append(servers.size())
+        .append(" connected client count: ")
+        .append(connections)
+        .append(" client subscription queue count: ")
+        .append(queues)
+        .append(System.lineSeparator())
+        .append("current servers : ");
+      
+      String[] ids = new String[servers.size()];
+      int i=0;
+      for (DistributedMember id: servers) {
+        ids[i++] = id.toString();
+      }
+      Arrays.sort(ids);
+      for (i=0; i<ids.length; i++) {
+        sb.append(ids[i]).append(' ');
