GEODE-3267: Refactoring QueueCommands - updated based on feedback

-import java.util.Iterator;
-        String type, memName;
+        String type;
-
-    if (fpaList != null) {
-      boolean isTypeAdded = false;
-      final String blank = "";
-
-      Iterator<FixedPartitionAttributesInfo> fpaIter = fpaList.iterator();
-      String type, memName;
-
-      while (fpaIter.hasNext()) {
-        FixedPartitionAttributesInfo fpa = fpaIter.next();
-        StringBuilder fpaBuilder = new StringBuilder();
-        fpaBuilder.append(fpa.getPartitionName());
-        fpaBuilder.append(',');
-
-        if (fpa.isPrimary()) {
-          fpaBuilder.append("Primary");
-        } else {
-          fpaBuilder.append("Secondary");
-        }
-        fpaBuilder.append(',');
-        fpaBuilder.append(fpa.getNumBuckets());
-
-        if (!isTypeAdded) {
-          type = "";
-          isTypeAdded = true;
-        } else {
-          type = blank;
-        }
-
-        if (!isMemberNameAdded) {
-          memName = member;
-          isMemberNameAdded = true;
-        } else {
-          memName = blank;
-        }
-
-        writeAttributeToTable(table, memName, type, "Fixed Partition", fpaBuilder.toString());
-      }
+    if (fpaList == null) {
+      return;
+    boolean isTypeAdded = false;
+    final String blank = "";
+    String memName;
+
+    for (FixedPartitionAttributesInfo fpa : fpaList) {
+      StringBuilder fpaBuilder = new StringBuilder();
+      fpaBuilder.append(fpa.getPartitionName());
+      fpaBuilder.append(',');
+
+      if (fpa.isPrimary()) {
+        fpaBuilder.append("Primary");
+      } else {
+        fpaBuilder.append("Secondary");
+      }
+      fpaBuilder.append(',');
+      fpaBuilder.append(fpa.getNumBuckets());
+
+      if (!isTypeAdded) {
+        isTypeAdded = true;
+      }
+
+      if (!isMemberNameAdded) {
+        memName = member;
+        isMemberNameAdded = true;
+      } else {
+        memName = blank;
+      }
+      writeAttributeToTable(table, memName, "", "Fixed Partition", fpaBuilder.toString());
+    }
