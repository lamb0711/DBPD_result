Merge branch 'release/1.0.0-incubating.M3'

+import java.io.InputStream;
-import jline.Terminal;
-
-import jline.console.ConsoleReader;
-import org.springframework.shell.core.AbstractShell;
-import org.springframework.shell.core.CommandMarker;
-import org.springframework.shell.core.Converter;
-import org.springframework.shell.core.ExecutionStrategy;
-import org.springframework.shell.core.ExitShellRequest;
-import org.springframework.shell.core.JLineLogHandler;
-import org.springframework.shell.core.JLineShell;
-import org.springframework.shell.core.Parser;
-import org.springframework.shell.event.ShellStatus.Status;
-
+import com.gemstone.gemfire.internal.util.HostName;
+import org.springframework.shell.core.AbstractShell;
+import org.springframework.shell.core.CommandMarker;
+import org.springframework.shell.core.Converter;
+import org.springframework.shell.core.ExecutionStrategy;
+import org.springframework.shell.core.ExitShellRequest;
+import org.springframework.shell.core.JLineLogHandler;
+import org.springframework.shell.core.JLineShell;
+import org.springframework.shell.core.Parser;
+import org.springframework.shell.event.ShellStatus.Status;
+
+import jline.Terminal;
+import jline.console.ConsoleReader;
+
- * @since 7.0
+ * @since GemFire 7.0
-    env.put(ENV_SYS_HOST_NAME,         System.getProperty("user.name"));
+    env.put(ENV_SYS_HOST_NAME,         new HostName().determineHostName());
-// Enable when "use region" command is required. See #46110
-//    env.put(CliConstants.ENV_APP_CONTEXT_PATH,               CliConstants.DEFAULT_APP_CONTEXT_PATH);
-//    readonlyAppEnv.add(CliConstants.ENV_APP_CONTEXT_PATH);
-      return "v" + GemFireVersion.getGemFireVersion();
+      return GemFireVersion.getGemFireVersion();
-      super.logCommandToOutput(GfshHistory.toHistoryLoggable(originalString));
-      super.logCommandToOutput(GfshHistory.toHistoryLoggable("// Post substitution"));
-      super.logCommandToOutput(GfshHistory.toHistoryLoggable("//" + processedLine));
+      super.logCommandToOutput(GfshHistory.redact(originalString));
+      super.logCommandToOutput(GfshHistory.redact("// Post substitution"));
+      super.logCommandToOutput(GfshHistory.redact("//" + processedLine));
-      super.logCommandToOutput(GfshHistory.toHistoryLoggable(processedLine));
+      super.logCommandToOutput(GfshHistory.redact(processedLine));
+  public void clearHistory() {
+    gfshHistory.clear();
+    if(!gfshConfig.deleteHistoryFile()){
+      printAsWarning("Gfsh history file is not deleted");
+    }
+  }
+
