GEODE-6964: Move geode log4j core classes to geode-log4j

Introduce new Logging and Alerting SPIs. Extract all log4j-core code to
geode-log4j module.

The geode-core module no longer contains log4j2.xml and no longer has a
dependency on log4j-core.

All code that uses log4j-core has moved to the new module geode-log4j.
The log4j2.xml for Geode now lives in geode-log4j as well. These
changes ensure that users have better control over logging including
which backend to use. This should improve user experience when using
Spring Boot.

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

-package org.apache.geode.internal.logging;
+package org.apache.geode.logging.internal;
-import static org.apache.geode.internal.logging.Configuration.STARTUP_CONFIGURATION;
-import static org.apache.geode.internal.logging.SessionContext.State.CREATED;
-import static org.apache.geode.internal.logging.SessionContext.State.STARTED;
-import static org.apache.geode.internal.logging.SessionContext.State.STOPPED;
+import static org.apache.geode.logging.internal.Configuration.STARTUP_CONFIGURATION;
+import static org.apache.geode.logging.internal.InternalSessionContext.State.CREATED;
+import static org.apache.geode.logging.internal.InternalSessionContext.State.STARTED;
+import static org.apache.geode.logging.internal.InternalSessionContext.State.STOPPED;
+import org.apache.geode.internal.logging.Banner;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.logging.internal.spi.LogConfigSupplier;
+import org.apache.geode.logging.internal.spi.LogFile;
-public class LoggingSession implements SessionContext {
+public class LoggingSession implements InternalSessionContext {
-  private final LoggingSessionListeners loggingSessionListeners;
+  private final LoggingSessionNotifier loggingSessionNotifier;
-    return create(Configuration.create(), LoggingSessionListeners.get());
+    return create(Configuration.create(), LoggingSessionRegistryProvider.get());
-      final LoggingSessionListeners loggingSessionListeners) {
-    return new LoggingSession(configuration, loggingSessionListeners);
+      final LoggingSessionNotifier loggingSessionNotifier) {
+    return new LoggingSession(configuration, loggingSessionNotifier);
-      final LoggingSessionListeners loggingSessionListeners) {
+      final LoggingSessionNotifier loggingSessionNotifier) {
-    this.loggingSessionListeners = loggingSessionListeners;
+    this.loggingSessionNotifier = loggingSessionNotifier;
-    loggingSessionListeners.createSession(this);
+    loggingSessionNotifier.createSession(this);
-    loggingSessionListeners.startSession();
+    loggingSessionNotifier.startSession();
-    loggingSessionListeners.stopSession();
+    loggingSessionNotifier.stopSession();
-    return loggingSessionListeners.getLogFile();
+    return loggingSessionNotifier.getLogFile();
-  LoggingSessionListeners getLoggingSessionListeners() {
-    return loggingSessionListeners;
+  LoggingSessionNotifier getLoggingSessionNotifier() {
+    return loggingSessionNotifier;
