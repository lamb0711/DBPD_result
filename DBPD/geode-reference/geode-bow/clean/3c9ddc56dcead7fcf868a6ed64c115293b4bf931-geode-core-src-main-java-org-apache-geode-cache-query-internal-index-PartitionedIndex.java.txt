GEODE-6412: Improve concurrency for getBucketIndex (#3198)

  * Caching an arbitrary index instead of finding one for every getBucketIndex call
  * Refactored to use jmh asych group threads
+  // An arbitrary bucket index from this PartiionedIndex that is used as a representative
+  // index for the entire PartitionIndex. Usually used for scoring/sizing of an index when
+  // selecting which index to use
+  private volatile Index arbitraryBucketIndex;
+      setArbitraryBucketIndex(index);
+      if (index == arbitraryBucketIndex) {
+        setArbitraryBucketIndex(retrieveArbitraryBucketIndex());
+      }
-  /**
-   * Returns one of the bucket index. To get all bucket index use getBucketIndexes()
-   */
-  public Index getBucketIndex() {
+  public void setArbitraryBucketIndex(Index index) {
+    if (arbitraryBucketIndex == null) {
+      arbitraryBucketIndex = index;
+    }
+  }
+
+  public Index retrieveArbitraryBucketIndex() {
+  public Index getBucketIndex() {
+    return arbitraryBucketIndex;
+  }
+
-
-   *
-      int upperBoundOperator, Collection results, Set keysToRemove, ExecutionContext context)
+      int upperBoundOperator, Collection results, Set keysToRemove,
+      ExecutionContext context)
