GEODE-3386 - Make KeyedErrorResponse & ErrorResponse siblings

+import org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities;
-      return Failure.of(BasicTypes.ErrorResponse.newBuilder()
-          .setErrorCode(ProtocolErrorCode.REGION_NOT_FOUND.codeValue)
-          .setMessage("Region passed by client did not exist: " + regionName).build());
+      return Failure.of(
+          ProtobufResponseUtilities.makeErrorResponse(ProtocolErrorCode.REGION_NOT_FOUND.codeValue,
+              "Region passed by client did not exist: " + regionName));
-        return Failure.of(BasicTypes.ErrorResponse.newBuilder()
-            .setErrorCode(ProtocolErrorCode.CONSTRAINT_VIOLATION.codeValue)
-            .setMessage("invalid key or value type for region " + regionName).build());
+        return Failure.of(ProtobufResponseUtilities.makeErrorResponse(
+            ProtocolErrorCode.CONSTRAINT_VIOLATION.codeValue,
+            "invalid key or value type for region " + regionName));
-    } catch (UnsupportedEncodingTypeException ex) {
-      return Failure.of(BasicTypes.ErrorResponse.newBuilder()
-          .setErrorCode(ProtocolErrorCode.VALUE_ENCODING_ERROR.codeValue)
-          .setMessage(ex.getMessage()).build());
-    } catch (CodecNotRegisteredForTypeException ex) {
-      return Failure.of(BasicTypes.ErrorResponse.newBuilder()
-          .setErrorCode(ProtocolErrorCode.VALUE_ENCODING_ERROR.codeValue)
-          .setMessage(ex.getMessage()).build());
+    } catch (UnsupportedEncodingTypeException | CodecNotRegisteredForTypeException ex) {
+      return Failure.of(ProtobufResponseUtilities
+          .makeErrorResponse(ProtocolErrorCode.VALUE_ENCODING_ERROR.codeValue, ex.getMessage()));
