Merge branch 'release/1.3.0'

-
+import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.security.ResourcePermission.Operation;
+import org.apache.geode.security.ResourcePermission.Resource;
+import org.apache.geode.security.ResourcePermission.Target;
-  private final static CloseCQ singleton = new CloseCQ();
+  private static final CloseCQ singleton = new CloseCQ();
-  private CloseCQ() {}
+  private CloseCQ() {
+    // nothing
+  }
-  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-      throws IOException {
+  public void cmdExecute(final Message clientMessage, final ServerConnection serverConnection,
+      final SecurityService securityService, long start) throws IOException {
-    // Based on MessageType.QUERY
-    // Added by Rao 2/1/2007
-    this.securityService.authorizeDataManage();
-
-      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-      if (authzRequest != null) {
-        String queryStr = null;
-        Set cqRegionNames = null;
+      if (cqQuery != null) {
+        securityService.authorize(Resource.DATA, Operation.READ, cqQuery.getRegionName());
-        if (cqQuery != null) {
-          queryStr = cqQuery.getQueryString();
-          cqRegionNames = new HashSet();
-          cqRegionNames.add(((InternalCqQuery) cqQuery).getRegionName());
-          authzRequest.closeCQAuthorize(cqName, queryStr, cqRegionNames);
+        AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
+        if (authzRequest != null) {
+
+          if (cqQuery != null) {
+            String queryStr = cqQuery.getQueryString();
+            Set cqRegionNames = new HashSet();
+            cqRegionNames.add(cqQuery.getRegionName());
+            authzRequest.closeCQAuthorize(cqName, queryStr, cqRegionNames);
+          }
+
+        cqService.closeCq(cqName, id);
-      // String cqNameWithClientId = new String(cqName + "__" +
-      // getMembershipID());
-      cqService.closeCq(cqName, id);
-    {
-      long oldStart = start;
-      start = DistributionStats.getStatTime();
-      stats.incProcessCloseCqTime(start - oldStart);
-    }
+    long oldStart = start;
+    start = DistributionStats.getStatTime();
+    stats.incProcessCloseCqTime(start - oldStart);
