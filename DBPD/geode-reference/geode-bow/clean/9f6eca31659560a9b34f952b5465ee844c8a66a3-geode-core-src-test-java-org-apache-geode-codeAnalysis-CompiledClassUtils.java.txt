GEODE-5183 require toData/fromData methods to correspond to a known version

Methods beginning with toData or fromData in DataSerializable classes
must now correspond to a valid Version or AnalyzeSerializablesJUnitTest
will reject them.  I've renamed a few methods and adjusted
sanctionedDataSerializables.txt to remove them (fromDataProblem,
fromData662)

This closes #1928

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.geode.internal.Version;
+
+  static Set<String> allowedDataSerializerMethods;
+
+  static {
+    allowedDataSerializerMethods = new HashSet<>();
+    Version.getAllVersions().iterator().forEachRemaining((version) -> {
+      allowedDataSerializerMethods.add("toDataPre_" + version.getMethodSuffix());
+      allowedDataSerializerMethods.add("fromDataPre_" + version.getMethodSuffix());
+    });
+  }
+
-          changedClassesSb.append(nc).append(": method count\n");
+          changedClassesSb.append(nc).append(": method count (expected " + gold.methods.size()
+              + " but found " + nc.numMethods() + ")\n");
-          String name = method.name();
-          Integer goldCode = gold.methods.get(name);
+          String methodName = method.name();
+          if (!methodName.equals("toData") && !methodName.equals("fromData")
+              && !allowedDataSerializerMethods.contains(methodName)) {
+            if (comma) {
+              changedClassesSb.append(", and ");
+            } else {
+              changedClassesSb.append(nc).append(":  ");
+              comma = true;
+            }
+            changedClassesSb.append(methodName)
+                .append(" is not a valid method name - doesn't match any Version");
+            continue;
+          }
+          Integer goldCode = gold.methods.get(methodName);
-            changedClassesSb.append(name).append(" was added");
+            changedClassesSb.append(methodName).append(" was added");
-            changedClassesSb.append(name)
+            changedClassesSb.append(methodName)
