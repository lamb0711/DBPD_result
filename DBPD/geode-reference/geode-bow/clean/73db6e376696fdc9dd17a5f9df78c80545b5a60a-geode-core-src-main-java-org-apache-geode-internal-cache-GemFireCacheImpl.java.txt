GEODE-2632: prevent ClassCastException from ConnectionCountProbe to Identifiable

+import java.util.function.BiPredicate;
+import java.util.function.Supplier;
-          boolean isKeyClassSame = clazz.getName().equals(oldEntry.getKey().getClass().getName());
-          boolean isValueEqual = newEntry.getValue().equals(oldEntry.getValue());
-          boolean isKeyIdentifiableAndSameId =
-              Identifiable.class.isInstance(newEntry.getKey()) && ((Identifiable) oldEntry.getKey())
-                  .getId().equals(((Identifiable) newEntry.getKey()).getId());
-          if (isKeyClassSame && (isValueEqual || isKeyIdentifiableAndSameId)) {
+
+          BiPredicate<Declarable, Declarable> isKeyIdentifiableAndSameIdPredicate =
+              (Declarable oldKey, Declarable newKey) -> Identifiable.class.isInstance(newKey)
+                  && ((Identifiable) oldKey).getId().equals(((Identifiable) newKey).getId());
+
+          Supplier<Boolean> isKeyClassSame =
+              () -> clazz.getName().equals(oldEntry.getKey().getClass().getName());
+          Supplier<Boolean> isValueEqual = () -> newEntry.getValue().equals(oldEntry.getValue());
+          Supplier<Boolean> isKeyIdentifiableAndSameId =
+              () -> isKeyIdentifiableAndSameIdPredicate.test(oldEntry.getKey(), newEntry.getKey());
+
+          if (isKeyClassSame.get() && (isValueEqual.get() || isKeyIdentifiableAndSameId.get())) {
