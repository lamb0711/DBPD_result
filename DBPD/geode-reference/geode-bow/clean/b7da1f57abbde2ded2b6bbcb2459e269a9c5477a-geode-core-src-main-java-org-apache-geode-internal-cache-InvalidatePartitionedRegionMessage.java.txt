GEODE-6391: Adding the event ID to the messages (#3184)

        * Event id is included in the DestroyPartitionedRegionMessage and InvalidatePartitionedRegionMessage
	* This is to prevent the NPE
	* The NPE occurs when server tries to notify the clients after receiving the message
	* While getting the thread id and sequence id it ends up with an NPE and event id is null.
+import org.apache.geode.internal.Version;
+  @Override
+  public EventID getEventID() {
+    return eventID;
+  }
+
+  private EventID eventID;
+
-      ReplyProcessor21 processor) {
+      ReplyProcessor21 processor, EventID eventID) {
+    this.eventID = eventID;
-        event.getCallbackArgument(), r, response);
+        event.getCallbackArgument(), r, response, event.getEventId());
-        !dm.getId().equals(getSender()), getSender());
+        !dm.getId().equals(getSender()), getSender(), getEventID());
+  public void fromDataPre_GEODE_1_9_0_0(DataInput in) throws IOException, ClassNotFoundException {
+    super.fromData(in);
+    this.callbackArg = DataSerializer.readObject(in);
+  }
+
-    super.fromData(in);
-    this.callbackArg = DataSerializer.readObject(in);
+    fromDataPre_GEODE_1_9_0_0(in);
+    this.eventID = DataSerializer.readObject(in);
+  }
+
+  public void toDataPre_GEODE_1_9_0_0(DataOutput out) throws IOException {
+    super.toData(out);
+    DataSerializer.writeObject(this.callbackArg, out);
-    super.toData(out);
-    DataSerializer.writeObject(this.callbackArg, out);
+    toDataPre_GEODE_1_9_0_0(out);
+    DataSerializer.writeObject(this.eventID, out);
+  }
+
+  @Override
+  public Version[] getSerializationVersions() {
+    return new Version[] {Version.GEODE_190};
