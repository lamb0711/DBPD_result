Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  private long avg20DaysVol=0;
+  private long avg20DaysVol = 0;
-  
+
-  
-  /* public no-arg constructor required for DataSerializable */  
+
+  /* public no-arg constructor required for DataSerializable */
-    //GemFireCacheImpl.getInstance().getLoggerI18n().fine(new Exception("DEBUG"));
+    // GemFireCacheImpl.getInstance().getLoggerI18n().fine(new Exception("DEBUG"));
-    //GemFireCacheImpl.getInstance().getLoggerI18n().fine(new Exception("DEBUG" + this.secId));
+    // GemFireCacheImpl.getInstance().getLoggerI18n().fine(new Exception("DEBUG" + this.secId));
-  
+
-    if (!(o instanceof PositionPdx)) return false;
-    return this.secId.equals(((PositionPdx)o).secId);
+    if (!(o instanceof PositionPdx))
+      return false;
+    return this.secId.equals(((PositionPdx) o).secId);
-  
+
-  
-  
+
+
-  
+
-  
-  public String getSecId(){
+
+  public String getSecId() {
-  
-  public int getId(){
+
+  public int getId() {
-  
-  public double getSharesOutstanding(){
+
+  public double getSharesOutstanding() {
-  
-  public String toString(){
-    return "PositionPdx [secId=" + this.secId + " out=" + this.sharesOutstanding
-           + " type=" + this.secType + " id=" + this.pid + " mktValue="
-           + this.mktValue + "]";
+
+  public String toString() {
+    return "PositionPdx [secId=" + this.secId + " out=" + this.sharesOutstanding + " type="
+        + this.secType + " id=" + this.pid + " mktValue=" + this.mktValue + "]";
-  
-  public Set getSet(int size){
+
+  public Set getSet(int size) {
-    for(int i=0;i<size;i++){
-      set.add(""+i);
+    for (int i = 0; i < size; i++) {
+      set.add("" + i);
-  
-  public Set getCol(){
+
+  public Set getCol() {
-    for(int i=0;i<2;i++){
-      set.add(""+i);
+    for (int i = 0; i < 2; i++) {
+      set.add("" + i);
-  
+
-  
+
-    //GemFireCacheImpl.getInstance().getLoggerI18n().fine(new Exception("DEBUG fromData() " + this.secId));    
+    // GemFireCacheImpl.getInstance().getLoggerI18n().fine(new Exception("DEBUG fromData() " +
+    // this.secId));
-  
+
-    out.writeLong("avg20DaysVol",this.avg20DaysVol);
+    out.writeLong("avg20DaysVol", this.avg20DaysVol);
-    out.writeDouble("convRatio",this.convRatio);
+    out.writeDouble("convRatio", this.convRatio);
- }
+  }
-  public int compareTo(Object o)
-  {
-    if( o == this || ((PositionPdx)o).secId.equals(this.secId)) {
+  public int compareTo(Object o) {
+    if (o == this || ((PositionPdx) o).secId.equals(this.secId)) {
-      return this.pid < ((PositionPdx)o).pid ? -1:1;
+      return this.pid < ((PositionPdx) o).pid ? -1 : 1;
-     
-  } 
-  
+
+  }
+
