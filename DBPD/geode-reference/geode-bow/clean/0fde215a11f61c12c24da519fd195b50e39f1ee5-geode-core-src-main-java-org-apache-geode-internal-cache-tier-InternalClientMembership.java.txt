GEODE-3407: fix deadlock between JMX and Membership

Change InternalClientMembership to not synchronize on CacheFactory
by accepting Cache parameter from CacheServerBridge.

New regression test confirms bug and this fix.

This closes #697

-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.internal.net.SocketCreator;
+import org.apache.geode.cache.server.CacheServer;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.cache.InternalCache;
-    Map clientQueueSizes = new HashMap();
-    InternalCache c = (InternalCache) CacheFactory.getAnyInstance();
-    if (c == null) // Add a NULL Check
-      return clientQueueSizes;
+    return getClientQueueSizes((InternalCache) CacheFactory.getAnyInstance());
+  }
-    for (Iterator bsii = c.getCacheServers().iterator(); bsii.hasNext();) {
-      CacheServerImpl bsi = (CacheServerImpl) bsii.next();
-      AcceptorImpl ai = bsi.getAcceptor();
-      if (ai != null && ai.getCacheClientNotifier() != null) {
-        clientQueueSizes.putAll(ai.getCacheClientNotifier().getClientQueueSizes());
+  public static Map getClientQueueSizes(final InternalCache cache) {
+    if (cache == null) {
+      return Collections.emptyMap();
+    }
+
+    Map clientQueueSizes = new HashMap();
+    for (CacheServer cacheServer : cache.getCacheServers()) {
+      CacheServerImpl cacheServerImpl = (CacheServerImpl) cacheServer;
+      AcceptorImpl acceptor = cacheServerImpl.getAcceptor();
+      if (acceptor != null && acceptor.getCacheClientNotifier() != null) {
+        clientQueueSizes.putAll(acceptor.getCacheClientNotifier().getClientQueueSizes());
-    } // for
+    }
