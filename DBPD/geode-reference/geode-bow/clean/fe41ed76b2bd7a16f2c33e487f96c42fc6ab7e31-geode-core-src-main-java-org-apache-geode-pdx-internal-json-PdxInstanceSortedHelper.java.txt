GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import java.util.Collection;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.SortedMap;
-import java.util.concurrent.ConcurrentSkipListMap;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.pdx.internal.PdxInstanceFactoryImpl;
-/*
+/**
+  private InternalCache getCache() {
+    return (InternalCache) CacheFactory.getAnyInstance();
+  }
+
-    GemFireCacheImpl gci = (GemFireCacheImpl) CacheFactory.getAnyInstance();
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#getParent()
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#setPdxFieldName(java.lang.String)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addStringField(java.lang.String,
-   * java.lang.String)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addByteField(java.lang.String, byte)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addShortField(java.lang.String, short)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addIntField(java.lang.String, int)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addLongField(java.lang.String, long)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addBigDecimalField(java.lang.String,
-   * java.math.BigDecimal)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addBigIntegerField(java.lang.String,
-   * java.math.BigInteger)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addBooleanField(java.lang.String,
-   * boolean)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addFloatField(java.lang.String, float)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addDoubleField(java.lang.String,
-   * double)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addNullField(java.lang.String)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addListField(java.lang.String,
-   * org.apache.geode.pdx.internal.json.PdxListHelper)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#endListField(java.lang.String)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#addObjectField(java.lang.String,
-   * org.apache.geode.pdx.PdxInstance)
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#endObjectField(java.lang.String)
-   */
-
-  static PdxInstanceFactory createPdxInstanceFactory() {
-    GemFireCacheImpl gci = (GemFireCacheImpl) CacheFactory.getAnyInstance();
-    return gci.createPdxInstanceFactory(JSONFormatter.JSON_CLASSNAME, false);
+  private PdxInstanceFactory createPdxInstanceFactory() {
+    InternalCache cache = getCache();
+    return cache.createPdxInstanceFactory(JSONFormatter.JSON_CLASSNAME, false);
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#getPdxInstance()
-   */
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.pdx.internal.json.JSONToPdxMapper#getPdxFieldName()
-   */
-    // return m_fieldName != null ? m_fieldName : "emptyclassname"; //when object is just like { }
