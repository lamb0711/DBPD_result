Geode 7013 command line help broken (#3858)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Owen Nichols <onichols@pivotal.io>
+import java.util.stream.Collectors;
+import org.apache.geode.management.cli.ConverterHint;
+import org.apache.geode.management.internal.cli.i18n.CliStrings;
+
-  public static List<String> splitWithWhiteSpace(String input) {
+  private static List<String> splitWithWhiteSpace(String input) {
-    StringBuffer rawInput = new StringBuffer();
+    StringBuilder rawInput = new StringBuilder();
-    cursor = userInput.length();
+      // workaround for SimpleParser bugs with "" option key, and spaces in option values
+      int curs =
+          completeSpecial(candidates, userInput, inputTokens, CliStrings.HELP, ConverterHint.HELP);
+      if (curs > 0) {
+        return curs;
+      }
+      curs =
+          completeSpecial(candidates, userInput, inputTokens, CliStrings.HINT, ConverterHint.HINT);
+      if (curs > 0) {
+        return curs;
+      }
+
+   * gets a specific String converter from the list of registered converters
+   */
+  private Converter<?> converterFor(String converterHint) {
+    for (Converter<?> candidate : getConverters()) {
+      if (candidate.supports(String.class, converterHint)) {
+        return candidate;
+      }
+    }
+    return null;
+  }
+
+  /**
+   * uses a specific converter directly, bypassing the need to find it by the command's options
+   */
+  private int completeSpecial(List<Completion> candidates, String userInput,
+      List<String> inputTokens, String cmd,
+      String converterHint) {
+    if (inputTokens.get(0).equals(cmd)) {
+      String prefix = userInput.equals(cmd) ? " " : "";
+      String existing = String.join(" ", inputTokens.subList(1, inputTokens.size())).toLowerCase();
+      List<Completion> all = new ArrayList<>();
+      Converter<?> converter = converterFor(converterHint);
+      if (converter != null) {
+        converter.getAllPossibleValues(all, null, null, null, null);
+        candidates.addAll(all.stream().filter(c -> c.getValue().toLowerCase().startsWith(existing))
+            .map(c -> new Completion(prefix + c.getValue()))
+            .collect(Collectors.toList()));
+        return Math.min(userInput.length(), cmd.length() + 1);
+      }
+    }
+    return 0;
+  }
+
+  /**
