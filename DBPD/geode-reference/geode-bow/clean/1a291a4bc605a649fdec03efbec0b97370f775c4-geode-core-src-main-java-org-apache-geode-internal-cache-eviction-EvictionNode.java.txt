GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

+package org.apache.geode.internal.cache.eviction;
-package org.apache.geode.internal.cache.lru;
+import org.apache.geode.internal.cache.RegionEntryContext;
-public interface LRUClockNode {
+public interface EvictionNode {
-  public void setNextLRUNode(LRUClockNode next);
+  void setNext(EvictionNode next);
-  public void setPrevLRUNode(LRUClockNode prev);
+  void setPrevious(EvictionNode previous);
-  public LRUClockNode nextLRUNode();
+  EvictionNode next();
-  public LRUClockNode prevLRUNode();
+  EvictionNode previous();
-  public int updateEntrySize(EnableLRU ccHelper);
+  int updateEntrySize(EvictionController ccHelper);
-  public int updateEntrySize(EnableLRU ccHelper, Object value);
+  int updateEntrySize(EvictionController ccHelper, Object value);
-  public int getEntrySize();
+  int getEntrySize();
-  public boolean testRecentlyUsed();
+  boolean isRecentlyUsed();
-  public void setRecentlyUsed();
+  void setRecentlyUsed(RegionEntryContext context);
-  public void unsetRecentlyUsed();
+  void unsetRecentlyUsed();
-  public void setEvicted();
+  void setEvicted();
-  public void unsetEvicted();
+  void unsetEvicted();
-  public boolean testEvicted();
+  boolean isEvicted();
+
+  boolean isInUseByTransaction();
