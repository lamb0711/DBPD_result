GEODE-831: unit test FreeListManager

* moved state from SimpleMemoryAllocatorImpl to FreeListManager
* refactored and cleaned up release/free code
* Removed ChunkType and ChunkFactory. They were no longer used by GemFire and complicated the code
* removed BATCH_SIZE; it was an expirement that was not longer used
* combined Chunk and GemFireChunk to the new ObjectChunk class

-import com.gemstone.gemfire.internal.offheap.Chunk;
+import com.gemstone.gemfire.internal.offheap.ObjectChunk;
-    if (v instanceof Chunk) {
+    if (v instanceof ObjectChunk) {
-      if (!((Chunk) v).retain()) {
+      if (!((ObjectChunk) v).retain()) {
-    return (this.newValue instanceof Chunk) || (this.oldValue instanceof Chunk);
+    return (this.newValue instanceof ObjectChunk) || (this.oldValue instanceof ObjectChunk);
-    if (!this.offHeapOk && result instanceof Chunk) {
+    if (!this.offHeapOk && result instanceof ObjectChunk) {
-      if (curOldValue instanceof Chunk) {
+      if (curOldValue instanceof ObjectChunk) {
-    if (v instanceof Chunk) {
+    if (v instanceof ObjectChunk) {
-        boolean couldNotRetain = (!((Chunk) v).retain());
+        boolean couldNotRetain = (!((ObjectChunk) v).retain());
-        if (!((Chunk) v).retain()) {
+        if (!((ObjectChunk) v).retain()) {
-    if (!this.offHeapOk && result instanceof Chunk) {
+    if (!this.offHeapOk && result instanceof ObjectChunk) {
-      if (nv instanceof Chunk) {
+      if (nv instanceof ObjectChunk) {
-      if (ov instanceof Chunk) {
+      if (ov instanceof ObjectChunk) {
-      if (v instanceof Chunk) {
-        if (!((Chunk) v).isCompressed()) { // fix bug 52109
+      if (v instanceof ObjectChunk) {
+        if (!((ObjectChunk) v).isCompressed()) { // fix bug 52109
-      if (!success && reentry instanceof OffHeapRegionEntry && v instanceof Chunk) {
-        OffHeapRegionEntryHelper.releaseEntry((OffHeapRegionEntry)reentry, (Chunk)v);
+      if (!success && reentry instanceof OffHeapRegionEntry && v instanceof ObjectChunk) {
+        OffHeapRegionEntryHelper.releaseEntry((OffHeapRegionEntry)reentry, (ObjectChunk)v);
-  public static @Unretained Object deserializeChunk(Chunk bytes) {
+  public static @Unretained Object deserializeChunk(ObjectChunk bytes) {
-      if (cd instanceof Chunk) {
+      if (cd instanceof ObjectChunk) {
-    if (ov instanceof Chunk) {
+    if (ov instanceof ObjectChunk) {
-        ((Chunk) ov).release();
+        ((ObjectChunk) ov).release();
-        ((Chunk) ov).release();
+        ((ObjectChunk) ov).release();
-    if (this.newValue instanceof Chunk || this.oldValue instanceof Chunk) {
+    if (this.newValue instanceof ObjectChunk || this.oldValue instanceof ObjectChunk) {
-    if (ov instanceof Chunk) {
+    if (ov instanceof ObjectChunk) {
-    if (nv instanceof Chunk) {
+    if (nv instanceof ObjectChunk) {
-    if (this.newValue instanceof Chunk || this.oldValue instanceof Chunk) {
+    if (this.newValue instanceof ObjectChunk || this.oldValue instanceof ObjectChunk) {
-    return this.oldValue instanceof Chunk;
+    return this.oldValue instanceof ObjectChunk;
