Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

+import java.io.Serializable;
-import org.apache.geode.security.GeodePermission.Operation;
-import org.apache.geode.security.GeodePermission.Resource;
+import org.apache.geode.security.ResourcePermission.Operation;
+import org.apache.geode.security.ResourcePermission.Resource;
+import org.apache.shiro.subject.Subject;
-import com.gemstone.gemfire.internal.security.GeodeSecurityUtil;
+import com.gemstone.gemfire.internal.security.IntegratedSecurityService;
+import com.gemstone.gemfire.internal.security.SecurityService;
+  private SecurityService securityService = IntegratedSecurityService.getSecurityService();
+
-    GeodeSecurityUtil.authorizeRegionRead(regionName);
+    this.securityService.authorizeRegionRead(regionName);
-    GeodeSecurityUtil.authorizeRegionWrite(regionName);
+    this.securityService.authorizeRegionWrite(regionName);
-    GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+    this.securityService.authorizeRegionWrite(regionPath);
-    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
+        Subject subject = this.securityService.getSubject();
+        if(subject!=null){
+          request.setPrincipal((Serializable)subject.getPrincipal());
+        }
-      dataResult = getfn.get(key, keyClass, valueClass, regionPath, loadOnCacheMiss);
+      dataResult = getfn.get(null, key, keyClass, valueClass, regionPath, loadOnCacheMiss);
-    Object result = GeodeSecurityUtil.postProcess(regionPath, key, dataResult.getGetResult());
-    dataResult.setGetResult(result);
-
-    GeodeSecurityUtil.authorizeRegionRead(regionPath, key);
+    this.securityService.authorizeRegionRead(regionPath, key);
-      GeodeSecurityUtil.authorizeRegionWrite(regionPath);
+      this.securityService.authorizeRegionWrite(regionPath);
-      GeodeSecurityUtil.authorizeRegionWrite(regionPath, key);
+      this.securityService.authorizeRegionWrite(regionPath, key);
