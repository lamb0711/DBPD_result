GEODE-5935: move jdbc xml mapping to be in a region  (#2739)

The jdbc region-mapping xml element is now jdbc:mapping.
It no longer has a "region" attribute since it is nested in a region.
Creating a jdbc-mapping requires that the region already exists.
The jdbc:mapping element is now nested in a region element instead of the cache element.
The old connector-service element has been completely removed.
Some of the jdbc-mapping gfsh commands now require at least one server to be running.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen21@apache.org>
Co-authored-by: Ben Ross @BenjaminPerryRoss 

-import static org.apache.geode.distributed.ConfigurationPersistenceService.CLUSTER_CONFIG;
-import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
-import org.apache.geode.distributed.ConfigurationPersistenceService;
+import org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping;
-    Collection<ConnectorService.RegionMapping> mappings = null;
+    Collection<RegionMapping> mappings = null;
-    // check if CC is available and use it to describe the connection
-    ConfigurationPersistenceService ccService = getConfigurationPersistenceService();
-    if (ccService != null) {
-      CacheConfig cacheConfig = ccService.getCacheConfig(CLUSTER_CONFIG);
-      if (cacheConfig != null) {
-        ConnectorService service =
-            cacheConfig.findCustomCacheElement("connector-service", ConnectorService.class);
-        if (service != null) {
-          mappings = service.getRegionMapping();
-        }
+    Set<DistributedMember> members = findMembers(null, null);
+    if (members.size() > 0) {
+      DistributedMember targetMember = members.iterator().next();
+      CliFunctionResult result =
+          executeFunctionAndGetFunctionResult(new ListMappingFunction(), null, targetMember);
+      if (result != null) {
+        mappings = (Collection<RegionMapping>) result.getResultObject();
-      // otherwise get it from any member
-      Set<DistributedMember> members = findMembers(null, null);
-      if (members.size() > 0) {
-        DistributedMember targetMember = members.iterator().next();
-        CliFunctionResult result =
-            executeFunctionAndGetFunctionResult(new ListMappingFunction(), null, targetMember);
-        if (result != null) {
-          mappings = (Collection<ConnectorService.RegionMapping>) result.getResultObject();
-        }
-      }
-    }
-
-    if (mappings == null) {
-      return ResultModel.createInfo(EXPERIMENTAL + "\n" + "No mappings found");
+      return ResultModel.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-  private boolean fillTabularResultData(Collection<ConnectorService.RegionMapping> mappings,
+  private boolean fillTabularResultData(Collection<RegionMapping> mappings,
-    for (ConnectorService.RegionMapping mapping : mappings) {
+    if (mappings == null) {
+      return false;
+    }
+    for (RegionMapping mapping : mappings) {
