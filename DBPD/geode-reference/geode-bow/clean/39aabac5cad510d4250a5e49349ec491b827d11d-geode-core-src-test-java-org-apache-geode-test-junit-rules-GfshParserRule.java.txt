Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

-
-package org.apache.geode.test.dunit.rules;
+package org.apache.geode.test.junit.rules;
-import org.springframework.shell.event.ParseResult;
+import org.apache.geode.internal.ClassPathLoader;
+import org.apache.geode.management.cli.CliMetaData;
+import org.apache.geode.management.cli.Result;
+import org.apache.geode.management.internal.cli.CliAroundInterceptor;
+import org.apache.geode.management.internal.cli.result.ResultBuilder;
-    ParseResult parseResult = parse(command);
+    GfshParseResult parseResult = parse(command);
+
+    if (parseResult == null) {
+      return ResultBuilder.createUserErrorResult("Invalid command: " + command);
+    }
+
+    CliAroundInterceptor interceptor = null;
+    CliMetaData cliMetaData = parseResult.getMethod().getAnnotation(CliMetaData.class);
+
+    if (cliMetaData != null) {
+      String interceptorClass = cliMetaData.interceptor();
+      if (!CliMetaData.ANNOTATION_NULL_VALUE.equals(interceptorClass)) {
+        try {
+          interceptor = (CliAroundInterceptor) ClassPathLoader.getLatest().forName(interceptorClass)
+              .newInstance();
+        } catch (Exception e) {
+          throw new RuntimeException(e);
+        }
+
+        Result preExecResult = interceptor.preExecution(parseResult);
+        if (Result.Status.ERROR.equals(preExecResult.getStatus())) {
+          return (CommandResult) preExecResult;
+        }
+      }
+    }
+
