Merge branch 'develop' into feature/GEODE-1801

-import org.apache.geode.internal.Sendable;
+import org.apache.geode.internal.cache.tier.sockets.OldClientSupportService;
-      cname = swizzleClassNameForWrite(cname);
+      cname = swizzleClassNameForWrite(cname, out);
-    writeString(swizzleClassNameForWrite(className), out);
+    writeString(swizzleClassNameForWrite(className, out), out);
-      className = swizzleClassNameForRead(className);
+      className = swizzleClassNameForRead(className, in);
+   * @param in the source of the class name
-  private static String swizzleClassNameForRead(String name) {
+  private static String swizzleClassNameForRead(String name, DataInput in) {
+    // TCPServer classes are used before a cache exists and support for old clients has been initialized
-    String result = name;
-      result = newPackage + name.substring(oldPackage.length());
+      return newPackage + name.substring(oldPackage.length());
-    return result;
+    OldClientSupportService svc = InternalDataSerializer.getOldClientSupportService();
+    if (svc != null) {
+      return svc.processIncomingClassName(name, in);
+    }
+    return name;
+   * @param out the consumer of the serialized object
-  private static String swizzleClassNameForWrite(String name) {
+  private static String swizzleClassNameForWrite(String name, DataOutput out) {
+    // TCPServer classes are used before a cache exists and support for old clients has been initialized
-    String result = name;
-      result = oldPackage + name.substring(newPackage.length());
+      return oldPackage + name.substring(newPackage.length());
-    return result;
+    OldClientSupportService svc = InternalDataSerializer.getOldClientSupportService();
+    if (svc != null) {
+      return svc.processOutgoingClassName(name, out);
+    }
+    return name;
-    return swizzleClassNameForRead(readString(in));
+    return swizzleClassNameForRead(readString(in), in);
