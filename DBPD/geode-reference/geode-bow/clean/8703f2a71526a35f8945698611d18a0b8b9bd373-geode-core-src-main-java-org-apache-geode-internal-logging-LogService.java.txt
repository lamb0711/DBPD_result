GEODE-1902: reformat code

+
+
+
-    LoggerContext context = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(BASE_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE))
-      .getContext();
+    LoggerContext context = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(BASE_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE)).getContext();
-    final Configuration config = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(ROOT_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE))
-      .getContext()
-      .getConfiguration();
+    final Configuration config = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(ROOT_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE)).getContext().getConfiguration();
+   *
+   *
+   *
-  public static LogWriterLogger createLogWriterLogger(final String name,
-                                                      final String connectionName,
-                                                      final boolean isSecure) {
+  public static LogWriterLogger createLogWriterLogger(final String name, final String connectionName, final boolean isSecure) {
+   *
+   *
-    final Configuration config = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(ROOT_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE))
-      .getContext()
-      .getConfiguration();
+    final Configuration config = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(ROOT_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE)).getContext().getConfiguration();
-    final Configuration config = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(ROOT_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE))
-      .getContext()
-      .getConfiguration();
+    final Configuration config = ((org.apache.logging.log4j.core.Logger) LogManager.getLogger(ROOT_LOGGER_NAME, GemFireParameterizedMessageFactory.INSTANCE)).getContext().getConfiguration();
-    if (Configurator.hasContextWideFilter(config) || Configurator.hasAppenderFilter(config) || Configurator.hasDebugOrLower(config) || Configurator
-      .hasLoggerFilter(config) || Configurator.hasAppenderRefFilter(config)) {
+    if (Configurator.hasContextWideFilter(config) || Configurator.hasAppenderFilter(config) || Configurator.hasDebugOrLower(config) || Configurator.hasLoggerFilter(config) || Configurator.hasAppenderRefFilter(config)) {
-    @SuppressWarnings("synthetic-access")
+    @SuppressWarnings("synthetic-access")
-      StatusLogger.getLogger()
-                  .debug("LogService responding to a property change event. Property name is {}.", evt.getPropertyName());
+      StatusLogger.getLogger().debug("LogService responding to a property change event. Property name is {}.", evt.getPropertyName());
