GEODE-2127 old client support service is not set up to handle arrays

Array classes start with some number of left-brackets ("[") followed by
"L" and the name of the class the array contains.  This adds a unit test
for arrays and adds support for handling them in OldClientSupportProvider.

+   * For backward compatibility we must swizzle the package of some classes that had to be moved
+   * when GemFire was open- sourced. This preserves backward-compatibility.
+   * 
+   * @param name the fully qualified class name
+   * @return the name of the class in this implementation
+   */
+  public static String processIncomingClassName(String name) {
+    // TCPServer classes are used before a cache exists and support for old clients has been
+    // initialized
+    String oldPackage = "com.gemstone.org.jgroups.stack.tcpserver";
+    String newPackage = "org.apache.geode.distributed.internal.tcpserver";
+    if (name.startsWith(oldPackage)) {
+      return newPackage + name.substring(oldPackage.length());
+    }
+    OldClientSupportService svc = getOldClientSupportService();
+    if (svc != null) {
+      return svc.processIncomingClassName(name);
+    }
+    return name;
+  }
+
+  /**
+   * For backward compatibility we must swizzle the package of some classes that had to be moved
+   * when GemFire was open- sourced. This preserves backward-compatibility.
+   * 
+   * @param name the fully qualified class name
+   * @param out the consumer of the serialized object
+   * @return the name of the class in this implementation
+   */
+  public static String processOutgoingClassName(String name, DataOutput out) {
+    // TCPServer classes are used before a cache exists and support for old clients has been
+    // initialized
+    String oldPackage = "com.gemstone.org.jgroups.stack.tcpserver";
+    String newPackage = "org.apache.geode.distributed.internal.tcpserver";
+    if (name.startsWith(newPackage)) {
+      return oldPackage + name.substring(newPackage.length());
+    }
+    OldClientSupportService svc = getOldClientSupportService();
+    if (svc != null) {
+      return svc.processOutgoingClassName(name, out);
+    }
+    return name;
+  }
+
+  /**
-  public static Class<?> getCachedClass(String className) throws ClassNotFoundException {
+  public static Class<?> getCachedClass(String p_className) throws ClassNotFoundException {
+    String className = processIncomingClassName(p_className);
