GEODE-6425: Fixes rollover in some cache stats (#3214)

Changes the following CachePerfStats to long:
 - gets
 - misses
 - put
 - update
 - create
 - destroys
 - invalidates 
 - clear

Handles the error caused by attempting to retrieve a long type stat as an
int. Returns the long value as an int with overflow. This is consistent
with previous behavior of the stats

Co-authored-by: Helena Bales <hbales@pivotal.io>
Co-authored-by: Jacob Barrett <jbarrett@pivotal.io>

-  protected int numOfGets;
+  protected long numOfGets;
-  protected int numOfPuts;
+  protected long numOfPuts;
-  protected int numOfMisses;
+  protected long numOfMisses;
-  private static final Version[] dsfidVersions = new Version[] {Version.GFE_80};
+  private static final Version[] dsfidVersions = new Version[] {Version.GFE_80, Version.GEODE_190};
-  public int getNumOfGets() {
+  public long getNumOfGets() {
-  public void setNumOfGets(int numOfGets) {
+  public void setNumOfGets(long numOfGets) {
-  public int getNumOfPuts() {
+  public long getNumOfPuts() {
-  public void setNumOfPuts(int numOfPuts) {
+  public void setNumOfPuts(long numOfPuts) {
-  public int getNumOfMisses() {
+  public long getNumOfMisses() {
-  public void setNumOfMisses(int numOfMisses) {
+  public void setNumOfMisses(long numOfMisses) {
-    DataSerializer.writePrimitiveInt(numOfGets, out);
-    DataSerializer.writePrimitiveInt(numOfPuts, out);
-    DataSerializer.writePrimitiveInt(numOfMisses, out);
+    DataSerializer.writePrimitiveLong(numOfGets, out);
+    DataSerializer.writePrimitiveLong(numOfPuts, out);
+    DataSerializer.writePrimitiveLong(numOfMisses, out);
-    DataSerializer.writePrimitiveInt(numOfGets, out);
-    DataSerializer.writePrimitiveInt(numOfPuts, out);
-    DataSerializer.writePrimitiveInt(numOfMisses, out);
+    DataSerializer.writePrimitiveInt((int) numOfGets, out);
+    DataSerializer.writePrimitiveInt((int) numOfPuts, out);
+    DataSerializer.writePrimitiveInt((int) numOfMisses, out);
+  public void toDataPre_GEODE_1_9_0_0(DataOutput out) throws IOException {
+    toDataPre_GFE_8_0_0_0(out);
+    DataSerializer.writeHashMap((poolStats), out);
+  }
+
-    this.numOfGets = DataSerializer.readPrimitiveInt(in);
-    this.numOfPuts = DataSerializer.readPrimitiveInt(in);
-    this.numOfMisses = DataSerializer.readPrimitiveInt(in);
+    this.numOfGets = DataSerializer.readPrimitiveLong(in);
+    this.numOfPuts = DataSerializer.readPrimitiveLong(in);
+    this.numOfMisses = DataSerializer.readPrimitiveLong(in);
+  public void fromDataPre_GEODE_1_9_0_0(DataInput in) throws IOException, ClassNotFoundException {
+    fromDataPre_GFE_8_0_0_0(in);
+    this.poolStats = DataSerializer.readHashMap(in);
+  }
+
