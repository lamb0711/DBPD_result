GEODE-11: Make LuceneFunctionContext DataSerializable

LuceneFunctionContext will be sent over wire and needs to be serialized
efficiently using DataSerializableFixedID

https://reviews.apache.org/r/38581/

-import com.gemstone.gemfire.DataSerializable;
+import com.gemstone.gemfire.DataSerializer;
+import com.gemstone.gemfire.internal.DataSerializableFixedID;
+import com.gemstone.gemfire.internal.Version;
-public class LuceneFunctionContext<C extends IndexResultCollector> implements DataSerializable {
-  private static final long serialVersionUID = 1L;
+public class LuceneFunctionContext<C extends IndexResultCollector> implements DataSerializableFixedID {
+  private CollectorManager<C> manager;
+  private int limit;
-  private final CollectorManager<C> manager;
-  private final int limit;
+  LuceneQueryProvider queryProvider;
-  final LuceneQueryProvider queryProvider;
+  public LuceneFunctionContext() {
+    this(null, null);
+  }
+  public LuceneQueryProvider getQueryProvider() {
+    return queryProvider;
+  }
+
+  @Override
+  public int getDSFID() {
+    return LUCENE_FUNCTION_CONTEXT;
+  }
+
-    // TODO Auto-generated method stub
-
+    out.writeInt(limit);
+    DataSerializer.writeObject(queryProvider, out);
+    DataSerializer.writeObject(manager, out);
-    // TODO Auto-generated method stub
-
+    limit = in.readInt();
+    queryProvider = DataSerializer.readObject(in);
+    manager = DataSerializer.readObject(in);
-  public LuceneQueryProvider getQueryProvider() {
-    return queryProvider;
+  @Override
+  public Version[] getSerializationVersions() {
+    return null;
