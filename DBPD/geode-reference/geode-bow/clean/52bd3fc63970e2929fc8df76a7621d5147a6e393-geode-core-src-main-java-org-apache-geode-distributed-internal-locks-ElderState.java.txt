GEODE-4650: Refactor Elder selection (#2393)

GEODE-4650: Resolve race condition in selection of the elder

* no longer cache the elder, re-compute the elder when needed
* extract elder logic to a new class to make unit testing possible
* adds tests for elder selection
* adds tests of DLock Grantor failover
* removes isAdam() - isAdam used to mean that the member was alone (that there were no non-surprise, non-admin members in the cluster) when it joined. This was only used in two places. The first, in the DLockService, protected against recovering dlocks when there isn't a cluster. This usage is replaced with a check for isLoner(). The other use of isAdam was in ElderInitProcessor and was redundant with an inner check if there were other members in the distributed system.
* fix testFairness so that it can be run repeatedly in the same JVM 

Signed-off-by: Dan Smith <dsmith@pivotal.io>
Signed-off-by: Galen O'Sullivan <gosullivan@pivotal.io>
Signed-off-by: Ken Howe <khowe@pivotal.io>

-import java.util.Iterator;
-  private final HashMap nameToInfo;
+  private final HashMap<String, GrantorInfo> nameToInfo;
-    this.nameToInfo = new HashMap();
+    this.nameToInfo = new HashMap<>();
-        StringBuffer sb = new StringBuffer("ElderState initialized with:");
-        for (Iterator grantors = this.nameToInfo.keySet().iterator(); grantors.hasNext();) {
-          Object key = grantors.next();
-          // key=dlock svc name, value=GrantorInfo object
-          sb.append("\n\t" + key + ": " + this.nameToInfo.get(key));
+        StringBuilder sb = new StringBuilder("ElderState initialized with:");
+        for (String key : this.nameToInfo.keySet()) {
+          sb.append("\n\t").append(key).append(": ").append(this.nameToInfo.get(key));
