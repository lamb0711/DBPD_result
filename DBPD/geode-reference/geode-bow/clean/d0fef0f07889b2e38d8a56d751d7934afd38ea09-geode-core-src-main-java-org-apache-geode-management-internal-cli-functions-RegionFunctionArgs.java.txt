GEODE-3915: use ClassName type for cache-loader, writer and listeners (#1327)

* GEODE-3915: use ClassName type for cache-loader, writer and listeners

* use json string to specify the init properties
* make sure the parser works when multiple ClassNames are specified in the command line.
* rework AlterRegionCommandDUnitTest
* make sure AnalyzeSerializableJunitTest works in IDEA.

Signed-off-by: Patrick Rhomberg <prhomberg@pivotal.io>

+import org.apache.geode.cache.CacheListener;
+import org.apache.geode.cache.CacheLoader;
+import org.apache.geode.cache.CacheWriter;
+import org.apache.geode.management.internal.cli.domain.ClassName;
-  private static final long serialVersionUID = 2204943186081037301L;
+  private static final long serialVersionUID = 2204943186081037302L;
-  private RegionFunctionArgs.ExpirationAttrs entryExpirationIdleTime;
-  private RegionFunctionArgs.ExpirationAttrs entryExpirationTTL;
-  private RegionFunctionArgs.ExpirationAttrs regionExpirationIdleTime;
-  private RegionFunctionArgs.ExpirationAttrs regionExpirationTTL;
-  private RegionFunctionArgs.EvictionAttrs evictionAttributes;
+  private ExpirationAttrs entryExpirationIdleTime;
+  private ExpirationAttrs entryExpirationTTL;
+  private ExpirationAttrs regionExpirationIdleTime;
+  private ExpirationAttrs regionExpirationTTL;
+  private EvictionAttrs evictionAttributes;
-  private Set<String> cacheListeners = Collections.emptySet();
-  private String cacheLoader;
-  private String cacheWriter;
+  private Set<ClassName<CacheListener>> cacheListeners = Collections.emptySet();
+  private ClassName<CacheLoader> cacheLoader;
+  private ClassName<CacheWriter> cacheWriter;
-      this.entryExpirationIdleTime = new ExpirationAttrs(
-          RegionFunctionArgs.ExpirationAttrs.ExpirationFor.ENTRY_IDLE, timeout, action);
+      this.entryExpirationIdleTime =
+          new ExpirationAttrs(ExpirationAttrs.ExpirationFor.ENTRY_IDLE, timeout, action);
-      this.entryExpirationTTL = new ExpirationAttrs(
-          RegionFunctionArgs.ExpirationAttrs.ExpirationFor.ENTRY_TTL, timeout, action);
+      this.entryExpirationTTL =
+          new ExpirationAttrs(ExpirationAttrs.ExpirationFor.ENTRY_TTL, timeout, action);
-      this.regionExpirationIdleTime = new ExpirationAttrs(
-          RegionFunctionArgs.ExpirationAttrs.ExpirationFor.REGION_IDLE, timeout, action);
+      this.regionExpirationIdleTime =
+          new ExpirationAttrs(ExpirationAttrs.ExpirationFor.REGION_IDLE, timeout, action);
-      this.regionExpirationTTL = new ExpirationAttrs(
-          RegionFunctionArgs.ExpirationAttrs.ExpirationFor.REGION_TTL, timeout, action);
+      this.regionExpirationTTL =
+          new ExpirationAttrs(ExpirationAttrs.ExpirationFor.REGION_TTL, timeout, action);
-  public void setCacheListeners(String[] cacheListeners) {
+  public void setCacheListeners(ClassName<CacheListener>[] cacheListeners) {
-  public void setCacheLoader(String cacheLoader) {
+  public void setCacheLoader(ClassName<CacheLoader> cacheLoader) {
-  public void setCacheWriter(String cacheWriter) {
+  public void setCacheWriter(ClassName<CacheWriter> cacheWriter) {
-  public RegionFunctionArgs.ExpirationAttrs getEntryExpirationIdleTime() {
+  public ExpirationAttrs getEntryExpirationIdleTime() {
-  public RegionFunctionArgs.ExpirationAttrs getEntryExpirationTTL() {
+  public ExpirationAttrs getEntryExpirationTTL() {
-  public RegionFunctionArgs.ExpirationAttrs getRegionExpirationIdleTime() {
+  public ExpirationAttrs getRegionExpirationIdleTime() {
-  public RegionFunctionArgs.ExpirationAttrs getRegionExpirationTTL() {
+  public ExpirationAttrs getRegionExpirationTTL() {
-  public Set<String> getCacheListeners() {
+  public Set<ClassName<CacheListener>> getCacheListeners() {
-  public String getCacheLoader() {
+  public ClassName<CacheLoader> getCacheLoader() {
-  public String getCacheWriter() {
+  public ClassName<CacheWriter> getCacheWriter() {
