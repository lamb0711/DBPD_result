Merge branch 'release/1.5.0'

- *
+// TODO: In the next major release, we should remove the variables and logic related to the system
+// properties used to determine whether output redirection is allowed or not
+// (DISABLE_OUTPUT_REDIRECTION_PROPERTY, ENABLE_OUTPUT_REDIRECTION_PROPERTY,
+// DISABLE_REDIRECTION_CONFIGURATION_PROPERTY, ENABLE_OUTPUT_REDIRECTION, DISABLE_OUTPUT_REDIRECTION
+// and DISABLE_REDIRECTION_CONFIGURATION). GFSH should always use the new redirect-output flag.
+  /**
+   * @deprecated use GFSH redirect-output flag instead.
+   */
+  @Deprecated
+
+  /**
+   * @deprecated use GFSH redirect-output flag instead.
+   */
+  @Deprecated
-  private static final boolean DISABLE_OUTPUT_REDIRECTION =
-      Boolean.getBoolean(DISABLE_OUTPUT_REDIRECTION_PROPERTY);
+  /**
+   * @deprecated use GFSH redirect-output flag instead.
+   */
+  @Deprecated
+  public static final String DISABLE_REDIRECTION_CONFIGURATION_PROPERTY =
+      DistributionConfig.GEMFIRE_PREFIX + "OSProcess.DISABLE_REDIRECTION_CONFIGURATION";
+
+  /**
+   * @deprecated use GFSH redirect-output flag instead.
+   */
+  @Deprecated
+  /**
+   * @deprecated use GFSH redirect-output flag instead.
+   */
+  @Deprecated
+  private static final boolean DISABLE_OUTPUT_REDIRECTION =
+      Boolean.getBoolean(DISABLE_OUTPUT_REDIRECTION_PROPERTY);
+
+  /**
+   * @deprecated use GFSH redirect-output flag instead.
+   */
+  @Deprecated
+  private static final boolean DISABLE_REDIRECTION_CONFIGURATION =
+      Boolean.getBoolean(DISABLE_REDIRECTION_CONFIGURATION_PROPERTY);
+
-    if (ENABLE_OUTPUT_REDIRECTION && !DISABLE_OUTPUT_REDIRECTION && setOut) {
+    if (((DISABLE_REDIRECTION_CONFIGURATION)
+        || (ENABLE_OUTPUT_REDIRECTION && !DISABLE_OUTPUT_REDIRECTION)) && setOut) {
