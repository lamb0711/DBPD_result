Requiring lucene index to be created before the region

At the moment, adding an AsyncEventQueue after a region is created has
issues - See GEODE-404.

Therefore, in order to create a lucene index programmatically, the
lucene index needs to be created before the region exists so that we can
create the AEQ ahead of time.

With this change, when an LuceneIndex is created, the actual creation is
deferred in a RegionListener callback. When the region is created, we
add the AEQ to the region attributes and create the colocated regions.

+import org.apache.lucene.analysis.standard.StandardAnalyzer;
+import com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImpl;
-    LuceneService service = LuceneServiceProvider.get(cache);
-    //TODO - should this be a different method than the public API here?
-    service.createIndex(getName(), getRegionPath(), getFieldNames());
+    LuceneServiceImpl service = (LuceneServiceImpl) LuceneServiceProvider.get(cache);
+    Region region = target.getExtensionPoint().getTarget();
+    String aeqId = LuceneServiceImpl.getUniqueIndexName(getName(), getRegionPath());
+    //Here, it is safe to add the aeq with the mutator, because onCreate is
+    //fired in a special place before the region is initialized.
+    region.getAttributesMutator().addAsyncEventQueueId(aeqId);
+    service.afterDataRegionCreated(getName(), new StandardAnalyzer(), getRegionPath(), getFieldNames());
