GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier (#4230)

* GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier

Initial refactor: removal of NetMember, MemberAttributes and other classes that subordinated GMS
identifiers.  Repurposing GMSMember as a data packet to hold information required in a membership
identifer.

* fixing failing tests

* fixing failing unit tests

* picking up a change that IntelliJ didn't auto-save & fixing serializables test

* fixing problems with durable client ids

these identifiers morph after the client's membership identifier has been formed
so the member ID needs to be updated before serializing it

* fixing merge error

* updating sanctionedDataSerializables

* fixing lgtm complaint

* removing unnecessary serialization/deserialization methods in GMSUtil

* remove methods no longer needed for serializing an object with a different DSFID

* fixing serializables test

-import java.util.stream.Collectors;
-import org.apache.geode.distributed.internal.membership.gms.GMSMember;
+import org.apache.geode.distributed.internal.membership.gms.api.MemberIdentifier;
- * GMSMessageAdapter wraps a Geode DistributionMessage to be sent via the GMS Messenger
+ * GMSMessageAdapter wraps a Geode DistributionMessage to be sent via the GMS Messenger (JGroups)
-  public void setRecipient(GMSMember member) {
-    geodeMessage.setRecipient(new InternalDistributedMember(new GMSMemberAdapter(member)));
+  public void setRecipient(MemberIdentifier member) {
+    geodeMessage.setRecipient((InternalDistributedMember) member);
-  public void setRecipients(List<GMSMember> recipients) {
-    geodeMessage.setRecipients(
-        recipients.stream().map(GMSMemberAdapter::new).map(InternalDistributedMember::new).collect(
-            Collectors.toList()));
+  public void setRecipients(List<MemberIdentifier> recipients) {
+    throw new UnsupportedOperationException(
+        "setting recipients is not allowed on a message wrapper");
-  public List<GMSMember> getRecipients() {
+  public List<MemberIdentifier> getRecipients() {
-    return Arrays.asList(recipients).stream()
-        .map(recipient -> (GMSMemberAdapter) recipient.getNetMember())
-        .map(GMSMemberAdapter::getGmsMember).collect(
-            Collectors.toList());
+    return Arrays.asList(recipients);
-  public void setSender(GMSMember sender) {
-    geodeMessage.setSender(new InternalDistributedMember(new GMSMemberAdapter(sender)));
+  public void setSender(MemberIdentifier sender) {
+    geodeMessage.setSender((InternalDistributedMember) sender);
-  public GMSMember getSender() {
-    return ((GMSMemberAdapter) geodeMessage.getSender().getNetMember()).getGmsMember();
+  public MemberIdentifier getSender() {
+    return geodeMessage.getSender();
-  public DataSerializableFixedID getGeodeMessage() {
+  DataSerializableFixedID getGeodeMessage() {
