Adding option partition-resolver in gfsh while creating a region.

+import joptsimple.internal.Strings;
+import org.apache.geode.cache.*;
-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.CacheFactory;
-import org.apache.geode.cache.DataPolicy;
-import org.apache.geode.cache.ExpirationAttributes;
-import org.apache.geode.cache.Region;
-import org.apache.geode.cache.RegionAttributes;
-import org.apache.geode.cache.RegionShortcut;
-import org.apache.geode.cache.Scope;
+      @CliOption(key = CliStrings.CREATE_REGION__PARTITION_RESOLVER,
+          unspecifiedDefaultValue = CliMetaData.ANNOTATION_NULL_VALUE,
+          help = CliStrings.CREATE_REGION__PARTITION_RESOLVER__HELP) String partitionResolver,
-            regionAttributes);
+            regionAttributes, partitionResolver);
-            mcastEnabled);
+            mcastEnabled, partitionResolver);
-
-          null, null, null, null, null, null, null, null, evictionMax, null, null, null);
+          null, null, null, null, null, null, null, null, evictionMax, null, null, null, null);
+
+    if (regionFunctionArgs.hasPartitionAttributes()) {
+      boolean partitionResolverFailure = false;
+      if (regionFunctionArgs.isPartitionResolverSet()) {
+        String partitionResolverClassName = regionFunctionArgs.getPartitionResolver();
+        Object partitionResolver = null;
+
+        try {
+          Class<?> compressorClass =
+              (Class<?>) ClassPathLoader.getLatest().forName(partitionResolverClassName);
+          partitionResolver = compressorClass.newInstance();
+        } catch (InstantiationException e) {
+          partitionResolverFailure = true;
+        } catch (IllegalAccessException e) {
+          partitionResolverFailure = true;
+        } catch (ClassNotFoundException e) {
+          partitionResolverFailure = true;
+        }
+        if (partitionResolverFailure || !(partitionResolver instanceof PartitionResolver)) {
+          throw new IllegalArgumentException(
+              CliStrings.format(CliStrings.CREATE_REGION__MSG__INVALID_PARTITION_RESOLVER,
+                  new Object[] {regionFunctionArgs.getCompressor()}));
+        }
+      }
+    }
