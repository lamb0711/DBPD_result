GEODE-4858: refactor CreateIndexCommand and jdbc commands (#1853)

* use ClusterConfigurationService
* introduce SingleGfshCommand to ease update of cluster configuration
* get rid of default methods in CluterConfigurationService
+import static org.apache.geode.cache.configuration.CacheElement.findElement;
+
+import org.apache.geode.cache.Region;
+  public RegionConfig findRegionConfiguration(String regionPath) {
+    if (regionPath.startsWith(Region.SEPARATOR)) {
+      regionPath = regionPath.substring(1);
+    }
+    return findElement(getRegion(), regionPath);
+  }
+
+  public <T extends CacheElement> List<T> findCustomCacheElements(Class<T> classT) {
+    List<T> newList = new ArrayList<>();
+    // streaming won't work here, because it's trying to cast element into CacheElement
+    for (Object element : getCustomCacheElements()) {
+      if (classT.isInstance(element)) {
+        newList.add(classT.cast(element));
+      }
+    }
+    return newList;
+  }
+
+  public <T extends CacheElement> T findCustomCacheElement(String elementId, Class<T> classT) {
+    return findElement(findCustomCacheElements(classT), elementId);
+  }
+
+  public <T extends CacheElement> List<T> findCustomRegionElements(String regionPath,
+      Class<T> classT) {
+    List<T> newList = new ArrayList<>();
+    RegionConfig regionConfig = findRegionConfiguration(regionPath);
+    if (regionConfig == null) {
+      return newList;
+    }
+
+    // streaming won't work here, because it's trying to cast element into CacheElement
+    for (Object element : regionConfig.getCustomRegionElements()) {
+      if (classT.isInstance(element)) {
+        newList.add(classT.cast(element));
+      }
+    }
+    return newList;
+  }
+
+  public <T extends CacheElement> T findCustomRegionElement(String regionPath, String elementId,
+      Class<T> classT) {
+    return findElement(findCustomRegionElements(regionPath, classT), elementId);
+  }
+
