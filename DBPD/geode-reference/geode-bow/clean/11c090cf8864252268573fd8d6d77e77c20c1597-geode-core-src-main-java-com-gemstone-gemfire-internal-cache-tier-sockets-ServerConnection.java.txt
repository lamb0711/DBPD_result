Merge remote-tracking branch 'origin/develop' into feature/GEODE-1162

-  public long setUserAuthorizeAndPostAuthorizeRequest(AuthorizeRequest authzRequest, AuthorizeRequestPP postAuthzRequest)
-  {
+  public long setUserAuthorizeAndPostAuthorizeRequest(
+      AuthorizeRequest authzRequest, AuthorizeRequestPP postAuthzRequest)
+      throws IOException {
-    if (this.clientUserAuths == null )
+    if (this.clientUserAuths == null) {
-    return this.clientUserAuths.putUserAuth(userAuthAttr);
+    }
+    try {
+      return this.clientUserAuths.putUserAuth(userAuthAttr);
+    } catch (NullPointerException npe) {
+      if (this.isTerminated()) {
+        // Bug #52023.
+        throw new IOException("Server connection is terminated.");
+      }
+      throw npe;
+    }
-      return this.clientUserAuths.removeUserId(aIds.getUniqueId(), keepalive);      
-    }
-    catch(Exception ex)
-    {
-      throw new  AuthenticationFailedException("Authentication failed");
+      try {
+        return this.clientUserAuths.removeUserId(aIds.getUniqueId(), keepalive);
+      } catch (NullPointerException npe) {
+        // Bug #52023.
+        logger.debug("Exception {}", npe);
+        return false;
+      }
+    } catch (Exception ex) {
+      throw new AuthenticationFailedException("Authentication failed", ex);
-      throws AuthenticationRequiredException {
+      throws AuthenticationRequiredException, IOException {
-      
-      UserAuthAttributes uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      UserAuthAttributes uaa = null;
+      try {
+        uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      } catch (NullPointerException npe) {
+        if (this.isTerminated()) {
+          // Bug #52023.
+          throw new IOException("Server connection is terminated.");
+        } else {
+          logger.debug("Unexpected exception {}", npe);
+        }
+      }
-  throws AuthenticationRequiredException{
+  throws AuthenticationRequiredException, IOException {
-      UserAuthAttributes uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      UserAuthAttributes uaa = null;
+      try {
+        uaa = this.clientUserAuths.getUserAuthAttributes(uniqueId);
+      } catch (NullPointerException npe) {
+        if (this.isTerminated()) {
+          // Bug #52023.
+          throw new IOException("Server connection is terminated.");
+        } else {
+          logger.debug("Unexpected exception {}", npe);
+        }
+      }
