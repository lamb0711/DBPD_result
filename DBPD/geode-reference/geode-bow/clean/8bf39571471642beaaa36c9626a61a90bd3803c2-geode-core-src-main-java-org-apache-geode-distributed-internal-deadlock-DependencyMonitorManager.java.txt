Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A singleton which keeps track of all of the dependency monitors registered in
- * this VM.
+ * A singleton which keeps track of all of the dependency monitors registered in this VM.
- * Dependency monitors track dependencies between threads that may not be known
- * to the JVM. For example, a thread in one VM may be waiting for a response to
- * a thread in another VM.
+ * Dependency monitors track dependencies between threads that may not be known to the JVM. For
+ * example, a thread in one VM may be waiting for a response to a thread in another VM.
- * {@link DependencyMonitor}s should register themselves with this class. Then, the 
- * {@link DeadlockDetector} will be able to query them for dependencies when finding
- * deadlocks.
+ * {@link DependencyMonitor}s should register themselves with this class. Then, the
+ * {@link DeadlockDetector} will be able to query them for dependencies when finding deadlocks.
-  
+
-  
+
-    //The DLockDependencyMonitor won't get loaded unless we add it here.
+    // The DLockDependencyMonitor won't get loaded unless we add it here.
-  
+
-  
+
-  
+
-   * Get the set of all blocked threads and their dependencies in this VM, as reported
-   * by the dependency monitors registered with this manager.
+   * Get the set of all blocked threads and their dependencies in this VM, as reported by the
+   * dependency monitors registered with this manager.
-    Set<Dependency<Thread, Serializable>> blockedThreads = new HashSet<Dependency<Thread, Serializable>>();
+    Set<Dependency<Thread, Serializable>> blockedThreads =
+        new HashSet<Dependency<Thread, Serializable>>();
-    for(DependencyMonitor monitor : monitors) {
+    for (DependencyMonitor monitor : monitors) {
-    
+
-  
+
-   * Get the set of all resources which are held by threads in this VM, as reported
-   * by the dependency monitors registered with this manager. 
+   * Get the set of all resources which are held by threads in this VM, as reported by the
+   * dependency monitors registered with this manager.
-    Set<Dependency<Serializable, Thread>> heldResources = new HashSet<Dependency<Serializable, Thread>>();
-    for(DependencyMonitor monitor : monitors) {
+    Set<Dependency<Serializable, Thread>> heldResources =
+        new HashSet<Dependency<Serializable, Thread>>();
+    for (DependencyMonitor monitor : monitors) {
-    
+
-  
+
-   * Get all of the threads in this VM.
-   * TODO - do this more efficiently.
-   * TODO - move this to a more appropriate location.
+   * Get all of the threads in this VM. TODO - do this more efficiently. TODO - move this to a more
+   * appropriate location.
-    
-    //Ok, this lame. This seems to be the easiest way
-    //to get all threads in java. Weak.
+
+    // Ok, this lame. This seems to be the easiest way
+    // to get all threads in java. Weak.
