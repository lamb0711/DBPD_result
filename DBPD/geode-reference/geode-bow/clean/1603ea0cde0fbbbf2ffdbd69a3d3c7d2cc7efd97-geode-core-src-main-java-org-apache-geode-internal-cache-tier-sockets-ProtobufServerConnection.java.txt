GEODE-6626: Separate CacheServer and GatewayReceiver

Introduce new interfaces and then have GatewayReceiverServer extend
CacheServerImpl to override behavior.

-
-public class ProtobufServerConnection extends ServerConnection {
+class ProtobufServerConnection extends ServerConnection {
+
-   * Creates a new <code>ProtobufServerConnection</code> that processes messages received from an
-   * edge client over a given <code>Socket</code>.
+   * Creates a new {@code ProtobufServerConnection} that processes messages received from an
+   * edge client over a given {@code Socket}.
-  public ProtobufServerConnection(Socket socket, InternalCache c, CachedRegionHelper helper,
-      CacheServerStats stats, int hsTimeout, int socketBufferSize, String communicationModeStr,
-      byte communicationMode, Acceptor acceptor, ClientProtocolProcessor clientProtocolProcessor,
-      SecurityService securityService) throws IOException {
-    super(socket, c, helper, stats, hsTimeout, socketBufferSize, communicationModeStr,
-        communicationMode, acceptor, securityService);
-    this.protocolProcessor = clientProtocolProcessor;
+  ProtobufServerConnection(final Socket socket, final InternalCache internalCache,
+      final CachedRegionHelper cachedRegionHelper, final CacheServerStats stats,
+      final int hsTimeout, final int socketBufferSize, final String communicationModeStr,
+      final byte communicationMode, final Acceptor acceptor,
+      final ClientProtocolProcessor clientProtocolProcessor, final SecurityService securityService)
+      throws IOException {
+    super(socket, internalCache, cachedRegionHelper, stats, hsTimeout, socketBufferSize,
+        communicationModeStr, communicationMode, acceptor, securityService);
+    protocolProcessor = clientProtocolProcessor;
-    this.output = new BufferedOutputStream(socket.getOutputStream(), socketBufferSize);
+    output = new BufferedOutputStream(socket.getOutputStream(), socketBufferSize);
-    Socket socket = this.getSocket();
+    Socket socket = getSocket();
-        this.setFlagProcessMessagesAsFalse();
+        setFlagProcessMessagesAsFalse();
-      this.setFlagProcessMessagesAsFalse();
+      setFlagProcessMessagesAsFalse();
-      if (!socket.isClosed()) { // GEODE-4300, IOException may be thrown thrown on EOF
+      if (!socket.isClosed()) {
-      this.setFlagProcessMessagesAsFalse();
+      setFlagProcessMessagesAsFalse();
-      acceptor.getClientHealthMonitor().receivedPing(this.clientProxyMembershipID);
+      acceptor.getClientHealthMonitor().receivedPing(clientProxyMembershipID);
-        ((InetSocketAddress) this.getSocket().getRemoteSocketAddress()).getHostName(),
-        this.getSocketPort());
+        ((InetSocketAddress) getSocket().getRemoteSocketAddress()).getHostName(),
+        getSocketPort());
