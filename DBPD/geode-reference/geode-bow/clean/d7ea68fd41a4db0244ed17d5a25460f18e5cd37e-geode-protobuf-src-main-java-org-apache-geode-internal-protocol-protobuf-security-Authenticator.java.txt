GEODE-3739: Refactor protobuf authentication (#922)

GEODE-3739: Refactor protobuf authentication

Use the security settings to determine authentication type, remove new authentication property
Move the authentication and authorization objects out of core
Change authentication messages to use full protobuf message objects
Add and update unit tests

Signed-off-by: Sarge <mdodge@pivotal.io>
Signed-off-by: Brian Rowe <browe@pivotal.io>

-package org.apache.geode.security.internal.server;
+package org.apache.geode.internal.protocol.protobuf.security;
+import org.apache.geode.internal.security.SecurityService;
+import org.apache.geode.security.AuthenticationFailedException;
-import org.apache.geode.security.SecurityManager;
-   * @param securityManager can be used for validating credentials against.
+   * @param securityService used for validating credentials.
+   * @return authenticated principal
-  void authenticate(InputStream inputStream, OutputStream outputStream,
-      SecurityManager securityManager) throws IOException;
-
-  /**
-   * Until authentication is complete, isAuthenticated() must return false, and the socket will
-   * always be passed to the Authenticator. Once authentication succeeds, calls to this function
-   * must always return true.
-   */
-  boolean isAuthenticated();
-
-  /**
-   * Return an authorization object which can be used to determine which permissions this stream has
-   * according to the provided securityManager.
-   */
-  Authorizer getAuthorizer() throws AuthenticationRequiredException;
-
-  /**
-   * @return a unique identifier for this particular implementation (NOOP, PASSTHROUGH, etc.)
-   */
-  String implementationID();
+  Object authenticate(InputStream inputStream, OutputStream outputStream,
+      SecurityService securityService) throws IOException, AuthenticationFailedException;
