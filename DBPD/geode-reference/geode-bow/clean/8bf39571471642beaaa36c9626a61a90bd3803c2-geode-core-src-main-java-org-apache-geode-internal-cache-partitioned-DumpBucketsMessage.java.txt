Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A message used for debugging purposes.  For example if a test
- * fails it can call {@link PartitionedRegion#dumpAllBuckets(boolean)}
- * which sends this message to all VMs that have that 
- * PartitionedRegion defined.
+ * A message used for debugging purposes. For example if a test fails it can call
+ * {@link PartitionedRegion#dumpAllBuckets(boolean)} which sends this message to all VMs that have
+ * that PartitionedRegion defined.
-public final class DumpBucketsMessage extends PartitionMessage
-{
+public final class DumpBucketsMessage extends PartitionMessage {
-  
+
-  
+
-  private DumpBucketsMessage(Set recipients, int regionId, ReplyProcessor21 processor, boolean validate, boolean buckets) {
+  private DumpBucketsMessage(Set recipients, int regionId, ReplyProcessor21 processor,
+      boolean validate, boolean buckets) {
-  public static PartitionResponse send(Set recipients, PartitionedRegion r, 
+  public static PartitionResponse send(Set recipients, PartitionedRegion r,
-    DumpBucketsMessage m = new DumpBucketsMessage(recipients, r.getPRId(), p, validateOnly, onlyBuckets);
+    DumpBucketsMessage m =
+        new DumpBucketsMessage(recipients, r.getPRId(), p, validateOnly, onlyBuckets);
-    /*Set failures =*/ r.getDistributionManager().putOutgoing(m);
-//    if (failures != null && failures.size() > 0) {
-//      throw new PartitionedRegionCommunicationException("Failed sending ", m);
-//    }
+    /* Set failures = */ r.getDistributionManager().putOutgoing(m);
+    // if (failures != null && failures.size() > 0) {
+    // throw new PartitionedRegionCommunicationException("Failed sending ", m);
+    // }
-  protected boolean operateOnPartitionedRegion(DistributionManager dm, 
-      PartitionedRegion pr, long startTime) throws CacheException {
-    
+  protected boolean operateOnPartitionedRegion(DistributionManager dm, PartitionedRegion pr,
+      long startTime) throws CacheException {
+
-  public void fromData(DataInput in) throws IOException, ClassNotFoundException
-  {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
-  public void toData(DataOutput out) throws IOException
-  {
+  public void toData(DataOutput out) throws IOException {
