Merge remote-tracking branch 'upstream/develop' into develop

-
-
+import org.apache.geode.internal.logging.LogFile;
-import org.apache.geode.internal.logging.log4j.LogWriterAppender;
-import org.apache.geode.internal.logging.log4j.LogWriterAppenders;
-
-      LogWriterAppender lwa = LogWriterAppenders.getAppender(LogWriterAppenders.Identifier.MAIN);
-      if (lwa != null) {
-        m.childTail = tailSystemLog(lwa.getChildLogFile());
+      if (sys.getLogFile().isPresent()) {
+        LogFile logFile = sys.getLogFile().get();
+        m.childTail = tailSystemLog(logFile.getChildLogFile());
-        // Assert.assertTrue(false, "TailLogRequest/Response processed in application vm with shared
-        // logging.");
+  @Override
-  // private static String readSystemLog(File logFile) throws IOException {
-  // if (logFile == null || logFile.equals(new File(""))) {
-  // return null;
-  // }
-  // long fileLength = logFile.length();
-  // byte[] buffer = new byte[(int)fileLength];
-  // BufferedInputStream in = new BufferedInputStream(new FileInputStream(logFile));
-  // in.read(buffer, 0, buffer.length);
-  // return new String(buffer).trim();
-  // }
-
-  // private static String readSystemLog(DistributionConfig sc) throws IOException {
-  // File logFile = sc.getLogFile();
-  // if (logFile == null || logFile.equals(new File(""))) {
-  // return null;
-  // }
-  // if (!logFile.isAbsolute()) {
-  // logFile = new File(logFile.getAbsolutePath());
-  // }
-  // return readSystemLog(logFile);
-  // }
-
-
