Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.HashSet;
+import java.util.HashMap;
-import java.util.Set;
+import java.util.Map;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-    long entriesAdded = 0L;
-
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
+    @SuppressWarnings("unchecked")
+    Region<ByteArrayWrapper, Boolean> keyRegion = (Region<ByteArrayWrapper, Boolean>) context
+        .getRegionProvider().getOrCreateRegion(key, RedisDataType.REDIS_SET, context);
-      Set<ByteArrayWrapper> entries = region.get(key);
-      if (entries == null) {
-        entries = new HashSet<>();
-      }
+    if (commandElems.size() >= 4) {
+      Map<ByteArrayWrapper, Boolean> entries = new HashMap<ByteArrayWrapper, Boolean>();
+      for (int i = 2; i < commandElems.size(); i++)
+        entries.put(new ByteArrayWrapper(commandElems.get(i)), true);
-      for (int i = 2; i < commandElems.size(); i++) {
-        if (entries.add(new ByteArrayWrapper(commandElems.get(i)))) {
-          entriesAdded++;
-        }
-      }
-
-      region.put(key, entries);
+      keyRegion.putAll(entries);
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entries.size()));
+    } else {
+      Object v = keyRegion.put(new ByteArrayWrapper(commandElems.get(2)), true);
-          .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entriesAdded));
-
-      // Save key
-      context.getKeyRegistrar().register(command.getKey(), RedisDataType.REDIS_SET);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
+          .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), v == null ? 1 : 0));
