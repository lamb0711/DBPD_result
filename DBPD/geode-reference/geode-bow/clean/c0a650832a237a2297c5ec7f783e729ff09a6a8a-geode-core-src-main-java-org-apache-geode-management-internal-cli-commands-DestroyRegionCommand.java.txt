GEODE-6142: Check JDBC mapping before destroy region (#2950)

gfsh destroy region will now fail if the region has a jdbc-mapping that
has not yet been destroyed.

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jianxia Chen <jchen21@apache.org>

+import org.apache.geode.cache.configuration.CacheConfig;
+import org.apache.geode.cache.configuration.CacheElement;
+import org.apache.geode.cache.configuration.RegionConfig;
+    try {
+      checkForJDBCMapping(regionPath);
+    } catch (IllegalStateException e) {
+      return ResultBuilder.createGemFireErrorResult(e.getMessage());
+    }
+
+  void checkForJDBCMapping(String regionPath) {
+    String regionName = regionPath;
+    if (regionPath.startsWith("/")) {
+      regionName = regionPath.substring(1);
+    }
+    InternalConfigurationPersistenceService ccService = getConfigurationPersistenceService();
+    if (ccService == null) {
+      return;
+    }
+    CacheConfig cacheConfig = ccService.getCacheConfig(null);
+    if (cacheConfig == null) {
+      return;
+    }
+    RegionConfig regionConfig = CacheElement.findElement(cacheConfig.getRegions(), regionName);
+    if (regionConfig == null) {
+      return;
+    }
+    CacheElement element =
+        CacheElement.findElement(regionConfig.getCustomRegionElements(), "jdbc-mapping");
+    if (element != null) {
+      throw new IllegalStateException("Cannot destroy region \"" + regionName
+          + "\" because JDBC mapping exists. Use \"destroy jdbc-mapping\" first.");
+    }
+  }
