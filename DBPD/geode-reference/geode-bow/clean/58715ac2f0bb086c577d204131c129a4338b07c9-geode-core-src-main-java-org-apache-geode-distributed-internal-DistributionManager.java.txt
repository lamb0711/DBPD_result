GEODE-5464: Generify DistributionManager and related classes (#2174)

GEODE-5464: Generify DistributionManager and related classes

* Augment various collections to use generics
* Inline some iterator loops that were trivially "foreach" loops
* remove unused code
* Inline some redundant local variables
* make some methods more private
* change some tests to use `InternalDistributedMember` instead of
  `DistributedMember`.
* Make ThrottlingMemLinkedQueueWithDMStats generic and use atomic.
  - The previous synchronization looked quite wrong.
-import java.util.NoSuchElementException;
-  Set getAllOtherMembers();
+  Set<InternalDistributedMember> getAllOtherMembers();
-  Set getDistributionManagerIds();
+  Set<InternalDistributedMember> getDistributionManagerIds();
-  Set getNormalDistributionManagerIds();
+  Set<InternalDistributedMember> getNormalDistributionManagerIds();
-  Set getDistributionManagerIdsIncludingAdmin();
+  Set<InternalDistributedMember> getDistributionManagerIdsIncludingAdmin();
-  Set getOtherDistributionManagerIds();
+  Set<InternalDistributedMember> getOtherDistributionManagerIds();
-  Set getOtherNormalDistributionManagerIds();
+  Set<InternalDistributedMember> getOtherNormalDistributionManagerIds();
-  Set addMembershipListenerAndGetDistributionManagerIds(MembershipListener l);
+  Set<InternalDistributedMember> addMembershipListenerAndGetDistributionManagerIds(
+      MembershipListener l);
-  Set addAllMembershipListenerAndGetAllIds(MembershipListener l);
+  Set<InternalDistributedMember> addAllMembershipListenerAndGetAllIds(MembershipListener l);
-  Set putOutgoing(DistributionMessage msg);
+  Set<InternalDistributedMember> putOutgoing(DistributionMessage msg);
-  /**
-   * gets this distribution manager's message-processing executor for ordered (i.e. serialized)
-   * message processing
-   */
-  // public Executor getSerialExecutor();
-
-   * Returns the oldest member in the given set of distribution managers. The current implementation
-   * may use n*n/2 comparisons, so use this judiciously
-   *
-   * @return the oldest member of the given collection
-   * @throws NoSuchElementException when none of the given members is actually a member of the
-   *         distributed system.
-   */
-  DistributedMember getOldestMember(Collection members) throws NoSuchElementException;
-
-  /**
-  void setUnfinishedStartups(Collection s);
+  void setUnfinishedStartups(Collection<InternalDistributedMember> s);
