GEODE-7953: Restore Redundancy Internal API (#4909)

* GEODE-7953: Restore Redundancy Internal API

- Add RestoreRedundancyOperation interface and Impl class
- Add RestoreRedundancyResults interface and Impl class
- Add RegionRedundancyStatus interface and Impl class
- Add accessor methods for RestoreRedundancyOperation to ResourceManager interface
- Replace manually-synchronized sets in InternalResourceManager with
ConcurrentHashMap
- Add stats for restore redundancy operations
- Add unit and DUnit tests for all the above

Authored-by: Donal Evans <doevans@pivotal.io>
+import org.apache.geode.internal.cache.partitioned.rebalance.CompositeDirector;
-      PartitionedRegionLoadModel model = null;
+      PartitionedRegionLoadModel loadModel = null;
-      model = buildModel(parallelOperator, detailsMap, resourceManager);
+      loadModel = buildModel(parallelOperator, detailsMap, resourceManager);
-            model.getPartitionedMemberDetails(details.getRegionPath()));
+            loadModel.getPartitionedMemberDetails(details.getRegionPath()));
-      director.initialize(model);
+      director.initialize(loadModel);
+      String operationType = "Rebalancing";
+      if (director instanceof CompositeDirector
+          && ((CompositeDirector) director).isRestoreRedundancy()) {
+        operationType = "Restoring redundancy";
+      }
-          debug("Rebalancing {} detected membership changes. Refetching details", leaderRegion);
+          debug(operationType + " {} detected membership changes. Refetching details",
+              leaderRegion);
-          model.waitForOperations();
+          loadModel.waitForOperations();
-          model = buildModel(parallelOperator, detailsMap, resourceManager);
-          director.membershipChanged(model);
+          loadModel = buildModel(parallelOperator, detailsMap, resourceManager);
+          director.membershipChanged(loadModel);
-          logger.debug("Rebalancing {} Model:{}\n", leaderRegion, model);
+          logger.debug(operationType + " {} Model:{}\n", leaderRegion, loadModel);
-      debug("Rebalancing {} complete. Model:{}\n", leaderRegion, model);
+      debug(operationType + " {} complete. Model:{}\n", leaderRegion, loadModel);
-            model.getPartitionedMemberDetails(details.getRegionPath()));
+            loadModel.getPartitionedMemberDetails(details.getRegionPath()));
+  public PartitionedRegion getTargetRegion() {
+    return targetRegion;
+  }
+
