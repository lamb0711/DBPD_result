Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

-  private NetView lastView;
+  private final NetView lastView;
-  private JChannel channel;
+  private final JChannel channel;
-  private int partitionThreshold;
+  private final int partitionThreshold;
-    receivedAcks = new ConcurrentHashSet<InternalDistributedMember>();
+    receivedAcks = new ConcurrentHashSet<>();
-    addressConversionMap = new ConcurrentHashMap<SocketAddress, InternalDistributedMember>(this.lastView.size());
+    addressConversionMap = new ConcurrentHashMap<>(this.lastView.size());
-    try {
-      sendPingMessages();
-      quorumAchieved = waitForResponses(lastView.getMembers().size(), timeout);
-      // If we did not achieve full quorum, calculate if we achieved quorum
-      if (!quorumAchieved) {
-        quorumAchieved = calculateQuorum();
-      }
-    } finally {
-
+    sendPingMessages();
+    quorumAchieved = waitForResponses(lastView.getMembers().size(), timeout);
+    // If we did not achieve full quorum, calculate if we achieved quorum
+    if (!quorumAchieved) {
+      quorumAchieved = calculateQuorum();
-      Object contents = msg.getBuffer();
-      if (contents instanceof byte[]) {
-        byte[] msgBytes = (byte[]) contents;
-        if (pingPonger.isPingMessage(msgBytes)) {
-          try {
-            pingPonger.sendPongMessage(channel, myAddress, msg.getSrc());
-          } catch (Exception e) {
-            logger.debug("Failed sending Pong message to " + msg.getSrc());
-          }
-        } else if (pingPonger.isPongMessage(msgBytes)) {
-          pongReceived(msg.getSrc());
+      byte[] msgBytes = msg.getBuffer();
+      if (pingPonger.isPingMessage(msgBytes)) {
+        try {
+          pingPonger.sendPongMessage(channel, myAddress, msg.getSrc());
+        } catch (Exception e) {
+          logger.debug("Failed sending Pong message to " + msg.getSrc());
+      } else if (pingPonger.isPongMessage(msgBytes)) {
+        pongReceived(msg.getSrc());
