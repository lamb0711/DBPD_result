Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  CollectionConverter(Type targetType, ArrayType openArrayType,
-      Class openArrayClass, OpenTypeConverter elementConverter) {
+  CollectionConverter(Type targetType, ArrayType openArrayType, Class openArrayClass,
+      OpenTypeConverter elementConverter) {
-     * Determine the concrete class to be used when converting back to this Java
-     * type. We convert all Lists to ArrayList and all Sets to TreeSet. (TreeSet
-     * because it is a SortedSet, so works for both Set and SortedSet.)
+     * Determine the concrete class to be used when converting back to this Java type. We convert
+     * all Lists to ArrayList and all Sets to TreeSet. (TreeSet because it is a SortedSet, so works
+     * for both Set and SortedSet.)
-        final String msg = "Cannot convert SortedSet with non-null comparator: "
-            + comparator;
+        final String msg = "Cannot convert SortedSet with non-null comparator: " + comparator;
-    final Object[] openArray = (Object[]) Array.newInstance(getOpenClass()
-        .getComponentType(), valueCollection.size());
+    final Object[] openArray =
+        (Object[]) Array.newInstance(getOpenClass().getComponentType(), valueCollection.size());
-  public final Object fromNonNullOpenValue(Object openValue)
-      throws InvalidObjectException {
+  public final Object fromNonNullOpenValue(Object openValue) throws InvalidObjectException {
-        final String msg = "Could not add " + o + " to "
-            + collectionClass.getName() + " (duplicate set element?)";
+        final String msg =
+            "Could not add " + o + " to " + collectionClass.getName() + " (duplicate set element?)";
