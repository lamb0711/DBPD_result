GEODE-6861: separate static config object from runtime info in the Clâ€¦ (#3754)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>

* use ConfigRealizer to retrieve the runtime information for configuration on each member
* list result would return a List of Response object which has a configuration object and a list runtime objects
* use existing object for runtime member info and move them to geode-management module.

+import org.apache.geode.internal.cache.InternalCache;
+import org.apache.geode.management.runtime.RuntimeRegionInfo;
-public class RegionConfigRealizer implements ConfigurationRealizer<RegionConfig> {
+public class RegionConfigRealizer
+    implements ConfigurationRealizer<RegionConfig, RuntimeRegionInfo> {
-  public RealizationResult create(RegionConfig regionConfig, Cache cache) {
+  public RealizationResult create(RegionConfig regionConfig, InternalCache cache) {
-  public RealizationResult create(RegionConfig regionConfig, String regionPath, Cache cache) {
+  public RealizationResult create(RegionConfig regionConfig, String regionPath,
+      InternalCache cache) {
-  @Override
-  public boolean exists(RegionConfig config, Cache cache) {
-    return cache.getRegion("/" + config.getName()) != null;
-  }
-  public RealizationResult update(RegionConfig config, Cache cache) {
+  public RuntimeRegionInfo get(RegionConfig config, InternalCache cache) {
+    Region<Object, Object> region = cache.getRegion("/" + config.getName());
+    if (region == null) {
+      return null;
+    }
+
+    RuntimeRegionInfo info = new RuntimeRegionInfo();
+    info.setEntryCount(region.size());
+    return info;
+  }
+
+
+  @Override
+  public RealizationResult update(RegionConfig config, InternalCache cache) {
-  public RealizationResult delete(RegionConfig config, Cache cache) {
+  public RealizationResult delete(RegionConfig config, InternalCache cache) {
