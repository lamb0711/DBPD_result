Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalDistributedSystem.java

-import com.gemstone.gemfire.internal.cache.BucketServerLocation66;
-import com.gemstone.gemfire.internal.cache.EntryOperationImpl;
-import com.gemstone.gemfire.internal.cache.LocalRegion;
-import com.gemstone.gemfire.internal.cache.PartitionedRegionHelper;
+import com.gemstone.gemfire.internal.cache.*;
-  private int fetchTaskCount = 0;
+  private int refreshTaskCount = 0;
+  
+  private Set<String> regionsBeingRefreshed = new HashSet<>();
-        fetchTaskCount++;
+        refreshTaskCount++;
-              fetchTaskCount--;
+              refreshTaskCount--;
-        logger.debug("Scheduling metadata refresh : {}", nwHopType);
+        logger.debug("Scheduling metadata refresh: {} region: {}", nwHopType, region.getName());
-      if(nwHopType == (byte)2){
+      if( nwHopType == PartitionedRegion.NETWORK_HOP_TO_DIFFERENT_GROUP){
-    region.getCachePerfStats().incNonSingleHopsCount();
+    synchronized (fetchTaskCountLock) {
+      if (regionsBeingRefreshed.contains(region.getFullPath())) {
+        return;
+      }
+    }
+      region.getCachePerfStats().incNonSingleHopsCount();
-      synchronized (fetchTaskCountLock){
-        fetchTaskCount++;
+      synchronized (fetchTaskCountLock) {
+        if (regionsBeingRefreshed.contains(region.getFullPath())) {
+          return;
+        }
+        region.getCachePerfStats().incNonSingleHopsCount();
+        regionsBeingRefreshed.add(region.getFullPath());
+        refreshTaskCount++;
-              fetchTaskCount--;
+              regionsBeingRefreshed.remove(region.getFullPath());
+              refreshTaskCount--;
-  public int getFetchTaskCount() {
+  public int getRefreshTaskCount() {
-      return fetchTaskCount;
+      return refreshTaskCount;
