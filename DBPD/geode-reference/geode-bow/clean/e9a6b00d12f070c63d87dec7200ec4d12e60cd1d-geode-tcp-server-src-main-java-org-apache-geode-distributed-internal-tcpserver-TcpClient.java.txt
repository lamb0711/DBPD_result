GEODE-7877: deal with the static Version map in TcpClient (#4817)

* GEODE-7877: deal with the static Version map in TcpClient

The server-version map that tracks Locator versions is now an instance
variable instead of a static.

I looked into removing the map altogether but it's really needed for
rolling-upgrade purposes.  When one locator is rolled to a new version
of Geode but another locator is still running the old version it's
essential that the new locator know that it's communicating with an old
locator.

* added check for socket being closed.

ConnectCommandWithSSLMultiKeyTest ran into a closed-socket exception in two
successive distributedTest runs.
-import org.apache.geode.annotations.internal.MakeNotStatic;
-  @MakeNotStatic
-  private static final Map<HostAndPort, Short> serverVersions =
+  private final Map<HostAndPort, Short> serverVersions =
-      try {
-        sock.setSoLinger(true, 0); // initiate an abort on close to shut down the server's socket
-      } catch (Exception e) {
-        logger.error("Error aborting socket ", e);
+      if (!sock.isClosed()) {
+        try {
+          sock.setSoLinger(true, 0); // initiate an abort on close to shut down the server's socket
+        } catch (Exception e) {
+          logger.error("Error aborting socket ", e);
+        }
+        try {
+          sock.close();
+        } catch (Exception e) {
+          logger.error("Error closing socket ", e);
+        }
-      try {
-        sock.close();
-      } catch (Exception e) {
-        logger.error("Error closing socket ", e);
-      }
-
-
-
-  /**
-   * Clear static class information concerning Locators. This is used in unit tests. It will force
-   * TcpClient to send version-request messages to locators to reestablish knowledge of their
-   * communication protocols.
-   */
-  public static void clearStaticData() {
-    synchronized (serverVersions) {
-      serverVersions.clear();
-    }
-  }
