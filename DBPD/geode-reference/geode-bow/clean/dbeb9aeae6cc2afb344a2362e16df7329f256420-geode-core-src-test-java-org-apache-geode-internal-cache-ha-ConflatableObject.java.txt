Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Implementing class for <code>Conflatable</code> interface. Objects of this
- * class will be add to the queue
+ * Implementing class for <code>Conflatable</code> interface. Objects of this class will be add to
+ * the queue
-public class ConflatableObject implements Conflatable, Serializable
-{
+public class ConflatableObject implements Conflatable, Serializable {
-   * @param key -
-   *          The key for this entry
-   * @param value -
-   *          The value for this entry
-   * @param eventId -
-   *          eventID object for this entry
-   * @param conflate -
-   *          conflate it true
-   * @param regionname -
-   *          The region to which this entry belongs
+   * @param key - The key for this entry
+   * @param value - The value for this entry
+   * @param eventId - eventID object for this entry
+   * @param conflate - conflate it true
+   * @param regionname - The region to which this entry belongs
-  public ConflatableObject(Object key, Object value, EventID eventId,
-      boolean conflate, String regionname) {
+  public ConflatableObject(Object key, Object value, EventID eventId, boolean conflate,
+      String regionname) {
-  public boolean shouldBeConflated()
-  {
+  public boolean shouldBeConflated() {
-  public String getRegionToConflate()
-  {
+  public String getRegionToConflate() {
-  public Object getKeyToConflate()
-  {
+  public Object getKeyToConflate() {
-  public Object getValueToConflate()
-  {
+  public Object getValueToConflate() {
-   * @param value
-   *          The latest value
+   * @param value The latest value
-  public void setLatestValue(Object value)
-  {
-     throw new UnsupportedOperationException("setLatestValue should not be used");
+  public void setLatestValue(Object value) {
+    throw new UnsupportedOperationException("setLatestValue should not be used");
-  public EventID getEventId()
-  {
+  public EventID getEventId() {
-  final boolean isConflate()
-  {
+  final boolean isConflate() {
-   * @param conflate
-   *          The conflate to set.
+   * @param conflate The conflate to set.
-  final void setConflate(boolean conflate)
-  {
+  final void setConflate(boolean conflate) {
-  final EventID getId()
-  {
+  final EventID getId() {
-   * @param id
-   *          The id to set.
+   * @param id The id to set.
-  final void setId(EventID id)
-  {
+  final void setId(EventID id) {
-  final Object getKey()
-  {
+  final Object getKey() {
-   * @param key
-   *          The key to set.
+   * @param key The key to set.
-  final void setKey(Object key)
-  {
+  final void setKey(Object key) {
-  final String getRegionname()
-  {
+  final String getRegionname() {
-   * @param regionname
-   *          The regionname to set.
+   * @param regionname The regionname to set.
-  final void setRegionname(String regionname)
-  {
+  final void setRegionname(String regionname) {
-  final Object getValue()
-  {
+  final Object getValue() {
-   * @param value
-   *          The value to set.
+   * @param value The value to set.
-  final void setValue(Object value)
-  {
+  final void setValue(Object value) {
