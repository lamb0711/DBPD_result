GEODE-7756: Do not use authorization cache for CQs (#4677)

CQs are executed on individual entries whenever an event is triggered
for them and the execution context is always cleared before the actual
evaluation, thus using an internal cache to keep already authorized
methods is useless (will always be a cache miss and the computation
required just adds overhead).

- Fixed the CQ creation to always set the 'cqQueryContext' flag.
- Modified the query engine to avoid using the internal cache for
  already authorized methods when the context belongs to a CQ.
- Avoid the creation and concatenation of unnecessary Strings, using
  the Method class directly instead.
-  private boolean cqQueryContext = false;
+  private final boolean cqQueryContext;
+    this.cqQueryContext = false;
+  }
+
+  public QueryExecutionContext(Object[] bindArguments, InternalCache cache,
+      boolean cqQueryContext) {
+    super(bindArguments, cache);
+    this.query = null;
+    this.cqQueryContext = cqQueryContext;
