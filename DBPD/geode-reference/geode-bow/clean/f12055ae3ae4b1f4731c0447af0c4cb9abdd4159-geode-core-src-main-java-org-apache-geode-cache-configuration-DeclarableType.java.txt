GEODE-5971: refactor AlterRegionCommand to use RegionConfig object (#3054)

* GEODE-5971: refactor AlterRegionCommand to use RegionConfig object

Co-authored-by: Kenneth Howe <khowe@pivotal.io>
Co-authored-by: Aditya Anchuri <aanchuri@pivotal.io>
Co-authored-by: Peter Tran <ptran@pivotal.io>

* refactor AlterRegionCommand to use ResultModel and RegionConfig
* only alter region in the same group as the region is created on
* when cluster configuration is enabled, if region does not exist in CC, the command would error out.
* The command would no longer alter region not created by gfsh command
* add more unit tests

+import org.apache.commons.lang3.StringUtils;
+
+import org.apache.geode.cache.Cache;
+import org.apache.geode.cache.Declarable;
+import org.apache.geode.internal.ClassPathLoader;
+  // used to remove a Declarable through gfsh command
+  // e.g. alter region --name=regionA --cache-loader=''
+  public static DeclarableType EMPTY = new DeclarableType("");
+
-    this.className = className;
+    this(className, (Properties) null);
+    if (StringUtils.isBlank(className)) {
+      return;
+    }
+
+
-      parameters = new ArrayList<ParameterType>();
+      parameters = new ArrayList<>();
+
+  public <T> T newInstance(Cache cache) {
+    try {
+      Class<T> loadedClass = (Class<T>) ClassPathLoader.getLatest().forName(className);
+      T object = loadedClass.newInstance();
+      if (object instanceof Declarable) {
+        Declarable declarable = (Declarable) object;
+        Properties initProperties = new Properties();
+        for (ParameterType parameter : parameters) {
+          initProperties.put(parameter.getName(), parameter.newInstance(cache));
+        }
+        declarable.initialize(cache, initProperties);
+      }
+      return object;
+    } catch (Exception e) {
+      throw new RuntimeException("Error instantiating class: <" + className + ">", e);
+    }
+  }
