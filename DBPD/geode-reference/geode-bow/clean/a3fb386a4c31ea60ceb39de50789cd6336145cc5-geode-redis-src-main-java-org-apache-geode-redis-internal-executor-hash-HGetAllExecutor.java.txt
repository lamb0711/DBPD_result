GEODE-7879: Remove locking on HGetallExecutor (#4806)

Locking should not be necessary when we aren't mutating values

- Add concurrent test for HGETALL
- Add RedisLockServiceMBean to expose lock count

-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Map<ByteArrayWrapper, ByteArrayWrapper> results = getMap(context, key);
-      if (results == null || results.isEmpty()) {
-        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-        return;
-      }
+    Map<ByteArrayWrapper, ByteArrayWrapper> results = getMap(context, key);
-      entries = results.entrySet();
-
-      if (entries == null || entries.isEmpty()) {
-        command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
-        return;
-      }
-
-      // create a copy
-      entries = new ArrayList<>(entries);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
+    if (results == null || results.isEmpty()) {
+      command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
+    entries = results.entrySet();
+
+    if (entries == null || entries.isEmpty()) {
+      command.setResponse(Coder.getEmptyArrayResponse(context.getByteBufAllocator()));
+      return;
+    }
+
+    // create a copy
+    entries = new ArrayList<>(entries);
+
