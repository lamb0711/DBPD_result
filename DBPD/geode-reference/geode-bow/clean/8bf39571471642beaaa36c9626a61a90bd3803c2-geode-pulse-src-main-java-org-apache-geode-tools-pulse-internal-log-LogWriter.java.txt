Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-   * Returns true if "severe" log messages are enabled. Returns false if
-   * "severe" log messages are disabled.
+   * Returns true if "severe" log messages are enabled. Returns false if "severe" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "severe".
+   * Writes both a message and exception to this writer. The message level is "severe".
-   * Returns true if "error" log messages are enabled. Returns false if "error"
-   * log messages are disabled.
+   * Returns true if "error" log messages are enabled. Returns false if "error" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "error".
+   * Writes both a message and exception to this writer. The message level is "error".
+
-   * Returns true if "warning" log messages are enabled. Returns false if
-   * "warning" log messages are disabled.
+   * Returns true if "warning" log messages are enabled. Returns false if "warning" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "warning".
+   * Writes both a message and exception to this writer. The message level is "warning".
-   * Returns true if "info" log messages are enabled. Returns false if "info"
-   * log messages are disabled.
+   * Returns true if "info" log messages are enabled. Returns false if "info" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "information".
+   * Writes both a message and exception to this writer. The message level is "information".
-   * Returns true if "config" log messages are enabled. Returns false if
-   * "config" log messages are disabled.
+   * Returns true if "config" log messages are enabled. Returns false if "config" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "config".
+   * Writes both a message and exception to this writer. The message level is "config".
-   * Returns true if "fine" log messages are enabled. Returns false if "fine"
-   * log messages are disabled.
+   * Returns true if "fine" log messages are enabled. Returns false if "fine" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "fine".
+   * Writes both a message and exception to this writer. The message level is "fine".
-   * Returns true if "finer" log messages are enabled. Returns false if "finer"
-   * log messages are disabled.
+   * Returns true if "finer" log messages are enabled. Returns false if "finer" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "finer".
+   * Writes both a message and exception to this writer. The message level is "finer".
-   * The logging is done using the <code>finer</code> level. The string message
-   * will start with <code>"ENTRY"</code> and include the class and method
-   * names.
+   * The logging is done using the <code>finer</code> level. The string message will start with
+   * <code>"ENTRY"</code> and include the class and method names.
-   * @param sourceClass
-   *          Name of class that issued the logging request.
-   * @param sourceMethod
-   *          Name of the method that issued the logging request.
+   * @param sourceClass Name of class that issued the logging request.
+   * @param sourceMethod Name of the method that issued the logging request.
-   * The logging is done using the <code>finer</code> level. The string message
-   * will start with <code>"RETURN"</code> and include the class and method
-   * names.
+   * The logging is done using the <code>finer</code> level. The string message will start with
+   * <code>"RETURN"</code> and include the class and method names.
-   * @param sourceClass
-   *          Name of class that issued the logging request.
-   * @param sourceMethod
-   *          Name of the method that issued the logging request.
+   * @param sourceClass Name of class that issued the logging request.
+   * @param sourceMethod Name of the method that issued the logging request.
-   * Use to log that a method is terminating by throwing an exception. The
-   * logging is done using the <code>finer</code> level.
+   * Use to log that a method is terminating by throwing an exception. The logging is done using the
+   * <code>finer</code> level.
-   * {@link #finer(String, Throwable)}. The string message will start with
-   * <code>"THROW"</code> and include the class and method names.
+   * {@link #finer(String, Throwable)}. The string message will start with <code>"THROW"</code> and
+   * include the class and method names.
-   * @param sourceClass
-   *          Name of class that issued the logging request.
-   * @param sourceMethod
-   *          Name of the method that issued the logging request.
-   * @param thrown
-   *          The Throwable that is being thrown.
+   * @param sourceClass Name of class that issued the logging request.
+   * @param sourceMethod Name of the method that issued the logging request.
+   * @param thrown The Throwable that is being thrown.
-   * Returns true if "finest" log messages are enabled. Returns false if
-   * "finest" log messages are disabled.
+   * Returns true if "finest" log messages are enabled. Returns false if "finest" log messages are
+   * disabled.
-   * Writes both a message and exception to this writer. The message level is
-   * "finest".
+   * Writes both a message and exception to this writer. The message level is "finest".
-   * Returns a 1.4 logging handler that can be used to direct application output
-   * to this GemFire logger using the standard JDK logger APIs. Each time this
-   * method is called it creates a new instance of a Handler so care should be
-   * taken to not call this method too often.
+   * Returns a 1.4 logging handler that can be used to direct application output to this GemFire
+   * logger using the standard JDK logger APIs. Each time this method is called it creates a new
+   * instance of a Handler so care should be taken to not call this method too often.
-   * A mechanism for accessing the abstraction layer used for
-   * internationalization.
+   * A mechanism for accessing the abstraction layer used for internationalization.
-}
+}
