GEODE-5731: Add tests for hostname-for-clients

- Fixed minor warnings.
- Added some tests to check that the `hostname-for-clients` flag is
  propagated across the stack while starting locators and servers.
- Replaced usage of class `org.apache.geode.internal.lang.StringUtils`
  (deprecated) by `org.apache.commons.lang3.StringUtils`.
-
+import org.apache.commons.lang3.StringUtils;
-import org.apache.geode.internal.lang.StringUtils;
-import org.apache.geode.internal.process.ProcessType;
-    File serverPidFile = new File(workingDirectory, ProcessType.SERVER.getPidFileName());
-
-    final int oldPid = StartMemberUtils.readPid(serverPidFile);
-
-    Process serverProcess = new ProcessBuilder(serverCommandLine)
-        .directory(new File(serverLauncher.getWorkingDirectory())).start();
+    Process serverProcess =
+        getProcess(serverLauncher.getWorkingDirectory(), serverCommandLine);
-        message.append(StringUtils.LINE_SEPARATOR);
+        message.append(SystemUtils.getLineSeparator());
-      serverState = ServerLauncher.ServerState.fromDirectory(workingDirectory, memberName);
+  Process getProcess(String workingDir, String[] serverCommandLine) throws IOException {
+    return new ProcessBuilder(serverCommandLine)
+        .directory(new File(workingDir)).start();
+  }
+
-    return commandLine.toArray(new String[commandLine.size()]);
+    return commandLine.toArray(new String[] {});
-        jarFilePathnames.toArray(new String[jarFilePathnames.size()]), userClasspath);
+        jarFilePathnames.toArray(new String[] {}), userClasspath);
-      return Arrays.stream(extensionsJars).filter(file -> file.isFile()).map(
+      return Arrays.stream(extensionsJars).filter(File::isFile).map(
