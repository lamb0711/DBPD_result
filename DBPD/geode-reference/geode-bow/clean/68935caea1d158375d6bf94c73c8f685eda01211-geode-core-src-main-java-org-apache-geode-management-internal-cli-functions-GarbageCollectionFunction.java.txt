GEODE-2883: Fix GFSH gc heap size output

+import org.apache.geode.management.internal.cli.util.BytesToString;
-
-    StringBuilder str1 = new StringBuilder();
+    BytesToString bytesToString = new BytesToString();
+
-      long freeMemoeryBeforeGC = Runtime.getRuntime().freeMemory();
+      long freeMemoryBeforeGC = Runtime.getRuntime().freeMemory();
-      long freeMemoeryAfterGC = Runtime.getRuntime().freeMemory();
+      long freeMemoryAfterGC = Runtime.getRuntime().freeMemory();
-      long megaBytes = 131072;
-      resultMap = new HashMap<String, String>();
+      resultMap = new HashMap<>();
-      resultMap.put("HeapSizeBeforeGC",
-          String.valueOf((totalMemoryBeforeGC - freeMemoeryBeforeGC) / megaBytes));
-      resultMap.put("HeapSizeAfterGC",
-          String.valueOf((totalMemoryAfterGC - freeMemoeryAfterGC) / megaBytes));
+      resultMap.put("HeapSizeBeforeGC", bytesToString.of(totalMemoryBeforeGC - freeMemoryBeforeGC));
+      resultMap.put("HeapSizeAfterGC", bytesToString.of(totalMemoryAfterGC - freeMemoryAfterGC));
-      str1.append(
-          "Exception in GC:" + ex.getMessage() + CliUtil.stackTraceAsString((Throwable) ex));
-      context.getResultSender().lastResult(str1.toString());
+      String message = "Exception in GC:" + ex.getMessage() + CliUtil.stackTraceAsString(ex);
+
+      context.getResultSender().lastResult(message);
-  public boolean hasResult() {
-    return true;
-  }
-
-  @Override
-  public boolean optimizeForWrite() {
-    // no need of optimization since read-only.
-    return false;
-  }
-
-  @Override
