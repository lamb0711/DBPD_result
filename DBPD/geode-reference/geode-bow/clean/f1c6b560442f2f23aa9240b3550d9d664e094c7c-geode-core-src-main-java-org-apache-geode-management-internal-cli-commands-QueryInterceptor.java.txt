GEODE-5011: Convert 'Data' commands to ResultModel (#1945)


+import java.util.Map;
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.CompositeResultData;
-import org.apache.geode.management.internal.cli.result.InfoResultData;
-import org.apache.geode.management.internal.cli.result.LegacyCommandResult;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
-import org.apache.geode.management.internal.cli.result.TabularResultData;
+import org.apache.geode.management.internal.cli.result.ModelCommandResult;
+import org.apache.geode.management.internal.cli.result.model.DataResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-  public Result preExecution(GfshParseResult parseResult) {
+  public ResultModel preExecution(GfshParseResult parseResult) {
-      return ResultBuilder.createUserErrorResult(FILE_ALREADY_EXISTS_MESSAGE);
+      return ResultModel.createError(FILE_ALREADY_EXISTS_MESSAGE);
-    return ResultBuilder.createInfoResult("");
+    return new ResultModel();
-    CompositeResultData resultData = (CompositeResultData) result.getResultData();
-    CompositeResultData.SectionResultData sectionResultData = resultData.retrieveSectionByIndex(0);
+    ResultModel model = ((ModelCommandResult) result).getResultData();
+    Map<String, String> sectionResultData = model.getDataSection("0").getContent();
-    String limit = sectionResultData.retrieveString("Limit");
-    String resultString = sectionResultData.retrieveString("Result");
-    String rows = sectionResultData.retrieveString("Rows");
+    String limit = sectionResultData.get("Limit");
+    String resultString = sectionResultData.get("Result");
+    String rows = sectionResultData.get("Rows");
-    TabularResultData tabularResultData = sectionResultData.retrieveTableByIndex(0);
-    CommandResult resultTable = new LegacyCommandResult(tabularResultData);
-      writeResultTableToFile(outputFile, resultTable);
+      writeResultTableToFile(outputFile, result);
-    InfoResultData infoResultData = ResultBuilder.createInfoResultData();
-    infoResultData.addLine("Result : " + resultString);
-    if (StringUtils.isNotBlank(limit)) {
-      infoResultData.addLine("Limit  : " + limit);
-    }
-    infoResultData.addLine("Rows   : " + rows);
-    infoResultData.addLine(SystemUtils.LINE_SEPARATOR);
-    infoResultData.addLine("Query results output to " + outputFile.getAbsolutePath());
+    ResultModel newModel = new ResultModel();
+    DataResultModel data = newModel.addData();
-    return new LegacyCommandResult(infoResultData);
+    data.addData("Result", resultString);
+    if (StringUtils.isNotBlank(limit)) {
+      data.addData("Limit", limit);
+    }
+    data.addData("Rows", rows);
+
+    newModel.addInfo().addLine("Query results output to " + outputFile.getAbsolutePath());
+
+    return new ModelCommandResult(newModel);
