Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Used to fetch a record's raw bytes and user bits.
- * The actual data length in byte array may be less than
- * the size of the byte array itself. An integer field contains
- * the valid length. This class is used exclusively by the Oplog Compactor
- * for rolling the entries. The reason for this class is to reuse the
- * underlying byte array for rolling multiple entries there by
- * reducing the garbage.
+ * Used to fetch a record's raw bytes and user bits. The actual data length in byte array may be
+ * less than the size of the byte array itself. An integer field contains the valid length. This
+ * class is used exclusively by the Oplog Compactor for rolling the entries. The reason for this
+ * class is to reuse the underlying byte array for rolling multiple entries there by reducing the
+ * garbage.
+ * 
-   * If offHeapData is set then ignore the "data" and "validLength" fields.
-   * The offHeapData field is unretained so it can only be used while the RegionEntry is still synced.
-   * When done with the offHeapData, null it out if you want to reuse the byte[] later.
+   * If offHeapData is set then ignore the "data" and "validLength" fields. The offHeapData field is
+   * unretained so it can only be used while the RegionEntry is still synced. When done with the
+   * offHeapData, null it out if you want to reuse the byte[] later.
-  private  byte[] data;
-  private  byte userBits=0;
-  // length of the data present in the byte array 
-  private  int validLength;
+  private byte[] data;
+  private byte userBits = 0;
+  // length of the data present in the byte array
+  private int validLength;
-  //storing another entry's data 
-  private boolean isReusable ;
+  // storing another entry's data
+  private boolean isReusable;
-    //this.userBits = userBits;
+    // this.userBits = userBits;
-  
+
+
+
-  
+
-  
+
-  
+
-   * @param data byte array storing the data 
+   * @param data byte array storing the data
-   * @param validLength  The number of bytes representing the data , starting from 0 as offset
+   * @param validLength The number of bytes representing the data , starting from 0 as offset
-    this.validLength = validLength;    
+    this.validLength = validLength;
+
