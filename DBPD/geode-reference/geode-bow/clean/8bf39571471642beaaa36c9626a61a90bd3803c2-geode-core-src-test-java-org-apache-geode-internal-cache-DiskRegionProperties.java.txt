Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * TODO To change the template for this generated file go to
- * Window - Preferences - Java - Code Style - Code Templates
+ * TODO To change the template for this generated file go to Window - Preferences - Java - Code
+ * Style - Code Templates
- * A properties object used to create persistent/overflow regions for
- * testing objects
- *  
+ * A properties object used to create persistent/overflow regions for testing objects
+ * 
-public class DiskRegionProperties
-{
-  
+public class DiskRegionProperties {
+
-  private long maxOplogSize = 1024*1024*1024*10L;
+  private long maxOplogSize = 1024 * 1024 * 1024 * 10L;
-  
-  public DiskRegionProperties() {
-  }
-  
-  public long getBytesThreshold()
-  {
+  public DiskRegionProperties() {}
+
+
+  public long getBytesThreshold() {
-  public File[] getDiskDirs()
-  {
+  public File[] getDiskDirs() {
-  public boolean isOverflow()
-  {
+  public boolean isOverflow() {
-  public boolean isPersistBackup()
-  {
+  public boolean isPersistBackup() {
-  
-  public boolean isRolling()
-  {
+
+  public boolean isRolling() {
-  
+
+
-  public boolean isSynchronous()
-  {
+  public boolean isSynchronous() {
-  public long getMaxOplogSize()
-  {
+  public long getMaxOplogSize() {
-  public int getOverFlowCapacity()
-  {
+  public int getOverFlowCapacity() {
-  public long getTimeInterval()
-  {
+  public long getTimeInterval() {
-  
-  public int[] getDiskDirSizes()
-  {
+
+  public int[] getDiskDirSizes() {
-  
-  public void setDiskDirsAndSizes(File[] diskDirs, int[] diskDirSize){
+
+  public void setDiskDirsAndSizes(File[] diskDirs, int[] diskDirSize) {
-  
-  public void setBytesThreshold(long bytesThreshold)
-  {
+
+  public void setBytesThreshold(long bytesThreshold) {
-  public void setDiskDirs(File[] diskDirs)
-  {
+  public void setDiskDirs(File[] diskDirs) {
-  public void setOverflow(boolean isOverflow)
-  {
+  public void setOverflow(boolean isOverflow) {
-  public void setPersistBackup(boolean isPersistBackup)
-  {
+  public void setPersistBackup(boolean isPersistBackup) {
-  
-  public void setRolling(boolean isRolling)
-  {
+
+  public void setRolling(boolean isRolling) {
+
+
-  public void setSynchronous(boolean isSynchronous)
-  {
+  public void setSynchronous(boolean isSynchronous) {
-  public void setMaxOplogSize(long maxOplogSize)
-  {
+  public void setMaxOplogSize(long maxOplogSize) {
-  public void setOverFlowCapacity(int overFlowCapacity)
-  {
+  public void setOverFlowCapacity(int overFlowCapacity) {
-  public void setTimeInterval(long timeInterval)
-  {
+  public void setTimeInterval(long timeInterval) {
-  public String getRegionName()
-  {
+  public String getRegionName() {
-  public void setRegionName(String regionName)
-  {
+  public void setRegionName(String regionName) {
+
+
+
+
+
+
+
