GEODE-8134: convert String commands to use Function+Delta (#5160)

Co-authored-by: john Hutchison <hutchisonjo@vmware.com>
Co-authored-by: Ray Ingles <ringles@vmware.com>
+import static org.apache.geode.redis.internal.RedisCommandType.APPEND;
+
-import org.apache.geode.redis.internal.RedisConstants.ArityDef;
+import org.apache.geode.redis.internal.RedisData;
+import org.apache.geode.redis.internal.executor.CommandFunction;
-    Region<ByteArrayWrapper, ByteArrayWrapper> r = context.getRegionProvider().getStringsRegion();
-
-    if (commandElems.size() < 3) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.APPEND));
-      return;
-    }
+    Region<ByteArrayWrapper, RedisData> region =
+        context.getRegionProvider().getStringsRegion();
-    ByteArrayWrapper string = r.get(key);
+    byte[] bytesToAppend = commandElems.get(VALUE_INDEX);
+    ByteArrayWrapper valueToAppend = new ByteArrayWrapper(bytesToAppend);
+    // TODO: a RedisStringCommandsFunctionExecutor?
-    byte[] stringByteArray = commandElems.get(VALUE_INDEX);
-    if (string == null) {
-      r.put(key, new ByteArrayWrapper(stringByteArray));
-      command.setResponse(
-          Coder.getIntegerResponse(context.getByteBufAllocator(), stringByteArray.length));
-    } else {
-      byte[] newValue = concatArrays(string.toBytes(), stringByteArray);
-      string.setBytes(newValue);
-      r.put(key, string);
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), newValue.length));
-    }
+    Long returnValue = CommandFunction.execute(APPEND, key, valueToAppend, region);
-  }
-
-  private byte[] concatArrays(byte[] o, byte[] n) {
-    int oLen = o.length;
-    int nLen = n.length;
-    byte[] combined = new byte[oLen + nLen];
-    System.arraycopy(o, 0, combined, 0, oLen);
-    System.arraycopy(n, 0, combined, oLen, nLen);
-    return combined;
+    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), returnValue));
