GEODE-4819: Separating authorization out from protobuf handlers (#1674)

Separating out authentication from the logic of parsing protobuf
messages. All region operations should be done through the new
AuthenticatingCache API, which does authentication and the operation.

In a future change we should move AuthenticationCache to the core and
refactor gfsh, the REST API, and the old client to also go through this
layer.

-  private final SecurityService securityService;
-  private final Subject subject;
-  public ProtobufConnectionAuthorizingStateProcessor(SecurityService securityService,
-      Subject subject) {
-    this.securityService = securityService;
-    this.subject = subject;
-  }
+  public ProtobufConnectionAuthorizingStateProcessor() {}
-      throws ConnectionStateException, DecodingException {
-    ThreadState threadState = securityService.bindSubject(subject);
-    try {
-      securityService.authorize(operationContext.getAccessPermissionRequired(
-          operationContext.getFromRequest().apply(message), serializer));
-    } catch (NotAuthorizedException e) {
-      messageContext.getStatistics().incAuthorizationViolations();
-      throw new OperationNotAuthorizedException(
-          "The user is not authorized to complete this operation: "
-              + ((ClientProtocol.Message) message).getMessageTypeCase());
-    } finally {
-      threadState.restore();
-    }
-  }
+      throws ConnectionStateException, DecodingException {}
-
-  public ThreadState prepareThreadForAuthorization() {
-    return securityService.bindSubject(subject);
-  }
-
-  public void restoreThreadState(ThreadState state) {
-    state.restore();
-  }
