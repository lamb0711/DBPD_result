GEODE-4816: Add support for authentication to the experimental driver. (#1615)


+import java.util.Objects;
+import org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI;
-  public ProtobufChannel(final Set<InetSocketAddress> locators) throws IOException {
+  public ProtobufChannel(final Set<InetSocketAddress> locators, String username, String password)
+      throws IOException {
-    this.socket = connectToAServer();
+    this.socket = connectToAServer(username, password);
-  private Socket connectToAServer() throws IOException {
-    InetSocketAddress server = findAServer();
+  private Socket connectToAServer(String username, String password) throws IOException {
+    InetSocketAddress server = findAServer(username, password);
+
+    if (!Objects.isNull(username)) {
+      authenticate(username, password, outputStream, inputStream);
+    }
+
-  private InetSocketAddress findAServer() throws IOException {
+  private InetSocketAddress findAServer(String username, String password) throws IOException {
+        if (!Objects.isNull(username)) {
+          authenticate(username, password, outputStream, inputStream);
+        }
+
+  private void authenticate(String username, String password, OutputStream outputStream,
+      InputStream inputStream) throws IOException {
+    final ConnectionAPI.AuthenticationRequest.Builder builder =
+        ConnectionAPI.AuthenticationRequest.newBuilder();
+    builder.putCredentials("security-username", username);
+    builder.putCredentials("security-password", password);
+    final Message authenticationRequest =
+        Message.newBuilder().setAuthenticationRequest(builder).build();
+    authenticationRequest.writeDelimitedTo(outputStream);
+
+    final Message authenticationResponseMessage = Message.parseDelimitedFrom(inputStream);
+    final ErrorResponse errorResponse = authenticationResponseMessage.getErrorResponse();
+    if (!Objects.isNull(errorResponse) && errorResponse.hasError()) {
+      throw new IOException("Failed authentication for " + username + ": error code="
+          + errorResponse.getError().getErrorCode() + "; error message="
+          + errorResponse.getError().getMessage());
+    }
+    final ConnectionAPI.AuthenticationResponse authenticationResponse =
+        authenticationResponseMessage.getAuthenticationResponse();
+    if (!Objects.isNull(authenticationResponse) && !authenticationResponse.getAuthenticated()) {
+      throw new IOException("Failed authentication for " + username);
+    }
+  }
+
