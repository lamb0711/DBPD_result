GEODE-3213: Refactor ProtoBuf handler flow. This now closes #646

Signed-off-by: Alexander Murmann <amurmann@pivotal.io>

+import org.apache.geode.protocol.protobuf.Failure;
-import org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities;
+import org.apache.geode.protocol.protobuf.Result;
+import org.apache.geode.protocol.protobuf.Success;
-    implements OperationHandler<ClientProtocol.Request, ClientProtocol.Response> {
+    implements OperationHandler<RegionAPI.GetRegionRequest, RegionAPI.GetRegionResponse> {
-  public ClientProtocol.Response process(SerializationService serializationService,
-      ClientProtocol.Request request, Cache cache) {
+  public Result<RegionAPI.GetRegionResponse> process(SerializationService serializationService,
+      RegionAPI.GetRegionRequest request, Cache cache) {
-    RegionAPI.GetRegionRequest regionRequest = request.getGetRegionRequest();
-    String regionName = regionRequest.getRegionName();
+    String regionName = request.getRegionName();
-      return ProtobufResponseUtilities
-          .createErrorResponse("No region exists for name: " + regionName);
+      return Failure.of(ClientProtocol.ErrorResponse.newBuilder()
+          .setMessage("No region exists for name: " + regionName).build());
-    return ProtobufResponseUtilities.createGetRegionResponse(protoRegion);
+    return Success.of(RegionAPI.GetRegionResponse.newBuilder().setRegion(protoRegion).build());
