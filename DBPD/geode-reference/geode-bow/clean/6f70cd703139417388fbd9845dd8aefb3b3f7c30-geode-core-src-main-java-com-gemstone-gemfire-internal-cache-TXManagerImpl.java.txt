GEODE-1517: fix TXStateProxyImpl continue working after TXManagerImpl is closed.

Holding the ReentrantLock during TXManagerImpl.close() when closing TXStateProxyImpl. Provent any TXStateProxyImpl to work further. Add a test case where it fails without the above fix and passes after the fix.

Also avoid going through synchronized failover map to check if a TXStateProxyImpl is finished, instead, use its isInProgress() call.

-  private boolean closed = false;
+  private volatile boolean closed = false;
-      proxy.close();
+      proxy.getLock().lock();
+      try {
+        proxy.close();
+      } finally {
+        proxy.getLock().unlock();
+      }
-  private final boolean isClosed() {
+  public final boolean isClosed() {
-            this.hostedTXStates.put(key, val);
+            this.hostedTXStates.put(key, val);
+          } else {
+            //Another thread should complete the transaction
+            logger.info("{} has already finished." , val.getTxId());
-  public boolean hasTxAlreadyFinished(TXStateProxy tx, TXId txid) {
-    if (tx == null) {
-      return false;
-    }
-    if (isHostedTxRecentlyCompleted(txid)) {
-      //Should only happen when handling a later arrival of transactional op from proxy,
-      //while the transaction has failed over and already committed or rolled back.
-      //Just send back reply as a success op.
-      //The client connection should be lost from proxy, or
-      //the proxy is closed for failover to occur.
-      logger.info("TxId {} has already finished." , txid);
-      return true;
-    }
-    return false;
-  }
-  
