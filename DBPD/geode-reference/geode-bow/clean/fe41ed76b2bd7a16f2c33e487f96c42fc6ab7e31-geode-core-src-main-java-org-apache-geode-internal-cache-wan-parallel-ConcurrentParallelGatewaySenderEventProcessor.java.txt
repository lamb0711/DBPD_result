GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.cache.wan.GatewayQueueEvent;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
-import org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackDispatcher;
- * 
- *
-  // private final List<ConcurrentParallelGatewaySenderQueue> concurrentParallelQueues;
+
+
-    for (LocalRegion pr : ((GemFireCacheImpl) ((AbstractGatewaySender) sender).getCache())
-        .getApplicationRegions()) {
+    for (LocalRegion pr : sender.getCache().getApplicationRegions()) {
-    /*
-     * Set<Region> targetRs = new HashSet<Region>(); for (LocalRegion pr :
-     * ((GemFireCacheImpl)((ParallelGatewaySenderImpl)sender) .getCache()).getApplicationRegions())
-     * { if (pr.getAllGatewaySenderIds().contains(id)) { targetRs.add(pr); } }
-     */
-    // this.parallelQueue = new ParallelGatewaySenderQueue(this.sender, targetRs);
-    /*
-     * if (sender.getIsHDFSQueue()) this.parallelQueue = new
-     * HDFSParallelGatewaySenderQueue(this.sender, targetRs); else this.parallelQueue = new
-     * ParallelGatewaySenderQueue(this.sender, targetRs);
-     */
+    // nothing
-
-    /*
-     * if (getSender().beforeEnqueue(gatewayQueueEvent)) { long start =
-     * getSender().getStatistics().startTime(); try { this.parallelQueue.put(gatewayQueueEvent); }
-     * catch (InterruptedException e) { e.printStackTrace(); } finally { if (gatewayQueueEvent !=
-     * null) { gatewayQueueEvent.release(); } getSender().getStatistics().endPut(start); } else {
-     * getSender().getStatistics().incEventsFiltered(); }
-     */
-
-
-    // super.waitForDispatcherToPause();
-  /*
-   * public List<ConcurrentParallelGatewaySenderQueue> getConcurrentParallelQueues() { return
-   * concurrentParallelQueues; }
-   */
-  /*
-   * public Set<PartitionedRegion> getRegions() { return
-   * ((ParallelGatewaySenderQueue)(processors[0].getQueue())).getRegions(); }
-   * 
-   * public int localSize() { return
-   * ((ParallelGatewaySenderQueue)(processors[0].getQueue())).localSize(); }
-   */
-
