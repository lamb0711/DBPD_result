Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This is the base command which read the parts for the
- * MessageType.COMMIT.<br>
+ * This is the base command which read the parts for the MessageType.COMMIT.<br>
-  private CommitCommand() {
-  }
+  private CommitCommand() {}
-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
-      throws IOException {
+  public void cmdExecute(Message msg, ServerConnection servConn, long start) throws IOException {
-    TXManagerImpl txMgr = (TXManagerImpl)servConn.getCache().getCacheTransactionManager();
-    InternalDistributedMember client = (InternalDistributedMember) servConn.getProxyID().getDistributedMember();
+    TXManagerImpl txMgr = (TXManagerImpl) servConn.getCache().getCacheTransactionManager();
+    InternalDistributedMember client =
+        (InternalDistributedMember) servConn.getProxyID().getDistributedMember();
-        commitMsg.setClientVersion(null);  // fixes bug 46529
+        commitMsg.setClientVersion(null); // fixes bug 46529
-    }
-    catch (Exception e) {
-      sendException(msg, servConn,e);
+    } catch (Exception e) {
+      sendException(msg, servConn, e);
-      if(txId!=null) {
+      if (txId != null) {
-        commitMsg.setClientVersion(null);  // fixes bug 46529
+        commitMsg.setClientVersion(null); // fixes bug 46529
-  
-  
-  protected static void writeCommitResponse(TXCommitMessage response,
-      Message origMsg, ServerConnection servConn)
-      throws IOException {
+
+
+  protected static void writeCommitResponse(TXCommitMessage response, Message origMsg,
+      ServerConnection servConn) throws IOException {
-    if( response != null ) {
-    	response.setClientVersion(servConn.getClientVersion());
+    if (response != null) {
+      response.setClientVersion(servConn.getClientVersion());
-      logger.debug("TX: sending a nonNull response for transaction: {}", new TXId((InternalDistributedMember) servConn.getProxyID().getDistributedMember(), origMsg.getTransactionId()));
+      logger.debug("TX: sending a nonNull response for transaction: {}",
+          new TXId((InternalDistributedMember) servConn.getProxyID().getDistributedMember(),
+              origMsg.getTransactionId()));
-  
-  private void sendException(Message msg,
-      ServerConnection servConn, Throwable e) throws IOException {
-      writeException(msg, MessageType.EXCEPTION,
-          e, false,servConn);
-      servConn.setAsTrue(RESPONDED);
+
+  private void sendException(Message msg, ServerConnection servConn, Throwable e)
+      throws IOException {
+    writeException(msg, MessageType.EXCEPTION, e, false, servConn);
+    servConn.setAsTrue(RESPONDED);
-  
-  
+
+
