GEODE-4080: Protobuf JSON objects are in a proto string (#1171)

* GEODE-4080: Protobuf JSON objects are in a proto string

In the process, remove a couple of serialization-related classes that
are no longer really applicable.

* Catch `JSONFormatterException` and return it as a `EncodingException`.
* Change some names and add ProtobufSerializationService, which is the big
reason for all this churn.
* Get rid of the codec package
* Inline the serialization type enum
* Make encoding methods throw EncodingException.
* Don't use exceptions for control flow.

This meant renaming ProtobufPrimitiveTypes to ProtobufEncodingTypes.

Signed-off-by: Brian Rowe <browe@pivotal.io>
-import org.apache.geode.internal.protocol.operations.OperationHandler;
+import org.apache.geode.internal.protocol.operations.ProtobufOperationHandler;
+import org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService;
-import org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities;
-import org.apache.geode.internal.protocol.serialization.SerializationService;
-import org.apache.geode.internal.protocol.serialization.exception.UnsupportedEncodingTypeException;
-import org.apache.geode.internal.protocol.serialization.registry.exception.CodecNotRegisteredForTypeException;
+import org.apache.geode.internal.protocol.serialization.exception.EncodingException;
-public class GetRequestOperationHandler implements
-    OperationHandler<RegionAPI.GetRequest, RegionAPI.GetResponse, ClientProtocol.ErrorResponse> {
+public class GetRequestOperationHandler
+    implements ProtobufOperationHandler<RegionAPI.GetRequest, RegionAPI.GetResponse> {
-      SerializationService serializationService, RegionAPI.GetRequest request,
+      ProtobufSerializationService serializationService, RegionAPI.GetRequest request,
-      Object decodedKey = ProtobufUtilities.decodeValue(serializationService, request.getKey());
+      Object decodedKey = serializationService.decode(request.getKey());
-      BasicTypes.EncodedValue encodedValue =
-          ProtobufUtilities.createEncodedValue(serializationService, resultValue);
+      BasicTypes.EncodedValue encodedValue = serializationService.encode(resultValue);
-    } catch (UnsupportedEncodingTypeException ex) {
+    } catch (EncodingException ex) {
-    } catch (CodecNotRegisteredForTypeException ex) {
-      logger.error("Got codec error when decoding Get request: {}", ex);
-      return Failure.of(ProtobufResponseUtilities.makeErrorResponse(VALUE_ENCODING_ERROR,
-          "Codec error in protobuf deserialization."));
