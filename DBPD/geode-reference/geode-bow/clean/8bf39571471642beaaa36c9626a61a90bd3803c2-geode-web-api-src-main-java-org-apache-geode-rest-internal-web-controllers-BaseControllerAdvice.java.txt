Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ * 
-  
+
-   
+
+
-   * Handles both ResourceNotFoundExceptions and specifically, RegionNotFoundExceptions, occurring when a resource
-   * or a Region (a.k.a. resource) does not exist in GemFire.
+   * Handles both ResourceNotFoundExceptions and specifically, RegionNotFoundExceptions, occurring
+   * when a resource or a Region (a.k.a. resource) does not exist in GemFire.
-   * @param e the RuntimeException thrown when the accessed/requested resource does not exist in GemFire.
+   * 
+   * @param e the RuntimeException thrown when the accessed/requested resource does not exist in
+   *        GemFire.
-  @ExceptionHandler({ RegionNotFoundException.class, ResourceNotFoundException.class })
+  @ExceptionHandler({RegionNotFoundException.class, ResourceNotFoundException.class})
-   * Handles MalformedJsonFoundException, occurring when REST service encounters incorrect or malformed JSON document
+   * Handles MalformedJsonFoundException, occurring when REST service encounters incorrect or
+   * malformed JSON document
+   * 
-  @ExceptionHandler({ MalformedJsonException.class })
+  @ExceptionHandler({MalformedJsonException.class})
-  
+
-   * Handles any GemfireRestException thrown by a REST API web service endpoint, HTTP request handler method.
+   * Handles any GemfireRestException thrown by a REST API web service endpoint, HTTP request
+   * handler method.
+   * 
-  
+
-   * Handles any DataTypeNotSupportedException thrown by a REST API web service endpoint, HTTP request handler method.
+   * Handles any DataTypeNotSupportedException thrown by a REST API web service endpoint, HTTP
+   * request handler method.
-   * @param tns the DataTypeNotSupportedException thrown if problem occurs in cache values to JSON conversion.
+   * 
+   * @param tns the DataTypeNotSupportedException thrown if problem occurs in cache values to JSON
+   *        conversion.
-  
+
-   * Handles HttpRequestMethodNotSupportedException thrown by a REST API web service when request is 
+   * Handles HttpRequestMethodNotSupportedException thrown by a REST API web service when request is
-   * @param e the HttpRequestMethodNotSupportedException thrown when REST request is received with NOT support methods.
+   * 
+   * @param e the HttpRequestMethodNotSupportedException thrown when REST request is received with
+   *        NOT support methods.
-   * Handles an AccessDenied Exception thrown by a REST API web service endpoint, HTTP request handler method.
+   * Handles an AccessDenied Exception thrown by a REST API web service endpoint, HTTP request
+   * handler method.
+   * 
+   * 
+   * 
-   * @return a ResponseEntity with an appropriate HTTP status code (500 - Internal Server Error) and HTTP response body
-   * containing the stack trace of the Exception.
+   * @return a ResponseEntity with an appropriate HTTP status code (500 - Internal Server Error) and
+   *         HTTP response body containing the stack trace of the Exception.
-    if(logger.isDebugEnabled()){
+    if (logger.isDebugEnabled()) {
