GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.cache.Cache;
-import org.apache.geode.cache.query.*;
+import org.apache.geode.cache.query.IndexInvalidException;
+import org.apache.geode.internal.cache.InternalCache;
-/**
- * 
- */
-  // Canonicalized attributes.
-  // The value in these fields is set during the execution of prepareFromClause
-  // function
-  // While the value of fromClause is reset in execution of prepareFromClause,
-  // to canonicalized from clause
+
+  /**
+   * Canonicalized attributes. The value in these fields is set during the execution of
+   * prepareFromClause function While the value of fromClause is reset in execution of
+   * prepareFromClause, to canonicalized from clause
+   */
+
+
-  // String imports;
-  QCompiler compiler; // use the same compiler for each query string to use
-  // imports
-  Cache cache;
-  // Asif : The array containing the canonicalized iterator names
-  // which will get reused.
-  // TODO: Asif : How to make it final so that the invokers do not end up
-  // modifying it
+
+  // use the same compiler for each query string to use
+  QCompiler compiler;
+
+  InternalCache cache;
+
+  /**
+   * The array containing the canonicalized iterator names which will get reused.
+   * <p>
+   * TODO: How to make it final so that the invokers do not end up modifying it
+   */
-  // Asif : Array containing canonicalized iterator definitions
-  // TODO: Asif : How to make it final so that the invokers do not end up
-  // modifying it
+
+  /**
+   * Array containing canonicalized iterator definitions
+   * <p>
+   * TODO: How to make it final so that the invokers do not end up modifying it
+   */
-  IndexCreationHelper(String fromClause, String projectionAttributes, Cache cache)
+  IndexCreationHelper(String fromClause, String projectionAttributes, InternalCache cache)
-    // Asif:LThe fromClause,indexedExpression & projectionAttributes
+    // The fromClause,indexedExpression & projectionAttributes
-    // this.indexedExpression = indexedExpression;
-    // this.imports = imports;
-    this.compiler = new QCompiler(true /* used from index creation */);
-    /*
-     * if (this.imports != null) { this.compiler.compileImports(this.imports); }
-     */
+    this.compiler = new QCompiler(true);
-    return projectionAttributes;
+    return this.projectionAttributes;
-  /*
-   * TODO:Asif . Check if this function is required public String getImports() { return
-   * this.imports; }
-   */
-    return indexedExpression;
+    return this.indexedExpression;
-    return fromClause;
+    return this.fromClause;
-  public Cache getCache() {
-    return cache;
+  public InternalCache getCache() {
+    return this.cache;
-  /*
-   * Asif: This function returns the canonicalized Iterator Definitions of the from clauses used in
-   * Index creation
+  /**
+   * This function returns the canonicalized Iterator Definitions of the from clauses used in Index
+   * creation
-  public String[] getCanonicalizedIteratorDefinitions() {
+  String[] getCanonicalizedIteratorDefinitions() {
