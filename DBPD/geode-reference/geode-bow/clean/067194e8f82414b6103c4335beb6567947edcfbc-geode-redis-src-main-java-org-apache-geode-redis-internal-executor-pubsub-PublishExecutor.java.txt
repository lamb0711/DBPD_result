GEODE-8333: Fix PUBSUB hang (#5349)

PUBSUB hangs with concurrent publishers and subscribers on multiple
servers. Changed Publish executor to execute publish on background
thread. Removed separate separate subscriber group.  Added DUnit test to
recreate failure.
A commandQueue is now used to preserve the order
in which commands are executed even if a command
if executed async. Currently the only async command
is PUBLISH.

Co-authored-by: Murtuza Boxwala <mboxwala@pivotal.io>
Co-authored-by: Sarah Abbey <sabbey@vmware.com>
-    List<byte[]> args = command.getProcessedCommand();
-
-    long publishCount =
-        context.getPubSub().publish(getDataRegion(context), args.get(1), args.get(2));
-
-    return RedisResponse.integer(publishCount);
+    context.getBackgroundExecutor().submit(new PublishingRunnable(context, command));
+    return null;
+  public static class PublishingRunnable implements Runnable {
+
+    private final ExecutionHandlerContext context;
+    private final Command command;
+
+    public PublishingRunnable(ExecutionHandlerContext context, Command command) {
+      this.context = context;
+      this.command = command;
+    }
+
+    @Override
+    public void run() {
+      List<byte[]> args = command.getProcessedCommand();
+      byte[] channelName = args.get(1);
+      byte[] message = args.get(2);
+      try {
+        long publishCount =
+            context.getPubSub()
+                .publish(context.getRegionProvider().getDataRegion(), channelName, message);
+        RedisResponse response = RedisResponse.integer(publishCount);
+        context.endAsyncCommandExecution(command, response);
+      } catch (Throwable ex) {
+        context.endAsyncCommandExecution(command, ex);
+      }
+    }
+  }
