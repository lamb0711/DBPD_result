Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

-  private static InetAddress getAddress(int protocol) {
+  public static InetAddress getAddress(int protocol) {
+    return getRandomAvailablePort(protocol, addr, false);
+  }
+
+  /**
+   * Returns a randomly selected available port in the range 5001 to
+   * 32767.
+   *
+   * @param protocol
+   *        The protocol to check (either {@link #SOCKET} or {@link
+   *        #MULTICAST}). 
+   * @param addr the bind-address or mcast address to use
+   * @param useMembershipPortRange use true if the port will be used for membership
+   *
+   * @throws IllegalArgumentException
+   *         <code>protocol</code> is unknown
+   */
+  public static int getRandomAvailablePort(int protocol, InetAddress addr, boolean useMembershipPortRange) {
-      int port = getRandomWildcardBindPortNumber();
+      int port = getRandomWildcardBindPortNumber(useMembershipPortRange);
+    return getRandomAvailablePortKeeper(protocol, addr, false);
+  }
+  
+  public static Keeper getRandomAvailablePortKeeper(int protocol, InetAddress addr, boolean useMembershipPortRange) {
-      int port = getRandomWildcardBindPortNumber();
+      int port = getRandomWildcardBindPortNumber(useMembershipPortRange);
+    return getRandomWildcardBindPortNumber(false);
+  }
+  
+  private static int getRandomWildcardBindPortNumber(boolean useMembershipPortRange) {
-// wcb port range on Windows is 1024..5000 (and Linux?)
-// wcb port range on Solaris is 32768..65535
-//     if (System.getProperty("os.name").equals("SunOS")) {
-//       rangeBase=32768;
-//       rangeTop=65535;
-//     } else {
-//       rangeBase=1024;
-//       rangeTop=5000;
-//     }
-    rangeBase = AVAILABLE_PORTS_LOWER_BOUND; // 20000/udp is securid
-    rangeTop =  AVAILABLE_PORTS_UPPER_BOUND; // 30000/tcp is spoolfax
+    if ( !useMembershipPortRange ) {
+      rangeBase = AVAILABLE_PORTS_LOWER_BOUND; // 20000/udp is securid
+      rangeTop = AVAILABLE_PORTS_UPPER_BOUND; // 30000/tcp is spoolfax
+    } else {
+      rangeBase = DistributionConfig.DEFAULT_MEMBERSHIP_PORT_RANGE[0];
+      rangeTop = DistributionConfig.DEFAULT_MEMBERSHIP_PORT_RANGE[1];
+    }
