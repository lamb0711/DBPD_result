GEODE-5111: Set offline members to null only when done waiting for them (#1873)

* GEODE-5111: Set offline members to null only when done waiting for them

+import org.apache.geode.internal.cache.persistence.MembershipChangeListener;
-      ((BucketAdvisor) advisor).setHadPrimary();
+      ((BucketAdvisor) cacheDistributionAdvisor).setHadPrimary();
-  protected void checkInterruptedByShutdownAll() {
+  @Override
+  public void checkInterruptedByShutdownAll() {
-  protected void beginWaitingForMembershipChange(Set<PersistentMemberID> membersToWaitFor) {
+  public void beginWaitingForMembershipChange(Set<PersistentMemberID> membersToWaitFor) {
-  protected void logWaitingForMember(Set<PersistentMemberID> allMembersToWaitFor,
-      Set<PersistentMemberID> offlineMembersToWaitFor) {
+  public void logWaitingForMembers() {
-      if (offlineMembersToWaitFor != null && !offlineMembersToWaitFor.isEmpty()) {
-        TransformUtils.transform(offlineMembersToWaitFor, membersToWaitForPrettyFormat,
+      if (offlineMembersWaitingFor != null && !offlineMembersWaitingFor.isEmpty()) {
+        TransformUtils.transform(offlineMembersWaitingFor, membersToWaitForPrettyFormat,
-        TransformUtils.transform(allMembersToWaitFor, membersToWaitForPrettyFormat,
+        TransformUtils.transform(allMembersWaitingFor, membersToWaitForPrettyFormat,
-  protected void endWaitingForMembershipChange() {
+  public void endWaitingForMembershipChange() {
-    MembershipChangeListener listener = new MembershipChangeListener();
+    MembershipChangeListener listener = new MembershipChangeListener(this);
-        advisor.getAdvisee().getCancelCriterion().checkCancelInProgress(null);
+        cacheDistributionAdvisor.getAdvisee().getCancelCriterion().checkCancelInProgress(null);
-            advisor.adviseInitializedPersistentMembers();
+            cacheDistributionAdvisor.adviseInitializedPersistentMembers();
-            ((BucketAdvisor) advisor).adviseRecoveredFromDisk();
+            ((BucketAdvisor) cacheDistributionAdvisor).adviseRecoveredFromDisk();
+          setWaitingOnMembers(membersToWaitFor, membersToWaitFor);
-            listener.waitForChange(membersToWaitFor, membersToWaitFor);
+            listener.waitForChange();
+      setWaitingOnMembers(null, null);
+  @Override
+  @Override
-      offlineMembers.removeAll(advisor.advisePersistentMembers().values());
+      offlineMembers.removeAll(cacheDistributionAdvisor.advisePersistentMembers().values());
-    PersistentMemberID id = storage.generatePersistentID();
+    PersistentMemberID id = persistentMemberView.generatePersistentID();
-    storage.getOnlineMembers();
-    storage.getOfflineMembers();
-    storage.getOfflineAndEqualMembers();
-    storage.getMyInitializingID();
-    storage.getMyPersistentID();
+    persistentMemberView.getOnlineMembers();
+    persistentMemberView.getOfflineMembers();
+    persistentMemberView.getOfflineAndEqualMembers();
+    persistentMemberView.getMyInitializingID();
+    persistentMemberView.getMyPersistentID();
-    buf.append(storage.getMyPersistentID());
+    buf.append(persistentMemberView.getMyPersistentID());
-    buf.append(storage.getMyInitializingID());
+    buf.append(persistentMemberView.getMyInitializingID());
-    for (PersistentMemberID id : storage.getOnlineMembers()) {
+    for (PersistentMemberID id : persistentMemberView.getOnlineMembers()) {
-    for (PersistentMemberID id : storage.getOfflineMembers()) {
+    for (PersistentMemberID id : persistentMemberView.getOfflineMembers()) {
-    for (PersistentMemberID id : storage.getOfflineAndEqualMembers()) {
+    for (PersistentMemberID id : persistentMemberView.getOfflineAndEqualMembers()) {
