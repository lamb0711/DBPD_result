GEODE-7513: Fix PersistentColocatedPartitionedRegionDistributedTest

Move flaky test coverage from distributed test to unit test.

Add more unit tests to SingleThreadColocationLoggerTest.

+import static java.util.concurrent.Executors.newSingleThreadExecutor;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Future;
-  private final AtomicReference<Thread> thread = new AtomicReference<>();
+  private final AtomicReference<Future<?>> completed = new AtomicReference<>();
-  private final Function<Runnable, Thread> threadProvider;
+  private final ExecutorService executorService;
-        runnable -> new LoggingThread("ColocationLogger for " + region.getName(), false, runnable));
+        newSingleThreadExecutor(
+            runnable -> new LoggingThread("ColocationLogger for " + region.getName(), false,
+                runnable)));
-      Function<Runnable, Thread> threadProvider) {
+      ExecutorService executorService) {
-    this.threadProvider = threadProvider;
+    this.executorService = executorService;
-      if (thread.get() != null) {
+      if (completed.get() != null) {
-      thread.set(threadProvider.apply(this::checkForMissingColocatedRegion));
-      thread.get().start();
+      completed.set(executorService.submit(checkForMissingColocatedRegionRunnable()));
-  public Thread getThread() {
-    return thread.get();
+  Future<?> getFuture() {
+    return completed.get();
+  }
+
+  @VisibleForTesting
+  List<String> getMissingChildren() {
+    return new ArrayList<>(missingChildren);
+  }
+
+  private Runnable checkForMissingColocatedRegionRunnable() {
+    return this::checkForMissingColocatedRegion;
