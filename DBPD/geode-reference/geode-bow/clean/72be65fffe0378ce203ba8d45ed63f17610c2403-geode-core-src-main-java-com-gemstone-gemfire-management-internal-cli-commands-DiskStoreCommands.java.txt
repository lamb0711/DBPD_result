Merge branch 'feature/GEODE-17-2' into develop

-import java.io.BufferedReader;
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.PrintStream;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Set;
-
-import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
+import com.gemstone.gemfire.management.internal.security.ResourceOperation;
+import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
+
+import java.io.BufferedReader;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.PrintStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+
+import static com.gemstone.gemfire.cache.operations.OperationContext.OperationCode;
+import static com.gemstone.gemfire.cache.operations.OperationContext.Resource;
+  @ResourceOperation(resource = Resource.DATA, operation = OperationCode.READ)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = OperationCode.READ)
-  public Result createDiskStore(@CliOption(key=CliStrings.CREATE_DISK_STORE__NAME, 
+  @ResourceOperation(resource = Resource.DATA, operation = OperationCode.MANAGE)
+  public Result createDiskStore(@CliOption(key=CliStrings.CREATE_DISK_STORE__NAME,
-  public Result compactDiskStore(@CliOption(key=CliStrings.COMPACT_DISK_STORE__NAME, 
+  @ResourceOperation(resource = Resource.DATA, operation = OperationCode.MANAGE)
+  public Result compactDiskStore(@CliOption(key=CliStrings.COMPACT_DISK_STORE__NAME,
-                 @CliOption(key=CliStrings.COMPACT_OFFLINE_DISK_STORE__NAME, 
+                 @CliOption(key=CliStrings.COMPACT_OFFLINE_DISK_STORE__NAME,
+  @ResourceOperation(resource = Resource.CLUSTER, operation = OperationCode.READ)
+  @ResourceOperation(resource = Resource.DATA, operation = OperationCode.MANAGE)
+  @ResourceOperation(resource = Resource.CLUSTER, operation = OperationCode.READ)
-  
+  @ResourceOperation(resource = Resource.DATA, operation = OperationCode.MANAGE)
