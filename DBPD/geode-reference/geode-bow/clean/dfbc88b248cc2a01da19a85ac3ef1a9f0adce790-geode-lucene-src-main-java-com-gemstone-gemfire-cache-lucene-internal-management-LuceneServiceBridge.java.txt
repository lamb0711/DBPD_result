Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfigImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/StartupMessage.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/SystemAdmin.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheServerStats.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatHelper.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/HostStatSampler.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/statistics/StatArchiveWriter.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/GemFireStatSamplerIntegrationTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/internal/statistics/SimpleStatSamplerIntegrationTest.java

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+  private Map<String,LuceneIndexStatsMonitor> monitors;
+
+    this.monitors = new ConcurrentHashMap<>();
+  }
+
+  public void addIndex(LuceneIndex index) {
+    // Create monitor on the index
+    LuceneIndexStatsMonitor monitor = new LuceneIndexStatsMonitor(index);
+
+    // Register the monitor
+    this.monitors.put(getMonitorKey(index), monitor);
+  private String getMonitorKey(LuceneIndex index) {
+    return index.getRegionPath() + "_" + index.getName();
+  }
+
-    LuceneIndexStats indexStats = index.getIndexStats();
-    int queryExecutions = indexStats.getQueryExecutions();
-    long queryExecutionTime = indexStats.getQueryExecutionTime();
-    int queryExecutionsInProgress = indexStats.getQueryExecutionsInProgress();
-    long queryExecutionTotalHits = indexStats.getQueryExecutionTotalHits();
-    int updates = indexStats.getUpdates();
-    long updateTime = indexStats.getUpdateTime();
-    int updatesInProgress = indexStats.getUpdatesInProgress();
-    int commits = indexStats.getCommits();
-    long commitTime = indexStats.getCommitTime();
-    int commitsInProgress = indexStats.getCommitsInProgress();
-    int documents = indexStats.getDocuments();
-    return new LuceneIndexMetrics(index.getRegionPath(), index.getName(), queryExecutions, queryExecutionTime,
-        queryExecutionsInProgress, queryExecutionTotalHits, updates, updateTime, updatesInProgress, commits,
-        commitTime, commitsInProgress, documents);
+    LuceneIndexStatsMonitor monitor = this.monitors.get(getMonitorKey(index));
+    return monitor.getIndexMetrics(index);
