Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * A GatewayReceiver that receives the events from a <code>GatewaySender</code>.
- * GatewayReceiver is used in conjunction with a {@link GatewaySender} to
- * connect two distributed-systems. This GatewayReceiver will receive all the
- * events originating in distributed-systems that has a
+ * A GatewayReceiver that receives the events from a <code>GatewaySender</code>. GatewayReceiver is
+ * used in conjunction with a {@link GatewaySender} to connect two distributed-systems. This
+ * GatewayReceiver will receive all the events originating in distributed-systems that has a
-   * The default maximum amount of time between client pings. This value
-   * is used by the <code>ClientHealthMonitor</code> to determine the
-   * health of this <code>GatewayReceiver</code>'s clients.
+   * The default maximum amount of time between client pings. This value is used by the
+   * <code>ClientHealthMonitor</code> to determine the health of this <code>GatewayReceiver</code>'s
+   * clients.
-  public static final  int DEFAULT_MAXIMUM_TIME_BETWEEN_PINGS  = 60000;
+  public static final int DEFAULT_MAXIMUM_TIME_BETWEEN_PINGS = 60000;
-   * Default start value of the port range from which the <code>GatewayReceiver</code>'s port will be chosen
+   * Default start value of the port range from which the <code>GatewayReceiver</code>'s port will
+   * be chosen
-  
+
-   * Default end value of the port range from which the <code>GatewayReceiver</code>'s port will be chosen
+   * Default end value of the port range from which the <code>GatewayReceiver</code>'s port will be
+   * chosen
-  
+
-  
+
-   * The default ip address or host name that the receiver's socket will
-   * listen on for client connections.
-   * The current default is an empty string.
+   * The default ip address or host name that the receiver's socket will listen on for client
+   * connections. The current default is an empty string.
-  public static final String DEFAULT_BIND_ADDRESS = ""; 
-  
+  public static final String DEFAULT_BIND_ADDRESS = "";
+
-  
+
-   * The default value (true) for manually starting a
-   * <code>GatewayReceiver</code>.
+   * The default value (true) for manually starting a <code>GatewayReceiver</code>.
+   * 
-  
-  /**
-   * If the batch already seen by this receiver, arrives again then whether it is to be
-   * re-applied or not is decided by this attribute.  
-   */
-  public static final boolean APPLY_RETRIES = Boolean
-      .getBoolean(DistributionConfig.GEMFIRE_PREFIX + "GatewayReceiver.ApplyRetries");
-   * Starts this receiver.  Once the receiver is running, its
-   * configuration cannot be changed.
+   * If the batch already seen by this receiver, arrives again then whether it is to be re-applied
+   * or not is decided by this attribute.
+   */
+  public static final boolean APPLY_RETRIES =
+      Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "GatewayReceiver.ApplyRetries");
+
+  /**
+   * Starts this receiver. Once the receiver is running, its configuration cannot be changed.
-   * @throws IOException
-   *         If an error occurs while starting the receiver
+   * @throws IOException If an error occurs while starting the receiver
-  
+
-   * Stops this receiver. Note that the
-   * <code>GatewayReceiver</code> can be reconfigured and restarted if
-   * desired.
+   * Stops this receiver. Note that the <code>GatewayReceiver</code> can be reconfigured and
+   * restarted if desired.
-  
+
-   * Returns the list of <code>GatewayTransportFilter</code> added to this
-   * GatewayReceiver.
+   * Returns the list of <code>GatewayTransportFilter</code> added to this GatewayReceiver.
-   * @return the list of <code>GatewayTransportFilter</code> added to this
-   *         GatewayReceiver.
+   * @return the list of <code>GatewayTransportFilter</code> added to this GatewayReceiver.
-   * Returns the maximum amount of time between client pings. This value is
-   * used by the <code>ClientHealthMonitor</code> to determine the health
-   * of this <code>GatewayReceiver</code>'s clients (i.e. the GatewaySenders). 
-   * The default is 60000 ms.
+   * Returns the maximum amount of time between client pings. This value is used by the
+   * <code>ClientHealthMonitor</code> to determine the health of this <code>GatewayReceiver</code>'s
+   * clients (i.e. the GatewaySenders). The default is 60000 ms.
+   * 
-  
+
-   * Returns start value of the port range from which the <code>GatewayReceiver</code>'s port will be chosen.
+   * Returns start value of the port range from which the <code>GatewayReceiver</code>'s port will
+   * be chosen.
-  
+
-   * Returns end value of the port range from which the <code>GatewayReceiver</code>'s port will be chosen.
+   * Returns end value of the port range from which the <code>GatewayReceiver</code>'s port will be
+   * chosen.
-  
+
-   * Returns a string representing the ip address or host name that server locators
-   * will tell clients (<code>GatewaySender</code>s in this case) that this receiver is listening on.
-   * @return the ip address or host name to give to clients so they can connect
-   *         to this receiver
+   * Returns a string representing the ip address or host name that server locators will tell
+   * clients (<code>GatewaySender</code>s in this case) that this receiver is listening on.
+   * 
+   * @return the ip address or host name to give to clients so they can connect to this receiver
+   * 
-   * <code>GatewayReceiver</code>
+   *         <code>GatewayReceiver</code>
-   * Returns a string representing the ip address or host name that this server
-   * will listen on.
+   * Returns a string representing the ip address or host name that this server will listen on.
+   * 
-  
+
-   * Returns the manual start boolean property for this GatewayReceiver.
-   * Default is true i.e. the GatewayReceiver will not automatically start once created.
+   * Returns the manual start boolean property for this GatewayReceiver. Default is true i.e. the
+   * GatewayReceiver will not automatically start once created.
-  
+
-   * Return the underlying Cacheserver 
+   * Return the underlying Cacheserver
-  
+
