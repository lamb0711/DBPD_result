Merge branch 'develop' into feature/GEODE-3071

-  public Result createGatewaySender(@CliOption(key = CliStrings.CREATE_GATEWAYSENDER__GROUP,
+  public Result createGatewaySender(@CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.CREATE_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = CliStrings.START_GATEWAYSENDER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.START_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-                        new Object[] {id, member.getId()}));
+                        id, member.getId()));
-                    new Object[] {id, member.getId()}));
+                    id, member.getId()));
-              statusList
-                  .add(CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1,
-                      new Object[] {id, member.getId()}));
+              statusList.add(CliStrings.format(
+                  CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, id, member.getId()));
-        accumulateStartResult(resultData, null, CliStrings.GATEWAY_ERROR,
-            CliStrings.format(CliStrings.GATEWAY_SENDER_0_COULD_NOT_BE_INVOKED_DUE_TO_1,
-                new Object[] {id, ite.getMessage()}));
+        accumulateStartResult(resultData, null, CliStrings.GATEWAY_ERROR, CliStrings.format(
+            CliStrings.GATEWAY_SENDER_0_COULD_NOT_BE_INVOKED_DUE_TO_1, id, ite.getMessage()));
-                  new Object[] {id, ite.getMessage()}));
+                  id, ite.getMessage()));
-                  new Object[] {id, ee.getMessage()}));
+                  id, ee.getMessage()));
-      @CliOption(key = CliStrings.PAUSE_GATEWAYSENDER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.PAUSE_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-                      new Object[] {senderId, member.getId()}));
+                      senderId, member.getId()));
-                  CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_PAUSED_ON_MEMBER_1,
-                      new Object[] {senderId, member.getId()}));
+                  CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_PAUSED_ON_MEMBER_1, senderId,
+                      member.getId()));
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_RUNNING_ON_MEMBER_1,
-                    new Object[] {senderId, member.getId()}));
+                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_RUNNING_ON_MEMBER_1, senderId,
+                    member.getId()));
-              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1,
-                  new Object[] {senderId, member.getId()}));
+              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, senderId,
+                  member.getId()));
-      @CliOption(key = CliStrings.RESUME_GATEWAYSENDER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.RESUME_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-                  CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_RESUMED_ON_MEMBER_1,
-                      new Object[] {senderId, member.getId()}));
+                  CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_RESUMED_ON_MEMBER_1, senderId,
+                      member.getId()));
-                  CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_PAUSED_ON_MEMBER_1,
-                      new Object[] {senderId, member.getId()}));
+                  CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_PAUSED_ON_MEMBER_1, senderId,
+                      member.getId()));
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_RUNNING_ON_MEMBER_1,
-                    new Object[] {senderId, member.getId()}));
+                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_RUNNING_ON_MEMBER_1, senderId,
+                    member.getId()));
-              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1,
-                  new Object[] {senderId, member.getId()}));
+              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, senderId,
+                  member.getId()));
-      @CliOption(key = CliStrings.STOP_GATEWAYSENDER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.STOP_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_STOPPED_ON_MEMBER_1,
-                    new Object[] {senderId, member.getId()}));
+                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_STOPPED_ON_MEMBER_1, senderId,
+                    member.getId()));
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_RUNNING_ON_MEMBER_1,
-                    new Object[] {senderId, member.getId()}));
+                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_RUNNING_ON_MEMBER_1, senderId,
+                    member.getId()));
-              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1,
-                  new Object[] {senderId, member.getId()}));
+              CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_NOT_AVAILABLE_ON_MEMBER_1, senderId,
+                  member.getId()));
-  public Result createGatewayReceiver(@CliOption(key = CliStrings.CREATE_GATEWAYRECEIVER__GROUP,
+  public Result createGatewayReceiver(@CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.CREATE_GATEWAYRECEIVER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_REBALANCED_ON_MEMBER_1,
-                    new Object[] {senderId, member.getId()}));
+                CliStrings.format(CliStrings.GATEWAY_SENDER_0_IS_REBALANCED_ON_MEMBER_1, senderId,
+                    member.getId()));
-                    new Object[] {senderId, member.getId()}));
+                    senderId, member.getId()));
-  public Result startGatewayReceiver(@CliOption(key = CliStrings.START_GATEWAYRECEIVER__GROUP,
+  public Result startGatewayReceiver(@CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.START_GATEWAYRECEIVER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = CliStrings.STOP_GATEWAYRECEIVER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.STOP_GATEWAYRECEIVER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = CliStrings.LIST_GATEWAY__MEMBER, optionContext = ConverterHint.MEMBERIDNAME,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
+          optionContext = ConverterHint.MEMBERIDNAME,
-      @CliOption(key = CliStrings.LIST_GATEWAY__GROUP, optionContext = ConverterHint.MEMBERGROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
+          optionContext = ConverterHint.MEMBERGROUP,
-      @CliOption(key = CliStrings.STATUS_GATEWAYSENDER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.STATUS_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-  public Result statusGatewayReceiver(@CliOption(key = CliStrings.STATUS_GATEWAYRECEIVER__GROUP,
+  public Result statusGatewayReceiver(@CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.STATUS_GATEWAYRECEIVER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
-      @CliOption(key = CliStrings.DESTROY_GATEWAYSENDER__GROUP,
+      @CliOption(key = {CliStrings.GROUP, CliStrings.GROUPS},
-      @CliOption(key = CliStrings.DESTROY_GATEWAYSENDER__MEMBER,
+      @CliOption(key = {CliStrings.MEMBER, CliStrings.MEMBERS},
