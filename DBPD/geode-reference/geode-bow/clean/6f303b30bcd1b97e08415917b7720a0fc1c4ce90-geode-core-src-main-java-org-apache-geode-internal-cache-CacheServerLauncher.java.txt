GEODE-5980: Removed unused collections. (#2774)

* Removed collections that are populated but are never used.
-import java.util.AbstractList;
-    final ListWrapper<String> commandLineWrapper = new ListWrapper<String>(commandLine);
-      commandLineWrapper.add("-rebalance");
+      commandLine.add("-rebalance");
-    commandLineWrapper.add((String) options.get(DISABLE_DEFAULT_SERVER));
-    commandLineWrapper.add((String) options.get(SERVER_PORT));
-    commandLineWrapper.add((String) options.get(SERVER_BIND_ADDRESS_NAME));
+    String disableDefaultServer = (String) options.get(DISABLE_DEFAULT_SERVER);
+    if (disableDefaultServer != null) {
+      commandLine.add(disableDefaultServer);
+    }
+
+    String serverPort = (String) options.get(SERVER_PORT);
+    if (serverPort != null) {
+      commandLine.add(serverPort);
+    }
+
+    String serverBindAddressName = (String) options.get(SERVER_BIND_ADDRESS_NAME);
+    if (serverBindAddressName != null) {
+      commandLine.add(serverBindAddressName);
+    }
-      commandLineWrapper.add(criticalHeapThreshold);
+      commandLine.add(criticalHeapThreshold);
-      commandLineWrapper.add(evictionHeapThreshold);
+      commandLine.add(evictionHeapThreshold);
-      commandLineWrapper.add(criticalOffHeapThreshold);
+      commandLine.add(criticalOffHeapThreshold);
-      commandLineWrapper.add(evictionOffHeapThreshold);
+      commandLine.add(evictionOffHeapThreshold);
-      commandLineWrapper.add(key + "=" + props.getProperty(key.toString()));
+      commandLine.add(key + "=" + props.getProperty(key.toString()));
-      commandLineWrapper.add(LOG_FILE + "=" + defaultLogFileName);
+      commandLine.add(LOG_FILE + "=" + defaultLogFileName);
-  /**
-   * A List implementation that disallows null values.
-   *
-   * @param <E> the Class type for the List elements.
-   */
-  protected static class ListWrapper<E> extends AbstractList<E> {
-    private static final ThreadLocal<Boolean> addResult = new ThreadLocal<Boolean>();
-
-    private final List<E> list;
-
-    public ListWrapper(final List<E> list) {
-      assert list != null : "The List cannot be null!";
-      this.list = list;
-    }
-
-    @Override
-    public boolean add(final E e) {
-      final boolean localAddResult = super.add(e);
-      return (localAddResult && addResult.get());
-    }
-
-    @Override
-    public void add(final int index, final E element) {
-      if (element != null) {
-        list.add(index, element);
-      }
-      addResult.set(element != null);
-    }
-
-    @Override
-    public E get(final int index) {
-      return this.list.get(index);
-    }
-
-    @Override
-    public E remove(final int index) {
-      return list.remove(index);
-    }
-
-    @Override
-    public E set(final int index, final E element) {
-      return (element != null ? list.set(index, element) : list.get(index));
-    }
-
-    @Override
-    public int size() {
-      return list.size();
-    }
-  }
