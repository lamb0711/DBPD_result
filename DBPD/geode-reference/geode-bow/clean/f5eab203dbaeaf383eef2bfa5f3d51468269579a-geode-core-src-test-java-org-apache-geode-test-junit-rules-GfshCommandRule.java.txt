GEODE-5330: only create one temp folder (#2068)

One temp folder will be left after tests complete. This was the behavior
that GfshCommandRule had prior to GEODE-5327. It is caused by the
creation of the temp directory in the constructor of GfshCommandRule. If
the creation happened only in before(), only one temp directory would be
created and cleaned up. However, this would cause some existing DUnit
tests to break, as they use the GfshCommandRule in a way that never
calls before().

The creation of the temp folder was added to before() as part of
GEODE-5327 so that IntelliJ could run DUnit tests multiple times.
-    workingDir = temporaryFolder.newFolder("gfsh_files");
+    try {
+      workingDir = temporaryFolder.newFolder("gfsh_files");
+    } catch (IOException e) {
+      workingDir = temporaryFolder.getRoot();
+    }
-  private void createTempFolder() {
-    try {
-      temporaryFolder.create();
-    } catch (IOException e) {
-      throw new UncheckedIOException(e);
-    }
-  }
-
+  private void createTempFolder() {
+    // check if the temp folder exists and create it if needed
+    // an IllegalStateException will be thrown if the temp folder does not exist
+    try {
+      temporaryFolder.getRoot();
+    } catch (IllegalStateException e) {
+      try {
+        temporaryFolder.create();
+      } catch (IOException ioe) {
+        throw new UncheckedIOException(ioe);
+      }
+    }
+  }
+
-      this.gfsh = new HeadlessGfsh(getClass().getName(), 30,
-          temporaryFolder.newFolder("gfsh_files").getAbsolutePath());
+      String absolutePath;
+      try {
+        absolutePath = temporaryFolder.newFolder("gfsh_files").getAbsolutePath();
+      } catch (IOException e) {
+        absolutePath = temporaryFolder.getRoot().getAbsolutePath();
+      }
+
+      this.gfsh = new HeadlessGfsh(getClass().getName(), 30, absolutePath);
