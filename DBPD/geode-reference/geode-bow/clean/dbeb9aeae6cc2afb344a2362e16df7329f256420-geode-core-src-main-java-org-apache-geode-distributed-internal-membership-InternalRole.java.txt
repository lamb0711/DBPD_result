Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * <p>Members of the distributed system can fill one or more user defined 
- * roles. A role is metadata that describes how the member relates to other 
- * members or what purpose it fills.</p>
+ * <p>
+ * Members of the distributed system can fill one or more user defined roles. A role is metadata
+ * that describes how the member relates to other members or what purpose it fills.
+ * </p>
- * <p>This class should not be Serializable or DataSerializable. It has a
- * private constructor and it maintains a static canonical map of instances.
- * Any serializable object which has instances of InternalRole should flag
- * those variables as transient. Objects that implement DataSerializable
+ * <p>
+ * This class should not be Serializable or DataSerializable. It has a private constructor and it
+ * maintains a static canonical map of instances. Any serializable object which has instances of
+ * InternalRole should flag those variables as transient. Objects that implement DataSerializable
- * {@link org.apache.geode.cache.MembershipAttributes}.</p>
+ * {@link org.apache.geode.cache.MembershipAttributes}.
+ * </p>
- * <p>Serializable classes which hold references to Roles should customize
- * serialization to transfer string names for Roles. See {@link 
- * org.apache.geode.cache.RegionAccessException RegionAccessException}
- * and {@link org.apache.geode.cache.RegionDistributionException 
- * RegionDistributionException} for examples on how to do this.</p>
+ * <p>
+ * Serializable classes which hold references to Roles should customize serialization to transfer
+ * string names for Roles. See {@link org.apache.geode.cache.RegionAccessException
+ * RegionAccessException} and {@link org.apache.geode.cache.RegionDistributionException
+ * RegionDistributionException} for examples on how to do this.
+ * </p>
-  
+
-  /** Static canonical instances of roles. key=name, value=InternalRole */  
+  /** Static canonical instances of roles. key=name, value=InternalRole */
-  
+
-  
+
-  
+
-   * @param o 
-   *        the Object to be compared
-   * @return a negative integer, zero, or a positive integer as this object is
-   *         less than, equal to, or greater than the specified object.
-   * @exception java.lang.ClassCastException
-   *            if the specified object's type prevents it from being compared
-   *            to this Object.
+   * @param o the Object to be compared
+   * @return a negative integer, zero, or a positive integer as this object is less than, equal to,
+   *         or greater than the specified object.
+   * @exception java.lang.ClassCastException if the specified object's type prevents it from being
+   *            compared to this Object.
-      throw new ClassCastException(LocalizedStrings.InternalRole_INTERNALROLECOMPARETO_COMPARISON_BETWEEN_DIFFERENT_CLASSES.toLocalizedString());
+      throw new ClassCastException(
+          LocalizedStrings.InternalRole_INTERNALROLECOMPARETO_COMPARISON_BETWEEN_DIFFERENT_CLASSES
+              .toLocalizedString());
-   
-	/**
-	 * Indicates whether some other object is "equal to" this one.
-	 *
-	 * @param  other  the reference object with which to compare.
-	 * @return true if this object is the same as the obj argument;
-	 *         false otherwise.
-	 */
+
+  /**
+   * Indicates whether some other object is "equal to" this one.
+   *
+   * @param other the reference object with which to compare.
+   * @return true if this object is the same as the obj argument; false otherwise.
+   */
-	public boolean equals(Object other) {
-		if (other == this) return true;
-		if (other == null) return false;
-		if (!(other instanceof InternalRole)) return  false;
-		final InternalRole that = (InternalRole) other;
+  public boolean equals(Object other) {
+    if (other == this)
+      return true;
+    if (other == null)
+      return false;
+    if (!(other instanceof InternalRole))
+      return false;
+    final InternalRole that = (InternalRole) other;
-		if (!StringUtils.equals(this.name, that.name)) return false;
+    if (!StringUtils.equals(this.name, that.name))
+      return false;
-		return true;
-	}
+    return true;
+  }
-	/**
-	 * Returns a hash code for the object. This method is supported for the
-	 * benefit of hashtables such as those provided by java.util.Hashtable.
-	 *
-	 * @return the integer 0 if description is null; otherwise a unique integer.
-	 */
+  /**
+   * Returns a hash code for the object. This method is supported for the benefit of hashtables such
+   * as those provided by java.util.Hashtable.
+   *
+   * @return the integer 0 if description is null; otherwise a unique integer.
+   */
-	public int hashCode() {
-		int result = 17;
-		final int mult = 37;
+  public int hashCode() {
+    int result = 17;
+    final int mult = 37;
-		result = mult * result + 
-			(this.name == null ? 0 : this.name.hashCode());
+    result = mult * result + (this.name == null ? 0 : this.name.hashCode());
-		return result;
-	}
-  
-  /** 
-   * Factory method to allow canonicalization of instances. Returns existing
-   * instance or creates a new instance.
+    return result;
+  }
+
+  /**
+   * Factory method to allow canonicalization of instances. Returns existing instance or creates a
+   * new instance.
-  
+
-    InternalDistributedSystem sys = 
-        InternalDistributedSystem.getAnyInstance();
+    InternalDistributedSystem sys = InternalDistributedSystem.getAnyInstance();
-      throw new IllegalStateException(LocalizedStrings.InternalRole_ISPRESENT_REQUIRES_A_CONNECTION_TO_THE_DISTRIBUTED_SYSTEM.toLocalizedString());
+      throw new IllegalStateException(
+          LocalizedStrings.InternalRole_ISPRESENT_REQUIRES_A_CONNECTION_TO_THE_DISTRIBUTED_SYSTEM
+              .toLocalizedString());
-  
+
-    InternalDistributedSystem sys = 
-        InternalDistributedSystem.getAnyInstance();
+    InternalDistributedSystem sys = InternalDistributedSystem.getAnyInstance();
-      throw new IllegalStateException(LocalizedStrings.InternalRole_GETCOUNT_REQUIRES_A_CONNECTION_TO_THE_DISTRIBUTED_SYSTEM.toLocalizedString());
+      throw new IllegalStateException(
+          LocalizedStrings.InternalRole_GETCOUNT_REQUIRES_A_CONNECTION_TO_THE_DISTRIBUTED_SYSTEM
+              .toLocalizedString());
-	/**
-	 * Returns a string representation of the object.
-	 * 
-	 * @return a string representation of the object
-	 */
+  /**
+   * Returns a string representation of the object.
+   * 
+   * @return a string representation of the object
+   */
-	public String toString() {
+  public String toString() {
-	}
-  
+  }
+
