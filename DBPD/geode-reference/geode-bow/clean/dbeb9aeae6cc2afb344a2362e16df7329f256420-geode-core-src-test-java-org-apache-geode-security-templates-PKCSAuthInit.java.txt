Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * An {@link AuthInitialize} implementation that obtains the digital signature
- * for use with PKCS scheme on server from the given set of properties.
+ * An {@link AuthInitialize} implementation that obtains the digital signature for use with PKCS
+ * scheme on server from the given set of properties.
- * To use this class the {@code security-client-auth-init} property should be
- * set to the fully qualified name the static {@code create} function
- * viz. {@code org.apache.geode.security.templates.PKCSAuthInit.create}
+ * To use this class the {@code security-client-auth-init} property should be set to the fully
+ * qualified name the static {@code create} function viz.
+ * {@code org.apache.geode.security.templates.PKCSAuthInit.create}
-  public void init(final LogWriter systemLogWriter, final LogWriter securityLogWriter) throws AuthenticationFailedException {
+  public void init(final LogWriter systemLogWriter, final LogWriter securityLogWriter)
+      throws AuthenticationFailedException {
-  public Properties getCredentials(final Properties securityProperties, final DistributedMember server, final boolean isPeer) throws AuthenticationFailedException {
+  public Properties getCredentials(final Properties securityProperties,
+      final DistributedMember server, final boolean isPeer) throws AuthenticationFailedException {
-      throw new AuthenticationFailedException("PKCSAuthInit: key-store file path property [" + KEYSTORE_FILE_PATH + "] not set.");
+      throw new AuthenticationFailedException(
+          "PKCSAuthInit: key-store file path property [" + KEYSTORE_FILE_PATH + "] not set.");
-      throw new AuthenticationFailedException("PKCSAuthInit: key alias name property [" + KEYSTORE_ALIAS + "] not set.");
+      throw new AuthenticationFailedException(
+          "PKCSAuthInit: key alias name property [" + KEYSTORE_ALIAS + "] not set.");
-        final PrivateKey privKey = (PrivateKey)key;
-        final X509Certificate cert = (X509Certificate)ks.getCertificate(alias);
+        final PrivateKey privKey = (PrivateKey) key;
+        final X509Certificate cert = (X509Certificate) ks.getCertificate(alias);
-        throw new AuthenticationFailedException("PKCSAuthInit: " + "Failed to load private key from the given file: " + keyStorePath);
+        throw new AuthenticationFailedException(
+            "PKCSAuthInit: " + "Failed to load private key from the given file: " + keyStorePath);
-      throw new AuthenticationFailedException("PKCSAuthInit: Exception while getting credentials: " + ex, ex);
+      throw new AuthenticationFailedException(
+          "PKCSAuthInit: Exception while getting credentials: " + ex, ex);
-  public void close() {
-  }
+  public void close() {}
