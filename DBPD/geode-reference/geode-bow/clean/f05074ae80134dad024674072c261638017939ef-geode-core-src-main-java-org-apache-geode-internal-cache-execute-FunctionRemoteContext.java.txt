GEODE-7134: Replace bucket Set with bucket int[] (#4002)


+import java.util.Arrays;
+import org.apache.geode.internal.InternalDataSerializer;
+import org.apache.geode.internal.cache.BucketSetHelper;
+import org.apache.geode.internal.serialization.Version;
-  private Set<Integer> bucketSet;
+  private int[] bucketArray;
-      Set<Integer> bucketSet, boolean isReExecute, boolean isFnSerializationReqd) {
+      int[] bucketArray, boolean isReExecute, boolean isFnSerializationReqd) {
-    this.bucketSet = bucketSet;
+    this.bucketArray = bucketArray;
-    this.bucketSet = (HashSet) DataSerializer.readHashSet(in);
+    if (InternalDataSerializer.getVersionForDataStream(in).compareTo(Version.GEODE_1_11_0) >= 0) {
+      this.bucketArray = DataSerializer.readIntArray(in);
+    } else {
+      HashSet<Integer> bucketSet = DataSerializer.readHashSet(in);
+      this.bucketArray = BucketSetHelper.fromSet(bucketSet);
+    }
-    DataSerializer.writeHashSet((HashSet) this.bucketSet, out);
+    if (InternalDataSerializer.getVersionForDataStream(out).compareTo(Version.GEODE_1_11_0) >= 0) {
+      DataSerializer.writeIntArray(this.bucketArray, out);
+    } else {
+      Set<Integer> bucketSet = BucketSetHelper.toSet(this.bucketArray);
+      DataSerializer.writeHashSet((HashSet) bucketSet, out);
+    }
-  public Set<Integer> getBucketSet() {
-    return bucketSet;
+  public int[] getBucketArray() {
+    return bucketArray;
-    buff.append(" bucketSet=" + bucketSet + "}");
+    buff.append(" bucketArray=" + Arrays.toString(bucketArray) + "}");
