Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * VersionTags are sent with distribution messages and carry version info
- * for the operation.
+ * VersionTags are sent with distribution messages and carry version info for the operation.
- * Note that on the receiving end the membership IDs in a version tag will
- * not be references to canonical IDs and should be made so before storing
- * them for any length of time.
+ * Note that on the receiving end the membership IDs in a version tag will not be references to
+ * canonical IDs and should be made so before storing them for any length of time.
- * This class implements java.io.Serializable for dunit testing.  It should
- * not otherwise be serialized with that mechanism.
+ * This class implements java.io.Serializable for dunit testing. It should not otherwise be
+ * serialized with that mechanism.
-public abstract class VersionTag<T extends VersionSource> implements DataSerializableFixedID, java.io.Serializable, VersionHolder<T> {
+public abstract class VersionTag<T extends VersionSource>
+    implements DataSerializableFixedID, java.io.Serializable, VersionHolder<T> {
-  
+
-  public static final int TAG_SIZE = ReflectionSingleObjectSizer.OBJECT_SIZE +
-          ReflectionSingleObjectSizer.REFERENCE_SIZE * 2 + 23;
+  public static final int TAG_SIZE =
+      ReflectionSingleObjectSizer.OBJECT_SIZE + ReflectionSingleObjectSizer.REFERENCE_SIZE * 2 + 23;
-   * A timestamp that cannot exist due to range restrictions.  This is used
-   * to mark a timestamp as not being real
+   * A timestamp that cannot exist due to range restrictions. This is used to mark a timestamp as
+   * not being real
-  
+
-   * boolean bits
-   * Note: this is an int field so it has 32 bits BUT only the lower 16 bits are serialized.
-   * So all our code should treat this an an unsigned short field.
+   * boolean bits Note: this is an int field so it has 32 bits BUT only the lower 16 bits are
+   * serialized. So all our code should treat this an an unsigned short field.
-   * the initiator of the operation.  If null, the initiator was the sender
-   * of the operation
+   * the initiator of the operation. If null, the initiator was the sender of the operation
-   * for Delta operations, the ID of the version stamp on which the delta
-   * is based.  The version number for that stamp is getEntryVersion()-1
+   * for Delta operations, the ID of the version stamp on which the delta is based. The version
+   * number for that stamp is getEntryVersion()-1
-  
+
-    return (((long)regionVersionHighBytes) << 32) | (regionVersionLowBytes & 0x00000000FFFFFFFFL);  
+    return (((long) regionVersionHighBytes) << 32) | (regionVersionLowBytes & 0x00000000FFFFFFFFL);
-   * set rvv internal bytes.  Used by region entries
+   * set rvv internal bytes. Used by region entries
-   * get rvv internal high byte.  Used by region entries for transferring to storage
+   * get rvv internal high byte. Used by region entries for transferring to storage
-   * get rvv internal low bytes.  Used by region entries for transferring to storage
+   * get rvv internal low bytes. Used by region entries for transferring to storage
-  
+
-   * Set canonical ID objects into this version tag using the DM's cache
-   * of IDs
+   * Set canonical ID objects into this version tag using the DM's cache of IDs
+   * 
-  public void setCanonicalIDs(DM distributionManager) {
-  }
+  public void setCanonicalIDs(DM distributionManager) {}
-   * sets the possible-duplicate flag for this tag.  When a tag has this
-   * bit it means that the cache had seen the operation that was being applied
-   * to it and plucked out the current version stamp to use in propagating
-   * the event to other members and clients.  A member receiving this event
+   * sets the possible-duplicate flag for this tag. When a tag has this bit it means that the cache
+   * had seen the operation that was being applied to it and plucked out the current version stamp
+   * to use in propagating the event to other members and clients. A member receiving this event
-   * set or clear the flag that this tag was blessed by a
-   * conflict resolver
+   * set or clear the flag that this tag was blessed by a conflict resolver
+   * 
-  
+
-  
+
-   * replace null member IDs with the given identifier.  This is used to
-   * incorporate version information into the cache that has been received
-   * from another VM
+   * replace null member IDs with the given identifier. This is used to incorporate version
+   * information into the cache that has been received from another VM
-   * returns true if this tag has a previous member ID for delta operation
-   * checks
+   * returns true if this tag has a previous member ID for delta operation checks
-   * returns true if entry and region version numbers are not both zero, meaning this
-   * has valid version numbers
+   * returns true if entry and region version numbers are not both zero, meaning this has valid
+   * version numbers
-    return !(this.entryVersion == 0 && this.regionVersionHighBytes == 0 && this.regionVersionLowBytes == 0);
+    return !(this.entryVersion == 0 && this.regionVersionHighBytes == 0
+        && this.regionVersionLowBytes == 0);
-      logger.info(LogMarker.VERSION_TAG, "serializing {} with flags 0x{}", this.getClass(), Integer.toHexString(flags));
+      logger.info(LogMarker.VERSION_TAG, "serializing {} with flags 0x{}", this.getClass(),
+          Integer.toHexString(flags));
-    if (this.previousMemberID != null && (this.previousMemberID != this.memberID || !includeMember)) {
+    if (this.previousMemberID != null
+        && (this.previousMemberID != this.memberID || !includeMember)) {
-      logger.info(LogMarker.VERSION_TAG, "deserializing {} with flags 0x{}", this.getClass(), Integer.toHexString(flags));
+      logger.info(LogMarker.VERSION_TAG, "deserializing {} with flags 0x{}", this.getClass(),
+          Integer.toHexString(flags));
-  
+
-  public int getSizeInBytes() {
-    int size = org.apache.geode.internal.cache.lru.Sizeable.PER_OBJECT_OVERHEAD + VersionTag.TAG_SIZE;
-    // member size calculation 
-    size += memberID.getSizeInBytes();
-    return size;
-    
-  }
-
-      s.append("{ds=").append(this.distributedSystemId)
-              .append("; time=").append(getVersionTimeStamp()).append("}");
+      s.append("{ds=").append(this.distributedSystemId).append("; time=")
+          .append(getVersionTimeStamp()).append("}");
-   * @return the time stamp of this operation.  This is an unsigned integer returned as a long
+   * @return the time stamp of this operation. This is an unsigned integer returned as a long
-          throws IOException, ClassNotFoundException {
+      throws IOException, ClassNotFoundException {
-  
+
+
