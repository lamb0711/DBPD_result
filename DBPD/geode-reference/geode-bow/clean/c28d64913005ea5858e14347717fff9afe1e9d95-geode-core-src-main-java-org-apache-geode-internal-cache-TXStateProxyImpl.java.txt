Merge branch 'release/1.4.0'

+import org.apache.geode.distributed.internal.DistributionConfig;
+import org.apache.geode.internal.lang.SystemPropertyHelper;
-  final protected TXManagerImpl txMgr;
+  protected final TXManagerImpl txMgr;
-   * 
+   *
+
-      txp = getTxMgr().internalSuspend();
+      txp = getTxMgr().pauseTransaction();
-        getTxMgr().internalResume(txp);
+        getTxMgr().unpauseTransaction(txp);
+  protected final boolean restoreSetOperationTransactionBehavior =
+      SystemPropertyHelper.restoreSetOperationTransactionBehavior();
+
-    boolean resetTxState = this.realDeal == null;
+    boolean resetTxState = isTransactionInternalSuspendNeeded(currRgn);
-      txp = getTxMgr().internalSuspend();
+      txp = getTxMgr().pauseTransaction();
-        getTxMgr().internalResume(txp);
+        getTxMgr().unpauseTransaction(txp);
+  private boolean isTransactionInternalSuspendNeeded(LocalRegion region) {
+    boolean resetTxState = this.realDeal == null
+        && (!region.canStoreDataLocally() || restoreSetOperationTransactionBehavior);
+    return resetTxState;
+  }
+
-    boolean resetTxState = this.realDeal == null;
+    boolean resetTxState = isTransactionInternalSuspendNeeded(currRgn);
-      txp = getTxMgr().internalSuspend();
+      txp = getTxMgr().pauseTransaction();
-        getTxMgr().internalResume(txp);
+        getTxMgr().unpauseTransaction(txp);
-    // if this the first operation in a transaction, reset txState
-    boolean resetTxState = this.realDeal == null;
+    boolean resetTxState = isTransactionInternalSuspendNeeded(localRegion);
-      txp = getTxMgr().internalSuspend();
+      txp = getTxMgr().pauseTransaction();
-        getTxMgr().internalResume(txp);
+        getTxMgr().unpauseTransaction(txp);
-      return getRealDeal(null, currRegion).getRegionKeysForIteration(currRegion);
+      boolean resetTxState = isTransactionInternalSuspendNeeded(currRegion);
+      TXStateProxy txp = null;
+      if (resetTxState) {
+        txp = getTxMgr().pauseTransaction();
+      }
+      try {
+        if (resetTxState) {
+          return currRegion.getSharedDataView().getRegionKeysForIteration(currRegion);
+        }
+        return getRealDeal(null, currRegion).getRegionKeysForIteration(currRegion);
+      } finally {
+        if (resetTxState) {
+          getTxMgr().unpauseTransaction(txp);
+        }
+      }
+  public boolean hasRealDeal() {
+    return this.realDeal != null;
+  }
+
