GEODE-4863: refactor jdbc commands to use this public cluster configuration api (#1776)

   * refactored jdbc connector commands to use public cc service
   * removed JdbcConnectorServiceXmlGenerator
   * removed RegionMappingBuilder & ConnectionConfigBuilder
   * if cc service is running then user can only alter whats available in CC
   * describe & List commands now list entries from cc service
   * converted some integration tests to junits
   * removed unwanted functions, tests

Signed-off-by: Jinmei Liao <jiliao@pivotal.io>

-import java.util.Map;
-
-import org.apache.geode.connectors.jdbc.internal.ConnectionConfiguration;
+import org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService;
-import org.apache.geode.management.internal.configuration.domain.XmlEntity;
-    extends JdbcCliFunction<ConnectionConfiguration, CliFunctionResult> {
+    extends JdbcCliFunction<ConnectorService.Connection, CliFunctionResult> {
-      FunctionContext<ConnectionConfiguration> context) throws Exception {
-    ConnectionConfiguration connectionConfig = context.getArguments();
-    ConnectionConfiguration existingConfig =
+      FunctionContext<ConnectorService.Connection> context) throws Exception {
+    ConnectorService.Connection connectionConfig = context.getArguments();
+    ConnectorService.Connection existingConfig =
-    ConnectionConfiguration alteredConfig = alterConnectionConfig(connectionConfig, existingConfig);
+    ConnectorService.Connection alteredConfig =
+        alterConnectionConfig(connectionConfig, existingConfig);
-    // output
-    String member = getMember(context);
-    XmlEntity xmlEntity = createXmlEntity(context);
-    CliFunctionResult result = createSuccessResult(connectionConfig.getName(), member, xmlEntity);
-    return result;
+    return new CliFunctionResult(context.getMemberName(), alteredConfig, null);
-  ConnectionConfiguration alterConnectionConfig(ConnectionConfiguration connectionConfig,
-      ConnectionConfiguration existingConfig) {
+  ConnectorService.Connection alterConnectionConfig(ConnectorService.Connection connectionConfig,
+      ConnectorService.Connection existingConfig) {
-    Map<String, String> parameters = connectionConfig.getParameters();
+    String parameters = connectionConfig.getParameters();
-    ConnectionConfiguration alteredConfig =
-        new ConnectionConfiguration(existingConfig.getName(), url, user, password, parameters);
+    ConnectorService.Connection alteredConfig =
+        new ConnectorService.Connection(existingConfig.getName(), url, user, password, parameters);
-
-  private CliFunctionResult createSuccessResult(String connectionName, String member,
-      XmlEntity xmlEntity) {
-    String message = "Altered JDBC connection " + connectionName + " on " + member;
-    return new CliFunctionResult(member, xmlEntity, message);
-  }
