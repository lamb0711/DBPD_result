GEODE-7134: Replace bucket Set with bucket int[] (#4002)


-    HashMap<InternalDistributedMember, HashSet<Integer>> memberToBuckets =
+    HashMap<InternalDistributedMember, int[]> memberToBuckets =
-          for (Integer bucketId : memberToBuckets.get(targetNode)) {
+          int[] bucketArray = memberToBuckets.get(targetNode);
+          int length = BucketSetHelper.length(bucketArray);
+          if (length == 0) {
+            continue;
+          }
+          for (int i = 0; i < length; i++) {
+            int bucketId = BucketSetHelper.get(bucketArray, i);
-      HashSet<Integer> buckets = (HashSet) entry.getValue();
-      for (Integer bucket : buckets) {
+      int[] buckets = (int[]) entry.getValue();
+      int length = BucketSetHelper.length(buckets);
+      if (length == 0) {
+        continue;
+      }
+      int bucket;
+      for (int i = 0; i < length; i++) {
+        bucket = BucketSetHelper.get(buckets, i);
-    HashSet<Integer> localBucketSet = null;
+    int[] localBucketSet = null;
-    final HashSet<Integer> buckets = new HashSet<Integer>();
-    buckets.add(bucketId);
+    final int[] buckets = new int[2];
+    buckets[0] = 0;
+    BucketSetHelper.add(buckets, bucketId);
-    HashMap<InternalDistributedMember, HashSet<Integer>> memberToBuckets =
+    HashMap<InternalDistributedMember, int[]> memberToBuckets =
-          for (Integer bucketId : memberToBuckets.get(targetNode)) {
+          int[] bucketArray = memberToBuckets.get(targetNode);
+          int length = BucketSetHelper.length(bucketArray);
+          if (length == 0) {
+            continue;
+          }
+          for (int i = 0; i < length; i++) {
+            int bucketId = BucketSetHelper.get(bucketArray, i);
-    final Set localBucketSet = memberToBuckets.remove(getMyId());
-    if (localBucketSet != null) {
+    final int[] localBucketSet = memberToBuckets.remove(getMyId());
+    if (BucketSetHelper.length(localBucketSet) > 0) {
-    HashMap<InternalDistributedMember, HashSet<Integer>> memberToBuckets =
+    HashMap<InternalDistributedMember, int[]> memberToBuckets =
-    final Set<Integer> localBucketSet = memberToBuckets.remove(getMyId());
-    if (localBucketSet != null) {
+    final int[] localBucketSet = memberToBuckets.remove(getMyId());
+    if (BucketSetHelper.length(localBucketSet) > 0) {
-      Set bucketSet, ServerToClientFunctionResultSender sender, AbstractExecution execution) {
+      int[] bucketArray, ServerToClientFunctionResultSender sender, AbstractExecution execution) {
-            execution.isForwardExceptions(), function, bucketSet);
+            execution.isForwardExceptions(), function, bucketArray);
-        bucketSet, execution.isReExecute(), execution.isFnSerializationReqd());
+        bucketArray, execution.isReExecute(), execution.isFnSerializationReqd());
