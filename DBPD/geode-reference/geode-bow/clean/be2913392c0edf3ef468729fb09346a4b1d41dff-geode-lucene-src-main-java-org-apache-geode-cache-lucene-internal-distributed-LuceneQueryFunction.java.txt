GEODE-5055: Handle index creation in progress. (#1847)

         * If all the servers are above the 1.6.0 version then the LuceneIndexCreationInProgressException will be propogated up to the servers
	* If there are servers which are lower than 1.6.0 then get repository will be re-executed but it will wait till the indexes are available.
+import java.util.Set;
+import org.apache.geode.cache.lucene.internal.LuceneIndexCreationInProgressException;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.Version;
+import org.apache.geode.internal.cache.PartitionedRegion;
+    execute(context, false);
+  }
+
+  private void handleException(LuceneIndexCreationInProgressException ex,
+      RegionFunctionContext ctx) {
+    PartitionedRegion userDataRegion = (PartitionedRegion) ctx.getDataSet();
+
+    // get the remote members
+    Set<InternalDistributedMember> remoteMembers =
+        userDataRegion.getRegionAdvisor().adviseAllPRNodes();
+    // Old members with version numbers 1.6 or lower cannot handle IndexCreationInProgressException
+    // Hence the query waits for the repositories to be ready instead of throwing the exception
+    if (!remoteMembers.isEmpty()) {
+      for (InternalDistributedMember remoteMember : remoteMembers) {
+        if (remoteMember.getVersionObject().ordinal() <= Version.GEODE_160.ordinal()) {
+          // re-execute but wait till indexing is complete
+          execute(ctx, true);
+          return;
+        }
+      }
+    }
+    // Will return the LuceneIndexCreationInProgressException as the new servers can handle this
+    // exception
+    throw ex;
+  }
+
+  public void execute(FunctionContext<LuceneFunctionContext> context, boolean waitForRepository) {
-        repositories = repoManager.getRepositories(ctx);
+        repositories = repoManager.getRepositories(ctx, waitForRepository);
+    } catch (LuceneIndexCreationInProgressException ex) {
+      if (!waitForRepository) {
+        handleException(ex, ctx);
+      } else {
+        logger.debug("The lucene query should have waited for the index to be created");
+        throw ex;
+      }
