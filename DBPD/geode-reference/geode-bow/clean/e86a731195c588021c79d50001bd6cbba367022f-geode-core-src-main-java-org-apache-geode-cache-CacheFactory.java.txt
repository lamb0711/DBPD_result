Merge branch 'release/1.3.0'

-import java.util.Properties;
-
+import org.apache.geode.distributed.internal.SecurityConfig;
+import org.apache.geode.security.GemFireSecurityException;
+import java.util.Properties;
+
-    return GemFireCacheImpl.create(system, existingOk, cacheConfig);
+    return GemFireCacheImpl.create((InternalDistributedSystem) system, existingOk, cacheConfig);
+        validateUsabilityOfSecurityCallbacks(ds);
-        ds = DistributedSystem.connect(this.dsProps);
+        // use ThreadLocal to avoid exposing new User API in DistributedSystem
+        SecurityConfig.set(this.cacheConfig.getSecurityManager(),
+            this.cacheConfig.getPostProcessor());
+        try {
+          ds = DistributedSystem.connect(this.dsProps);
+        } finally {
+          SecurityConfig.remove();
+        }
-      return create(ds, true, cacheConfig);
+      return create(ds, true, this.cacheConfig);
+    }
+  }
+
+  /**
+   * Throws GemFireSecurityException if existing DistributedSystem connection cannot use specified
+   * SecurityManager or PostProcessor.
+   */
+  private void validateUsabilityOfSecurityCallbacks(DistributedSystem ds)
+      throws GemFireSecurityException {
+    if (ds == null) {
+      return;
+    }
+    // pre-existing DistributedSystem already has an incompatible SecurityService in use
+    if (this.cacheConfig.getSecurityManager() != null) {
+      // invalid configuration
+      throw new GemFireSecurityException(
+          "Existing DistributedSystem connection cannot use specified SecurityManager");
+    }
+    if (this.cacheConfig.getPostProcessor() != null) {
+      // invalid configuration
+      throw new GemFireSecurityException(
+          "Existing DistributedSystem connection cannot use specified PostProcessor");
-   * sets the securityManager for the cache. If this securityManager is set. It will override the
+   * Sets the securityManager for the cache. If this securityManager is set, it will override the
-   * sets the postProcessor for the cache. If this postProcessor is set. It will override thie
+   * Sets the postProcessor for the cache. If this postProcessor is set, it will override the
