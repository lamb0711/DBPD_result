GEODE-8089: change redis set ops to use functions (#5058)

* scard now uses function
* sismember now uses function
* srandmember now uses a function
* spop now uses a function
* sscan now uses a function
+import static org.apache.geode.redis.internal.RedisCommandType.SCARD;
+import static org.apache.geode.redis.internal.RedisCommandType.SISMEMBER;
+import static org.apache.geode.redis.internal.RedisCommandType.SPOP;
+import static org.apache.geode.redis.internal.RedisCommandType.SRANDMEMBER;
+import static org.apache.geode.redis.internal.RedisCommandType.SSCAN;
+import java.util.Collection;
+import java.util.regex.Pattern;
-  public Set<ByteArrayWrapper> members(ByteArrayWrapper key) {
+  public Set<ByteArrayWrapper> smembers(ByteArrayWrapper key) {
+  @Override
+  public int scard(ByteArrayWrapper key) {
+    ResultCollector<Object[], List<Integer>> results = executeFunction(SCARD, key, null);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public boolean sismember(ByteArrayWrapper key, ByteArrayWrapper member) {
+    ResultCollector<Object[], List<Boolean>> results = executeFunction(SISMEMBER, key, member);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public Collection<ByteArrayWrapper> srandmember(ByteArrayWrapper key, int count) {
+    ResultCollector<Object[], List<Collection<ByteArrayWrapper>>> results =
+        executeFunction(SRANDMEMBER, key, count);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public Collection<ByteArrayWrapper> spop(ByteArrayWrapper key, int popCount) {
+    ResultCollector<Object[], List<Collection<ByteArrayWrapper>>> results =
+        executeFunction(SPOP, key, popCount);
+    return results.getResult().get(0);
+  }
+
+  @Override
+  public List<Object> sscan(ByteArrayWrapper key, Pattern matchPattern, int count, int cursor) {
+    ResultCollector<Object[], List<List<Object>>> results =
+        executeFunction(SSCAN, key, new Object[] {matchPattern, count, cursor});
+    return results.getResult().get(0);
+  }
+
-      ArrayList<ByteArrayWrapper> commandArguments) {
+      Object commandArguments) {
