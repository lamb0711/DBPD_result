GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-    logger.info(LocalizedMessage.create(LocalizedStrings.InternalLocator_STARTING_0, this));
+    logger.info("Starting {}", this);
-          LocalizedStrings.InternalLocator_PEER_LOCATION_IS_ALREADY_RUNNING_FOR_0
-              .toLocalizedString(this));
+          String.format("Peer location is already running for %s",
+              this));
-    logger.info(LocalizedMessage
-        .create(LocalizedStrings.InternalLocator_STARTING_PEER_LOCATION_FOR_0, this));
+    logger.info("Starting peer location for {}", this);
-      logger.info(LocalizedMessage
-          .create(LocalizedStrings.InternalLocator_USING_EXISTING_DISTRIBUTED_SYSTEM__0, existing));
+      logger.info("Using existing distributed system: {}", existing);
-      logger.info(
-          LocalizedMessage.create(LocalizedStrings.InternalLocator_STARTING_DISTRIBUTED_SYSTEM));
+      logger.info("Starting distributed system");
-      logger.info(LocalizedMessage.create(LocalizedStrings.InternalLocator_LOCATOR_STARTED_ON__0,
-          thisLocator));
+      logger.info("Locator started on {}",
+          thisLocator);
-          LocalizedStrings.InternalLocator_SERVER_LOCATION_IS_ALREADY_RUNNING_FOR_0
-              .toLocalizedString(this));
+          String.format("Server location is already running for %s",
+              this));
-    logger.info(LocalizedMessage
-        .create(LocalizedStrings.InternalLocator_STARTING_SERVER_LOCATION_FOR_0, this));
+    logger.info("Starting server location for {}", this);
-            LocalizedStrings.InternalLocator_SINCE_SERVER_LOCATION_IS_ENABLED_THE_DISTRIBUTED_SYSTEM_MUST_BE_CONNECTED
-                .toLocalizedString());
+            "Since server location is enabled the distributed system must be connected.");
-      logger.info(LocalizedMessage.create(LocalizedStrings.InternalLocator_STOPPING__0, this));
+      logger.info("Stopping {}", this);
-        logger.warn(LocalizedMessage
-            .create(LocalizedStrings.InternalLocator_INTERRUPTED_WHILE_STOPPING__0, this), ex);
+        logger.warn("Interrupted while stopping " + this, ex);
-        logger.fatal(LocalizedMessage
-            .create(LocalizedStrings.InternalLocator_COULD_NOT_STOP__0__IN_60_SECONDS, this));
+        logger.fatal("Could not stop {} in 60 seconds", this);
-    logger.info(LocalizedMessage.create(LocalizedStrings.InternalLocator_0__IS_STOPPED, this));
+    logger.info("{} is stopped", this);
-        logger.info(LocalizedMessage
-            .create(LocalizedStrings.InternalLocator_DISCONNECTING_DISTRIBUTED_SYSTEM_FOR_0, this));
+        logger.info("Disconnecting distributed system for {}", this);
