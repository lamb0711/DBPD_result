Merge branch 'release/1.8.0'

-import org.apache.geode.internal.i18n.LocalizedStrings;
-      throw new SystemIsRunningException(LocalizedStrings.ManagerInfo_0_1_IS_ALREADY_RUNNING
-          .toLocalizedString(new Object[] {"Locator", directory.getPath()}));
+      throw new SystemIsRunningException(String.format("%s %s is already running.",
+          new Object[] {"Locator", directory.getPath()}));
-          LocalizedStrings.ManagerInfo_COULD_NOT_WRITE_FILE_0.toLocalizedString(infoFile), io);
+          String.format("Could not write file %s.", infoFile), io);
-      new String[] {LocalizedStrings.ManagerInfo_STOPPED.toLocalizedString(),
-          LocalizedStrings.ManagerInfo_STOPPING.toLocalizedString(),
-          LocalizedStrings.ManagerInfo_KILLED.toLocalizedString(),
-          LocalizedStrings.ManagerInfo_STARTING.toLocalizedString(),
-          LocalizedStrings.ManagerInfo_RUNNING.toLocalizedString()};
+      new String[] {"stopped",
+          "stopping",
+          "killed",
+          "starting",
+          "running"};
-        LocalizedStrings.ManagerInfo_UNKNOWN_STATUSNAME_0.toLocalizedString(statusName));
+        String.format("Unknown statusName %s", statusName));
-          LocalizedStrings.ManagerInfo__0_DOES_NOT_EXIST_OR_IS_NOT_A_DIRECTORY
-              .toLocalizedString(directory.getPath()));
+          String.format("%s does not exist or is not a directory.",
+              directory.getPath()));
-      throw new UnstartedSystemException(LocalizedStrings.ManagerInfo_THE_INFO_FILE_0_DOES_NOT_EXIST
-          .toLocalizedString(infoFile.getPath()));
+      throw new UnstartedSystemException(String.format("The info file %s does not exist.",
+          infoFile.getPath()));
-            LocalizedStrings.ManagerInfo_COULD_NOT_LOAD_FILE_0_BECAUSE_THE_FILE_IS_EMPTY_WAIT_FOR_THE_1_TO_FINISH_STARTING
-                .toLocalizedString(new Object[] {infoFile, (locator ? "locator" : "system")}),
+            String.format(
+                "Could not load file %s because the file is empty. Wait for the %s to finish starting.",
+                new Object[] {infoFile, (locator ? "locator" : "system")}),
-          LocalizedStrings.ManagerInfo_COULD_NOT_LOAD_FILE_0.toLocalizedString(infoFile), io);
+          String.format("Could not load file %s.", infoFile), io);
-          LocalizedStrings.ManagerInfo_COULD_NOT_LOAD_FILE_0_BECAUSE_A_CLASS_COULD_NOT_BE_FOUND
-              .toLocalizedString(infoFile),
+          String.format("Could not load file %s because a class could not be found.",
+              infoFile),
-          LocalizedStrings.ManagerInfo_ONLY_LOCATORS_ARE_SUPPORTED.toLocalizedString());
+          "Only locators are supported");
