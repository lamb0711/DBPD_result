Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)

This reverts commit 2f6bf013368df5a4b5efe68162a4953f9a88bbf2.
-import java.util.Map;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.cache.Region;
+import org.apache.geode.redis.internal.RedisDataType;
-/**
- * <pre>
- * Implements the HLEN command to return the count of fields in the hash stored with a given key.
- *
- * Examples:
- *
- * redis> HSET myhash field1 "Hello"
- * (integer) 1
- * redis> HSET myhash field2 "World"
- * (integer) 1
- * redis> HLEN myhash
- * </pre>
- */
-    final int size;
+    checkDataType(key, RedisDataType.REDIS_HASH, context);
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Map<ByteArrayWrapper, ByteArrayWrapper> map = getMap(context, key);
+    Region<ByteArrayWrapper, ByteArrayWrapper> keyRegion = getRegion(context, key);
-      if (map == null) {
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
-        return;
-      }
-
-      size = map.size();
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
+    if (keyRegion == null) {
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
-    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), size));
+    final int regionSize = keyRegion.size();
+
+    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), regionSize));
