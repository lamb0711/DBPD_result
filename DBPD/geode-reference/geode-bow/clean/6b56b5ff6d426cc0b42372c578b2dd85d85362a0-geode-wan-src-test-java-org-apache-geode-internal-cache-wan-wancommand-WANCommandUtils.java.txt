GEODE-4789: fixup tests that use more than 4 VMs with ClusterStarterRule

Cleanup some of these tests:
* change to use AssertJ
* change from using Thread sleeps to Awaitility

+import static org.apache.geode.management.MXBeanAwaitility.await;
+import static org.apache.geode.management.MXBeanAwaitility.awaitGatewayReceiverMXBeanProxy;
+import static org.apache.geode.management.MXBeanAwaitility.awaitGatewaySenderMXBeanProxy;
+import static org.apache.geode.management.MXBeanAwaitility.awaitMemberMXBeanProxy;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.cache.LocalRegion;
+import org.apache.geode.management.GatewayReceiverMXBean;
+import org.apache.geode.management.GatewaySenderMXBean;
+import org.apache.geode.management.MemberMXBean;
+  public static void validateMemberMXBeanProxy(final InternalDistributedMember member) {
+    MemberMXBean memberMXBean = awaitMemberMXBeanProxy(member);
+    assertThat(memberMXBean).isNotNull();
+  }
+
+  public static void validateGatewaySenderMXBeanProxy(final InternalDistributedMember member,
+      final String senderId, final boolean isRunning, final boolean isPaused) {
+    GatewaySenderMXBean gatewaySenderMXBean = awaitGatewaySenderMXBeanProxy(member, senderId);
+    await("Awaiting GatewaySenderMXBean.isRunning(" + isRunning + ").isPaused(" + isPaused + ")")
+        .until(() -> {
+          assertThat(gatewaySenderMXBean.isRunning()).isEqualTo(isRunning);
+          assertThat(gatewaySenderMXBean.isPaused()).isEqualTo(isPaused);
+        });
+    assertThat(gatewaySenderMXBean).isNotNull();
+  }
+
+  public static void validateGatewayReceiverMXBeanProxy(final InternalDistributedMember member,
+      final boolean isRunning) {
+    GatewayReceiverMXBean gatewayReceiverMXBean = awaitGatewayReceiverMXBeanProxy(member);
+    await("Awaiting GatewayReceiverMXBean.isRunning(" + isRunning + ")").until(() -> {
+      assertThat(gatewayReceiverMXBean.isRunning()).isEqualTo(isRunning);
+    });
+    assertThat(gatewayReceiverMXBean).isNotNull();
+  }
+
+  public static InternalDistributedMember getMember(final VM vm) {
+    return vm.invoke(() -> {
+      return ClusterStartupRule.getCache().getMyId();
+    });
+  }
+
