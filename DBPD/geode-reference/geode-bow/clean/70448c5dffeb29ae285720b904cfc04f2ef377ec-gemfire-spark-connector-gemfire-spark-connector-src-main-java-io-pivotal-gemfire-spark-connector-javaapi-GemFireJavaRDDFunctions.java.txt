GEODE-120 Add batch size to RDD.saveToGemfire()

+import java.util.Properties;
+
+   * @param opConf the parameters for this operation
-  public <K, V> void saveToGemfire(String regionPath, PairFunction<T, K, V> func, GemFireConnectionConf connConf) {
-    rddf.saveToGemfire(regionPath, func, connConf);
+  public <K, V> void saveToGemfire(
+    String regionPath, PairFunction<T, K, V> func, GemFireConnectionConf connConf, Properties opConf) {
+    rddf.saveToGemfire(regionPath, func, connConf, propertiesToScalaMap(opConf));
+  }
+
+  /**
+   * Save the non-pair RDD to GemFire key-value store.
+   * @param regionPath the full path of region that the RDD is stored  
+   * @param func the PairFunction that converts elements of JavaRDD to key/value pairs
+   * @param connConf the GemFireConnectionConf object that provides connection to GemFire cluster
+   */
+  public <K, V> void saveToGemfire(
+    String regionPath, PairFunction<T, K, V> func, GemFireConnectionConf connConf) {
+    rddf.saveToGemfire(regionPath, func, connConf, emptyStrStrMap());
+  }
+
+  /**
+   * Save the non-pair RDD to GemFire key-value store.
+   * @param regionPath the full path of region that the RDD is stored
+   * @param func the PairFunction that converts elements of JavaRDD to key/value pairs
+   * @param opConf the parameters for this operation
+   */
+  public <K, V> void saveToGemfire(
+    String regionPath, PairFunction<T, K, V> func, Properties opConf) {
+    rddf.saveToGemfire(regionPath, func, rddf.defaultConnectionConf(), propertiesToScalaMap(opConf));
-    rddf.saveToGemfire(regionPath, func, rddf.defaultConnectionConf());
+    rddf.saveToGemfire(regionPath, func, rddf.defaultConnectionConf(), emptyStrStrMap());
-   * @tparam K the key type of the GemFire region
-   * @tparam V the value type of the GemFire region
+   * @param <K> the key type of the GemFire region
+   * @param <V> the value type of the GemFire region
-   * @tparam K the key type of the GemFire region
-   * @tparam V the value type of the GemFire region
+   * @param <K> the key type of the GemFire region
+   * @param <V> the value type of the GemFire region
-   * @tparam K the key type of the GemFire region
-   * @tparam V the value type of the GemFire region
+   * @param <K> the key type of the GemFire region
+   * @param <V> the value type of the GemFire region
-   * @tparam K the key type of the GemFire region
-   * @tparam V the value type of the GemFire region
+   * @param <K> the key type of the GemFire region
+   * @param <V> the value type of the GemFire region
