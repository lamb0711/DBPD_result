GEODE-8333: Fix PUBSUB hang (#5349)

PUBSUB hangs with concurrent publishers and subscribers on multiple
servers. Changed Publish executor to execute publish on background
thread. Removed separate separate subscriber group.  Added DUnit test to
recreate failure.
A commandQueue is now used to preserve the order
in which commands are executed even if a command
if executed async. Currently the only async command
is PUBLISH.

Co-authored-by: Murtuza Boxwala <mboxwala@pivotal.io>
Co-authored-by: Sarah Abbey <sabbey@vmware.com>
-import io.netty.buffer.ByteBuf;
+import org.apache.geode.redis.internal.executor.RedisResponse;
-import org.apache.geode.redis.internal.netty.Coder;
-import org.apache.geode.redis.internal.netty.CoderException;
-    ByteBuf messageByteBuffer = constructResponse(channel, message);
-    writeToChannel(messageByteBuffer, publishResultCollector);
+    writeToChannel(constructResponse(channel, message), publishResultCollector);
-  private ByteBuf constructResponse(byte[] channel, byte[] message) {
-    ByteBuf messageByteBuffer;
-    try {
-      messageByteBuffer = Coder.getArrayResponse(context.getByteBufAllocator(),
-          createResponse(channel, message));
-    } catch (CoderException e) {
-      logger.warn("Unable to encode publish message", e);
-      return null;
-    }
-    return messageByteBuffer;
+  private RedisResponse constructResponse(byte[] channel, byte[] message) {
+    return RedisResponse.array(createResponse(channel, message));
-  private void writeToChannel(ByteBuf messageByteBuffer, PublishResultCollector resultCollector) {
-    context.writeToChannel(messageByteBuffer)
+  private void writeToChannel(RedisResponse response, PublishResultCollector resultCollector) {
+    context.writeToChannel(response)
