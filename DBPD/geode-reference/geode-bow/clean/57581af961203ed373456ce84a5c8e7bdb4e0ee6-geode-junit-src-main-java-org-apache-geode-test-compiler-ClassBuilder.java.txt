Geode 3530 launcher lifecycle server commands (#2267)


* GEODE-3530: Modernize LauncherLifecycleCommandsDUnit

* Extract server start and locator start/stop/status commands into their own
classes
* Remove the CliCommandTestBase
* make locator names match test method names
* add a method for writing classes to a jar file
* add a function to use up all the server's memory for testing
* add max heap property for out of memory test

Make the behavior of the server out of memory test more reliable by
adding a maxheap size (otherwise the size is decided by the JVM)

Signed-off-by: Ken Howe<khowe@pivotal.io>

+import java.io.InputStream;
+import org.apache.commons.io.IOUtils;
+
+
+    byte[] bytes = compileClass(className, content);
+
+    createJar(className, outStream, bytes);
+    return;
+  }
+
+  private void createJar(String className, OutputStream outStream, byte[] bytes)
+      throws IOException {
-    jarOutputStream.write(compileClass(className, content));
+    jarOutputStream.write(bytes);
+  public void writeJarFromClass(Class clazz, File jar) throws IOException {
+    String className = clazz.getName();
+    String classAsPath = className.replace('.', '/') + ".class";
+    InputStream stream = clazz.getClassLoader().getResourceAsStream(classAsPath);
+    byte[] bytes = IOUtils.toByteArray(stream);
+    try (FileOutputStream out = new FileOutputStream(jar)) {
+      createJar(classAsPath, out, bytes);
+    }
+
+  }
+
