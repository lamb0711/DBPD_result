GEODE-5000: do not request/apply cluster config when creating client â€¦ (#1739)

* do not request/apply cluster config when creating client cache.
* give client cache a no-op security service to avoid NPE.

-      this.configurationResponse = requestSharedConfiguration();
+      if (!isClient) {
+        this.configurationResponse = requestSharedConfiguration();
-      // apply the cluster's properties configuration and initialize security using that
-      // configuration
-      ccLoader.applyClusterPropertiesConfiguration(this.configurationResponse,
-          this.system.getConfig());
+        // apply the cluster's properties configuration and initialize security using that
+        // configuration
+        ccLoader.applyClusterPropertiesConfiguration(this.configurationResponse,
+            this.system.getConfig());
-      this.securityService =
-          SecurityServiceFactory.create(this.system.getConfig().getSecurityProps(), cacheConfig);
-      this.system.setSecurityService(this.securityService);
+        this.securityService =
+            SecurityServiceFactory.create(this.system.getConfig().getSecurityProps(), cacheConfig);
+        this.system.setSecurityService(this.securityService);
+      } else {
+        // create a no-op security service for client
+        this.securityService = SecurityServiceFactory.create();
+      }
-  private ConfigurationResponse requestSharedConfiguration() {
+  ConfigurationResponse requestSharedConfiguration() {
-      if (this.configurationResponse == null) {
-        // Deploy all the jars from the deploy working dir.
-        ClassPathLoader.getLatest().getJarDeployer().loadPreviouslyDeployedJarsFromDisk();
+      if (!isClient) {
+        applyJarAndXmlFromClusterConfig();
-      ccLoader.applyClusterXmlConfiguration(this, this.configurationResponse,
-          this.system.getConfig().getGroups());
+  void applyJarAndXmlFromClusterConfig() {
+    if (this.configurationResponse == null) {
+      // Deploy all the jars from the deploy working dir.
+      ClassPathLoader.getLatest().getJarDeployer().loadPreviouslyDeployedJarsFromDisk();
+    }
+    ccLoader.applyClusterXmlConfiguration(this, this.configurationResponse,
+        this.system.getConfig().getGroups());
+  }
+
-    this.securityService.close();
+    securityService.close();
