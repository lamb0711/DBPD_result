Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * <P>This class provides the interface for statistics about a
- * Linux operating system process that is using a GemFire system.
+ * <P>
+ * This class provides the interface for statistics about a Linux operating system process that is
+ * using a GemFire system.
-public class LinuxProcessStats
-{
+public class LinuxProcessStats {
-    Assert.assertTrue(offset == id, "Expected the offset for " + name + " to be " + offset + " but it was " + id);
+    Assert.assertTrue(offset == id,
+        "Expected the offset for " + name + " to be " + offset + " but it was " + id);
-  
+
-    myType = f.createType("LinuxProcessStats",
-                          "Statistics on a Linux process.",
-                          new StatisticDescriptor[] {
-                            f.createIntGauge("imageSize",
-                                             "The size of the process's image in megabytes.",
-                                             "megabytes"),
-                            f.createIntGauge("rssSize",
-                                             "The size of the process's resident set size in megabytes. (assumes PAGESIZE=4096, specify -Dgemfire.statistics.linux.pageSize=<pagesize> to adjust)",
-                                             "megabytes"),
-                          });
+    myType = f.createType("LinuxProcessStats", "Statistics on a Linux process.",
+        new StatisticDescriptor[] {
+            f.createIntGauge("imageSize", "The size of the process's image in megabytes.",
+                "megabytes"),
+            f.createIntGauge("rssSize",
+                "The size of the process's resident set size in megabytes. (assumes PAGESIZE=4096, specify -Dgemfire.statistics.linux.pageSize=<pagesize> to adjust)",
+                "megabytes"),});
+
-   * Returns a <code>ProcessStats</code> that wraps Linux process
-   * <code>Statistics</code>. 
+   * Returns a <code>ProcessStats</code> that wraps Linux process <code>Statistics</code>.
-  public static ProcessStats createProcessStats(final Statistics stats) { // TODO: was package-protected
+  public static ProcessStats createProcessStats(final Statistics stats) { // TODO: was
+                                                                          // package-protected
-        public long getProcessSize() {
-          return stats.getInt(rssSizeINT);
-        }
-      };
+      public long getProcessSize() {
+        return stats.getInt(rssSizeINT);
+      }
+    };
