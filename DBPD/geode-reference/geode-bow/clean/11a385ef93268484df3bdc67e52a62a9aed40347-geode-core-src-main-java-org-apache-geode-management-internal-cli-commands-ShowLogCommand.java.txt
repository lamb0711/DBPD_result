GEODE-3940: fix deadlock in backup messages

When backup sends FlushToDisk, PrepareBackup, and FinishBackup,
it will no longer wait for all other members to respond before
doing the same work on its own member.
In addition to preventing a distributed deadlock, this will
also improve how long it takes for a backup to complete.
As part of this work the backup classes and tests have been
moved into their own backup package.

-import org.apache.geode.management.internal.cli.CliUtil;
-    try {
-      InternalCache cache = getCache();
-      DistributedMember targetMember = CliUtil.getDistributedMemberByNameOrId(memberNameOrId);
-      if (targetMember == null) {
-        ErrorResultData errorResultData =
-            ResultBuilder.createErrorResultData().setErrorCode(ResultBuilder.ERRORCODE_DEFAULT)
-                .addLine(memberNameOrId + " " + CliStrings.SHOW_LOG_MSG_MEMBER_NOT_FOUND);
-        return (ResultBuilder.buildResult(errorResultData));
-      }
+    InternalCache cache = getCache();
+    DistributedMember targetMember = getMember(memberNameOrId);
+    MemberMXBean targetMemberMXBean = getMemberMxBean(cache, targetMember);
-      MemberMXBean targetMemberMXBean = getMemberMxBean(cache, targetMember);
-
-      if (numberOfLines > ManagementConstants.MAX_SHOW_LOG_LINES) {
-        numberOfLines = ManagementConstants.MAX_SHOW_LOG_LINES;
-      }
-      if (numberOfLines == 0 || numberOfLines < 0) {
-        numberOfLines = ManagementConstants.DEFAULT_SHOW_LOG_LINES;
-      }
-      InfoResultData resultData = ResultBuilder.createInfoResultData();
-      if (targetMemberMXBean != null) {
-        String log = targetMemberMXBean.showLog(numberOfLines);
-        if (log != null) {
-          resultData.addLine(log);
-        } else {
-          resultData.addLine(CliStrings.SHOW_LOG_NO_LOG);
-        }
-      } else {
-        ErrorResultData errorResultData =
-            ResultBuilder.createErrorResultData().setErrorCode(ResultBuilder.ERRORCODE_DEFAULT)
-                .addLine(memberNameOrId + CliStrings.SHOW_LOG_MSG_MEMBER_NOT_FOUND);
-        return (ResultBuilder.buildResult(errorResultData));
-      }
-
-      result = ResultBuilder.buildResult(resultData);
-
-    } catch (Exception e) {
-      result = ResultBuilder
-          .createGemFireErrorResult(CliStrings.SHOW_LOG_ERROR + CliUtil.stackTraceAsString(e));
+    if (numberOfLines > ManagementConstants.MAX_SHOW_LOG_LINES) {
+      numberOfLines = ManagementConstants.MAX_SHOW_LOG_LINES;
-    return result;
+    if (numberOfLines == 0 || numberOfLines < 0) {
+      numberOfLines = ManagementConstants.DEFAULT_SHOW_LOG_LINES;
+    }
+    InfoResultData resultData = ResultBuilder.createInfoResultData();
+    if (targetMemberMXBean != null) {
+      String log = targetMemberMXBean.showLog(numberOfLines);
+      if (log != null) {
+        resultData.addLine(log);
+      } else {
+        resultData.addLine(CliStrings.SHOW_LOG_NO_LOG);
+      }
+    } else {
+      ErrorResultData errorResultData =
+          ResultBuilder.createErrorResultData().setErrorCode(ResultBuilder.ERRORCODE_DEFAULT)
+              .addLine(memberNameOrId + CliStrings.SHOW_LOG_MSG_MEMBER_NOT_FOUND);
+      return (ResultBuilder.buildResult(errorResultData));
+    }
+
+    return ResultBuilder.buildResult(resultData);
