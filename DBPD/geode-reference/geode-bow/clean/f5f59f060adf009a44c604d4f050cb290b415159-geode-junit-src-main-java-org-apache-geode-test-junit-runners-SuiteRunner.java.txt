GEODE-3638: cleanup minor issues found while prepping dunit talk

* fix some dunit rules
* add some dunit rule tests
* add dunit examples

-
-package org.apache.geode.test.junit.runner;
+package org.apache.geode.test.junit.runners;
- * SuiteRunner is like Junit Suite, it's used in conjunction with
- * <code>SuiteClass({xx.class, yy.class})</code> It's different from Suite in two ways: 1. it should
- * only contain contain Junit4 test classes 2. the test method names inside each test class are
- * appended with the suiteClass name so that the result will show up different as when you run these
- * tests alone.
+ * SuiteRunner is like Junit Suite, it's used in conjunction with {@code SuiteClass({xx.class,
+ * yy.class})} It's different from Suite in two ways:
+ * <p>
+ *
+ * 1. it should only contain contain Junit4 test classes<br>
+ * 2. the test method names inside each test class are appended with the suiteClass name so that the
+ * result will show up different as when you run these tests alone.
-  public SuiteRunner(final Class<?> klass, final RunnerBuilder builder) throws InitializationError {
-    super(klass, getRunners(klass));
+  public SuiteRunner(final Class<?> testClass, final RunnerBuilder builder)
+      throws InitializationError {
+    super(testClass, getRunners(testClass));
-  private static List<Runner> getRunners(final Class<?> klass) throws InitializationError {
-    SuiteClasses annotation = klass.getAnnotation(SuiteClasses.class);
+  private static List<Runner> getRunners(final Class<?> testClass) throws InitializationError {
+    SuiteClasses annotation = testClass.getAnnotation(SuiteClasses.class);
-          String.format("class '%s' must have a SuiteClasses annotation", klass.getName()));
+          String.format("class '%s' must have a SuiteClasses annotation", testClass.getName()));
-      runners.add(new SuiteBlockRunner(klass, childClass));
+      runners.add(new SuiteBlockRunner(testClass, childClass));
