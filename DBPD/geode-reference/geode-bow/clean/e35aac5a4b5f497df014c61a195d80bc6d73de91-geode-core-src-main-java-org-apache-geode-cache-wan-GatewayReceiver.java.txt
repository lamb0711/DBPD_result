Merge branch 'release/1.5.0'

+import org.apache.geode.internal.cache.wan.GatewayReceiverException;
- * A GatewayReceiver that receives the events from a <code>GatewaySender</code>. GatewayReceiver is
+ * A GatewayReceiver that receives the events from a {@code GatewaySender}. GatewayReceiver is
- * <code>GatewaySender<code> connected to this distributed-system.
+ * {@code GatewaySender} connected to this distributed-system.
-  public static final String RECEIVER_GROUP = "__recv__group";
+  String RECEIVER_GROUP = "__recv__group";
-   * <code>ClientHealthMonitor</code> to determine the health of this <code>GatewayReceiver</code>'s
+   * {@code ClientHealthMonitor} to determine the health of this {@code GatewayReceiver}'s
-  public static final int DEFAULT_MAXIMUM_TIME_BETWEEN_PINGS = 60000;
+  int DEFAULT_MAXIMUM_TIME_BETWEEN_PINGS = 60000;
-   * Default start value of the port range from which the <code>GatewayReceiver</code>'s port will
+   * Default start value of the port range from which the {@code GatewayReceiver}'s port will
-  public static final int DEFAULT_START_PORT = 5000;
+  int DEFAULT_START_PORT = 5000;
-   * Default end value of the port range from which the <code>GatewayReceiver</code>'s port will be
+   * Default end value of the port range from which the {@code GatewayReceiver}'s port will be
-  public static final int DEFAULT_END_PORT = 5500;
+  int DEFAULT_END_PORT = 5500;
-   * The default buffer size for socket buffers for the <code>GatewayReceiver</code>.
+   * The default buffer size for socket buffers for the {@code GatewayReceiver}.
-  public static final int DEFAULT_SOCKET_BUFFER_SIZE = 524288;
+  int DEFAULT_SOCKET_BUFFER_SIZE = 524288;
-  public static final String DEFAULT_BIND_ADDRESS = "";
+  String DEFAULT_BIND_ADDRESS = "";
-  public static final String DEFAULT_HOSTNAME_FOR_SENDERS = "";
+  String DEFAULT_HOSTNAME_FOR_SENDERS = "";
-   * The default value for manually starting a <code>GatewayReceiver</code>.
+   * The default value for manually starting a {@code GatewayReceiver}.
-  public static final boolean DEFAULT_MANUAL_START = false;
+  boolean DEFAULT_MANUAL_START = false;
-  public static final boolean APPLY_RETRIES =
+  boolean APPLY_RETRIES =
-  public void start() throws IOException;
+  void start() throws IOException;
-   * Stops this receiver. Note that the <code>GatewayReceiver</code> can be reconfigured and
+   * Stops this receiver. Note that the {@code GatewayReceiver} can be reconfigured and
-  public void stop();
+  void stop();
+
+  /**
+   * Destroys this {@code GatewayReceiver}and removes the {@code GatewayReceiverMBean}
+   * associated with this {@code GatewayReceiver}. This method does not remove
+   * the {@code GatewayReceiver} from cluster configuration.
+   * The {@link #stop() stop} method should be called before calling {@link #destroy() destroy}
+   *
+   *
+   * @throws GatewayReceiverException if {@code GatewayReceiver} has not been stopped before
+   *         calling destroy
+   */
+  void destroy();
-  public boolean isRunning();
+  boolean isRunning();
-   * Returns the list of <code>GatewayTransportFilter</code> added to this GatewayReceiver.
+   * Returns the list of {@code GatewayTransportFilter} added to this GatewayReceiver.
-   * @return the list of <code>GatewayTransportFilter</code> added to this GatewayReceiver.
+   * @return the list of {@code GatewayTransportFilter} added to this GatewayReceiver.
-  public List<GatewayTransportFilter> getGatewayTransportFilters();
+  List<GatewayTransportFilter> getGatewayTransportFilters();
-   * <code>ClientHealthMonitor</code> to determine the health of this <code>GatewayReceiver</code>'s
+   * {@code ClientHealthMonitor} to determine the health of this {@code GatewayReceiver}'s
-  public int getMaximumTimeBetweenPings();
+  int getMaximumTimeBetweenPings();
-   * Returns the port on which this <code>GatewayReceiver</code> listens for clients.
+   * Returns the port on which this {@code GatewayReceiver} listens for clients.
-  public int getPort();
+  int getPort();
-   * Returns start value of the port range from which the <code>GatewayReceiver</code>'s port will
+   * Returns start value of the port range from which the {@code GatewayReceiver}'s port will
-  public int getStartPort();
+  int getStartPort();
-   * Returns end value of the port range from which the <code>GatewayReceiver</code>'s port will be
+   * Returns end value of the port range from which the {@code GatewayReceiver}'s port will be
-  public int getEndPort();
+  int getEndPort();
-   * clients (<code>GatewaySender</code>s in this case) that this receiver is listening on.
+   * clients ({@code GatewaySender}s in this case) that this receiver is listening on.
-  public String getHost();
+  String getHost();
-  public String getHostnameForSenders();
+  String getHostnameForSenders();
-   * <code>GatewayReceiver</code>. The default is 524288 bytes.
+   * {@code GatewayReceiver}. The default is 524288 bytes.
-   *         <code>GatewayReceiver</code>
+   *         {@code GatewayReceiver}
-  public int getSocketBufferSize();
+  int getSocketBufferSize();
-  public String getBindAddress();
+  String getBindAddress();
-  public boolean isManualStart();
+  boolean isManualStart();
-  public CacheServer getServer();
+  CacheServer getServer();
