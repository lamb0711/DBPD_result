Merge branch 'release/1.0.0-incubating.M3'

-import com.gemstone.gemfire.cache.CustomEvictionAttributes;
- * @since 3.0
+ * @since GemFire 3.0
-  * @since prPersistPrint2 
+  * @since GemFire prPersistPrint2
-  private String hdfsStoreName;
-  private boolean hdfsWriteOnly = false;
-   * @since 4.1 */
+   * @since GemFire 4.1 */
-   * @since 4.1 */
+   * @since GemFire 4.1 */
-   * @since 4.2.3
+   * @since GemFire 4.2.3
-   * @since 4.2
+   * @since GemFire 4.2
-   * @since 4.2.3
+   * @since GemFire 4.2.3
-   * @since 5.7
+   * @since GemFire 5.7
-   * @since 8.0
+   * @since GemFire 8.0
-   * @since 9.0
+   * @since Geode 1.0
-  // used by sqlfabric
-  // used by sqlfabric
-	this.hdfsStoreName = attrs.getHDFSStoreName();
-    
+
- 	if (! equal(this.hdfsStoreName, other.getHDFSStoreName())) {
-      //TODO:HDFS write a new exception string
-      throw new RuntimeException(" HDFS Store name does not match");
-    }
-   * @since 4.1
+   * @since GemFire 4.1
-   * @since 4.1
+   * @since GemFire 4.1
-   * @since 4.1
+   * @since GemFire 4.1
-   * @since 4.1
+   * @since GemFire 4.1
-   * @since 4.1
+   * @since GemFire 4.1
-    if (!hasHDFSStoreName()) {
-      if (parentIsUserSpecified) {
-        if (parentWithHas.hasHDFSStoreName()) {
-          setHDFSStoreName(parent.getHDFSStoreName());
-        }
-      } else {
-        setHDFSStoreName(parent.getHDFSStoreName());
-      }
-    }
-    if (!hasHDFSWriteOnly()) {
-      if (parentIsUserSpecified) {
-        if (parentWithHas.hasHDFSWriteOnly()) {
-          setHDFSWriteOnly(parent.getHDFSWriteOnly());
-        }
-      } else {
-        setHDFSWriteOnly(parent.getHDFSWriteOnly());
-      }
-    }
-    
+
-  /** @since 5.0 */
+  /** @since GemFire 5.0 */
-  /** @since 5.0 */
+  /** @since GemFire 5.0 */
-  /**
-   * {@inheritDoc}
-   */
-  @Override
-  public CustomEvictionAttributes getCustomEvictionAttributes() {
-    // TODO: HDFS: no support for configuring this from XML yet
-    return null;
-  }
-
-  public String getHDFSStoreName() {
-    return this.hdfsStoreName;
-  }
-  public void setHDFSStoreName(String hdfsStoreName) {
-    //TODO:HDFS : throw an exception if a disk store is already configured
-    // and vice versa
-    this.hdfsStoreName = hdfsStoreName;
-    setHasHDFSStoreName(true);
-  }
-  public void setHDFSWriteOnly(boolean writeOnly) {
-    this.hdfsWriteOnly= writeOnly;
-    setHasHDFSWriteOnly(true);
-  }
-  public boolean getHDFSWriteOnly() {
-    return hdfsWriteOnly;
-  }
