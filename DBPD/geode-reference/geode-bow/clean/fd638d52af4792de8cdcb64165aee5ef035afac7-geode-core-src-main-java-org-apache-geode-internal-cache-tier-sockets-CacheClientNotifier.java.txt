Revert "GEODE-2632: use immutable SecurityService impls to improve performance"

This reverts commit 5eca6f0393c1a05804a4c4b7f97203ee2ec226a2.

+import java.io.DataInput;
+import java.io.DataOutput;
+import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.distributed.internal.HighPriorityDistributionMessage;
+import org.apache.geode.distributed.internal.MessageWithReply;
+import org.apache.geode.distributed.internal.ReplyMessage;
+import org.apache.geode.distributed.internal.ReplyProcessor21;
-      Properties credentials =
-          HandShake.readCredentials(dis, dos, system, this.cache.getSecurityService());
+      Properties credentials = HandShake.readCredentials(dis, dos, system);
-        Object subject =
-            HandShake.verifyCredentials(authenticator, credentials, system.getSecurityProperties(),
-                this.logWriter, this.securityLogWriter, member, this.cache.getSecurityService());
+        Object subject = HandShake.verifyCredentials(authenticator, credentials,
+            system.getSecurityProperties(), this.logWriter, this.securityLogWriter, member);
-            clientVersion, acceptorId, notifyBySubscription, this.cache.getSecurityService());
+            clientVersion, acceptorId, notifyBySubscription);
-            clientVersion, acceptorId, notifyBySubscription, this.cache.getSecurityService());
+            clientVersion, acceptorId, notifyBySubscription);
-    this.cache.getCancelCriterion().checkCancelInProgress(null); // bug #43942 - client notified
-                                                                 // but no p2p distribution
+    this._cache.getCancelCriterion().checkCancelInProgress(null); // bug #43942 - client notified
+                                                                  // but no p2p distribution
-    if (this.cache != null && this.cache.isClosed()) {
+    if (this._cache != null && this._cache.isClosed()) {
-        this.cache = cache;
+        this._cache = cache;
-    return this.cache;
+    return this._cache;
-        cache.getCCPTimer().scheduleAtFixedRate(task, period, period);
+        _cache.getCCPTimer().scheduleAtFixedRate(task, period, period);
-    CacheClientNotifier.this.cache.getCCPTimer().scheduleAtFixedRate(this.clientPingTask,
+    CacheClientNotifier.this._cache.getCCPTimer().scheduleAtFixedRate(this.clientPingTask,
-   * not use a direct reference to cache in CacheClientNotifier code. Instead, you should always use
-   * <code>getCache()</code>
+   * not use a direct reference to _cache in CacheClientNotifier code. Instead, you should always
+   * use <code>getCache()</code>
-  private InternalCache cache;
+  private InternalCache _cache;
-      haContainer = new HAContainerRegion(cache.getRegion(Region.SEPARATOR
-          + CacheServerImpl.clientMessagesRegion(cache, (String) overflowAttributesList.get(0),
+      haContainer = new HAContainerRegion(_cache.getRegion(Region.SEPARATOR
+          + CacheServerImpl.clientMessagesRegion(_cache, (String) overflowAttributesList.get(0),
-   * @param _cache the cache to set
+   * @param _cache the _cache to set
-    this.cache = _cache;
+    this._cache = _cache;
