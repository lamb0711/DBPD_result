GEODE-5861: change jdbc connector to use jndi binding (#2650)

The jdbc connector now uses the existing "jndi-binding" xml/gfsh instead of adding "jdbc-connection" xml/gfsh. All the old "jdbc-connection" commands have been removed.

The create jndi-binding command has been changed in the following ways:
* the driver-class-name gfsh parameter is now optional.
* --url can be used as a replacement for --connnection-url
* the --type now defaults to SIMPLE (it used to not have a default).
* the --type=POOLED now defaults to creating a Hikari pool and an SPI exists to customize the class 
that implements the pool.

New External APIS:
  DataSourceFactoryTest: this is the SPI users can implement for the POOLED type.

Co-authored-by: @BenjaminPerryRoss 
-import org.apache.geode.internal.datasource.AbstractDataSource;
-   * List of DataSource bound to the context, used for cleaning gracefully closing datasource and
-   * associated threads.
+   * Maps data source name to the data source instance itself.
-    if (dataSource instanceof AbstractDataSource) {
-      ((AbstractDataSource) dataSource).clearUp();
-    } else if (dataSource instanceof ClientConnectionFactoryWrapper) {
-      ((ClientConnectionFactoryWrapper) dataSource).clearUp();
+    if (dataSource instanceof AutoCloseable) {
+      try {
+        ((AutoCloseable) dataSource).close();
+      } catch (Exception e) {
+        if (logger.isDebugEnabled()) {
+          logger.debug("Exception closing DataSource", e);
+        }
+      }
+  public static DataSource getDataSource(String name) {
+    Object result = dataSourceMap.get(name);
+    if (result instanceof DataSource) {
+      return (DataSource) result;
+    } else {
+      return null;
+    }
+  }
+
