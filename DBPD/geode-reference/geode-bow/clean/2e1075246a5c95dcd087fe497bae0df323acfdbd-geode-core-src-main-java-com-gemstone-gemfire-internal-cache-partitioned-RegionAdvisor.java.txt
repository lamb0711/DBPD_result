Merge branch 'release/1.0.0-incubating.M3'

-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.util.AbstractSet;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.NoSuchElementException;
-import java.util.Queue;
-import java.util.Set;
-import java.util.TreeSet;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ConcurrentLinkedQueue;
-import java.util.concurrent.Semaphore;
-import java.util.concurrent.atomic.AtomicLong;
-
-import org.apache.logging.log4j.Logger;
-
+import com.gemstone.gemfire.distributed.internal.DistributionConfig;
-import com.gemstone.gemfire.internal.cache.BucketAdvisor;
+import com.gemstone.gemfire.internal.cache.*;
-import com.gemstone.gemfire.internal.cache.BucketPersistenceAdvisor;
-import com.gemstone.gemfire.internal.cache.BucketRegion;
-import com.gemstone.gemfire.internal.cache.BucketServerLocation66;
-import com.gemstone.gemfire.internal.cache.CacheDistributionAdvisor;
-import com.gemstone.gemfire.internal.cache.EntryEventImpl;
-import com.gemstone.gemfire.internal.cache.FixedPartitionAttributesImpl;
-import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
-import com.gemstone.gemfire.internal.cache.InternalRegionArguments;
-import com.gemstone.gemfire.internal.cache.Node;
-import com.gemstone.gemfire.internal.cache.PartitionedRegion;
-import com.gemstone.gemfire.internal.cache.PartitionedRegionStats;
-import com.gemstone.gemfire.internal.cache.ProxyBucketRegion;
+import org.apache.logging.log4j.Logger;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.util.*;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentLinkedQueue;
+import java.util.concurrent.Semaphore;
+import java.util.concurrent.atomic.AtomicLong;
-      "gemfire.RegionAdvisor.volunteeringThreadCount", 1).shortValue();
+      DistributionConfig.GEMFIRE_PREFIX + "RegionAdvisor.volunteeringThreadCount", 1).shortValue();
-            getAdvisee().getCancelCriterion().cancelInProgress() == null) {
+            !getAdvisee().getCancelCriterion().isCancelInProgress()) {
-     * @since 5.1
+     * @since GemFire 5.1
-   * @since 5.1
+   * @since GemFire 5.1
-  // For SQLFabric ALTER TABLE, need to reset the parentAdvisors if colocated
-  // region changes
-  public void resetBucketAdvisorParents() {
-    if (this.buckets != null) {
-      for (ProxyBucketRegion pbr : this.buckets) {
-        if (pbr.getCreatedBucketRegion() != null) {
-          throw new InternalGemFireException(
-              LocalizedStrings.RegionAdvisor_CANNOT_RESET_EXISTING_BUCKET
-                  .toLocalizedString(new Object[] {
-                      pbr.getPartitionedRegion().getFullPath(),
-                      pbr.getBucketId() }));
-        }
-        pbr.getBucketAdvisor().resetParentAdvisor(pbr.getBucketId());
-      }
-    }
-  }
-
-   * primary can be found within {@link com.gemstone.gemfire.distributed.internal.DistributionConfig#getMemberTimeout}.
+   * primary can be found within {@link DistributionConfig#getMemberTimeout}.
-   * @since 5.5 
+   * @since GemFire 5.5
-   * @since 5.5 
+   * @since GemFire 5.5
