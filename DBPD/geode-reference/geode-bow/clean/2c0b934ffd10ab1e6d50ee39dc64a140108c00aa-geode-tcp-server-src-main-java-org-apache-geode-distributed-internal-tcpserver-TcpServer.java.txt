GEODE-7397: create new module: geode-tcp-server (#4450)


-import org.apache.geode.CancelException;
-import org.apache.geode.distributed.internal.DistributionConfig;
+  private static final String P2P_BACKLOG_PROPERTY_NAME = "p2p.backlog";
-  private final int READ_TIMEOUT =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "TcpServer.READ_TIMEOUT", 60 * 1000);
-  private static final int P2P_BACKLOG = Integer.getInteger("p2p.backlog", 1000);
-  private static final int BACKLOG =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "TcpServer.BACKLOG", P2P_BACKLOG);
+  private final int readTimeout;
+  private final int backlogLimit;
-      final ObjectDeserializer objectDeserializer) {
+      final ObjectDeserializer objectDeserializer,
+      final String readTimeoutPropertyName, final String backlogLimitPropertyName) {
+    readTimeout = Integer.getInteger(readTimeoutPropertyName, 60 * 1000);
+    final int p2pBacklog = Integer.getInteger(P2P_BACKLOG_PROPERTY_NAME, 1000);
+    backlogLimit = Integer.getInteger(backlogLimitPropertyName, p2pBacklog);
-        srv_sock = socketCreator.createServerSocket(port, BACKLOG);
+        srv_sock = socketCreator.createServerSocket(port, backlogLimit);
-        srv_sock = socketCreator.createServerSocket(port, BACKLOG, bind_address);
+        srv_sock = socketCreator.createServerSocket(port, backlogLimit, bind_address);
-        socket.setSoTimeout(READ_TIMEOUT);
-        socketCreator.handshakeIfSocketIsSSL(socket, READ_TIMEOUT);
+        socket.setSoTimeout(readTimeout);
+        socketCreator.handshakeIfSocketIsSSL(socket, readTimeout);
-      } catch (CancelException ignore) {
-        // ignore
