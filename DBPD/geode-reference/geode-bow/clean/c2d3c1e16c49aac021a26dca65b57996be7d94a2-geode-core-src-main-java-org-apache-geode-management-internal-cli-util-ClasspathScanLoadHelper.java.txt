GEODE-5535: Upgrade FastClasspathScanner to 4.0.6 (#2290)


-import java.lang.reflect.Modifier;
-import java.util.HashSet;
-import io.github.lukehutch.fastclasspathscanner.FastClasspathScanner;
-
+import io.github.classgraph.ClassGraph;
+import io.github.classgraph.ClassInfoList;
+import io.github.classgraph.ScanResult;
-    Set<Class<?>> classesImplementing = new HashSet<>();
-    new FastClasspathScanner(packagesToScan)
-        .matchClassesImplementing(implementedInterface, classesImplementing::add).scan();
+    ScanResult scanResult = new ClassGraph().whitelistPackages(packagesToScan).enableClassInfo()
+        .enableAnnotationInfo().scan();
-    return classesImplementing.stream().filter(ClasspathScanLoadHelper::isInstantiable)
-        .collect(toSet());
+    ClassInfoList classInfoList = scanResult.getClassesImplementing(implementedInterface.getName())
+        .filter(ci -> !ci.isAbstract() && !ci.isInterface() && ci.isPublic());
+
+    return classInfoList.loadClasses().stream().collect(toSet());
-    Set<Class<?>> classesWithAnnotation = new HashSet<>();
-    new FastClasspathScanner(packagesToScan)
-        .matchClassesWithAnnotation(annotation, classesWithAnnotation::add).scan();
-    return classesWithAnnotation;
+    ScanResult scanResult = new ClassGraph().whitelistPackages(packagesToScan).enableClassInfo()
+        .enableAnnotationInfo().scan();
+    ClassInfoList classInfoList = scanResult.getClassesWithAnnotation(annotation.getName());
+
+    return classInfoList.loadClasses().stream().collect(toSet());
-  private static boolean isInstantiable(Class<?> klass) {
-    int modifiers = klass.getModifiers();
-
-    return !Modifier.isAbstract(modifiers) && !Modifier.isInterface(modifiers)
-        && Modifier.isPublic(modifiers);
-  }
