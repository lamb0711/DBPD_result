GEODE-4863: refactor jdbc commands to use this public cluster configuration api (#1776)

   * refactored jdbc connector commands to use public cc service
   * removed JdbcConnectorServiceXmlGenerator
   * removed RegionMappingBuilder & ConnectionConfigBuilder
   * if cc service is running then user can only alter whats available in CC
   * describe & List commands now list entries from cc service
   * converted some integration tests to junits
   * removed unwanted functions, tests

Signed-off-by: Jinmei Liao <jiliao@pivotal.io>

-  private Throwable throwable;
+  private Object resultObject;
+  @Deprecated
+  @Deprecated
-
+  @Deprecated
-
+  @Deprecated
-
-
+  @Deprecated
-
+  @Deprecated
-
-  public CliFunctionResult(final String memberIdOrName, final Throwable throwable,
+  public CliFunctionResult(final String memberIdOrName, final Object resultObject,
-    this.throwable = throwable;
+    this.resultObject = resultObject;
+    if (resultObject instanceof Throwable) {
+      this.successful = false;
+    } else {
+      this.successful = true;
+    }
+  }
-    this.successful = false;
+  public CliFunctionResult(final String memberIdOrName, final Object resultObject) {
+    this(memberIdOrName, resultObject, null);
+  @Deprecated
-    if (message != null && (throwable == null || !throwable.getMessage().contains(message))) {
+    if (message != null
+        && (resultObject == null || !((Throwable) resultObject).getMessage().contains(message))) {
-    if (throwable != null) {
-      errorMessage = errorMessage.trim() + " " + throwable.getClass().getName() + ": "
-          + throwable.getMessage();
+    if (resultObject != null) {
+      errorMessage = errorMessage.trim() + " " + ((Throwable) resultObject).getClass().getName()
+          + ": " + ((Throwable) resultObject).getMessage();
+  @Deprecated
+  @Deprecated
-    return this.throwable;
+    if (successful) {
+      return null;
+    }
+    return ((Throwable) resultObject);
+  }
+
+  public Object getResultObject() {
+    return resultObject;
-    DataSerializer.writeObject(this.throwable, out);
+    DataSerializer.writeObject(this.resultObject, out);
-    DataSerializer.writeObject(this.throwable, out);
+    DataSerializer.writeObject(this.resultObject, out);
-    this.throwable = DataSerializer.readObject(in);
+    this.resultObject = DataSerializer.readObject(in);
-    this.throwable = DataSerializer.readObject(in);
+    this.resultObject = DataSerializer.readObject(in);
+  @Deprecated
+  @Deprecated
-        + ", throwable=" + this.throwable + ", byteData=" + Arrays.toString(this.byteData) + "]";
+        + ", throwable=" + this.resultObject + ", byteData=" + Arrays.toString(this.byteData) + "]";
