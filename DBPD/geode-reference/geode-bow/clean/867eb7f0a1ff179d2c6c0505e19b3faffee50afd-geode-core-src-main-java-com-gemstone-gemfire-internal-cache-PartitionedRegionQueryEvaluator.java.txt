Merge branch 'develop' into feature/GEODE-17-2

- * @author rreja
- * @author Eric Zoerner
- * @author Mitch Thomas
+
-   * @author shobhit
-   * @author Mitch Thomas
-        processor = new StreamingQueryPartitionResponse(this.sys, n2b.keySet());
+        processor = createStreamingQueryPartitionResponse(this.sys, n2b);
-          Set notReceivedMembers = this.sys.getDistributionManager().putOutgoing(m);
+          Set notReceivedMembers = sendMessage(m);
+  protected Set sendMessage(DistributionMessage m) {
+    return this.sys.getDistributionManager().putOutgoing(m);
+  }
+
+  protected StreamingQueryPartitionResponse createStreamingQueryPartitionResponse(InternalDistributedSystem system,HashMap<InternalDistributedMember, List<Integer>> n2b) {
+    return new StreamingQueryPartitionResponse(system, n2b.keySet());
+  }
+
-  // (package access, and returns map for unit test purposes)
+  // (package access for unit test purposes)
-    final List allNodes = new ArrayList(this.pr.getRegionAdvisor().adviseDataStore());
+    final List allNodes = getAllNodes();
-          final Set owners = pr.getRegionAdvisor().getBucketOwners(bid.intValue());
+          final Set owners = getBucketOwners(bid);
+  protected Set<InternalDistributedMember> getBucketOwners(Integer bid) {
+    return pr.getRegionAdvisor().getBucketOwners(bid.intValue());
+  }
+
+  protected ArrayList getAllNodes() {
+    return new ArrayList(this.pr.getRegionAdvisor().adviseDataStore());
+  }
+
-        PRQueryProcessor qp = new PRQueryProcessor(this.pr, query, parameters, bucketList);
+        PRQueryProcessor qp = createLocalPRQueryProcessor(bucketList);
-        // Add results to the results-list.
-        this.resultsPerMember.put(me, resultCollector);
+        // Add results to the results-list.  If prior successfully completed
+        //results exist from previous executions on different buckets, add (to) those results as well.
+        MemberResultsList otherResults = (MemberResultsList)this.resultsPerMember.put(me, resultCollector);
+        if (otherResults != null) {
+          resultCollector.addAll(otherResults);
+        } 
+  protected PRQueryProcessor createLocalPRQueryProcessor(List<Integer> bucketList) {
+    return new PRQueryProcessor(this.pr, query, parameters, bucketList);
+  }
+
-   * @author shobhit
