GEODE-4131: add the deprecated API in MemberMXBean (#1231)

* GEODE-4131: add the deprecated API back in MemberMXBean

+import org.apache.commons.lang.ArrayUtils;
-  public static byte[][] filesToBytes(String[] fileNames) throws IOException {
+  /**
+   * Even thought this is only used in a test, caller of MemberMXBean.processCommand(String, Map,
+   * Byte[][]) will need to use this method to convert a fileList to Byte[][] to call that
+   * deprecated API.
+   *
+   * Once that deprecated API is removed, we can delete this method and the tests.
+   */
+  public static Byte[][] filesToBytes(List<String> fileNames) throws IOException {
-    byte[][] filesData = new byte[filesDataList.size()][];
+    List<Byte[]> convertedList =
+        filesDataList.stream().map(ArrayUtils::toObject).collect(Collectors.toList());
-    filesData = filesDataList.toArray(filesData);
-
-    return filesData;
+    return convertedList.toArray(new Byte[convertedList.size()][]);
-  public static String[] bytesToNames(byte[][] fileData) {
-    String[] names = new String[fileData.length / 2];
-    for (int i = 0; i < fileData.length; i += 2) {
-      names[i / 2] = new String(fileData[i]);
-    }
-
-    return names;
-  }
-
-  public static byte[][] bytesToData(byte[][] fileData) {
-    byte[][] data = new byte[fileData.length / 2][];
-    for (int i = 1; i < fileData.length; i += 2) {
-      data[i / 2] = fileData[i];
-    }
-
-    return data;
-  }
-
-  public static void bytesToFiles(byte[][] fileData, String parentDirPath, boolean mkRequireddirs)
+  public static List<String> bytesToFiles(Byte[][] fileData, String parentDirPath)
+    List<String> filesPaths = new ArrayList<>();
+    File file = null;
-    if (mkRequireddirs && !parentDir.exists()) {
-      if (!parentDir.mkdirs()) {
-        throw new UnsupportedOperationException(
-            "Couldn't create required directory structure for " + parentDirPath);
-      }
+    if (!parentDir.exists() && !parentDir.mkdirs()) {
+      throw new UnsupportedOperationException(
+          "Couldn't create required directory structure for " + parentDirPath);
+      byte[] bytes = ArrayUtils.toPrimitive(fileData[i]);
-        String fileName = new String(fileData[i]);
-        fos = new FileOutputStream(new File(parentDir, fileName));
+        String fileName = new String(bytes);
+        file = new File(parentDir, fileName);
+        fos = new FileOutputStream(file);
-        fos.write(fileData[i]);
+        fos.write(bytes);
+        filesPaths.add(file.getAbsolutePath());
+    return filesPaths;
