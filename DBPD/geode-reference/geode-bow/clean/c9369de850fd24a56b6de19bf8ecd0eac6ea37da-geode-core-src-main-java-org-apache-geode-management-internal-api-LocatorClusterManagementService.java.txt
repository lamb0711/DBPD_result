GEODE-7398:  Ability: show jar deployment info in REST API for Manageâ€¦ (#4374)

Co-authored-by: Darrel Schneider <dschneider@pivotal.io>

-import org.apache.geode.cache.configuration.CacheConfig;
-import org.apache.geode.distributed.ConfigurationPersistenceService;
+import org.apache.geode.distributed.internal.InternalConfigurationPersistenceService;
+import org.apache.geode.management.configuration.Deployment;
+import org.apache.geode.management.internal.configuration.mutators.CacheConfigurationManager;
+import org.apache.geode.management.internal.configuration.mutators.DeploymentManager;
-  private final ConfigurationPersistenceService persistenceService;
+  private final InternalConfigurationPersistenceService persistenceService;
-      ConfigurationPersistenceService persistenceService) {
+      InternalConfigurationPersistenceService persistenceService) {
+    managers.put(Deployment.class, new DeploymentManager());
-  public LocatorClusterManagementService(ConfigurationPersistenceService persistenceService,
+  public LocatorClusterManagementService(InternalConfigurationPersistenceService persistenceService,
-      memberValidator.validateCreate(config, configurationManager);
+      if (configurationManager instanceof CacheConfigurationManager) {
+        memberValidator.validateCreate(config, (CacheConfigurationManager) configurationManager);
+      }
-    persistenceService.updateCacheConfig(groupName, cacheConfigForGroup -> {
-      try {
-        configurationManager.add(config, cacheConfigForGroup);
-        result.setStatus(StatusCode.OK,
-            "Successfully updated configuration for " + groupName + ".");
-      } catch (Exception e) {
-        String message = "Failed to update cluster configuration for " + groupName + ".";
-        logger.error(message, e);
-        result.setStatus(StatusCode.FAIL_TO_PERSIST, message);
-        return null;
-      }
-      return cacheConfigForGroup;
-    });
+    boolean success = configurationManager.add(persistenceService, config, groupName);
+    if (success) {
+      result.setStatus(StatusCode.OK,
+          "Successfully updated configuration for " + groupName + ".");
+    } else {
+      String message = "Failed to update cluster configuration for " + groupName + ".";
+      result.setStatus(StatusCode.FAIL_TO_PERSIST, message);
+    }
-    ConfigurationManager configurationManager = getConfigurationManager(config);
+    CacheConfigurationManager configurationManager =
+        (CacheConfigurationManager) getConfigurationManager(config);
-      persistenceService.updateCacheConfig(finalGroup, cacheConfigForGroup -> {
-        try {
-          configurationManager.delete(config, cacheConfigForGroup);
-          updatedGroups.add(finalGroup);
-        } catch (Exception e) {
-          logger.error("Failed to update cluster configuration for " + finalGroup + ".", e);
-          failedGroups.add(finalGroup);
-          return null;
-        }
-        return cacheConfigForGroup;
-      });
+      boolean success = configurationManager.delete(persistenceService, config, finalGroup);
+      if (success) {
+        updatedGroups.add(finalGroup);
+      } else {
+        failedGroups.add(finalGroup);
+      }
-        CacheConfig currentPersistedConfig =
-            persistenceService.getCacheConfig(
-                AbstractConfiguration.isCluster(group) ? AbstractConfiguration.CLUSTER : group,
-                true);
-        List<T> listInGroup = manager.list(filter, currentPersistedConfig);
+        List<T> list = manager.list(persistenceService, filter, group);
-          listInGroup.forEach(t -> {
+          list.forEach(t -> {
-        resultList.addAll(listInGroup);
+        resultList.addAll(list);
