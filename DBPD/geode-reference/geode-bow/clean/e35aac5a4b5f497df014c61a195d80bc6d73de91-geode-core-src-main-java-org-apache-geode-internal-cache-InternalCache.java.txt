Merge branch 'release/1.5.0'

-import org.apache.geode.distributed.internal.DM;
+import org.apache.geode.distributed.internal.DistributionManager;
-import org.apache.geode.internal.cache.backup.BackupManager;
+import org.apache.geode.internal.cache.backup.BackupService;
-  DM getDistributionManager();
+  DistributionManager getDistributionManager();
-  void setRegionByPath(String path, LocalRegion r);
+  void setRegionByPath(String path, InternalRegion r);
-  <K, V> RegionAttributes<K, V> invokeRegionBefore(LocalRegion parent, String name,
+  <K, V> RegionAttributes<K, V> invokeRegionBefore(InternalRegion parent, String name,
-  void invokeRegionAfter(LocalRegion region);
+  void invokeRegionAfter(InternalRegion region);
-  void invokeBeforeDestroyed(LocalRegion region);
+  void invokeBeforeDestroyed(InternalRegion region);
-  void invokeCleanupFailedInitialization(LocalRegion region);
+  void invokeCleanupFailedInitialization(InternalRegion region);
-  boolean removeRoot(LocalRegion rootRgn);
+  boolean removeRoot(InternalRegion rootRgn);
-  LocalRegion getReinitializingRegion(String fullPath);
+  InternalRegion getReinitializingRegion(String fullPath);
+  CacheClosedException getCacheClosedException(String reason);
+
-  void clearBackupManager();
-
-  LocalRegion getRegionByPath(String path);
+  InternalRegion getRegionByPath(String path);
-  BackupManager getBackupManager();
-
-  BackupManager startBackup(InternalDistributedMember sender) throws IOException;
+  BackupService getBackupService();
-  Set<LocalRegion> getAllRegions();
+  Set<InternalRegion> getAllRegions();
-  LocalRegion getRegionByPathForProcessing(String path);
+  InternalRegion getRegionByPathForProcessing(String path);
-  Set<LocalRegion> getApplicationRegions();
+  Set<InternalRegion> getApplicationRegions();
+  void removeGatewayReceiver(GatewayReceiver receiver);
+
+  boolean removeCacheServer(CacheServer cacheServer);
+
-      InternalDistributedMember sender, LocalRegion region,
+      InternalDistributedMember sender, InternalRegion region,
+
+  void closeDiskStores();
+
+  /**
+   * If obj is a PdxInstance and pdxReadSerialized is not true
+   * then convert obj by calling PdxInstance.getObject.
+   *
+   * @return either the original obj if no conversion was needed;
+   *         or the result of calling PdxInstance.getObject on obj.
+   */
+  Object convertPdxInstanceIfNeeded(Object obj);
