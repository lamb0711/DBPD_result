merge of develop to feature/GEODE-77

Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

Conflicts:
	gemfire-core/build.gradle
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/cache/LocalRegion.java
	gemfire-jgroups/build.gradle

-import org.apache.lucene.analysis.Analyzer;
-import org.apache.lucene.search.Query;
-import com.gemstone.gemfire.cache.Cache;
-import com.gemstone.gemfire.cache.DiskStore;
+import com.gemstone.gemfire.annotations.Experimental;
- * @since 8.5
+@Experimental
-  public enum ResultType {
-    /**
-     *  Query results only contain value, which is the default setting.
-     *  If field projection is specified, use projected fields' values instead of whole domain object
-     */
-    VALUE,
-    
-    /**
-     * Query results contain score
-     */
-    SCORE,
-    
-    /**
-     * Query results contain key
-     */
-    KEY
-  };
-
-   * set weather to include SCORE, KEY in result
-   * 
-   * @param resultTypes
-   * @return itself
-   */
-  LuceneQueryFactory setResultTypes(ResultType... resultTypes);
-  
-  /**
+   * 
+   * @deprecated TODO This feature is not yet implemented
+  @Deprecated
-   * Create wrapper object for lucene's QueryParser object.
-   * The queryString is using lucene QueryParser's syntax. QueryParser is for easy-to-use 
-   * with human understandable syntax. 
-   *  
-   * @param regionName region name
-   * @param indexName index name
-   * @param queryString query string in lucene QueryParser's syntax
-   * @param analyzer lucene Analyzer to parse the queryString
-   * @return LuceneQuery object
-   * @throws ParseException
-   */
-  public LuceneQuery create(String indexName, String regionName, String queryString, 
-      Analyzer analyzer) throws ParseException;
-  
-  /**
+   * @param K the key type in the query results
+   * @param V the value type in the query results
-  public LuceneQuery create(String indexName, String regionName, String queryString) 
+  public <K, V> LuceneQuery<K, V> create(String indexName, String regionName, String queryString) 
-  
+
-   * Create wrapper object for lucene's Query object.
-   * Advanced lucene users can customized their own Query object and directly use in this API.  
+   * Creates a wrapper object for Lucene's Query object. This {@link LuceneQuery} builder method could be used in
+   * advanced cases, such as cases where Lucene's Query object construction needs Lucene's API over query string. The
+   * {@link QueryDeserializer} will be used to re-construct the Lucene Query object on remote hosts.
-   * @param regionName region name
-   * @param query lucene Query object
+   * @param regionName region name
+   * @param provider constructs and provides a Lucene Query object
+   * @param K the key type in the query results
+   * @param V the value type in the query results
-  public LuceneQuery create(String indexName, String regionName, Query query);
+  public <K, V> LuceneQuery<K, V> create(String indexName, String regionName, LuceneQueryProvider provider);
