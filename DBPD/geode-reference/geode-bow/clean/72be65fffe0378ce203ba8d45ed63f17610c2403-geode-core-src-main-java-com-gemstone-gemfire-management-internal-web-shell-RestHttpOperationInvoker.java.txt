Merge branch 'feature/GEODE-17-2' into develop

+import java.util.Iterator;
+import java.util.Map.Entry;
-   * @see #RestHttpOperationInvoker(com.gemstone.gemfire.management.internal.web.domain.LinkIndex, com.gemstone.gemfire.management.internal.cli.shell.Gfsh, String)
+   * @see #RestHttpOperationInvoker(com.gemstone.gemfire.management.internal.web.domain.LinkIndex, com.gemstone.gemfire.management.internal.cli.shell.Gfsh,  Map)
-  public RestHttpOperationInvoker(final LinkIndex linkIndex, final Gfsh gfsh) {
-    this(linkIndex, gfsh, CliStrings.CONNECT__DEFAULT_BASE_URL);
+  public RestHttpOperationInvoker(final LinkIndex linkIndex, final Gfsh gfsh, Map<String,String> securityProperties) {
+    this(linkIndex, gfsh, CliStrings.CONNECT__DEFAULT_BASE_URL, securityProperties);
-  public RestHttpOperationInvoker(final LinkIndex linkIndex, final Gfsh gfsh, final String baseUrl) {
-    super(gfsh, baseUrl);
+  public RestHttpOperationInvoker(final LinkIndex linkIndex, final Gfsh gfsh, final String baseUrl, Map<String,String> securityProperties) {
+    super(gfsh, baseUrl, securityProperties);
-    this.httpOperationInvoker = new SimpleHttpOperationInvoker(gfsh, baseUrl);
+    this.httpOperationInvoker = new SimpleHttpOperationInvoker(gfsh, baseUrl, securityProperties);
+
+            if(securityProperties != null){
+              Iterator<Entry<String, String>> it = securityProperties.entrySet().iterator();
+              while(it.hasNext()){
+                Entry<String,String> entry= it.next();
+                httpRequest.getHeaders().add(entry.getKey(), entry.getValue());
+              }
+            }
+
-    //request.getParameters().setAll(new HashMap<String, Object>(CollectionUtils.removeKeys(
-    //  new HashMap<String, String>(command.getParameters()), ExcludeNoValueFilter.INSTANCE)));
-
