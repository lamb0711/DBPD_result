GEODE-6626: Separate CacheServer and GatewayReceiver

Introduce new interfaces and then have GatewayReceiverServer extend
CacheServerImpl to override behavior.

-
+
-
-  public ServerConnection makeServerConnection(Socket socket, InternalCache cache,
-      CachedRegionHelper helper, CacheServerStats stats, int hsTimeout, int socketBufferSize,
-      String communicationModeStr, byte communicationMode, Acceptor acceptor,
-      SecurityService securityService) throws IOException {
+  ServerConnection makeServerConnection(final Socket socket, final InternalCache cache,
+      final CachedRegionHelper cachedRegionHelper, final CacheServerStats stats,
+      final int hsTimeout, final int socketBufferSize, final String communicationModeStr,
+      final byte communicationMode, final Acceptor acceptor, final SecurityService securityService)
+      throws IOException {
-      } else {
-        try {
-          return createProtobufServerConnection(socket, cache, helper, stats, hsTimeout,
-              socketBufferSize, communicationModeStr, communicationMode, acceptor, securityService);
-        } catch (ServiceLoadingFailureException ex) {
-          throw new IOException("Could not load protobuf client protocol", ex);
-        } catch (ServiceVersionNotFoundException ex) {
-          throw new IOException("No service matching provided version byte", ex);
-        }
-    } else {
-      return new OriginalServerConnection(socket, cache, helper, stats, hsTimeout, socketBufferSize,
-          communicationModeStr, communicationMode, acceptor, securityService);
+      try {
+        return createProtobufServerConnection(socket, cache, cachedRegionHelper, stats, hsTimeout,
+            socketBufferSize, communicationModeStr, communicationMode, acceptor, securityService);
+      } catch (ServiceLoadingFailureException ex) {
+        throw new IOException("Could not load protobuf client protocol", ex);
+      } catch (ServiceVersionNotFoundException ex) {
+        throw new IOException("No service matching provided version byte", ex);
+      }
+    return new OriginalServerConnection(socket, cache, cachedRegionHelper, stats, hsTimeout,
+        socketBufferSize, communicationModeStr, communicationMode, acceptor, securityService);
-  private ServerConnection createProtobufServerConnection(Socket socket, InternalCache cache,
-      CachedRegionHelper helper, CacheServerStats stats, int hsTimeout, int socketBufferSize,
-      String communicationModeStr, byte communicationMode, Acceptor acceptor,
-      SecurityService securityService) throws IOException {
+  private ServerConnection createProtobufServerConnection(final Socket socket,
+      final InternalCache cache, final CachedRegionHelper cachedRegionHelper,
+      final CacheServerStats stats, final int hsTimeout, final int socketBufferSize,
+      final String communicationModeStr, final byte communicationMode, final Acceptor acceptor,
+      final SecurityService securityService)
+      throws IOException {
-    return new ProtobufServerConnection(socket, cache, helper, stats, hsTimeout, socketBufferSize,
-        communicationModeStr, communicationMode, acceptor, processor, securityService);
+    return new ProtobufServerConnection(socket, cache, cachedRegionHelper, stats, hsTimeout,
+        socketBufferSize, communicationModeStr, communicationMode, acceptor, processor,
+        securityService);
