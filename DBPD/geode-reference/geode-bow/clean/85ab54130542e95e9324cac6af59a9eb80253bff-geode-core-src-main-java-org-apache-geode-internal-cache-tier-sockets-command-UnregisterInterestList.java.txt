GEODE-8359 (#5371)

GEODE-8359: Code needed protection against the possibility of the null being returned.

There was also a fair amount of inconsistency between files that are very tightly related.

-  public void cmdExecute(final Message clientMessage, final ServerConnection serverConnection,
-      final SecurityService securityService, long start)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection,
+      SecurityService securityService, long start)
-    Part regionNamePart = null, keyPart = null, numberOfKeysPart = null;
-    String regionName = null;
-    Object key = null;
-    List keys = null;
-    int numberOfKeys = 0, partNumber = 0;
+    Part regionNamePart, keyPart, numberOfKeysPart;
+    String regionName;
+    Object key;
+    List<Object> keys;
+    int numberOfKeys, partNumber;
-    // bserverStats.incLong(readDestroyRequestTimeId,
-    // DistributionStats.getStatTime() - start);
-    // bserverStats.incInt(destroyRequestsId, 1);
-    // start = DistributionStats.getStatTime();
-    // Retrieve the data from the message parts
-    boolean keepalive = false;
+    boolean keepAlive;
-      Part keepalivePart = clientMessage.getPart(2);
-      byte[] keepalivePartBytes = (byte[]) keepalivePart.getObject();
-      keepalive = keepalivePartBytes[0] == 0x01;
+      Part keepAlivePart = clientMessage.getPart(2);
+      byte[] keepAlivePartBytes = (byte[]) keepAlivePart.getObject();
+      keepAlive = keepAlivePartBytes[0] == 0x01;
-    keys = new ArrayList();
+    keys = new ArrayList<>();
-        errMessage =
-            "The input list of keys for the unregister interest request is empty.";
+        errMessage = "The input list of keys for the unregister interest request is empty.";
-        errMessage =
-            "The input region name for the unregister interest request is null.";
+        errMessage = "The input region name for the unregister interest request is null.";
-      String s = errMessage;
-      logger.warn("{}: {}", serverConnection.getName(), s);
-      writeErrorResponse(clientMessage, MessageType.UNREGISTER_INTEREST_DATA_ERROR, s,
+      logger.warn("{}: {}", serverConnection.getName(), errMessage);
+      writeErrorResponse(clientMessage, MessageType.UNREGISTER_INTEREST_DATA_ERROR, errMessage,
-    AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-    if (authzRequest != null) {
+    AuthorizeRequest authorizeRequest = serverConnection.getAuthzRequest();
+    if (authorizeRequest != null) {
-              authzRequest.unregisterInterestListAuthorize(regionName, keys);
-          keys = (List) unregisterContext.getKey();
+              authorizeRequest.unregisterInterestListAuthorize(regionName, keys);
+          keys = (List<Object>) unregisterContext.getKey();
-    // Yogesh : bug fix for 36457 :
-    /*
-     * Region destroy message from server to client results in client calling unregister to server
-     * (an unnecessary callback). The unregister encounters an error because the region has been
-     * destroyed on the server and hence falsely marks the server dead.
-     */
-    /*
-     * Region region = crHelper.getRegion(regionName); if (region == null) {
-     * logger.warning(this.name + ": Region named " + regionName + " was not found during register
-     * interest list request"); writeErrorResponse(msg, MessageType.UNREGISTER_INTEREST_DATA_ERROR);
-     * responded = true; } else {
-     */
-    // Register interest
-    serverConnection.getAcceptor().getCacheClientNotifier().unregisterClientInterest(regionName,
-        keys, isClosingList, serverConnection.getProxyID(), keepalive);
-    // Update the statistics and write the reply
-    // bserverStats.incLong(processDestroyTimeId,
-    // DistributionStats.getStatTime() - start);
-    // start = DistributionStats.getStatTime(); WHY ARE GETTING START AND NOT
-    // USING IT?
+    serverConnection.getAcceptor().getCacheClientNotifier().unregisterClientInterest(regionName,
+        keys, isClosingList, serverConnection.getProxyID(), keepAlive);
+
-    // bserverStats.incLong(writeDestroyResponseTimeId,
-    // DistributionStats.getStatTime() - start);
-    // bserverStats.incInt(destroyResponsesId, 1);
-    // }
-
-
