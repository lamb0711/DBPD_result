GEODE-5971: refactor more to use ResultModel (#3268)

Co-authored-by: Owen Nichols <onichols@pivotal.io>
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.InfoResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.model.InfoResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-  public Result disconnect() {
-    Result result;
+  public ResultModel disconnect() {
+
-      result = ResultBuilder.createInfoResult("Not connected.");
-    } else {
-      InfoResultData infoResultData = ResultBuilder.createInfoResultData();
-      try {
-        Gfsh gfshInstance = getGfsh();
-        if (gfshInstance.isConnectedAndReady()) {
-          OperationInvoker operationInvoker = gfshInstance.getOperationInvoker();
-          Gfsh.println("Disconnecting from: " + operationInvoker);
-          operationInvoker.stop();
-          infoResultData.addLine(CliStrings.format(CliStrings.DISCONNECT__MSG__DISCONNECTED,
-              operationInvoker.toString()));
-          LogWrapper.getInstance().info(CliStrings
-              .format(CliStrings.DISCONNECT__MSG__DISCONNECTED, operationInvoker.toString()));
-          if (!gfshInstance.isHeadlessMode()) {
-            gfshInstance.setPromptPath(gfshInstance.getEnvAppContextPath());
-          }
-        } else {
-          infoResultData.addLine(CliStrings.DISCONNECT__MSG__NOTCONNECTED);
-        }
-        result = ResultBuilder.buildResult(infoResultData);
-      } catch (Exception e) {
-        result = ResultBuilder.createConnectionErrorResult(
-            CliStrings.format(CliStrings.DISCONNECT__MSG__ERROR, e.getMessage()));
-      }
+      return ResultModel.createInfo("Not connected.");
+
+    ResultModel result = new ResultModel();
+    InfoResultModel infoResultData = result.addInfo();
+
+    Gfsh gfshInstance = getGfsh();
+    if (gfshInstance.isConnectedAndReady()) {
+      OperationInvoker operationInvoker = gfshInstance.getOperationInvoker();
+      Gfsh.println("Disconnecting from: " + operationInvoker);
+      operationInvoker.stop();
+      infoResultData.addLine(CliStrings.format(CliStrings.DISCONNECT__MSG__DISCONNECTED,
+          operationInvoker.toString()));
+      LogWrapper.getInstance().info(CliStrings
+          .format(CliStrings.DISCONNECT__MSG__DISCONNECTED, operationInvoker.toString()));
+      if (!gfshInstance.isHeadlessMode()) {
+        gfshInstance.setPromptPath(gfshInstance.getEnvAppContextPath());
+      }
+    } else {
+      infoResultData.addLine(CliStrings.DISCONNECT__MSG__NOTCONNECTED);
+    }
+
