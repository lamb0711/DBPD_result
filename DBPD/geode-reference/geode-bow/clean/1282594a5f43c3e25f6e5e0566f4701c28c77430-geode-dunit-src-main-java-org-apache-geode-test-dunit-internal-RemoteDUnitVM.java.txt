GEODE-7475: Include remote stack trace in AsyncInvocation timeout (#4344)

* Add stack trace of remote thread as the cause of an AsyncInvocation TimeoutException
* Clean up AsyncInvocation and SerializableRunnable/SerializableCallable hierarchy of classes
* New tests for StackTrace, VM.dumpThreads, and AsyncInvocation asyncTimeoutHandler
* Deprecate and reorganize some additional dunit methods that are either not used or have a newer preferred alternative
* Trigger remote VM to dump all threads to stdout when an AsyncInvocation times out
+
-    super();
+    // super
-    String name = target.getClass().getName() + '.' + methodName
-        + (args != null ? " with " + args.length + " args" : "") + " on object: " + target;
-    long start = start(name);
-    MethodInvokerResult result = MethodInvoker.executeObject(target, methodName, args);
-    logDelta(name, start, result);
-    return result;
+    long asyncId = 0;
+    if (target instanceof Identifiable) {
+      asyncId = ((Identifiable) target).getId();
+      if (asyncId > 0) {
+        AsyncThreadId.put(asyncId, Thread.currentThread().getId());
+      }
+    }
+    try {
+      String name = target.getClass().getName() + '.' + methodName
+          + (args != null ? " with " + args.length + " args" : "") + " on object: " + target;
+      long start = start(name);
+      MethodInvokerResult result = MethodInvoker.executeObject(target, methodName, args);
+      logDelta(name, start, result);
+      return result;
+    } finally {
+      if (asyncId != 0) {
+        AsyncThreadId.remove(asyncId);
+      }
+    }
