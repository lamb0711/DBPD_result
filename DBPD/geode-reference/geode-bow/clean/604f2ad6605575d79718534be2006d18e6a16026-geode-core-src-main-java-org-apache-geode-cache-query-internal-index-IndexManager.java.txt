GEODE-4476: Remove getInstance() calls from org.apache.geode.cache.query (#1427)

  * Also removed test variables from product code
  * Tests will now set a property that allows tests to test query cancellation
+  private final InternalCache cache;
-  public IndexManager(Region region) {
+  public IndexManager(InternalCache cache, Region region) {
+    this.cache = cache;
-      IndexTask indexTask = new IndexTask(indexName, indexType, origFromClause,
+      IndexTask indexTask = new IndexTask(cache, indexName, indexType, origFromClause,
-    IndexTask indexTask = new IndexTask(indexName);
+    IndexTask indexTask = new IndexTask(cache, indexName);
-    IndexTask indexTask = new IndexTask(indexName);
+    IndexTask indexTask = new IndexTask(cache, indexName);
-    IndexTask indexTask = new IndexTask(index.getName());
+    IndexTask indexTask = new IndexTask(cache, index.getName());
-    IndexTask(String indexName, IndexType type, String origFromClause, String origIndexedExpression,
-        IndexCreationHelper helper, boolean isCompactOrHash, PartitionedIndex prIndex,
-        boolean loadEntries) {
+    private final InternalCache cache;
+
+    IndexTask(InternalCache cache, String indexName, IndexType type, String origFromClause,
+        String origIndexedExpression, IndexCreationHelper helper, boolean isCompactOrHash,
+        PartitionedIndex prIndex, boolean loadEntries) {
+      this.cache = cache;
-    IndexTask(String indexName) {
+    IndexTask(InternalCache cache, String indexName) {
+      this.cache = cache;
-        index = new PrimaryKeyIndex(indexName, region, fromClause, indexedExpression,
+        index = new PrimaryKeyIndex(cache, indexName, region, fromClause, indexedExpression,
-        index = new HashIndex(indexName, region, fromClause, indexedExpression,
+        index = new HashIndex(cache, indexName, region, fromClause, indexedExpression,
-            index = new CompactRangeIndex(indexName, region, fromClause, indexedExpression,
+            index = new CompactRangeIndex(cache, indexName, region, fromClause, indexedExpression,
-            index = new CompactMapRangeIndex(indexName, region, fromClause, indexedExpression,
-                projectionAttributes, origFromClause, origIndexedExpression, definitions,
-                fich.isAllKeys(), fich.multiIndexKeysPattern, fich.mapKeys, stats);
+            index = new CompactMapRangeIndex(cache, indexName, region, fromClause,
+                indexedExpression, projectionAttributes, origFromClause, origIndexedExpression,
+                definitions, fich.isAllKeys(), fich.multiIndexKeysPattern, fich.mapKeys, stats);
-            index = new RangeIndex(indexName, region, fromClause, indexedExpression,
+            index = new RangeIndex(cache, indexName, region, fromClause, indexedExpression,
-            index = new MapRangeIndex(indexName, region, fromClause, indexedExpression,
+            index = new MapRangeIndex(cache, indexName, region, fromClause, indexedExpression,
