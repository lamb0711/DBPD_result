GEODE-11: Make LuceneFunctionContext DataSerializable

LuceneFunctionContext will be sent over wire and needs to be serialized
efficiently using DataSerializableFixedID

https://reviews.apache.org/r/38581/

+import java.io.DataInput;
+import java.io.DataOutput;
+import com.gemstone.gemfire.DataSerializer;
+import com.gemstone.gemfire.internal.DataSerializableFixedID;
+import com.gemstone.gemfire.internal.Version;
-public class TopEntriesCollectorManager implements CollectorManager<TopEntriesCollector> {
+public class TopEntriesCollectorManager implements CollectorManager<TopEntriesCollector>, DataSerializableFixedID {
-  final int limit;
-  final String id;
+  private int limit;
+  private String id;
+
+  @Override
+  public Version[] getSerializationVersions() {
+    return null;
+  }
+
+  @Override
+  public int getDSFID() {
+    return LUCENE_TOP_ENTRIES_COLLECTOR_MANAGER;
+  }
+
+  @Override
+  public void toData(DataOutput out) throws IOException {
+    DataSerializer.writeString(id, out);
+    out.writeInt(limit);
+  }
+
+  @Override
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
+    id = DataSerializer.readString(in);
+    limit = in.readInt();
+  }
+
+  /**
+   * @return Id of this collector, if any
+   */
+  public String getId() {
+    return id;
+  }
+
+  /**
+   * @return Result limit enforced by the collectors created by this manager
+   */
+  public int getLimit() {
+    return limit;
+  }
