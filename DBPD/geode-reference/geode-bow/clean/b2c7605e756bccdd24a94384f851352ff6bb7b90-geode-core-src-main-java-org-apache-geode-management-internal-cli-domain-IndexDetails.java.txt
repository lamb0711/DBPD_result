GEODE-3539: consolidate IndexType for better option verification (#910)

* consolidate IndexType
* simplify IndexType class and fix analyzeSerializable test
* add unit test to make sure old behavior is preserved

+import java.io.Serializable;
+
+
+import org.apache.geode.cache.query.IndexType;
-import java.io.Serializable;
-
+
-  public void setIndexType(final org.apache.geode.cache.query.IndexType indexType) {
-    setIndexType(IndexType.valueOf(indexType));
-  }
-
-    buffer.append(", indexType = ").append(getIndexType());
+    buffer.append(", indexType = ").append(getIndexType().getName());
-
-  public static enum IndexType {
-    FUNCTIONAL("RANGE"), HASH("HASH"), PRIMARY_KEY("KEY");
-
-    private final String description;
-
-    public static IndexType valueOf(final org.apache.geode.cache.query.IndexType indexType) {
-      for (final IndexType type : values()) {
-        if (type.name().equalsIgnoreCase(ObjectUtils.toString(indexType))) {
-          return type;
-        }
-      }
-      return null;
-    }
-
-    IndexType(final String description) {
-      assertValidArgument(StringUtils.isNotBlank(description),
-          "The description for the IndexType must be specified!");
-      this.description = description;
-    }
-
-    public String getDescription() {
-      return this.description;
-    }
-
-    public org.apache.geode.cache.query.IndexType getType() {
-      switch (this) {
-        case HASH:
-          return null;
-        case PRIMARY_KEY:
-          return org.apache.geode.cache.query.IndexType.PRIMARY_KEY;
-        case FUNCTIONAL:
-        default:
-          return org.apache.geode.cache.query.IndexType.FUNCTIONAL;
-      }
-    }
-
-    @Override
-    public String toString() {
-      return getDescription();
-    }
-  }
-
