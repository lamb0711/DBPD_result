GEODE-7479: Change Membership interface to use MemberIdentifier interface (#4420)

Changing all classes in Membership to be parameterized by an ID type,
which extends MemberIdentifier. This allows core to create a membership
system that manages InternalDistributedMember objects in a type safe
way.

Removing all uses of InternalDistributedMember, DistributedMember, and
friends from within the membership code.

-import org.apache.geode.distributed.DistributedMember;
-  protected static Connection createSender(final Membership mgr, final ConnectionTable t,
-      final boolean preserveOrder, final DistributedMember remoteAddr, final boolean sharedResource,
+  protected static Connection createSender(final Membership<InternalDistributedMember> mgr,
+      final ConnectionTable t,
+      final boolean preserveOrder, final InternalDistributedMember remoteAddr,
+      final boolean sharedResource,
-            mgr.suspectMember((InternalDistributedMember) remoteAddr,
+            mgr.suspectMember(remoteAddr,
-          mgr.suspectMember((InternalDistributedMember) remoteAddr,
+          mgr.suspectMember(remoteAddr,
-  private static boolean giveUpOnMember(Membership mgr,
-      DistributedMember remoteAddr) {
+  private static boolean giveUpOnMember(Membership<InternalDistributedMember> mgr,
+      InternalDistributedMember remoteAddr) {
-  private void setRemoteAddr(DistributedMember m) {
+  private void setRemoteAddr(InternalDistributedMember m) {
-    Membership mgr = this.conduit.getMembership();
+    Membership<InternalDistributedMember> mgr = this.conduit.getMembership();
-  private Connection(ConnectionTable t, boolean preserveOrder, DistributedMember remoteID,
+  private Connection(ConnectionTable t, boolean preserveOrder, InternalDistributedMember remoteID,
-    InternalDistributedMember remoteAddr = (InternalDistributedMember) remoteID;
-    setRemoteAddr(remoteAddr);
+    setRemoteAddr(remoteID);
-        new InetSocketAddress(remoteAddr.getInetAddress(), remoteAddr.getDirectChannelPort());
+        new InetSocketAddress(remoteID.getInetAddress(), remoteID.getDirectChannelPort());
-      logger.debug("Connection: connected to {} with IP address {}", remoteAddr, addr);
+      logger.debug("Connection: connected to {} with IP address {}", remoteID, addr);
