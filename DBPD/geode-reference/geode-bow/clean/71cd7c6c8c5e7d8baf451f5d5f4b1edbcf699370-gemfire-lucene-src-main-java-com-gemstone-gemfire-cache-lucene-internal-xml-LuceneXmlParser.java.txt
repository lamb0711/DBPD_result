Making lucene indexed fields their own XML element.

Rather than <lucene:index fields="x,y"> fields are now listed as their
own individual elements, for example

<lucene:index>
  <lucene:field name="x"/>
</lucene:index>

+    if(FIELD.equals(localName)) {
+      startField(atts);
+    }
+  }
+
+  private void startField(Attributes atts) {
+    //Ignore any whitespace noise between fields
+    if(stack.peek() instanceof StringBuffer) {
+      stack.pop();
+    }
+    LuceneIndexCreation creation = (LuceneIndexCreation) stack.peek();
+    String name = atts.getValue(NAME);
+    creation.addField(name);
-    String[] fields = atts.getValue(FIELDS).split(" *, *");
-    
-    indexCreation.setFieldNames(fields);
-    //TODO support nested field objects by adding the creation object to the stack
-    //stack.push(indexCreation)
+    stack.push(indexCreation);
-    //Nothing to do.
+    if(!NAMESPACE.equals(uri)) {
+      return;
+    }
+    if(INDEX.equals(localName)) {
+      endIndex();
+    }
+  }
+
+  private void endIndex() {
+    //Ignore any whitespace noise between fields
+    if(stack.peek() instanceof StringBuffer) {
+      stack.pop();
+    }
+    
+    //Remove the index creation from the stack
+    stack.pop();
