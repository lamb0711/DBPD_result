GEODE-6588: Properly type Function execution related interfaces. (#3691)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Peter Tran <ptran@gmail.com>

* Extensions and implementations of Execution and ResultCollector and the 
classes and interfaces involved in the execution chain were lacking the
ability to apply Generic types.
* Typing issues starting from MemberConfigManager.java class were fixed.
* Trivial IDE warnings were fixed.
-import java.util.Iterator;
-public class PartitionedRegionFunctionExecutor extends AbstractExecution {
+public class PartitionedRegionFunctionExecutor<ArgumentT, ReturnT, AggregatorT>
+    extends AbstractExecution<ArgumentT, ReturnT, AggregatorT> {
-  private PartitionedRegionFunctionExecutor(PartitionedRegionFunctionExecutor prfe) {
-    super(prfe);
-    this.pr = prfe.pr;
-    this.executeOnBucketSet = prfe.executeOnBucketSet;
-    this.isPRSingleHop = prfe.isPRSingleHop;
-    this.isReExecute = prfe.isReExecute;
-    if (prfe.filter != null) {
-      this.filter.clear();
-      this.filter.addAll(prfe.filter);
-    }
-    if (prfe.sender != null) {
-      this.sender = prfe.sender;
-    }
-  }
-
-    Iterator<Integer> it = bucketIDs.iterator();
-    while (it.hasNext()) {
-      int bid = it.next();
+    for (int bid : bucketIDs) {
-    final StringBuffer buf = new StringBuffer();
-    buf.append("[ PartitionedRegionFunctionExecutor:");
-    buf.append("args=");
-    buf.append(this.args);
-    buf.append(";filter=");
-    buf.append(this.filter);
-    buf.append(";region=");
-    buf.append(this.pr.getName());
-    buf.append("]");
-    return buf.toString();
+    return "[ PartitionedRegionFunctionExecutor:"
+        + "args="
+        + this.args
+        + ";filter="
+        + this.filter
+        + ";region="
+        + this.pr.getName()
+        + "]";
