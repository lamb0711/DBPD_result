Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
-  private ExecuteFunction70() {
-  }
+
+  private ExecuteFunction70() {}
-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
-      throws IOException {
+  public void cmdExecute(Message msg, ServerConnection servConn, long start) throws IOException {
-  
+
-  protected void executeFunctionOnGroups(Object function, Object args,
-      String[] groups, boolean allMembers, Function functionObject,
-      ServerToClientFunctionResultSender resultSender, boolean ignoreFailedMembers) {
+  protected void executeFunctionOnGroups(Object function, Object args, String[] groups,
+      boolean allMembers, Function functionObject, ServerToClientFunctionResultSender resultSender,
+      boolean ignoreFailedMembers) {
-          LocalizedStrings.ExecuteFunction_DS_NOT_CREATED_OR_NOT_READY
-              .toLocalizedString());
+          LocalizedStrings.ExecuteFunction_DS_NOT_CREATED_OR_NOT_READY.toLocalizedString());
-        ArrayList<DistributedMember> memberList = new ArrayList<DistributedMember>(ds.getGroupMembers(group));
+        ArrayList<DistributedMember> memberList =
+            new ArrayList<DistributedMember>(ds.getGroupMembers(group));
-          if (!FunctionServiceManager.RANDOM_onMember && memberList.contains(ds.getDistributedMember())) {
+          if (!FunctionServiceManager.RANDOM_onMember
+              && memberList.contains(ds.getDistributedMember())) {
-      logger.debug("Executing Function on Groups: {} all members: {} members are: {}", Arrays.toString(groups), allMembers, members);
+      logger.debug("Executing Function on Groups: {} all members: {} members are: {}",
+          Arrays.toString(groups), allMembers, members);
-      ((AbstractExecution)execution).setIgnoreDepartedMembers(true);
+      ((AbstractExecution) execution).setIgnoreDepartedMembers(true);
-    if(!functionObject.isHA()) {
-      ((AbstractExecution)execution).setWaitOnExceptionFlag(true);
+    if (!functionObject.isHA()) {
+      ((AbstractExecution) execution).setWaitOnExceptionFlag(true);
