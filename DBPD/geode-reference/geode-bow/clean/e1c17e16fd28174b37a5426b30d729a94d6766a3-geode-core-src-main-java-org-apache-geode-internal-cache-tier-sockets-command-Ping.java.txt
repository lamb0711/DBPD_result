Revert "GEODE-7565: Allow gateway receivers with same host and port (#4824)" (#4974)

This reverts commit dd23ee8200cba67cea82e57e2e4ccedcdf9e8266.
-import org.apache.geode.distributed.DistributedMember;
-import org.apache.geode.internal.cache.DistributedPingMessage;
+import org.apache.geode.internal.cache.tier.CachedRegionHelper;
-    if (clientMessage.getNumberOfParts() > 0) {
-      try {
-        DistributedMember targetServer = (DistributedMember) clientMessage.getPart(0).getObject();
-        DistributedMember myID = serverConnection.getCache().getMyId();
-        if (!myID.equals(targetServer)) {
-          pingCorrectServer(clientMessage, targetServer, serverConnection);
-          writeReply(clientMessage, serverConnection);
-          serverConnection.setAsTrue(RESPONDED);
-          return;
-        }
-      } catch (ClassNotFoundException e) {
-        logger.warn("Unable to deserialize message from " + serverConnection.getProxyID());
-        writeErrorResponse(clientMessage, MessageType.PING, serverConnection);
-        serverConnection.setAsTrue(RESPONDED);
-        return;
-      }
-    }
-    if (chm != null) {
+    if (chm != null)
-    }
+    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
-  /**
-   * Process a ping request that was sent to the wrong server
-   */
-  protected void pingCorrectServer(Message clientMessage, DistributedMember targetServer,
-      ServerConnection serverConnection)
-      throws IOException {
-    if (logger.isDebugEnabled()) {
-      logger.debug("Received a Ping request from {} intended for {}. Forwarding the ping...",
-          serverConnection.getProxyID(), targetServer);
-    }
-    if (!serverConnection.getCache().getDistributionManager().isCurrentMember(targetServer)) {
-      logger.warn("Unable to ping non-member {} for client {}", targetServer,
-          serverConnection.getProxyID());
-      writeErrorResponse(clientMessage, MessageType.PING, serverConnection);
-      serverConnection.setAsTrue(RESPONDED);
-    } else {
-      // send a ping message to the server. This is a one-way message that doesn't send a reply
-      final DistributedPingMessage distributedPingMessage =
-          new DistributedPingMessage(targetServer, serverConnection.getProxyID());
-      serverConnection.getCache().getDistributionManager().putOutgoing(distributedPingMessage);
-      writeReply(clientMessage, serverConnection);
-    }
-  }
-
