GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import static org.apache.geode.distributed.internal.InternalDistributedSystem.getLoggerI18n;
+import static org.apache.geode.distributed.internal.InternalDistributedSystem.getLogger;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-    if (getLoggerI18n().infoEnabled())
-      getLoggerI18n().info(LocalizedStrings.Snapshot_IMPORT_BEGIN_0, region.getName());
+    if (getLogger().infoEnabled())
+      getLogger().info(String.format("Importing region %s", region.getName()));
-      if (getLoggerI18n().infoEnabled()) {
-        getLoggerI18n().info(LocalizedStrings.Snapshot_IMPORT_END_0_1_2_3,
-            new Object[] {count, bytes, region.getName(), snapshot.getAbsolutePath()});
+      if (getLogger().infoEnabled()) {
+        getLogger().info(String.format(
+            "Snapshot import of %s entries (%s bytes) in region %s from file %s is complete",
+            new Object[] {count, bytes, region.getName(), snapshot.getAbsolutePath()}));
-    if (getLoggerI18n().fineEnabled()) {
-      getLoggerI18n().fine("Writing to snapshot " + snapshot.getAbsolutePath());
+    if (getLogger().fineEnabled()) {
+      getLogger().fine("Writing to snapshot " + snapshot.getAbsolutePath());
-      if (getLoggerI18n().infoEnabled())
-        getLoggerI18n().info(LocalizedStrings.Snapshot_EXPORT_BEGIN_0, region.getName());
+      if (getLogger().infoEnabled())
+        getLogger().info(String.format("Exporting region %s", region.getName()));
-      if (getLoggerI18n().infoEnabled()) {
-        getLoggerI18n().info(LocalizedStrings.Snapshot_EXPORT_END_0_1_2_3, new Object[] {count,
-            sink.getBytesWritten(), region.getName(), snapshot.getAbsolutePath()});
+      if (getLogger().infoEnabled()) {
+        getLogger().info(String.format(
+            "Snapshot export of %s entries (%s bytes) in region %s to file %s is complete",
+            new Object[] {count,
+                sink.getBytesWritten(), region.getName(), snapshot.getAbsolutePath()}));
-          throw new IOException(LocalizedStrings.Snapshot_INVALID_EXPORT_FILE.toLocalizedString(f));
+          throw new IOException(String.format("File is invalid or is a directory: %s", f));
