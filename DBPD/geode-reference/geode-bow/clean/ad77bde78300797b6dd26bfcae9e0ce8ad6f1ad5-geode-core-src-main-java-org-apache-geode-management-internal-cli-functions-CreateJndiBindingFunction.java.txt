GEODE-4384/3875: refactor create/destroy jndi binding commands to use CacheConfig objects (#1627)

* GEODE-3875:  refactor create jndi binding
* GEODE-4384: refactor destroy jndi binding

* refactored xml manipulation using jaxb
* Eliminate the need for RegionElement

+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.stream.Collectors;
+
+import org.apache.geode.internal.cache.configuration.JndiBindingsType;
+import org.apache.geode.internal.datasource.ConfigProperty;
-public class CreateJndiBindingFunction implements InternalFunction<JndiBindingConfiguration> {
+public class CreateJndiBindingFunction implements InternalFunction<JndiBindingsType.JndiBinding> {
-  public void execute(FunctionContext<JndiBindingConfiguration> context) {
+  public void execute(FunctionContext<JndiBindingsType.JndiBinding> context) {
-    JndiBindingConfiguration configuration = context.getArguments();
-    JNDIInvoker.mapDatasource(configuration.getParamsAsMap(),
-        configuration.getDatasourceConfigurations());
+    JndiBindingsType.JndiBinding configuration = context.getArguments();
+    JNDIInvoker.mapDatasource(getParamsAsMap(configuration),
+        convert(configuration.getConfigProperty()));
+
+  static Map getParamsAsMap(JndiBindingsType.JndiBinding binding) {
+    Map params = new HashMap();
+    params.put("blocking-timeout-seconds", binding.getBlockingTimeoutSeconds());
+    params.put("conn-pooled-datasource-class", binding.getConnPooledDatasourceClass());
+    params.put("connection-url", binding.getConnectionUrl());
+    params.put("idle-timeout-seconds", binding.getIdleTimeoutSeconds());
+    params.put("init-pool-size", binding.getInitPoolSize());
+    params.put("jdbc-driver-class", binding.getJdbcDriverClass());
+    params.put("jndi-name", binding.getJndiName());
+    params.put("login-timeout-seconds", binding.getLoginTimeoutSeconds());
+    params.put("managed-conn-factory-class", binding.getManagedConnFactoryClass());
+    params.put("max-pool-size", binding.getMaxPoolSize());
+    params.put("password", binding.getPassword());
+    params.put("transaction-type", binding.getTransactionType());
+    params.put("type", binding.getType());
+    params.put("user-name", binding.getUserName());
+    params.put("xa-datasource-class", binding.getXaDatasourceClass());
+    return params;
+  }
+
+  static List<ConfigProperty> convert(
+      List<JndiBindingsType.JndiBinding.ConfigProperty> properties) {
+    return properties.stream().map(p -> {
+      ConfigProperty prop = new ConfigProperty();
+      prop.setName(p.getName());
+      prop.setType(p.getType());
+      prop.setValue(p.getValue());
+      return prop;
+    }).collect(Collectors.toList());
+  }
