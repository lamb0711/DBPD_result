change more string commands to have CommandFunction support (#5184)

* CommandFunction now supports getrange, setrange, bitcount, bitop, bitpos, getbit, setbit, incrbyfloat, mget, and strlen.

Added integration test coverage for untested string commands.

-import static org.apache.geode.redis.internal.executor.string.SetOptions.Exists.NONE;
-  private final String ERROR_NOT_INT = "The number provided must be numeric";
+  private static final String ERROR_NOT_INT = "The number provided must be numeric";
-  private final String ERROR_VALUE = "The value is out of range, must be 0 or 1";
+  private static final String ERROR_VALUE = "The value is out of range, must be 0 or 1";
-  private final String ERROR_ILLEGAL_OFFSET =
+  private static final String ERROR_ILLEGAL_OFFSET =
-    int returnBit = 0;
-    int byteIndex = (int) (offset / 8);
-    offset %= 8;
-
-    ByteArrayWrapper wrapper = stringCommands.get(key);
-    if (wrapper == null) {
-      byte[] bytes = new byte[byteIndex + 1];
-      if (value == 1) {
-        bytes[byteIndex] = (byte) (0x80 >> offset);
-      }
-      stringCommands.set(key, new ByteArrayWrapper(bytes), null);
-      return RedisResponse.integer(0);
-    }
-
-    byte[] bytes = wrapper.toBytes();
-    if (byteIndex < bytes.length) {
-      returnBit = (bytes[byteIndex] & (0x80 >> offset)) >> (7 - offset);
-    } else {
-      returnBit = 0;
-    }
-
-    SetOptions setOptions = new SetOptions(NONE, 0L, true);
-    if (byteIndex < bytes.length) {
-      bytes[byteIndex] = value == 1 ? (byte) (bytes[byteIndex] | (0x80 >> offset))
-          : (byte) (bytes[byteIndex] & ~(0x80 >> offset));
-      stringCommands.set(key, new ByteArrayWrapper(bytes), setOptions);
-    } else {
-      byte[] newBytes = new byte[byteIndex + 1];
-      System.arraycopy(bytes, 0, newBytes, 0, bytes.length);
-      newBytes[byteIndex] = value == 1 ? (byte) (newBytes[byteIndex] | (0x80 >> offset))
-          : (byte) (newBytes[byteIndex] & ~(0x80 >> offset));
-      stringCommands.set(key, new ByteArrayWrapper(newBytes), setOptions);
-    }
+    int returnBit = stringCommands.setbit(key, offset, value);
-
