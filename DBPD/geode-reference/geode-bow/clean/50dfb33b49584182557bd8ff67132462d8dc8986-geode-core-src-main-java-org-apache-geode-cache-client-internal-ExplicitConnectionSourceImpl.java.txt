GEODE-6588: Cleanup generics and other static analyzer issues. (#3391)


-  private List serverList;
+  private List<ServerLocation> serverList;
-  public ExplicitConnectionSourceImpl(List/* <InetSocketAddress> */ contacts) {
-    ArrayList serverList = new ArrayList(contacts.size());
-    for (int i = 0; i < contacts.size(); i++) {
-      InetSocketAddress addr = (InetSocketAddress) contacts.get(i);
+  ExplicitConnectionSourceImpl(List<InetSocketAddress> contacts) {
+    ArrayList<ServerLocation> serverList = new ArrayList<>(contacts.size());
+    for (InetSocketAddress addr : contacts) {
-      Set/* <ServerLocation> */ excludedServers) {
+      Set<ServerLocation> excludedServers) {
-    HashSet excludedPlusCurrent = new HashSet(excludedServers);
+    HashSet<ServerLocation> excludedPlusCurrent = new HashSet<>(excludedServers);
-      nextServer = (ServerLocation) serverList.get(nextServerIndex);
+      nextServer = serverList.get(nextServerIndex);
-  public synchronized List findServersForQueue(Set excludedServers, int numServers,
+  public synchronized List<ServerLocation> findServersForQueue(Set<ServerLocation> excludedServers,
+      int numServers,
-      return new ArrayList();
+      return new ArrayList<>();
-  private List pickQueueServers(Set excludedServers, int numServers) {
+  private List<ServerLocation> pickQueueServers(Set<ServerLocation> excludedServers,
+      int numServers) {
-    ArrayList result = new ArrayList();
+    ArrayList<ServerLocation> result = new ArrayList<>();
-      nextQueue = (ServerLocation) serverList.get(nextQueueIndex);
+      nextQueue = serverList.get(nextQueueIndex);
-    public static final HasQueueOp SINGLETON = new HasQueueOp();
+    static final HasQueueOp SINGLETON = new HasQueueOp();
-  private List findDurableQueues(Set excludedServers, int numServers) {
-    ArrayList durableServers = new ArrayList();
-    ArrayList otherServers = new ArrayList();
+  private List<ServerLocation> findDurableQueues(Set<ServerLocation> excludedServers,
+      int numServers) {
+    ArrayList<ServerLocation> durableServers = new ArrayList<>();
+    ArrayList<ServerLocation> otherServers = new ArrayList<>();
-    for (Iterator itr = serverList.iterator(); itr.hasNext();) {
-      ServerLocation server = (ServerLocation) itr.next();
+    for (ServerLocation server : serverList) {
-        if (hasQueue.booleanValue()) {
+        if (hasQueue) {
-    StringBuffer sb = new StringBuffer();
+    StringBuilder sb = new StringBuilder();
-        sb.append(loc.getHostName() + ":" + loc.getPort());
+        sb.append(loc.getHostName()).append(":").append(loc.getPort());
-    ArrayList<ServerLocation> list = new ArrayList<ServerLocation>();
-    list.addAll(this.serverList);
-    return list;
+    return new ArrayList<>(this.serverList);
