GEODE-8338: change redis commands not be repeated when a server dies (#5351)

The redis functions are no longer HA.
The product does have some cases when it can safely retry the function
but if a server dies the client will see a redis error containing "memberDeparted".
In that case the client app can check to see if the redis operation should be done
again, or if it already happened even though a server died.

Co-authored-by: Sarah Abbey <sabbey@vmware.com>
Co-authored-by: Darrel Schneider <darrel@vmware.com>
-import org.apache.geode.redis.internal.executor.CommandFunction;
+import org.apache.geode.redis.internal.executor.RedisCommandsFunctionInvoker;
-public class RedisSetCommandsFunctionInvoker implements RedisSetCommands {
-
-  private final Region<ByteArrayWrapper, RedisData> region;
+public class RedisSetCommandsFunctionInvoker extends RedisCommandsFunctionInvoker
+    implements RedisSetCommands {
-    this.region = region;
+    super(region);
-    return CommandFunction.invoke(SADD, key, membersToAdd, region);
+    return invokeCommandFunction(key, SADD, membersToAdd);
-  @SuppressWarnings("unchecked")
-    return CommandFunction.invoke(SREM, key, membersToRemove, region);
+    return invokeCommandFunction(key, SREM, membersToRemove);
-    return CommandFunction.invoke(SMEMBERS, key, null, region);
+    return invokeCommandFunction(key, SMEMBERS);
-    return CommandFunction.invoke(SCARD, key, null, region);
+    return invokeCommandFunction(key, SCARD);
-    return CommandFunction.invoke(SISMEMBER, key, member, region);
+    return invokeCommandFunction(key, SISMEMBER, member);
-    return CommandFunction.invoke(SRANDMEMBER, key, count, region);
+    return invokeCommandFunction(key, SRANDMEMBER, count);
-    return CommandFunction.invoke(SPOP, key, popCount, region);
+    return invokeCommandFunction(key, SPOP, popCount);
-    return CommandFunction.invoke(SSCAN, key, new Object[] {matchPattern, count, cursor}, region);
+    return invokeCommandFunction(key, SSCAN, matchPattern, count, cursor);
-    return CommandFunction.invoke(SUNIONSTORE, destination, setKeys, region);
+    return invokeCommandFunction(destination, SUNIONSTORE, setKeys);
-    return CommandFunction.invoke(SINTERSTORE, destination, setKeys, region);
+    return invokeCommandFunction(destination, SINTERSTORE, setKeys);
-    return CommandFunction.invoke(SDIFFSTORE, destination, setKeys, region);
+    return invokeCommandFunction(destination, SDIFFSTORE, setKeys);
