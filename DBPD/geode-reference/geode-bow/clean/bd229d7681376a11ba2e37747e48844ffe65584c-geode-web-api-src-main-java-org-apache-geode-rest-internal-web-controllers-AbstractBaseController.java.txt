GEODE-1993: postprocess region/key in developer rest api

* This closes #276

+import org.apache.geode.cache.query.Query;
+import org.apache.geode.rest.internal.web.security.RestSecurityService;
-  private static final Logger logger = LogService.getLogger();
-
-
+  private static final Logger logger = LogService.getLogger();
-
+  @Autowired
+  protected RestSecurityService securityService;
-  public ResponseEntity<String> processQueryResponse(Object queryResult, String queryId)
+  public ResponseEntity<String> processQueryResponse(Query query, Object args[], Object queryResult)
-      Collection<Object> result = (Collection<Object>) queryResult;
-      String queryResultAsJson = JSONUtils.convertCollectionToJson(result);
+      Collection processedResults = new ArrayList(((Collection) queryResult).size());
+      for (Object result : (Collection) queryResult) {
+        processedResults.add(securityService.postProcess(null, null, result, false));
+      }
+      String queryResultAsJson = JSONUtils.convertCollectionToJson(processedResults);
-      headers.setLocation(toUri("queries", queryId));
-      return new ResponseEntity<String>(queryResultAsJson, headers, HttpStatus.OK);
+      headers.setLocation(toUri("queries", query.getQueryString()));
+      return new ResponseEntity<>(queryResultAsJson, headers, HttpStatus.OK);
-
+      for (Object key : entries.keySet()) {
+        entries.put(key,
+            (T) securityService.postProcess(regionNamePath, key, entries.get(key), false));
+      }
+    return getValue(regionNamePath, key, true);
+  }
+
+  protected <T> T getValue(final String regionNamePath, final Object key, boolean postProcess) {
-      return (T) value;
+      if (postProcess) {
+        return (T) securityService.postProcess(regionNamePath, key, value, false);
+      } else {
+        return (T) value;
+      }
