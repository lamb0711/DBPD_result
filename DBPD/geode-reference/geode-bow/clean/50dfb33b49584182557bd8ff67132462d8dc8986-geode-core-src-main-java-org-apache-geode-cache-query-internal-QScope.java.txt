GEODE-6588: Cleanup generics and other static analyzer issues. (#3391)


-import java.util.Iterator;
-  // private RuntimeIterator _iterator;
-  private List iterators;
-  boolean _oneIndexLookup = false; // if there is exactly one index lookup in
-                                   // this scope
-  // set if scope evaluation is limited up to this iterator
+  private final List<RuntimeIterator> iterators = new ArrayList<>();
+  /** if there is exactly one index lookup in this scope */
+  boolean _oneIndexLookup = false;
+  /** set if scope evaluation is limited up to this iterator */
-  private int scopeID = 0;
+  private final int scopeID;
-    iterators = new ArrayList();
-    return this.limit;
+    return limit;
-    // _iterator = iterator;
-    // System.out.println("in Scope.resolve "+(_iterator != null ?
-    // _iterator.getName() : null));
-    Iterator iter = iterators.iterator();
-    while (iter.hasNext()) {
-      RuntimeIterator _iterator = (RuntimeIterator) iter.next();
-      if (_iterator != null && name.equals(_iterator.getName()))
+    for (RuntimeIterator _iterator : iterators) {
+      if (_iterator != null && name.equals(_iterator.getName())) {
+      }
-  List getIterators() {
+  List<RuntimeIterator> getIterators() {
-  void setCurrent(RuntimeIterator iterator, Object obj) {
-    iterator.setCurrent(obj);
-  }
-
-
-    return this.scopeID;
+    return scopeID;
