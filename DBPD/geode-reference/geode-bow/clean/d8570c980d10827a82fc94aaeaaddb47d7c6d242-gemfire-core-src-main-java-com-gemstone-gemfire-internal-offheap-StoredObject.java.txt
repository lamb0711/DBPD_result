GEODE-324: defer deserialization of old value in PR put

When a PR put returns the old value our internal messages were deserializing
the values before we get back to the user thread that initiated the operation.
If a thread local class loader is used for the class we need to load during
deserialization then the early deserialization will fail.

Now the deserialization is delayed until the serialized old value gets through
our messaging layer and back to the thread that performed the pr put.

Added junit tests that verify that both PutReplyMessage classes no longer
deserialize their old value.

+import java.io.DataOutput;
+import java.io.IOException;
+
-
+  /**
+   * Take all the bytes in the object and write them to the data output as a byte array.
+   * If the StoredObject is not serialized then its raw byte array is sent.
+   * But if it is serialized then the serialized byte array is sent.
+   * The corresponding de-serialization will need to call readByteArray.
+   * 
+   * @param out
+   *          the data output to send this object to
+   * @throws IOException
+   */
+  void sendAsByteArray(DataOutput out) throws IOException;
+  /**
+   * Take all the bytes in the object and write them to the data output as a byte array.
+   * If the StoredObject is not serialized then an exception will be thrown.
+   * The corresponding deserialization will need to call readObject and will get an
+   * instance of VMCachedDeserializable.
+   * 
+   * @param out
+   *          the data output to send this object to
+   * @throws IOException
+   */
+  void sendAsCachedDeserializable(DataOutput out) throws IOException;
