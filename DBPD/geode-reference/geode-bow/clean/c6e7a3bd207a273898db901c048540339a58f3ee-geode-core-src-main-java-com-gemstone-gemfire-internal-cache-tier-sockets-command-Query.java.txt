client server

client server

-import com.gemstone.gemfire.cache.query.QueryException;
-import com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommand;
-    // Create query
+      // Create query
-        .getLocalQueryService();
-    com.gemstone.gemfire.cache.query.Query query = queryService
-        .newQuery(queryString);
-    Set regionNames = ((DefaultQuery)query).getRegionsInQuery(null);
+          .getLocalQueryService();
+      com.gemstone.gemfire.cache.query.Query query = queryService
+          .newQuery(queryString);
+      Set regionNames = ((DefaultQuery)query).getRegionsInQuery(null);
-    // Authorization check
-    QueryOperationContext queryContext = null;
-    AuthorizeRequest authzRequest = servConn.getAuthzRequest();
-    if (authzRequest != null) {
-      queryContext = authzRequest.queryAuthorize(queryString, regionNames);
-      String newQueryString = queryContext.getQuery();
-      if (queryString != null && !queryString.equals(newQueryString)) {
-        query = queryService.newQuery(newQueryString);
-        queryString = newQueryString;
-        regionNames = queryContext.getRegionNames();
-        if (regionNames == null) {
-          regionNames = ((DefaultQuery)query).getRegionsInQuery(null);
+      // Authorization check
+      QueryOperationContext queryContext = null;
+      AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+      if (authzRequest != null) {
+        queryContext = authzRequest.queryAuthorize(queryString, regionNames);
+        String newQueryString = queryContext.getQuery();
+        if (queryString != null && !queryString.equals(newQueryString)) {
+          query = queryService.newQuery(newQueryString);
+          queryString = newQueryString;
+          regionNames = queryContext.getRegionNames();
+          if (regionNames == null) {
+            regionNames = ((DefaultQuery)query).getRegionsInQuery(null);
+          }
-    }
-    processQuery(msg, query, queryString, regionNames, start, null,
-        queryContext, servConn, true);
+      processQuery(msg, query, queryString, regionNames, start, null,
+          queryContext, servConn, true);
