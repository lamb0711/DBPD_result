GEODE-5269 CommitConflictException after TransactionInDoubtException

Before sending a client a TransactionInDoubtException that is caused by
a server shutting down we now wait a bit for the server to finish shutting
down.  This allows any locks it held to be released and avoids a
CommitConflictException if the client should immediately try another
transaction with the same key(s).

The server will wait up to 1/2 of the client's read-timeout for the
other server to finish shutting down.

+    int memberTimeout = this.services.getConfig().getDistributionConfig().getMemberTimeout();
+    return waitForDeparture(mbr, memberTimeout * 4);
+  }
+
+  /*
+   * (non-Javadoc) MembershipManager method: wait for the given member to be gone. Throws
+   * TimeoutException if the wait goes too long
+   *
+   * @see
+   * org.apache.geode.distributed.internal.membership.MembershipManager#waitForDeparture(org.apache.
+   * geode.distributed.DistributedMember)
+   */
+  public boolean waitForDeparture(DistributedMember mbr, int timeoutMs)
+      throws TimeoutException, InterruptedException {
-    int memberTimeout = this.services.getConfig().getDistributionConfig().getMemberTimeout();
-    long pauseTime = (memberTimeout < 1000) ? 100 : memberTimeout / 10;
+    long pauseTime = (timeoutMs < 4000) ? 100 : timeoutMs / 40;
-          // waited over 4 * memberTimeout ms. Give up at this point
