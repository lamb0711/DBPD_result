GEODE-7704: Replacing inheritance of MemberIdentifierImpl with delagation (#4636)

* Deduplicate fields betweeen MemberIdentifierImpl and GMSMemberData

Moving all state down into GMSMemberData and removing duplicate fields
isPartial and versionObject. GMSMemberData now has all of the state of a
member.

* Delegate rather than inherit InternalDistributedMember

Delegating to MemberIdentifierImpl, rather than inheriting from it.

* Delegate to MemberIdentifier, rather than MemberIdentifierImpl

Having InternalDistributedMember delegate to MemberIdentifier, rather than
MemberIdentifierImpl, so that we are not relying on the concrete class and all
required methods are part of the interface. As a result, adding a number of
additional methods to the MemberIdentifier interface.

* Removing uses of getMemberData

Removing uses of getMemberData and adding methods to MemberIdentifier that
delegate to memberData.

* Hiding MemberIdentiferImpl

Using MemberIdentifier everywhere insteand of MemberIdentiferImpl. Still need to
move MemberIdentiferImpl to an internal package.

* Making PMD happy

Marking the MemberIdentifierFactory as immutable.

* Fixing NPE in getGroups

The MemberIdentifierImpl.getGroups needs to check for a null array. Places that
used to call getMemberData.getGroups were throwing an NPE.

* Fixing a test that used MemberIdentifierFactoryImpl

This factory is not going to play well with other parts of the test that are
generating InternalDistributedMembers.

* Fixing AnalyzeSerializablesJUnitTest

InternalDistributedMember now has new serialization methods that delegate to
the methods that it previously was just inheriting.

* Fixing a unit test failure due to mocking MemberData

InternalDistributedMemberTest was mocking the underlying MemberData and
changing state on the InternalDistributedMember. Now that all state is
delegated to the MemberData, this test was failing because the mock was not
reflecting the state changes.

Co-authored-by: Ernie Burghardt <eburghardt@pivotal.io>

+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.io.ObjectInput;
+import java.io.ObjectOutput;
+import java.util.function.Function;
+
+import org.jgroups.util.UUID;
+import org.apache.geode.internal.serialization.DeserializationContext;
+import org.apache.geode.internal.serialization.SerializationContext;
+
+  void setDurableId(String id);
+
+  void setDurableTimeout(int newValue);
+
+  int getDirectChannelPort();
+
+  String getName();
+
+  void addFixedToString(StringBuilder sb, boolean useIpAddress);
+
+  void writeExternal(ObjectOutput out) throws IOException;
+
+  void readExternal(ObjectInput in) throws IOException, ClassNotFoundException;
+
+  void toDataPre_GFE_9_0_0_0(DataOutput out, SerializationContext context) throws IOException;
+
+  void toDataPre_GFE_7_1_0_0(DataOutput out, SerializationContext context) throws IOException;
+
+  void fromDataPre_GFE_9_0_0_0(DataInput in, DeserializationContext context)
+      throws IOException, ClassNotFoundException;
+
+  void fromDataPre_GFE_7_1_0_0(DataInput in, DeserializationContext context)
+      throws IOException, ClassNotFoundException;
+
+  void _readEssentialData(DataInput in, Function<InetAddress, String> hostnameResolver)
+      throws IOException, ClassNotFoundException;
+
+  void writeEssentialData(DataOutput out) throws IOException;
+
+  void setPort(int p);
+
+  String getHost();
+
+  int getProcessId();
+
+  String getId();
+
+  String getUniqueId();
+
+  void setVersionObjectForTest(Version v);
+
+  void setUniqueTag(String tag);
+
+  int compareTo(MemberIdentifier memberIdentifier, boolean compareMemberData,
+      boolean compareViewIds);
+
+  String getUniqueTag();
+
+  void setName(String name);
+
+  String getDurableId();
+
+  int getDurableTimeout();
+
+  void setHostName(String hostName);
+
+  void setProcessId(int id);
+
+  boolean hasUUID();
+
+  long getUuidLeastSignificantBits();
+
+  long getUuidMostSignificantBits();
+
+  boolean isNetworkPartitionDetectionEnabled();
+
+  void setUUID(UUID randomUUID);
+
+  void setMemberWeight(byte b);
+
+  void setUdpPort(int i);
+
+  UUID getUUID();
