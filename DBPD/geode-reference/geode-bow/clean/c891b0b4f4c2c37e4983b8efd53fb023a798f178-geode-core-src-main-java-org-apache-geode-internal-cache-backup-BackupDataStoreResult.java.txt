GEODE-5405: Refactor backup to remove duplication and clean up

-public class BackupDataStoreResult {
+class BackupDataStoreResult {
-  private Map<DistributedMember, Set<PersistentID>> existingDataStores;
+  private final Map<DistributedMember, Set<PersistentID>> existingDataStores;
+  private final Map<DistributedMember, Set<PersistentID>> successfulMembers;
-  private Map<DistributedMember, Set<PersistentID>> successfulMembers;
-
-  public BackupDataStoreResult(Map<DistributedMember, Set<PersistentID>> existingDataStores,
+  BackupDataStoreResult(Map<DistributedMember, Set<PersistentID>> existingDataStores,
-  public Map<DistributedMember, Set<PersistentID>> getExistingDataStores() {
-    return this.existingDataStores;
+  Map<DistributedMember, Set<PersistentID>> getExistingDataStores() {
+    return existingDataStores;
-  public Map<DistributedMember, Set<PersistentID>> getSuccessfulMembers() {
-    return this.successfulMembers;
+  Map<DistributedMember, Set<PersistentID>> getSuccessfulMembers() {
+    return successfulMembers;
+  @Override
-        .append("existingDataStores=").append(this.existingDataStores)
-        .append("; successfulMembers=").append(this.successfulMembers).append("]").toString();
+        .append("existingDataStores=").append(existingDataStores)
+        .append("; successfulMembers=").append(successfulMembers).append("]").toString();
