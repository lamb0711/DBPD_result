GEODE-5070: Use a random member for describe & list jdbc connector commands (#1849)

         Retrieves connections & mappings from CC(if running) 
         or from a random member(if CC not running)
-import org.springframework.shell.core.annotation.CliOption;
-import org.apache.geode.management.cli.ConverterHint;
-  public Result listMapping(
-      @CliOption(key = {CliStrings.MEMBER}, optionContext = ConverterHint.MEMBERIDNAME,
-          help = LIST_MAPPINGS_MEMBER__HELP) String onMember) {
+  public Result listMapping() {
+    Collection<ConnectorService.RegionMapping> mappings = null;
-    // when member is specified, we go to each member and describe what are on the members
-    if (onMember != null) {
-      DistributedMember member = getMember(onMember);
-      if (member == null) {
-        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-      }
-
-      List<?> result =
-          (List<?>) executeFunction(new ListMappingFunction(), null, member).getResult();
-      Set<ConnectorService.RegionMapping> mappings =
-          (Set<ConnectorService.RegionMapping>) result.get(0);
-      TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
-      boolean connectionsExist = fillTabularResultData(mappings, tabularResultData);
-
-      return createResult(tabularResultData, connectionsExist);
-    }
-
-    // otherwise, use cluster configuration to describe the connections
+    // check if CC is available and use it to describe the connection
-    if (ccService == null) {
-      return ResultBuilder.createInfoResult(
-          "cluster configuration service is not running. Use --member option to describe mappings on specific members.");
+    if (ccService != null) {
+      ConnectorService service =
+          ccService.getCustomCacheElement("cluster", "connector-service", ConnectorService.class);
+      if (service != null) {
+        mappings = service.getRegionMapping();
+      }
+    } else {
+      // otherwise get it from any member
+      Set<DistributedMember> members = findMembers(null, null);
+      if (members.size() > 0) {
+        DistributedMember targetMember = members.iterator().next();
+        List<?> result =
+            (List<?>) executeFunction(new ListMappingFunction(), null, targetMember).getResult();
+        if (!result.isEmpty()) {
+          mappings = (Collection<ConnectorService.RegionMapping>) result.get(0);
+        }
+      }
-    ConnectorService service =
-        ccService.getCustomCacheElement("cluster", "connector-service", ConnectorService.class);
-    if (service == null) {
-      return ResultBuilder.createInfoResult(NO_MAPPINGS_FOUND);
+    if (mappings == null) {
+      return ResultBuilder.createInfoResult("No mappings found");
-    boolean mappingsExist = fillTabularResultData(service.getRegionMapping(), tabularResultData);
+    boolean mappingsExist = fillTabularResultData(mappings, tabularResultData);
