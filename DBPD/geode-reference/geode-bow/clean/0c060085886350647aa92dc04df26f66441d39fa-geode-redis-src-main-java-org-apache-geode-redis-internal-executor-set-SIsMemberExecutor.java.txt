GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4781)

* Revert "Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)"

This reverts commit f0982cdedf1b122f734919d0647434cca33ec254.

* Fix sporadic test failures for concurrent HSetNX
+import java.util.Set;
-  private final int EXISTS = 1;
+  private static final int EXISTS = 1;
-  private final int NOT_EXISTS = 0;
+  private static final int NOT_EXISTS = 0;
-    if (commandElems.size() < 3) {
+    if (commandElems.size() != 3) {
-    ByteArrayWrapper member = new ByteArrayWrapper(commandElems.get(2));
-
-    checkDataType(key, RedisDataType.REDIS_SET, context);
-    @SuppressWarnings("unchecked")
-    Region<ByteArrayWrapper, Boolean> keyRegion =
-        (Region<ByteArrayWrapper, Boolean>) context.getRegionProvider().getRegion(key);
-
-    if (keyRegion == null) {
+    if (!context.getKeyRegistrar().isRegistered(key)) {
-    if (keyRegion.containsKey(member))
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), EXISTS));
-    else
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
-  }
+    ByteArrayWrapper member = new ByteArrayWrapper(commandElems.get(2));
+    Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = this.getRegion(context);
+
+    Set<ByteArrayWrapper> set = region.get(key);
+
+    if (set == null) {
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
+      return;
+    }
+
+    if (set.contains(member)) {
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), EXISTS));
+      // save key for next quick lookup
+      context.getKeyRegistrar().register(key, RedisDataType.REDIS_SET);
+    } else {
+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));
+    }
+  }
