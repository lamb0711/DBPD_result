Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
- * Enumerated type for region subscription interest policy.
- * The interest policy specifies what data a subscriber is interested in having
- * in it's region.
+ * Enumerated type for region subscription interest policy. The interest policy specifies what data
+ * a subscriber is interested in having in it's region.
-    
+
-   * This subscriber is interested in all data.
-   * More specifically operations done in this cache and
+   * This subscriber is interested in all data. More specifically operations done in this cache and
-   * When combined with {@link DataPolicy#EMPTY} this region will receive
-   * events for every distributed operation but will not store the data.
+   * When combined with {@link DataPolicy#EMPTY} this region will receive events for every
+   * distributed operation but will not store the data.
-   * When combined with {@link DataPolicy#NORMAL} or
-   * {@link DataPolicy#PRELOADED} this region will accept
-   * {@link Region#create(Object, Object)} operations done remotely. Without
-   * the <code>ALL</code> interest policy, <code>NORMAL</code> and
-   * <code>PRELOADED</code> ignore <code>creates</code> that the region
-   * does  not have an existing entry for.
+   * When combined with {@link DataPolicy#NORMAL} or {@link DataPolicy#PRELOADED} this region will
+   * accept {@link Region#create(Object, Object)} operations done remotely. Without the
+   * <code>ALL</code> interest policy, <code>NORMAL</code> and <code>PRELOADED</code> ignore
+   * <code>creates</code> that the region does not have an existing entry for.
-   * When combined with the {@link DataPolicy#withReplication replication
-   * policies} this interest has no effect.
+   * When combined with the {@link DataPolicy#withReplication replication policies} this interest
+   * has no effect.
-   * When combined with {@link DataPolicy#PARTITION} this interest policy
-   * causes cache listeners to be notified of changes regardless of the
-   * physical location of the data affected.  That is, a listener in a VM
-   * using this policy will receive notification of all changes to the
-   * partitioned region.
+   * When combined with {@link DataPolicy#PARTITION} this interest policy causes cache listeners to
+   * be notified of changes regardless of the physical location of the data affected. That is, a
+   * listener in a VM using this policy will receive notification of all changes to the partitioned
+   * region.
-   * This subscriber is interested in data that is already in its cache.
-   * More specifically operations done in this cache and
-   * distributed operations done in remote caches.
+   * This subscriber is interested in data that is already in its cache. More specifically
+   * operations done in this cache and distributed operations done in remote caches.
-   * When combined with {@link DataPolicy#EMPTY} this region will never
-   * receive events for distributed operations since its content is always
-   * empty.  It will continue to get events for operations done locally.
+   * When combined with {@link DataPolicy#EMPTY} this region will never receive events for
+   * distributed operations since its content is always empty. It will continue to get events for
+   * operations done locally.
-   * When combined with {@link DataPolicy#NORMAL} or
-   * {@link DataPolicy#PRELOADED} this region will accept remote operations
-   * done to entries it already has in its cache.
+   * When combined with {@link DataPolicy#NORMAL} or {@link DataPolicy#PRELOADED} this region will
+   * accept remote operations done to entries it already has in its cache.
-   * When combined with the {@link DataPolicy#withReplication replication
-   * policies} * this interest has no effect.
+   * When combined with the {@link DataPolicy#withReplication replication policies} * this interest
+   * has no effect.
-   * When combined with {@link DataPolicy#PARTITION} this interest policy
-   * causes cache listeners to be notified in the VM holding the affected data.
-   *  That is, listeners are only notified if the affected* key-value pair is
-   * in the same process as the listener.
+   * When combined with {@link DataPolicy#PARTITION} this interest policy causes cache listeners to
+   * be notified in the VM holding the affected data. That is, listeners are only notified if the
+   * affected* key-value pair is in the same process as the listener.
-    
+
-    
+
-    return VALUES[ordinal];  // Canonicalize
+    return VALUES[ordinal]; // Canonicalize
-    
-    
+
+
-    
+
-    
-    
+
+
+   * 
+
+   * 
+
+   * 
-  
-  /** Returns a string representation for this interest policy.
-     * @return the name of this interest policy.
-     */
+
+  /**
+   * Returns a string representation for this interest policy.
+   * 
+   * @return the name of this interest policy.
+   */
