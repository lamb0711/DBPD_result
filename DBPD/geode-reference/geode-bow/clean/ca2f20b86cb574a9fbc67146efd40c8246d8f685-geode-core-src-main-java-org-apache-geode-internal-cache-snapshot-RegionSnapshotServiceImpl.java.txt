GEODE-3448: Implement and expose parallel snapshot import

This closes #721

-import java.io.FileFilter;
+import org.apache.logging.log4j.LogManager;
+
-      return snapshot.listFiles(new FileFilter() {
-        @Override
-        public boolean accept(File pathname) {
-          return !pathname.isDirectory();
-        }
-      });
+      return snapshot.listFiles(pathname -> !pathname.isDirectory());
-    return new SnapshotOptionsImpl<K, V>();
+    return new SnapshotOptionsImpl<>();
-      snapshotInParallel(new ParallelArgs<K, V>(snapshot, format, options),
+      snapshotInParallel(new ParallelArgs<>(snapshot, format, options),
-      snapshotInParallel(new ParallelArgs<K, V>(snapshot, format, options),
-          new ParallelImportFunction<K, V>());
-      return;
+      snapshotInParallel(new ParallelArgs<>(snapshot, format, options),
+          new ParallelImportFunction<>());
-    LinkedList<Future<?>> puts = new LinkedList<Future<?>>();
+    LinkedList<Future<?>> puts = new LinkedList<>();
-      Map<K, V> buffer = new HashMap<K, V>();
+      Map<K, V> buffer = new HashMap<>();
-            final Map<K, V> copy = new HashMap<K, V>(buffer);
+            final Map<K, V> copy = new HashMap<>(buffer);
-                .getDistributionManager().getWaitingThreadPool().submit(new Runnable() {
-                  @Override
-                  public void run() {
-                    local.basicImportPutAll(copy, !options.shouldInvokeCallbacks());
-                  }
-                });
+                .getDistributionManager().getWaitingThreadPool().submit((Runnable) () -> local
+                    .basicImportPutAll(copy, !options.shouldInvokeCallbacks()));
-      return new ClientExporter<K, V>(PoolManager.find(pool));
+      return new ClientExporter<>(PoolManager.find(pool));
-        || region instanceof LocalDataSet || (((SnapshotOptionsImpl<K, V>) options).isParallelMode()
+        || region instanceof LocalDataSet || (options.isParallelMode()
-      return new LocalExporter<K, V>();
+      return new LocalExporter<>();
-    return new WindowedExporter<K, V>();
+    return new WindowedExporter<>();
-            if (f.isDirectory() || !f.exists()) {
-              throw new IOException(
-                  LocalizedStrings.Snapshot_INVALID_IMPORT_FILE.toLocalizedString(f));
+            if (f.exists()) {
+              local.getSnapshotService().load(f, args.getFormat(), args.getOptions());
+            } else {
+              LogManager.getLogger(RegionSnapshotServiceImpl.class)
+                  .info("Nothing to import as location does not exist: " + f.getAbsolutePath());
-            local.getSnapshotService().load(f, args.getFormat(), args.getOptions());
