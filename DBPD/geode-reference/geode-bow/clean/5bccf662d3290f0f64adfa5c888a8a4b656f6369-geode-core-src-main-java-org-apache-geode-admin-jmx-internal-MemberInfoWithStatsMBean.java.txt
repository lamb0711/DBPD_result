GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-      logger.warn(
-          LocalizedMessage.create(
-              LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_FOR_OPERATION_0, "getMembers"),
+      logger.warn("Exception occurred for operation: getMembers",
-          LocalizedMessage.create(
-              LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_FOR_OPERATION_0, "getMembers"),
+          "Exception occurred for operation: getMembers",
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_FOR_OPERATION_0_FOR_MEMBER_1,
-            new Object[] {"getRegions", memberId}), e);
+        logger.warn(String.format("Exception occurred for operation: %s for member: %s",
+            new Object[] {"getRegions", memberId}),
+            e);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_FOR_OPERATION_0_FOR_MEMBER_1,
-            new Object[] {"getRegions", memberId}), e);
+        logger.warn(String.format("Exception occurred for operation: %s for member: %s",
+            new Object[] {"getRegions", memberId}),
+            e);
-            logger.info(LocalizedMessage.create(
-                LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INTIALIZING_0_CONTINUING,
-                cacheVms[i].getId()), e);
+            logger.info(String.format(
+                "Exception occurred while intializing : %s. Contiuning with next  ...",
+                cacheVms[i].getId()),
+                e);
-            logger.info(LocalizedMessage.create(
-                LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INTIALIZING_0_CONTINUING,
-                appVms[i].getId()), e);
+            logger.info(String.format(
+                "Exception occurred while intializing : %s. Contiuning with next  ...",
+                appVms[i].getId()),
+                e);
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INTIALIZING), e);
+      logger.warn("Exception occurred while intializing.", e);
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INTIALIZING), e);
+      logger.warn("Exception occurred while intializing.", e);
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INTIALIZING_0_CONTINUING,
-            subRegion.getFullPath()), e);
+        logger.info(
+            String.format("Exception occurred while intializing : %s. Contiuning with next  ...",
+                subRegion.getFullPath()),
+            e);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_FOR_OPERATION_0_FOR_MEMBER_1,
-            new Object[] {"getMemberDetails", memberId}), e);
+        logger.warn(String.format("Exception occurred for operation: %s for member: %s",
+            new Object[] {"getMemberDetails", memberId}),
+            e);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_FOR_OPERATION_0_FOR_MEMBER_1,
-            new Object[] {"getMemberDetails", memberId}), e);
+        logger.warn(String.format("Exception occurred for operation: %s for member: %s",
+            new Object[] {"getMemberDetails", memberId}),
+            e);
-        logger.warn(LocalizedMessage.create(LocalizedStrings.ONE_ARG,
-            "Exception occurred while getting region details."), e);
+        logger.warn("Exception occurred while getting region details.", e);
-        logger.warn(LocalizedMessage.create(LocalizedStrings.ONE_ARG,
-            "Exception occurred while getting region details."), e);
+        logger.warn("Exception occurred while getting region details.", e);
-          logger.info(LocalizedMessage.create(
-              LocalizedStrings.MemberInfoWithStatsMBean_REINITIALIZING_STATS_FOR_0,
-              member.getId()));
+          logger.info("Re-initializing statistics for: {}",
+              member.getId());
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INITIALIZING_STATISICS_FOR_0,
-            source.toString()), e);
+        logger.info(String.format("Exception while initializing statistics for: %s",
+            source.toString()),
+            e);
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INITIALIZING_STATISICS_FOR_0,
-            source.toString()), e);
+        logger.info(String.format("Exception while initializing statistics for: %s",
+            source.toString()),
+            e);
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_INITIALIZING_STATISICS_FOR_0,
-            source.toString()), e);
+        logger.info(String.format("Exception while initializing statistics for: %s",
+            source.toString()),
+            e);
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.MemberInfoWithStatsMBean_EXCEPTION_WHILE_REGISTERING_NOTIFICATION_LISTENER_FOR_0,
-            source.toString()), e);
+        logger.info(String.format("Exception while registering notification listener for: %s",
+            source.toString()),
+            e);
-    } /*
-       * else if (AdminDistributedSystemJmxImpl.NOTIF_MEMBER_LEFT.equals(notification.getType()) ||
-       * AdminDistributedSystemJmxImpl.NOTIF_MEMBER_CRASHED.equals(notification.getType())) {
-       * ObjectName source = (ObjectName) notifSource; //unregister this listener from left member's
-       * cache/region notifications try { unregisterNotificationListener(source); } catch
-       * (OperationsException e) { logwriter.info(LocalizedMessage.create(LocalizedStrings.
-       * MemberInfoWithStatsMBean_EXCEPTION_WHILE_UNREGISTERING_NOTIFICATION_LISTENER_FOR_0,
-       * source.toString(), e); } } else if
-       * (AdminDistributedSystemJmxImpl.NOTIF_ADMIN_SYSTEM_DISCONNECT.equals(notification.getType())
-       * ) { String source = (String) notifSource; //This notification does not have ObjectName as a
-       * source. try { ObjectName instance = ObjectName.getInstance(source);
-       * unregisterNotificationListener(instance); } catch (OperationsException e) {
-       * logwriter.info(LocalizedMessage.create(LocalizedStrings.
-       * MemberInfoWithStatsMBean_EXCEPTION_WHILE_UNREGISTERING_NOTIFICATION_LISTENER_FOR_0,
-       * source.toString(), e); } catch (NullPointerException e) {
-       * logwriter.info(LocalizedMessage.create(LocalizedStrings.
-       * MemberInfoWithStatsMBean_EXCEPTION_WHILE_UNREGISTERING_NOTIFICATION_LISTENER_FOR_0,
-       * source.toString(), e); } }
-       */
-    // NOTIF_ALERT is sent as is
+    }
