GEODE-11: Refactor CollectorManager interface

CollectorManager creates new collectors and merges results of the collectors.
Earlier the merge result type could be different from the collector type.
CollectorManager could actually use a collector itself to merge the results.
That way the actions on members and search coordinator will be the same.

https://reviews.apache.org/r/38320/

+import com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepository;
- * This class is used to aggregate search results from multiple search requests.
+ * {@link CollectorManager}s create instances of {@link IndexResultCollector} and utility methods to aggregate results
+ * collected by individual collectors. The collectors created by this class are primarily used for collecting results
+ * from {@link IndexRepository}s. The collectors can also be used for aggregating results of other collectors of same
+ * type. Typically search result aggregation is completed in two phases. First at a member level for merging results
+ * from local buckets. And then at search coordinator level for merging results from members. Use of same collector in
+ * both phases is expected to produce deterministic merge result irrespective of the way buckets are distributed.
- * @param <T> Type of reduce result
-public interface CollectorManager<T, C extends IndexResultCollector> {
+public interface CollectorManager<C extends IndexResultCollector> {
-  T reduce(Collection<IndexResultCollector> results) throws IOException;
+  C reduce(Collection<C> results) throws IOException;
