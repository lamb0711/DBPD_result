GEODE-7503: Cleanup GemFireCacheImpl (#4436)

* Move inner-classes to bottom of outer class

* Move fields to top of class

* More fields

* Fixup

* Fix IJ inspection warnings

* Remove bug system ticket numbers

* Cleanup javadocs, toString, and comments

* Use @VisibleForTesting annotation

* Move toString method and backupFiles field

* Pull javadocs up to interfaces.
Define VisibleForTesting methods in InternalCacheForTesting.
Identify more methods as VisibleForTesting.

* Fixup javadocs and minor warnings in Cache interfaces.

* Move unchecked util methods to UncheckedUtils inner class

* Move static constants and fields to top of class.
Rename FIVE_HOURS to FIVE_HOURS_MILLIS.
Review older TODOs.

* Move volatile fields above non-final fields

* Move non-final fields below volatile and final fields

* Move final fields above volatile fields

* wip

* Adjust whitespace and line feeds.
Remove more TODOs and comments.
Fix spelling typo.

* Import various static methods and constants
Adjust more line feeds
Adjust more white space

* Weaken declared types where it makes sense
Add more static imports

* Remove unnecessary uses of final on local vars

* Remove uncessary uses of final on local vars

* Fixup unchecked types
Restore return types to match the interfaces

* Minor cleanup

* Change Consumer<Void> to Runnable (duh)

* Adjust line feeds of large if-statement

* Remove SuppressWarnings

* Fix AssemblyContentsIntegrationTest

* Fixup GemFireCacheImpl

+import org.apache.geode.annotations.VisibleForTesting;
+import org.apache.geode.internal.cache.eviction.HeapEvictor;
+import org.apache.geode.internal.cache.eviction.OffHeapEvictor;
-  public InternalQueryService getQueryService() {
+  public QueryService getQueryService() {
+    return queryService;
+  }
+
+  @Override
+  public InternalQueryService getInternalQueryService() {
+  @VisibleForTesting
+  @VisibleForTesting
-  public int getUpTime() {
+  public long getUpTime() {
+  @VisibleForTesting
+  @VisibleForTesting
+  @VisibleForTesting
-  public LocalRegion getRegionByPath(final String path) {
+  public <K, V> Region<K, V> getRegionByPath(String path) {
+    return null;
+  }
+
+  @Override
+  public InternalRegion getInternalRegionByPath(String path) {
-  public void determineDefaultPool() {
-    throw new UnsupportedOperationException("Should not be invoked");
-  }
-
-  @Override
+  @VisibleForTesting
+  @VisibleForTesting
+  public HeapEvictor getHeapEvictor() {
+    throw new UnsupportedOperationException("Should not be invoked");
+  }
+
+  @Override
+  @VisibleForTesting
+  public OffHeapEvictor getOffHeapEvictor() {
+    throw new UnsupportedOperationException("Should not be invoked");
+  }
+
+  @Override
