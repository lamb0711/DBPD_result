Merge remote-tracking branch 'origin/develop' into feature/GEODE-3239

-package org.apache.geode.protocol.protobuf;
+package org.apache.geode.internal.protocol.protobuf;
+
+import org.apache.logging.log4j.Logger;
-import org.apache.geode.internal.protocol.protobuf.ClientProtocol;
-import org.apache.geode.protocol.protobuf.registry.OperationContextRegistry;
-import org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities;
-import org.apache.geode.serialization.SerializationService;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.internal.protocol.protobuf.registry.OperationContextRegistry;
+import org.apache.geode.internal.protocol.protobuf.statistics.ProtobufClientStatistics;
+import org.apache.geode.internal.protocol.protobuf.utilities.ProtobufResponseUtilities;
+import org.apache.geode.internal.serialization.SerializationService;
+
+import static org.apache.geode.internal.protocol.protobuf.ProtocolErrorCode.*;
+  private static final Logger logger = LogService.getLogger(ProtobufOpsProcessor.class);
+    logger.debug("Processing request of type {}", requestType);
-        result = Failure.of(ProtobufResponseUtilities.makeErrorResponse(
-            ProtocolErrorCode.AUTHORIZATION_FAILED.codeValue,
+        logger.warn("Received unauthorized request");
+        recordAuthorizationViolation(context);
+        result = Failure.of(ProtobufResponseUtilities.makeErrorResponse(AUTHORIZATION_FAILED,
-      result = Failure.of(ProtobufResponseUtilities.makeErrorResponse(
-          ProtocolErrorCode.UNSUPPORTED_OPERATION.codeValue,
+      logger.error("Invalid execution context found for operation {}", requestType);
+      result = Failure.of(ProtobufResponseUtilities.makeErrorResponse(UNSUPPORTED_OPERATION,
+
+  private void recordAuthorizationViolation(MessageExecutionContext context) {
+    ProtobufClientStatistics statistics = (ProtobufClientStatistics) context.getStatistics();
+    statistics.incAuthorizationViolations();
+  }
