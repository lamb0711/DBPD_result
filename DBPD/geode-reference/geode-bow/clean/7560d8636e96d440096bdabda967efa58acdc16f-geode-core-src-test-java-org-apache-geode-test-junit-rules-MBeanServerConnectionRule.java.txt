Merge branch 'develop' into feature/GEODE-3640

-
-package org.apache.geode.test.dunit.rules;
+package org.apache.geode.test.junit.rules;
-import org.apache.geode.management.internal.security.AccessControlMXBean;
-import org.apache.geode.test.junit.rules.DescribedExternalResource;
-import org.awaitility.Awaitility;
-import org.junit.runner.Description;
-
+
+import org.awaitility.Awaitility;
+import org.junit.runner.Description;
+
+import org.apache.geode.management.internal.security.AccessControlMXBean;
+
+ * <p>
-  public MBeanServerConnectionRule() {}
+  public MBeanServerConnectionRule() {
+    // nothing
+  }
+  @Override
+  protected void before(Description description) throws Exception {
+    // do not auto connect if port is not set
+    if (portSupplier == null)
+      return;
+
+    // do not auto connect if no ConnectionConfiguration is defined.
+    ConnectionConfiguration config = description.getAnnotation(ConnectionConfiguration.class);
+    if (config == null)
+      return;
+
+    Map<String, String[]> env = new HashMap<>();
+    String user = config.user();
+    String password = config.password();
+    env.put(JMXConnector.CREDENTIALS, new String[] {user, password});
+    connect(null, portSupplier.get(), env);
+  }
+
+  @Override
+  protected void after(Description description) throws Exception {
+    disconnect();
+  }
+
-  @Override
-  protected void before(Description description) throws Throwable {
-    // do not auto connect if port is not set
-    if (portSupplier == null)
-      return;
-
-    // do not auto connect if no ConnectionConfiguration is defined.
-    ConnectionConfiguration config = description.getAnnotation(ConnectionConfiguration.class);
-    if (config == null)
-      return;
-
-    Map<String, String[]> env = new HashMap<>();
-    String user = config.user();
-    String password = config.password();
-    env.put(JMXConnector.CREDENTIALS, new String[] {user, password});
-    connect(null, portSupplier.get(), env);
-  }
-
-  /**
-   * Override to tear down your specific external resource.
-   */
-  @Override
-  protected void after(Description description) throws Throwable {
-    disconnect();
-  }
-
-
