GEODE-6767: Don't lose metadata when altering a PR

The methods on a PR to alter the time-to-live and idle-time were losing
some of the metadata in the PartitionRegionConfig, including the
isColocationComplete flag. This causes issues with rebalancing and
bucket creation.
-  public void updatePRConfig(PartitionRegionConfig prConfig, boolean putOnlyIfUpdated) {
+  /**
+   *
+   * Set the global PartitionedRegionConfig metadata for this region.
+   *
+   * This method should *only* be called while holding the partitioned region lock. For code
+   * that is mutating the config, use
+   * {@link #updatePartitionRegionConfig(PartitionRegionConfigModifier)}
+   * instead.
+   */
+  void updatePRConfig(PartitionRegionConfig prConfig, boolean putOnlyIfUpdated) {
-    updatePRConfig(getPRConfigWithLatestExpirationAttributes(), false);
+    updatePartitionRegionConfig(config -> config.setEntryTimeToLive(timeToLive));
-  private PartitionRegionConfig getPRConfigWithLatestExpirationAttributes() {
-    PartitionRegionConfig prConfig = getPRRoot().get(getRegionIdentifier());
-
-    return new PartitionRegionConfig(prConfig.getPRId(), prConfig.getFullPath(),
-        prConfig.getPartitionAttrs(), prConfig.getScope(), prConfig.getEvictionAttributes(),
-        this.getRegionIdleTimeout(), this.getRegionTimeToLive(), this.getEntryIdleTimeout(),
-        this.getEntryTimeToLive(), prConfig.getGatewaySenderIds());
-  }
-
-    updatePRConfig(getPRConfigWithLatestExpirationAttributes(), false);
+
+    updatePartitionRegionConfig(config -> config.setEntryIdleTimeout(idleTimeout));
