Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * These fakes are essentially mock objects with some limited
- * functionality. For example the fake cache can return a fake
- * distributed system.
+ * These fakes are essentially mock objects with some limited functionality. For example the fake
+ * cache can return a fake distributed system.
- * All of the fakes returned by this class are Mockito.mocks, so
- * they can be modified by using Mockito stubbing, ie
+ * All of the fakes returned by this class are Mockito.mocks, so they can be modified by using
+ * Mockito stubbing, ie
- * cache = Fakes.cache();
- * Mockito.when(cache.getName()).thenReturn(...)
+ * cache = Fakes.cache(); Mockito.when(cache.getName()).thenReturn(...)
+ * 
- * Please help extend this class by adding other commonly
- * used objects to this collection of fakes.
+ * Please help extend this class by adding other commonly used objects to this collection of fakes.
-  
+
-   * A fake cache, which contains a fake distributed
-   * system, distribution manager, etc.
+   * A fake cache, which contains a fake distributed system, distribution manager, etc.
-    
+
-    
+
-    
+
-    
+
-    
+
-   * A fake region, which contains a fake cache and some other
-   * fake attributes
+   * A fake region, which contains a fake cache and some other fake attributes
-   * Add real map behavior to a mock region. Useful for tests
-   * where you want to mock region that just behaves like a map.
+   * Add real map behavior to a mock region. Useful for tests where you want to mock region that
+   * just behaves like a map.
+   * 
-    //Allow the region to behave like a fake map
+    // Allow the region to behave like a fake map
-    when(mock.get(any()))
-      .then(invocation -> underlyingMap.get(invocation.getArguments()[0]));
-    when(mock.put(any(), any()))
-      .then(invocation -> underlyingMap.put(invocation.getArguments()[0], invocation.getArguments()[1]));
+    when(mock.get(any())).then(invocation -> underlyingMap.get(invocation.getArguments()[0]));
+    when(mock.put(any(), any())).then(invocation -> underlyingMap.put(invocation.getArguments()[0],
+        invocation.getArguments()[1]));
-  private Fakes() {
-  }
+  private Fakes() {}
