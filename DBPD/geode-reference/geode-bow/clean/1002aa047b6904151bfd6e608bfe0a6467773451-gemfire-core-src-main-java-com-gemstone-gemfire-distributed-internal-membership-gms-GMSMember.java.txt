GEODE-77 improved handling of join requests having the same host:port as a previous member

This adds a check of the UUID bytes in an address's NetMember in
compareTo to keep a new address from matching an old one.  The
test TXDistributedDUnitTest was failing consistently when a member
crashed its distributed system and then tried to reconnect immediately.
This is due to how JGroups allocates its ports starting with the first
number in the port range and sequencing through until it finds one that's
available.  GemFire had used a random selection algorithm for this.

-  /**
-   * Establishes an order between 2 addresses. Assumes other contains non-null IpAddress.
-   * Excludes channel_name from comparison.
-   * @return 0 for equality, value less than 0 if smaller, greater than 0 if greater.
-   */
-  public int compare(NetMember other) {
-    return compareTo(other);
-  }
-
-  /**
+  /*
-  public int compareTo(Object o) {
+  public int compareTo(NetMember o) {
-    if ((o == null) || !(o instanceof GMSMember)) {
+    if (o == null || !(o instanceof GMSMember) ) {
+    if (result == 0 && this.uuidMSBs != 0 && his.uuidMSBs != 0) {
+      if (this.uuidMSBs < his.uuidMSBs) {
+        result = -1;
+      } else if (his.uuidMSBs < this.uuidMSBs) {
+        result = 1;
+      } else if (this.uuidLSBs < his.uuidLSBs) {
+        result = -1;
+      } else if (his.uuidLSBs < this.uuidLSBs) {
+        result = 1;
+      }
+    }
-    return compareTo(obj) == 0;
+    return compareTo((GMSMember)obj) == 0;
