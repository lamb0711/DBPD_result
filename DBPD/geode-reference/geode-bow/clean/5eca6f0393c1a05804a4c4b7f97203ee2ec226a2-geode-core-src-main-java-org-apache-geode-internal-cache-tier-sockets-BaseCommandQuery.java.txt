GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-import java.io.IOException;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Set;
-
+import org.apache.geode.internal.security.SecurityService;
+
+import java.io.IOException;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Set;
-   * @param msg
-   * @param query
-   * @param queryString
-   * @param regionNames
-   * @param start
-   * @param cqQuery
-   * @param queryContext
-   * @param servConn
-   * @throws IOException
-      boolean sendResults) throws IOException, InterruptedException {
+      boolean sendResults, final SecurityService securityService)
+      throws IOException, InterruptedException {
-        queryContext, servConn, sendResults, null);
+        queryContext, servConn, sendResults, null, securityService);
-   * @param msg
-   * @param query
-   * @param queryString
-   * @param regionNames
-   * @param start
-   * @param cqQuery
-   * @param queryContext
-   * @param servConn
-   * @throws IOException
-      ServerConnection servConn, boolean sendResults, Object[] params)
-      throws IOException, InterruptedException {
+      ServerConnection servConn, boolean sendResults, Object[] params,
+      final SecurityService securityService) throws IOException, InterruptedException {
-        this.securityService.authorizeRegionRead(regionName.toString());
+        securityService.authorizeRegionRead(regionName.toString());
-                collectionType, queryString, cqQuery, sendCqResultsWithKey, sendResults);
+                collectionType, queryString, cqQuery, sendCqResultsWithKey, sendResults,
+                securityService);
-      boolean sendCqResultsWithKey, boolean sendResults) throws IOException {
+      boolean sendCqResultsWithKey, boolean sendResults, final SecurityService securityService)
+      throws IOException {
-          addToObjectPartList(serializedObjs, result, collectionType, false, servConn, isStructs);
+          addToObjectPartList(serializedObjs, result, collectionType, false, servConn, isStructs,
+              securityService);
-      boolean isStructs) throws IOException {
+      boolean isStructs, final SecurityService securityService) throws IOException {
-        addObjectToPartList(serializedValueObjs, null, value);
+        addObjectToPartList(serializedValueObjs, null, value, securityService);
-        addObjectToPartList(serializedValueObjs, key, value);
+        addObjectToPartList(serializedValueObjs, key, value, securityService);
-      addObjectToPartList(serializedObjs, null, res);
+      addObjectToPartList(serializedObjs, null, res, securityService);
-  private void addObjectToPartList(ObjectPartList objPartList, Object key, Object value) {
+  private void addObjectToPartList(ObjectPartList objPartList, Object key, Object value,
+      final SecurityService securityService) {
-    object = this.securityService.postProcess(null, key, object, isObject);
+    object = securityService.postProcess(null, key, object, isObject);
