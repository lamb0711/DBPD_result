GEODE-6380: Making some static fields immutable

Making some static fields immutable. Changes consist of
 - Marking fields final
 - Initializing during static intializer
 - Wrapping collections in umodifiable collections
 - removing unneeded static fields.

-import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
-import org.apache.geode.annotations.internal.MakeImmutable;
+import org.apache.geode.annotations.Immutable;
-  @MakeImmutable
-  public static final List<Class> refreshOnInit = new ArrayList<>();
+  @Immutable
+  public static final List<Class> refreshOnInit;
-  @MakeImmutable
-  public static final List<String> internalLocks = new ArrayList<>();
+  @Immutable
+  public static final List<String> internalLocks;
-    refreshOnInit.add(RegionMXBean.class);
-    refreshOnInit.add(MemberMXBean.class);
+    refreshOnInit =
+        Collections.unmodifiableList(Arrays.asList(RegionMXBean.class, MemberMXBean.class));
-    internalLocks.add(DLockService.DTLS); // From reserved lock service name
-    internalLocks.add(DLockService.LTLS); // From reserved lock service name
-    internalLocks.add(PartitionedRegionHelper.PARTITION_LOCK_SERVICE_NAME);
-    internalLocks.add(PeerTypeRegistration.LOCK_SERVICE_NAME);
+    internalLocks = Collections.unmodifiableList(Arrays.asList(
+        DLockService.DTLS, // From reserved lock service name
+        DLockService.LTLS, // From reserved lock service name
+        PartitionedRegionHelper.PARTITION_LOCK_SERVICE_NAME,
+        PeerTypeRegistration.LOCK_SERVICE_NAME));
