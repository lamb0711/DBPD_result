GEODE-4961: Allowing custom serialization formats with the protobuf protocol

Adding a new ValueSerializer interface that users can implement to
control the serialization format of data sent using the protobuf
protocol.

ValueSerializers are registered on the server side using the java
ServiceLoader mechanism. They are selected by the client using a new
valueFormat field in the handshake.

Renamed AuthenticationRequest to HandshakeRequest. Credentials
and valueFormat are all sent as part of a single HandshakeRequest.

Renamed the connection states to make them a little easier to
understand, and removed some duplicate states.

The new states are RequireVersion, RequireAuthentication,
AcceptMessages, InvalidSecurity, and TerminateConnection



-import org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService;
-public interface ProtobufConnectionStateProcessor {
+public interface ConnectionState {
-  void validateOperation(Object message, ProtobufSerializationService serializer,
-      MessageExecutionContext messageContext, ProtobufOperationContext operationContext)
+  void validateOperation(ProtobufOperationContext operationContext)
-   * This indicates whether this specific state processor is able to handle authentication requests.
-   *
-   * @return specialized ProtobufConnectionAuthenticatingStateProcessor interface implementation
-   *         which can move to a new state
-   * @throws ConnectionStateException if unable to handle handshakes in this state.
-   */
-  default ProtobufConnectionAuthenticatingStateProcessor allowAuthentication()
-      throws ConnectionStateException {
-    throw new ConnectionStateException(BasicTypes.ErrorCode.AUTHENTICATION_REQUIRED,
-        "Authentication is required before processing further requests");
-  }
-
-  /**
