GEODE-7042: Set server status to "online" after all startup tasks complete (#3878)

ServerLauncher start will now wait until all asynchronous startup tasks
complete to update server status as "online".

Previously, the server status was set to "online" before all of the
startup tasks had completed. This provided users with incorrect facts
about the system and its availability. This commit changes the behavior
of ServerLauncher.start() so that it waits for all of the asynchronous
startup tasks to complete before returning the "online" status. The GFSH
"start server" command relies on this status, so this also has the
effect of making the command wait for all startup tasks to complete
before returning.

* ServerLauncher.start() waits for startup tasks to complete
* Improve testability of ServerLauncher
* Extract ControllableProcess interface
* Change InternalResourceManager support for asynchronous startup tasks
* Move the responsibility for chaining the completion and exception
actions of startup tasks to ServerLauncher

Co-authored-by: Aaron Lindsey <alindsey@pivotal.io>
Co-authored-by: Kirk Lund <klund@apache.org>
Co-authored-by: Dale Emery <demery@pivotal.io>

+import java.util.Objects;
-import java.util.function.Consumer;
+  /**
+   * Adds a task that represents an asynchronous action during startup
+   *
+   * @param startupTask the CompletableFuture startup task
+   */
+    Objects.requireNonNull(startupTask);
-  public void runWhenStartupTasksComplete(Runnable runnable, Consumer<Throwable> exceptionAction) {
-    CompletableFuture.allOf(startupTasks.toArray(new CompletableFuture[0]))
-        .thenRun(runnable)
-        .exceptionally((throwable) -> {
-          exceptionAction.accept(throwable);
-          return null;
-        });
-
+  /**
+   * Clears the startup tasks and returns a CompletableFuture that completes when all of the startup
+   * tasks complete.
+   *
+   * @return a CompletableFuture that completes when all of the startup tasks complete
+   */
+  public CompletableFuture<Void> allOfStartupTasks() {
+    CompletableFuture[] completableFutures = startupTasks.toArray(new CompletableFuture[0]);
+    return CompletableFuture.allOf(completableFutures);
