GEODE-2457: Replace org.apache.geode.internal.FileUtil with org.apache.commons.io.FileUtils

+import org.apache.geode.cache.DiskAccessException;
+import org.apache.geode.internal.cache.DiskEntry.Helper.ValueWrapper;
+import org.apache.geode.internal.cache.DiskStoreImpl.OplogEntryIdSet;
+import org.apache.geode.internal.cache.persistence.DiskRecoveryStore;
+import org.apache.geode.internal.cache.persistence.DiskRegionView;
+import org.apache.geode.internal.cache.persistence.DiskStoreFilter;
+import org.apache.geode.internal.cache.persistence.OplogType;
+import org.apache.geode.internal.cache.versions.RegionVersionVector;
+import org.apache.geode.internal.i18n.LocalizedStrings;
+import org.apache.geode.internal.logging.LogService;
+import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.log4j.LogMarker;
+import org.apache.geode.internal.sequencelog.EntryLogger;
+import org.apache.logging.log4j.Logger;
-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.cache.DiskAccessException;
-import org.apache.geode.internal.FileUtil;
-import org.apache.geode.internal.cache.DiskEntry.Helper.ValueWrapper;
-import org.apache.geode.internal.cache.DiskStoreImpl.OplogEntryIdSet;
-import org.apache.geode.internal.cache.persistence.DiskRecoveryStore;
-import org.apache.geode.internal.cache.persistence.DiskRegionView;
-import org.apache.geode.internal.cache.persistence.DiskStoreFilter;
-import org.apache.geode.internal.cache.persistence.OplogType;
-import org.apache.geode.internal.cache.versions.RegionVersionVector;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-import org.apache.geode.internal.logging.log4j.LogMarker;
-import org.apache.geode.internal.sequencelog.EntryLogger;
-
-      File dir = dh.getDir();
-      File[] backupList = FileUtil.listFiles(dir, backupFileFilter);
-      for (File f : backupList) {
-        backupFiles.put(f, dh);
+      File[] backupList = dh.getDir().listFiles(backupFileFilter);
+      if (backupList != null) {
+        for (File f : backupList) {
+          backupFiles.put(f, dh);
+        }
