Merge branch 'release/1.3.0'

-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.Socket;
-import java.net.SocketException;
-import java.nio.ByteBuffer;
-import java.util.concurrent.atomic.AtomicBoolean;
-
-import org.apache.logging.log4j.Logger;
-
+import org.apache.geode.internal.cache.tier.CommunicationMode;
+import org.apache.logging.log4j.Logger;
+
+import javax.net.ssl.SSLSocket;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.Socket;
+import java.net.SocketException;
+import java.nio.ByteBuffer;
+import java.util.concurrent.atomic.AtomicBoolean;
+  private static final String CLIENT_FUNCTION_TIMEOUT_SYSTEM_PROPERTY =
+      DistributionConfig.GEMFIRE_PREFIX + "CLIENT_FUNCTION_TIMEOUT";
+
-  // TODO: clientFunctionTimeout is not thread-safe and should be non-static
-  private static int clientFunctionTimeout;
-
-    int time = Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "CLIENT_FUNCTION_TIMEOUT",
-        DEFAULT_CLIENT_FUNCTION_TIMEOUT);
-    clientFunctionTimeout = time >= 0 ? time : DEFAULT_CLIENT_FUNCTION_TIMEOUT;
-    return clientFunctionTimeout;
+    int time = Integer.getInteger(CLIENT_FUNCTION_TIMEOUT_SYSTEM_PROPERTY,
+        DEFAULT_CLIENT_FUNCTION_TIMEOUT);
+    return time >= 0 ? time : DEFAULT_CLIENT_FUNCTION_TIMEOUT;
-      byte communicationMode, GatewaySender sender, SocketCreator sc) throws IOException {
+      CommunicationMode communicationMode, GatewaySender sender, SocketCreator sc)
+      throws IOException {
-        theSocket.getOutputStream().flush();
-        theSocket.shutdownOutput();
+        if (!(theSocket instanceof SSLSocket)) {
+          theSocket.getOutputStream().flush();
+          theSocket.shutdownOutput();
+        }
