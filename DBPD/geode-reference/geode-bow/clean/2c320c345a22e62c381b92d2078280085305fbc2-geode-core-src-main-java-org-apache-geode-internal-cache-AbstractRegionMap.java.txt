GEODE-5748: Hold a write lock during cleanUpAfterFailedGII (#2501)

 * Hold write lock when cleanUpAfterFailedGII.
 * Hold read lock when cache operation is performed on the farside if region is not yet initialized.
 * Also hold read lock when transaction is performed on the farside if region not initialized yet.

+    final boolean locked = owner.lockWhenRegionIsInitializing();
+    } finally {
+      if (locked) {
+        owner.unlockWhenRegionIsInitializing();
+      }
+
+    // Fix for Bug #44431. We do NOT want to update the region and wait
+    // later for index INIT as region.clear() can cause inconsistency if
+    // happened in parallel as it also does index INIT.
+    IndexManager oqlIndexManager = owner.getIndexManager();
+    if (oqlIndexManager != null) {
+      oqlIndexManager.waitForIndexInit();
+    }
+    lockForCacheModification(owner, event);
+    final boolean locked = owner.lockWhenRegionIsInitializing();
-      // Fix for Bug #44431. We do NOT want to update the region and wait
-      // later for index INIT as region.clear() can cause inconsistency if
-      // happened in parallel as it also does index INIT.
-      IndexManager oqlIndexManager = owner.getIndexManager();
-      if (oqlIndexManager != null) {
-        oqlIndexManager.waitForIndexInit();
-      }
-      lockForCacheModification(owner, event);
+      if (locked) {
+        owner.unlockWhenRegionIsInitializing();
+      }
+    final boolean locked = owner.lockWhenRegionIsInitializing();
+      if (locked) {
+        owner.unlockWhenRegionIsInitializing();
+      }
+    final boolean locked = owner.lockWhenRegionIsInitializing();
+      if (locked) {
+        owner.unlockWhenRegionIsInitializing();
+      }
+
