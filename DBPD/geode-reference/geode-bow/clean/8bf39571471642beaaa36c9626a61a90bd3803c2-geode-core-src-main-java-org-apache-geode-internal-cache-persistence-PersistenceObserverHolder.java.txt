Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Used for test hooks to during the
- * persistence process.
+ * Used for test hooks to during the persistence process.
-  
+
-    if(instance == null) {
-      INSTANCE = new PersistenceObserverAdapter(); 
+    if (instance == null) {
+      INSTANCE = new PersistenceObserverAdapter();
-  
+
-    return INSTANCE;  
+    return INSTANCE;
-  
+
-    
+
-  
+
-    /**Fired just before we persist that a member is offline. Returning false
-     * indicates that we should not persist the change.
+    /**
+     * Fired just before we persist that a member is offline. Returning false indicates that we
+     * should not persist the change.
-    
-    /**Fired after we persist that a member is offline.
+
+    /**
+     * Fired after we persist that a member is offline.
-    
-    /**Fired just before we persist that a member is online. Returning false
-     * indicates that we should not persist the change.
+
+    /**
+     * Fired just before we persist that a member is online. Returning false indicates that we
+     * should not persist the change.
-    
-    /**Fired after we persist that a member is online.
+
+    /**
+     * Fired after we persist that a member is online.
-    
-    /**Fired just before we persist that a member no longer hosts a region. Returning false
+
+    /**
+     * Fired just before we persist that a member no longer hosts a region. Returning false
-    
-    /**Fired after we persist that a member no longer hosts the region.
+
+    /**
+     * Fired after we persist that a member no longer hosts the region.
-  
+
-    public void afterPersistedOffline(String fullPath,
-        PersistentMemberID persistentID) {
-    }
+    public void afterPersistedOffline(String fullPath, PersistentMemberID persistentID) {}
-    public void afterPersistedOnline(String fullPath,
-        PersistentMemberID persistentID) {
-    }
+    public void afterPersistedOnline(String fullPath, PersistentMemberID persistentID) {}
-    public void afterRemovePersisted(String fullPath,
-        PersistentMemberID persistentID) {
-    }
+    public void afterRemovePersisted(String fullPath, PersistentMemberID persistentID) {}
