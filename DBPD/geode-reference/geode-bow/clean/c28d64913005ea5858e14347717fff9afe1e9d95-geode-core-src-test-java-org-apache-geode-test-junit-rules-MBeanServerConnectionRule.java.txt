Merge branch 'release/1.4.0'

+   * Retrieve a new proxy MXBean
+   *
+   * @return A new proxy MXBean of the same type with which the class was constructed
+   */
+  public <T> T getProxyMXBean(Class<T> proxyClass, String beanQueryName)
+      throws MalformedObjectNameException, IOException {
+    return JMX.newMXBeanProxy(con, getObjectName(proxyClass, beanQueryName), proxyClass);
+  }
+
+  /**
+      throws IOException, MalformedObjectNameException {
+    return JMX.newMBeanProxy(con, getObjectName(proxyClass, beanQueryName), proxyClass);
+  }
+
+  /**
+   * Retrieve a new proxy MBean
+   *
+   * @return A new proxy MBean of the same type with which the class was constructed
+   */
+  public <T> T getProxyMBean(Class<T> proxyClass) throws MalformedObjectNameException, IOException {
+    return getProxyMBean(proxyClass, null);
+  }
+
+  private ObjectName getObjectName(Class<?> proxyClass, String beanQueryName)
-    return JMX.newMXBeanProxy(con, ((ObjectInstance) beans.toArray()[0]).getObjectName(),
-        proxyClass);
+    return ((ObjectInstance) beans.toArray()[0]).getObjectName();
-   * Retrieve a new proxy MBean
+   * Retrieve a new proxy MXBean
-   * @return A new proxy MBean of the same type with which the class was constructed
+   * @return A new proxy MXBean of the same type with which the class was constructed
-  public <T> T getProxyMBean(Class<T> proxyClass) throws MalformedObjectNameException, IOException {
-    return getProxyMBean(proxyClass, null);
+  public <T> T getProxyMXBean(Class<T> proxyClass)
+      throws MalformedObjectNameException, IOException {
+    return getProxyMXBean(proxyClass, null);
-  public <T> T getProxyMBean(String beanQueryName)
+  public <T> T getProxyMXBean(String beanQueryName)
-    return getProxyMBean(null, beanQueryName);
+    return getProxyMXBean(null, beanQueryName);
