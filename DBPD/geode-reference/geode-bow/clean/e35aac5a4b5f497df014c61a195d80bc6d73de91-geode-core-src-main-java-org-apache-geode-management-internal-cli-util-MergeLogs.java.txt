Merge branch 'release/1.5.0'

-import java.io.FilenameFilter;
+import org.apache.logging.log4j.Logger;
+import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.LogWrapper;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+  private static final Logger logger = LogService.getLogger();
+
+  public static void main(String[] args) {
+    if (args.length < 1 || args.length > 1) {
+      throw new IllegalArgumentException("Requires only 1  arguments : <targetDirName>");
+    }
+    try {
+      String result = mergeLogFile(args[0]).getCanonicalPath();
+      System.out.println("Merged logs to: " + result);
+    } catch (Exception e) {
+      System.out.println(e.getMessage());
+    }
+  }
-    LogWrapper.getInstance().fine("Exporting logs merging logs" + logDirectory);
+    logger.info("Exporting logs merging logs" + logDirectory);
-    String errorString = new String();
-      LogWrapper.getInstance().fine("Exporting logs now merging logs");
+      logger.info("Exporting logs now merging logs");
-      LogWrapper.getInstance().severe(e.getMessage());
+      logger.error(e.getMessage());
-      LogWrapper.getInstance().fine("Exporting logs Sucessfully merged logs");
+      logger.info("Exporting logs successfully merged logs");
-      LogWrapper.getInstance().severe("Could not merge");
+      logger.error("Could not merge");
-  public static void main(String[] args) {
-    if (args.length < 1 || args.length > 1) {
-      throw new IllegalArgumentException("Requires only 1  arguments : <targetDirName>");
-    }
-    try {
-      String result = mergeLogFile(args[0]).getCanonicalPath();
-      System.out.println("Merged logs to: " + result);
-    } catch (Exception e) {
-      System.out.println(e.getMessage());
-    }
-
-
-  }
-
-      boolean flag = MergeLogFiles.mergeLogFiles(logFiles, logFileNames, mergedLog);
+      MergeLogFiles.mergeLogFiles(logFiles, logFileNames, mergedLog);
