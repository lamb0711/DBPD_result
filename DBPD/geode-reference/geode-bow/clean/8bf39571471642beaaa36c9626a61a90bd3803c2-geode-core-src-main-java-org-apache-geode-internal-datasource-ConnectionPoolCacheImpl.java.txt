Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class models a connection pool for non-transactional database
- * connection. Extends the AbstractPoolCache to inherit the pool bahavior.
+ * This class models a connection pool for non-transactional database connection. Extends the
+ * AbstractPoolCache to inherit the pool bahavior.
-  
+
-  public ConnectionPoolCacheImpl(
-      ConnectionPoolDataSource connectionpooldatasource,
-      ConnectionEventListener eventListner,
-      ConfiguredDataSourceProperties configs) throws PoolException {
+  public ConnectionPoolCacheImpl(ConnectionPoolDataSource connectionpooldatasource,
+      ConnectionEventListener eventListner, ConfiguredDataSourceProperties configs)
+      throws PoolException {
-    }
-    catch (Exception ex) {
+    } catch (Exception ex) {
-          logger.trace("AbstractPoolcache::destroyPooledConnection:Exception in closing the connection.Ignoring it. The exeption is {}", 
-              ex.getMessage(), ex);
+        logger.trace(
+            "AbstractPoolcache::destroyPooledConnection:Exception in closing the connection.Ignoring it. The exeption is {}",
+            ex.getMessage(), ex);
-        poolConn = m_cpds.getPooledConnection(configProps.getUser(),
-            configProps.getPassword());
+        poolConn = m_cpds.getPooledConnection(configProps.getUser(), configProps.getPassword());
+      } catch (SQLException sqx) {
+        throw new PoolException(
+            LocalizedStrings.ConnectionPoolCacheImpl_CONNECTIONPOOLCACHEIMPLGENEWCONNECTION_EXCEPTION_IN_CREATING_NEW_POOLEDCONNECTION
+                .toLocalizedString(),
+            sqx);
-      catch (SQLException sqx) {
-        throw new PoolException(LocalizedStrings.ConnectionPoolCacheImpl_CONNECTIONPOOLCACHEIMPLGENEWCONNECTION_EXCEPTION_IN_CREATING_NEW_POOLEDCONNECTION.toLocalizedString(), sqx);
-      }
-      poolConn
-          .addConnectionEventListener((javax.sql.ConnectionEventListener) connEventListner);
+      poolConn.addConnectionEventListener((javax.sql.ConnectionEventListener) connEventListner);
-    }
-    else {
+    } else {
-        logger.debug("ConnectionPoolCacheImpl::geNewConnection: ConnectionPoolCache not intialized with ConnectionPoolDatasource");
+        logger.debug(
+            "ConnectionPoolCacheImpl::geNewConnection: ConnectionPoolCache not intialized with ConnectionPoolDatasource");
-      throw new PoolException(LocalizedStrings.ConnectionPoolCacheImpl_CONNECTIONPOOLCACHEIMPLGENEWCONNECTION_CONNECTIONPOOLCACHE_NOT_INTIALIZED_WITH_CONNECTIONPOOLDATASOURCE.toLocalizedString());
+      throw new PoolException(
+          LocalizedStrings.ConnectionPoolCacheImpl_CONNECTIONPOOLCACHEIMPLGENEWCONNECTION_CONNECTIONPOOLCACHE_NOT_INTIALIZED_WITH_CONNECTIONPOOLDATASOURCE
+              .toLocalizedString());
