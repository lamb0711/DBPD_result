GEODE-4902: Refactor LogMarker class and usage (#1678)

* GEODE-4902: Refactor LogMarker and usage
* Distinguish those markers at the TRACE and DEBUG levels (now Markers named *_VERBOSE) from those that log at a coarser grainularity (now Markers named *_MARKER)
* Suppress only *_VERBOSE markers by default, from previous behavior of suppressing all markers.
* Refactor some pathological log checks, e.g., change a log from debug to trace when it is gated behind ifTraceEnabled block.
* Remove unused Markers.
* Remove any log marker logic from AdminWaiters exception message generation.  Exceptions now always include a full message.
* Remove marker-gated print to System.out in PersistentOplogSet -- direct calls to System.out should not exist in that class.
* Add marker EVENT_ID_TO_STRING_VERBOSE to explicitly distinguish instance of marker used in logic not immediately consumed by a logger.  The consumption of EventId::toString should only exist at logging in any event.
**
* Remove nearby dead code and dead code detected during marker removal.
* Expand wildcard imports in touched files.
* Remove TODO comments, at least one of which was a decade old.
* Collapse nearby, redundant catch blocks
* Remove empty finally blocks
* Update documentation page to refer to GEODE_VERBOSE, from deprecated GEMFIRE_VERBOSE
* The change in log marker names causes one class to compile larger.  Updated sanctionedDataSerializables.

-      logger.warn(LogMarker.STATISTICS, LocalizedMessage.create(
+      logger.warn(LogMarker.STATISTICS_MARKER, LocalizedMessage.create(
-        logger.warn(LogMarker.STATISTICS,
+        logger.warn(LogMarker.STATISTICS_MARKER,
-      if (logger.isTraceEnabled(LogMarker.STATISTICS)) {
-        logger.trace(LogMarker.STATISTICS, "StatArchiveHandler#sampled resourceInstances={}",
-            resourceInstances);
+      if (logger.isTraceEnabled(LogMarker.STATISTICS_VERBOSE)) {
+        logger.trace(LogMarker.STATISTICS_VERBOSE,
+            "StatArchiveHandler#sampled resourceInstances={}", resourceInstances);
-            logger.info(LogMarker.STATISTICS,
+            logger.info(LogMarker.STATISTICS_MARKER,
-          logger.warn(LogMarker.STATISTICS,
+          logger.warn(LogMarker.STATISTICS_MARKER,
-    if (logger.isTraceEnabled(LogMarker.STATISTICS)) {
-      logger.trace(LogMarker.STATISTICS, "StatArchiveHandler#allocatedResourceType resourceType={}",
-          resourceType);
+    if (logger.isTraceEnabled(LogMarker.STATISTICS_VERBOSE)) {
+      logger.trace(LogMarker.STATISTICS_VERBOSE,
+          "StatArchiveHandler#allocatedResourceType resourceType={}", resourceType);
-    if (logger.isTraceEnabled(LogMarker.STATISTICS)) {
-      logger.trace(LogMarker.STATISTICS,
+    if (logger.isTraceEnabled(LogMarker.STATISTICS_VERBOSE)) {
+      logger.trace(LogMarker.STATISTICS_VERBOSE,
-    if (logger.isTraceEnabled(LogMarker.STATISTICS)) {
-      logger.trace(LogMarker.STATISTICS,
+    if (logger.isTraceEnabled(LogMarker.STATISTICS_VERBOSE)) {
+      logger.trace(LogMarker.STATISTICS_VERBOSE,
-    final boolean isDebugEnabled_STATISTICS = logger.isTraceEnabled(LogMarker.STATISTICS);
+    final boolean isDebugEnabled_STATISTICS = logger.isTraceEnabled(LogMarker.STATISTICS_VERBOSE);
-      logger.trace(LogMarker.STATISTICS,
+      logger.trace(LogMarker.STATISTICS_VERBOSE,
-        logger.info(LogMarker.STATISTICS, LocalizedMessage
+        logger.info(LogMarker.STATISTICS_MARKER, LocalizedMessage
-                logger.trace(LogMarker.STATISTICS,
+                logger.trace(LogMarker.STATISTICS_VERBOSE,
-              logger.warn(LogMarker.STATISTICS,
+              logger.warn(LogMarker.STATISTICS_MARKER,
-          logger.warn(LogMarker.STATISTICS,
+          logger.warn(LogMarker.STATISTICS_MARKER,
-          logger.info(LogMarker.STATISTICS, LocalizedMessage.create(
+          logger.info(LogMarker.STATISTICS_MARKER, LocalizedMessage.create(
-        logger.warn(LogMarker.STATISTICS,
+        logger.warn(LogMarker.STATISTICS_MARKER,
-            logger.trace(LogMarker.STATISTICS,
+            logger.trace(LogMarker.STATISTICS_VERBOSE,
-            logger.warn(LogMarker.STATISTICS,
+            logger.warn(LogMarker.STATISTICS_MARKER,
-          logger.trace(LogMarker.STATISTICS, "StatArchiveHandler#changeArchiveFile adding handler");
+          logger.trace(LogMarker.STATISTICS_VERBOSE,
+              "StatArchiveHandler#changeArchiveFile adding handler");
