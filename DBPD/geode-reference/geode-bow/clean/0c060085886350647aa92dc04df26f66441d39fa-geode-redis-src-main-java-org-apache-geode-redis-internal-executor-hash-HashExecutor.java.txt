GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4781)

* Revert "Revert "GEODE-7828: Convert backing store for Redis Hashes and Sets to single regions (#4745)" (#4780)"

This reverts commit f0982cdedf1b122f734919d0647434cca33ec254.

* Fix sporadic test failures for concurrent HSetNX
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.geode.cache.TimeoutException;
+import org.apache.geode.redis.internal.AutoCloseableLock;
+import org.apache.geode.redis.internal.RedisLockService;
+import org.apache.geode.redis.internal.RegionProvider;
+/**
+ * Executor for handling HASH datatypes
+ */
+
-  @Override
-  @SuppressWarnings("unchecked")
-  protected Region<ByteArrayWrapper, ByteArrayWrapper> getOrCreateRegion(
-      ExecutionHandlerContext context, ByteArrayWrapper key, RedisDataType type) {
-    return (Region<ByteArrayWrapper, ByteArrayWrapper>) context.getRegionProvider()
-        .getOrCreateRegion(key, type, context);
-  }
-
-  @SuppressWarnings("unchecked")
-  protected Region<ByteArrayWrapper, ByteArrayWrapper> getRegion(ExecutionHandlerContext context,
+  /**
+   * Get the save map
+   *
+   * @param context the context
+   * @param key the region hash key region:<key>
+   * @return the map data
+   */
+  protected Map<ByteArrayWrapper, ByteArrayWrapper> getMap(ExecutionHandlerContext context,
-    return (Region<ByteArrayWrapper, ByteArrayWrapper>) context.getRegionProvider().getRegion(key);
+    Region<ByteArrayWrapper, Map<ByteArrayWrapper, ByteArrayWrapper>> region =
+        context.getRegionProvider().getHashRegion();
+
+    Map<ByteArrayWrapper, ByteArrayWrapper> map = region.get(key);
+    if (map == null) {
+      map = new HashMap<>();
+    }
+
+    return map;
+  protected AutoCloseableLock withRegionLock(ExecutionHandlerContext context, ByteArrayWrapper key)
+      throws InterruptedException, TimeoutException {
+    RedisLockService lockService = context.getHashLockService();
+
+    return lockService.lock(key);
+  }
+
+
+  /**
+   * Save the map information to a region
+   *
+   * @param map the map to save
+   * @param context the execution handler context
+   * @param key the raw HASH key
+   */
+  protected void saveMap(Map<ByteArrayWrapper, ByteArrayWrapper> map,
+      ExecutionHandlerContext context, ByteArrayWrapper key) {
+
+    if (map == null) {
+      return;
+    }
+
+    RegionProvider rp = context.getRegionProvider();
+
+    rp.getHashRegion().put(key, map);
+    context.getKeyRegistrar().register(key, RedisDataType.REDIS_HASH);
+  }
