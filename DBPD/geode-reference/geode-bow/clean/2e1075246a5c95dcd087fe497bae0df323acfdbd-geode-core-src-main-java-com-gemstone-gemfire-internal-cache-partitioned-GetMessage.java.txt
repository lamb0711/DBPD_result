Merge branch 'release/1.0.0-incubating.M3'

-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.util.Collections;
-import java.util.Set;
-
-import org.apache.logging.log4j.Logger;
-
-import com.gemstone.gemfire.distributed.internal.DM;
-import com.gemstone.gemfire.distributed.internal.DirectReplyProcessor;
-import com.gemstone.gemfire.distributed.internal.DistributionManager;
-import com.gemstone.gemfire.distributed.internal.DistributionMessage;
-import com.gemstone.gemfire.distributed.internal.DistributionStats;
-import com.gemstone.gemfire.distributed.internal.InternalDistributedSystem;
-import com.gemstone.gemfire.distributed.internal.ReplyException;
-import com.gemstone.gemfire.distributed.internal.ReplyMessage;
-import com.gemstone.gemfire.distributed.internal.ReplyProcessor21;
-import com.gemstone.gemfire.distributed.internal.ReplySender;
+import com.gemstone.gemfire.distributed.internal.*;
-import com.gemstone.gemfire.internal.cache.BucketRegion;
+import com.gemstone.gemfire.internal.cache.*;
-import com.gemstone.gemfire.internal.cache.KeyWithRegionContext;
+import com.gemstone.gemfire.internal.cache.VersionTagHolder;
+import org.apache.logging.log4j.Logger;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.util.Collections;
+import java.util.Set;
- * @since 5.0
+ * @since GemFire 5.0
-  private boolean allowReadFromHDFS;
-  protected static final int READ_FROM_HDFS = IF_OLD;
-      DirectReplyProcessor processor,
-      final Object key, final Object aCallbackArgument, ClientProxyMembershipID context,
-      boolean returnTombstones, boolean allowReadFromHDFS) {
+                     DirectReplyProcessor processor,
+                     final Object key, final Object aCallbackArgument, ClientProxyMembershipID context,
+                     boolean returnTombstones) {
-	this.allowReadFromHDFS = allowReadFromHDFS;
-  private static final boolean ORDER_PR_GETS = Boolean.getBoolean("gemfire.order-pr-gets");
+    private static final boolean ORDER_PR_GETS = Boolean.getBoolean(DistributionConfig.GEMFIRE_PREFIX + "order-pr-gets");
-      EntryEventImpl event = EntryEventImpl.createVersionTagHolder();
+      VersionTagHolder event = new VersionTagHolder();
-        if (r.keyRequiresRegionContext()) {
-          ((KeyWithRegionContext)this.key).setRegionContext(r);
-        }
-        val = r.getDataView().getSerializedValue(r, keyInfo, !lockEntry, this.context, event, returnTombstones, allowReadFromHDFS);
+        val = r.getDataView().getSerializedValue(r, keyInfo, !lockEntry, this.context, event, returnTombstones);
-      } finally {
-        event.release();
-    if (this.allowReadFromHDFS) s |= READ_FROM_HDFS;
-    if ((s & READ_FROM_HDFS) != 0) this.allowReadFromHDFS = true;
-      PartitionedRegion r, final Object key, final Object aCallbackArgument,
-      ClientProxyMembershipID requestingClient, boolean returnTombstones, boolean allowReadFromHDFS)
+                                 PartitionedRegion r,
+                                 final Object key,
+                                 final Object aCallbackArgument,
+                                 ClientProxyMembershipID requestingClient,
+                                 boolean returnTombstones)
-        key, aCallbackArgument, requestingClient, returnTombstones, allowReadFromHDFS);
+        key, aCallbackArgument, requestingClient, returnTombstones);
-   * @since 5.0
+   * @since GemFire 5.0
-    /** came from partial SQLF merge and reconciling with it but not used yet */
-   * @since 5.0
+   * @since GemFire 5.0
