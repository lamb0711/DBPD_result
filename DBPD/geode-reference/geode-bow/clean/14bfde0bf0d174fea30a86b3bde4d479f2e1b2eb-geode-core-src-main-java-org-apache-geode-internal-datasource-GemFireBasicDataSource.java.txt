Merge branch 'release/1.8.0'

+import java.sql.DriverManager;
-import org.apache.geode.i18n.StringId;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-      StringId exception =
-          LocalizedStrings.GemFireBasicDataSource_GEMFIREBASICDATASOURCE_GETCONNECTION_URL_FOR_THE_DATASOURCE_NOT_AVAILABLE;
-      logger.info(LocalizedMessage.create(exception));
-      throw new SQLException(exception.toLocalizedString());
+      String exception =
+          "GemFireBasicDataSource::getConnection:Url for the DataSource not available";
+      logger.info(exception);
+      throw new SQLException(exception);
-      Class driverClass = ClassPathLoader.getLatest().forName(jdbcDriver);
-      driverObject = (Driver) driverClass.newInstance();
+      if (jdbcDriver != null && jdbcDriver.length() > 0) {
+        loadDriverUsingClassName();
+      } else {
+        loadDriverUsingURL();
+      }
-      StringId msg =
-          LocalizedStrings.GemFireBasicDataSource_AN_EXCEPTION_WAS_CAUGHT_WHILE_TRYING_TO_LOAD_THE_DRIVER;
+      String msg =
+          "An Exception was caught while trying to load the driver. %s";
-      logger.error(LocalizedMessage.create(msg, msgArg), ex);
-      throw new SQLException(msg.toLocalizedString(msgArg));
+      logger.error(String.format(msg, msgArg), ex);
+      throw new SQLException(String.format(msg, msgArg));
+
+  private void loadDriverUsingURL() throws SQLException {
+    driverObject = DriverManager.getDriver(this.url);
+  }
+
+  private void loadDriverUsingClassName()
+      throws ClassNotFoundException, InstantiationException, IllegalAccessException {
+    Class<?> driverClass = ClassPathLoader.getLatest().forName(jdbcDriver);
+    driverObject = (Driver) driverClass.newInstance();
+  }
