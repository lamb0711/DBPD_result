GEODE-7869: Cleanup warnings in geode-pulse

-import java.util.Collections;
-  private final String ENTRY_SIZE = "entrySize";
+  private static final String ENTRY_SIZE = "entrySize";
-    if (r1Cnt < r2Cnt) {
-      return -1;
-    } else if (r1Cnt > r2Cnt) {
-      return 1;
-    } else {
-      return 0;
-    }
+    return Long.compare(r1Cnt, r2Cnt);
-    responseJSON.put("region", getRegionJson(cluster));
+    responseJSON.set("region", getRegionJson(cluster));
-    List<Cluster.Region> clusterRegionsList = new ArrayList<Cluster.Region>();
-    clusterRegionsList.addAll(clusterRegions.values());
-
-    Collections.sort(clusterRegionsList, regionEntryCountComparator);
+    List<Cluster.Region> clusterRegionsList = new ArrayList<>(clusterRegions.values());
+    clusterRegionsList.sort(regionEntryCountComparator);
-    for (int count = 0; count < clusterRegionsList.size(); count++) {
-      Cluster.Region reg = clusterRegionsList.get(count);
+    for (Cluster.Region reg : clusterRegionsList) {
-      regionJSON.put("memberNames", memberNameArray);
+      regionJSON.set("memberNames", memberNameArray);
-
-
-      regionJSON.put("memoryReadsTrend", mapper
+      regionJSON.set("memoryReadsTrend", mapper
-      regionJSON.put("memoryWritesTrend", mapper
+      regionJSON.set("memoryWritesTrend", mapper
-      regionJSON.put("diskReadsTrend", mapper.valueToTree(
+      regionJSON.set("diskReadsTrend", mapper.valueToTree(
-      regionJSON.put("diskWritesTrend", mapper.valueToTree(
+      regionJSON.set("diskWritesTrend", mapper.valueToTree(
-        regionJSON.put(this.ENTRY_SIZE, VALUE_NA);
+        regionJSON.put(ENTRY_SIZE, VALUE_NA);
-        regionJSON.put(this.ENTRY_SIZE, entrySizeInMB);
+        regionJSON.put(ENTRY_SIZE, entrySizeInMB);
