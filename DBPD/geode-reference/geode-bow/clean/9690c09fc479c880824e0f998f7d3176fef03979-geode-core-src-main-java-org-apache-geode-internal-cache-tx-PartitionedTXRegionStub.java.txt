GEODE-3679 Forward client member id to other peers in transaction message.

  * Do not forward size request of a bucket region to transaction hosting node.
  * Move the method from LocalRegion to DistributedRegion.
  * Make region in TXRegionStub strong type to avoid some casting in the code.

-  public PartitionedTXRegionStub(TXStateStub txstate, LocalRegion r) {
-    super(txstate, r);
+  private final PartitionedRegion region;
+
+  public PartitionedTXRegionStub(TXStateStub txstate, PartitionedRegion r) {
+    super(txstate);
+    this.region = r;
-        .getAllColocationRegions((PartitionedRegion) this.region).values();
+        .getAllColocationRegions(this.region).values();
-    PartitionedRegion pr = (PartitionedRegion) region;
-      Entry e = pr.getEntryRemotely((InternalDistributedMember) state.getTarget(),
+      Entry e = region.getEntryRemotely((InternalDistributedMember) state.getTarget(),
-    PartitionedRegion pr = (PartitionedRegion) region;
-      boolean retVal = pr.containsKeyRemotely((InternalDistributedMember) state.getTarget(),
+      boolean retVal = region.containsKeyRemotely((InternalDistributedMember) state.getTarget(),
-    PartitionedRegion pr = (PartitionedRegion) region;
-      boolean retVal = pr.containsValueForKeyRemotely((InternalDistributedMember) state.getTarget(),
-          keyInfo.getBucketId(), keyInfo.getKey());
+      boolean retVal = region.containsValueForKeyRemotely(
+          (InternalDistributedMember) state.getTarget(), keyInfo.getBucketId(), keyInfo.getKey());
-    PartitionedRegion pr = (PartitionedRegion) region;
-      retVal = pr.getRemotely((InternalDistributedMember) state.getTarget(), keyInfo.getBucketId(),
-          key, callbackArgument, peferCD, requestingClient, clientEvent, false);
+      retVal =
+          region.getRemotely((InternalDistributedMember) state.getTarget(), keyInfo.getBucketId(),
+              key, callbackArgument, peferCD, requestingClient, clientEvent, false);
-    PartitionedRegion pr = (PartitionedRegion) region;
-    InternalDistributedMember primary = pr.getBucketPrimary(keyInfo.getBucketId());
+    InternalDistributedMember primary = region.getBucketPrimary(keyInfo.getBucketId());
-      return pr.getSharedDataView().getEntry(keyInfo, pr, allowTombstones);
+      return region.getSharedDataView().getEntry(keyInfo, region, allowTombstones);
