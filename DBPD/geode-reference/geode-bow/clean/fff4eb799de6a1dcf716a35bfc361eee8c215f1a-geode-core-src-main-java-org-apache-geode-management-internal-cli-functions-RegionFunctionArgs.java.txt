GEODE-6103 RegionCreateFunction takes RegionConfig in argument (#2998)

* reduce dependence on RegionFunctionArgs
* Also clean up CreateRegionCommand to achieve a clean separation between validations and calling RegionCreateFunction

Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>
Signed-off-by: Peter Tran <ptran@pivotal.io>
Signed-off-by: Ken Howe <khowe@pivotal.io>
-import org.apache.geode.cache.configuration.EnumActionDestroyOverflow;
-import org.apache.geode.cache.configuration.RegionAttributesType;
-
-    public RegionAttributesType.EvictionAttributes convertToConfigEvictionAttributes() {
-      RegionAttributesType.EvictionAttributes configAttributes =
-          new RegionAttributesType.EvictionAttributes();
-      EnumActionDestroyOverflow action = EnumActionDestroyOverflow.fromValue(evictionAction);
-
-      if (maxMemory == null && maxEntryCount == null) {
-        RegionAttributesType.EvictionAttributes.LruHeapPercentage heapPercentage =
-            new RegionAttributesType.EvictionAttributes.LruHeapPercentage();
-        heapPercentage.setAction(action);
-        heapPercentage.setClassName(objectSizer);
-        configAttributes.setLruHeapPercentage(heapPercentage);
-      } else if (maxMemory != null) {
-        RegionAttributesType.EvictionAttributes.LruMemorySize memorySize =
-            new RegionAttributesType.EvictionAttributes.LruMemorySize();
-        memorySize.setAction(action);
-        memorySize.setClassName(objectSizer);
-        memorySize.setMaximum(maxMemory.toString());
-        configAttributes.setLruMemorySize(memorySize);
-      } else {
-        RegionAttributesType.EvictionAttributes.LruEntryCount entryCount =
-            new RegionAttributesType.EvictionAttributes.LruEntryCount();
-        entryCount.setAction(action);
-        entryCount.setMaximum(maxEntryCount.toString());
-        configAttributes.setLruEntryCount(entryCount);
-      }
-
-      return configAttributes;
-    }
-
