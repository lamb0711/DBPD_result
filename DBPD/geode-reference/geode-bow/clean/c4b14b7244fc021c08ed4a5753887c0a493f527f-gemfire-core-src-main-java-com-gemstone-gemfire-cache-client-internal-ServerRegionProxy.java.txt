Merge remote-tracking branch 'origin/develop' into feature/GEODE-77

Conflicts:
	gemfire-core/src/main/java/com/gemstone/gemfire/distributed/internal/PooledExecutorWithDMStats.java
	gemfire-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/CacheClientNotifier.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/i18n/LocalizedStrings.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/i18n/ParentLocalizedStrings.java
	gemfire-core/src/main/java/com/gemstone/gemfire/internal/logging/LogService.java
	gemfire-core/src/test/java/com/gemstone/gemfire/cache/client/internal/AutoConnectionSourceWithUDPDUnitTest.java
	gemfire-core/src/test/java/com/gemstone/gemfire/internal/FDDUnitTest.java
	gemfire-core/src/test/resources/com/gemstone/gemfire/codeAnalysis/sanctionedSerializables.txt

-import com.gemstone.gemfire.cache.util.BridgeClient;
-import com.gemstone.gemfire.cache.util.BridgeLoader;
-import com.gemstone.gemfire.cache.util.BridgeWriter;
-import com.gemstone.gemfire.internal.cache.BridgeObserver;
-import com.gemstone.gemfire.internal.cache.BridgeObserverHolder;
+import com.gemstone.gemfire.internal.cache.ClientServerObserver;
+import com.gemstone.gemfire.internal.cache.ClientServerObserverHolder;
-      final CacheLoader cl = r.getAttributes().getCacheLoader();
-      final CacheWriter cw = r.getAttributes().getCacheWriter();
-      if (AbstractRegion.isBridgeLoader(cl) || AbstractRegion.isBridgeWriter(cw)) {
-        Object loaderPool = null;
-        Object writerPool = null;
-        if (AbstractRegion.isBridgeLoader(cl)) {
-          if (cl instanceof BridgeLoader) {
-            loaderPool = ((BridgeLoader)cl).getConnectionProxy();
-          } else {
-            loaderPool = ((BridgeClient)cl).getConnectionProxy();
-          }
-        }
-        if (AbstractRegion.isBridgeWriter(cw)) {
-          writerPool = ((BridgeWriter)cw).getConnectionProxy();
-        }
-        if (loaderPool != writerPool && loaderPool != null && writerPool != null) {
-          throw new IllegalStateException("The region " + r.getFullPath()
-                                          + " has a BridgeLoader and a BridgeWriter/BridgeClient "
-                                          + " that are configured with different connection pools. "
-                                          + " This is not allowed. Instead create a single BridgeClient and install it as both the loader and the writer."
-                                          + " loaderPool="+loaderPool + " writerPool=" + writerPool);
-        }
-        InternalPool result = (InternalPool)loaderPool;
-        if (result == null) {
-          result = (InternalPool)writerPool;
-        }
-        return result;
-      } else {
-        throw new IllegalStateException("The region " + r.getFullPath()
-                                        + " did not have a client pool configured.");
-      }
+      throw new IllegalStateException("The region " + r.getFullPath()
+          + " did not have a client pool configured.");
-          BridgeObserver bo = BridgeObserverHolder.getInstance();
+          ClientServerObserver bo = ClientServerObserverHolder.getInstance();
-        BridgeObserver bo = BridgeObserverHolder.getInstance();
+        ClientServerObserver bo = ClientServerObserverHolder.getInstance();
