GEODE-8171: javadoc for putAll need to have accurate exception (#5147)

* GEODE-8171: javadoc for putAll need to have accurate exception

+import org.apache.geode.cache.client.ServerConnectivityException;
+import org.apache.geode.cache.client.ServerOperationException;
-   * @param map the key/value pairs to put in this region.
+   * If an exception is thrown due to this call, it can imply that there may have been a partial
+   * update performed on the region.
+   * <p>
+   *
+   * @param map the key/value pairs to put in this region
+   * @throws ServerOperationException if called from a client, and the server throws an exception
+   *         such as CacheWriterException, PartitionedRegionStorageException or LowMemoryException.
+   *         These server exceptions become the ServerOperationException cause
+   * @throws ServerConnectivityException if called from a client, and the server throws
+   *         CancelException. CancelException will be the ServerConnectivityException cause
+   * @throws NullPointerException if the key is null, if the value is null (use invalidate instead),
+   *         or if the key or value do not meet serialization requirements
+   * @throws ClassCastException if key does not satisfy the keyConstraint
+   * @throws org.apache.geode.distributed.LeaseExpiredException if the lease expired on a
+   *         distributed lock, for regions with Scope.GLOBAL
+   * @throws TimeoutException if the call timed out waiting to acquire a distributed lock for
+   *         regions with Scope.GLOBAL
+   * @throws CacheWriterException if a CacheWriter aborts the operation
+   * @throws PartitionedRegionStorageException if the operation could not be completed on a
+   *         partitioned region
+   * @throws LowMemoryException if a low memory condition is detected
+   * @see #invalidate(Object)
+   * @see CacheLoader#load
+   * @see CacheListener#afterCreate
+   * @see CacheListener#afterUpdate
+   * @see CacheWriter#beforeCreate
+   * @see CacheWriter#beforeUpdate
-   * @throws LowMemoryException if a low memory condition is detected.
-   * equivalent to that of calling {@link #put(Object, Object, Object)} on this region once for each
-   * entry in the specified map. This operation will be distributed to other caches if the scope is
-   * not <code>Scope.LOCAL</code>.
+   * equivalent to that of calling {@link #put(Object, Object)} on this region once for each entry
+   * in the specified map. This operation will be distributed to other caches if the scope is not
+   * <code>Scope.LOCAL</code>.
-   * @param map the key/value pairs to put in this region.
+   * If an exception is thrown due to this call, it can imply that there may have been a partial
+   * update performed on the region.
+   * <p>
+   *
+   * @param map the key/value pairs to put in this region
-   *        method. May be null. Must be serializable if this operation is distributed.
+   *        method. May be null. Must be serializable if this operation is distributed
+   * @throws ServerOperationException if called from a client, and the server throws an exception
+   *         such as CacheWriterException, PartitionedRegionStorageException or LowMemoryException.
+   *         These server exceptions become the ServerOperationException cause
+   * @throws ServerConnectivityException if called from a client, and the server throws
+   *         CancelException. CancelException will be the ServerConnectivityException cause
+   * @throws NullPointerException if the key is null, if the value is null (use invalidate instead),
+   *         or if the key or value do not meet serialization requirements
+   * @throws ClassCastException if key does not satisfy the keyConstraint
+   * @throws org.apache.geode.distributed.LeaseExpiredException if the lease expired on a
+   *         distributed lock, for regions with Scope.GLOBAL
+   * @throws TimeoutException if the call timed out waiting to acquire a distributed lock for
+   *         regions with Scope.GLOBAL
+   * @throws CacheWriterException if a CacheWriter aborts the operation
+   * @throws PartitionedRegionStorageException if the operation could not be completed on a
+   *         partitioned region
+   * @throws LowMemoryException if a low memory condition is detected
+   * @see #invalidate(Object)
+   * @see CacheLoader#load
+   * @see CacheListener#afterCreate
+   * @see CacheListener#afterUpdate
+   * @see CacheWriter#beforeCreate
+   * @see CacheWriter#beforeUpdate
-   * @throws LowMemoryException if a low memory condition is detected.
