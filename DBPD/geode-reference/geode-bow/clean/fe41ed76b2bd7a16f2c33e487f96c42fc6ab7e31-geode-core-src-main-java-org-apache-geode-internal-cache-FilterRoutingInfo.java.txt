GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import org.apache.geode.DataSerializable;
-import org.apache.geode.DataSerializer;
-import org.apache.geode.InternalGemFireError;
-import org.apache.geode.distributed.DistributedMember;
-import org.apache.geode.distributed.internal.InternalDistributedSystem;
-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-import org.apache.geode.internal.HeapDataOutputStream;
-import org.apache.geode.internal.InternalDataSerializer;
-import org.apache.geode.internal.Version;
-import org.apache.geode.internal.VersionedDataInputStream;
-import org.apache.geode.internal.VersionedDataSerializable;
-
+import org.apache.geode.DataSerializer;
+import org.apache.geode.InternalGemFireError;
+import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.distributed.internal.InternalDistributedSystem;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.HeapDataOutputStream;
+import org.apache.geode.internal.InternalDataSerializer;
+import org.apache.geode.internal.ObjToByteArraySerializer;
+import org.apache.geode.internal.Version;
+import org.apache.geode.internal.VersionedDataInputStream;
+import org.apache.geode.internal.VersionedDataSerializable;
+
-    GemFireCacheImpl cache = GemFireCacheImpl.getInstance();
+    InternalCache cache = GemFireCacheImpl.getInstance();
-    GemFireCacheImpl cache = GemFireCacheImpl.getInstance();
+    InternalCache cache = GemFireCacheImpl.getInstance();
-    public static final long serialVersionUID = 0;
+    private static final long serialVersionUID = 0;
-          InternalDataSerializer.writeUnsignedVL(((Long) e.getKey()).longValue(), hdos);
-          InternalDataSerializer.writeUnsignedVL(((Integer) e.getValue()).intValue(), hdos);
+          InternalDataSerializer.writeUnsignedVL((Long) e.getKey(), hdos);
+          InternalDataSerializer.writeUnsignedVL((Integer) e.getValue(), hdos);
-        ((HeapDataOutputStream) out).writeAsSerializedByteArray(hdos);
+        ((ObjToByteArraySerializer) out).writeAsSerializedByteArray(hdos);
-
-            InternalDataSerializer.writeUnsignedVL(((Long) e.getKey()).longValue(), hdos);
-            InternalDataSerializer.writeUnsignedVL(((Integer) e.getValue()).intValue(), hdos);
+            InternalDataSerializer.writeUnsignedVL((Long) e.getKey(), hdos);
+            InternalDataSerializer.writeUnsignedVL((Integer) e.getValue(), hdos);
-          ((HeapDataOutputStream) out).writeAsSerializedByteArray(hdos);
+          ((ObjToByteArraySerializer) out).writeAsSerializedByteArray(hdos);
-            Integer value = Integer.valueOf((int) InternalDataSerializer.readUnsignedVL(dis));
+            Integer value = (int) InternalDataSerializer.readUnsignedVL(dis);
-
-      StringBuffer sb = new StringBuffer();
+      StringBuilder sb = new StringBuilder();
-
