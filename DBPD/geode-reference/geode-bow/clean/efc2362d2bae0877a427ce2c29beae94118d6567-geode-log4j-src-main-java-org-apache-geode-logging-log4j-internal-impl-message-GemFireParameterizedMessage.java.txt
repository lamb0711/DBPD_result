GEODE-6964: Move geode log4j core classes to geode-log4j

Introduce new Logging and Alerting SPIs. Extract all log4j-core code to
geode-log4j module.

The geode-core module no longer contains log4j2.xml and no longer has a
dependency on log4j-core.

All code that uses log4j-core has moved to the new module geode-log4j.
The log4j2.xml for Geode now lives in geode-log4j as well. These
changes ensure that users have better control over logging including
which backend to use. This should improve user experience when using
Spring Boot.

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

- * copyright ownership. The ASF licenses this file to You under the Apache license, Version 2.0 (the
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
- * or implied. See the license for the specific language governing permissions and limitations under
- * the license.
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-package org.apache.geode.internal.logging.log4j.message;
+package org.apache.geode.logging.log4j.internal.impl.message;
-import org.apache.geode.internal.cache.EntriesSet;
+import org.apache.geode.internal.cache.EntriesCollection;
-    } else if (o instanceof Collection && !(o instanceof EntriesSet)) {
-      // GEODE: do NOT use Collection handling if instanceof Geode EntriesSet
+    } else if (o instanceof Collection && !(o instanceof EntriesCollection)) {
+      // GEODE: do NOT use Collection handling if instanceof Geode EntriesCollection
