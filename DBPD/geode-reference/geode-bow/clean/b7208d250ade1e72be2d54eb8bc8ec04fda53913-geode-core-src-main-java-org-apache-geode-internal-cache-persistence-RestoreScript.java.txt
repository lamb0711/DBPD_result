GEODE-3798: Refactor backup script code (#932)

* GEODE-3798: Refactor backup script code

  * Add tests for classes with low code coverage
  * Remove use of PrintWriter
  * General cleanup and attempts a seprarating concerns

+import java.io.BufferedWriter;
-import java.io.FileNotFoundException;
-import java.io.PrintWriter;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
-  private final Map<File, File> baselineFiles = new HashMap<File, File>();
-  private final Map<File, File> backedUpFiles = new LinkedHashMap<File, File>();
-  private final List<File> existenceTests = new ArrayList<File>();
-
-  private PrintWriter writer;
-  private File outputDir;
+  private final Map<File, File> baselineFiles = new HashMap<>();
+  private final Map<File, File> backedUpFiles = new LinkedHashMap<>();
+  private final List<File> existenceTests = new ArrayList<>();
-  RestoreScript(final ScriptGenerator generator) {
+  private RestoreScript(final ScriptGenerator generator) {
-  public void generate(final File outputDir) throws FileNotFoundException {
-    this.outputDir = outputDir;
+  public void generate(final File outputDir) throws IOException {
-    generateScript(outputFile);
-  }
+    try (BufferedWriter writer = Files.newBufferedWriter(outputFile.toPath())) {
-  private void generateScript(final File outputFile) throws FileNotFoundException {
-    writer = new PrintWriter(outputFile);
-    try {
-
-      writePreamble();
-      writeAbout();
-      writeExistenceTest();
-      writeRestoreData();
-      writeIncrementalData();
+      writePreamble(writer);
+      writeAbout(writer);
+      writeExistenceTest(writer);
+      writeRestoreData(writer, outputDir.toPath());
+      writeIncrementalData(writer);
-
-    } finally {
-      writer.close();
-  private void writePreamble() {
+  private void writePreamble(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
-  private void writeAbout() {
+  private void writeAbout(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
-  private void writeExistenceTest() {
+  private void writeExistenceTest(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
-  private void writeRestoreData() {
+  private void writeRestoreData(BufferedWriter writer, Path outputDir) throws IOException {
-      boolean backupHasFiles = backup.isDirectory() && backup.list().length != 0;
-      backup = outputDir.toPath().relativize(backup.toPath()).toFile();
+      String[] backupFiles = backup.list();
+      boolean backupHasFiles =
+          backup.isDirectory() && backupFiles != null && backupFiles.length != 0;
+      backup = outputDir.relativize(backup.toPath()).toFile();
-  private void writeIncrementalData() {
+  private void writeIncrementalData(BufferedWriter writer) throws IOException {
-    writer.println();
+    writer.newLine();
+
+  public void addUserFile(File original, File dest) {
+    addExistenceTest(original);
+    addFile(original, dest);
+  }
