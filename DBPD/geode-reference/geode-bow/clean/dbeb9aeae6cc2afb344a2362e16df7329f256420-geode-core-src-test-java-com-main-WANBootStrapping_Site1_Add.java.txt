Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * On this member a locator with distributed-system-id = 1 is created. On this
- * member a cache is created.
+ * On this member a locator with distributed-system-id = 1 is created. On this member a cache is
+ * created.
- * MyDistributedSustemListener#addedDistributedSystemConnection 
- * (When a remote locator with distributed-system-id = 2 connects to this site,
- * MyDistributedSustemListener's addedDistributedSystemConnection will be
- * invoked who will create a region and a GatewaySender.)
+ * MyDistributedSustemListener#addedDistributedSystemConnection (When a remote locator with
+ * distributed-system-id = 2 connects to this site, MyDistributedSustemListener's
+ * addedDistributedSystemConnection will be invoked who will create a region and a GatewaySender.)
- * This member does put for 100 keys on the region. (We have to check that this
- * data for 100 entries are sent to remote site)
+ * This member does put for 100 keys on the region. (We have to check that this data for 100 entries
+ * are sent to remote site)
- * A GatewaySender will be stopped through
- * MyDistributedSustemListener#removedDistributedSystem 
+ * A GatewaySender will be stopped through MyDistributedSustemListener#removedDistributedSystem
- * MyDistributedSustemListener's removedDistributedSystem will be invoked who
- * will stop a GatewaySender.)
+ * MyDistributedSustemListener's removedDistributedSystem will be invoked who will stop a
+ * GatewaySender.)
-    Cache cache = new CacheFactory().set(MCAST_PORT,
-        "0").set(DISTRIBUTED_SYSTEM_ID, "" + 1).set(
-        LOCATORS, "localhost[" + 10101 + "]").set(
-        START_LOCATOR,
-        "localhost[" + 10101
-            + "],server=true,peer=true,hostname-for-clients=localhost").set(
-        LOG_LEVEL, "warning").create();
+    Cache cache = new CacheFactory().set(MCAST_PORT, "0").set(DISTRIBUTED_SYSTEM_ID, "" + 1)
+        .set(LOCATORS, "localhost[" + 10101 + "]")
+        .set(START_LOCATOR,
+            "localhost[" + 10101 + "],server=true,peer=true,hostname-for-clients=localhost")
+        .set(LOG_LEVEL, "warning").create();
-      }
-      catch (InterruptedException e) {
+      } catch (InterruptedException e) {
-      System.out
-          .println("Waitng for sender to stop through DistributedSystemListener");
+      System.out.println("Waitng for sender to stop through DistributedSystemListener");
-      }
-      catch (InterruptedException e) {
+      } catch (InterruptedException e) {
-    
+
