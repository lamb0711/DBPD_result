Merge pull request #4929 from jmelchio/slash-revert

Revert "GEODE-7938: added keys query param to GET, PUT, and DELETE /{â€¦
+import javax.servlet.http.HttpServletRequest;
+
-import org.springframework.web.bind.annotation.RequestParam;
-   * Delete data for one or more keys from a region
+   * Delete data for single key or specific keys in region
-   * @param keys comma separated list of keys
-  @RequestMapping(method = RequestMethod.DELETE, value = "/{region}/{keys}",
+  @RequestMapping(method = RequestMethod.DELETE, value = "/{region}/**",
-      notes = "Delete data for one or more keys in a region. Deprecated in favor of /{region}?keys=.")
+      notes = "Delete data for one or more keys in a region. The keys, ** in the endpoint, are a comma separated list.")
-      @PathVariable("keys") String[] keys) {
-    region = decode(region);
-    return deleteRegionKeys(region, keys);
-  }
-
-  private ResponseEntity<?> deleteRegionKeys(String region, String[] keys) {
+      HttpServletRequest request) {
+    String[] keys = parseKeys(request, region);
-    logger.debug("Delete data for keys {} on region {}", ArrayUtils.toString((Object[]) keys),
+    logger.debug("Delete data for key {} on region {}", ArrayUtils.toString((Object[]) keys),
+
+    region = decode(region);
+
-   * Delete all data in region or just the given keys
+   * Delete all data in region
-   * @param encodedKeys optional comma separated list of keys
-  @ApiOperation(value = "delete all data or the specified keys",
-      notes = "Delete all data in the region or just the specified keys.")
+  @ApiOperation(value = "delete all data", notes = "Delete all data in the region")
-  public ResponseEntity<?> deleteAllOrGivenKeys(@PathVariable("region") String region,
-      @RequestParam(value = "keys", required = false) final String[] encodedKeys) {
-    region = decode(region);
-    if (encodedKeys == null || encodedKeys.length == 0) {
-      return deleteAllRegionData(region);
-    } else {
-      String[] decodedKeys = decode(encodedKeys);
-      return deleteRegionKeys(region, decodedKeys);
-    }
-  }
-
-  private ResponseEntity<?> deleteAllRegionData(String region) {
-    securityService.authorize("DATA", "WRITE", region);
+  @PreAuthorize("@securityService.authorize('DATA', 'WRITE', #region)")
+  public ResponseEntity<?> delete(@PathVariable("region") String region) {
+
+    region = decode(region);
+
