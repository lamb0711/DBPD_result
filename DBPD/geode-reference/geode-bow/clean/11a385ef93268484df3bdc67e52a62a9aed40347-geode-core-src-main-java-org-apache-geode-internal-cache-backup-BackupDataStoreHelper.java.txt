GEODE-3940: fix deadlock in backup messages

When backup sends FlushToDisk, PrepareBackup, and FinishBackup,
it will no longer wait for all other members to respond before
doing the same work on its own member.
In addition to preventing a distributed deadlock, this will
also improve how long it takes for a backup to complete.
As part of this work the backup classes and tests have been
moved into their own backup package.

-package org.apache.geode.admin.internal;
+package org.apache.geode.internal.cache.backup;
-  public static String LOCK_SERVICE_NAME = BackupDataStoreHelper.class.getSimpleName();
-
-  private static String LOCK_NAME = LOCK_SERVICE_NAME + "_token";
-
-  private static Object LOCK_SYNC = new Object();
+  public static final String LOCK_SERVICE_NAME = BackupDataStoreHelper.class.getSimpleName();
+  private static final String LOCK_NAME = LOCK_SERVICE_NAME + "_token";
+  private static final Object LOCK_SYNC = new Object();
+  private static final FlushToDiskFactory flushToDiskFactory = new FlushToDiskFactory();
+  private static final PrepareBackupFactory prepareBackupFactory = new PrepareBackupFactory();
+  private static final FinishBackupFactory finishBackupFactory = new FinishBackupFactory();
-    FlushToDiskRequest.send(dm, recipients);
+    new FlushToDiskOperation(dm, dm.getId(), dm.getCache(), recipients, flushToDiskFactory).send();
-      existingDataStores = PrepareBackupRequest.send(dm, recipients);
+      existingDataStores = new PrepareBackupOperation(dm, dm.getId(), dm.getCache(), recipients,
+          prepareBackupFactory).send();
-      successfulMembers = FinishBackupRequest.send(dm, recipients, targetDir, baselineDir, abort);
+      successfulMembers = new FinishBackupOperation(dm, dm.getId(), dm.getCache(), recipients,
+          targetDir, baselineDir, abort, finishBackupFactory).send();
