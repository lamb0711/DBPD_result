GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import static javax.xml.XMLConstants.*;
-import static javax.xml.XMLConstants.*;
-import org.apache.geode.cache.wan.*;
+import org.apache.geode.cache.client.internal.InternalClientCache;
+import org.apache.geode.cache.wan.GatewayEventFilter;
+import org.apache.geode.cache.wan.GatewayEventSubstitutionFilter;
+import org.apache.geode.cache.wan.GatewayReceiver;
+import org.apache.geode.cache.wan.GatewaySender;
+import org.apache.geode.cache.wan.GatewayTransportFilter;
+import org.apache.geode.internal.cache.InternalCache;
- *
-  ///////////////////////// Instance Fields ////////////////////////
-
-  // final private int cacheLockLease;
-  // final private int cacheLockTimeout;
-  // final private int cacheSearchTimeout;
-  // final private boolean isServer;
-  // final private boolean copyOnRead;
-
-  /////////////////////// Static Methods ///////////////////////
-
-
-
-  //////////////////////// Constructors ////////////////////////
-
-      if (((GemFireCacheImpl) cache).isClient()) {
+      if (((InternalCache) cache).isClient()) {
-  ////////////////////// Instance Methods //////////////////////
-
-          GemFireCacheImpl gfc = (GemFireCacheImpl) this.cache;
+          InternalCache gfc = (InternalCache) this.cache;
-          /* if (this.version.compareTo(CacheXmlVersion.GEMFIRE_6_5) >= 0) */ {
+          {
-            GemFireCacheImpl gfc = (GemFireCacheImpl) this.cache;
-            for (File file : gfc.getBackupFiles()) {
+            InternalCache internalCache = (InternalCache) this.cache;
+            for (File file : internalCache.getBackupFiles()) {
-    } else {
-      if (handler instanceof LexicalHandler) {
-        // LexicalHandler lex = (LexicalHandler) handler;
-        // lex.comment(comment.toCharArray(), 0, comment.length());
-      }
-
-    CacheConfig config;
-    if (this.cache instanceof CacheCreation) {
-      config = ((CacheCreation) cache).getCacheConfig();
-    } else {
-      config = ((GemFireCacheImpl) cache).getCacheConfig();
-    }
+    CacheConfig config = ((InternalCache) cache).getCacheConfig();
-
-          || bridge.getMessageTimeToLive() != CacheServer.DEFAULT_MESSAGE_TIME_TO_LIVE)
+          || bridge.getMessageTimeToLive() != CacheServer.DEFAULT_MESSAGE_TIME_TO_LIVE) {
-
-
+      }
-
-
-   * 
-   *
-
-
-
-  //
-  // private void generateGatewayEventListener(GatewayEventListener gef)
-  // throws SAXException {
-  //
-  // handler.startElement("", GATEWAY_EVENT_LISTENER, GATEWAY_EVENT_LISTENER,
-  // EMPTY);
-  // String className = gef.getClass().getName();
-  //
-  // handler.startElement("", CLASS_NAME, CLASS_NAME, EMPTY);
-  // handler.characters(className.toCharArray(), 0, className.length());
-  // handler.endElement("", CLASS_NAME, CLASS_NAME);
-  // Properties props = null;
-  // if (gef instanceof Declarable2) {
-  // props = ((Declarable2)gef).getConfig();
-  // generate(props, null);
-  // }
-  // handler.endElement("", GATEWAY_EVENT_LISTENER, GATEWAY_EVENT_LISTENER);
-  // }
-
-
-
-      props = ((GemFireCacheImpl) cache).getDeclarableProperties((Declarable) callback);
+      props = ((InternalCache) cache).getDeclarableProperties((Declarable) callback);
-
-
-
-
-
-      // for (Iterator iter = props.entrySet().iterator();
-      // iter.hasNext(); ) {
-      // Map.Entry entry = (Map.Entry) iter.next();
-      // String name = (String) entry.getKey();
-      // Object value = entry.getValue();
-      //
-      // AttributesImpl atts = new AttributesImpl();
-      // atts.addAttribute("", "", NAME, "", name);
-      //
-      // handler.startElement("", PARAMETER, PARAMETER, atts);
-      //
-      // if (value instanceof String) {
-      // generate((String) value);
-      //
-      // } else if (value instanceof Declarable) {
-      // generate((Declarable) value);
-      //
-      // } else {
-      // // Ignore it
-      // }
-      //
-      // handler.endElement("", PARAMETER, PARAMETER);
-      // }
-
-  ////////// Inherited methods that don't do anything //////////
-
-
+    // nothing
-
+    // nothing
-
+    // nothing
-
+    // nothing
-
+    // nothing
-
+    // nothing
-
