GEODE-6334: Change cache operation stats to longs (#3142)

* Change cache operation stats to longs
* Use long instead of int for CqQueryOptimized Tests
* Clean up easy parts of CqQueryOptimized Tests
* Fix usages of CachePerfStats from ints to longs
* Add CacheStatistics integration test
* Remove cachePerfStats.getPuts() testing in backwards compatibility
DUnit test because it was trying to test old versions when this is all internal
* Update sanctioned data serializables

Co-authored-by: Michael Oleske <moleske@pivotal.io>
Co-authored-by: Galen O'Sullivan <gosullivan@pivotal.io>
Co-authored-by: Kirk Lund <klund@pivotal.io>

-            f.createIntCounter("loadsCompleted", loadsCompletedDesc, "operations"),
+            f.createLongCounter("loadsCompleted", loadsCompletedDesc, "operations"),
-            f.createIntCounter("netloadsCompleted", netloadsCompletedDesc, "operations"),
+            f.createLongCounter("netloadsCompleted", netloadsCompletedDesc, "operations"),
-            f.createIntCounter("netsearchesCompleted", netsearchesCompletedDesc, "operations"),
+            f.createLongCounter("netsearchesCompleted", netsearchesCompletedDesc, "operations"),
-            f.createIntCounter("cacheWriterCallsCompleted", cacheWriterCallsCompletedDesc,
+            f.createLongCounter("cacheWriterCallsCompleted", cacheWriterCallsCompletedDesc,
-            f.createIntCounter("cacheListenerCallsCompleted", cacheListenerCallsCompletedDesc,
+            f.createLongCounter("cacheListenerCallsCompleted", cacheListenerCallsCompletedDesc,
-            f.createIntCounter("indexUpdateCompleted", "Total number of ops that have completed",
+            f.createLongCounter("indexUpdateCompleted", "Total number of ops that have completed",
-            f.createIntCounter("getInitialImagesCompleted", getInitialImagesCompletedDesc,
+            f.createLongCounter("getInitialImagesCompleted", getInitialImagesCompletedDesc,
-            f.createIntCounter("deltaGetInitialImagesCompleted", deltaGetInitialImagesCompletedDesc,
+            f.createLongCounter("deltaGetInitialImagesCompleted",
+                deltaGetInitialImagesCompletedDesc,
-            f.createIntCounter("destroys", destroysDesc, "operations"),
-            f.createIntCounter("updates", updatesDesc, "operations"),
+            f.createLongCounter("destroys", destroysDesc, "operations"),
+            f.createLongCounter("updates", updatesDesc, "operations"),
-            f.createIntCounter("invalidates", invalidatesDesc, "operations"),
-            f.createIntCounter("gets", getsDesc, "operations"),
-            f.createIntCounter("misses", missesDesc, "operations"),
-            f.createIntCounter("creates", createsDesc, "operations"),
-            f.createIntCounter("puts", putsDesc, "operations"),
+            f.createLongCounter("invalidates", invalidatesDesc, "operations"),
+            f.createLongCounter("gets", getsDesc, "operations"),
+            f.createLongCounter("misses", missesDesc, "operations"),
+            f.createLongCounter("creates", createsDesc, "operations"),
+            f.createLongCounter("puts", putsDesc, "operations"),
-            f.createIntCounter("putalls", putallsDesc, "operations"),
+            f.createLongCounter("putalls", putallsDesc, "operations"),
-            f.createIntCounter("removeAlls", removeAllsDesc, "operations"),
+            f.createLongCounter("removeAlls", removeAllsDesc, "operations"),
-            f.createIntCounter("queryExecutions", queryExecutionsDesc, "operations"),
+            f.createLongCounter("queryExecutions", queryExecutionsDesc, "operations"),
-            f.createIntCounter("txCommits", txCommitsDesc, "commits"),
-            f.createIntCounter("txCommitChanges", txCommitChangesDesc, "changes"),
+            f.createLongCounter("txCommits", txCommitsDesc, "commits"),
+            f.createLongCounter("txCommitChanges", txCommitChangesDesc, "changes"),
-            f.createIntCounter("txFailures", txFailuresDesc, "failures"),
-            f.createIntCounter("txFailureChanges", txFailureChangesDesc, "changes"),
+            f.createLongCounter("txFailures", txFailuresDesc, "failures"),
+            f.createLongCounter("txFailureChanges", txFailureChangesDesc, "changes"),
-            f.createIntCounter("txRollbacks", txRollbacksDesc, "rollbacks"),
-            f.createIntCounter("txRollbackChanges", txRollbackChangesDesc, "changes"),
+            f.createLongCounter("txRollbacks", txRollbacksDesc, "rollbacks"),
+            f.createLongCounter("txRollbackChanges", txRollbackChangesDesc, "changes"),
-            f.createIntCounter("retries",
+            f.createLongCounter("retries",
-            f.createIntCounter("clears", clearsDesc, "operations"),
+            f.createLongCounter("clears", clearsDesc, "operations"),
-            f.createIntGauge("evictorJobsStarted", "Number of evictor jobs started", "jobs"),
-            f.createIntGauge("evictorJobsCompleted", "Number of evictor jobs completed", "jobs"),
+            f.createLongGauge("evictorJobsStarted", "Number of evictor jobs started", "jobs"),
+            f.createLongGauge("evictorJobsCompleted", "Number of evictor jobs completed", "jobs"),
-            f.createIntCounter("deltaUpdates", deltaUpdatesDesc, "operations"),
+            f.createLongCounter("deltaUpdates", deltaUpdatesDesc, "operations"),
-            f.createIntCounter("deltaFailedUpdates", deltaFailedUpdatesDesc, "operations"),
-            f.createIntCounter("deltasPrepared", deltasPreparedDesc, "operations"),
+            f.createLongCounter("deltaFailedUpdates", deltaFailedUpdatesDesc, "operations"),
+            f.createLongCounter("deltasPrepared", deltasPreparedDesc, "operations"),
-            f.createIntCounter("deltasSent", deltasSentDesc, "operations"),
-            f.createIntCounter("deltaFullValuesSent", deltaFullValuesSentDesc, "operations"),
-            f.createIntCounter("deltaFullValuesRequested", deltaFullValuesRequestedDesc,
+            f.createLongCounter("deltasSent", deltasSentDesc, "operations"),
+            f.createLongCounter("deltaFullValuesSent", deltaFullValuesSentDesc, "operations"),
+            f.createLongCounter("deltaFullValuesRequested", deltaFullValuesRequestedDesc,
-  public int getLoadsCompleted() {
-    return stats.getInt(loadsCompletedId);
+  public long getLoadsCompleted() {
+    return stats.getLong(loadsCompletedId);
-  public int getNetloadsCompleted() {
-    return stats.getInt(netloadsCompletedId);
+  public long getNetloadsCompleted() {
+    return stats.getLong(netloadsCompletedId);
-  public int getNetsearchesCompleted() {
-    return stats.getInt(netsearchesCompletedId);
+  public long getNetsearchesCompleted() {
+    return stats.getLong(netsearchesCompletedId);
-  public int getGetInitialImagesCompleted() {
-    return stats.getInt(getInitialImagesCompletedId);
+  public long getGetInitialImagesCompleted() {
+    return stats.getLong(getInitialImagesCompletedId);
-  int getDeltaGetInitialImagesCompleted() {
-    return stats.getInt(deltaGetInitialImagesCompletedId);
+  long getDeltaGetInitialImagesCompleted() {
+    return stats.getLong(deltaGetInitialImagesCompletedId);
-  public int getDestroys() {
-    return stats.getInt(destroysId);
+  public long getDestroys() {
+    return stats.getLong(destroysId);
-  public int getCreates() {
-    return stats.getInt(createsId);
+  public long getCreates() {
+    return stats.getLong(createsId);
-  public int getPuts() {
-    return stats.getInt(putsId);
+  public long getPuts() {
+    return stats.getLong(putsId);
-  public int getPutAlls() {
-    return stats.getInt(putallsId);
+  public long getPutAlls() {
+    return stats.getLong(putallsId);
-  int getRemoveAlls() {
-    return stats.getInt(removeAllsId);
+  long getRemoveAlls() {
+    return stats.getLong(removeAllsId);
-  public int getUpdates() {
-    return stats.getInt(updatesId);
+  public long getUpdates() {
+    return stats.getLong(updatesId);
-  public int getInvalidates() {
-    return stats.getInt(invalidatesId);
+  public long getInvalidates() {
+    return stats.getLong(invalidatesId);
-  public int getGets() {
-    return stats.getInt(getsId);
+  public long getGets() {
+    return stats.getLong(getsId);
-  public int getMisses() {
-    return stats.getInt(missesId);
+  public long getMisses() {
+    return stats.getLong(missesId);
-  int getDeltaUpdates() {
-    return stats.getInt(deltaUpdatesId);
+  long getDeltaUpdates() {
+    return stats.getLong(deltaUpdatesId);
-  public int getDeltaFailedUpdates() {
-    return stats.getInt(deltaFailedUpdatesId);
+  public long getDeltaFailedUpdates() {
+    return stats.getLong(deltaFailedUpdatesId);
-  int getDeltasPrepared() {
-    return stats.getInt(deltasPreparedId);
+  long getDeltasPrepared() {
+    return stats.getLong(deltasPreparedId);
-  public int getDeltasSent() {
-    return stats.getInt(deltasSentId);
+  public long getDeltasSent() {
+    return stats.getLong(deltasSentId);
-  public int getDeltaFullValuesSent() {
-    return stats.getInt(deltaFullValuesSentId);
+  public long getDeltaFullValuesSent() {
+    return stats.getLong(deltaFullValuesSentId);
-  int getDeltaFullValuesRequested() {
-    return stats.getInt(deltaFullValuesRequestedId);
+  long getDeltaFullValuesRequested() {
+    return stats.getLong(deltaFullValuesRequestedId);
-    stats.incInt(loadsCompletedId, 1);
+    stats.incLong(loadsCompletedId, 1);
-    stats.incInt(netloadsCompletedId, 1);
+    stats.incLong(netloadsCompletedId, 1);
-    stats.incInt(netsearchesCompletedId, 1);
+    stats.incLong(netsearchesCompletedId, 1);
-    stats.incInt(cacheWriterCallsCompletedId, 1);
+    stats.incLong(cacheWriterCallsCompletedId, 1);
-  int getCacheWriterCallsCompleted() {
-    return stats.getInt(cacheWriterCallsCompletedId);
+  long getCacheWriterCallsCompleted() {
+    return stats.getLong(cacheWriterCallsCompletedId);
-    stats.incInt(cacheListenerCallsCompletedId, 1);
+    stats.incLong(cacheListenerCallsCompletedId, 1);
-  int getCacheListenerCallsCompleted() {
-    return stats.getInt(cacheListenerCallsCompletedId);
+  long getCacheListenerCallsCompleted() {
+    return stats.getLong(cacheListenerCallsCompletedId);
-    stats.incInt(getInitialImagesCompletedId, 1);
+    stats.incLong(getInitialImagesCompletedId, 1);
-    stats.incInt(deltaGetInitialImagesCompletedId, 1);
+    stats.incLong(deltaGetInitialImagesCompletedId, 1);
-    stats.incInt(indexUpdateCompletedId, 1);
+    stats.incLong(indexUpdateCompletedId, 1);
-  int getIndexUpdateCompleted() {
-    return stats.getInt(indexUpdateCompletedId);
+  long getIndexUpdateCompleted() {
+    return stats.getLong(indexUpdateCompletedId);
-    stats.incInt(destroysId, 1);
+    stats.incLong(destroysId, 1);
-    stats.incInt(createsId, 1);
+    stats.incLong(createsId, 1);
-    stats.incInt(invalidatesId, 1);
+    stats.incLong(invalidatesId, 1);
-    stats.incInt(getsId, 1);
+    stats.incLong(getsId, 1);
-      stats.incInt(missesId, 1);
+      stats.incLong(missesId, 1);
-      stats.incInt(updatesId, 1);
+      stats.incLong(updatesId, 1);
-      stats.incInt(putsId, 1);
+      stats.incLong(putsId, 1);
-    stats.incInt(putallsId, 1);
+    stats.incLong(putallsId, 1);
-    stats.incInt(removeAllsId, 1);
+    stats.incLong(removeAllsId, 1);
-    stats.incInt(queryExecutionsId, 1);
+    stats.incLong(queryExecutionsId, 1);
-  public int getQueryExecutions() {
-    return stats.getInt(queryExecutionsId);
+  public long getQueryExecutions() {
+    return stats.getLong(queryExecutionsId);
-  public int getTxCommits() {
-    return stats.getInt(txCommitsId);
+  public long getTxCommits() {
+    return stats.getLong(txCommitsId);
-  public int getTxCommitChanges() {
-    return stats.getInt(txCommitChangesId);
+  public long getTxCommitChanges() {
+    return stats.getLong(txCommitChangesId);
-  public int getTxFailures() {
-    return stats.getInt(txFailuresId);
+  public long getTxFailures() {
+    return stats.getLong(txFailuresId);
-  public int getTxFailureChanges() {
-    return stats.getInt(txFailureChangesId);
+  public long getTxFailureChanges() {
+    return stats.getLong(txFailureChangesId);
-  public int getTxRollbacks() {
-    return stats.getInt(txRollbacksId);
+  public long getTxRollbacks() {
+    return stats.getLong(txRollbacksId);
-  public int getTxRollbackChanges() {
-    return stats.getInt(txRollbackChangesId);
+  public long getTxRollbackChanges() {
+    return stats.getLong(txRollbackChangesId);
-    stats.incInt(txCommitsId, 1);
-    stats.incInt(txCommitChangesId, txChanges);
+    stats.incLong(txCommitsId, 1);
+    stats.incLong(txCommitChangesId, txChanges);
-    stats.incInt(txFailuresId, 1);
-    stats.incInt(txFailureChangesId, txChanges);
+    stats.incLong(txFailuresId, 1);
+    stats.incLong(txFailureChangesId, txChanges);
-    stats.incInt(txRollbacksId, 1);
-    stats.incInt(txRollbackChangesId, txChanges);
+    stats.incLong(txRollbacksId, 1);
+    stats.incLong(txRollbackChangesId, txChanges);
-    stats.incInt(deltaUpdatesId, 1);
+    stats.incLong(deltaUpdatesId, 1);
-    stats.incInt(deltaFailedUpdatesId, 1);
+    stats.incLong(deltaFailedUpdatesId, 1);
-    stats.incInt(deltasPreparedId, 1);
+    stats.incLong(deltasPreparedId, 1);
-    stats.incInt(deltasSentId, 1);
+    stats.incLong(deltasSentId, 1);
-    stats.incInt(deltaFullValuesSentId, 1);
+    stats.incLong(deltaFullValuesSentId, 1);
-    stats.incInt(deltaFullValuesRequestedId, 1);
+    stats.incLong(deltaFullValuesRequestedId, 1);
-    stats.incInt(retriesId, 1);
+    stats.incLong(retriesId, 1);
-  public int getRetries() {
-    return stats.getInt(retriesId);
+  public long getRetries() {
+    return stats.getLong(retriesId);
-    stats.incInt(evictorJobsStartedId, 1);
+    stats.incLong(evictorJobsStartedId, 1);
-  int getEvictorJobsStarted() {
-    return stats.getInt(evictorJobsStartedId);
+  long getEvictorJobsStarted() {
+    return stats.getLong(evictorJobsStartedId);
-    stats.incInt(evictorJobsCompletedId, 1);
+    stats.incLong(evictorJobsCompletedId, 1);
-  int getEvictorJobsCompleted() {
-    return stats.getInt(evictorJobsCompletedId);
+  long getEvictorJobsCompleted() {
+    return stats.getLong(evictorJobsCompletedId);
-  public int getClearCount() {
-    return stats.getInt(clearsId);
+  public long getClearCount() {
+    return stats.getLong(clearsId);
-    stats.incInt(clearsId, 1);
+    stats.incLong(clearsId, 1);
