GEODE-6588: Properly type Function execution related interfaces. (#3691)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Peter Tran <ptran@gmail.com>

* Extensions and implementations of Execution and ResultCollector and the 
classes and interfaces involved in the execution chain were lacking the
ability to apply Generic types.
* Typing issues starting from MemberConfigManager.java class were fixed.
* Trivial IDE warnings were fixed.
-public class MultiRegionFunctionExecutor extends AbstractExecution {
+public class MultiRegionFunctionExecutor<ArgumentT, ReturnT, AggregatorT>
+    extends AbstractExecution<ArgumentT, ReturnT, AggregatorT> {
-  private MultiRegionFunctionExecutor(MultiRegionFunctionExecutor drfe) {
-    super(drfe);
-    this.regions = drfe.regions;
-    if (drfe.filter != null) {
-      this.filter.clear();
-      this.filter.addAll(drfe.filter);
-    }
-    this.sender = drfe.sender;
-  }
-
-  private MultiRegionFunctionExecutor(Set<Region> regions, Set filter2, Object args,
-      MemberMappedArgument memberMappedArg, ServerToClientFunctionResultSender resultSender) {
-    if (args != null) {
-      this.args = args;
-    } else if (memberMappedArg != null) {
-      this.memberMappedArg = memberMappedArg;
-      this.isMemberMappedArgument = true;
-    }
-    this.sender = resultSender;
-    if (filter2 != null) {
-      this.filter.clear();
-      this.filter.addAll(filter2);
-    }
-    this.regions = regions;
-    this.isClientServerMode = true;
-  }
-
-  public InternalExecution withBucketFilter(Set<Integer> bucketIDs) {
+  public InternalExecution<ArgumentT, ReturnT, AggregatorT> withBucketFilter(
+      Set<Integer> bucketIDs) {
-        new HashSet<InternalDistributedMember>(memberToRegionMap.keySet());
+        new HashSet<>(memberToRegionMap.keySet());
+    assert cache != null;
-      Set<Region> regions = new HashSet<Region>();
+      Set<Region> regions = new HashSet<>();
-      boolean isTx = cache.getTxManager().getTXState() == null ? false : true;
+      boolean isTx = cache.getTxManager().getTXState() != null;
-          new HashMap<InternalDistributedMember, Object>();
+          new HashMap<>();
-    Map<InternalDistributedMember, Set<String>> memberToRegions =
-        new HashMap<InternalDistributedMember, Set<String>>();
+    Map<InternalDistributedMember, Set<String>> memberToRegions = new HashMap<>();
-    Set<InternalDistributedMember> nodes = new HashSet<InternalDistributedMember>();
+    Set<InternalDistributedMember> nodes = new HashSet<>();
-            regions = new HashSet<String>();
+            regions = new HashSet<>();
-              regions = new HashSet<String>();
+              regions = new HashSet<>();
-                regions = new HashSet<String>();
+                regions = new HashSet<>();
-              regions = new HashSet<String>();
+              regions = new HashSet<>();
-            regions = new HashSet<String>();
+            regions = new HashSet<>();
-          regions = new HashSet<String>();
+          regions = new HashSet<>();
