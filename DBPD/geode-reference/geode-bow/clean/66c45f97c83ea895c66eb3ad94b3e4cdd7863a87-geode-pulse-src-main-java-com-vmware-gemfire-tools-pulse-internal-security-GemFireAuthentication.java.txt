GEODE-17: fix pulse authorization

-import org.springframework.security.core.context.SecurityContextHolder;
-	
-	public static boolean authorize(String role){
-		try {
-			GemFireAuthentication authentication = (GemFireAuthentication) SecurityContextHolder
-					.getContext().getAuthentication();
-			MBeanServerConnection mbeanServer = authentication
-					.getRemoteMBeanServer();
-			LOGGER.fine("#GemFireAuthentication : Checking for role="+role);
-			ObjectName name = new ObjectName(PulseConstants.OBJECT_NAME_ACCESSCONTROL_MBEAN);
-			Object[] params = new Object[] {role};
-			String[] signature = new String[] {String.class.getCanonicalName()};
-			Boolean result = (Boolean)mbeanServer.invoke(name, "authorize", params, signature);
-			return result;
-		} catch (MalformedObjectNameException e) {
-			throw new RuntimeException(e);
-		} catch (InstanceNotFoundException e) {
-			throw new RuntimeException(e);
-		} catch (MBeanException e) {
-			throw new RuntimeException(e);
-		} catch (ReflectionException e) {
-			throw new RuntimeException(e);
-		} catch (IOException e) {
-			throw new RuntimeException(e);
-		}
-	}
-			authorities.add(new SimpleGrantedAuthority("ROLE_USER"));
-				Object[] params = new Object[] {"PULSE", role};
+				Object[] params = role.split(":");
-					authorities.add(new SimpleGrantedAuthority("ROLE_"+role)); 
+					authorities.add(new SimpleGrantedAuthority(role));
-		}		
+		}
