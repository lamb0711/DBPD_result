GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes

-  public void cmdExecute(Message msg, ServerConnection servConn, long start)
+  public void cmdExecute(Message clientMessage, ServerConnection serverConnection, long start)
-    AcceptorImpl acceptor = servConn.getAcceptor();
-    CachedRegionHelper crHelper = servConn.getCachedRegionHelper();
-    ClientProxyMembershipID id = servConn.getProxyID();
-    CacheServerStats stats = servConn.getCacheServerStats();
+    AcceptorImpl acceptor = serverConnection.getAcceptor();
+    CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();
+    ClientProxyMembershipID id = serverConnection.getProxyID();
+    CacheServerStats stats = serverConnection.getCacheServerStats();
-    servConn.setAsTrue(REQUIRES_RESPONSE);
-    servConn.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_RESPONSE);
+    serverConnection.setAsTrue(REQUIRES_CHUNKED_RESPONSE);
-      logger.debug("{}: Received {} request from {}", servConn.getName(),
-          MessageType.getString(msg.getMessageType()), servConn.getSocketString());
+      logger.debug("{}: Received {} request from {}", serverConnection.getName(),
+          MessageType.getString(clientMessage.getMessageType()),
+          serverConnection.getSocketString());
-      AuthorizeRequest authzRequest = servConn.getAuthzRequest();
+      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();
-      ChunkedMessage chunkedResponseMsg = servConn.getChunkedResponseMessage();
+      ChunkedMessage chunkedResponseMsg = serverConnection.getChunkedResponseMessage();
-      chunkedResponseMsg.setTransactionId(msg.getTransactionId());
+      chunkedResponseMsg.setTransactionId(clientMessage.getTransactionId());
-      List durableCqList = new ArrayList(maximumChunkSize);
+      List durableCqList = new ArrayList(MAXIMUM_CHUNK_SIZE);
-          logger.trace("{}: getDurableCqsResponse <{}>; list size was {}", servConn.getName(),
-              durableCqName, durableCqList.size());
+          logger.trace("{}: getDurableCqsResponse <{}>; list size was {}",
+              serverConnection.getName(), durableCqName, durableCqList.size());
-        if (durableCqList.size() == maximumChunkSize) {
+        if (durableCqList.size() == MAXIMUM_CHUNK_SIZE) {
-          sendDurableCqsResponseChunk(durableCqList, false, servConn);
+          sendDurableCqsResponseChunk(durableCqList, false, serverConnection);
-      sendDurableCqsResponseChunk(durableCqList, true, servConn);
+      sendDurableCqsResponseChunk(durableCqList, true, serverConnection);
-      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, "", msg.getTransactionId(), cqe, servConn);
+      sendCqResponse(MessageType.CQ_EXCEPTION_TYPE, "", clientMessage.getTransactionId(), cqe,
+          serverConnection);
-      writeChunkedException(msg, e, false, servConn);
+      writeChunkedException(clientMessage, e, serverConnection);
-    chunkedResponseMsg.addObjPart(list, zipValues);
+    chunkedResponseMsg.addObjPart(list, false);
