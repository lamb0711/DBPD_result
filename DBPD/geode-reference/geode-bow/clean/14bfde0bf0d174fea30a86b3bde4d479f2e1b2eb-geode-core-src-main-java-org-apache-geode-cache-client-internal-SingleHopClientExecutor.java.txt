Merge branch 'release/1.8.0'

-import java.util.concurrent.Executors;
-import java.util.concurrent.ThreadFactory;
-import java.util.concurrent.atomic.AtomicInteger;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.LoggingThreadGroup;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingExecutors;
-  static final ExecutorService execService = Executors.newCachedThreadPool(new ThreadFactory() {
-    AtomicInteger threadNum = new AtomicInteger();
-
-    public Thread newThread(final Runnable r) {
-      Thread result =
-          new Thread(LoggingThreadGroup.createThreadGroup("FunctionExecutionThreadGroup", logger),
-              r, "Function Execution Thread-" + threadNum.incrementAndGet());
-      result.setDaemon(true);
-      return result;
-    }
-  });
+  static final ExecutorService execService =
+      LoggingExecutors.newCachedThreadPool("Function Execution Thread-", true);
-                          LocalizedStrings.FunctionService_BUCKET_MIGRATED_TO_ANOTHER_NODE
-                              .toLocalizedString()));
+                          "Bucket migrated to another node. Please retry."));
-        final boolean isDebugEnabled = logger.isDebugEnabled();
-                  logger.warn(LocalizedMessage.create(
-                      LocalizedStrings.GetAll_0_CAUGHT_THE_FOLLOWING_EXCEPTION_ATTEMPTING_TO_GET_VALUE_FOR_KEY_1,
-                      new Object[] {value, key}), (Throwable) value);
+                  logger.warn(String.format(
+                      "%s: Caught the following exception attempting to get value for key=%s",
+                      new Object[] {value, key}),
+                      (Throwable) value);
