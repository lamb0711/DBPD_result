GEODE-6875: Remove unused & deprecated API usage (#3813)

- Fixed warnings.
- Replaced deprecated API in Http Session.
- Replaced usage of internal API in Http Session.
- Removed unused classes and methods in Http Session.
-import org.apache.geode.Instantiator;
-import org.apache.geode.cache.CacheWriter;
-@SuppressWarnings({"serial", "unchecked"})
+@SuppressWarnings("serial")
-  public String getRegionAttributesId() {
+  String getRegionAttributesId() {
-  public CustomExpiry getCustomExpiry() {
+  CustomExpiry getCustomExpiry() {
-  public boolean getEnableGatewayDeltaReplication() {
+  boolean getEnableGatewayDeltaReplication() {
-   * Returns whether replication across a <code>Gateway</code> is enabled.
-   *
-   * @return whether replication across a <code>Gateway</code> is enabled
-   */
-  public boolean getEnableGatewayReplication() {
-    return this.enableGatewayReplication;
-  }
-
-  /**
-  public boolean getEnableDebugListener() {
+  boolean getEnableDebugListener() {
-  public boolean getSessionExpirationCacheListener() {
+  boolean getSessionExpirationCacheListener() {
-  /**
-   * Registers an <code>Instantiator</code> for the <code>SessionConfiguration</code> class
-   */
-  public static void registerInstantiator(int id) {
-    Instantiator.register(new Instantiator(RegionConfiguration.class, id) {
-      @Override
-      public DataSerializable newInstance() {
-        return new RegionConfiguration();
-      }
-    });
-  }
-
-    return new StringBuilder().append("RegionConfiguration[").append("regionName=")
-        .append(this.regionName).append("; regionAttributesId=").append(this.regionAttributesId)
-        .append("; maxInactiveInterval=").append(this.maxInactiveInterval)
-        .append("; enableGatewayDeltaReplication=").append(this.enableGatewayDeltaReplication)
-        .append("; enableGatewayReplication=").append(this.enableGatewayReplication)
-        .append("; enableDebugListener=").append(this.enableDebugListener)
-        .append("; enableSessionExpirationCacheListener=")
-        .append(this.enableSessionExpirationCacheListener).append("; cacheWriter=")
-        .append(this.cacheWriterName).append("]").toString();
+    return "RegionConfiguration[" + "regionName="
+        + this.regionName + "; regionAttributesId=" + this.regionAttributesId
+        + "; maxInactiveInterval=" + this.maxInactiveInterval
+        + "; enableGatewayDeltaReplication=" + this.enableGatewayDeltaReplication
+        + "; enableGatewayReplication=" + this.enableGatewayReplication
+        + "; enableDebugListener=" + this.enableDebugListener
+        + "; enableSessionExpirationCacheListener="
+        + this.enableSessionExpirationCacheListener + "; cacheWriter="
+        + this.cacheWriterName + "]";
-  /**
-   * set the fully qualified name of the {@link CacheWriter} to be created on the server. The
-   * cacheWriter must have a zero arg constructor, and must be present on the classpath on the
-   * server.
-   *
-   * @param cacheWriterName fully qualified class name of the cacheWriter
-   */
-  public void setCacheWriterName(String cacheWriterName) {
-    this.cacheWriterName = cacheWriterName;
-  }
-
-  public String getCacheWriterName() {
+  String getCacheWriterName() {
