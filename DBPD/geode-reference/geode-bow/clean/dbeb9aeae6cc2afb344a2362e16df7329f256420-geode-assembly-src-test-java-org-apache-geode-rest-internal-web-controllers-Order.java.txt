Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-* The Order class is an abstraction modeling a order.
-* <p/>
-* @since GemFire 8.0
-*/
+ * The Order class is an abstraction modeling a order.
+ * <p/>
+ * 
+ * @since GemFire 8.0
+ */
-  
+
-  private List<Item> items; 
-  private double totalPrice; 
+  private List<Item> items;
+  private double totalPrice;
-  public Order(final Long orderNo, final Long custId, final String desc,
-    final Date odate, final Date ddate, final String contact, final String email,
-    final String phone, final List<Item> items, final double tprice) {
+  public Order(final Long orderNo, final Long custId, final String desc, final Date odate,
+      final Date ddate, final String contact, final String email, final String phone,
+      final List<Item> items, final double tprice) {
-  
+
-    if(this.items == null)
+    if (this.items == null)
-    
+
-    items = (List<Item>)reader.readObject("items");
+    items = (List<Item>) reader.readObject("items");
-    
+
