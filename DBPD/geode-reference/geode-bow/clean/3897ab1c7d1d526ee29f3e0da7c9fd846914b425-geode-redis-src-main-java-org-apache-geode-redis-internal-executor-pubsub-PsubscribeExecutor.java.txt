GEODE-8151: Convert remaining commands to use RedisResponse (#5228)


+import java.util.Collection;
-import io.netty.buffer.ByteBuf;
-import org.apache.logging.log4j.Logger;
-
-import org.apache.geode.logging.internal.log4j.api.LogService;
-import org.apache.geode.redis.internal.netty.Coder;
-import org.apache.geode.redis.internal.netty.CoderException;
+import org.apache.geode.redis.internal.executor.RedisResponse;
-  private static final Logger logger = LogService.getLogger();
-  public void executeCommand(Command command, ExecutionHandlerContext context) {
-    ArrayList<ArrayList<Object>> items = new ArrayList<>();
+  public RedisResponse executeCommand(Command command,
+      ExecutionHandlerContext context) {
+    Collection<Collection<?>> items = new ArrayList<>();
-      ArrayList<Object> item = new ArrayList<>();
+      Collection<Object> item = new ArrayList<>();
-    writeResponse(command, context, items);
-  }
-
-  private void writeResponse(Command command, ExecutionHandlerContext context,
-      ArrayList<ArrayList<Object>> items) {
-    ByteBuf aggregatedResponse = context.getByteBufAllocator().buffer();
-    items.forEach(item -> {
-      ByteBuf response = null;
-      try {
-        response = Coder.getArrayResponse(context.getByteBufAllocator(), item);
-      } catch (CoderException e) {
-        logger.warn("Error encoding subscribe response", e);
-      }
-      if (response != null) {
-        aggregatedResponse.writeBytes(response);
-        response.release();
-      }
-    });
-    command.setResponse(aggregatedResponse);
+    return RedisResponse.flattenedArray(items);
