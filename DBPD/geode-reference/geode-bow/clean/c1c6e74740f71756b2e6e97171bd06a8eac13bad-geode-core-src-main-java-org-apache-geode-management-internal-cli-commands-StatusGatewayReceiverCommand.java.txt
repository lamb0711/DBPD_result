GEODE-3539: add more tests for get, put, locate entry commands (#1025)

* GEODE-3539: add more tests for get, put, locate entry commands

* clean up more methods in CliUtil
* refactor tests out of GemfireDataCommandsDUnitTest
* get rid of unnecessary try/catch block in commands

-import org.apache.geode.management.internal.cli.LogWrapper;
-    try {
-      InternalCache cache = getCache();
-      SystemManagementService service =
-          (SystemManagementService) ManagementService.getExistingManagementService(cache);
+    InternalCache cache = getCache();
+    SystemManagementService service =
+        (SystemManagementService) ManagementService.getExistingManagementService(cache);
-      CompositeResultData crd = ResultBuilder.createCompositeResultData();
-      TabularResultData availableReceiverData =
-          crd.addSection(CliStrings.SECTION_GATEWAY_RECEIVER_AVAILABLE)
-              .addTable(CliStrings.TABLE_GATEWAY_RECEIVER);
+    CompositeResultData crd = ResultBuilder.createCompositeResultData();
+    TabularResultData availableReceiverData =
+        crd.addSection(CliStrings.SECTION_GATEWAY_RECEIVER_AVAILABLE)
+            .addTable(CliStrings.TABLE_GATEWAY_RECEIVER);
-      TabularResultData notAvailableReceiverData =
-          crd.addSection(CliStrings.SECTION_GATEWAY_RECEIVER_NOT_AVAILABLE)
-              .addTable(CliStrings.TABLE_GATEWAY_RECEIVER);
+    TabularResultData notAvailableReceiverData =
+        crd.addSection(CliStrings.SECTION_GATEWAY_RECEIVER_NOT_AVAILABLE)
+            .addTable(CliStrings.TABLE_GATEWAY_RECEIVER);
-      Set<DistributedMember> dsMembers = CliUtil.findMembers(onGroup, onMember);
+    Set<DistributedMember> dsMembers = CliUtil.findMembers(onGroup, onMember);
-      if (dsMembers.isEmpty()) {
-        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
-      }
-
-      for (DistributedMember member : dsMembers) {
-        ObjectName gatewayReceiverObjectName = MBeanJMXAdapter.getGatewayReceiverMBeanName(member);
-        if (gatewayReceiverObjectName != null) {
-          GatewayReceiverMXBean receiverBean =
-              service.getMBeanProxy(gatewayReceiverObjectName, GatewayReceiverMXBean.class);
-          if (receiverBean != null) {
-            buildReceiverStatus(member.getId(), receiverBean, availableReceiverData);
-            continue;
-          }
-        }
-        buildReceiverStatus(member.getId(), null, notAvailableReceiverData);
-      }
-      result = ResultBuilder.buildResult(crd);
-    } catch (Exception e) {
-      LogWrapper.getInstance().warning(CliStrings.GATEWAY_ERROR + CliUtil.stackTraceAsString(e));
-      result = ResultBuilder.createGemFireErrorResult(CliStrings.GATEWAY_ERROR + e.getMessage());
+    if (dsMembers.isEmpty()) {
+      return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+
+    for (DistributedMember member : dsMembers) {
+      ObjectName gatewayReceiverObjectName = MBeanJMXAdapter.getGatewayReceiverMBeanName(member);
+      if (gatewayReceiverObjectName != null) {
+        GatewayReceiverMXBean receiverBean =
+            service.getMBeanProxy(gatewayReceiverObjectName, GatewayReceiverMXBean.class);
+        if (receiverBean != null) {
+          buildReceiverStatus(member.getId(), receiverBean, availableReceiverData);
+          continue;
+        }
+      }
+      buildReceiverStatus(member.getId(), null, notAvailableReceiverData);
+    }
+    result = ResultBuilder.buildResult(crd);
+
