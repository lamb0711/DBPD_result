Decouple geode in sadd,srem,smembers (#4912)

This commit builds a GeodeRedisSetSynchronized class that brings
together "set" methods.  These three are necessary for Spring-Session so
they are the only ones included.
-import java.util.concurrent.atomic.AtomicLong;
-import org.apache.geode.cache.Region;
-    List<byte[]> commandElems = command.getProcessedCommand();
-    AtomicLong entriesAdded = new AtomicLong(0L);
+    List<ByteArrayWrapper> commandElements = command.getProcessedCommandWrappers();
-    if (commandElems.size() < 3) {
+    if (commandElements.size() < 3) {
-    Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
+    RedisSet geodeRedisSet = new GeodeRedisSetSynchronized(key, context);
+    Set<ByteArrayWrapper> membersToAdd =
+        new HashSet<>(commandElements.subList(2, commandElements.size()));
+
+    long entriesAdded = geodeRedisSet.sadd(membersToAdd);
+    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entriesAdded));
-
-    region.compute(
-        key,
-        (ByteArrayWrapper localKey, Set<ByteArrayWrapper> oldSetValue) -> {
-          entriesAdded.set(0L);
-          Set<ByteArrayWrapper> setCopy;
-          if (oldSetValue == null) {
-            setCopy = new HashSet<>();
-          } else {
-            setCopy = new HashSet<>(oldSetValue);
-          }
-
-          for (int i = 2; i < commandElems.size(); i++) {
-            if (setCopy.add(new ByteArrayWrapper(commandElems.get(i)))) {
-              entriesAdded.incrementAndGet();
-            }
-          }
-
-          return setCopy;
-        });
-
-    command
-        .setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), entriesAdded.get()));
-
