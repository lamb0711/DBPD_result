GEODE-7643: Gateway unprocessedTokensMap appears to grow without bounds with replicated regions and peer accessors (#4447)

* Allow LocalRegion.virtualPut to throw ConcurrentCacheModificationException

Added throwsConcurrentModifiaction boolean argument to LocalRegion.virtualPut() to determine if the exception should be thrown
Added invokeCallbacks boolean argument to LocalRegion.virtualPut() to determine if bridge clients and gateway senders should be notified of the event
Fixed issue with inheriting new virtualPut implementations
Added DUnit test to confirm fix

Co-authored-by: Benjamin Ross <bross@pivotal.io>
Co-authored-by: Donal Evans <doevans@pivotal.io>

+  boolean basicUpdate(final EntryEventImpl event, final boolean ifNew, final boolean ifOld,
+      final long lastModified, final boolean overwriteDestroyed)
+      throws TimeoutException, CacheWriterException {
+    return this.basicUpdate(event, ifNew, ifOld, lastModified, overwriteDestroyed, true, false);
+  }
+
+   * @param invokeCallbacks true if this operation should notify bridge clients and gateway senders
+   *        in the event of a ConcurrentCacheModificationException being thrown during the update
+   * @param throwConcurrentModificationException true if this operation should be allowed to throw
+   *        any ConcurrentCacheModificationException that occurs during the update. If false, any
+   *        ConcurrentCacheModificationExceptions that are thrown will be suppressed
-      final long lastModified, final boolean overwriteDestroyed)
+      final long lastModified, final boolean overwriteDestroyed, final boolean invokeCallbacks,
+      final boolean throwConcurrentModificationException)
-        overwriteDestroyed);
+        overwriteDestroyed, invokeCallbacks, throwConcurrentModificationException);
+  }
+
+  public boolean virtualPut(final EntryEventImpl event, final boolean ifNew, final boolean ifOld,
+      Object expectedOldValue, boolean requireOldValue, final long lastModified,
+      final boolean overwriteDestroyed) throws TimeoutException, CacheWriterException {
+    return this.virtualPut(event, ifNew, ifOld, expectedOldValue, requireOldValue, lastModified,
+        overwriteDestroyed, true, false);
-      final boolean overwriteDestroyed) throws TimeoutException, CacheWriterException {
+      final boolean overwriteDestroyed, boolean invokeCallbacks,
+      boolean throwsConcurrentModification)
+      throws TimeoutException, CacheWriterException {
-    } catch (ConcurrentCacheModificationException ignore) {
-      // this can happen in a client cache when another thread
-      // managed to slip in its version info to the region entry before this
-      // thread got around to doing so
+    } catch (ConcurrentCacheModificationException concCacheModException) {
+      // this can happen in a client cache when another thread managed to slip in its version info
+      // to the region entry before this thread got around to doing so
-      notifyBridgeClients(event);
-      notifyGatewaySender(event.getOperation().isUpdate() ? EnumListenerEvent.AFTER_UPDATE
-          : EnumListenerEvent.AFTER_CREATE, event);
-      return false;
+      if (invokeCallbacks) {
+        notifyBridgeClients(event);
+        notifyGatewaySender(event.getOperation().isUpdate() ? EnumListenerEvent.AFTER_UPDATE
+            : EnumListenerEvent.AFTER_CREATE, event);
+      }
+      if (throwsConcurrentModification) {
+        throw concCacheModException;
+      } else {
+        return false;
+      }
+
