GEODE-7556: remove membership dependencies on geode-core exeptions (#4502)

* GEODE-7556: remove membership dependencies on geode-core exeptions

Removed use of geode-core exceptions from membership. DistributionImpl now converts membership exceptions into geode-core exceptions where necessary.

Except for MembershipClosedException the new membership exceptions are all checked exceptions. This let me isolate where the exceptions are used and ensure that they're changed into appropriate geode-core exceptions.

MemberShunnedException is now in the membership module instead of the TcpConduit module. It, too, is a checked exception.

CancelCriterion is also removed from use in the membership module. The Stopper in Services.java doesn't need to be a CancelCriterion to function properly.

Several tests had to be modified to handle our stress-test environement.

* use checkCancelled method

-import org.apache.geode.CancelCriterion;
-import org.apache.geode.ForcedDisconnectException;
-import org.apache.geode.distributed.DistributedSystemDisconnectedException;
+import org.apache.geode.distributed.internal.membership.gms.api.MemberDisconnectedException;
+import org.apache.geode.distributed.internal.membership.gms.api.MemberStartupException;
+import org.apache.geode.distributed.internal.membership.gms.api.MembershipClosedException;
+import org.apache.geode.distributed.internal.membership.gms.api.MembershipConfigurationException;
-  public void init() {
+  public void init() throws MembershipConfigurationException {
-  public void start() {
+  public void start() throws MemberStartupException {
-    return this.shutdownCause instanceof ForcedDisconnectException;
+    return this.shutdownCause instanceof MemberDisconnectedException;
-  public class Stopper extends CancelCriterion {
+  public class Stopper {
-    @Override
-    @Override
-          return new DistributedSystemDisconnectedException(reason);
+          return new MembershipClosedException(reason);
-          return new DistributedSystemDisconnectedException(reason, e);
+          return new MembershipClosedException(reason, e);
+    public boolean isCancelInProgress() {
+      return cancelInProgress() != null;
+    }
+
+    public void checkCancelInProgress(Throwable e) {
+      String reason = cancelInProgress();
+      if (reason == null) {
+        return;
+      }
+      throw generateCancelledException(e);
+    }
+
