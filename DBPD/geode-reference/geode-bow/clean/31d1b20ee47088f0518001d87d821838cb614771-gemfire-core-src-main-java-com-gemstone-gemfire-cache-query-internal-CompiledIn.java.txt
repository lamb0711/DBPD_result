Initial import of geode-1.0.0.0-SNAPSHOT-2.
All the new sub-project directories (like jvsd) were not imported.
A diff was done to confirm that this commit is exactly the same as
the open directory the snapshot was made from.

+import com.gemstone.gemfire.cache.query.Struct;
-    boolean useLinkedSet = false;      
+    boolean useLinkedDataStructure = false; 
+    boolean nullValuesAtStart = true;
-      useLinkedSet =orderByAttrs.size()==1; 
+      useLinkedDataStructure =orderByAttrs.size()==1; 
+      nullValuesAtStart = !((CompiledSortCriterion)orderByAttrs.get(0)).getCriterion();
-          if(useLinkedSet) {
-            results = new LinkedStructSet((StructTypeImpl)resultType);
+          if(useLinkedDataStructure) {
+            results  = context.isDistinct() ? new LinkedStructSet((StructTypeImpl)resultType) 
+            : new SortedResultsBag<Struct>((StructTypeImpl)resultType, nullValuesAtStart);
-            results = new StructBag((StructTypeImpl)resultType,
-              context.getCachePerfStats());
+            results = QueryUtils.createStructCollection(context, (StructTypeImpl)resultType);
-          if (useLinkedSet) {
-            results = new LinkedResultSet(resultType);
+          if (useLinkedDataStructure) {
+            results = context.isDistinct() ? new LinkedResultSet(resultType) :
+              new SortedResultsBag(resultType, nullValuesAtStart);
-            results = new ResultsBag(resultType, context.getCachePerfStats());
+            results = QueryUtils.createResultCollection(context, resultType) ;
-            if (useLinkedSet) {
-              results = new LinkedStructSet((StructTypeImpl)resultType);
+            if (useLinkedDataStructure) {
+              results = context.isDistinct() ? new LinkedStructSet((StructTypeImpl)resultType) 
+              :new SortedResultsBag<Struct>((StructTypeImpl)resultType, nullValuesAtStart);
-              results = (SelectResults)new StructBag((StructTypeImpl)resultType,
-              context.getCachePerfStats());
+              results = QueryUtils.createStructCollection(context, (StructTypeImpl)resultType) ;
-            if (useLinkedSet) {
-              results = new LinkedResultSet(resultType);
+            if (useLinkedDataStructure) {
+              results = context.isDistinct() ? new LinkedResultSet(resultType) :
+                new SortedResultsBag(resultType, nullValuesAtStart);
-              results = new ResultsBag(resultType, context.getCachePerfStats());
+              results = QueryUtils.createResultCollection(context, resultType) ;
-        if (useLinkedSet) {
-          results = new LinkedStructSet((StructTypeImpl)resultType);
+        if (useLinkedDataStructure) {
+          results = context.isDistinct() ? new LinkedStructSet((StructTypeImpl)resultType) :
+            new SortedResultsBag<Struct>((StructTypeImpl)resultType, nullValuesAtStart);
-          results = new StructBag((StructTypeImpl)resultType,
-            context.getCachePerfStats());
+           results = QueryUtils.createStructCollection(context, (StructTypeImpl)resultType) ;
-        if (useLinkedSet) {
-          results = new LinkedResultSet(resultType);
+        if (useLinkedDataStructure) {
+          results = context.isDistinct() ? new LinkedResultSet(resultType) : 
+            new SortedResultsBag(resultType,  nullValuesAtStart);
-          results = new ResultsBag(resultType, context.getCachePerfStats());
+          results = QueryUtils.createResultCollection(context,resultType);
