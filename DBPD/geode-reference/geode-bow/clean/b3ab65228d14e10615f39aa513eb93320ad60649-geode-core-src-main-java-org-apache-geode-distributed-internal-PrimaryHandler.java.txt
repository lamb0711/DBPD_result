GEODE-7348: Removing dependencies on core god classes from TcpServer (#4217)

- Removed DistributedSystem, GemFireCache,
  InternalConfiguratinPersistenceService dependencies that were used in the
  restarting method. Now there is a RestartableTcpHandler that lives inside core
  and extends TcpHandler. Core directly calls restarting on the
  RestartableTcpHandler.
- Extracted ProtocolChecker interface to remove Protobuf dependency.


-public class PrimaryHandler implements TcpHandler {
+public class PrimaryHandler implements RestartableTcpHandler {
-  private volatile Map<Class, TcpHandler> handlerMapping = new HashMap<>();
-  private volatile Set<TcpHandler> allHandlers = new HashSet<>();
+  private volatile Map<Class, RestartableTcpHandler> handlerMapping = new HashMap<>();
+  private volatile Set<RestartableTcpHandler> allHandlers = new HashSet<>();
-      for (TcpHandler handler : allHandlers) {
+      for (RestartableTcpHandler handler : allHandlers) {
-      for (TcpHandler handler : allHandlers) {
+      for (RestartableTcpHandler handler : allHandlers) {
-  public synchronized void addHandler(Class clazz, TcpHandler handler) {
-    Map<Class, TcpHandler> tmpHandlerMapping = new HashMap<>(handlerMapping);
-    Set<TcpHandler> tmpAllHandlers = new HashSet<>(allHandlers);
+  public synchronized void addHandler(Class clazz, RestartableTcpHandler handler) {
+    Map<Class, RestartableTcpHandler> tmpHandlerMapping = new HashMap<>(handlerMapping);
+    Set<RestartableTcpHandler> tmpAllHandlers = new HashSet<>(allHandlers);
