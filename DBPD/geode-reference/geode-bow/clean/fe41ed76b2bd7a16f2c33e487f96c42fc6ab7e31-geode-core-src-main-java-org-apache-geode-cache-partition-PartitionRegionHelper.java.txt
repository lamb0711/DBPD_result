GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-import java.util.Iterator;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.internal.cache.InternalCache;
- * 
- * 
-  private PartitionRegionHelper() {}
+
+  private PartitionRegionHelper() {
+    // do nothing
+  }
-    Set<PartitionRegionInfo> prDetailsSet = new TreeSet<PartitionRegionInfo>();
-    fillInPartitionedRegionInfo((GemFireCacheImpl) cache, prDetailsSet, false);
+    Set<PartitionRegionInfo> prDetailsSet = new TreeSet<>();
+    fillInPartitionedRegionInfo((InternalCache) cache, prDetailsSet, false);
-      PartitionedRegion pr = isPartitionedCheck(region);
-      GemFireCacheImpl cache = (GemFireCacheImpl) region.getCache();
-      return pr.getRedundancyProvider().buildPartitionedRegionInfo(false,
-          cache.getInternalResourceManager().getLoadProbe()); // may return null
-    } catch (ClassCastException e) {
+      PartitionedRegion partitionedRegion = isPartitionedCheck(region);
+      InternalCache cache = (InternalCache) region.getCache();
+      return partitionedRegion.getRedundancyProvider().buildPartitionedRegionInfo(false,
+          cache.getInternalResourceManager().getLoadProbe());
+    } catch (ClassCastException ignore) {
-  private static void fillInPartitionedRegionInfo(GemFireCacheImpl cache, final Set prDetailsSet,
+  private static void fillInPartitionedRegionInfo(final InternalCache cache, final Set prDetailsSet,
-    Set<PartitionedRegion> prSet = cache.getPartitionedRegions();
-    if (prSet.isEmpty()) {
+    Set<PartitionedRegion> partitionedRegions = cache.getPartitionedRegions();
+    if (partitionedRegions.isEmpty()) {
-    for (Iterator<PartitionedRegion> iter = prSet.iterator(); iter.hasNext();) {
-      PartitionedRegion pr = iter.next();
-      PartitionRegionInfo prDetails = pr.getRedundancyProvider()
+    for (PartitionedRegion partitionedRegion : partitionedRegions) {
+      PartitionRegionInfo prDetails = partitionedRegion.getRedundancyProvider()
