GEODE-4819: Separating authorization out from protobuf handlers (#1674)

Separating out authentication from the logic of parsing protobuf
messages. All region operations should be done through the new
AuthenticatingCache API, which does authentication and the operation.

In a future change we should move AuthenticationCache to the core and
refactor gfsh, the REST API, and the old client to also go through this
layer.

-
-    InternalQueryService queryService = messageExecutionContext.getCache().getQueryService();
-
-    Query query = queryService.newQuery(queryString);
-    if (messageExecutionContext
-        .getConnectionStateProcessor() instanceof ProtobufConnectionAuthorizingStateProcessor) {
-      final SecurityService securityService =
-          messageExecutionContext.getCache().getSecurityService();
-      ThreadState threadState =
-          ((ProtobufConnectionAuthorizingStateProcessor) messageExecutionContext
-              .getConnectionStateProcessor()).prepareThreadForAuthorization();
-      try {
-        for (String regionName : ((DefaultQuery) query).getRegionsInQuery(bindParameters)) {
-          securityService.authorize(ResourcePermission.Resource.DATA,
-              ResourcePermission.Operation.READ, regionName);
-        }
-      } catch (NotAuthorizedException ex) {
-        messageExecutionContext.getStatistics().incAuthorizationViolations();
-        throw new OperationNotAuthorizedException(
-            "The user is not authorized to complete this operation");
-      } finally {
-        ((ProtobufConnectionAuthorizingStateProcessor) messageExecutionContext
-            .getConnectionStateProcessor()).restoreThreadState(threadState);
-      }
-    }
-
-      Object results = query.execute(bindParameters);
+      Object results =
+          messageExecutionContext.getAuthorizingCache().query(queryString, bindParameters);
-      logger.info("Query failed: " + query, e);
+      logger.info("Query failed: " + queryString, e);
