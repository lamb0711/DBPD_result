Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Retrieves {@link ClientPartitionAdvisor} for the specified PartitionedRegion from
- * one of the servers
+ * Retrieves {@link ClientPartitionAdvisor} for the specified PartitionedRegion from one of the
+ * servers
-  
+
-      logger.debug("GetClientPRMetaDataOp#execute : Sending GetClientPRMetaDataOp Message: {} to server using pool: {}", op.getMessage(), pool);
+      logger.debug(
+          "GetClientPRMetaDataOp#execute : Sending GetClientPRMetaDataOp Message: {} to server using pool: {}",
+          op.getMessage(), pool);
-    protected void processSecureBytes(Connection cnx, Message message)
-        throws Exception {
-    }
+    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-            logger.debug("GetClientPRMetaDataOpImpl#processResponse: received message of type : {}" + MessageType.getString(msg.getMessageType()));
+            logger.debug("GetClientPRMetaDataOpImpl#processResponse: received message of type : {}"
+                + MessageType.getString(msg.getMessageType()));
-          ClientPartitionAdvisor advisor = cms
-              .getClientPartitionAdvisor(regionFullPath);
+          ClientPartitionAdvisor advisor = cms.getClientPartitionAdvisor(regionFullPath);
-            List<BucketServerLocation66> locations = (List<BucketServerLocation66>)result;
+            List<BucketServerLocation66> locations = (List<BucketServerLocation66>) result;
-                logger.debug("GetClientPRMetaDataOpImpl#processResponse: for bucketId : {} locations are {}", bucketId, locations);
+                logger.debug(
+                    "GetClientPRMetaDataOpImpl#processResponse: for bucketId : {} locations are {}",
+                    bucketId, locations);
-              Set<ClientPartitionAdvisor> cpas = cms
-                .getColocatedClientPartitionAdvisor(regionFullPath);
+              Set<ClientPartitionAdvisor> cpas =
+                  cms.getColocatedClientPartitionAdvisor(regionFullPath);
-            logger.debug("GetClientPRMetaDataOpImpl#processResponse: received ClientPRMetadata from server successfully.");
+            logger.debug(
+                "GetClientPRMetaDataOpImpl#processResponse: received ClientPRMetadata from server successfully.");
-            logger.debug("GetClientPRMetaDataOpImpl#processResponse: received message of type EXCEPTION");
+            logger.debug(
+                "GetClientPRMetaDataOpImpl#processResponse: received message of type EXCEPTION");
-          String s = "While performing  GetClientPRMetaDataOp "
-              + ((Throwable)obj).getMessage();
-          throw new ServerOperationException(s, (Throwable)obj);
+          String s = "While performing  GetClientPRMetaDataOp " + ((Throwable) obj).getMessage();
+          throw new ServerOperationException(s, (Throwable) obj);
-          throw new InternalGemFireError(
-              LocalizedStrings.Op_UNKNOWN_MESSAGE_TYPE_0
-                  .toLocalizedString(Integer.valueOf(msg.getMessageType())));
+          throw new InternalGemFireError(LocalizedStrings.Op_UNKNOWN_MESSAGE_TYPE_0
+              .toLocalizedString(Integer.valueOf(msg.getMessageType())));
