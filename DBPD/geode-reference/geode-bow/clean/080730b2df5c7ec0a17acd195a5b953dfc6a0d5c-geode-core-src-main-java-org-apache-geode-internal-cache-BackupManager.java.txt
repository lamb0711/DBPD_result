GEODE-3801: Use hardlinks for backup oplog files (#963)

* Oplog files that are backed up are read-only. For this reason,
  they can be transfered to the backup location through hard links,
  instead of copying the file. This change improves speed of backups.
  If the creation of a hard link fails, we revert to the existing copy
  behavior.
* During backups, the copying of the oplog's krf file was being done while
  that file could still be in the process of writing. This change ensures
  that if a krf is to be written, that it is finished and included in the
  backup
* cleanup existing oplog tests

+import java.nio.file.Files;
-        oplog.copyTo(backupDir);
+        backupOplog(backupDir, oplog);
+  private void backupOplog(File targetDir, Oplog oplog) throws IOException {
+    File crfFile = oplog.getCrfFile();
+    backupFile(targetDir, crfFile);
+
+    File drfFile = oplog.getDrfFile();
+    backupFile(targetDir, drfFile);
+
+    oplog.finishKrf();
+    File krfFile = oplog.getKrfFile();
+    backupFile(targetDir, krfFile);
+  }
+
+  private void backupFile(File targetDir, File file) throws IOException {
+    if (file != null && file.exists())
+      try {
+        Files.createLink(targetDir.toPath().resolve(file.getName()), file.toPath());
+      } catch (IOException | UnsupportedOperationException e) {
+        logger.warn("Unable to create hard link for + {}. Reverting to file copy", targetDir);
+        FileUtils.copyFileToDirectory(file, targetDir);
+      }
+  }
+
