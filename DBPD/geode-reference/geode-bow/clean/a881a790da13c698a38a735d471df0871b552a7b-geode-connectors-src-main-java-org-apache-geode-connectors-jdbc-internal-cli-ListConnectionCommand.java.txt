GEODE-5070: Support --member option for describe & list jdbc connectoâ€¦ (#1798)

    When cluster configuration service is disabled user
    have to provide --member option in-order to describe
    and list connections and mappings.
+import java.util.Collection;
+import java.util.Set;
+import org.springframework.shell.core.annotation.CliOption;
+import org.apache.geode.distributed.DistributedMember;
+import org.apache.geode.management.cli.ConverterHint;
+  static final String LIST_CONNECTION_MEMBER__HELP =
+      "Member from which the jdbc connections are retrieved.";
-  public Result listConnection() {
+  public Result listConnection(
+      @CliOption(key = {CliStrings.MEMBER}, optionContext = ConverterHint.MEMBERIDNAME,
+          help = LIST_CONNECTION_MEMBER__HELP) String onMember) {
+    // when member is specified, we go to each member and describe what are on the members
+    if (onMember != null) {
+      DistributedMember member = getMember(onMember);
+      if (member == null) {
+        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+      }
+
+      List<?> result =
+          (List<?>) executeFunction(new ListConnectionFunction(), null, member).getResult();
+      Set<ConnectorService.Connection> connections =
+          (Set<ConnectorService.Connection>) result.get(0);
+      TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
+      boolean connectionsExist = fillTabularResultData(connections, tabularResultData);
+
+      return createResult(tabularResultData, connectionsExist);
+    }
+
+    // otherwise, use cluster configuration to describe the connections
-      return ResultBuilder.createInfoResult("cluster configuration service is not running");
+      return ResultBuilder.createInfoResult(
+          "cluster configuration service is not running. Use --member option to describe connections on specific members.");
-  private boolean fillTabularResultData(List<ConnectorService.Connection> connections,
+  private boolean fillTabularResultData(Collection<ConnectorService.Connection> connections,
