Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The SimpleHttpRequester class is a Adapter/facade for the Spring RestTemplate class for abstracting HTTP requests
- * and operations.
+ * The SimpleHttpRequester class is a Adapter/facade for the Spring RestTemplate class for
+ * abstracting HTTP requests and operations.
+ * 
-   * Default constructor to create an instance of the SimpleHttpRequester class using the default connection timeout
-   * of 30 seconds.
+   * Default constructor to create an instance of the SimpleHttpRequester class using the default
+   * connection timeout of 30 seconds.
-   * @param connectTimeout an integer value specifying the timeout value in milliseconds for establishing the HTTP
-   * connection to the HTTP server.
+   * 
+   * @param connectTimeout an integer value specifying the timeout value in milliseconds for
+   *        establishing the HTTP connection to the HTTP server.
-  public SimpleHttpRequester(final Gfsh gfsh, final int connectTimeout, Map<String, String> securityProperties) {
-    final SimpleClientHttpRequestFactory clientHttpRequestFactory = new SimpleClientHttpRequestFactory();
+  public SimpleHttpRequester(final Gfsh gfsh, final int connectTimeout,
+      Map<String, String> securityProperties) {
+    final SimpleClientHttpRequestFactory clientHttpRequestFactory =
+        new SimpleClientHttpRequestFactory();
-        final String message = String.format("The HTTP request failed with: %1$d - %2$s", response.getRawStatusCode(),
-          response.getStatusText());
+        final String message = String.format("The HTTP request failed with: %1$d - %2$s",
+            response.getRawStatusCode(), response.getStatusText());
-        }
-        else if (response.getRawStatusCode() == 403) {
+        } else if (response.getRawStatusCode() == 403) {
-        }
-        else {
+        } else {
+   * 
-   * Performs an HTTP DELETE operation on the requested resource identified/located by the specified URL.
+   * Performs an HTTP DELETE operation on the requested resource identified/located by the specified
+   * URL.
+   * 
-   * Performs an HTTP GET operation on the requested resource identified/located by the specified URL.
+   * Performs an HTTP GET operation on the requested resource identified/located by the specified
+   * URL.
+   * 
+   * 
-   * Request the available/allowed HTTP operations on the resource identified/located by the specified URL.
+   * Request the available/allowed HTTP operations on the resource identified/located by the
+   * specified URL.
+   * 
-   * Performs an HTTP POST operation on the requested resource identified/located by the specified URL.
+   * Performs an HTTP POST operation on the requested resource identified/located by the specified
+   * URL.
+   * 
-   * @see org.springframework.web.client.RestTemplate#postForObject(String, Object, Class, Object...) z
+   * @see org.springframework.web.client.RestTemplate#postForObject(String, Object, Class,
+   *      Object...) z
-  public <T> T post(final String url, final Object requestBody, final Class<T> responseType, final Object... urlVariables) {
+  public <T> T post(final String url, final Object requestBody, final Class<T> responseType,
+      final Object... urlVariables) {
-   * Performs an HTTP PUT operation on the requested resource identifiedR/located by the specified URL.
+   * Performs an HTTP PUT operation on the requested resource identifiedR/located by the specified
+   * URL.
+   * 
-   * Performs an HTTP GET operation on the requested resource identified/located
-   * by the specified URL.
+   * Performs an HTTP GET operation on the requested resource identified/located by the specified
+   * URL.
-   * @param url a String value identifying or locating the resource intended for
-   * the HTTP operation.
+   * 
+   * @param url a String value identifying or locating the resource intended for the HTTP operation.
-   * @see org.springframework.web.client.RestTemplate#getForObject(String,
-   * Class, Object...)
+   * @see org.springframework.web.client.RestTemplate#getForObject(String, Class, Object...)
-  public <T> T exchange(final String url, final Class<T> responseType, final Object... urlVariables) {
-    ResponseEntity<T> response = getRestTemplate().exchange(url, HttpMethod.GET, getRequestEntity(), responseType);
+  public <T> T exchange(final String url, final Class<T> responseType,
+      final Object... urlVariables) {
+    ResponseEntity<T> response =
+        getRestTemplate().exchange(url, HttpMethod.GET, getRequestEntity(), responseType);
