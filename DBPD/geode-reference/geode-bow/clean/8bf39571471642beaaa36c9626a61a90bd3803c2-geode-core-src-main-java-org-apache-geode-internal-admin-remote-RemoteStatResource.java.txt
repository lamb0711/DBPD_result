Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  private transient RemoteGemFireVM vm;  
+  private transient RemoteGemFireVM vm;
-  public RemoteStatResource(Statistics rsrc){
+  public RemoteStatResource(Statistics rsrc) {
-  
+
-  public RemoteStatResource() { }
+  public RemoteStatResource() {}
-  
-  public long getResourceID(){
+
+  public long getResourceID() {
+
-  public String getSystemName(){
+  public String getSystemName() {
-  public GemFireVM getGemFireVM(){
+  public GemFireVM getGemFireVM() {
-  public Stat[] getStats(){
-    if ( vm != null ) {
+  public Stat[] getStats() {
+    if (vm != null) {
-    for (int i=0; i < stats.length; i++) {
+    for (int i = 0; i < stats.length; i++) {
-  public int getID(){
+  public int getID() {
-  public String getName(){
+  public String getName() {
-  public String getType(){
+  public String getType() {
-  public String getDescription(){
+  public String getDescription() {
-    return (int)this.rsrcUniqueId;
+    return (int) this.rsrcUniqueId;
-  
+
-  public boolean equals(Object other){
-    if (other instanceof RemoteStatResource){
-      RemoteStatResource rsrc = (RemoteStatResource)other;
-      return (this.rsrcUniqueId == rsrc.rsrcUniqueId &&
-              this.vm.equals(rsrc.vm));
+  public boolean equals(Object other) {
+    if (other instanceof RemoteStatResource) {
+      RemoteStatResource rsrc = (RemoteStatResource) other;
+      return (this.rsrcUniqueId == rsrc.rsrcUniqueId && this.vm.equals(rsrc.vm));
-    }      
+    }
-  void setGemFireVM( RemoteGemFireVM vm ){
+  void setGemFireVM(RemoteGemFireVM vm) {
-  public void fromData(DataInput in)
-    throws IOException, ClassNotFoundException {
+  public void fromData(DataInput in) throws IOException, ClassNotFoundException {
