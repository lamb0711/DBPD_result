Merge branch 'release/1.0.0-incubating.M3'

-import org.springframework.shell.core.CommandMarker;
-import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
-import org.springframework.shell.core.annotation.CliCommand;
-import org.springframework.shell.core.annotation.CliOption;
-
+import com.gemstone.gemfire.management.internal.cli.functions.AsyncEventQueueFunctionArgs;
+import com.gemstone.gemfire.management.internal.security.ResourceOperation;
+import org.apache.geode.security.GeodePermission.Operation;
+import org.apache.geode.security.GeodePermission.Resource;
+
+import org.springframework.shell.core.CommandMarker;
+import org.springframework.shell.core.annotation.CliAvailabilityIndicator;
+import org.springframework.shell.core.annotation.CliCommand;
+import org.springframework.shell.core.annotation.CliOption;
- * @since 8.0
+ * @since GemFire 8.0
+  @ResourceOperation(resource = Resource.DATA, operation = Operation.MANAGE)
-                 help = CliStrings.CREATE_ASYNC_EVENT_QUEUE__DISKSYNCHRONOUS__HELP) 
+                 help = CliStrings.CREATE_ASYNC_EVENT_QUEUE__DISKSYNCHRONOUS__HELP)
+      @CliOption(key = CliStrings.CREATE_ASYNC_EVENT_QUEUE__FORWARD_EXPIRATION_DESTROY,
+                 unspecifiedDefaultValue = "false",
+                 specifiedDefaultValue = "false",
+                 help = CliStrings.CREATE_ASYNC_EVENT_QUEUE__FORWARD_EXPIRATION_DESTROY__HELP)
+      Boolean ignoreEvictionAndExpiration,
-                 unspecifiedDefaultValue = "100", 
+                 unspecifiedDefaultValue = "100",
-      ResultCollector<?, ?> rc = CliUtil.executeFunction(new CreateAsyncEventQueueFunction(), new Object[] { id, parallel, enableBatchConflation, batchSize,batchTimeInterval,
-          persistent, diskStore, diskSynchronous, maxQueueMemory, dispatcherThreads, orderPolicy, gatewayEventFilters, gatewaySubstitutionListener, listener, listenerProperties }, targetMembers);
+      AsyncEventQueueFunctionArgs aeqArgs = new AsyncEventQueueFunctionArgs(id, parallel,
+          enableBatchConflation, batchSize,batchTimeInterval,
+          persistent, diskStore, diskSynchronous, maxQueueMemory, dispatcherThreads, orderPolicy,
+          gatewayEventFilters, gatewaySubstitutionListener, listener, listenerProperties,
+          ignoreEvictionAndExpiration);
+
+      ResultCollector<?, ?> rc = CliUtil.executeFunction(new CreateAsyncEventQueueFunction(),
+          aeqArgs, targetMembers);
+
+  @ResourceOperation(resource = Resource.CLUSTER, operation = Operation.READ)
