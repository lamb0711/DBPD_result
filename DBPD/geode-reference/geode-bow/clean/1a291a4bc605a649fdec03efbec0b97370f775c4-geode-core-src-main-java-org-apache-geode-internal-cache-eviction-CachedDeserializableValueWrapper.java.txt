GEODE-3622: Implement new algorithm for eviction (#1017)

* GEODE-3622: Implement new algorithm for eviction

  * Old algorithm is still used by default. Use "-Dgeode.EvictionScanAsync=true"
    to enable the new algorithm. Note that the new algorithm is still experimental
    and is subject to change. The new algorithm uses asynchronous sorting of the
    LRU list to prevent a long synchronous sort when the first item is evicted.
  * Moved region entries into their own package
  * Organized eviction code into new eviction package
  * General refactoring of eviction classes

-package org.apache.geode.internal.cache.lru;
-
-import org.apache.geode.internal.cache.RegionEntry;
-import org.apache.geode.internal.cache.persistence.DiskRecoveryStore;
+package org.apache.geode.internal.cache.eviction;
- * Represents an entry in an LRU map
+ * Marker class to indicate that the wrapped value is owned by a CachedDeserializable and its form
+ * is changing from serialized to deserialized.
-public interface LRUEntry extends LRUClockNode, RegionEntry {
-  /**
-   * If the key is stored as an Object then returns that object; but if the key is stored as
-   * primitives then returns null.
-   */
-  Object getKeyForSizing();
+public class CachedDeserializableValueWrapper {
-  void setDelayedDiskId(DiskRecoveryStore diskRecoveryStore);
+  private final Object value;
+
+  public CachedDeserializableValueWrapper(Object value) {
+    this.value = value;
+  }
+
+  public Object getValue() {
+    return value;
+  }
