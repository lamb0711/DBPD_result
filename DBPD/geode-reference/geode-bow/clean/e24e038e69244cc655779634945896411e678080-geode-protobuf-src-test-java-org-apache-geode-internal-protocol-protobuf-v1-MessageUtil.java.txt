GEODE-4080: Protobuf JSON objects are in a proto string (#1171)

* GEODE-4080: Protobuf JSON objects are in a proto string

In the process, remove a couple of serialization-related classes that
are no longer really applicable.

* Catch `JSONFormatterException` and return it as a `EncodingException`.
* Change some names and add ProtobufSerializationService, which is the big
reason for all this churn.
* Get rid of the codec package
* Inline the serialization type enum
* Make encoding methods throw EncodingException.
* Don't use exceptions for control flow.

This meant renaming ProtobufPrimitiveTypes to ProtobufEncodingTypes.

Signed-off-by: Brian Rowe <browe@pivotal.io>
-import org.apache.geode.internal.protocol.serialization.SerializationService;
-import org.apache.geode.internal.protocol.serialization.exception.UnsupportedEncodingTypeException;
-import org.apache.geode.internal.protocol.serialization.registry.exception.CodecNotRegisteredForTypeException;
+import org.apache.geode.internal.protocol.serialization.exception.EncodingException;
-      SerializationService serializationService, String requestKey, String requestValue,
-      String requestRegion)
-      throws CodecNotRegisteredForTypeException, UnsupportedEncodingTypeException {
-    BasicTypes.Entry entry = ProtobufUtilities.createEntry(
-        ProtobufUtilities.createEncodedValue(serializationService, requestKey),
-        ProtobufUtilities.createEncodedValue(serializationService, requestValue));
+      ProtobufSerializationService serializationService, String requestKey, String requestValue,
+      String requestRegion) throws EncodingException {
+    BasicTypes.Entry entry = ProtobufUtilities.createEntry(serializationService.encode(requestKey),
+        serializationService.encode(requestValue));
-      SerializationService serializationService, Object requestKey, String requestRegion)
+      ProtobufSerializationService serializationService, Object requestKey, String requestRegion)
-        ProtobufUtilities.createEncodedValue(serializationService, requestKey));
+        serializationService.encode(requestKey));
