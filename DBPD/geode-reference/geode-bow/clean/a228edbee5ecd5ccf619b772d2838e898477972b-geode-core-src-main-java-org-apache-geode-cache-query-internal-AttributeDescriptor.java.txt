GEODE-6984: Make OQL Security API Public (#4030)

- Addded javadocs for MethodInvocationAuthorizer.
- Fixed warnings and added Unit Tests for MethodDispatch.
- Fixed warnings and added Unit Tests for AttributeDescriptor.
- Moved 'MethodInvocationAuthorizer' and 'RestrictedMethodAuthorizer'
  from an internal package to a public one,
  'org.apache.geode.cache.query.security'.
-
+import static org.apache.geode.cache.query.security.RestrictedMethodAuthorizer.UNAUTHORIZED_STRING;
+
+import org.apache.geode.cache.query.security.MethodInvocationAuthorizer;
+import org.apache.geode.security.NotAuthorizedException;
- *
- * @version $Revision: 1.1 $
-
-
-  private static final ConcurrentMap<List, Member> _localCache = new ConcurrentHashMap();
-
-
+  static final ConcurrentMap<List, Member> _localCache = new ConcurrentHashMap<>();
+    _name = name;
-    _name = name;
-
-
+
+
-  private Object readReflection(Object target)
+  Object readReflection(Object target)
-          _methodInvocationAuthorizer.authorizeMethodInvocation((Method) m, target);
+          if (!_methodInvocationAuthorizer.authorize((Method) m, target)) {
+            throw new NotAuthorizedException(UNAUTHORIZED_STRING + m.getName());
+          }
+
-                  new Object[] {m.getName(), target.getClass().getName()}),
+                  m.getName(), target.getClass().getName()),
-                  new Object[] {m.getName(), target.getClass().getName()}),
+                  m.getName(), target.getClass().getName()),
+  @SuppressWarnings("unchecked")
-
-    // mapping: public field (same name), method (getAttribute()),
-    // method (attribute())
+    // mapping: public field (same name), method (getAttribute()), method (attribute())
-      throw new NameNotFoundException(
-          String.format("No public attribute named ' %s ' was found in class %s",
-              new Object[] {_name, targetClass.getName()}));
+      throw new NameNotFoundException(String.format(
+          "No public attribute named ' %s ' was found in class %s", _name, targetClass.getName()));
-
-  private Field getReadField(Class targetType) {
+  Field getReadField(Class targetType) {
-
-
-  private Method getReadMethod(Class targetType) {
+  Method getReadMethod(Class targetType) {
-
-
-  private Method getReadMethod(Class targetType, String methodName) {
+  @SuppressWarnings("unchecked")
+  Method getReadMethod(Class targetType, String methodName) {
-    Object obj = null;
+    Object obj;
+
-              new Object[] {_name, e.getMessage()}));
+              _name, e.getMessage()));
+
-      fields = new HashSet<String>();
+      fields = new HashSet<>();
+
+
-      fields = new HashSet<String>();
+      fields = new HashSet<>();
+
+
-
-
-
