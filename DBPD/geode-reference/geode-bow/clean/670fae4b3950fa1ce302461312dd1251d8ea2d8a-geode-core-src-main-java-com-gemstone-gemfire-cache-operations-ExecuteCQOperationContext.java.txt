GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-    super(queryString, regionNames, postOperation);
-    this.cqName = cqName;
+    this(OperationCode.EXECUTE_CQ, cqName, queryString, regionNames, postOperation);
-   * Return the operation associated with the <code>OperationContext</code>
-   * object.
-   * 
-   * @return the <code>OperationCode</code> of this operation
+   * Constructor for the EXECUTE_CQ operation only intended for use by subclasses.
+   *
+   * @param cqName
+   *                the name of the continuous query being registered
+   * @param queryString
+   *                the query string for this operation
+   * @param regionNames
+   *                names of regions that are part of the query string
+   * @param postOperation
+   *                true to set the post-operation flag
-  @Override
-  public OperationCode getOperationCode() {
-    return OperationCode.EXECUTE_CQ;
+  protected ExecuteCQOperationContext(OperationCode code, String cqName, String queryString,
+      Set regionNames, boolean postOperation) {
+    super(code, queryString, regionNames, postOperation);
+    this.cqName = cqName;
