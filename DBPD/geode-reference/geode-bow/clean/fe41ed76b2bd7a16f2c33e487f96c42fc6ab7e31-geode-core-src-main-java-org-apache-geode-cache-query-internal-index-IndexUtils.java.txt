GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-/*
- * IndexUtils.java
- *
- * Created on March 4, 2005, 5:39 PM
- */
-import org.apache.geode.cache.Cache;
-import org.apache.geode.internal.cache.GemFireCacheImpl;
+import org.apache.geode.cache.query.internal.CompiledValue;
+import org.apache.geode.cache.query.internal.DefaultQueryService;
+import org.apache.geode.cache.query.internal.ExecutionContext;
+import org.apache.geode.cache.query.internal.index.IndexManager.TestHook;
+import org.apache.geode.internal.cache.InternalCache;
-import org.apache.geode.cache.query.internal.*;
-import org.apache.geode.cache.query.internal.index.IndexManager.TestHook;
-/**
- */
+
-    if (region == null || region.isDestroyed())
+    if (region == null || region.isDestroyed()) {
+    }
+
-  public static IndexData findIndex(String regionpath, String defintions[],
-      CompiledValue indexedExpression, String projectionAttributes, Cache cache,
+  public static IndexData findIndex(String regionpath, String[] defintions,
+      CompiledValue indexedExpression, String projectionAttributes, InternalCache cache,
-    DefaultQueryService qs =
-        (DefaultQueryService) ((GemFireCacheImpl) cache).getLocalQueryService();
-    // IndexProtocol index = null;
+
+    DefaultQueryService qs = (DefaultQueryService) cache.getLocalQueryService();
-
-      // if exact PRIMARY_KEY Index not found then try to find exact FUNCTIONAL
-      // Index
-      // if (!fromClause.equals(index.getCanonicalizedFromClause())) {
+      // if exact PRIMARY_KEY Index not found then try to find exact FUNCTIONAL Index
-        // if FUNCTIONAL Index is exact match then use or else use PRIMARY_KEY
-        // Index
-        // if (functionalIndxInfo != null &&
-        // fromClause.equals(functionalIndex.getCanonicalizedFromClause())
+        // if FUNCTIONAL Index is exact match then use or else use PRIMARY_KEY Index
