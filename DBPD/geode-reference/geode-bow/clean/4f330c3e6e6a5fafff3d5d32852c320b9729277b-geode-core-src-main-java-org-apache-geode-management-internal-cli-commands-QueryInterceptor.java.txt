Revert "GEODE-5011: Convert 'Data' commands to ResultModel (#1945)"

This reverts commit f1c6b560442f2f23aa9240b3550d9d664e094c7c.

-import java.util.Map;
+import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.ModelCommandResult;
-import org.apache.geode.management.internal.cli.result.model.DataResultModel;
-import org.apache.geode.management.internal.cli.result.model.ResultModel;
+import org.apache.geode.management.internal.cli.result.CompositeResultData;
+import org.apache.geode.management.internal.cli.result.InfoResultData;
+import org.apache.geode.management.internal.cli.result.LegacyCommandResult;
+import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.TabularResultData;
-  public ResultModel preExecution(GfshParseResult parseResult) {
+  public Result preExecution(GfshParseResult parseResult) {
-      return ResultModel.createError(FILE_ALREADY_EXISTS_MESSAGE);
+      return ResultBuilder.createUserErrorResult(FILE_ALREADY_EXISTS_MESSAGE);
-    return new ResultModel();
+    return ResultBuilder.createInfoResult("");
-    ResultModel model = ((ModelCommandResult) result).getResultData();
-    Map<String, String> sectionResultData = model.getDataSection("0").getContent();
+    CompositeResultData resultData = (CompositeResultData) result.getResultData();
+    CompositeResultData.SectionResultData sectionResultData = resultData.retrieveSectionByIndex(0);
-    String limit = sectionResultData.get("Limit");
-    String resultString = sectionResultData.get("Result");
-    String rows = sectionResultData.get("Rows");
+    String limit = sectionResultData.retrieveString("Limit");
+    String resultString = sectionResultData.retrieveString("Result");
+    String rows = sectionResultData.retrieveString("Rows");
+    TabularResultData tabularResultData = sectionResultData.retrieveTableByIndex(0);
+    CommandResult resultTable = new LegacyCommandResult(tabularResultData);
-      writeResultTableToFile(outputFile, result);
+      writeResultTableToFile(outputFile, resultTable);
-    ResultModel newModel = new ResultModel();
-    DataResultModel data = newModel.addData();
-
-    data.addData("Result", resultString);
+    InfoResultData infoResultData = ResultBuilder.createInfoResultData();
+    infoResultData.addLine("Result : " + resultString);
-      data.addData("Limit", limit);
+      infoResultData.addLine("Limit  : " + limit);
-    data.addData("Rows", rows);
+    infoResultData.addLine("Rows   : " + rows);
+    infoResultData.addLine(SystemUtils.LINE_SEPARATOR);
+    infoResultData.addLine("Query results output to " + outputFile.getAbsolutePath());
-    newModel.addInfo().addLine("Query results output to " + outputFile.getAbsolutePath());
-
-    return new ModelCommandResult(newModel);
+    return new LegacyCommandResult(infoResultData);
