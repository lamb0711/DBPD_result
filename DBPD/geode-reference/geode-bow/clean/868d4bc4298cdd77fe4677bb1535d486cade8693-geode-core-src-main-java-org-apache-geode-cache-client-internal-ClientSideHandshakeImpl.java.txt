GEODE-8330: Structural Improvements to Versioning

Follow-on to GEODE-8240, this commit eliminates redundancy in 
versioning code and provides a single way to convert a short
to a version and a single way to acquire a known version from
a (possibly unknown) version.
+import org.apache.geode.internal.serialization.Versioning;
+import org.apache.geode.internal.serialization.VersioningIO;
-      currentClientVersion = Version.fromOrdinalOrCurrent(ver);
+      currentClientVersion =
+          Versioning.getKnownVersionOrDefault(Versioning.getVersionOrdinal(ver), Version.CURRENT);
-        short wanSiteVersion = Version.readOrdinal(dis);
+        short wanSiteVersion = VersioningIO.readOrdinal(dis);
-          dis = new VersionedDataInputStream(dis, Version.fromOrdinalOrCurrent(wanSiteVersion));
+          dis = new VersionedDataInputStream(dis, Versioning
+              .getKnownVersionOrDefault(Versioning.getVersionOrdinal(wanSiteVersion),
+                  Version.CURRENT));
-      if (communicationMode.isWAN() && Version.GFE_66.compareTo(conn.getWanSiteVersion()) <= 0
+      if (communicationMode.isWAN()
+          && Version.GFE_66.compareTo(Versioning.getVersionOrdinal(conn.getWanSiteVersion())) <= 0
-      if (communicationMode.isWAN() && Version.GFE_80.compareTo(conn.getWanSiteVersion()) <= 0
+      if (communicationMode.isWAN()
+          && Version.GFE_80.compareTo(Versioning.getVersionOrdinal(conn.getWanSiteVersion())) <= 0
-        Version.writeOrdinal(hdos, overrideClientVersion, true);
+        VersioningIO.writeOrdinal(hdos, overrideClientVersion, true);
-        Version.writeOrdinal(hdos, currentClientVersion.ordinal(), true);
+        VersioningIO.writeOrdinal(hdos, currentClientVersion.ordinal(), true);
