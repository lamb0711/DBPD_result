GEODE-4819: Separating authorization out from protobuf handlers (#1674)

Separating out authentication from the logic of parsing protobuf
messages. All region operations should be done through the new
AuthenticatingCache API, which does authentication and the operation.

In a future change we should move AuthenticationCache to the core and
refactor gfsh, the REST API, and the old client to also go through this
layer.

-  private final PermissionFunction<OperationRequest> accessPermissionRequired;
-  private class StaticResourcePermissionProvider implements PermissionFunction<OperationRequest> {
-    private final ResourcePermission permission;
-
-    StaticResourcePermissionProvider(ResourcePermission requiredPermission) {
-      permission = requiredPermission;
-    }
-
-    @Override
-    public ResourcePermission apply(OperationRequest request,
-        ProtobufSerializationService serializer) {
-      return permission;
-    }
-  }
-      Function<OperationResponse, ClientProtocol.Message.Builder> toResponse,
-      ResourcePermission permissionRequired) {
+      Function<OperationResponse, ClientProtocol.Message.Builder> toResponse) {
-    accessPermissionRequired = new StaticResourcePermissionProvider(permissionRequired);
-  }
-
-  public ProtobufOperationContext(Function<ClientProtocol.Message, OperationRequest> fromRequest,
-      ProtobufOperationHandler<OperationRequest, OperationResponse> operationHandler,
-      Function<OperationResponse, ClientProtocol.Message.Builder> toResponse,
-      PermissionFunction<OperationRequest> permissionRequired) {
-    this.operationHandler = operationHandler;
-    this.fromRequest = fromRequest;
-    this.toResponse = toResponse;
-    this.toErrorResponse = this::makeErrorBuilder;
-    accessPermissionRequired = permissionRequired;
-
-  public ResourcePermission getAccessPermissionRequired(OperationRequest request,
-      ProtobufSerializationService serializer) throws DecodingException {
-    return accessPermissionRequired.apply(request, serializer);
-  }
