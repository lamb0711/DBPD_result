GEODE-2927: fix pulse logging and useLocator, SSL flags

* using local mbs server connection will bypass all the mbean security checks
* do not update the mbean attribute since pulse user has no cluster:write privilege at all
* Created EmbeddedPulseRule for tests
* simplify PulseAppListener
* use log4j2 logging configurations

-import java.util.Collection;
-import javax.management.remote.JMXConnector;
-
-
-import org.springframework.security.authentication.AuthenticationServiceException;
+import java.util.Collection;
+import javax.management.remote.JMXConnector;
+
-
-    try {
-      logger.debug("Connecting to GemFire with user={}", name);
-      JMXConnector jmxc = Repository.get().getCluster(name, password).connectToGemFire();
-      if (jmxc != null) {
-        Collection<GrantedAuthority> list = GemFireAuthentication.populateAuthorities(jmxc);
-        GemFireAuthentication auth = new GemFireAuthentication(authentication.getPrincipal(),
-            authentication.getCredentials(), list, jmxc);
-        logger.debug("For user " + name + " authList={}", list);
-        return auth;
-      } else {
-        throw new AuthenticationServiceException("JMX Connection unavailable");
-      }
-    } catch (Exception e) {
-      throw new BadCredentialsException("Error connecting to GemFire JMX Server", e);
+    logger.debug("Connecting to GemFire with user=" + name);
+    JMXConnector jmxc = Repository.get().getCluster(name, password).getJMXConnector();
+    if (jmxc == null) {
+      throw new BadCredentialsException("Error connecting to GemFire JMX Server");
+
+    Collection<GrantedAuthority> list = GemFireAuthentication.populateAuthorities(jmxc);
+    GemFireAuthentication auth = new GemFireAuthentication(authentication.getPrincipal(),
+        authentication.getCredentials(), list, jmxc);
+    logger.debug("For user " + name + " authList=" + list);
+    return auth;
