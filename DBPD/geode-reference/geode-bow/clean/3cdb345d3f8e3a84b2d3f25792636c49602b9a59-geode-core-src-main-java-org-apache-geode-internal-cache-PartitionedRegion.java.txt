GEODE-7713: Throw TransactionDataRebalancedException during get operation (#4602)

* Throw TransactionDataRebalancedException during get operation
    if bucket moved to other member.
+  public static final String DATA_MOVED_BY_REBALANCE =
+      "Transactional data moved, due to rebalancing.";
-          if (prce instanceof BucketNotFoundException) {
-            throw new TransactionDataRebalancedException(
-                "Transactional data moved, due to rebalancing.",
-                prce);
-          }
-          Throwable cause = prce.getCause();
-          if (cause instanceof PrimaryBucketException) {
-            throw (PrimaryBucketException) cause;
-          } else if (cause instanceof TransactionDataRebalancedException) {
-            throw (TransactionDataRebalancedException) cause;
-          } else if (cause instanceof RegionDestroyedException) {
-            throw new TransactionDataRebalancedException(
-                "Transactional data moved, due to rebalancing.",
-                cause);
-          } else {
-            // Make transaction fail so client could retry
-            // instead of returning null if ForceReattemptException is thrown.
-            // Should not see it currently, added to be protected against future changes.
-            throw new TransactionException("Failed to get key: " + key, prce);
-          }
+          handleForceReattemptExceptionWithTransaction(prce);
+  void handleForceReattemptExceptionWithTransaction(
+      ForceReattemptException forceReattemptException) {
+    if (forceReattemptException instanceof BucketNotFoundException) {
+      throw new TransactionDataRebalancedException(DATA_MOVED_BY_REBALANCE,
+          forceReattemptException);
+    }
+    Throwable cause = forceReattemptException.getCause();
+    if (cause instanceof PrimaryBucketException) {
+      throw (PrimaryBucketException) cause;
+    } else if (cause instanceof TransactionDataRebalancedException) {
+      throw (TransactionDataRebalancedException) cause;
+    } else if (cause instanceof RegionDestroyedException) {
+      throw new TransactionDataRebalancedException(DATA_MOVED_BY_REBALANCE, cause);
+    } else {
+      throw new TransactionDataRebalancedException(DATA_MOVED_BY_REBALANCE,
+          forceReattemptException);
+    }
+  }
+
-          throw new TransactionDataRebalancedException(
-              "Transactional data moved, due to rebalancing.",
-              pbe);
+          throw new TransactionDataRebalancedException(DATA_MOVED_BY_REBALANCE, pbe);
-    } catch (PrimaryBucketException pbe) {
-      throw new TransactionDataRebalancedException(
-          "Transactional data moved, due to rebalancing.",
-          pbe);
-    } catch (RegionDestroyedException ignore) {
-      throw new TransactionDataRebalancedException(
-          "Transactional data moved, due to rebalancing.");
+    } catch (PrimaryBucketException | RegionDestroyedException exception) {
+      throw new TransactionDataRebalancedException(DATA_MOVED_BY_REBALANCE, exception);
