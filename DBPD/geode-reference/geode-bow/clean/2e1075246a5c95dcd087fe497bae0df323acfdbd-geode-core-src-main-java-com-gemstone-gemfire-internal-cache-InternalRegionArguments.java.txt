Merge branch 'release/1.0.0-incubating.M3'

+import java.util.HashMap;
+import java.util.Map;
-import com.gemstone.gemfire.cache.query.internal.IndexUpdater;
- * @since 4.2.3
+ * @since GemFire 4.2.3
-  private boolean isUsedForHDFSParallelGatewaySenderQueue = false;
+  private boolean isInternalRegion;
-  private IndexUpdater indexUpdater;
-  private boolean keyRequiresRegionContext;
+  private Map<String,CacheServiceProfile> cacheServiceProfiles;
-  // SQLFabric index manager
-  public IndexUpdater getIndexUpdater() {
-    return this.indexUpdater;
-  }
-
-  public InternalRegionArguments setIndexUpdater(IndexUpdater indexUpdater) {
-    this.indexUpdater = indexUpdater;
-    return this;
-  }
-
-  public boolean keyRequiresRegionContext() {
-    return this.keyRequiresRegionContext;
-  }
-
-  public InternalRegionArguments setKeyRequiresRegionContext(boolean v) {
-    this.keyRequiresRegionContext = v;
-    return this;
-  }
-
-  public InternalRegionArguments setIsUsedForHDFSParallelGatewaySenderQueue(
-      boolean queueFlag) {
-    this.isUsedForHDFSParallelGatewaySenderQueue = queueFlag;
-    return this;
-  }
-  public boolean isUsedForHDFSParallelGatewaySenderQueue() {
-    return this.isUsedForHDFSParallelGatewaySenderQueue;
-  }
-  
-  public boolean isReadWriteHDFSRegion() {
-    return isUsedForPartitionedRegionBucket()
-        && getPartitionedRegion().getHDFSStoreName() != null
-        && !getPartitionedRegion().getHDFSWriteOnly();
-  }
-
+
+  public InternalRegionArguments addCacheServiceProfile(CacheServiceProfile profile) {
+    if(this.cacheServiceProfiles == null) {
+      this.cacheServiceProfiles = new HashMap<>();
+    }
+    this.cacheServiceProfiles.put(profile.getId(), profile);
+    return this;
+  }
+
+  public Map<String,CacheServiceProfile> getCacheServiceProfiles() {
+    return this.cacheServiceProfiles;
+  }
+
+  public boolean isInternalRegion() {
+    return isInternalRegion;
+  }
+
+  public InternalRegionArguments setInternalRegion(final boolean internalRegion) {
+    isInternalRegion = internalRegion;
+    return this;
+  }
