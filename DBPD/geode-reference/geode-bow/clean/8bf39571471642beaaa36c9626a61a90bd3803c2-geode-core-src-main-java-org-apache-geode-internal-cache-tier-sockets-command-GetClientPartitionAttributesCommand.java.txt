Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+ * 
-  private final static GetClientPartitionAttributesCommand singleton = new GetClientPartitionAttributesCommand();
+  private final static GetClientPartitionAttributesCommand singleton =
+      new GetClientPartitionAttributesCommand();
-    throws IOException, ClassNotFoundException, InterruptedException
-  {
+      throws IOException, ClassNotFoundException, InterruptedException {
-      logger.warn(LocalizedMessage.create(LocalizedStrings.GetClientPartitionAttributes_THE_INPUT_REGION_PATH_IS_NULL));
+      logger.warn(LocalizedMessage
+          .create(LocalizedStrings.GetClientPartitionAttributes_THE_INPUT_REGION_PATH_IS_NULL));
-        .toLocalizedString();
-      writeErrorResponse(msg,
-        MessageType.GET_CLIENT_PARTITION_ATTRIBUTES_ERROR, errMessage
-          .toString(), servConn);
+          .toLocalizedString();
+      writeErrorResponse(msg, MessageType.GET_CLIENT_PARTITION_ATTRIBUTES_ERROR,
+          errMessage.toString(), servConn);
-      logger.warn(LocalizedMessage
-        .create(LocalizedStrings.GetClientPartitionAttributes_REGION_NOT_FOUND_FOR_SPECIFIED_REGION_PATH,
+      logger.warn(LocalizedMessage.create(
+          LocalizedStrings.GetClientPartitionAttributes_REGION_NOT_FOUND_FOR_SPECIFIED_REGION_PATH,
-      errMessage = LocalizedStrings.GetClientPartitionAttributes_REGION_NOT_FOUND
-        .toLocalizedString()
-        + regionFullPath;
-      writeErrorResponse(msg,
-        MessageType.GET_CLIENT_PARTITION_ATTRIBUTES_ERROR, errMessage
-          .toString(), servConn);
+      errMessage =
+          LocalizedStrings.GetClientPartitionAttributes_REGION_NOT_FOUND.toLocalizedString()
+              + regionFullPath;
+      writeErrorResponse(msg, MessageType.GET_CLIENT_PARTITION_ATTRIBUTES_ERROR,
+          errMessage.toString(), servConn);
-      responseMsg
-        .setMessageType(MessageType.RESPONSE_CLIENT_PARTITION_ATTRIBUTES);
+      responseMsg.setMessageType(MessageType.RESPONSE_CLIENT_PARTITION_ATTRIBUTES);
-        responseMsg.addObjPart(partitionResolver.getClass().toString()
-          .substring(6));
+        responseMsg.addObjPart(partitionResolver.getClass().toString().substring(6));
-          leaderRegion = (PartitionedRegion) cache
-            .getRegion(leaderRegionName);
+          leaderRegion = (PartitionedRegion) cache.getRegion(leaderRegionName);
-          }
-          else {
+          } else {
-    }
-    catch (Exception e) {
+    } catch (Exception e) {
-    }
-    finally {
+    } finally {
