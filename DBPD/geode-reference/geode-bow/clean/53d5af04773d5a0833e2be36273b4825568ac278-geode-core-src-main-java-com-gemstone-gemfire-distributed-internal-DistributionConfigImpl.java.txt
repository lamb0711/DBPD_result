GEODE-1571: have the integrated security specified by security-manager config

+import static com.gemstone.gemfire.distributed.ConfigurationProperties.*;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.Serializable;
+import java.net.InetAddress;
+import java.net.URL;
+import java.net.UnknownHostException;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Properties;
+import java.util.Set;
+
-import java.io.File;
-import java.io.IOException;
-import java.io.Serializable;
-import java.net.InetAddress;
-import java.net.URL;
-import java.net.UnknownHostException;
-import java.util.*;
-
-import static com.gemstone.gemfire.distributed.ConfigurationProperties.*;
-
+  /** The security manager method name*/
+  private String securityManager = DEFAULT_SECURITY_MANAGER;
+
+    this.securityManager = other.getSecurityManager();
+  public String getSecurityManager() {
+    return securityManager;
+  }
+
+  public void setSecurityManager(String value){
+    securityManager = (String)checkAttribute(SECURITY_MANAGER, value);
+  }
+
+    if (securityManager == null) {
+      if (other.securityManager != null)
+        return false;
+    } else if (!securityManager
+      .equals(other.securityManager))
+      return false;
+    if (shiroInit == null) {
+      if (other.shiroInit != null)
+        return false;
+    } else if (!shiroInit
+      .equals(other.shiroInit))
+      return false;
+             * result
+             + ((securityManager == null) ? 0
+                  : securityManager.hashCode());
+    result = prime
+             * result
+             + ((shiroInit == null) ? 0
+                  : shiroInit.hashCode());
+    result = prime
