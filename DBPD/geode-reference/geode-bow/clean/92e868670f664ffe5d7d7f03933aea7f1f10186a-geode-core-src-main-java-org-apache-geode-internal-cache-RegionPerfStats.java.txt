GEODE-6387: Replace CachePerfStats.Clock with LongSupplier

Use LongSupplier to wrap NanoTimer.getTime and/or
DistributionStats.getStatsTime for constructor injection to improve
testability.

We have been using LongSupplier in the other stats classes, but I had
previously introduced a custom inner-class interface to CachePerfStats
that I decided to replace with LongSupplier and delete the inner-class.

+import java.util.function.LongSupplier;
+
-      String regionName, Clock clock) {
+      String regionName, LongSupplier clock) {
-    long ts = getClockTime();
+    long ts = getTime();
-    return getClockTime();
+    return getTime();
-      stats.incLong(netloadTimeId, getClockTime() - start);
+      stats.incLong(netloadTimeId, getTime() - start);
-    long ts = getClockTime();
+    long ts = getTime();
-    return getClockTime();
+    return getTime();
-      stats.incLong(cacheWriterCallTimeId, getClockTime() - start);
+      stats.incLong(cacheWriterCallTimeId, getTime() - start);
-    return getClockTime();
+    return getTime();
-      stats.incLong(cacheListenerCallTimeId, getClockTime() - start);
+      stats.incLong(cacheListenerCallTimeId, getTime() - start);
-    return getClockTime();
+    return getTime();
-      stats.incLong(getInitialImageTimeId, getClockTime() - start);
+      stats.incLong(getInitialImageTimeId, getTime() - start);
-      stats.incLong(getInitialImageTimeId, getClockTime() - start);
+      stats.incLong(getInitialImageTimeId, getTime() - start);
-    return getClockTime();
+    return getTime();
-    long ts = getClockTime();
+    long ts = getTime();
-      long totalNanos = getClockTime() - start;
+      long totalNanos = getTime() - start;
-        totalNanos = getClockTime() - start;
+        totalNanos = getTime() - start;
-        totalNanos = getClockTime() - start;
+        totalNanos = getTime() - start;
-      stats.incLong(putAllTimeId, getClockTime() - start);
+      stats.incLong(putAllTimeId, getTime() - start);
-      stats.incLong(queryResultsHashCollisionProbeTimeId, getClockTime() - start);
+      stats.incLong(queryResultsHashCollisionProbeTimeId, getTime() - start);
-      stats.incLong(importTimeId, getClockTime() - start);
+      stats.incLong(importTimeId, getTime() - start);
-      stats.incLong(exportTimeId, getClockTime() - start);
+      stats.incLong(exportTimeId, getTime() - start);
-    return getClockTime();
+    return getTime();
-      long time = getClockTime() - startTime;
+      long time = getTime() - startTime;
-    return getClockTime();
+    return getTime();
-      long time = getClockTime() - startTime;
+      long time = getTime() - startTime;
