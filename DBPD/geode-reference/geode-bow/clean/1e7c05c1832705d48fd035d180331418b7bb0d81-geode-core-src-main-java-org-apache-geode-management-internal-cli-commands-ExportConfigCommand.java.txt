GEODE-5011: Convert ExecuteFunctionCommand and ExportConfigCommand to use ResultModel (#1901)


-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.result.InfoResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.CommandResult;
+import org.apache.geode.management.internal.cli.result.ResultData;
+import org.apache.geode.management.internal.cli.result.model.InfoResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-  public Result exportConfig(
+  public ResultModel exportConfig(
-    InfoResultData infoData = ResultBuilder.createInfoResultData();
+
+    ResultModel crm = new ResultModel();
+    InfoResultModel infoData = crm.addInfo();
-      return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+      crm.createError(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+      return crm;
-        infoData.addAsFile(cacheFileName, fileContent[0], "Downloading Cache XML file: {0}", false);
-        infoData.addAsFile(propsFileName, fileContent[1], "Downloading properties file: {0}",
-            false);
+        crm.addFile(cacheFileName, fileContent[0].getBytes(), ResultData.FILE_TYPE_TEXT,
+            "Downloading Cache XML file: ", false);
+        crm.addFile(propsFileName, fileContent[1].getBytes(), ResultData.FILE_TYPE_TEXT,
+            "Downloading properties file: ", false);
-    return ResultBuilder.buildResult(infoData);
+    return crm;
-    public Result preExecution(GfshParseResult parseResult) {
+    public ResultModel preExecution(GfshParseResult parseResult) {
-        return ResultBuilder.createInfoResult("OK");
+        return new ResultModel();
-        return ResultBuilder.createGemFireErrorResult(
-            CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__CANNOT_CREATE_DIR, dir));
+        return ResultModel
+            .createError(CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__CANNOT_CREATE_DIR, dir));
-        return ResultBuilder.createGemFireErrorResult(
-            CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__NOT_A_DIRECTORY, dir));
+        return ResultModel
+            .createError(CliStrings.format(CliStrings.EXPORT_CONFIG__MSG__NOT_A_DIRECTORY, dir));
-          return ResultBuilder.createGemFireErrorResult(CliStrings.format(
+          return ResultModel.createError(CliStrings.format(
-        return ResultBuilder.createGemFireErrorResult(
+        return ResultModel.createError(
-      return ResultBuilder.createInfoResult("OK");
+      return new ResultModel();
-    public Result postExecution(GfshParseResult parseResult, Result commandResult, Path tempFile) {
+    public CommandResult postExecution(GfshParseResult parseResult, CommandResult commandResult,
+        Path tempFile) {
