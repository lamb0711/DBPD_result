GEODE-6759: Prevent Deleting Pool Still in Use and Fix NPE in Function Execution (#3569)

* GEODE-6759: Avoid Deleting Pools Still in Use

- Fixed minor warnings.
- Added unit and integration tests.
- Replaced the usage of `junit.Assert` by `assertj`.
- PoolManagerImpl now checks whether the pool is being used or not
  before unregistering it.
- InternalFunctionExecutionServiceImpl now throws a meaningful
  exception if the pool can not be found instead of NPE.
+  protected Pool findPool(String poolName) {
+    return PoolManager.find(poolName);
+  }
+
-      throw new FunctionException(
-          String.format("%s passed is null", "Region instance "));
+      throw new FunctionException("Region instance passed is null");
-      Pool pool = PoolManager.find(poolName);
-      if (pool.getMultiuserAuthentication()) {
-        if (region instanceof ProxyRegion) {
-          ProxyRegion proxyRegion = (ProxyRegion) region;
-          region = proxyRegion.getRealRegion();
-          proxyCache = proxyRegion.getAuthenticatedCache();
-        } else {
-          throw new UnsupportedOperationException();
+      Pool pool = findPool(poolName);
+
+      if (pool == null) {
+        throw new IllegalStateException(String.format("Could not find a pool named %s.", poolName));
+      } else {
+        if (pool.getMultiuserAuthentication()) {
+          if (region instanceof ProxyRegion) {
+            ProxyRegion proxyRegion = (ProxyRegion) region;
+            region = proxyRegion.getRealRegion();
+            proxyCache = proxyRegion.getAuthenticatedCache();
+          } else {
+            throw new UnsupportedOperationException();
+          }
