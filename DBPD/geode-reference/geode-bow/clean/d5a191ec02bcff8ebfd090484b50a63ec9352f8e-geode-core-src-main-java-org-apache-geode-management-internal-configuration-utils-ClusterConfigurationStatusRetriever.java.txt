GEODE-7536 - Break Gfsh out into separate module (#4422)


- ManagementUtils is split from CliUtil with non-CLI methods.
- Introduce new CommandProcessor interface which is a CacheService. This
  is implemented by OnlineCommandProcessor and is used in
  MemberMBeanBridge.
- Remove try/catch from ClusterConfigurationStatusRetriever since any
  exception will be handled at a higher level.

-import org.apache.geode.management.internal.cli.shell.Gfsh;
-    try {
-      final InetAddress networkAddress = InetAddress.getByName(locatorHostName);
+    final InetAddress networkAddress = InetAddress.getByName(locatorHostName);
-      TcpClient client = new TcpClient(asTcpSocketCreator(
-          new SocketCreator(SSLConfigurationFactory.getSSLConfigForComponent(configProps,
-              SecurableCommunicationChannel.LOCATOR))),
-          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),
-          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());
-      SharedConfigurationStatusResponse statusResponse =
-          (SharedConfigurationStatusResponse) client.requestToServer(networkAddress, locatorPort,
-              new SharedConfigurationStatusRequest(), 10000, true);
+    TcpClient client = new TcpClient(asTcpSocketCreator(
+        new SocketCreator(SSLConfigurationFactory.getSSLConfigForComponent(configProps,
+            SecurableCommunicationChannel.LOCATOR))),
+        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),
+        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());
+    SharedConfigurationStatusResponse statusResponse =
+        (SharedConfigurationStatusResponse) client.requestToServer(networkAddress, locatorPort,
+            new SharedConfigurationStatusRequest(), 10000, true);
+    for (int i = 0; i < NUM_ATTEMPTS_FOR_SHARED_CONFIGURATION_STATUS; i++) {
+      if (statusResponse.getStatus().equals(
+          org.apache.geode.management.internal.configuration.domain.SharedConfigurationStatus.STARTED)
+          || statusResponse.getStatus().equals(
+              org.apache.geode.management.internal.configuration.domain.SharedConfigurationStatus.NOT_STARTED)) {
+        statusResponse =
+            (SharedConfigurationStatusResponse) client.requestToServer(networkAddress,
+                locatorPort, new SharedConfigurationStatusRequest(), 10000, true);
+        try {
+          Thread.sleep(5000);
+        } catch (InterruptedException e) {
+          // Swallow the exception
+        }
+      } else {
+        break;
+      }
+    }
+    switch (statusResponse.getStatus()) {
+      case RUNNING:
+        buffer.append("\nCluster configuration service is up and running.");
+        break;
+      case STOPPED:
+        buffer.append(
+            "\nCluster configuration service failed to start , please check the log file for errors.");
+        break;
+      case WAITING:
+        buffer.append(
+            "\nCluster configuration service is waiting for other locators with newer shared configuration data.");
+        Set<PersistentMemberPattern> pmpSet = statusResponse.getOtherLocatorInformation();
+        if (!pmpSet.isEmpty()) {
+          buffer.append("\nThis locator might have stale cluster configuration data.");
+          buffer.append(
+              "\nFollowing locators contain potentially newer cluster configuration data");
-      for (int i = 0; i < NUM_ATTEMPTS_FOR_SHARED_CONFIGURATION_STATUS; i++) {
-        if (statusResponse.getStatus().equals(
-            org.apache.geode.management.internal.configuration.domain.SharedConfigurationStatus.STARTED)
-            || statusResponse.getStatus().equals(
-                org.apache.geode.management.internal.configuration.domain.SharedConfigurationStatus.NOT_STARTED)) {
-          statusResponse =
-              (SharedConfigurationStatusResponse) client.requestToServer(networkAddress,
-                  locatorPort, new SharedConfigurationStatusRequest(), 10000, true);
-          try {
-            Thread.sleep(5000);
-          } catch (InterruptedException e) {
-            // Swallow the exception
+          for (PersistentMemberPattern pmp : pmpSet) {
+            buffer.append("\nHost : ").append(pmp.getHost());
+            buffer.append("\nDirectory : ").append(pmp.getDirectory());
-          break;
+          buffer.append("\nPlease check the log file for errors");
-      }
-
-      switch (statusResponse.getStatus()) {
-        case RUNNING:
-          buffer.append("\nCluster configuration service is up and running.");
-          break;
-        case STOPPED:
-          buffer.append(
-              "\nCluster configuration service failed to start , please check the log file for errors.");
-          break;
-        case WAITING:
-          buffer.append(
-              "\nCluster configuration service is waiting for other locators with newer shared configuration data.");
-          Set<PersistentMemberPattern> pmpSet = statusResponse.getOtherLocatorInformation();
-          if (!pmpSet.isEmpty()) {
-            buffer.append("\nThis locator might have stale cluster configuration data.");
-            buffer.append(
-                "\nFollowing locators contain potentially newer cluster configuration data");
-
-            for (PersistentMemberPattern pmp : pmpSet) {
-              buffer.append("\nHost : ").append(pmp.getHost());
-              buffer.append("\nDirectory : ").append(pmp.getDirectory());
-            }
-          } else {
-            buffer.append("\nPlease check the log file for errors");
-          }
-          break;
-        case UNDETERMINED:
-          buffer.append(
-              "\nUnable to determine the status of shared configuration service, please check the log file");
-          break;
-        case NOT_STARTED:
-          buffer.append("\nCluster configuration service has not been started yet");
-          break;
-        case STARTED:
-          buffer
-              .append("\nCluster configuration service has been started, but its not running yet");
-          break;
-      }
-    } catch (Exception e) {
-      // TODO fix this once Trac Bug #50513 gets fixed
-      // NOTE this ClassCastException occurs if the a plain text TCP/IP connection is used to
-      // connect to a Locator
-      // configured with SSL.
-      Gfsh.getCurrentInstance()
-          .logToFile(String.format(
-              "Failed to get the status of the Shared Configuration Service running on Locator (%1$s[%2$d])!",
-              locatorHostName, locatorPort), e);
+        break;
+      case UNDETERMINED:
+        buffer.append(
+            "\nUnable to determine the status of shared configuration service, please check the log file");
+        break;
+      case NOT_STARTED:
+        buffer.append("\nCluster configuration service has not been started yet");
+        break;
+      case STARTED:
+        buffer
+            .append("\nCluster configuration service has been started, but its not running yet");
+        break;
