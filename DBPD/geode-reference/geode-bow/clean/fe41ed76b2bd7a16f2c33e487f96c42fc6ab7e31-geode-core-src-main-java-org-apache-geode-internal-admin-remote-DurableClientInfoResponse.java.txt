GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

-
-// import org.apache.geode.internal.admin.*;
-import org.apache.geode.distributed.internal.*;
-import org.apache.geode.*;
-import org.apache.geode.cache.*; // import org.apache.geode.internal.*;
-import org.apache.geode.internal.cache.*;
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
-import java.io.*; // import java.net.*;
-// import java.util.*;
-import org.apache.geode.distributed.internal.membership.*;
+import org.apache.geode.cache.CacheClosedException;
+import org.apache.geode.cache.CacheFactory;
+import org.apache.geode.distributed.internal.DistributionManager;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.cache.CacheServerImpl;
+import org.apache.geode.internal.cache.InternalCache;
-   * Returns a <code>DurableClientInfoResponse</code> that will be returned to the specified
-   * recipient.
+   * Returns a {@code DurableClientInfoResponse} that will be returned to the specified recipient.
-      GemFireCacheImpl c = (GemFireCacheImpl) CacheFactory.getInstanceCloseOk(dm.getSystem());
-      if (c.getCacheServers().size() > 0) {
+      InternalCache c = (InternalCache) CacheFactory.getInstanceCloseOk(dm.getSystem());
+      if (!c.getCacheServers().isEmpty()) {
-    } catch (CacheClosedException ex) {
+    } catch (CacheClosedException ignore) {
-  public boolean getResultBoolean() {
+  boolean getResultBoolean() {
+  @Override
+  @Override
+  @Override
-  /*
-   * (non-Javadoc)
-   * 
-   * @see org.apache.geode.internal.DataSerializableFixedID#getDSFID()
-   */
+  @Override
