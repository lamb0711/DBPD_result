Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Provides an implementation for cache snapshots.  Most of the implementation
- * delegates to {@link RegionSnapshotService}.
+ * Provides an implementation for cache snapshots. Most of the implementation delegates to
+ * {@link RegionSnapshotService}.
-  
+
-  
+
-  public void save(File dir, SnapshotFormat format,
-      SnapshotOptions<Object, Object> options) throws IOException {
+  public void save(File dir, SnapshotFormat format, SnapshotOptions<Object, Object> options)
+      throws IOException {
-        throw new IOException(LocalizedStrings.Snapshot_UNABLE_TO_CREATE_DIR_0.toLocalizedString(dir));
+        throw new IOException(
+            LocalizedStrings.Snapshot_UNABLE_TO_CREATE_DIR_0.toLocalizedString(dir));
-    
+
-  public void load(File dir, SnapshotFormat format) throws IOException,
-      ClassNotFoundException {
+  public void load(File dir, SnapshotFormat format) throws IOException, ClassNotFoundException {
-    
+
-      throw new FileNotFoundException(LocalizedStrings.Snapshot_NO_SNAPSHOT_FILES_FOUND_0.toLocalizedString(dir));
+      throw new FileNotFoundException(
+          LocalizedStrings.Snapshot_NO_SNAPSHOT_FILES_FOUND_0.toLocalizedString(dir));
-  public void load(File[] snapshots, SnapshotFormat format,
-      SnapshotOptions<Object, Object> options) throws IOException,
-      ClassNotFoundException {
-    
+  public void load(File[] snapshots, SnapshotFormat format, SnapshotOptions<Object, Object> options)
+      throws IOException, ClassNotFoundException {
+
-          throw new IOException(LocalizedStrings.Snapshot_UNSUPPORTED_SNAPSHOT_VERSION_0.toLocalizedString(version));
+          throw new IOException(
+              LocalizedStrings.Snapshot_UNSUPPORTED_SNAPSHOT_VERSION_0.toLocalizedString(version));
-        
+
-          throw new RegionNotFoundException(LocalizedStrings.Snapshot_COULD_NOT_FIND_REGION_0_1.toLocalizedString(regionName, f));
+          throw new RegionNotFoundException(
+              LocalizedStrings.Snapshot_COULD_NOT_FIND_REGION_0_1.toLocalizedString(regionName, f));
-        
+
-  
-  @SuppressWarnings({ "rawtypes", "unchecked" })
-  private void saveRegion(Region<?, ?> region, File dir, SnapshotFormat format, SnapshotOptions options) 
-      throws IOException {
+
+  @SuppressWarnings({"rawtypes", "unchecked"})
+  private void saveRegion(Region<?, ?> region, File dir, SnapshotFormat format,
+      SnapshotOptions options) throws IOException {
