GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

+import com.gemstone.gemfire.cache.operations.internal.ResourceOperationContext;
+
-public abstract class RegionOperationContext extends OperationContext {
+public abstract class RegionOperationContext extends ResourceOperationContext {
-  /** True if this is a post-operation context */
-  private boolean postOperation;
-
-  public RegionOperationContext(boolean postOperation) {
+  protected RegionOperationContext(OperationCode code, boolean postOperation) {
+    super(Resource.DATA, code, postOperation);
-    this.postOperation = postOperation;
-  }
-
-  /**
-   * Return the operation associated with the <code>OperationContext</code>
-   * object.
-   * 
-   * @return The <code>OperationCode</code> of this operation. This is one of
-   *         {@link com.gemstone.gemfire.cache.operations.OperationContext.OperationCode#REGION_CLEAR} or
-   *         {@link com.gemstone.gemfire.cache.operations.OperationContext.OperationCode#REGION_DESTROY}.
-   */
-  @Override
-  public abstract OperationCode getOperationCode();
-
-  /**
-   * True if the context is for post-operation.
-   */
-  @Override
-  public boolean isPostOperation() {
-    return this.postOperation;
