change more string commands to have CommandFunction support (#5184)

* CommandFunction now supports getrange, setrange, bitcount, bitop, bitpos, getbit, setbit, incrbyfloat, mget, and strlen.

Added integration test coverage for untested string commands.

-import static org.apache.geode.redis.internal.executor.string.SetOptions.Exists.NONE;
-import org.apache.geode.redis.internal.RedisConstants;
-  private final String ERROR_VALUE_NOT_USABLE =
-      "Invalid value at this key and cannot be incremented numerically";
-
-  private final String ERROR_INCREMENT_NOT_USABLE =
+  private static final String ERROR_INCREMENT_NOT_USABLE =
-  private final String ERROR_OVERFLOW = "This incrementation cannot be performed due to overflow";
-
-  private final int INCREMENT_INDEX = 2;
+  private static final int INCREMENT_INDEX = 2;
-    ByteArrayWrapper valueWrapper = stringCommands.get(key);
-
-    /*
-     * Try increment
-     */
-    } else if (valueWrapper != null && valueWrapper.toString().contains(" ")) {
-      return RedisResponse.error(ERROR_VALUE_NOT_USABLE);
-    /*
-     * Value does not exist
-     */
+    double result = stringCommands.incrbyfloat(key, increment);
-    if (valueWrapper == null) {
-      stringCommands.set(key, new ByteArrayWrapper(incrArray), null);
-      return respondBulkStrings(increment);
-    }
-
-    /*
-     * Value exists
-     */
-
-    String stringValue = Coder.bytesToString(valueWrapper.toBytes());
-
-    double value;
-    try {
-      value = Coder.stringToDouble(stringValue);
-    } catch (NumberFormatException e) {
-      return RedisResponse.error(ERROR_VALUE_NOT_USABLE);
-    }
-
-    /*
-     * Check for overflow
-     */
-    if (value >= 0 && increment > (Double.MAX_VALUE - value)) {
-      return RedisResponse.error(ERROR_OVERFLOW);
-    }
-
-    double result = value + increment;
-    if (Double.isNaN(result) || Double.isInfinite(result)) {
-      return RedisResponse.error(RedisConstants.ERROR_NAN_INF_INCR);
-    }
-    value += increment;
-
-    stringValue = "" + value;
-    SetOptions setOptions = new SetOptions(NONE, 0L, true);
-    stringCommands.set(key, new ByteArrayWrapper(Coder.stringToBytes(stringValue)), setOptions);
-
-    return respondBulkStrings(value);
+    return RedisResponse.doubleValue(result);
-
