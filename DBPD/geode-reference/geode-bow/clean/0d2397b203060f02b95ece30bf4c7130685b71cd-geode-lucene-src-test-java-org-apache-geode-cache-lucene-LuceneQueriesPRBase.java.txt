GEODE-2520: Add a lucene query test where a bucket is moved while a query is executing

*  Added LuceneIndexServiceSpy

-import java.util.concurrent.TimeUnit;
+import org.apache.geode.cache.lucene.internal.LuceneIndexFactorySpy;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.cache.PartitionedRegion;
+import org.apache.geode.internal.cache.partitioned.BecomePrimaryBucketMessage;
+import org.apache.geode.internal.cache.partitioned.BecomePrimaryBucketMessage.BecomePrimaryBucketResponse;
+import org.apache.geode.cache.lucene.internal.LuceneIndexFactorySpy;
+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
+import org.apache.geode.internal.cache.PartitionedRegion;
+import org.apache.geode.internal.cache.partitioned.BecomePrimaryBucketMessage;
+import org.apache.geode.internal.cache.partitioned.BecomePrimaryBucketMessage.BecomePrimaryBucketResponse;
-import org.apache.geode.cache.RegionShortcut;
-import org.apache.geode.cache.lucene.internal.LuceneIndexImpl;
+  public void returnCorrectResultsWhenMoveBucketHappensOnQuery() throws InterruptedException {
+    final DistributedMember member2 =
+        dataStore2.invoke(() -> getCache().getDistributedSystem().getDistributedMember());
+    addCallbackToMovePrimaryOnQuery(dataStore1, member2);
+
+    putEntriesAndValidateQueryResults();
+  }
+
+  @Test
+  protected void addCallbackToMovePrimaryOnQuery(VM vm, final DistributedMember destination) {
+    vm.invoke(() -> {
+      LuceneIndexFactorySpy factorySpy = LuceneIndexFactorySpy.injectSpy();
+
+      factorySpy.setGetRespositoryConsumer(doOnce(key -> moveBucket(destination, key)));
+    });
+  }
+
+    System.out.println("WHAT");
+      LuceneIndexFactorySpy.remove();
