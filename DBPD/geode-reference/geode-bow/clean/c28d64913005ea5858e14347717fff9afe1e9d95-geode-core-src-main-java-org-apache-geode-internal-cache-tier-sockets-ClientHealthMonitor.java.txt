Merge branch 'release/1.4.0'

+   *
+   * Accesses must be locked by _clientHeartbeatsLock
-  protected volatile Map _clientHeartbeats = Collections.EMPTY_MAP;
+  private Map<ClientProxyMembershipID, Long> _clientHeartbeats = Collections.emptyMap();
-  final protected Object _clientHeartbeatsLock = new Object();
+  private final Object _clientHeartbeatsLock = new Object();
-  final protected Map _clientThreads;
+  private final Map _clientThreads;
-  final private Object _clientThreadsLock = new Object();
+  private final Object _clientThreadsLock = new Object();
-  final private ClientHealthMonitorThread _clientMonitor;
+  private final ClientHealthMonitorThread _clientMonitor;
-  private final static long DEFAULT_CLIENT_MONITOR_INTERVAL_IN_MILLIS = 1000;
+  private static final long DEFAULT_CLIENT_MONITOR_INTERVAL_IN_MILLIS = 1000;
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-  public synchronized static void shutdownInstance() {
+  public static synchronized void shutdownInstance() {
-   * 
+   *
-      Map oldClientHeartbeats = this._clientHeartbeats;
+      Map<ClientProxyMembershipID, Long> oldClientHeartbeats = this._clientHeartbeats;
-        Map newClientHeartbeats = new HashMap(oldClientHeartbeats);
-        newClientHeartbeats.put(proxyID, Long.valueOf(System.currentTimeMillis()));
+        Map<ClientProxyMembershipID, Long> newClientHeartbeats = new HashMap<>(oldClientHeartbeats);
+        newClientHeartbeats.put(proxyID, System.currentTimeMillis());
-   * Takes care of unregistering from the _clientHeatBeats map.
-   * 
+   * Takes care of unregistering from the _clientHeartBeats map.
+   *
-      Map oldClientHeartbeats = this._clientHeartbeats;
+      Map<ClientProxyMembershipID, Long> oldClientHeartbeats = this._clientHeartbeats;
-        Map newClientHeartbeats = new HashMap(oldClientHeartbeats);
+        Map<ClientProxyMembershipID, Long> newClientHeartbeats = new HashMap<>(oldClientHeartbeats);
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
+   *
+   *         Test hook only.
-  public Map getClientHeartbeats() {
-    return this._clientHeartbeats;
+  Map<ClientProxyMembershipID, Long> getClientHeartbeats() {
+    synchronized (this._clientHeartbeatsLock) {
+      return new HashMap<>(this._clientHeartbeats);
+    }
-   * 
+   *
-   * 
+   *
-    final protected int _maximumTimeBetweenPings;
+    protected final int _maximumTimeBetweenPings;
-     * 
+     *
-     * 
+     *
