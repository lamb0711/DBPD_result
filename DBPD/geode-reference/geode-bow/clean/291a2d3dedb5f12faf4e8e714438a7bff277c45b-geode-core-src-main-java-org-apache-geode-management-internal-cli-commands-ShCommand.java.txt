GEODE-5971: refactor various commands to use ResultModel (#3399)



-import org.apache.geode.management.cli.Result;
-import org.apache.geode.management.internal.cli.LogWrapper;
-import org.apache.geode.management.internal.cli.result.InfoResultData;
-import org.apache.geode.management.internal.cli.result.ResultBuilder;
+import org.apache.geode.management.internal.cli.result.model.InfoResultModel;
+import org.apache.geode.management.internal.cli.result.model.ResultModel;
-public class ShCommand extends InternalGfshCommand {
+public class ShCommand extends OfflineGfshCommand {
-  public Result sh(
+  public ResultModel sh(
-          help = CliStrings.SH__USE_CONSOLE__HELP) boolean useConsole) {
-    Result result;
-    try {
-      result =
-          ResultBuilder.buildResult(executeCommand(Gfsh.getCurrentInstance(), command, useConsole));
-    } catch (IllegalStateException | IOException e) {
-      result = ResultBuilder.createUserErrorResult(e.getMessage());
-      LogWrapper.getInstance(getCache())
-          .warning("Unable to execute command \"" + command + "\". Reason:" + e.getMessage() + ".");
-    }
+          help = CliStrings.SH__USE_CONSOLE__HELP) boolean useConsole)
+      throws IOException {
+    ResultModel result = new ResultModel();
+    InfoResultModel info = result.getInfoSection("info");
+
+    executeCommand(info, Gfsh.getCurrentInstance(), command, useConsole);
+
-  private static InfoResultData executeCommand(Gfsh gfsh, String userCommand, boolean useConsole)
+  private void executeCommand(InfoResultModel result, Gfsh gfsh, String userCommand,
+      boolean useConsole)
-    InfoResultData infoResultData = ResultBuilder.createInfoResultData();
-      infoResultData.addLine(lineRead);
+      result.addLine(lineRead);
-    return infoResultData;
