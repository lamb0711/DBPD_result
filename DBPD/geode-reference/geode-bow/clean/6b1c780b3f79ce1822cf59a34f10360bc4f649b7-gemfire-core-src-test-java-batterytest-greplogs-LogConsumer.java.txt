Merge remote-tracking branch 'origin/feature/GEODE-409' into develop

-  private static final Pattern infoOrBelowPattern = Pattern.compile("^\\[(?:info|debug|trace|fine|finer|finest)");
+  /**
+   * Any messages at these levels will be skipped
+   */
+  private static final Pattern skipLevelPattern = Pattern.compile("^\\[(?:warn|warning|info|debug|trace|fine|finer|finest)");
-  private static int ERROR_BUFFER_LIMIT = 50;
+  private static int ERROR_BUFFER_LIMIT = 128;
-      if (infoOrBelowPattern.matcher(line).find()){
+      if (skipLevelPattern.matcher(line).find()){
-            tmpErrFlag = false;
-            tmpErrLines = 0;
-            saveFlag = false;
-            StringBuilder buffer = new StringBuilder();
-            buffer.append("-----------------------------------------------------------------------\n");
-            buffer.append("Found suspect string in ")
-                   .append(fileName)
-                   .append(" at line ")
-                   .append(savelinenum).append("\n\n")
-                   .append(all.toString());
-            return buffer;
+            // This code used to stop appending if a causedBy was seen.
+            // But we want the causedBy stack trace to also be included
+            // in the suspect StringBuilder.
+            // The main thing is we do not want to call checkExpectedStrs
+            // with this "caused by" line.
-            // one of the registered ignorable strings
+            // one of the registered expected strings
-                     && !(infoOrBelowPattern.matcher(line).find()
+                     && !(skipLevelPattern.matcher(line).find()
-          String shortName = "";
+          String shortName = null;
+          if (shortName != null) {
+          } else {
+            return enforceErrorLimit(1, line + "\n", lineNumber, fileName);
+          }
-      StringBuilder buffer = new StringBuilder();
-      buffer.append("\n-----------------------------------------------------------------------\n")
-            .append("Found suspect string in ")
-            .append(fileName)
-            .append(" at line ")
-            .append(savelinenum)
-            .append("\n\n")
-            .append(all);
-      return buffer;
+      return enforceErrorLimit(1, all.toString(), savelinenum, fileName);
