GEODE-8166: reimplement redis expiration to use new data model (#5174)

* Added timestamp field to RedisData and implemented serialization and delta for it.
Both active and passive expiration have been implemented.

* RedisHash, RedisSet, and RedisString now subclass AbstractRedisData
* type command now uses function
* getset, incr, decr, incrby, and decrby now uses function and is atomic

-  private final int TIMEOUT_REMOVED = 1;
-
-  private final int KEY_NOT_EXIST_OR_NO_TIMEOUT = 0;
-
-    boolean canceled = context.getRegionProvider().cancelKeyExpiration(key);
-
-    if (canceled) {
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), TIMEOUT_REMOVED));
-    } else {
-      command.setResponse(
-          Coder.getIntegerResponse(context.getByteBufAllocator(), KEY_NOT_EXIST_OR_NO_TIMEOUT));
-    }
+    RedisKeyCommands redisKeyCommands = new RedisKeyCommandsFunctionExecutor(
+        context.getRegionProvider().getDataRegion());
+    int result = redisKeyCommands.persist(key);
+    command.setResponse(
+        Coder.getIntegerResponse(
+            context.getByteBufAllocator(),
+            result));
