GEODE-240: Remove deprecated methods on TransactionEvent

Removed deprecated methods getCreateEvents, getDestroyEvents, getPutEvents, getInvalidateEvents from the TransactionEvent.
Removed implementation for methods getCreateEvents, getDestroyEvents, getPutEvents, getInvalidateEvents from TxEvent and TxRmtEvent.
Added utility methods getCreateEvents, getDestroyEvents, getPutEvents, getInvalidateEvents in TxEventTestUtil.
Changed tests to use the new utilty methods from TxEventTestUtil.

Signed-off-by: Shankar <shankar@ampool.io>

This closes #515

-  private List createEvents = null;
-  private List putEvents = null;
-  private List invalidateEvents = null;
-  private List destroyEvents = null;
-  public synchronized List getCreateEvents() {
-    if (this.createEvents == null) {
-      ArrayList result = new ArrayList();
-      Iterator it = getEvents().iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isCreate()) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        this.createEvents = Collections.EMPTY_LIST;
-      } else {
-        this.createEvents = Collections.unmodifiableList(result);
-      }
-    }
-    return this.createEvents;
-  }
-
-  public synchronized List getPutEvents() {
-    if (this.putEvents == null) {
-      ArrayList result = new ArrayList();
-      Iterator it = getEvents().iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isUpdate()) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        this.putEvents = Collections.EMPTY_LIST;
-      } else {
-        this.putEvents = Collections.unmodifiableList(result);
-      }
-    }
-    return this.putEvents;
-  }
-
-  public synchronized List getInvalidateEvents() {
-    if (this.invalidateEvents == null) {
-      ArrayList result = new ArrayList();
-      Iterator it = getEvents().iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isInvalidate()) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        this.invalidateEvents = Collections.EMPTY_LIST;
-      } else {
-        this.invalidateEvents = Collections.unmodifiableList(result);
-      }
-    }
-    return this.invalidateEvents;
-  }
-
-  public synchronized List getDestroyEvents() {
-    if (this.destroyEvents == null) {
-      ArrayList result = new ArrayList();
-      Iterator it = getEvents().iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isDestroy()) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        this.destroyEvents = Collections.EMPTY_LIST;
-      } else {
-        this.destroyEvents = Collections.unmodifiableList(result);
-      }
-    }
-    return this.destroyEvents;
-  }
