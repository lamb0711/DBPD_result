[GEODE-77] When coordinator shutsdown, next coordinator may be missed
No longer ignores leave messages from other members, even if not coordinator
Instead we track them and if we become coordinator, we end up "processing" them
by removing the members that left from the view (if there are any in the list)

Additional change to correctly keep removed and left members in the list on installview

+  /** members who we've received a leave message from **/
+  private final Set<InternalDistributedMember> leftMembers = new HashSet<>();
+
+      synchronized(leftMembers) {
+        leftMembers.add(mbr);
+        check.removeAll(leftMembers);
+      }
+      synchronized(leftMembers) {
+        check.removeAll(leftMembers);
+      }
+        synchronized(this.leftMembers) {
+          leaving.addAll(leftMembers);
+        }
+
-      removedMembers.clear();
+      removeMembersFromCollectionIfNotInView(removedMembers, currentView);
+    }
+    synchronized(leftMembers) {
+      removeMembersFromCollectionIfNotInView(leftMembers, currentView);
+    }
+  }
+
+  private void removeMembersFromCollectionIfNotInView(Collection<InternalDistributedMember> members, NetView currentView) {
+    Iterator<InternalDistributedMember> iterator = members.iterator();
+    while (iterator.hasNext()) {
+      if (!currentView.contains(iterator.next())) {
+          iterator.remove();
+      }
-
-    if (this.isCoordinator) {
-      LeaveRequestMessage msg = new LeaveRequestMessage(Collections.singleton(this.localAddress), (InternalDistributedMember) mbr, reason);
-      recordViewRequest(msg);
-    }
+    LeaveRequestMessage msg = new LeaveRequestMessage(Collections.singleton(this.localAddress), (InternalDistributedMember)mbr, reason);
+    processLeaveRequest(msg);
