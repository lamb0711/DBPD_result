GEODE-6964: Move geode log4j core classes to geode-log4j

Introduce new Logging and Alerting SPIs. Extract all log4j-core code to
geode-log4j module.

The geode-core module no longer contains log4j2.xml and no longer has a
dependency on log4j-core.

All code that uses log4j-core has moved to the new module geode-log4j.
The log4j2.xml for Geode now lives in geode-log4j as well. These
changes ensure that users have better control over logging including
which backend to use. This should improve user experience when using
Spring Boot.

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

-package org.apache.geode.internal.logging;
+package org.apache.geode.alerting.internal;
-/**
- * {@link ProviderAgent} that does nothing.
- */
-public class NullProviderAgent implements ProviderAgent {
+import java.time.Instant;
+
+import org.apache.geode.alerting.internal.spi.AlertLevel;
+import org.apache.geode.distributed.DistributedMember;
+
+public class NullAlertMessaging implements AlertMessaging {
-  public void configure(final LogConfig logConfig, final LogLevelUpdateOccurs logLevelUpdateOccurs,
-      final LogLevelUpdateScope logLevelUpdateScope) {
-    // nothing
-  }
-
-  @Override
-  public void cleanup() {
+  public void sendAlert(DistributedMember member, AlertLevel alertLevel, Instant timestamp,
+      String threadName, long threadId, String formattedMessage, String stackTrace) {
