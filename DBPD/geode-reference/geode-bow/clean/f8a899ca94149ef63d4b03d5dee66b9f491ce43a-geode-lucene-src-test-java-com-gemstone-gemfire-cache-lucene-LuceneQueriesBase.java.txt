GEODE-1614: CI failure: LuceneQueriesClientDUnitTest.entriesFlushedToIndexAfterWaitForFlushCalled

* The test was failing on a negative check to make sure the queue actually had contents.
  There were cases where the queue could be drained due to the "slowness"/async pausing of the sender.
* Moved and rewrote this test out from LuceneQueriesBase as I didn't think we needed to test flushing
  on multiple base region types.  Not sure if commits stat is the correct one to check.
* LuceneTestUtilities clean up

-  @Test
-  public void entriesFlushedToIndexAfterWaitForFlushCalled() {
-    SerializableRunnableIF createIndex = () -> {
-      LuceneService luceneService = LuceneServiceProvider.get(getCache());
-      luceneService.createIndex(INDEX_NAME, REGION_NAME, "text");
-    };
-    dataStore1.invoke(() -> initDataStore(createIndex));
-    dataStore2.invoke(() -> initDataStore(createIndex));
-    accessor.invoke(() -> initAccessor(createIndex));
-
-    //Pause the sender to make sure some entries are queued up
-    dataStore1.invoke(() -> pauseSender(getCache()));
-    dataStore2.invoke(() -> pauseSender(getCache()));
-    putDataInRegion(accessor);
-    assertFalse(waitForFlushBeforeExecuteTextSearch(dataStore1, 500));
-    dataStore1.invoke(() -> resumeSender(getCache()));
-    dataStore2.invoke(() -> resumeSender(getCache()));
-    assertTrue(waitForFlushBeforeExecuteTextSearch(dataStore1, 60000));
-    executeTextSearch(accessor);
-  }
-
