GEODE-8219: Apply RedisResponse to all redis string commands (#5206)


+import org.apache.geode.redis.internal.RedisResponse;
-  public void executeCommand(Command command, ExecutionHandlerContext context) {
+  public RedisResponse executeCommandWithResponse(Command command,
+      ExecutionHandlerContext context) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.BITPOS));
-      return;
+      return RedisResponse.error(ArityDef.BITPOS);
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INT));
-      return;
+      return RedisResponse.error(ERROR_NOT_INT);
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_BIT));
-      return;
+      return RedisResponse.error(ERROR_BIT);
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit)); // Redis
-      // returns
-      // 0 when
-      // key
-      // does
-      // not
-      // exists
-      // for
-      // this
-      // command
-      return;
+      // Redis returns 0 when key does not exists for this command
+      return RedisResponse.integer(-bit);
-        command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INT));
-        return;
+        return RedisResponse.error(ERROR_NOT_INT);
-        command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INT));
-        return;
+        return RedisResponse.error(ERROR_NOT_INT);
-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -1));
-      return;
+      return RedisResponse.integer(-1);
-    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), bitPosition));
+    return RedisResponse.integer(bitPosition);
