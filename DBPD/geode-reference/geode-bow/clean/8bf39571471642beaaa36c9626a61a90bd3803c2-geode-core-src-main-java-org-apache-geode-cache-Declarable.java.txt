Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-/** 
+/**
- * Any user-defined object in the declarative caching xml file
- * should implement this interface in order to be constructed.
+ * Any user-defined object in the declarative caching xml file should implement this interface in
+ * order to be constructed.
- * For example, the user can declare a <code>CacheLoader</code> in a declarative
- * XML file as follows:
+ * For example, the user can declare a <code>CacheLoader</code> in a declarative XML file as
+ * follows:
- * In this case, <code>com.company.app.DBLoader</code> must 
- * implement both the {@link CacheLoader} and <code>Declarable</code>
- * interfaces. The cache service will construct a
- * <code>com.company.app.DBLoader</code> object by invoking the loader's
- * zero-argument constructor and then calling the {@link #init} method
- * to pass in the parameters.
+ * In this case, <code>com.company.app.DBLoader</code> must implement both the {@link CacheLoader}
+ * and <code>Declarable</code> interfaces. The cache service will construct a
+ * <code>com.company.app.DBLoader</code> object by invoking the loader's zero-argument constructor
+ * and then calling the {@link #init} method to pass in the parameters.
-   * Initializes a user-defined object using the given properties.
-   * Note that any uncaught exception thrown by this method will cause
-   * the <code>Cache</code> initialization to fail.
+   * Initializes a user-defined object using the given properties. Note that any uncaught exception
+   * thrown by this method will cause the <code>Cache</code> initialization to fail.
-   * @param props 
-   *        Contains the parameters declared in the declarative xml
-   *        file.
+   * @param props Contains the parameters declared in the declarative xml file.
-   * @throws IllegalArgumentException
-   *         If one of the configuration options in <code>props</code>
-   *         is illegal or malformed.
+   * @throws IllegalArgumentException If one of the configuration options in <code>props</code> is
+   *         illegal or malformed.
