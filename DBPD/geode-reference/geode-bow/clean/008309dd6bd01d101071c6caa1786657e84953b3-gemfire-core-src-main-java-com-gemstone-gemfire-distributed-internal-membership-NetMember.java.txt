Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2010-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * one or more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import com.gemstone.gemfire.internal.Version;
+
-public interface NetMember
+public interface NetMember extends Comparable<NetMember>
-  public abstract void setAttributes(MemberAttributes args);
+  public void setAttributes(MemberAttributes args);
-  public abstract MemberAttributes getAttributes();
+  public MemberAttributes getAttributes();
-  public abstract InetAddress getIpAddress();
+  public InetAddress getInetAddress();
-  public abstract int getPort();
+  public int getPort();
-  public abstract void setPort(int p);
+  public void setPort(int p);
-  public abstract boolean isMulticastAddress();
+  public boolean isMulticastAddress();
+  
+  public short getVersionOrdinal();
-  public abstract boolean splitBrainEnabled();
+  public boolean splitBrainEnabled();
+  
+  public void setSplitBrainEnabled(boolean enabled);
-  public abstract boolean canBeCoordinator();
-
+  public boolean preferredForCoordinator();
+  
-   * Establishes an order between 2 addresses. Assumes other contains non-null IpAddress.
-   * Excludes channel_name from comparison.
-   * @return 0 for equality, value less than 0 if smaller, greater than 0 if greater.
+   * Set whether this member ID is preferred for coordinator.  This
+   * is mostly useful for unit tests because it does not distribute
+   * this status to other members in the distributed system. 
+   * @param preferred
-  public abstract int compare(NetMember other);
+  public void setPreferredForCoordinator(boolean preferred);
+  
+  public byte getMemberWeight();
+  
+  public void setVersion(Version v);
-  /**
-   * implements the java.lang.Comparable interface
-   * @see java.lang.Comparable
-   * @param o - the Object to be compared
-   * @return a negative integer, zero, or a positive integer as this object is less than,
-   *         equal to, or greater than the specified object.
-   * @exception java.lang.ClassCastException - if the specified object's type prevents it
-   *            from being compared to this Object.
-   */
-  public abstract int compareTo(Object o);
-
-  public abstract boolean equals(Object obj);
-
-  public abstract int hashCode();
-
-  public abstract String toString();
+  /** write identity information not known by DistributedMember instances */
+  public void writeAdditionalData(DataOutput out) throws IOException;
+  
+  /** read identity information not known by DistributedMember instances */
+  public void readAdditionalData(DataInput in) throws ClassNotFoundException, IOException;
