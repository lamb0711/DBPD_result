GEODE-1244: Package, directory, project and file rename for geode-spark-connector

Attempt #2.  Added missing geode-functions directory

-import static io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaUtil.*;
+import static io.pivotal.geode.spark.connector.javaapi.GeodeJavaUtil.*;
- * This Spark application demonstrates how to expose a region in GemFire as a RDD using GemFire
+ * This Spark application demonstrates how to expose a region in Geode as a RDD using Geode
- * In order to run it, you will need to start GemFire cluster, and run demo PairRDDSaveJavaDemo
+ * In order to run it, you will need to start Geode cluster, and run demo PairRDDSaveJavaDemo
- * should be generated under gemfire-spark-demos/basic-demos/target/scala-2.10/. 
+ * should be generated under geode-spark-demos/basic-demos/target/scala-2.10/.
-    conf.set(GemFireLocatorPropKey, argv[0]);
+    conf.set(GeodeLocatorPropKey, argv[0]);
-    JavaPairRDD<String, String> rdd = javaFunctions(sc).gemfireRegion("str_str_region");
-    System.out.println("=== gemfireRegion =======\n" + rdd.collect() + "\n=========================");
+    JavaPairRDD<String, String> rdd = javaFunctions(sc).geodeRegion("str_str_region");
+    System.out.println("=== geodeRegion =======\n" + rdd.collect() + "\n=========================");
