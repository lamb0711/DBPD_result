GEODE-3096: pulling in refactoring work on HttpOperationInvoker

* Use HttpOperationInvoker to replace RestHttpOperationInvoker and SimpleHttpOperationInvoker
* Use one single ShellCommandController to replace all command controllers
* do not allow execution of commands that require client side file data gathering to be executed only on the locator/server
* deprecate CommandService and CommandStatement
* simplify CommandRequest, delete geode's ClientHttpRequest
* fix tests

-import org.apache.geode.cache.execute.Function;
+
-  default void logInfo(final String message) {
-    logInfo(message, null);
-  }
-
-  default void logInfo(final Throwable cause) {
-    logInfo(cause.getMessage(), cause);
-  }
-
-  default void logInfo(final String message, final Throwable cause) {
-    if (isLogging()) {
-      getGfsh().logInfo(message, cause);
-    }
-  }
-
-  default void logWarning(final String message) {
-    logWarning(message, null);
-  }
-
-  default void logWarning(final Throwable cause) {
-    logWarning(cause.getMessage(), cause);
-  }
-
-  default void logWarning(final String message, final Throwable cause) {
-    if (isLogging()) {
-      getGfsh().logWarning(message, cause);
-    }
-  }
-
-  default void logSevere(final String message) {
-    logSevere(message, null);
-  }
-
-  default void logSevere(final Throwable cause) {
-    logSevere(cause.getMessage(), cause);
-  }
-
-  default void logSevere(final String message, final Throwable cause) {
-    if (isLogging()) {
-      getGfsh().logSevere(message, cause);
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  default <T extends Function> T register(T function) {
-    if (FunctionService.isRegistered(function.getId())) {
-      function = (T) FunctionService.getFunction(function.getId());
-    } else {
-      FunctionService.registerFunction(function);
-    }
-    return function;
-  }
