Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-    RegionFunctionContext rContext = (RegionFunctionContext)context;
+    RegionFunctionContext rContext = (RegionFunctionContext) context;
-    LocalDataSet localCust = (LocalDataSet)PartitionRegionHelper.getLocalDataForContext(rContext);
-    Map <String, Region<?,?>> localColocatedRegions = PartitionRegionHelper.getLocalColocatedRegions(rContext);
-    Map <String, Region<?,?>> colocatedRegions = PartitionRegionHelper.getColocatedRegions(cust);
+    LocalDataSet localCust = (LocalDataSet) PartitionRegionHelper.getLocalDataForContext(rContext);
+    Map<String, Region<?, ?>> localColocatedRegions =
+        PartitionRegionHelper.getLocalColocatedRegions(rContext);
+    Map<String, Region<?, ?>> colocatedRegions = PartitionRegionHelper.getColocatedRegions(cust);
-    Assert.assertTrue(colocatedRegions.size()==2); 
+    Assert.assertTrue(colocatedRegions.size() == 2);
-    
-    Region ord = colocatedRegions.get("/OrderPR") ;
-    Region localOrd = localColocatedRegions.get("/OrderPR") ;
+
+    Region ord = colocatedRegions.get("/OrderPR");
+    Region localOrd = localColocatedRegions.get("/OrderPR");
-    
+
-    
-    Assert.assertTrue(localCust.getBucketSet().size() == ((LocalDataSet)localOrd).getBucketSet().size());
-    Assert.assertTrue(localCust.getBucketSet().size() == ((LocalDataSet)localShip).getBucketSet().size());
-    
+
+    Assert.assertTrue(
+        localCust.getBucketSet().size() == ((LocalDataSet) localOrd).getBucketSet().size());
+    Assert.assertTrue(
+        localCust.getBucketSet().size() == ((LocalDataSet) localShip).getBucketSet().size());
+
-    Assert.assertTrue(shipKeySet.size() == 120);    
-    
+    Assert.assertTrue(shipKeySet.size() == 120);
+
-    
+
-  
+
