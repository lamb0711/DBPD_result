GEODE-3715: improve javadocs of DistributedTest rules

-import java.util.Collections;
+/**
+ * JUnit Rule that creates Cache instances in DistributedTest VMs without {@code CacheTestCase}.
+ *
+ * <p>
+ * {@code CacheRule} follows the standard convention of using a {@code Builder} for configuration as
+ * introduced in the JUnit {@code Timeout} rule.
+ *
+ * <p>
+ * {@code CacheRule} can be used in DistributedTests as a {@code Rule}:
+ *
+ * <pre>
+ * {@literal @}ClassRule
+ * public static DistributedTestRule distributedTestRule = new DistributedTestRule();
+ *
+ * {@literal @}Rule
+ * public CacheRule cacheRule = CacheRule.builder().createCacheInAll().build();
+ *
+ * {@literal @}Test
+ * public void everyVMShouldHaveACache() {
+ *   assertThat(cacheRule.getCache()).isNotNull();
+ *   for (VM vm : Host.getHost(0).getAllVMs()) {
+ *     vm.invoke(() -> assertThat(cacheRule.getCache()).isNotNull());
+ *   }
+ * }
+ * </pre>
+ */
-  public static InternalCache getCacheForTesting() {
-    return cache;
-  }
-
