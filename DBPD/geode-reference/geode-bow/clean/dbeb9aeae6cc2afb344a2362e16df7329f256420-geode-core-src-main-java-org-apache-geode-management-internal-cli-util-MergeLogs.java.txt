Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- 
+
-/**
+  /**
-      throw new IllegalArgumentException(
-          "Requires only 1  arguments : <targetDirName>");
+      throw new IllegalArgumentException("Requires only 1  arguments : <targetDirName>");
-    try{
+    try {
-    }catch(Exception e){
+    } catch (Exception e) {
-    
+
-  
-  static String mergeLogFile(String dirName) throws Exception{    
-    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");    
+
+  static String mergeLogFile(String dirName) throws Exception {
+    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
-        logFiles[i] = new FileInputStream(dirName +File.separator+ logsToMerge[i]);
-        logFileNames[i] =dirName +File.separator+ logsToMerge[i];        
-      } catch (FileNotFoundException e) {        
-        throw new Exception(logsToMerge[i] + " "+CliStrings.EXPORT_LOGS__MSG__FILE_DOES_NOT_EXIST);
-      }      
+        logFiles[i] = new FileInputStream(dirName + File.separator + logsToMerge[i]);
+        logFileNames[i] = dirName + File.separator + logsToMerge[i];
+      } catch (FileNotFoundException e) {
+        throw new Exception(
+            logsToMerge[i] + " " + CliStrings.EXPORT_LOGS__MSG__FILE_DOES_NOT_EXIST);
+      }
-    
+
-      String mergeLog = dirName+File.separator + "merge_"+sdf.format(new java.util.Date())+".log";
+      String mergeLog =
+          dirName + File.separator + "merge_" + sdf.format(new java.util.Date()) + ".log";
-      boolean flag = MergeLogFiles.mergeLogFiles(logFiles, logFileNames, mergedLog);      
-    } catch (FileNotFoundException e) {      
-      throw new Exception("FileNotFoundException in creating PrintWriter in MergeLogFiles"+e.getMessage());
-    } catch (Exception e) {      
-      throw new Exception("Exception in creating PrintWriter in MergeLogFiles"+e.getMessage());
+      boolean flag = MergeLogFiles.mergeLogFiles(logFiles, logFileNames, mergedLog);
+    } catch (FileNotFoundException e) {
+      throw new Exception(
+          "FileNotFoundException in creating PrintWriter in MergeLogFiles" + e.getMessage());
+    } catch (Exception e) {
+      throw new Exception("Exception in creating PrintWriter in MergeLogFiles" + e.getMessage());
-       
+
-  
+
