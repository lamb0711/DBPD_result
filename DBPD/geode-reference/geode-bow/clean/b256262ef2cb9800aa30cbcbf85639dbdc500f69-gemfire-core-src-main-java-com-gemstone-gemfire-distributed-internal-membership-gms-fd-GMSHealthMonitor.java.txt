GMSHealthMonitor was only accepting a health-check response to see if a member was alive or not.  This change-set modifies it to allow any message from the suspect to prove that the suspect is alive.  This reduced the amount of suspect processing going on quite a bit, and made it less likely to incorrectly oust a busy member.

GMSMembershipManager was not throwing an exception when distribution was attempted but the manager was shutting down.  This caused large inconsistencies between clients and servers in client/server HA testing.

TCPServer's message to determine the locator's version was using a 2-minute timeout, totally ignoring the timeout passed to it.  It now pays attention to the requested timeout.

A number of tests were using Java assertions instead of JUnit Assert.  I changed all of these in our recently added tests to use the JUnit assertions in case the JUnit jvm doesn't have assertions enabled.

+import java.util.concurrent.ConcurrentMap;
-  final private Map<InternalDistributedMember, CustomTimeStamp> memberVsLastMsgTS = new ConcurrentHashMap<>();
+  final ConcurrentMap<InternalDistributedMember, CustomTimeStamp> memberVsLastMsgTS = new ConcurrentHashMap<>();
-  private ScheduledFuture monitorFuture;
+  private ScheduledFuture<?> monitorFuture;
-    CustomTimeStamp cTS = memberVsLastMsgTS.get(sender);
+    CustomTimeStamp cTS = new CustomTimeStamp(currentTimeStamp);
+    cTS = memberVsLastMsgTS.putIfAbsent(sender, cTS);
-    } else {
-      cTS = new CustomTimeStamp();
-      cTS.setTimeStamp(currentTimeStamp);
-      memberVsLastMsgTS.put(sender, cTS);
-    volatile long timeStamp;
+    private volatile long timeStamp;
+    
+    CustomTimeStamp(long timeStamp) {
+      this.timeStamp = timeStamp;
+    }
-          CustomTimeStamp customTS = new CustomTimeStamp();
-          customTS.setTimeStamp(currentTime);
+          CustomTimeStamp customTS = new CustomTimeStamp(currentTime);
-        CustomTimeStamp customTS = new CustomTimeStamp();
-        customTS.setTimeStamp(cts);
+        CustomTimeStamp customTS = new CustomTimeStamp(cts);
+              long startTime = System.currentTimeMillis();
+              CustomTimeStamp ts = new CustomTimeStamp(startTime);
+              memberVsLastMsgTS.put(mbr, ts);
+
-                GMSHealthMonitor.this.services.getJoinLeave().remove(mbr, reason);
+                ts = memberVsLastMsgTS.get(mbr);
+                if (ts == null || ts.getTimeStamp() <= startTime) {
+                  services.getJoinLeave().remove(mbr, reason);
+                }
-    NetView v = currentView;
