GEODE-5252: Race in management adapter could fail to create MXBeans. (#1993)

Fixed a race condition which causes the creation of MBeans fail 
while handling resource lifecycle change notifications.
  * A read-write lock is added to synchronize between handling notifications
    of cache creation/removal and handling other notifications.
  * Added a test which to test the synchronization for a fixed amount of time.

-  public void handleCacheCreation(InternalCache cache) throws ManagementException {
+  protected void handleCacheCreation(InternalCache cache) throws ManagementException {
-  public void handleManagerStart() throws ManagementException {
+  protected void handleManagerStart() throws ManagementException {
-  public void handleManagerStop() throws ManagementException {
+  protected void handleManagerStop() throws ManagementException {
-  public void handleManagerCreation() throws ManagementException {
+  protected void handleManagerCreation() throws ManagementException {
-  public void handleDiskCreation(DiskStore disk) throws ManagementException {
+  protected void handleDiskCreation(DiskStore disk) throws ManagementException {
-  public void handleLockServiceCreation(DLockService lockService) throws ManagementException {
+  protected void handleLockServiceCreation(DLockService lockService) throws ManagementException {
-  public void handleGatewaySenderCreation(GatewaySender sender) throws ManagementException {
+  protected void handleGatewaySenderCreation(GatewaySender sender) throws ManagementException {
-  public void handleGatewayReceiverCreate(GatewayReceiver recv) throws ManagementException {
+  protected void handleGatewayReceiverCreate(GatewayReceiver recv) throws ManagementException {
-  public void handleGatewayReceiverDestroy(GatewayReceiver recv) throws ManagementException {
+  protected void handleGatewayReceiverDestroy(GatewayReceiver recv) throws ManagementException {
-  public void handleGatewayReceiverStart(GatewayReceiver recv) throws ManagementException {
+  protected void handleGatewayReceiverStart(GatewayReceiver recv) throws ManagementException {
-  public void handleGatewayReceiverStop(GatewayReceiver recv) throws ManagementException {
+  protected void handleGatewayReceiverStop(GatewayReceiver recv) throws ManagementException {
-  public void handleAsyncEventQueueCreation(AsyncEventQueue queue) throws ManagementException {
+  protected void handleAsyncEventQueueCreation(AsyncEventQueue queue) throws ManagementException {
-  public void handleAsyncEventQueueRemoval(AsyncEventQueue queue) throws ManagementException {
+  protected void handleAsyncEventQueueRemoval(AsyncEventQueue queue) throws ManagementException {
-  public void handleSystemNotification(AlertDetails details) {
+  protected void handleSystemNotification(AlertDetails details) {
-  public void handleCacheServerStart(CacheServer cacheServer) {
+  protected void handleCacheServerStart(CacheServer cacheServer) {
-  public void handleCacheServerStop(CacheServer server) {
+  protected void handleCacheServerStop(CacheServer server) {
-  public void handleCacheRemoval(Cache cache) throws ManagementException {
+  protected void handleCacheRemoval(Cache cache) throws ManagementException {
-  public void handleRegionRemoval(Region region) throws ManagementException {
+  protected void handleRegionRemoval(Region region) throws ManagementException {
-  public void handleDiskRemoval(DiskStore disk) throws ManagementException {
+  protected void handleDiskRemoval(DiskStore disk) throws ManagementException {
-  public void handleLockServiceRemoval(DLockService lockService) throws ManagementException {
+  protected void handleLockServiceRemoval(DLockService lockService) throws ManagementException {
-  public void handleLocatorStart(Locator locator) throws ManagementException {
+  protected void handleLocatorStart(Locator locator) throws ManagementException {
-  public void handleGatewaySenderStart(GatewaySender sender) throws ManagementException {
+  protected void handleGatewaySenderStart(GatewaySender sender) throws ManagementException {
-  public void handleGatewaySenderStop(GatewaySender sender) throws ManagementException {
+  protected void handleGatewaySenderStop(GatewaySender sender) throws ManagementException {
-  public void handleGatewaySenderPaused(GatewaySender sender) throws ManagementException {
+  protected void handleGatewaySenderPaused(GatewaySender sender) throws ManagementException {
-  public void handleGatewaySenderResumed(GatewaySender sender) throws ManagementException {
+  protected void handleGatewaySenderResumed(GatewaySender sender) throws ManagementException {
-  public void handleGatewaySenderRemoved(GatewaySender sender) throws ManagementException {
+  protected void handleGatewaySenderRemoved(GatewaySender sender) throws ManagementException {
-  public void handleCacheServiceCreation(CacheService cacheService) throws ManagementException {
+  protected void handleCacheServiceCreation(CacheService cacheService) throws ManagementException {
