GEODE-913: refactor AbstractDistributionConfig

* use annotations to annotate the config attributes and its setters/getters/checkers
* delete multiple huge if/else statements to use annoations
* delete unnecessary checks use annotated checkers.
* delete all isXXModifiers to use attribute lists to denote if the attribute is modifiable or not.

-import java.io.File;
-import java.io.IOException;
-import java.io.Serializable;
-import java.net.InetAddress;
-import java.net.URL;
-import java.net.UnknownHostException;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Set;
-
+import java.io.File;
+import java.io.IOException;
+import java.io.Serializable;
+import java.net.InetAddress;
+import java.net.URL;
+import java.net.UnknownHostException;
+import java.util.*;
+
-    minMaxCheck(HTTP_SERVICE_PORT_NAME, value, 0, 65535);
-    this.httpServicePort = value;
+    this.httpServicePort = (Integer)checkAttribute(HTTP_SERVICE_PORT_NAME, value);
-    checkHttpServiceBindAddress(value);
-    this.httpServiceBindAddress = value;
+    this.httpServiceBindAddress = (String)checkAttribute(HTTP_SERVICE_BIND_ADDRESS_NAME, value);
-    checkUserCommandPackages(value);
-    this.userCommandPackages = value;
+    this.userCommandPackages = (String)checkAttribute(USER_COMMAND_PACKAGES, value);
-    checkDeltaPropagationModifiable();
-    this.deltaPropagation = value;
+    this.deltaPropagation = (Boolean)checkAttribute(DELTA_PROPAGATION_PROP_NAME, value);
-    checkName(value);
-    this.name = value;
+    this.name = (String)checkAttribute(NAME_NAME, value);
-    checkTcpPort(value);
-    this.tcpPort = value;
+    this.tcpPort = (Integer)checkAttribute(TCP_PORT_NAME, value);
-    checkMcastPort(value);
-    this.mcastPort = value;
+    this.mcastPort = (Integer)checkAttribute(MCAST_PORT_NAME, value);
-    checkMcastTtl(value);
-    this.mcastTtl = value;
+    this.mcastTtl = (Integer)checkAttribute(MCAST_TTL_NAME, value);
-    checkSocketLeaseTime(value);
-    this.socketLeaseTime = value;
+    this.socketLeaseTime = (Integer)checkAttribute(SOCKET_LEASE_TIME_NAME, value);
-    checkSocketBufferSize(value);
-    this.socketBufferSize = value;
+    this.socketBufferSize = (Integer)checkAttribute(SOCKET_BUFFER_SIZE_NAME, value);
-    checkConserveSockets(value);
-    this.conserveSockets = value;
+    this.conserveSockets = (Boolean)checkAttribute(CONSERVE_SOCKETS_NAME, value);
-    checkRoles(value);
-    this.roles = value;
+    this.roles = (String)checkAttribute(ROLES_NAME, value);
-    checkMcastAddress(value);
-    this.mcastAddress = value;
+    this.mcastAddress = (InetAddress)checkAttribute(MCAST_ADDRESS_NAME, value);
-    checkBindAddress(value);
-    this.bindAddress = value;
+    this.bindAddress = (String)checkAttribute(BIND_ADDRESS_NAME, value);
-    checkServerBindAddress(value);
-    this.serverBindAddress = value;
+    this.serverBindAddress = (String)checkAttribute(SERVER_BIND_ADDRESS_NAME, value);
-    value = checkLocators(value);
-    this.locators = value;
+    this.locators = (String)checkAttribute(LOCATORS_NAME, value);
-    checkDeployWorkingDir(value);
-    this.deployWorkingDir = value;
+    this.deployWorkingDir = (File)checkAttribute(DEPLOY_WORKING_DIR, value);
-    checkLogFile(value);
-    this.logFile = value;
+    this.logFile = (File)checkAttribute(LOG_FILE_NAME, value);
-    checkLogLevel(value);
-    this.logLevel = value;
+    this.logLevel = (Integer)checkAttribute(LOG_LEVEL_NAME, value);
-        checkStartLocator(value);
+        value = (String)checkAttribute(START_LOCATOR_NAME, value);
-    checkStatisticSamplingEnabled(value);
-    this.statisticSamplingEnabled = value;
+    this.statisticSamplingEnabled = (Boolean)checkAttribute(STATISTIC_SAMPLING_ENABLED_NAME, value);
-    checkStatisticSampleRate(value);
+    value = (Integer)checkAttribute(STATISTIC_SAMPLE_RATE_NAME, value);
-    checkStatisticArchiveFile(value);
-    this.statisticArchiveFile = value;
+    this.statisticArchiveFile = (File)checkAttribute(STATISTIC_ARCHIVE_FILE_NAME, value);
-    checkCacheXmlFile(value);
-    this.cacheXmlFile = value;
+    this.cacheXmlFile = (File)checkAttribute(CACHE_XML_FILE_NAME, value);
-    checkAckWaitThreshold(value);
-    this.ackWaitThreshold = value;
+    this.ackWaitThreshold = (Integer)checkAttribute(ACK_WAIT_THRESHOLD_NAME, value);
-    checkAckSevereAlertThreshold(value);
-    this.ackForceDisconnectThreshold = value;
+    this.ackForceDisconnectThreshold = (Integer)checkAttribute(ACK_SEVERE_ALERT_THRESHOLD_NAME, value);
-    checkArchiveDiskSpaceLimit(value);
-    this.archiveDiskSpaceLimit = value;
+    this.archiveDiskSpaceLimit = (Integer)checkAttribute(ARCHIVE_DISK_SPACE_LIMIT_NAME, value);
-    checkArchiveFileSizeLimit(value);
-    this.archiveFileSizeLimit = value;
+    this.archiveFileSizeLimit = (Integer)checkAttribute(ARCHIVE_FILE_SIZE_LIMIT_NAME, value);
-    checkLogDiskSpaceLimit(value);
-    this.logDiskSpaceLimit = value;
+    this.logDiskSpaceLimit = (Integer)checkAttribute(LOG_DISK_SPACE_LIMIT_NAME, value);
-    checkLogFileSizeLimit(value);
-    this.logFileSizeLimit = value;
+    this.logFileSizeLimit = (Integer)checkAttribute(LOG_FILE_SIZE_LIMIT_NAME, value);
-    checkSSLEnabled( value ? Boolean.TRUE : Boolean.FALSE );
-    this.sslEnabled = value;
+    this.sslEnabled = (Boolean)checkAttribute(SSL_ENABLED_NAME, value);
-    checkSSLProtocols( value );
-    this.sslProtocols = value;
+    this.sslProtocols = (String)checkAttribute(SSL_PROTOCOLS_NAME, value);
-    checkSSLCiphers( value );
-    this.sslCiphers = value;
+    this.sslCiphers = (String)checkAttribute(SSL_CIPHERS_NAME, value);
-    checkSSLRequireAuthentication( value ? Boolean.TRUE : Boolean.FALSE );
-    this.sslRequireAuthentication = value;
+    this.sslRequireAuthentication = (Boolean)checkAttribute(SSL_REQUIRE_AUTHENTICATION_NAME, value);
-    checkClusterSSLEnabled( value ? Boolean.TRUE : Boolean.FALSE );
-    this.clusterSSLEnabled = value;
+    this.clusterSSLEnabled = (Boolean)checkAttribute(CLUSTER_SSL_ENABLED_NAME, value);
-    checkClusterSSLProtocols( value );
-    this.clusterSSLProtocols = value;
+    this.clusterSSLProtocols = (String)checkAttribute(CLUSTER_SSL_PROTOCOLS_NAME, value);
-    checkClusterSSLCiphers( value );
-    this.clusterSSLCiphers = value;
+    this.clusterSSLCiphers = (String)checkAttribute(CLUSTER_SSL_CIPHERS_NAME, value);
-    checkClusterSSLRequireAuthentication( value ? Boolean.TRUE : Boolean.FALSE );
-    this.clusterSSLRequireAuthentication = value;
+    this.clusterSSLRequireAuthentication = (Boolean)checkAttribute(CLUSTER_SSL_REQUIRE_AUTHENTICATION_NAME, value);
-    checkClusterSSLKeyStore( value );
+    value = (String)checkAttribute(CLUSTER_SSL_KEYSTORE_NAME, value);
-    checkClusterSSLKeyStoreType( value );
+    value =  (String)checkAttribute(CLUSTER_SSL_KEYSTORE_TYPE_NAME, value);
-    checkClusterSSLKeyStorePassword( value );
+    value = (String)checkAttribute(CLUSTER_SSL_KEYSTORE_PASSWORD_NAME, value);
-    this.clusterSSLKeyStorePassword = value;
+    this.clusterSSLKeyStorePassword =value;
-    checkClusterSSLTrustStore( value );
+    value = (String)checkAttribute(CLUSTER_SSL_TRUSTSTORE_NAME, value);
-    checkClusterSSLTrustStorePassword( value );
+    value = (String)checkAttribute(CLUSTER_SSL_TRUSTSTORE_PASSWORD_NAME, value);
-    checkMcastSendBufferSize(value);
-    mcastSendBufferSize = value;
+    mcastSendBufferSize = (Integer)checkAttribute(MCAST_SEND_BUFFER_SIZE_NAME, value);
-    checkMcastRecvBufferSize(value);
-    mcastRecvBufferSize = value;
+    mcastRecvBufferSize = (Integer)checkAttribute(MCAST_RECV_BUFFER_SIZE_NAME, value);
-    checkAsyncDistributionTimeout(value);
-    this.asyncDistributionTimeout = value;
+    this.asyncDistributionTimeout = (Integer)checkAttribute(ASYNC_DISTRIBUTION_TIMEOUT_NAME, value);
-    checkAsyncQueueTimeout(value);
-    this.asyncQueueTimeout = value;
+    this.asyncQueueTimeout = (Integer)checkAttribute(ASYNC_QUEUE_TIMEOUT_NAME, value);
-    checkAsyncMaxQueueSize(value);
-    this.asyncMaxQueueSize = value;
+    this.asyncMaxQueueSize = (Integer)checkAttribute(ASYNC_MAX_QUEUE_SIZE_NAME, value);
-    checkMcastFlowControl(values);
-    mcastFlowControl = values;
+    mcastFlowControl = (FlowControlParams)checkAttribute(MCAST_FLOW_CONTROL_NAME, values);
-    checkUdpFragmentSize(value);
-    udpFragmentSize = value;
+    udpFragmentSize = (Integer)checkAttribute(UDP_FRAGMENT_SIZE_NAME, value);
-    checkUdpSendBufferSize(value);
-    udpSendBufferSize = value;
+    udpSendBufferSize = (Integer)checkAttribute(UDP_SEND_BUFFER_SIZE_NAME, value);
-    checkUdpRecvBufferSize(value);
-    udpRecvBufferSize = value;
+    udpRecvBufferSize = (Integer)checkAttribute(UDP_RECV_BUFFER_SIZE_NAME, value);
-    checkMemberTimeout(value);
-    memberTimeout = value;
+    memberTimeout = (Integer)checkAttribute(MEMBER_TIMEOUT_NAME, value);
-    checkClientConflation(value);
-    this.clientConflation = value;
+    this.clientConflation = (String)checkAttribute(CLIENT_CONFLATION_PROP_NAME, value);
-    checkDurableClientId(value);
-    durableClientId = value;
+    durableClientId = (String)checkAttribute(DURABLE_CLIENT_ID_NAME, value);
-    checkDurableClientTimeout(value);
-    durableClientTimeout = value;
+    durableClientTimeout = (Integer)checkAttribute(DURABLE_CLIENT_TIMEOUT_NAME, value);
-    checkSecurityClientAuthInit(value);
-    securityClientAuthInit = value;
+    securityClientAuthInit = (String)checkAttribute(SECURITY_CLIENT_AUTH_INIT_NAME, value);
-    checkSecurityClientAuthenticator(value);
-    securityClientAuthenticator = value;
+    securityClientAuthenticator = (String)checkAttribute(SECURITY_CLIENT_AUTHENTICATOR_NAME, value);
-    checkSecurityClientDHAlgo(value);
-    securityClientDHAlgo = value;
+    securityClientDHAlgo = (String)checkAttribute(SECURITY_CLIENT_DHALGO_NAME, value);
-    checkSecurityPeerAuthInit(value);
-    securityPeerAuthInit = value;
+    securityPeerAuthInit = (String)checkAttribute(SECURITY_PEER_AUTH_INIT_NAME, value);
-    checkSecurityPeerAuthenticator(value);
-    securityPeerAuthenticator = value;
+    securityPeerAuthenticator = (String)checkAttribute(SECURITY_PEER_AUTHENTICATOR_NAME, value);
-    checkSecurityClientAccessor(value);
-    securityClientAccessor = value;
+    securityClientAccessor = (String)checkAttribute(SECURITY_CLIENT_ACCESSOR_NAME, value);
-    checkSecurityClientAccessorPP(value);
-    securityClientAccessorPP = value;
+    securityClientAccessorPP = (String)checkAttribute(SECURITY_CLIENT_ACCESSOR_PP_NAME, value);
-    checkSecurityLogLevel(value);
-    securityLogLevel = value;
+    securityLogLevel = (Integer)checkAttribute(SECURITY_LOG_LEVEL_NAME, value);
-    checkSecurityLogFile(value);
-    securityLogFile = value;
+    securityLogFile = (File)checkAttribute(SECURITY_LOG_FILE_NAME, value);
-    checkSecurityPeerMembershipTimeout(value);
-    securityPeerMembershipTimeout = value;
+    securityPeerMembershipTimeout = (Integer)checkAttribute(SECURITY_PEER_VERIFYMEMBER_TIMEOUT_NAME, value);
-    checkSecurity(attName, attValue);
+    checkAttribute(attName, attValue);
-    checkDistributedSystemId(distributedSystemId);
-    this.distributedSystemId = distributedSystemId;
+    this.distributedSystemId = (Integer)checkAttribute(DISTRIBUTED_SYSTEM_ID_NAME, distributedSystemId);
-    checkEnforceUniqueHostModifiable();
-    this.enforceUniqueHost = enforceUniqueHost;
+    this.enforceUniqueHost = (Boolean)checkAttribute(ENFORCE_UNIQUE_HOST_NAME, enforceUniqueHost);
-    checkRedundancyZoneModifiable();
-    this.redundancyZone = redundancyZone;
+    this.redundancyZone = (String)checkAttribute(REDUNDANCY_ZONE_NAME, redundancyZone);
-    checkSSLPropertyModifiable();
+    checkAttribute(attName, attValue);
-    checkGroups(value);
-    this.groups = value;
+    this.groups = (String)checkAttribute(GROUPS_NAME, value);
-  public boolean isJmxManagerSSLModifiable() {
-    return false;
-  }
-  @Override
-    checkJmxManagerSSLKeyStore( value );
+    value = (String)checkAttribute(JMX_MANAGER_SSL_KEYSTORE_NAME, value);
-    checkJmxManagerSSLKeyStoreType( value );
+    value =(String)checkAttribute(JMX_MANAGER_SSL_KEYSTORE_TYPE_NAME, value);
-    checkJmxManagerSSLKeyStorePassword( value );
+    value = (String)checkAttribute(JMX_MANAGER_SSL_KEYSTORE_PASSWORD_NAME, value);
-    checkJmxManagerSSLTrustStore( value );
+    value = (String)checkAttribute(JMX_MANAGER_SSL_TRUSTSTORE_NAME, value);
-    checkJmxManagerSSLTrustStorePassword( value );
+    value = (String)checkAttribute(JMX_MANAGER_SSL_TRUSTSTORE_PASSWORD_NAME, value);
-    this.jmxManagerSSLTrustStorePassword = value;
+    this.jmxManagerSSLTrustStorePassword =value;
-    checkJmxManagerPort(value);
-    this.jmxManagerPort = value;
+    this.jmxManagerPort = (Integer)checkAttribute(JMX_MANAGER_PORT_NAME, value);
-    checkJmxManagerBindAddress(value);
-    this.jmxManagerBindAddress = value;
+    this.jmxManagerBindAddress = (String)checkAttribute(JMX_MANAGER_BIND_ADDRESS_NAME, value);
-    checkJmxManagerHostnameForClients(value);
-    this.jmxManagerHostnameForClients = value;
+    this.jmxManagerHostnameForClients = (String)checkAttribute(JMX_MANAGER_HOSTNAME_FOR_CLIENTS_NAME, value);
-    checkJmxManagerPasswordFile(value);
-    this.jmxManagerPasswordFile = value;
+    this.jmxManagerPasswordFile = (String)checkAttribute(JMX_MANAGER_PASSWORD_FILE_NAME, value);
-    checkJmxManagerAccessFile(value);
-    this.jmxManagerAccessFile = value;
+    this.jmxManagerAccessFile = (String)checkAttribute(JMX_MANAGER_ACCESS_FILE_NAME, value);
-    checkJmxManagerUpdateRate(value);
-    this.jmxManagerUpdateRate = value;
+    this.jmxManagerUpdateRate = (Integer)checkAttribute(JMX_MANAGER_UPDATE_RATE_NAME, value);
-    checkMembershipPortRange(range);
-    membershipPortRange = range;
+    membershipPortRange = (int[])checkAttribute(MEMBERSHIP_PORT_RANGE_NAME, range);
-    this.remoteLocators = checkRemoteLocators(value);
+    this.remoteLocators = (String)checkAttribute(REMOTE_LOCATORS_NAME, value);
-    checkMemcachedPort(value);
-    this.memcachedPort = value;
+    this.memcachedPort = (Integer)checkAttribute(MEMCACHED_PORT_NAME, value);
-    checkMemcachedProtocol(protocol);
-    this.memcachedProtocol = protocol;
+    this.memcachedProtocol = (String)checkAttribute(MEMCACHED_PROTOCOL_NAME, protocol);
-    checkRedisPort(value);
-    this.redisPort = value;
+    this.redisPort = (Integer)checkAttribute(REDIS_PORT_NAME, value);
-    checkRedisBindAddress(bindAddress);
-    this.redisBindAddress = bindAddress;
+    this.redisBindAddress = (String)checkAttribute(REDIS_BIND_ADDRESS_NAME, bindAddress);
-    checkOffHeapMemorySize(value);
-    this.offHeapMemorySize = value;
-  }
-  
-  protected void checkOffHeapMemorySize(String value) {
-    super.checkOffHeapMemorySize(value);
+    this.offHeapMemorySize = (String)checkAttribute(OFF_HEAP_MEMORY_SIZE_NAME, value);
-    checkMemcachedBindAddress(bindAddress);
-    this.memcachedBindAddress = bindAddress;
+    this.memcachedBindAddress = (String)checkAttribute(MEMCACHED_BIND_ADDRESS_NAME, bindAddress);
-    checkEnableSharedConfiguration();
-    this.enableSharedConfiguration = value;
+    this.enableSharedConfiguration = (Boolean)checkAttribute(ENABLE_CLUSTER_CONFIGURATION_NAME, value);
-    checkUseSharedConfiguration();
-    this.useSharedConfiguration = newValue;
+    this.useSharedConfiguration = (Boolean)checkAttribute(USE_CLUSTER_CONFIGURATION_NAME, newValue);
-    checkLoadSharedConfigFromDir();
-    this.loadSharedConfigurationFromDir = newValue;
+    this.loadSharedConfigurationFromDir = (Boolean)checkAttribute(LOAD_CLUSTER_CONFIG_FROM_DIR_NAME, newValue);
-    checkClusterConfigDir();
-    this.clusterConfigDir = clusterConfigDir;
+    this.clusterConfigDir = (String)checkAttribute(CLUSTER_CONFIGURATION_DIR, clusterConfigDir);
-    checkServerSSLEnabled();
-    this.serverSSLEnabled = value;
+    this.serverSSLEnabled = (Boolean)checkAttribute(SERVER_SSL_ENABLED_NAME, value);
-    checkServerSSLRequireAuthentication();
-    this.serverSslRequireAuthentication = value;
+    this.serverSslRequireAuthentication = (Boolean)checkAttribute(SERVER_SSL_REQUIRE_AUTHENTICATION_NAME, value);
-    checkServerSSLProtocols();
-    this.serverSslProtocols = protocols;    
+    this.serverSslProtocols = (String)checkAttribute(SERVER_SSL_PROTOCOLS_NAME, protocols);
-   checkServerSSLCiphers();
-    this.serverSslCiphers = ciphers;
+    this.serverSslCiphers = (String)checkAttribute(SERVER_SSL_CIPHERS_NAME, ciphers);
-    checkServerSSLKeyStore( value );
+    value = (String)checkAttribute(SERVER_SSL_KEYSTORE_NAME, value);
-    checkServerSSLKeyStoreType( value );
+    value = (String)checkAttribute(SERVER_SSL_KEYSTORE_TYPE_NAME, value);
-    checkServerSSLKeyStorePassword( value );
+    value = (String) checkAttribute(SERVER_SSL_KEYSTORE_PASSWORD_NAME,  value );
-    checkServerSSLTrustStore( value );
+    value = (String)checkAttribute(SERVER_SSL_TRUSTSTORE_NAME, value);
-    checkServerSSLTrustStorePassword( value );
+    value = (String)checkAttribute(SERVER_SSL_TRUSTSTORE_PASSWORD_NAME, value);
-    checkServerSSLEnabled();
-    this.gatewaySSLEnabled = value;
+    this.gatewaySSLEnabled = (Boolean)checkAttribute(SERVER_SSL_ENABLED_NAME, value);
-    checkGatewaySSLRequireAuthentication();
-    this.gatewaySslRequireAuthentication = value;
+    this.gatewaySslRequireAuthentication = (Boolean)checkAttribute(GATEWAY_SSL_REQUIRE_AUTHENTICATION_NAME, value);
-    checkServerSSLProtocols();
-    this.gatewaySslProtocols = protocols;    
+    this.gatewaySslProtocols = (String)checkAttribute(SERVER_SSL_PROTOCOLS_NAME, protocols);
-   checkGatewaySSLCiphers();
-    this.gatewaySslCiphers = ciphers;
+    this.gatewaySslCiphers = (String)checkAttribute(GATEWAY_SSL_CIPHERS_NAME, ciphers);
-    checkGatewaySSLKeyStore( value );
+    checkAttribute(GATEWAY_SSL_KEYSTORE_NAME, value);
-    checkGatewaySSLKeyStoreType( value );
+    checkAttribute(GATEWAY_SSL_KEYSTORE_TYPE_NAME, value);
-    checkGatewaySSLKeyStorePassword( value );
+    checkAttribute(GATEWAY_SSL_KEYSTORE_PASSWORD_NAME, value);
-    checkGatewaySSLTrustStore( value );
+    checkAttribute(GATEWAY_SSL_TRUSTSTORE_NAME, value);
-    checkGatewaySSLTrustStorePassword( value );
+    checkAttribute(GATEWAY_SSL_TRUSTSTORE_PASSWORD_NAME, value);
-    checkHttpServiceSSLKeyStore(httpServiceSSLKeyStore);
+    checkAttribute(HTTP_SERVICE_SSL_KEYSTORE_NAME, httpServiceSSLKeyStore);
-    checkHttpServiceSSLKeyStoreType(httpServiceSSLKeyStoreType);
+    checkAttribute(HTTP_SERVICE_SSL_KEYSTORE_TYPE_NAME, httpServiceSSLKeyStoreType);
-    checkHttpServiceSSLKeyStorePassword(httpServiceSSLKeyStorePassword);
+    checkAttribute(HTTP_SERVICE_SSL_KEYSTORE_PASSWORD_NAME, httpServiceSSLKeyStorePassword);
-    checkHttpServiceSSLTrustStore(httpServiceSSLTrustStore);
+    checkAttribute(HTTP_SERVICE_SSL_TRUSTSTORE_NAME, httpServiceSSLTrustStore);
-    checkHttpServiceSSLTrustStorePassword(httpServiceSSLTrustStorePassword);
+    checkAttribute(HTTP_SERVICE_SSL_TRUSTSTORE_PASSWORD_NAME, httpServiceSSLTrustStorePassword);
+
+
