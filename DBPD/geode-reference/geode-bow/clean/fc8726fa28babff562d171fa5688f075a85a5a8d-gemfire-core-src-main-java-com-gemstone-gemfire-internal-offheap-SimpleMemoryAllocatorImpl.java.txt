GEODE-784: Offheap MemoryInspector refactor

Extracted MemoryInspector from SimpleMemoryAllocator and added tests

-public final class SimpleMemoryAllocatorImpl implements MemoryAllocator, MemoryInspector {
+public final class SimpleMemoryAllocatorImpl implements MemoryAllocator {
-  
+
+  private MemoryInspector memoryInspector;
+
+    this.memoryInspector = new MemoryInspectorImpl(this.freeList);
-  
-  /** The inspection snapshot for MemoryInspector */
-  private List<MemoryBlock> memoryBlocks;
-  
-  @Override
-  public MemoryInspector getMemoryInspector() {
-    return this;
-  }
-  
-  @Override
-  public synchronized void clearInspectionSnapshot() {
-    this.memoryBlocks = null;
-  }
-  
-  @Override
-  public synchronized void createInspectionSnapshot() {
-    List<MemoryBlock> value = this.memoryBlocks;
-    if (value == null) {
-      value = getOrderedBlocks();
-      this.memoryBlocks = value;
-    }
-  }
-  synchronized List<MemoryBlock> getInspectionSnapshot() {
-    List<MemoryBlock> value = this.memoryBlocks;
-    if (value == null) {
-      return Collections.<MemoryBlock>emptyList();
-    } else {
-      return value;
-    }
-  }
-  
-  @Override
-    Collections.sort(orphans, 
+    Collections.sort(orphans,
-    });
+        });
-  
-  @Override
-  public MemoryBlock getFirstBlock() {
-    final List<MemoryBlock> value = getInspectionSnapshot();
-    if (value.isEmpty()) {
-      return null;
-    } else {
-      return value.get(0);
-    }
-  }
-  
-  @Override
-  public List<MemoryBlock> getAllBlocks() {
-    return getOrderedBlocks();
-  }
-  
-  @Override
-  public List<MemoryBlock> getAllocatedBlocks() {
-    return this.freeList.getAllocatedBlocks();
-  }
-  public MemoryBlock getBlockAfter(MemoryBlock block) {
-    if (block == null) {
-      return null;
-    }
-    List<MemoryBlock> blocks = getInspectionSnapshot();
-    int nextBlock = blocks.indexOf(block) + 1;
-    if (nextBlock > 0 && blocks.size() > nextBlock) {
-      return blocks.get(nextBlock);
-    } else {
-      return null;
-    }
+  public MemoryInspector getMemoryInspector() {
+    return this.memoryInspector;
-  private List<MemoryBlock> getOrderedBlocks() {
-    return this.freeList.getOrderedBlocks();
-  }
-  
