GEODE-7869: Cleanup warnings in geode-gfsh

-import org.apache.geode.internal.logging.LogWriterImpl;
-    if (args.length < 6 || args.length > 6) {
+    if (args.length != 6) {
+      List<String> logLevels = getLogLevels(logLevel, onlyLogLevel);
-      // build possible log levels based on user input
-      // get all the levels below the one mentioned by user
-      List<String> logLevels = new ArrayList<>();
-      if (onlyLogLevel.toLowerCase().equals("false")) {
-        for (int level : LogWriterImpl.allLevels) {
-          if (level >= LogLevel.getLogWriterLevel(logLevel)) {
-            logLevels.add(LogWriterImpl.levelToString(level).toLowerCase());
-          }
-        }
-      } else {
-        logLevels.add(logLevel);
-      }
-      boolean foundLogLevelTag = false;
-        foundLogLevelTag = line.startsWith("[");
+        boolean foundLogLevelTag = line.startsWith("[");
-          String stTime = "";
+          StringBuilder stTime = new StringBuilder();
-            stTime = stTime + line.charAt(i);
+            stTime.append(line.charAt(i));
-          Time longStart = new Time(Long.valueOf(startTime));
-          Time longEnd = new Time(Long.valueOf(endTime));
+          Time longStart = new Time(Long.parseLong(startTime));
+          Time longEnd = new Time(Long.parseLong(endTime));
-          if ((fileStartTime.getTime() >= userStartTime && fileStartTime.getTime() <= userEndTime)
-              || (fileEndTime.getTime() >= userStartTime && fileEndTime.getTime() <= userEndTime)
-              || (fileStartTime.getTime() >= userStartTime && fileStartTime.getTime() <= userEndTime
-                  && fileEndTime.getTime() >= userStartTime
-                  && fileEndTime.getTime() <= userEndTime)) {
+          if (fileStartTime.getTime() >= userStartTime && fileStartTime.getTime() <= userEndTime
+              || fileEndTime.getTime() >= userStartTime && fileEndTime.getTime() <= userEndTime) {
-          validateLogLevel = checkLogLevel(line, logLevel, logLevels, foundLogLevelTag);
+          validateLogLevel = checkLogLevel(line, logLevel, logLevels);
-  static boolean checkLogLevel(String line, String logLevel, List<String> logLevels,
-      boolean foundLogLevelTag) {
+  @SuppressWarnings("deprecation")
+  private static List<String> getLogLevels(String logLevel, String onlyLogLevel) {
+    // build possible log levels based on user input
+    // get all the levels below the one mentioned by user
+    List<String> logLevels = new ArrayList<>();
+    if (onlyLogLevel.toLowerCase().equals("false")) {
+      for (int level : org.apache.geode.internal.logging.LogWriterImpl.allLevels) {
+        if (level >= LogLevel.getLogWriterLevel(logLevel)) {
+          logLevels.add(
+              org.apache.geode.internal.logging.LogWriterImpl.levelToString(level).toLowerCase());
+        }
+      }
+    } else {
+      logLevels.add(logLevel);
+    }
+    return logLevels;
+  }
+
+  static boolean checkLogLevel(String line, String logLevel, List<String> logLevels) {
-    } else if (foundLogLevelTag) {
+    } else {
-                return flag;
+                return true;
-
-    } else {
-      return true;
