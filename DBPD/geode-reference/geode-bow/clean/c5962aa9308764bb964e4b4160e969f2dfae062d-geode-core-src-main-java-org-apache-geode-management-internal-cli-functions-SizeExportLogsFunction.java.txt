GEODE-2420: Resolve conflicts with recent checkin

Use InternalCache instead of GemnFireCachImpl.

Refactored product and tests
- Combined LogExporter and LogSizer.
- Remove classes no longer needed

-import java.text.ParseException;
+import org.apache.geode.management.ManagementException;
+import org.apache.geode.management.internal.cli.util.BytesToString;
+import org.apache.geode.management.internal.cli.util.LogExporter;
-import org.apache.geode.management.internal.cli.util.LogSizer;
-      long diskAvailable = config.getLogFile().getUsableSpace();
-      long diskSize = config.getLogFile().getTotalSpace();
+      long diskAvailable = getDiskAvailable(config);
-      context.getResultSender().lastResult(
-          Arrays.asList(new ExportedLogsSizeInfo(estimatedSize, diskAvailable, diskSize)));
+      BytesToString bytesToString = new BytesToString();
+      if (estimatedSize == 0 || estimatedSize < diskAvailable) {
+        context.getResultSender().lastResult(Arrays.asList(estimatedSize));
+      } else {
+        StringBuilder sb = new StringBuilder().append("Estimated disk space required (")
+            .append(bytesToString.of(estimatedSize)).append(") to consolidate logs on member ")
+            .append(cache.getName()).append(" will exceed available disk space (")
+            .append(bytesToString.of(diskAvailable)).append(")");
+        context.getResultSender().sendException(new ManagementException(sb.toString())); // FileTooBigException
+      }
+  long getDiskAvailable(DistributionConfig config) {
+    return config.getLogFile().getUsableSpace();
+  }
+
-      final File statArchive, final Args args) throws ParseException, IOException {
+      final File statArchive, final Args args) throws IOException {
-    long estimatedSize = new LogSizer(logFilter, baseLogFile, baseStatsFile).getFilteredSize();
+    long estimatedSize =
+        new LogExporter(logFilter, baseLogFile, baseStatsFile).estimateFilteredSize();
