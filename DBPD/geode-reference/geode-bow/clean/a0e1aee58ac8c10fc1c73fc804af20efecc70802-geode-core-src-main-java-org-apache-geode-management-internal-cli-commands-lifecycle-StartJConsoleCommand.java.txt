GEODE-5971: Have all offline commands extends OfflineGfshCommand instâ€¦ (#2967)

* GEODE-5971: Have all offline commands extends OfflineGfshCommand instead of InternalGfshCommand
* eventually InternalGfshCommand should be deleted and replaced with GfshCommand

Co-authored-by: Peter Tran <ptran@pivotal.io>



+import javax.management.remote.JMXServiceURL;
+
-import org.apache.geode.internal.lang.ObjectUtils;
-import org.apache.geode.management.internal.cli.commands.InternalGfshCommand;
+import org.apache.geode.management.internal.cli.commands.OfflineGfshCommand;
-import org.apache.geode.management.internal.cli.shell.JmxOperationInvoker;
-public class StartJConsoleCommand extends InternalGfshCommand {
+public class StartJConsoleCommand extends OfflineGfshCommand {
-      infoResult.addLine(
+      getGfsh().printAsInfo(
-      message.append(CliStrings.START_JCONSOLE__RUN);
+      getGfsh().printAsInfo(CliStrings.START_JCONSOLE__RUN);
-      String jmxServiceUrl = getJmxServiceUrlAsString();
-
-      if (StringUtils.isNotBlank(jmxServiceUrl)) {
-        commandLine.add(jmxServiceUrl);
+      JMXServiceURL jmxServiceUrl = getJmxServiceUrl();
+      if (isConnectedAndReady() && jmxServiceUrl != null) {
+        commandLine.add(jmxServiceUrl.toString());
-
-  String getJmxServiceUrlAsString() {
-    if (isConnectedAndReady()
-        && (getGfsh().getOperationInvoker() instanceof JmxOperationInvoker)) {
-      JmxOperationInvoker jmxOperationInvoker =
-          (JmxOperationInvoker) getGfsh().getOperationInvoker();
-
-      return ObjectUtils.toString(jmxOperationInvoker.getJmxServiceUrl());
-    }
-    return null;
-  }
