GEODE-1962: Increment notQueuedConflated stat if object unresolved from offheap

-  private boolean areLocalBucketQueueRegionsPresent() {
+  protected boolean areLocalBucketQueueRegionsPresent() {
-  private boolean areLocalBucketQueueRegionsPresent(PartitionedRegion prQ) {
-    return prQ.getDataStore().isLocalBucketRegionPresent();
-  }
-  
-        BucketRegionQueue br = (BucketRegionQueue)prQ.getDataStore()
-            .getLocalBucketById(thisProcessorBuckets.get(pickBucketId++));
+        BucketRegionQueue br = getBucketRegionQueueByBucketId(prQ, thisProcessorBuckets.get(pickBucketId++));
-            .getLocalBucketById(bucketId);
+            .getBucketRegionQueueByBucketId(bucketId);
-      BucketRegionQueue brq = (BucketRegionQueue)prQ.getDataStore()
-          .getLocalBucketById(bucketId);
+      BucketRegionQueue brq = getBucketRegionQueueByBucketId(prQ, bucketId);
+            if (stats != null) {
+              stats.incEventsNotQueuedConflated();
+            }
-          BucketRegionQueue brq = ((BucketRegionQueue)prQ
-              .getDataStore().getLocalBucketById(bId));
-          
-          //brq.doLockForPrimary(false);
-          
+
-    BucketRegionQueue brq = ((BucketRegionQueue)prQ
-        .getDataStore().getLocalBucketById(bucketId));
+    BucketRegionQueue brq = getBucketRegionQueueByBucketId(prQ, bucketId);
-  
-  
+
+  protected BucketRegionQueue getBucketRegionQueueByBucketId(final PartitionedRegion prQ, final int bucketId) {
+    return (BucketRegionQueue)prQ
+        .getDataStore().getLocalBucketById(bucketId);
+  }
+
+
