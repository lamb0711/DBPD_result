GEODE-2271 JSOnFormatter can generate three pdxTypeId for one json field.

JSON field can have 3 values(fieldValue, NULL, fieldNotExist), this
causes 3 pdxTypeIds. To reuduce this we merged first two values in in
one pdxType.

Added unit test for it

-  private Long Id;
+  private Long id;
-    this.Id = id;
+    this.id = id;
-    return Id;
+    return id;
-    Id = id;
+    this.id = id;
-    this.Id = in.readLong("Id");
+    this.id = in.readLong("id");
-    out.writeLong("Id", Id);
+    out.writeLong("id", id);
+  public String toString() {
+    return "Employee [Id=" + id + ", fname=" + fname + ", lname=" + lname + "]";
+  }
+
+  @Override
+  public int hashCode() {
+    final int prime = 31;
+    int result = 1;
+    result = prime * result + ((fname == null) ? 0 : fname.hashCode());
+    result = prime * result + ((id == null) ? 0 : id.hashCode());
+    result = prime * result + ((lname == null) ? 0 : lname.hashCode());
+    return result;
+  }
+
+  @Override
-
-    if (Id.longValue() != other.Id.longValue())
+    if (fname == null) {
+      if (other.fname != null)
+        return false;
+    } else if (!fname.equals(other.fname))
-
-    if (!fname.equals(other.fname))
+    if (id == null) {
+      if (other.id != null)
+        return false;
+    } else if (!id.equals(other.id))
-
-    if (!lname.equals(other.lname))
+    if (lname == null) {
+      if (other.lname != null)
+        return false;
+    } else if (!lname.equals(other.lname))
-
+
+
