Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The DeployCommandsController class implements the GemFire Management REST API web service endpoints for the
- * Gfsh Deploy Commands.
+ * The DeployCommandsController class implements the GemFire Management REST API web service
+ * endpoints for the Gfsh Deploy Commands.
+ * 
-  public String listDeployed(@RequestParam(value = CliStrings.LIST_DEPLOYED__GROUP, required = false) final String[] groups) {
+  public String listDeployed(@RequestParam(value = CliStrings.LIST_DEPLOYED__GROUP,
+      required = false) final String[] groups) {
-      command.addOption(CliStrings.LIST_DEPLOYED__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.LIST_DEPLOYED__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-  public String deploy(@RequestParam(RESOURCES_REQUEST_PARAMETER) final MultipartFile[] jarFileResources,
-                       @RequestParam(value = CliStrings.DEPLOY__GROUP, required = false) final String[] groups,
-                       @RequestParam(value = CliStrings.DEPLOY__JAR, required = false) final String jarFileName,
-                       @RequestParam(value = CliStrings.DEPLOY__DIR, required = false) final String directory)
-    throws IOException
-  {
+  public String deploy(
+      @RequestParam(RESOURCES_REQUEST_PARAMETER) final MultipartFile[] jarFileResources,
+      @RequestParam(value = CliStrings.DEPLOY__GROUP, required = false) final String[] groups,
+      @RequestParam(value = CliStrings.DEPLOY__JAR, required = false) final String jarFileName,
+      @RequestParam(value = CliStrings.DEPLOY__DIR, required = false) final String directory)
+      throws IOException {
-      command.addOption(CliStrings.DEPLOY__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.DEPLOY__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-    //save(jarFileResources);
+    // save(jarFileResources);
-  public String undeploy(@RequestParam(value = CliStrings.UNDEPLOY__GROUP, required = false) final String[] groups,
-                         @RequestParam(value = CliStrings.UNDEPLOY__JAR, required = false) final String[] jarFileNames) {
+  public String undeploy(
+      @RequestParam(value = CliStrings.UNDEPLOY__GROUP, required = false) final String[] groups,
+      @RequestParam(value = CliStrings.UNDEPLOY__JAR,
+          required = false) final String[] jarFileNames) {
-      command.addOption(CliStrings.UNDEPLOY__GROUP, StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.UNDEPLOY__GROUP,
+          StringUtils.concat(groups, StringUtils.COMMA_DELIMITER));
-      command.addOption(CliStrings.UNDEPLOY__JAR, StringUtils.concat(jarFileNames, StringUtils.COMMA_DELIMITER));
+      command.addOption(CliStrings.UNDEPLOY__JAR,
+          StringUtils.concat(jarFileNames, StringUtils.COMMA_DELIMITER));
