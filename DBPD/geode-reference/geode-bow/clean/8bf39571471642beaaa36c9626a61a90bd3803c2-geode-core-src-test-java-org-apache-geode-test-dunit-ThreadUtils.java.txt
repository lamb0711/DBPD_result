Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * <code>ThreadUtils</code> provides static utility methods to perform thread
- * related actions such as dumping thread stacks.
+ * <code>ThreadUtils</code> provides static utility methods to perform thread related actions such
+ * as dumping thread stacks.
- * These methods can be used directly: <code>ThreadUtils.dumpAllStacks()</code>, 
- * however, they are intended to be referenced through static import:
+ * These methods can be used directly: <code>ThreadUtils.dumpAllStacks()</code>, however, they are
+ * intended to be referenced through static import:
-  
+
-  protected ThreadUtils() {
-  }
-  
+  protected ThreadUtils() {}
+
-    for (int h=0; h < Host.getHostCount(); h++) {
+    for (int h = 0; h < Host.getHostCount(); h++) {
-  
+
-  /** 
+  /**
-  /** 
+  /**
-    for (int v=0; v < host.getVMCount(); v++) {
+    for (int v = 0; v < host.getVMCount(); v++) {
-  /** 
+  /**
-    msg.append("Thread=<")
-      .append(thread)
-      .append("> stackDump:\n");
-    for (int i=0; i < stackTrace.length; i++) {
-      msg.append("\t")
-        .append(stackTrace[i])
-        .append("\n");
+    msg.append("Thread=<").append(thread).append("> stackDump:\n");
+    for (int i = 0; i < stackTrace.length; i++) {
+      msg.append("\t").append(stackTrace[i]).append("\n");
-      // but it is, at least with JDK 1.6.  According to the source code
+      // but it is, at least with JDK 1.6. According to the source code
-      // if the thread is dead.  However, I can tell you from experimentation
-      // that this is not the case. :-(  djp 2008-12-08
+      // if the thread is dead. However, I can tell you from experimentation
+      // that this is not the case. :-( djp 2008-12-08
