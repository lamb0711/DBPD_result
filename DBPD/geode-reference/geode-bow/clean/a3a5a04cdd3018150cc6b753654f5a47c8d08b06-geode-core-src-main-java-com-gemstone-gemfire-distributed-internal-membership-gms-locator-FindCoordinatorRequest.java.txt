Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/AbstractDistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/InternalLocator.java
#	geode-core/src/test/java/com/gemstone/gemfire/cache30/DistributedMulticastRegionDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/internal/DistributionConfigJUnitTest.java

+import com.gemstone.gemfire.internal.InternalDataSerializer;
-  
+  private byte[] myPublicKey;
+  private int requestId;   
+  private String dhalgo;
+
+    this.dhalgo = "";
-  public FindCoordinatorRequest(InternalDistributedMember myId, Collection<InternalDistributedMember> rejectedCoordinators, int lastViewId) {
+  public FindCoordinatorRequest(InternalDistributedMember myId, Collection<InternalDistributedMember> rejectedCoordinators, 
+      int lastViewId, byte[] pk, int requestId, String dhalgo) {
+    this.myPublicKey = pk;
+    this.requestId = requestId;
+    this.dhalgo = dhalgo;
+  public byte[] getMyPublicKey() {
+    return myPublicKey;
+  }
+  
+  public String getDHAlgo() {
+    return dhalgo;
+  }
+
+  
+  public int getRequestId() {
+    return requestId;
+  }
+    out.writeInt(requestId);
+    InternalDataSerializer.writeString(dhalgo, out);
+    InternalDataSerializer.writeByteArray(this.myPublicKey, out);
+    this.requestId = in.readInt();
+    this.dhalgo = InternalDataSerializer.readString(in);
+    this.myPublicKey = InternalDataSerializer.readByteArray(in);
+    result = prime * result + ((dhalgo == null) ? 0 : dhalgo.hashCode());
+    if(!dhalgo.equals(other.dhalgo)) {
+      return false;
+    }
