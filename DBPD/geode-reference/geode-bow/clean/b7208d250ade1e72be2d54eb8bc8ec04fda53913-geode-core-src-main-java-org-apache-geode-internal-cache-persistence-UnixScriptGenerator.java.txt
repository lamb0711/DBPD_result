GEODE-3798: Refactor backup script code (#932)

* GEODE-3798: Refactor backup script code

  * Add tests for classes with low code coverage
  * Remove use of PrintWriter
  * General cleanup and attempts a seprarating concerns

+import java.io.BufferedWriter;
-import java.io.PrintWriter;
+import java.io.IOException;
-  public void writePreamble(final PrintWriter writer) {
-    writer.println("#!/bin/bash -e");
-    writer.println("cd `dirname $0`");
+  private final String separator = System.lineSeparator();
+
+  public void writePreamble(final BufferedWriter writer) throws IOException {
+    writer.write("#!/bin/bash -e");
+    writer.newLine();
+    writer.write("cd `dirname $0`");
+    writer.newLine();
-  public void writeComment(final PrintWriter writer, final String string) {
-    writer.println("# " + string);
+  public void writeComment(final BufferedWriter writer, final String string) throws IOException {
+    writer.write("# " + string);
+    writer.newLine();
-  public void writeCopyDirectoryContents(final PrintWriter writer, final File backup,
-      final File original, final boolean backupHasFiles) {
-    writer.println("mkdir -p '" + original + "'");
+  public void writeCopyDirectoryContents(final BufferedWriter writer, final File backup,
+      final File original, final boolean backupHasFiles) throws IOException {
+    writer.write("mkdir -p '" + original + "'");
+    writer.newLine();
-      writer.println("cp -rp '" + backup + "'/* '" + original + "'");
+      writer.write("cp -rp '" + backup + "'/* '" + original + "'");
+      writer.newLine();
-  public void writeCopyFile(final PrintWriter writer, final File backup, final File original) {
-    writer.println("cp -p '" + backup + "' '" + original + "'");
+  public void writeCopyFile(final BufferedWriter writer, final File backup, final File original)
+      throws IOException {
+    writer.write("cp -p '" + backup + "' '" + original + "'");
+    writer.newLine();
-  public void writeExistenceTest(final PrintWriter writer, final File file) {
-    writer.println("test -e '" + file + "' && echo '" + RestoreScript.REFUSE_TO_OVERWRITE_MESSAGE
+  public void writeExistenceTest(final BufferedWriter writer, final File file) throws IOException {
+    writer.write("test -e '" + file + "' && echo '" + RestoreScript.REFUSE_TO_OVERWRITE_MESSAGE
+    writer.newLine();
-  public void writeExit(final PrintWriter writer) {
+  public void writeExit(final BufferedWriter writer) throws IOException {
