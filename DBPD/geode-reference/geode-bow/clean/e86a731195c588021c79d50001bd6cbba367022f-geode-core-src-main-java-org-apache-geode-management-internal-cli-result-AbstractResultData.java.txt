Merge branch 'release/1.3.0'

-import java.io.FileNotFoundException;
-import java.io.UnsupportedEncodingException;
-import java.nio.charset.Charset;
+import java.sql.Time;
-  /**
-   * @return the gfJsonObject
-   */
-   * 
-   * @param footerText
-   * @return this ResultData
+   *
-    String toAdd = String.valueOf(new java.sql.Time(System.currentTimeMillis()));
+    String toAdd = String.valueOf(new Time(System.currentTimeMillis()));
-    byte[] bytes = data;
-    return addAsFile(fileName, bytes, fileType, message);
+    return addAsFile(fileName, data, fileType, message);
-    String options = length > 1 ? "(y/N/a)" : "(y/N)"; // TODO - Abhishek Make this consistent -
-                                                       // with
-                                                       // AbstractCliAroundInterceptor.readYesNo()
-
-    BYTEARRAY_LOOP: for (int i = 0; i < length; i++) {
+    String options = length > 1 ? "(y/N/a)" : "(y/N)";
+    for (int i = 0; i < length; i++) {
-      byte[] fileNameBytes = null;
-      String fileName = null;
+      byte[] fileNameBytes;
+      String fileName;
-      byte[] fileMessageBytes = null;
-      String fileMessage = null;
+      byte[] fileMessageBytes;
+      String fileMessage;
-      boolean isGfshVM = CliUtil.isGfshVM();
+      Gfsh gfsh = Gfsh.getCurrentInstance();
-                new Object[] {fileName, fileToDumpData.getParent(), options});
-        if (isGfshVM) {
-          Gfsh gfsh = Gfsh.getCurrentInstance();
-          if (gfsh != null && !gfsh.isQuietMode() && !overwriteAllExisting) {
-            fileExistsMessage = fileExistsMessage + " Overwrite? " + options + " : ";
-            String interaction = gfsh.interact(fileExistsMessage);
-            if ("a".equalsIgnoreCase(interaction.trim())) {
-              overwriteAllExisting = true;
-            } else if (!"y".equalsIgnoreCase(interaction.trim())) {
-              // do not save file & continue
-              continue BYTEARRAY_LOOP;
-            }
+                fileName, fileToDumpData.getParent(), options);
+        if (gfsh != null && !gfsh.isQuietMode() && !overwriteAllExisting) {
+          fileExistsMessage = fileExistsMessage + " Overwrite? " + options + " : ";
+          String interaction = gfsh.interact(fileExistsMessage);
+          if ("a".equalsIgnoreCase(interaction.trim())) {
+            overwriteAllExisting = true;
+          } else if (!"y".equalsIgnoreCase(interaction.trim())) {
+            // do not save file & continue
+            continue;
-            fileToDumpData.getAbsolutePath()), isGfshVM);
+            fileToDumpData.getAbsolutePath()));
-            fileToDumpData.getAbsolutePath()), isGfshVM);
+            fileToDumpData.getAbsolutePath()));
-                fileToDumpData.getAbsolutePath()),
-            isGfshVM);
+                fileToDumpData.getAbsolutePath()));
-      // System.out.println("fileMessage :: "+fileMessage);
-        if (isGfshVM) {
-          Gfsh.println(
-              MessageFormat.format(fileMessage, new Object[] {fileToDumpData.getAbsolutePath()}));
+        if (gfsh != null) {
+          Gfsh.println(MessageFormat.format(fileMessage, fileToDumpData.getAbsolutePath()));
-      // System.out.println(new String(uncompressed));
-  // TODO - Abhishek : prepare common utility for this & ANSI Styling
-  static void handleCondition(String message, boolean isGfshVM) throws IOException {
-    if (isGfshVM) {
-      Gfsh gfsh = Gfsh.getCurrentInstance();
-      // null check required in GfshVM too to avoid test issues
-      if (gfsh != null && !gfsh.isQuietMode()) {
-        gfsh.logWarning(message, null);
-      }
+  static void handleCondition(String message) throws IOException {
+    Gfsh gfsh = Gfsh.getCurrentInstance();
+    // null check required in GfshVM too to avoid test issues
+    if (gfsh != null && !gfsh.isQuietMode()) {
+      gfsh.logWarning(message, null);
