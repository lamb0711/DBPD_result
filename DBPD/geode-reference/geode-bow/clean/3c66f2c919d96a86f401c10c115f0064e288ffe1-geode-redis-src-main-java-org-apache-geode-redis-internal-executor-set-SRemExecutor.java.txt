GEODE-8048: change redis sets to use functions and deltas (#5009)


Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Sarah Abbey <sabbey@pivotal.io>
Co-authored-by: John Hutchison <jhutchison@pivotal.io>
Co-authored-by: Jens Deppe <jdeppe@pivotal.io>
+import java.util.ArrayList;
+import java.util.concurrent.atomic.AtomicBoolean;
-    List<ByteArrayWrapper> commandElems = command.getProcessedCommandWrappers();
+    List<ByteArrayWrapper> commandElements = command.getProcessedCommandWrappers();
-    if (commandElems.size() < 3) {
+    if (commandElements.size() < 3) {
-    RedisSet set = new GeodeRedisSetSynchronized(key, context);
-    long numRemoved = set.srem(commandElems.subList(2, commandElems.size()));
-    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), numRemoved));
+    RedisSet geodeRedisSet =
+        new GeodeRedisSetWithFunctions(key, context.getRegionProvider().getSetRegion());
+
+
+    ArrayList<ByteArrayWrapper> membersToRemove =
+        new ArrayList<>(commandElements.subList(2, commandElements.size()));
+    AtomicBoolean setWasDeleted = new AtomicBoolean();
+    long membersRemoved = geodeRedisSet.srem(membersToRemove, setWasDeleted);
+    if (setWasDeleted.get()) {
+      context.getKeyRegistrar().unregisterIfType(key, RedisDataType.REDIS_SET);
+    }
+    command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), membersRemoved));
