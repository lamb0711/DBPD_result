GEODE-7475: Include remote stack trace in AsyncInvocation timeout (#4344)

* Add stack trace of remote thread as the cause of an AsyncInvocation TimeoutException
* Clean up AsyncInvocation and SerializableRunnable/SerializableCallable hierarchy of classes
* New tests for StackTrace, VM.dumpThreads, and AsyncInvocation asyncTimeoutHandler
* Deprecate and reorganize some additional dunit methods that are either not used or have a newer preferred alternative
* Trigger remote VM to dump all threads to stdout when an AsyncInvocation times out
+import java.io.PrintWriter;
+
- * <PRE>
+ * <pre>
- * </PRE>
+ * </pre>
+ * <p>
- *
- * see hydra.RemoteTestModuleIF
- *
-  private Throwable cause;
+  private final Throwable cause;
-  private String methodName;
+  private final String methodName;
-  private String className;
-
-  /** The type of exception that was thrown in the remote VM */
-  private String exceptionClassName;
-
-  /** Stack trace for the exception that was thrown in the remote VM */
-  private String stackTrace;
+  private final String className;
-  private VM vm;
-
-  //////////////////////// Constructors ////////////////////////
+  private final VM vm;
-   * Creates a new <code>RMIException</code> that was caused by a given <code>Throwable</code> while
+   * Creates a new {@code RMIException} that was caused by a given {@code Throwable} while
-   * Creates a new <code>RMIException</code> to indicate that an exception of a given type was
+   * Creates a new {@code RMIException} to indicate that an exception of a given type was
-    // this.exceptionClassName = exceptionClassName; assignment has no effect
-    this.stackTrace = stackTrace;
-   * Returns the class name of the exception that was thrown in a remote method invocation.
-   */
-  public String getExceptionClassName() {
-    return this.exceptionClassName;
-  }
-
-  // /**
-  // * Returns the stack trace for the exception that was thrown in a
-  // * remote method invocation.
-  // */
-  // public String getStackTrace() {
-  // return this.stackTrace;
-  // }
-
-  /**
-    return this.cause;
+    return cause;
-    return this.vm;
+    return vm;
-  ////////////////////// Inner Classes //////////////////////
-
-    private String stackTrace;
-    private String toString;
+
+    private final String stackTrace;
+    private final String toString;
-      this.toString = cause.toString();
+      toString = cause.toString();
-    public void printStackTrace(java.io.PrintWriter pw) {
-      pw.print(this.stackTrace);
+    public void printStackTrace(PrintWriter pw) {
+      pw.print(stackTrace);
-      return this.toString;
+      return toString;
