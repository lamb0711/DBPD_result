Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-//  private static final String DESER_JAR = "lib" + File.separator + "gemfire_j2ee.jar";
-//  private static final String DEFAULT_LOADER = "";
+  // private static final String DESER_JAR = "lib" + File.separator + "gemfire_j2ee.jar";
+  // private static final String DEFAULT_LOADER = "";
-      synchronized(pathsToLoaders) {
-        ClassLoader newClassLoader = (ClassLoader)pathsToLoaders.get(modifiedClasspath);
+      synchronized (pathsToLoaders) {
+        ClassLoader newClassLoader = (ClassLoader) pathsToLoaders.get(modifiedClasspath);
-    ClassLoader loader = (ClassLoader)oldClassLoader.get();
+    ClassLoader loader = (ClassLoader) oldClassLoader.get();
-    //must accept both separators, not just the current system's separator
+    // must accept both separators, not just the current system's separator
-    while(tokenizer.hasMoreTokens()) {      
+    while (tokenizer.hasMoreTokens()) {
-        f = f.getCanonicalFile();          
+        f = f.getCanonicalFile();
-        continue; //ignore?          
-      }        
+        continue; // ignore?
+      }
-      } catch (MalformedURLException mue){
-        continue; //ignore?
+      } catch (MalformedURLException mue) {
+        continue; // ignore?
-    return (URL[])urls.toArray(array);
+    return (URL[]) urls.toArray(array);
