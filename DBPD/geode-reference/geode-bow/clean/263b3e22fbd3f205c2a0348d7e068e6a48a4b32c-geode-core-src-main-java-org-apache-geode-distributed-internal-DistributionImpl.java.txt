GEODE-7634: create an ArchUnitTest that asserts that geode-core only â€¦ (#4549)

* GEODE-7634: create an ArchUnitTest that asserts that geode-core only uses the membership API

creating a new test to enforce use of membership APIs.  There are a few
exceptions in test code, plus others that aren't in the "integration
test" source set.

* removing test dependencies and fixing crashDistributedSystem method

* moved membership API classes to membership.api package and fixed OOME

* move address verification class to tcp-server module and subclass in membership

* rebasing on Ernie's GeodeGlossary stuff

-import org.apache.geode.SystemFailure;
-import org.apache.geode.annotations.internal.MakeNotStatic;
-import org.apache.geode.distributed.internal.membership.gms.GMSMembership;
-import org.apache.geode.distributed.internal.membership.gms.GMSMembershipView;
-import org.apache.geode.distributed.internal.membership.gms.Services;
-import org.apache.geode.distributed.internal.membership.gms.api.LifecycleListener;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberDisconnectedException;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberIdentifier;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberShunnedException;
-import org.apache.geode.distributed.internal.membership.gms.api.MemberStartupException;
-import org.apache.geode.distributed.internal.membership.gms.api.Membership;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipBuilder;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipClosedException;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipConfigurationException;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipListener;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipStatistics;
-import org.apache.geode.distributed.internal.membership.gms.api.MembershipView;
-import org.apache.geode.distributed.internal.membership.gms.api.Message;
-import org.apache.geode.distributed.internal.membership.gms.api.MessageListener;
-import org.apache.geode.distributed.internal.membership.gms.api.QuorumChecker;
-import org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitor;
-import org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave;
+import org.apache.geode.distributed.internal.membership.api.LifecycleListener;
+import org.apache.geode.distributed.internal.membership.api.MemberDisconnectedException;
+import org.apache.geode.distributed.internal.membership.api.MemberIdentifier;
+import org.apache.geode.distributed.internal.membership.api.MemberShunnedException;
+import org.apache.geode.distributed.internal.membership.api.MemberStartupException;
+import org.apache.geode.distributed.internal.membership.api.Membership;
+import org.apache.geode.distributed.internal.membership.api.MembershipBuilder;
+import org.apache.geode.distributed.internal.membership.api.MembershipClosedException;
+import org.apache.geode.distributed.internal.membership.api.MembershipConfigurationException;
+import org.apache.geode.distributed.internal.membership.api.MembershipListener;
+import org.apache.geode.distributed.internal.membership.api.MembershipStatistics;
+import org.apache.geode.distributed.internal.membership.api.MembershipView;
+import org.apache.geode.distributed.internal.membership.api.Message;
+import org.apache.geode.distributed.internal.membership.api.MessageListener;
+import org.apache.geode.distributed.internal.membership.api.QuorumChecker;
+import org.apache.geode.logging.internal.log4j.api.LogService;
-  private static final Logger logger = Services.getLogger();
+  private static final Logger logger = LogService.getLogger();
-  /**
-   * @see SystemFailure#loadEmergencyClasses() /** break any potential circularity in
-   *      {@link #loadEmergencyClasses()}
-   */
-  @MakeNotStatic
-  private static volatile boolean emergencyClassesLoaded = false;
-      Services.getLogger().error("Unexpected problem starting up membership services", e);
+      logger.error("Unexpected problem starting up membership services", e);
-  /**
-   * Ensure that the critical classes from components get loaded.
-   *
-   * @see SystemFailure#loadEmergencyClasses()
-   */
-  public static void loadEmergencyClasses() {
-    if (emergencyClassesLoaded)
-      return;
-    emergencyClassesLoaded = true;
-    DirectChannel.loadEmergencyClasses();
-    GMSJoinLeave.loadEmergencyClasses();
-    GMSHealthMonitor.loadEmergencyClasses();
-  }
-
-  // TODO - this method is only used by tests
-  @Override
-  @VisibleForTesting
-  public void forceDisconnect(String reason) {
-    ((GMSMembership) membership).getGMSManager().forceDisconnect(reason);
-  }
-
-  // TODO - this method is only used by tests
-  @Override
-  @VisibleForTesting
-  public void replacePartialIdentifierInMessage(DistributionMessage message) {
-    ((GMSMembership) membership).replacePartialIdentifierInMessage(message);
-
-  }
-
-  // TODO - this method is only used by tests
-  @Override
-  @VisibleForTesting
-  public boolean isCleanupTimerStarted() {
-    return ((GMSMembership) membership).isCleanupTimerStarted();
-  }
-
-  // TODO - this method is only used by tests
-  @Override
-  @VisibleForTesting
-  public long getSurpriseMemberTimeout() {
-    return ((GMSMembership) membership).getSurpriseMemberTimeout();
-  }
-
-  // TODO - this method is only used by tests
-  @Override
-  @VisibleForTesting
-  public void installView(GMSMembershipView newView) {
-    ((GMSMembership) membership).getGMSManager().installView(newView);
-  }
-
-  // TODO - this method is only used by tests
-  @Override
-  @VisibleForTesting
-  public int getDirectChannelPort() {
-    return directChannel == null ? 0 : directChannel.getPort();
-  }
-
-  @Override
-  public void disableDisconnectOnQuorumLossForTesting() {
-    ((GMSMembership) membership).disableDisconnectOnQuorumLossForTesting();
-  }
-
