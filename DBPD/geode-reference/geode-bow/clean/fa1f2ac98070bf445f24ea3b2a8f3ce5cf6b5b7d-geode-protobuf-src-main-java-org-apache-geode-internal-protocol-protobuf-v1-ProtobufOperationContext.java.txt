GEODE-4406: Improve authorization granularity for protobuf (#1514)


+import org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.DecodingException;
+  @FunctionalInterface
+  public interface PermissionFunction<OperationRequest> {
+    ResourcePermission apply(OperationRequest request, ProtobufSerializationService service)
+        throws DecodingException;
+  }
+
-  private final ResourcePermission accessPermissionRequired;
+  private final PermissionFunction<OperationRequest> accessPermissionRequired;
+
+  private class StaticResourcePermissionProvider implements PermissionFunction<OperationRequest> {
+    private final ResourcePermission permission;
+
+    StaticResourcePermissionProvider(ResourcePermission requiredPermission) {
+      permission = requiredPermission;
+    }
+
+    @Override
+    public ResourcePermission apply(OperationRequest request,
+        ProtobufSerializationService serializer) {
+      return permission;
+    }
+  }
+    accessPermissionRequired = new StaticResourcePermissionProvider(permissionRequired);
+  }
+
+  public ProtobufOperationContext(Function<ClientProtocol.Message, OperationRequest> fromRequest,
+      ProtobufOperationHandler<OperationRequest, OperationResponse> operationHandler,
+      Function<OperationResponse, ClientProtocol.Message.Builder> toResponse,
+      PermissionFunction<OperationRequest> permissionRequired) {
+    this.operationHandler = operationHandler;
+    this.fromRequest = fromRequest;
+    this.toResponse = toResponse;
+    this.toErrorResponse = this::makeErrorBuilder;
+
-  public ResourcePermission getAccessPermissionRequired() {
-    return accessPermissionRequired;
+  public ResourcePermission getAccessPermissionRequired(OperationRequest request,
+      ProtobufSerializationService serializer) throws DecodingException {
+    return accessPermissionRequired.apply(request, serializer);
