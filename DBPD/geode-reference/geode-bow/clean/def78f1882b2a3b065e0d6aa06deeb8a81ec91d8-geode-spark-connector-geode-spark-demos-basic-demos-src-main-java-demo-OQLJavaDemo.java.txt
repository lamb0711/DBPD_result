Merge branch 'develop' into feature/GEODE-17-2

# Conflicts:
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/CreateAlterDestroyRegionCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/DiskStoreCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/GemfireDataCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/IndexCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/ListAndDescribeRegionDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/MiscellaneousCommandsDUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/MiscellaneousCommandsExportLogsPart3DUnitTest.java
#	geode-core/src/test/java/com/gemstone/gemfire/management/internal/cli/commands/ShellCommandsDUnitTest.java

-import static io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaUtil.*;
+import static io.pivotal.geode.spark.connector.javaapi.GeodeJavaUtil.*;
- * This Spark application demonstrates how to get region data from GemFire using GemFire
+ * This Spark application demonstrates how to get region data from Geode using Geode
- * In order to run it, you will need to start a GemFire cluster, and run demo PairRDDSaveJavaDemo
+ * In order to run it, you will need to start a Geode cluster, and run demo PairRDDSaveJavaDemo
- * should be generated under gemfire-spark-demos/basic-demos/target/scala-2.10/. 
+ * should be generated under geode-spark-demos/basic-demos/target/scala-2.10/.
-    conf.set(GemFireLocatorPropKey, argv[0]); // "192.168.1.47[10335]"
+    conf.set(GeodeLocatorPropKey, argv[0]); // "192.168.1.47[10335]"
-    DataFrame df = javaFunctions(sqlContext).gemfireOQL("select * from /str_str_region");
+    DataFrame df = javaFunctions(sqlContext).geodeOQL("select * from /str_str_region");
