Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+
-  
+
-  
+
-   * Creates a new {@link PoolFactory pool factory},
-   * which is used to configure and create new {@link Pool}s.
+   * Creates a new {@link PoolFactory pool factory}, which is used to configure and create new
+   * {@link Pool}s.
+   * 
-   * Find by name an existing connection pool returning
-   * the existing pool or <code>null</code> if it does not exist.
+   * Find by name an existing connection pool returning the existing pool or <code>null</code> if it
+   * does not exist.
+   * 
+
-   * Returns a map containing all the pools in this manager.
-   * The keys are pool names
-   * and the values are {@link Pool} instances.
-   * <p> The map contains the pools that this manager knows of at the time of this call.
-   * The map is free to be changed without affecting this manager.
+   * Returns a map containing all the pools in this manager. The keys are pool names and the values
+   * are {@link Pool} instances.
+   * <p>
+   * The map contains the pools that this manager knows of at the time of this call. The map is free
+   * to be changed without affecting this manager.
+   * 
-  public static Map<String,Pool> getAll() { 
+  public static Map<String, Pool> getAll() {
+
-   * @param keepAlive whether the server should keep the durable client's subscriptions alive for the <code>durable-client-timeout</code>.
+   * 
+   * @param keepAlive whether the server should keep the durable client's subscriptions alive for
+   *        the <code>durable-client-timeout</code>.
-  
+
+   * 
-   * @return the pool used by that region or <code>null</code> if the region does
-   * not have a pool. 
+   * @return the pool used by that region or <code>null</code> if the region does not have a pool.
-  public static Pool find(Region<?,?> region) {
+  public static Pool find(Region<?, ?> region) {
-  
+
