GEODE-4094: ClientHealthMonitor may cause an NPE in a ServerConnection (#1326)

* GEODE-4094: ClientHealthMonitor may cause an NPE in a ServerConnection

- minor refactoring of AcceptorImpl and Handshake to improve testability
- added a unit test to demonstrate race condition
- refactored connection map into a new object to prevent race

-import org.apache.geode.distributed.internal.membership.InternalDistributedMember;
-  private final SecurityService securityService;
+  protected final SecurityService securityService;
+  private ServerConnectionCollection serverConnectionCollection;
-  /*
-   * Uniquely identifying the client's Distributed System
-   *
-   *
-   * private String membershipId;
-   *
-   *
-   * Uniquely identifying the client's ConnectionProxy object
-   *
-   *
-   * private String proxyID ;
+  /**
+   * Client identity from handshake
-        boolean readHandShake = ServerHandShakeProcessor.readHandShake(this, getSecurityService());
+        boolean readHandShake =
+            ServerHandShakeProcessor.readHandShake(this, getSecurityService(), acceptor);
-  private ClientHealthMonitor getClientHealthMonitor() {
-    return acceptor.getClientHealthMonitor();
-  }
-
-  private boolean processHandShake() {
+  protected boolean processHandShake() {
-          InternalDistributedMember idm =
-              (InternalDistributedMember) this.proxyId.getDistributedMember();
-      chm.addConnection(this.proxyId, this);
+      serverConnectionCollection = chm.addConnection(this.proxyId, this);
+    if (serverConnectionCollection == null) {
+      // return here if we haven't successfully completed handshake
+      logger.warn("Continued processing ServerConnection after handshake failed");
+      this.processMessages = false;
+      return;
+    }
+    synchronized (serverConnectionCollection) {
+      if (serverConnectionCollection.isTerminating) {
+        // Client is being disconnected, don't try to process message.
+        this.processMessages = false;
+        return;
+      }
+      serverConnectionCollection.connectionsProcessing.incrementAndGet();
+    }
-        if (AcceptorImpl.isIntegratedSecurity()
+        if (securityService.isIntegratedSecurity()
+      serverConnectionCollection.connectionsProcessing.decrementAndGet();
-
-            InternalDistributedMember idm =
-                (InternalDistributedMember) this.proxyId.getDistributedMember();
-  private void initializeCommands() {
+  protected void initializeCommands() {
+    processMessages = false;
-    if (AcceptorImpl.isIntegratedSecurity()) {
+    if (securityService.isIntegratedSecurity()) {
-    if (AcceptorImpl.isIntegratedSecurity()) {
+    if (securityService.isIntegratedSecurity()) {
