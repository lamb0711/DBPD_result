Merge branch 'release/1.8.0'

- * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * "License")); you may not use this file except in compliance with the License. You may obtain a
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+import org.apache.geode.internal.logging.LoggingThread;
-import org.apache.geode.management.internal.ManagementStrings;
-        new MBeanStatsMonitor(ManagementStrings.MEMBER_CACHE_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("MemberMXBeanMonitor");
-    this.gcMonitor = new GCStatsMonitor(ManagementStrings.GC_STATS_MONITOR.toLocalizedString());
+    this.gcMonitor = new GCStatsMonitor("GCStatsMonitor");
-        new VMStatsMonitor(ManagementStrings.VM_STATS_MONITOR.toLocalizedString());
+        new VMStatsMonitor("VMStatsMonitor");
-        new MBeanStatsMonitor(ManagementStrings.SYSTEM_STATS_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("SystemStatsManager");
-        new MBeanStatsMonitor(ManagementStrings.MEMBER_CACHE_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("MemberMXBeanMonitor");
-    this.gcMonitor = new GCStatsMonitor(ManagementStrings.GC_STATS_MONITOR.toLocalizedString());
+    this.gcMonitor = new GCStatsMonitor("GCStatsMonitor");
-        new VMStatsMonitor(ManagementStrings.VM_STATS_MONITOR.toLocalizedString());
+        new VMStatsMonitor("VMStatsMonitor");
-        new MBeanStatsMonitor(ManagementStrings.SYSTEM_STATS_MONITOR.toLocalizedString());
+        new MBeanStatsMonitor("SystemStatsManager");
-              LocalizedStrings.TailLogResponse_NO_LOG_FILE_WAS_SPECIFIED_IN_THE_CONFIGURATION_MESSAGES_WILL_BE_DIRECTED_TO_STDOUT
-                  .toLocalizedString();
+              "No log file was specified in the configuration, messages will be directed to stdout.";
-      logger.warn(LocalizedMessage
-          .create(LocalizedStrings.TailLogResponse_ERROR_OCCURRED_WHILE_READING_SYSTEM_LOG__0, e));
+      logger.warn("Error occurred while reading system log:", e);
-      return LocalizedStrings.SystemMemberImpl_NO_LOG_FILE_CONFIGURED_LOG_MESSAGES_WILL_BE_DIRECTED_TO_STDOUT
-          .toLocalizedString();
+      return "No log file configured, log messages will be directed to stdout.";
-            .append(LocalizedStrings.SystemMemberImpl_TAIL_OF_CHILD_LOG.toLocalizedString())
+            .append("-------------------- tail of child log --------------------")
-      Thread t = new Thread(new Runnable() {
-        public void run() {
-          try {
-            // Allow the Function call to exit
-            Thread.sleep(1000);
-          } catch (InterruptedException ignore) {
-          }
-          ConnectionTable.threadWantsSharedResources();
-          if (ids.isConnected()) {
-            ids.disconnect();
-          }
+      Thread t = new LoggingThread("Shutdown member", false, () -> {
+        try {
+          // Allow the Function call to exit
+          Thread.sleep(1000);
+        } catch (InterruptedException ignore) {
+        }
+        ConnectionTable.threadWantsSharedResources();
+        if (ids.isConnected()) {
+          ids.disconnect();
-      t.setDaemon(false);
