GEODE-3713: add VM.getId() and fix VM.getPid()

+import java.util.concurrent.atomic.AtomicInteger;
-  /** The process id of this VM */
-  private int pid;
+  /** The sequential id of this VM */
+  private int id;
-   *
-   * TODO: change pid to reflect value from {@link ProcessUtils#identifyPid()}
-  public VM(final Host host, final int pid, final RemoteDUnitVMIF client) {
-    this(host, VersionManager.CURRENT_VERSION, pid, client);
+  public VM(final Host host, int id, final RemoteDUnitVMIF client) {
+    this(host, VersionManager.CURRENT_VERSION, id, client);
-  public VM(final Host host, final String version, final int pid, final RemoteDUnitVMIF client) {
+  public VM(final Host host, final String version, final int id, final RemoteDUnitVMIF client) {
-    this.pid = pid;
+    this.id = id;
+   * Returns the VM id of this {@code VM}.
+   */
+  public int getId() {
+    return this.id;
+  }
+
+  /**
-    return this.pid;
+    return invoke(() -> ProcessUtils.identifyPid());
-      BounceResult result = DUnitEnv.get().bounce(targetVersion, this.pid);
-      this.pid = result.getNewPid();
+      BounceResult result = DUnitEnv.get().bounce(targetVersion, this.id);
+      this.id = result.getNewId();
-    return "VM " + getPid() + " running on " + getHost()
+    return "VM " + getId() + " running on " + getHost()
-    return DUnitEnv.get().getWorkingDirectory(getVersion(), getPid());
+    return DUnitEnv.get().getWorkingDirectory(getVersion(), getId());
