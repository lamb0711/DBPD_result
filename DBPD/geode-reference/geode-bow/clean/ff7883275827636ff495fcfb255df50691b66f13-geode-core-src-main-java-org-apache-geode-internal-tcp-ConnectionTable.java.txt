GEODE-6927 make getThreadOwnedConnection code thread safe (#4085)

* GEODE-6927 make getThreadOwnedConnection code thread safe

* changes due to comments

* fix spotlessAply

* fix clean method

* remove null checks

* empty commit to re-trigger CI

+import org.apache.geode.internal.util.JavaWorkarounds;
-  private ConcurrentMap threadConnectionMap;
+  private final ConcurrentMap threadConnectionMap;
-    if (this.threadConnectionMap == null) {
-      // This instance is being destroyed; fail the operation
-      closeCon(
-          "Connection table being destroyed",
-          result);
-      return null;
-    }
-
-    ArrayList al = (ArrayList) this.threadConnectionMap.get(id);
+    ArrayList al = (ArrayList) threadConnectionMap.get(id);
-      Object o = this.threadConnectionMap.putIfAbsent(id, al);
+      ArrayList tempAl = al;
+      Object o = JavaWorkarounds.computeIfAbsent(this.threadConnectionMap, id, k -> tempAl);
+
-      this.threadConnectionMap = null;
+      synchronized (this.threadConnectionMap) {
+        for (Iterator it = this.threadConnectionMap.values().iterator(); it.hasNext();) {
+          ArrayList al = (ArrayList) it.next();
+          if (al != null) {
+            synchronized (al) {
+              for (Object o : al) {
+                closeCon("Connection table being destroyed", o);
+              }
+            }
+          }
+        }
+        this.threadConnectionMap.clear();
+      }
