Decouple geode in sadd,srem,smembers (#4912)

This commit builds a GeodeRedisSetSynchronized class that brings
together "set" methods.  These three are necessary for Spring-Session so
they are the only ones included.
-import java.util.Set;
-import org.apache.geode.cache.Region;
-import org.apache.geode.cache.TimeoutException;
-import org.apache.geode.redis.internal.AutoCloseableLock;
-
-  private static final int NONE_REMOVED = 0;
-
-    List<byte[]> commandElems = command.getProcessedCommand();
+    List<ByteArrayWrapper> commandElems = command.getProcessedCommandWrappers();
-
-    Region<ByteArrayWrapper, Set<ByteArrayWrapper>> region = getRegion(context);
-
-    int numRemoved = 0;
-    try (AutoCloseableLock regionLock = withRegionLock(context, key)) {
-      Set<ByteArrayWrapper> set = region.get(key);
-
-      if (set == null || set.isEmpty()) {
-        command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NONE_REMOVED));
-        return;
-      }
-
-      for (int i = 2; i < commandElems.size(); i++) {
-        if (set.remove(new ByteArrayWrapper(commandElems.get(i)))) {
-          numRemoved++;
-        }
-      }
-
-      region.put(key, set);
-    } catch (InterruptedException e) {
-      Thread.currentThread().interrupt();
-      command.setResponse(
-          Coder.getErrorResponse(context.getByteBufAllocator(), "Thread interrupted."));
-      return;
-    } catch (TimeoutException e) {
-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(),
-          "Timeout acquiring lock. Please try again."));
-      return;
-    }
-
+    RedisSet set = new GeodeRedisSetSynchronized(key, context);
+    long numRemoved = set.srem(commandElems.subList(2, commandElems.size()));
