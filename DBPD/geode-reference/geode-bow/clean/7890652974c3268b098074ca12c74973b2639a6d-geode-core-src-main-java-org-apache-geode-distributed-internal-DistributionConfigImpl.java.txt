GEODE-5338: Geode client to support Trust and Keystore rotation (#2244)

A new SSL property 'ssl-use-default-context' is added to let Geode use
default SSL context. When set to true Geode uses default SSL context as
returned by SSLContext.getInstance('Default') or uses the context as set
by using SSLContext.setDefault().

Hostname validation is enabled when using default context
-  private boolean sslEndpointIdentificationEnabled = DEFAULT_SSL_ENDPOINT_IDENTIFICATION_ENABLED;
+  private Boolean sslEndPointIdentificationEnabled = null;
+  private boolean sslUseDefaultSSLContext = DEFAULT_SSL_USE_DEFAULT_CONTEXT;
-    this.sslEndpointIdentificationEnabled = other.getSSLEndpointIdentificationEnabled();
+    this.sslEndPointIdentificationEnabled = other.getSSLEndPointIdentificationEnabled();
+    this.sslUseDefaultSSLContext = other.getSSLUseDefaultContext();
-  public boolean getSSLEndpointIdentificationEnabled() {
-    return sslEndpointIdentificationEnabled;
+  public boolean getSSLEndPointIdentificationEnabled() {
+    // sslEndPointIdentificationEnabled is a boxed boolean and no default value is set, so that
+    // we can differentiate between an assigned default vs user provided override. This is set
+    // to true when ssl-use-default-context is true or else its false. So return false if its null.
+    if (this.sslEndPointIdentificationEnabled == null) {
+      return false;
+    }
+    return sslEndPointIdentificationEnabled;
-  public void setSSLEndpointIdentificationEnabled(final boolean sslEnabledIdentification) {
-    this.sslEndpointIdentificationEnabled = sslEnabledIdentification;
+  public void setSSLEndPointIdentificationEnabled(final boolean sslEndPointIdentificationEnabled) {
+    this.sslEndPointIdentificationEnabled = sslEndPointIdentificationEnabled;
+  public boolean getSSLUseDefaultContext() {
+    return sslUseDefaultSSLContext;
+  }
+
+  @Override
+  public void setSSLUseDefaultContext(final boolean sslUseDefaultSSLContext) {
+    if (this.sslEndPointIdentificationEnabled == null) {
+      this.sslEndPointIdentificationEnabled = Boolean.TRUE;
+    }
+    this.sslUseDefaultSSLContext = sslUseDefaultSSLContext;
+  }
+
+  @Override
