Revert GEODE-2644 because offline diskstore commands generate info level logs

GFSH forks the offline diskstore commands in a JVM using log4j2-cli.xml
which sets the log level to WARN. However, the forked JVM creates a
Cache which then starts generating info level statements to STDOUT.

Revert "GEODE-2644: Remove log level from MonitorQueryUnderContentionBenchmark"
This reverts commit 6691d310e1263966991e584f712156d919dabecf.

Revert "GEODE-2644: Update session state caching dependencies for logging"
This reverts commit 688f58a4a75cc1297faa1dda201b971346c3a9fe.

Revert "GEODE-5637: Fix flaky SingleHopClientExecutorWithLoggingIntegrationTest"
This reverts commit 0a8f3dffa1ebaa618fafecc15bbc92ba8ba83696.

Revert "GEODE-2644: Make LogWriterAppender optional and support log4j2.xml"
This reverts commit 591f3f7840ce38c6100bff2040f396ad2469175e.

Revert "GEODE-2644: Expand DistributedSystemMXBean tests"
This reverts commit cd2bba13e2fb7e79f7634053a6c612050b328e11.

Revert "GEODE-2644: Make AlertAppender optional and support log4j2.xml"
This reverts commit 02c3cae1d38098259ff6aa4635c6e74f795bdc50.

Revert "GEODE-2644: Add LogConfig and StatisticsConfig for logging"
This reverts commit a77c94b349b3ed7fc873fc29f6852f9936843790.

Revert "GEODE-2644: Add AlertingTest JUnit Category"
This reverts commit 731cd2a7d35b086d34f8bbcb94a83c40739ae8ee.

Revert "GEODE-2644: Add LogFileAssert and LogLevelAssert assertions"
This reverts commit 5e61da5301469cdbd71ac186573f56c38e9a6cf0.

Revert "GEODE-2644: Cleanup logging related files"
This reverts commit 763e4177f201eff9b140654e6858152a1a184b8c.

Revert "GEODE-2644: Define interfaces for new Log4j2 Appenders"
This reverts commit efd8a14027195b6dae1dd3e4d53a33696ed318bb.

-import org.apache.geode.LogWriter;
+import org.apache.geode.internal.logging.log4j.AlertAppender;
- * Implementation of {@link LogWriter} for distributed system members. It's just like
+ * Implementation of {@link LogWriterI18n} for distributed system members. It's just like
-public class ManagerLogWriter extends LocalLogWriter implements LogFileDetails {
+public class ManagerLogWriter extends LocalLogWriter {
-  private final boolean loner;
-
-   * @param loner if the distributed member is not part of a cluster
-  public ManagerLogWriter(final int level, final PrintStream printStream, final boolean loner) {
-    this(level, printStream, null, loner);
+  public ManagerLogWriter(int level, PrintStream printStream) {
+    this(level, printStream, null);
-   * @param loner if the distributed member is not part of a cluster
-  public ManagerLogWriter(final int level, final PrintStream printStream,
-      final String connectionName, final boolean loner) {
+  public ManagerLogWriter(int level, PrintStream printStream, String connectionName) {
-    this.loner = loner;
-  public void setConfig(final LogConfig config) {
+  public void setConfig(LogConfig config) {
-  public LogConfig getConfig() {
-    return config;
-  }
-
-  @Override
-  @Override
-  @Override
-  @Override
-  public boolean useChildLogging() {
-    return useChildLogging;
-  }
-
+  public boolean useChildLogging() {
+    return useChildLogging;
+  }
+
-  private String getMetaLogFileName(final String baseLogFileName, final int mainLogId) {
+  private String getMetaLogFileName(String baseLogFileName, int mainLogId) {
-  private synchronized void switchLogs(final File newLog, final boolean newIsMain) {
+  private synchronized void switchLogs(File newLog, boolean newIsMain) {
-              // do not redirect if loner -- see #49492
-              PrintStream tempPrintStream = OSProcess.redirectOutput(tempFile, !loner);
+              PrintStream tempPrintStream = OSProcess.redirectOutput(tempFile,
+                  AlertAppender.getInstance().isAlertingDisabled()/* See #49492 */);
-        PrintStream printStream = OSProcess.redirectOutput(activeLogFile, !loner);
+        PrintStream printStream = OSProcess.redirectOutput(activeLogFile,
+            AlertAppender.getInstance().isAlertingDisabled());
-  public static File getLogNameForOldMainLog(final File log, final boolean useOldFile) {
+  public static File getLogNameForOldMainLog(File log, boolean useOldFile) {
-  private void checkDiskSpace(final File newLog) {
+  private void checkDiskSpace(File newLog) {
-  private void rollLog(final boolean ifFull) {
+  private void rollLog(boolean ifFull) {
-  public void writeFormattedMessage(final String message) {
+  public void writeFormattedMessage(String message) {
