GEODE-6823 Hang in ElderInitProcessor.init()

This corrects elder init processing to use the isCloseInProgress to
check for shutdown.  A coding error during refactoring caused it to check the
isCloseInProgress() method, which did more than just return the value of
the isCloseInProgress variable and was incorrectly reporting a close in progress
during startup operations.

I've renamed the old isCloseInProgress() method to avoid similar coding
errors in the future and added a new implementation that merely returns
the value of the field, as you'd expect it to do.

While writing tests I found that the ClusterElderManagerTest was leaving
blocked threads behind because the waitForElder() method in
ClusterElderManager was not interruptable.  I've changed that method to
be interruptable.  We don't interrupt message-processing threads so this
should be a safe change.

-  public ElderState getElderState(boolean waitToBecomeElder) {
+  public ElderState getElderState(boolean waitToBecomeElder) throws InterruptedException {
-  public boolean waitForElder(final InternalDistributedMember desiredElder) {
+  public boolean waitForElder(final InternalDistributedMember desiredElder)
+      throws InterruptedException {
-    boolean interrupted = false;
-      if (logger.isDebugEnabled()) {
-        currentElder = getElderCandidate();
-        logger.debug("Waiting for Elder to change. Expecting Elder to be {}, is {}.",
-            desiredElder, currentElder);
-      }
-
+        if (logger.isDebugEnabled()) {
+          logger.debug("Expecting Elder to be {} but it is {}.",
+              desiredElder, currentElder);
+        }
-        try {
-          changeListener.waitForMembershipChange();
-        } catch (InterruptedException e) {
-          interrupted = true;
+        if (logger.isDebugEnabled()) {
+          logger.debug("Waiting for membership to change");
+        changeListener.waitForMembershipChange();
-
-      if (interrupted) {
-        Thread.currentThread().interrupt();
-      }
