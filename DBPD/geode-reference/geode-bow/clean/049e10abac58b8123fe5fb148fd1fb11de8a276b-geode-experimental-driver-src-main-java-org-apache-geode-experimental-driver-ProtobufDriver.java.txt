GEODE-4961: Allowing custom serialization formats with the protobuf protocol

Adding a new ValueSerializer interface that users can implement to
control the serialization format of data sent using the protobuf
protocol.

ValueSerializers are registered on the server side using the java
ServiceLoader mechanism. They are selected by the client using a new
valueFormat field in the handshake.

Renamed AuthenticationRequest to HandshakeRequest. Credentials
and valueFormat are all sent as part of a single HandshakeRequest.

Renamed the connection states to make them a little easier to
understand, and removed some duplicate states.

The new states are RequireVersion, RequireAuthentication,
AcceptMessages, InvalidSecurity, and TerminateConnection



+  private ValueEncoder valueEncoder;
-      String keyStorePath, String trustStorePath, String protocols, String ciphers)
-      throws GeneralSecurityException, IOException {
+      String keyStorePath, String trustStorePath, String protocols, String ciphers,
+      ValueSerializer serializer) throws GeneralSecurityException, IOException {
-        protocols, ciphers);
+        protocols, ciphers, serializer);
+    this.valueEncoder = new ValueEncoder(serializer);
-    return new ProtobufRegion(regionName, channel);
+    return new ProtobufRegion(regionName, channel, valueEncoder);
-    return new ProtobufQueryService(channel);
+    return new ProtobufQueryService(channel, valueEncoder);
-    return new ProtobufFunctionService(channel);
+    return new ProtobufFunctionService(channel, valueEncoder);
