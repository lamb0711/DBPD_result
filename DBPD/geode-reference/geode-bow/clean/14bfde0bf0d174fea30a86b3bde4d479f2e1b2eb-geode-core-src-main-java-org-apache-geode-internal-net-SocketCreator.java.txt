Merge branch 'release/1.8.0'

+
+import java.net.SocketTimeoutException;
-import java.security.cert.Certificate;
+import javax.net.ssl.SSLProtocolException;
-import javax.net.ssl.SSLSession;
-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
+    if (sslConfig.useDefaultSSLContext()) {
+      return SSLContext.getDefault();
+    }
+
-            new BindException(LocalizedStrings.SocketCreator_FAILED_TO_CREATE_SERVER_SOCKET_ON_0_1
-                .toLocalizedString(bindAddr, Integer.valueOf(nport)));
+            new BindException(String.format("Failed to create server socket on %s[%s]",
+                bindAddr, Integer.valueOf(nport)));
-            new BindException(LocalizedStrings.SocketCreator_FAILED_TO_CREATE_SERVER_SOCKET_ON_0_1
-                .toLocalizedString(bindAddr, Integer.valueOf(nport)));
+            new BindException(String.format("Failed to create server socket on %s[%s]",
+                bindAddr == null ? InetAddress.getLocalHost() : bindAddr,
+                String.valueOf(nport)));
-              LocalizedStrings.TCPConduit_UNABLE_TO_FIND_FREE_PORT.toLocalizedString());
+              "Unable to find a free port in the membership-port-range");
-        SSLSession session = sslSocket.getSession();
-        Certificate[] peer = session.getPeerCertificates();
-        if (logger.isDebugEnabled()) {
-          logger.debug(
-              LocalizedMessage.create(LocalizedStrings.SocketCreator_SSL_CONNECTION_FROM_PEER_0,
-                  ((X509Certificate) peer[0]).getSubjectDN()));
-        }
-              LocalizedMessage.create(
-                  LocalizedStrings.SocketCreator_SSL_ERROR_IN_AUTHENTICATING_PEER_0_1,
+              String.format("SSL Error in authenticating peer %s[%s].",
-        // else ignore
+      }
+      // Pre jkd11, startHandshake is throwing SocketTimeoutException.
+      // in jdk 11 it is throwing SSLProtocolException with a cause of SocketTimeoutException.
+      // this is to keep the exception consistent across jdk
+      catch (SSLProtocolException ex) {
+        if (ex.getCause() instanceof SocketTimeoutException) {
+          throw (SocketTimeoutException) ex.getCause();
+        } else {
+          throw ex;
+        }
-        socket.setSoTimeout(oldTimeout);
+        try {
+          socket.setSoTimeout(oldTimeout);
+        }
+        // ignore
+        catch (SocketException e) {
+        }
+      } else {
+        logger.warn("Your SSL configuration disables hostname validation. "
+            + "Future releases of Apache GEODE will mandate hostname validation. "
+            + "Please refer to the Apache GEODE SSL Documentation for SSL Property: ssl‑endpoint‑identification‑enabled");
-        SSLSession session = sslSocket.getSession();
-        Certificate[] peer = session.getPeerCertificates();
-        if (logger.isDebugEnabled()) {
-          logger.debug(
-              LocalizedMessage.create(LocalizedStrings.SocketCreator_SSL_CONNECTION_FROM_PEER_0,
-                  ((X509Certificate) peer[0]).getSubjectDN()));
+      }
+      // Pre jkd11, startHandshake is throwing SocketTimeoutException.
+      // in jdk 11 it is throwing SSLProtocolException with a cause of SocketTimeoutException.
+      // this is to keep the exception consistent across jdk
+      catch (SSLProtocolException ex) {
+        if (ex.getCause() instanceof SocketTimeoutException) {
+          throw (SocketTimeoutException) ex.getCause();
+        } else {
+          throw ex;
-            .fatal(
-                LocalizedMessage.create(
-                    LocalizedStrings.SocketCreator_SSL_ERROR_IN_CONNECTING_TO_PEER_0_1,
-                    new Object[] {socket.getInetAddress(), Integer.valueOf(socket.getPort())}),
+            .fatal(String.format("SSL Error in connecting to peer %s[%s].",
+                new Object[] {socket.getInetAddress(), Integer.valueOf(socket.getPort())}),
-          logger.fatal(LocalizedMessage
-              .create(LocalizedStrings.SocketCreator_SSL_ERROR_IN_AUTHENTICATING_PEER), ex);
+          logger.fatal("SSL Error in authenticating peer.", ex);
-          LocalizedStrings.StartupMessage_UNABLE_TO_EXAMINE_NETWORK_INTERFACES.toLocalizedString(),
+          "Unable to examine network interfaces",
-              LocalizedStrings.InetAddressUtil_UNABLE_TO_QUERY_NETWORK_INTERFACE
-                  .toLocalizedString(),
+              "Unable to query network interface",
