GEODE-913: refactor AbstractDistributionConfig

* use annotations to annotate the config attributes and its setters/getters/checkers
* delete multiple huge if/else statements to use annoations
* delete unnecessary checks use annotated checkers.
* delete all isXXModifiers to use attribute lists to denote if the attribute is modifiable or not.

-  
-  private ConfigSource(Type t, String d) {
+
+  private ConfigSource(Type t) {
-    this.description = d;
+    switch (t) {
+      case API: this.description = "api"; break;
+      case SYSTEM_PROPERTY: this.description = "system property"; break;
+      case FILE: this.description = "file"; break;
+      case SECURE_FILE: this.description = "secure file"; break;
+      case XML: this.description = "cache.xml"; break;
+      case RUNTIME: this.description = "runtime modification"; break;
+      case LAUNCHER: this.description = "launcher"; break;
+      default:
+        this.description = "";
+    }
+  }
+
+  private ConfigSource(String fileName, boolean secure) {
+    if(secure) {
+      this.type = Type.SECURE_FILE;
+      this.description = (fileName==null)?"secure file":fileName;
+    }
+    else {
+      this.type = Type.FILE;
+      this.description = (fileName==null)?"file":fileName;
+    }
-    String result = this.description;
-    if (result == null) {
-      switch (getType()) {
-      case API: result = "api"; break;
-      case SYSTEM_PROPERTY: result = "system property"; break;
-      case FILE: result = "file"; break;
-      case SECURE_FILE: result = "secure file"; break;
-      case XML: result = "cache.xml"; break;
-      case RUNTIME: result = "runtime modification"; break;
-      case LAUNCHER: result = "launcher"; break;
-      }
-    }
-    return result;
+    return this.description;
-  private static final ConfigSource API_SINGLETON = new ConfigSource(Type.API, null);
-  private static final ConfigSource SYSPROP_SINGLETON = new ConfigSource(Type.SYSTEM_PROPERTY, null);
-  private static final ConfigSource XML_SINGLETON = new ConfigSource(Type.XML, null);
-  private static final ConfigSource RUNTIME_SINGLETON = new ConfigSource(Type.RUNTIME, null);
-  private static final ConfigSource LAUNCHER_SINGLETON = new ConfigSource(Type.LAUNCHER, null);
+  private static final ConfigSource API_SINGLETON = new ConfigSource(Type.API);
+  private static final ConfigSource SYSPROP_SINGLETON = new ConfigSource(Type.SYSTEM_PROPERTY);
+  private static final ConfigSource XML_SINGLETON = new ConfigSource(Type.XML);
+  private static final ConfigSource RUNTIME_SINGLETON = new ConfigSource(Type.RUNTIME);
+  private static final ConfigSource LAUNCHER_SINGLETON = new ConfigSource(Type.LAUNCHER);
-  public static ConfigSource file(String fileName, boolean secure) {return new ConfigSource(secure ? Type.SECURE_FILE : Type.FILE, fileName);}
+  public static ConfigSource file(String fileName, boolean secure) {return new ConfigSource(fileName, secure);}
-    if (description == null) {
-      if (other.description != null)
-        return false;
-    } else if (!description.equals(other.description))
-      return false;
-    if (type != other.type)
-      return false;
-    return true;
+
+    return (type == other.type
+            && description.equals(other.description));
