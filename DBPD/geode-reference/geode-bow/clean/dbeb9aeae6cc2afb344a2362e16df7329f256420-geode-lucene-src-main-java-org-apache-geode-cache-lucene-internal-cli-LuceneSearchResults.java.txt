Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public class LuceneSearchResults<K,V> implements Comparable<LuceneSearchResults>, Serializable {
+public class LuceneSearchResults<K, V> implements Comparable<LuceneSearchResults>, Serializable {
-    this.exceptionFlag=exceptionFlag;
-    this.exceptionMessage=exceptionMessage;
+    this.exceptionFlag = exceptionFlag;
+    this.exceptionMessage = exceptionMessage;
-    return Float.compare(getScore(),searchResults.getScore());
+    return Float.compare(getScore(), searchResults.getScore());
-  public boolean getExeptionFlag() { return exceptionFlag; }
+  public boolean getExeptionFlag() {
+    return exceptionFlag;
+  }
-  public String getExceptionMessage() { return exceptionMessage; }
+  public String getExceptionMessage() {
+    return exceptionMessage;
+  }
-  @Override public String toString() {
-    return "LuceneSearchResults{" +
-      "key='" + key + '\'' +
-      ", value='" + value + '\'' +
-      ", score=" + score +
-      ", exceptionFlag=" + exceptionFlag +
-      ", exceptionMessage='" + exceptionMessage + '\'' +
-      '}';
+  @Override
+  public String toString() {
+    return "LuceneSearchResults{" + "key='" + key + '\'' + ", value='" + value + '\'' + ", score="
+        + score + ", exceptionFlag=" + exceptionFlag + ", exceptionMessage='" + exceptionMessage
+        + '\'' + '}';
