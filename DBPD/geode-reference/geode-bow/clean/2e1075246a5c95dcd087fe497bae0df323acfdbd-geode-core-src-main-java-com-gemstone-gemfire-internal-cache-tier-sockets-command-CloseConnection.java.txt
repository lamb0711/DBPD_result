Merge branch 'release/1.0.0-incubating.M3'

-import com.gemstone.gemfire.internal.cache.tier.Command;
-import com.gemstone.gemfire.internal.cache.tier.sockets.*;
-import com.gemstone.gemfire.distributed.internal.DistributionStats;
-
+
+import com.gemstone.gemfire.distributed.internal.DistributionStats;
+import com.gemstone.gemfire.internal.Version;
+import com.gemstone.gemfire.internal.cache.tier.Command;
+import com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommand;
+import com.gemstone.gemfire.internal.cache.tier.sockets.CacheServerStats;
+import com.gemstone.gemfire.internal.cache.tier.sockets.Message;
+import com.gemstone.gemfire.internal.cache.tier.sockets.Part;
+import com.gemstone.gemfire.internal.cache.tier.sockets.ServerConnection;
-    {
-      long oldStart = start;
-      start = DistributionStats.getStatTime();
-      stats.incReadCloseConnectionRequestTime(start - oldStart);
+    long oldStart = start;
+    boolean respondToClient = servConn.getClientVersion().compareTo(Version.GFE_90) >= 0;
+    start = DistributionStats.getStatTime();
+    stats.incReadCloseConnectionRequestTime(start - oldStart);
+
+    if (respondToClient) {
+      // newer clients will wait for a response or EOFException
+      servConn.setAsTrue(REQUIRES_RESPONSE);
+
-      // clientHost = theSocket.getInetAddress().getCanonicalHostName();
+      if (respondToClient) {
+        writeReply(msg, servConn);
+      }
