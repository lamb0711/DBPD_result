Merge branch 'develop' into feature/GEODE-420

# Conflicts:
#	geode-assembly/src/test/java/com/gemstone/gemfire/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/DistributionConfig.java
#	geode-core/src/main/java/com/gemstone/gemfire/distributed/internal/membership/gms/GMSUtil.java
#	geode-core/src/main/java/com/gemstone/gemfire/internal/cache/tier/sockets/AcceptorImpl.java
#	geode-core/src/main/java/com/gemstone/gemfire/management/internal/ManagementAgent.java
#	geode-core/src/main/java/org/apache/geode/redis/GeodeRedisServer.java
#	geode-core/src/test/java/com/gemstone/gemfire/distributed/LocatorDUnitTest.java

-  private long joinTimeout;
-  private int[] membershipPortRange;
-  private int udpRecvBufferSize;
-  private int udpSendBufferSize;
-  private long memberTimeout;
+  private final long joinTimeout;
+  private final int[] membershipPortRange;
+  private final int udpRecvBufferSize;
+  private final int udpSendBufferSize;
+  private final long memberTimeout;
-  private Integer memberWeight;
+  private final Integer memberWeight;
-  private int locatorWaitTime;
+  private final int locatorWaitTime;
-  private DistributionConfig dconfig;
+  private final DistributionConfig dconfig;
-  private RemoteTransportConfig transport;
+  private final RemoteTransportConfig transport;
-  public int getUdpRecvBufferSize() {
-    return udpRecvBufferSize;
-  }
-
-
-  public int getUdpSendBufferSize() {
-    return udpSendBufferSize;
-  }
-
-
-  /**
-   * returns the address that will be used by the DirectChannel to
-   * identify this member
-   */
-  public InetAddress getInetAddress() {
-    String bindAddress = this.dconfig.getBindAddress();
-
-    try {
-      /* note: had to change the following to make sure the prop wasn't empty 
-         in addition to not null for admin.DistributedSystemFactory */
-      if (bindAddress != null && bindAddress.length() > 0) {
-        return InetAddress.getByName(bindAddress);
-
-      }
-      else {
-       return SocketCreator.getLocalHost();
-      }
-    }
-    catch (java.net.UnknownHostException unhe) {
-      throw new RuntimeException(unhe);
-
-    }
-  }
-
-    if (theConfig.getLocators().length() > 0 && !Locator.hasLocators()) {
+    if (theConfig.getLocators().length() > 0 && !Locator.hasLocator()) {
-    };
+    }
