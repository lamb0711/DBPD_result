Merge branch 'release/1.0.0-incubating.M1'

-/*=========================================================================
- * Copyright (c) 2002-2014 Pivotal Software, Inc. All Rights Reserved.
- * This product is protected by U.S. and international copyright
- * and intellectual property laws. Pivotal products are covered by
- * more patents listed at http://www.pivotal.io/patents.
- *=========================================================================
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+import com.gemstone.gemfire.cache.query.internal.types.ObjectTypeImpl;
+import com.gemstone.gemfire.cache.query.types.ObjectType;
+import com.gemstone.gemfire.cache.query.Struct;
-  private transient Collection<Collection> resultCollector = new ArrayList<Collection>();
+  private transient List<Collection> resultCollector = new ArrayList<Collection>();
+  private transient boolean isTraceInfoIteration = false;
+  private transient boolean isStructType = false;
+    
+        if(this.isTraceInfoIteration && this.currentResultIterator != null) {
+          this.isTraceInfoIteration = false;
+        }
-    return this.currentResultIterator.next();
+    Object data = this.currentResultIterator.next();
+    boolean isPostGFE_8_1 = this.getSender().getVersionObject().compareTo(Version.GFE_81) > 0 ;
+    //Asif: There is a bug in older versions of GFE such that the query node expects the structs to have
+    // type as ObjectTypes only & not specific types. So the new version needs to send the inaccurate 
+    //struct type for backward compatibility.
+    if(this.isStructType && !this.isTraceInfoIteration && isPostGFE_8_1) {
+      return ((Struct)data).getFieldValues(); 
+    }else if(this.isStructType && !this.isTraceInfoIteration) {
+      Struct s = (Struct)data;
+      ObjectType[] fieldTypes = s.getStructType().getFieldTypes();
+      for(int i = 0; i < fieldTypes.length; ++i) {
+        fieldTypes[i] = new ObjectTypeImpl(Object.class);
+      }
+      return data;
+    }else {
+      return data;
+    }
-    DefaultQuery query = new DefaultQuery(this.queryString, r.getCache());
+    DefaultQuery query = new DefaultQuery(this.queryString, r.getCache(), false);
-
+    boolean isQueryTraced = false;
-
+      isQueryTraced = query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0;
-      if (query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0) {
+      if (isQueryTraced) {
+        this.isTraceInfoIteration = true;
-        this.resultCollector.add(queryTraceList);
+        
-      qp.executeQuery(this.resultCollector);
+      this.isStructType = qp.executeQuery(this.resultCollector);
+      //Add the trace info list object after the NWayMergeResults is created so as to 
+      //exclude it from the sorted collection of NWayMergeResults
+      if(isQueryTraced) {
+        this.resultCollector.add(0,queryTraceList);
+      }
-      if (query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0) {
+      if (isQueryTraced) {
-      if (query.isTraced() && this.sender.getVersionObject().compareTo(Version.GFE_81) >= 0) {
+      if (isQueryTraced) {
