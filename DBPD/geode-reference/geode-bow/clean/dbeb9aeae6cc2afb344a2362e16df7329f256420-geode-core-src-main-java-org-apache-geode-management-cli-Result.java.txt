Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The result of processing a GemFire Command Line Interface (CLI) command
- * string.
+ * The result of processing a GemFire Command Line Interface (CLI) command string.
- * A Result may have one or more files as part of the command output and if so
- * they can be saved to the file system using {@link #saveIncomingFiles(String)}.
- * To check whether the result has a file in it use
- * {@link #hasIncomingFiles()}.
+ * A Result may have one or more files as part of the command output and if so they can be saved to
+ * the file system using {@link #saveIncomingFiles(String)}. To check whether the result has a file
+ * in it use {@link #hasIncomingFiles()}.
-  
+
-    
+
-    
+
-  
+
-   * @throws IndexOutOfBoundsException
-   *           if this method is called more times than there are lines of
-   *           information.
+   * @throws IndexOutOfBoundsException if this method is called more times than there are lines of
+   *         information.
-  
+
-  
+
-   * Save the file(s) from this Result. {@link #hasIncomingFiles()} should be used
-   * before calling this method to verify that the Result contains a file.
+   * Save the file(s) from this Result. {@link #hasIncomingFiles()} should be used before calling
+   * this method to verify that the Result contains a file.
-   * @param directory
-   *          Directory to which the file(s) should be saved.
-   * @throws IOException
-   *           If an error occurs while saving the file.
-   * @throws RuntimeException
-   *           If there is no file in the Result to save.
+   * @param directory Directory to which the file(s) should be saved.
+   * @throws IOException If an error occurs while saving the file.
+   * @throws RuntimeException If there is no file in the Result to save.
-  
+
-   * Return whether the configuration changes due to command have been persisted to cluster configuration or not.
+   * Return whether the configuration changes due to command have been persisted to cluster
+   * configuration or not.
-  
+
-   * Sets whether the command changes have not been persisted to the cluster configuration 
-   * @param commandPersisted true if the command changes are persisted to the cluster configuration, false otherwise.
+   * Sets whether the command changes have not been persisted to the cluster configuration
+   * 
+   * @param commandPersisted true if the command changes are persisted to the cluster configuration,
+   *        false otherwise.
