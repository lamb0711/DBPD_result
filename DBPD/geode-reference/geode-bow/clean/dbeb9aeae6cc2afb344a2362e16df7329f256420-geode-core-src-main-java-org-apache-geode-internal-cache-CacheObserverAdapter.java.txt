Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This class provides 'do-nothing' implementations of all of the methods of
- * interface CacheObserver. See the documentation for class CacheObserverHolder
- * for details. Also the callback is issed only if the boolean
- * ISSUE_CALLBACKS_TO_CACHE_OBSERVER present in
+ * This class provides 'do-nothing' implementations of all of the methods of interface
+ * CacheObserver. See the documentation for class CacheObserverHolder for details. Also the callback
+ * is issed only if the boolean ISSUE_CALLBACKS_TO_CACHE_OBSERVER present in
-   * Called just after the region is cleared & before Listener callback is
-   * issued. The call to this method is synchronous
+   * Called just after the region is cleared & before Listener callback is issued. The call to this
+   * method is synchronous
-   * @param event
-   *          RegionEvent object
+   * @param event RegionEvent object
-  public void afterRegionClear(RegionEvent event) {
-  }
+  public void afterRegionClear(RegionEvent event) {}
-  public void beforeDiskClear()
-  {
+  public void beforeDiskClear() {
-  public void goingToFlush()
-  {
+  public void goingToFlush() {
-  public void beforeWritingBytes()
-  {
-  }
+  public void beforeWritingBytes() {}
-  public void afterWritingBytes()
-  {
-  }
+  public void afterWritingBytes() {}
-  public void beforeGoingToCompact()
-  {
+  public void beforeGoingToCompact() {
-  public void afterHavingCompacted()
-  {
+  public void afterHavingCompacted() {
-   *      java.nio.ByteBuffer)
+   * java.nio.ByteBuffer)
-  public void afterConflation(ByteBuffer origBB, ByteBuffer conflatedBB)
-  {
+  public void afterConflation(ByteBuffer origBB, ByteBuffer conflatedBB) {
+
-   *  (non-Javadoc)
+   * (non-Javadoc)
+   * 
-  
+
-    
+
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
-  public void beforeStoppingCompactor()
-  {
+  public void beforeStoppingCompactor() {
-    
+
+
-    
-  }
-  public void afterSignallingCompactor() {
+
-  public void afterMarkingGIICompleted()
-  {
+  public void afterSignallingCompactor() {}
+
+  public void afterMarkingGIICompleted() {
-    
+
-  public void afterMarkingGIIStarted()
-  {
+  public void afterMarkingGIIStarted() {
-    
+
-  /* (non-Javadoc)
+  /*
+   * (non-Javadoc)
+   * 
-  public void afterSwitchingWriteAndFlushMaps()
-  {
+  public void afterSwitchingWriteAndFlushMaps() {
-  public void afterSettingDiskRef()
-  {    
-  }
+  public void afterSettingDiskRef() {}
-  public void beforeSettingDiskRef()
-  {    
-  }
+  public void beforeSettingDiskRef() {}
-  public void beforeDeletingCompactedOplog(Oplog compactedOplog)
-  {
-  }
-  public void beforeDeletingEmptyOplog(Oplog emptyOplog)
-  {
-  }
-  
+  public void beforeDeletingCompactedOplog(Oplog compactedOplog) {}
+
+  public void beforeDeletingEmptyOplog(Oplog emptyOplog) {}
+
-  public void beforeShutdownAll() {
-  }
+  public void beforeShutdownAll() {}
