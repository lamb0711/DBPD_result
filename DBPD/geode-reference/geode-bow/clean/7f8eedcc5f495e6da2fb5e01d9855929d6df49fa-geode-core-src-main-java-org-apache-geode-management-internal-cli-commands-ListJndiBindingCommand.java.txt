GEODE-4830: use CacheConfig to access the jndi list in ListJNDIBindingCommand

* updated the CacheConfig to hold only one JNDIBindingsType instead of a list
* make sure xml created by those POJOs can be used to start a server
* the service will keep a list of bind classes for clearer xml generation.
* the service will keep a reference to the marshaer/unmarsher for faster operation

+import org.apache.geode.distributed.internal.ClusterConfigurationService;
+import org.apache.geode.internal.cache.configuration.CacheConfig;
+import org.apache.geode.internal.cache.configuration.JndiBindingsType;
+import org.apache.geode.management.internal.cli.result.CompositeResultData;
-      "List all active jndi bindings. An active binding is one that is bound to the server's jndi context.";
+      "List all jndi bindings, active and configured. An active binding is one that is bound to the server's jndi context (and also listed in the cluster config). A configured binding is one that is listed in the cluster config, but may not be active on the servers.";
-    Result result = null;
-    TabularResultData tabularData = ResultBuilder.createTabularResultData();
+    CompositeResultData resultData = ResultBuilder.createCompositeResultData();
+    CompositeResultData.SectionResultData resultSection = resultData.addSection();
+    TabularResultData configTable = null;
+    TabularResultData memberTable = null;
-    Set<DistributedMember> members = findMembers(null, null);
-    if (members.size() == 0) {
-      return ResultBuilder.createUserErrorResult("No members found");
+    ClusterConfigurationService ccService = getSharedConfiguration();
+    if (ccService != null) {
+      configTable = resultSection.addTable();
+      configTable.setHeader("Configured JNDI bindings: ");
+      // we don't support creating jndi binding with random group name yet
+      CacheConfig cacheConfig = ccService.getCacheConfig("cluster");
+      List<JndiBindingsType.JndiBinding> jndiBindings = cacheConfig.getJndiBindings();
+      for (JndiBindingsType.JndiBinding jndiBinding : jndiBindings) {
+        configTable.accumulate("Group Name", "cluster");
+        configTable.accumulate("JNDI Name", jndiBinding.getJndiName());
+        configTable.accumulate("JDBC Driver Class", jndiBinding.getJdbcDriverClass());
+      }
+    Set<DistributedMember> members = findMembers(null, null);
+
+    if (members.size() == 0) {
+      if (configTable == null) {
+        return ResultBuilder.createUserErrorResult("No members found");
+      }
+      return ResultBuilder.buildResult(resultData);
+    }
+
+    memberTable = resultSection.addTable();
+    memberTable.setHeader("Active JNDI bindings found on each member: ");
-        tabularData.accumulate("Member", oneResult.getMemberIdOrName());
-        tabularData.accumulate("Name", serializables[i]);
-        tabularData.accumulate("Class", serializables[i + 1]);
+        memberTable.accumulate("Member", oneResult.getMemberIdOrName());
+        memberTable.accumulate("JNDI Name", serializables[i]);
+        memberTable.accumulate("JDBC Driver Class", serializables[i + 1]);
-    result = ResultBuilder.buildResult(tabularData);
-
-    return result;
+    return ResultBuilder.buildResult(resultData);
