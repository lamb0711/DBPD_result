GEODE:6784 Added unit tests to classes in the tomcat module (#4061)

Co-authored-by: Benjamin Ross <bross@pivotal.io>
Co-authored-by: Donal Evans <doevans@pivotal.io>
+import org.apache.geode.cache.execute.Function;
-      Execution execution = FunctionService.onRegion(getSessionRegion()).withFilter(sessionIds);
+      Execution execution = getExecutionForFunctionOnRegionWithFilter(sessionIds);
-      Execution execution = FunctionService.onMembers()
-          .setArguments(new Object[] {this.sessionRegion.getFullPath(), sessionIds});
+      Execution execution = getExecutionForFunctionOnMembersWithArguments(
+          new Object[] {this.sessionRegion.getFullPath(), sessionIds});
+
-    if (!FunctionService.isRegistered(TouchPartitionedRegionEntriesFunction.ID)) {
-      FunctionService.registerFunction(new TouchPartitionedRegionEntriesFunction());
+    if (!isFunctionRegistered(TouchPartitionedRegionEntriesFunction.ID)) {
+      registerFunctionWithFunctionService(new TouchPartitionedRegionEntriesFunction());
-    if (!FunctionService.isRegistered(TouchReplicatedRegionEntriesFunction.ID)) {
-      FunctionService.registerFunction(new TouchReplicatedRegionEntriesFunction());
+    if (!isFunctionRegistered(TouchReplicatedRegionEntriesFunction.ID)) {
+      registerFunctionWithFunctionService(new TouchReplicatedRegionEntriesFunction());
-      region = RegionHelper.createRegion((Cache) getCache(), configuration);
+      region = createRegionUsingHelper(configuration);
-      RegionHelper.validateRegion((Cache) getCache(), configuration, region);
+      validateRegionUsingRegionhelper(configuration, region);
+  void validateRegionUsingRegionhelper(RegionConfiguration configuration, Region region) {
+    RegionHelper.validateRegion((Cache) getCache(), configuration, region);
+  }
+
+  Region createRegionUsingHelper(RegionConfiguration configuration) {
+    return RegionHelper.createRegion((Cache) getCache(), configuration);
+  }
+
+
+  // Helper methods added to improve unit testing of class
+  void registerFunctionWithFunctionService(Function function) {
+    FunctionService.registerFunction(function);
+  }
+
+  boolean isFunctionRegistered(String id) {
+    return FunctionService.isRegistered(id);
+  }
+
+  Execution getExecutionForFunctionOnRegionWithFilter(Set<String> sessionIds) {
+    return FunctionService.onRegion(getSessionRegion()).withFilter(sessionIds);
+  }
+
+  Execution getExecutionForFunctionOnMembersWithArguments(Object[] arguments) {
+    return FunctionService.onMembers().setArguments(arguments);
+  }
