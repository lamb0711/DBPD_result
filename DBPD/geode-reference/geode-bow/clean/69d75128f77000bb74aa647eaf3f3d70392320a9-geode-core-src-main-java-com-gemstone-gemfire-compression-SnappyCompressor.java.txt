Merge branch 'develop' into feature/GEODE-1571

-import java.io.IOException;
-import java.util.concurrent.atomic.AtomicReference;
-import org.xerial.snappy.Snappy;
-import org.xerial.snappy.SnappyError;
-
-import com.gemstone.gemfire.internal.i18n.LocalizedStrings;
+import org.iq80.snappy.CorruptionException;
+import org.iq80.snappy.Snappy;
- * codec. Utilizes the xerial java-snappy wrapper.
+ * codec. Utilizes the java-snappy wrapper.
-  // It's possible to create more than one, but there only needs to be a single
-  // instance in the VM.
-  private static final AtomicReference<SnappyCompressor> defaultInstance = new AtomicReference<SnappyCompressor>();
-  
-  // Set to true when we've loaded the Snappy native library.
-  private static boolean nativeLibraryLoaded = false;
-  
-   * @throws IllegalStateException when the Snappy native library is unavailable
-    synchronized (defaultInstance) {
-      if (!nativeLibraryLoaded) {
-        try {
-          String s = Snappy.getNativeLibraryVersion();
-          System.out.println(s);
-        } catch (SnappyError se) {
-          throw new IllegalStateException(LocalizedStrings.SnappyCompressor_UNABLE_TO_LOAD_NATIVE_SNAPPY_LIBRARY.toLocalizedString(), se);
-        }
-        nativeLibraryLoaded = true;
-      }
-    }
+   * @deprecated As of Geode 1.0, getDefaultInstance is deprecated. Use constructor instead.
-    SnappyCompressor instance = defaultInstance.get();
-    if (instance != null) {
-      return instance;
-    }
-
-    defaultInstance.compareAndSet(null, new SnappyCompressor());
-    return defaultInstance.get();
+    return new SnappyCompressor();
-    try {
-    } catch (IOException e) {
-      throw new CompressionException(e);
-    }
-      return Snappy.uncompress(input);
-    } catch (IOException e) {
+      return Snappy.uncompress(input, 0, input.length);
+    } catch (CorruptionException e) {
