Merge branch 'develop' into feature/GEODE-3640

-package org.apache.geode.test.rules.gfsh;
+package org.apache.geode.test.junit.rules.gfsh;
+import java.io.UncheckedIOException;
-import org.apache.geode.test.rules.RequiresGeodeHome;
-
+import org.apache.geode.test.junit.rules.RequiresGeodeHome;
-  private static final String DOUBLE_QUOTE = "\"";
-  public TemporaryFolder getTemporaryFolder() {
-    return temporaryFolder;
-  }
+  private static final String DOUBLE_QUOTE = "\"";
-  public GfshExecution execute(String... commands) {
-    return execute(GfshScript.of(commands));
-  }
-
-  public GfshExecution execute(GfshScript gfshScript) {
-    GfshExecution gfshExecution;
-    try {
-      File workingDir = temporaryFolder.newFolder(gfshScript.getName());
-      Process process = toProcessBuilder(gfshScript, gfsh, workingDir).start();
-      gfshExecution = new GfshExecution(process, workingDir);
-      gfshExecutions.add(gfshExecution);
-      gfshScript.awaitIfNecessary(process);
-    } catch (IOException e) {
-      throw new RuntimeException(e);
-    }
-
-    return gfshExecution;
-  }
-
+  public TemporaryFolder getTemporaryFolder() {
+    return temporaryFolder;
+  }
+
+  public GfshExecution execute(String... commands) {
+    return execute(GfshScript.of(commands));
+  }
+
+  public GfshExecution execute(GfshScript gfshScript) {
+    GfshExecution gfshExecution;
+    try {
+      File workingDir = temporaryFolder.newFolder(gfshScript.getName());
+      Process process = toProcessBuilder(gfshScript, gfsh, workingDir).start();
+      gfshExecution = new GfshExecution(process, workingDir);
+      gfshExecutions.add(gfshExecution);
+      gfshScript.awaitIfNecessary(process);
+    } catch (IOException e) {
+      throw new UncheckedIOException(e);
+    }
+
+    return gfshExecution;
+  }
+
-
