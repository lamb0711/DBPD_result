GEODE-2565: add if-exists option to DestoryGatewaySenderCommand (#1048)

* GEODE-2565: add if-exists option to DestoryGatewaySenderCommand

+import org.apache.logging.log4j.Logger;
+import org.apache.geode.internal.logging.LogService;
-import org.apache.geode.management.internal.cli.CliUtil;
-import org.apache.geode.management.internal.cli.LogWrapper;
+  private static final Logger logger = LogService.getLogger();
+
-          help = CliStrings.DESTROY_GATEWAYSENDER__ID__HELP) String id) {
-    Result result;
-    try {
-      GatewaySenderDestroyFunctionArgs gatewaySenderDestroyFunctionArgs =
-          new GatewaySenderDestroyFunctionArgs(id);
+          help = CliStrings.DESTROY_GATEWAYSENDER__ID__HELP) String id,
+      @CliOption(key = CliStrings.IFEXISTS, help = CliStrings.IFEXISTS_HELP,
+          specifiedDefaultValue = "true", unspecifiedDefaultValue = "false") boolean ifExist) {
-      Set<DistributedMember> membersToDestroyGatewaySenderOn =
-          CliUtil.findMembers(onGroups, onMember);
+    GatewaySenderDestroyFunctionArgs gatewaySenderDestroyFunctionArgs =
+        new GatewaySenderDestroyFunctionArgs(id, ifExist);
-      if (membersToDestroyGatewaySenderOn.isEmpty()) {
-        return ResultBuilder.createUserErrorResult(CliStrings.NO_MEMBERS_FOUND_MESSAGE);
+    Set<DistributedMember> members = getMembers(onGroups, onMember);
+
+    ResultCollector<?, ?> resultCollector = executeFunction(GatewaySenderDestroyFunction.INSTANCE,
+        gatewaySenderDestroyFunctionArgs, members);
+
+    List<CliFunctionResult> functionResults = (List<CliFunctionResult>) resultCollector.getResult();
+
+    TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
+    boolean errorOccurred = false;
+    for (CliFunctionResult functionResult : functionResults) {
+      tabularResultData.accumulate("Member", functionResult.getMemberIdOrName());
+      if (functionResult.isSuccessful()) {
+        tabularResultData.accumulate("Status", functionResult.getMessage());
+      } else {
+        // if result has exception, it will be logged by the server before throwing it.
+        // so we don't need to log it here anymore.
+        tabularResultData.accumulate("Status", "ERROR: " + functionResult.getErrorMessage());
+        errorOccurred = true;
-
-      ResultCollector<?, ?> resultCollector =
-          CliUtil.executeFunction(GatewaySenderDestroyFunction.INSTANCE,
-              gatewaySenderDestroyFunctionArgs, membersToDestroyGatewaySenderOn);
-      @SuppressWarnings("unchecked")
-      List<CliFunctionResult> gatewaySenderDestroyResults =
-          (List<CliFunctionResult>) resultCollector.getResult();
-
-      TabularResultData tabularResultData = ResultBuilder.createTabularResultData();
-      final String errorPrefix = "ERROR: ";
-      for (CliFunctionResult gatewaySenderDestroyResult : gatewaySenderDestroyResults) {
-        boolean success = gatewaySenderDestroyResult.isSuccessful();
-        tabularResultData.accumulate("Member", gatewaySenderDestroyResult.getMemberIdOrName());
-        tabularResultData.accumulate("Status",
-            (success ? "" : errorPrefix) + gatewaySenderDestroyResult.getMessage());
-      }
-      result = ResultBuilder.buildResult(tabularResultData);
-    } catch (IllegalArgumentException e) {
-      LogWrapper.getInstance().info(e.getMessage());
-      result = ResultBuilder.createUserErrorResult(e.getMessage());
-    return result;
+    tabularResultData.setStatus(errorOccurred ? Result.Status.ERROR : Result.Status.OK);
+    return ResultBuilder.buildResult(tabularResultData);
