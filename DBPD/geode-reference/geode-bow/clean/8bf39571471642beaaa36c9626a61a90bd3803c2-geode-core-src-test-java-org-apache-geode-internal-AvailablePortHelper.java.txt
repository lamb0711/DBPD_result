Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Provides helper methods for acquiring a set of unique available ports. It
- * is not safe to simply call AvailablePort.getRandomAvailablePort several
- * times in a row without doing something to ensure that they are unique.
- * Although they are random, it is possible for subsequent calls to
- * getRandomAvailablePort to return the same integer, unless that port is put
- * into use before further calls to getRandomAvailablePort.
+ * Provides helper methods for acquiring a set of unique available ports. It is not safe to simply
+ * call AvailablePort.getRandomAvailablePort several times in a row without doing something to
+ * ensure that they are unique. Although they are random, it is possible for subsequent calls to
+ * getRandomAvailablePort to return the same integer, unless that port is put into use before
+ * further calls to getRandomAvailablePort.
-  
+
-    for (Keeper k: list) {
+    for (Keeper k : list) {
-  
-  public static List<Keeper> getRandomAvailableTCPPortKeepers(int count, boolean useMembershipPortRange) {
+
+  public static List<Keeper> getRandomAvailableTCPPortKeepers(int count,
+      boolean useMembershipPortRange) {
-      result.add(AvailablePort.getRandomAvailablePortKeeper(AvailablePort.SOCKET, 
-        AvailablePort.getAddress(AvailablePort.SOCKET), useMembershipPortRange));
+      result.add(AvailablePort.getRandomAvailablePortKeeper(AvailablePort.SOCKET,
+          AvailablePort.getAddress(AvailablePort.SOCKET), useMembershipPortRange));
-  
+
-    if(hostName != null && hostName.startsWith("host") && hostName.length() > 4) {
+    if (hostName != null && hostName.startsWith("host") && hostName.length() > 4) {
-    
+
-      int port = AvailablePort.getRandomAvailablePortWithMod(AvailablePort.SOCKET,site);
+      int port = AvailablePort.getRandomAvailablePortWithMod(AvailablePort.SOCKET, site);
-  
-  
+
+
-    if(hostName != null && hostName.startsWith("host")) {
+    if (hostName != null && hostName.startsWith("host")) {
-      int port = AvailablePort.getRandomAvailablePortWithMod(AvailablePort.SOCKET,site);
-      return port;
+    int port = AvailablePort.getRandomAvailablePortWithMod(AvailablePort.SOCKET, site);
+    return port;
-  
-  
+
+
-  
+
-  
+
- public static int getRandomAvailableUDPPort() {
+  public static int getRandomAvailableUDPPort() {
-  
+
