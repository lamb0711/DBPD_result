GEODE-8389: reconnect attempt fails due to distribution configurationâ€¦ (#5413)

* GEODE-8389: reconnect attempt fails due to distribution configuration validation checks

disregard internal property names when checking for equality.  These
properties are used to carry information that does not come from
gemfire.properties.

* implementing Rene's idea and fixing unit test & PMD failures
+import java.util.Arrays;
+      if (isInternalAttribute(propertyName)) {
+        continue;
+      }
-        if (specialPropName(propName)) {
+        if (isSpecialPropertyName(propName)) {
-  private static boolean specialPropName(String propName) {
-    return propName.equalsIgnoreCase(CLUSTER_SSL_ENABLED)
-        || propName.equals(SECURITY_PEER_AUTH_INIT) || propName.equals(SECURITY_PEER_AUTHENTICATOR)
-        || propName.equals(LOG_WRITER_NAME) || propName.equals(DS_CONFIG_NAME)
-        || propName.equals(SECURITY_LOG_WRITER_NAME) || propName.equals(LOG_OUTPUTSTREAM_NAME)
-        || propName.equals(SECURITY_LOG_OUTPUTSTREAM_NAME);
+  /**
+   * a collection of configuration properties that are used to skip some security properties
+   * during initialization due to dependency issues
+   */
+  private Set<String> specialPropertyNames = new HashSet<>(Arrays.asList(CLUSTER_SSL_ENABLED,
+      SECURITY_PEER_AUTH_INIT, SECURITY_PEER_AUTHENTICATOR,
+      LOG_WRITER_NAME, DS_CONFIG_NAME,
+      SECURITY_LOG_WRITER_NAME, LOG_OUTPUTSTREAM_NAME,
+      SECURITY_LOG_OUTPUTSTREAM_NAME));
+
+  boolean isSpecialPropertyName(String propName) {
+    return specialPropertyNames.contains(propName);
+  }
+
+  /**
+   * returns true if the given name is annotated as an InternalConfigAttribute.
+   * These attributes are used to hold internal, runtime objects such as
+   * an auto-reconnect quorum checker and are not settable as distributed system
+   * properties.
+   */
+  boolean isInternalAttribute(String propName) {
+    return internalAttributeNames.contains(propName);
+  }
+
+  Set<String> getInternalAttributeNames() {
+    return Collections.unmodifiableSet(internalAttributeNames);
-      if (specialPropName(propName)) {
+      if (isSpecialPropertyName(propName)) {
