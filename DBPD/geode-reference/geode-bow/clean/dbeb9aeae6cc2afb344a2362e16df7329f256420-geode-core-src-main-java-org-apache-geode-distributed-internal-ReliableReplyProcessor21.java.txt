Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * This is a reply processor which tracks departed members in order for
- * reliable messaging to determine which recipients departed before replying.
+ * This is a reply processor which tracks departed members in order for reliable messaging to
+ * determine which recipients departed before replying.
-  public ReliableReplyProcessor21(InternalDistributedSystem system, InternalDistributedMember member) {
+  public ReliableReplyProcessor21(InternalDistributedSystem system,
+      InternalDistributedMember member) {
+
+
+
-  
+
-   * This method is invoked after a member has explicitly left
-   * the system.  It may not get invoked if a member becomes unreachable
-   * due to crash or network problems.
+   * This method is invoked after a member has explicitly left the system. It may not get invoked if
+   * a member becomes unreachable due to crash or network problems.
-   * ReliableReplyProcessor21 overrides this to add the departed member to
-   * the departedMembers if we haven't already received a reply from that
-   * member.
+   * ReliableReplyProcessor21 overrides this to add the departed member to the departedMembers if we
+   * haven't already received a reply from that member.
-   * Note: race condition exists between membershipListener and processing 
-   * of replies.
+   * Note: race condition exists between membershipListener and processing of replies.
-  
+
-   * Returns the recipients that have departed prior to processing a reply
-   * from them.
+   * Returns the recipients that have departed prior to processing a reply from them.
-    synchronized(this) {
+    synchronized (this) {
-  
+
-   * Use this method instead of {@link #waitForReplies()} if you want the wait to throw an
-   * exception when a member departs.
+   * Use this method instead of {@link #waitForReplies()} if you want the wait to throw an exception
+   * when a member departs.
+   * 
-  public final void waitForReliableDelivery() throws ReplyException, InterruptedException, ReliableReplyException {
+  public final void waitForReliableDelivery()
+      throws ReplyException, InterruptedException, ReliableReplyException {
-  
+
-  public final void waitForReliableDelivery(long msecs) throws ReplyException, InterruptedException, ReliableReplyException {
+  public final void waitForReliableDelivery(long msecs)
+      throws ReplyException, InterruptedException, ReliableReplyException {
-        throw new ReliableReplyException(LocalizedStrings.ReliableReplyProcessor_FAILED_TO_DELIVER_MESSAGE_TO_MEMBERS_0
-            .toLocalizedString(departedMembers));
+        throw new ReliableReplyException(
+            LocalizedStrings.ReliableReplyProcessor_FAILED_TO_DELIVER_MESSAGE_TO_MEMBERS_0
+                .toLocalizedString(departedMembers));
