GEODE-4822 The second server instance startup error: Could not create an instance of PartitionRegionConfig

Added readUserObject and doWithPdxSerialized.  Modified fromData methods
of DataSerializableFixedID classes to use these methods when reading
keys, values, callback arguments and function arguments.

Added a unit test for the new methods.

+  /**
+   * setting this to true disables DataSerializer from returning a PdxInstance if
+   * the instance can be deserialized into a POJO
+   */
+  private static final ThreadLocal<Boolean> disablePdxReadSerialized = new ThreadLocal<Boolean>();
+
+  /**
+   * setting this to true enables pdx-read-serialized for the current thread, regardless
+   * of the cache's setting for this attribute
+   */
+  private final ThreadLocal<Boolean> pdxReadSerializedOverride =
+      ThreadLocal.withInitial(() -> Boolean.FALSE);
+
+
-  private final ThreadLocal<Boolean> pdxReadSerializedOverride =
-      ThreadLocal.withInitial(() -> Boolean.FALSE);
+  public static boolean getPdxReadSerialized() {
+    return disablePdxReadSerialized.get() == null;
+  }
+
+  /**
+   * Setting this to true causes pdx-read-serialized to be respected, which is the
+   * default. Setting this to false disables pdx-read-serialized while deserializing
+   * objects. This takes precendence over setPdxReadSerializedOverride, which affects
+   * the cache's setting of that attribute.
+   */
+  public static void setPdxReadSerialized(boolean readSerialized) {
+    if (!readSerialized) {
+      disablePdxReadSerialized.set(true);
+    } else {
+      disablePdxReadSerialized.remove();
+    }
+  }
+
+
+  /**
+   * should the cache's setting for pdx-read-serialized be ignored and PdxInstances
+   * be returned?
+   */
+  /**
+   * enable pdx-read-serialized, ignoring the cache's setting.
+   */
