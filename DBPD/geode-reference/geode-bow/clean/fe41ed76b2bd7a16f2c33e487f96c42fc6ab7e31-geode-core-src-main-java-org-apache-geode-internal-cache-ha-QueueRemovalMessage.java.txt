GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import org.apache.geode.internal.cache.InternalCache;
- * 
- * 
-  // /**
-  // * Executor for processing incoming messages
-  // */
-  // private static final Executor executor;
-
-
-  // /**
-  // * create the executor in a static block
-  // */
-  // static {
-  // //TODO:Mitul best implementation of executor for this task?
-  // executor = Executors.newCachedThreadPool();
-  // }
-
-   * 
-   * 
-   * @param messages
-   * 
-   * @param dm
-
-    final GemFireCacheImpl cache;
+    final InternalCache cache;
-    cache = GemFireCacheImpl.getInstance(); // CacheFactory.getAnyInstance();
+    cache = GemFireCacheImpl.getInstance();
-          final int size = ((Integer) iterator.next()).intValue();
+          final int size = (Integer) iterator.next();
-              } catch (RegionDestroyedException rde) {
+              } catch (RegionDestroyedException ignore) {
-              } catch (CancelException e) {
+              } catch (CancelException ignore) {
-              } catch (InterruptedException ie) {
+              } catch (InterruptedException ignore) {
-            } catch (RejectedExecutionException e) {
+            } catch (RejectedExecutionException ignore) {
-    /**
+    /*
-     * 
-    DataSerializer.writeInteger(Integer.valueOf(this.messagesList.size()), out);
+    DataSerializer.writeInteger(this.messagesList.size(), out);
-      maxVal = numberOfIds.intValue();
+      maxVal = numberOfIds;
-    /**
+    /*
-     * 
-    int size = DataSerializer.readInteger(in).intValue();
+    int size = DataSerializer.readInteger(in);
-      eventIdSizeInt = eventIdSize.intValue();
+      eventIdSizeInt = eventIdSize;
