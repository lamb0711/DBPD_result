Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-public abstract class  ManagementService{
+public abstract class ManagementService {
-   * Returns a newly created or the existing instance of the management service
-   * for a cache.
+   * Returns a newly created or the existing instance of the management service for a cache.
-   * @param cache
-   *          Cache for which to get the management service.
+   * @param cache Cache for which to get the management service.
+
-   * @param cache
-   *          Cache for which to get the management service.
+   * @param cache Cache for which to get the management service.
-   * Registers an MBean in the GemFire domain. Any other domain specified as
-   * part of the object will be ignored.
+   * Registers an MBean in the GemFire domain. Any other domain specified as part of the object will
+   * be ignored.
-   * @param object
-   *          MBean to register.
-   * @param objectName
-   *          Object name of the MBean to register.
+   * @param object MBean to register.
+   * @param objectName Object name of the MBean to register.
-   * @param objectName
-   *          Object name of the MBean to unregister.
+   * @param objectName Object name of the MBean to unregister.
-   * Adds a bean to the list of those being federated, meaning that it's state
-   * will be periodically pushed to managing members. It's possible to simply
-   * register MBeans in the GemFire domain without calling federate if the
-   * developer doesn't need their state to be shared amongst members. Note that
-   * Dynamic MBeans are not supported by this service.
+   * Adds a bean to the list of those being federated, meaning that it's state will be periodically
+   * pushed to managing members. It's possible to simply register MBeans in the GemFire domain
+   * without calling federate if the developer doesn't need their state to be shared amongst
+   * members. Note that Dynamic MBeans are not supported by this service.
-   * <pre>Example Usage:
+   * <pre>
+   * Example Usage:
-   * service.federate(gemfireBeanName, CustomMXBean.class, true);</code></pre>
+   * service.federate(gemfireBeanName, CustomMXBean.class, true);</code>
+   * </pre>
-   * @param objectName
-   *          Object name of the MBean.
-   * @param interfaceClass
-   *          Interface which this MBean exposes.
-   * @param notificationEmitter
-   *          True if the MBean is a notification emitter.
+   * @param objectName Object name of the MBean.
+   * @param interfaceClass Interface which this MBean exposes.
+   * @param notificationEmitter True if the MBean is a notification emitter.
-  public abstract <T> void federate(ObjectName objectName,
-      Class<T> interfaceClass, boolean notificationEmitter);
+  public abstract <T> void federate(ObjectName objectName, Class<T> interfaceClass,
+      boolean notificationEmitter);
-   * @param regionPath
-   *          Path of the region.
+   * @param regionPath Path of the region.
-   * @param lockServiceName
-   *          Name of the lock service.
+   * @param lockServiceName Name of the lock service.
-  public abstract LockServiceMXBean getLocalLockServiceMBean(
-      String lockServiceName);
+  public abstract LockServiceMXBean getLocalLockServiceMBean(String lockServiceName);
-   * @param diskStoreName
-   *          Name of the disk store.
+   * @param diskStoreName Name of the disk store.
-   * @param serverPort
-   *          Port on which the cache server is listening.
+   * @param serverPort Port on which the cache server is listening.
-  
+
-   * Returns the DistributedSystemMXBean for managing and monitoring the 
-   * distributed system as a whole.
+   * Returns the DistributedSystemMXBean for managing and monitoring the distributed system as a
+   * whole.
-  
+
-   * Returns a DistributedRegionMXBean for managing and monitoring a 
-   * region from a system wide perspective.
+   * Returns a DistributedRegionMXBean for managing and monitoring a region from a system wide
+   * perspective.
-   * @param regionPath
-   *          Path of the Region.
+   * @param regionPath Path of the Region.
-  public abstract DistributedRegionMXBean getDistributedRegionMXBean(
-      String regionPath);
+  public abstract DistributedRegionMXBean getDistributedRegionMXBean(String regionPath);
-   * Returns a LockServiceMXBean for managing and monitoring a lock service
-   * from a system wide perspective.
+   * Returns a LockServiceMXBean for managing and monitoring a lock service from a system wide
+   * perspective.
-   * @param lockServiceName
-   *          Name of the LockService.
+   * @param lockServiceName Name of the LockService.
-  
+
-   * Returns the GatewayReceiverMXBean for managing and monitoring the
-   * gateway receiver.
+   * Returns the GatewayReceiverMXBean for managing and monitoring the gateway receiver.
-   * Returns a GatewaySenderMXBean for managing and monitoring a
-   * gateway sender.
+   * Returns a GatewaySenderMXBean for managing and monitoring a gateway sender.
-   * @param senderId
-   *          ID of the gateway sender.
+   * @param senderId ID of the gateway sender.
-  
+
-   * Returns a AsyncEventQueueMXBean for managing and monitoring an
-   * asynchronous queue.
+   * Returns a AsyncEventQueueMXBean for managing and monitoring an asynchronous queue.
-   * @param queueId
-   *          ID of the asynchronous queue.
+   * @param queueId ID of the asynchronous queue.
-  
+
-   * @param member
-   *          Member for which to find MBeans.
+   * @param member Member for which to find MBeans.
-   * Returns an instance of an MBean. This is a reference to the MBean instance
-   * and not a {@link ObjectInstance}.
+   * Returns an instance of an MBean. This is a reference to the MBean instance and not a
+   * {@link ObjectInstance}.
-   * @param objectName
-   *          Object name of the MBean.
-   * @param interfaceClass
-   *          Interface which this MBean exposes.
-   * @throws ClassCastException
-   *          if the MBean does not implement the given interface.
+   * @param objectName Object name of the MBean.
+   * @param interfaceClass Interface which this MBean exposes.
+   * @throws ClassCastException if the MBean does not implement the given interface.
-  public abstract <T> T getMBeanInstance(ObjectName objectName,
-      Class<T> interfaceClass);
+  public abstract <T> T getMBeanInstance(ObjectName objectName, Class<T> interfaceClass);
-   * Returns the last updated time of the remote MBean as reported by
-   * Sysem.currentTimeMillis().
+   * Returns the last updated time of the remote MBean as reported by Sysem.currentTimeMillis().
-   * @param objectName
-   *          Object name of the MBean.
-   * @return Last updated time or 0 if the MBean is local or the management
-   *         service is not running on this member.
+   * @param objectName Object name of the MBean.
+   * @return Last updated time or 0 if the MBean is local or the management service is not running
+   *         on this member.
-   * Returns the object name of the MemberMBean representing a distributed member.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the MemberMBean representing a distributed member. This is a utility
+   * method for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
+   * @param member Distributed member used to generate the object name.
-   * Returns the object name of the RegionMBean representing a region.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the RegionMBean representing a region. This is a utility method for
+   * generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
-   * @param regionPath
-   *          Path of the region.
+   * @param member Distributed member used to generate the object name.
+   * @param regionPath Path of the region.
-  public abstract ObjectName getRegionMBeanName(DistributedMember member,
-      String regionPath);
+  public abstract ObjectName getRegionMBeanName(DistributedMember member, String regionPath);
-   * Returns the object name of the DiskStoreMBean representing a disk store.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the DiskStoreMBean representing a disk store. This is a utility
+   * method for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
-   * @param diskName
-   *          Name of the disk store.
+   * @param member Distributed member used to generate the object name.
+   * @param diskName Name of the disk store.
-  public abstract ObjectName getDiskStoreMBeanName(DistributedMember member,
-      String diskName);
+  public abstract ObjectName getDiskStoreMBeanName(DistributedMember member, String diskName);
-   * Returns the object name of the CacheServerMBean representing a cache server.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the CacheServerMBean representing a cache server. This is a utility
+   * method for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
-   * @param serverPort
-   *          Port on which the cache server is listening.
+   * @param member Distributed member used to generate the object name.
+   * @param serverPort Port on which the cache server is listening.
-  public abstract ObjectName getCacheServerMBeanName(int serverPort,
-      DistributedMember member);
+  public abstract ObjectName getCacheServerMBeanName(int serverPort, DistributedMember member);
-   * Returns the object name of the LockServiceMBean representing a lock service.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the LockServiceMBean representing a lock service. This is a utility
+   * method for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
-   * @param lockServiceName
-   *          Name of the lock service.
+   * @param member Distributed member used to generate the object name.
+   * @param lockServiceName Name of the lock service.
-   * Returns the object name of the GatewayReciverMBean representing a
-   * gateway receiver. This is a utility method for generating an object
-   * name and it does not register an MBean.
+   * Returns the object name of the GatewayReciverMBean representing a gateway receiver. This is a
+   * utility method for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
+   * @param member Distributed member used to generate the object name.
-   * Returns the object name of the GatewaySenderMBean representing a
-   * gateway sender. This is a utility method for generating an object
-   * name and it does not register an MBean.
+   * Returns the object name of the GatewaySenderMBean representing a gateway sender. This is a
+   * utility method for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
-   * @param gatwaySenderId
-   *          ID of the gateway sender.
+   * @param member Distributed member used to generate the object name.
+   * @param gatwaySenderId ID of the gateway sender.
-  
-  
-  /**
-   * Returns the object name of the AsyncEventQueueMBean representing a
-   * asynchronous queue. This is a utility method for generating an object
-   * name and it does not register an MBean.
-   * 
-   * @param member
-   *          Distributed member used to generate the object name.
-   * @param queueId
-   *          ID of the asynchronous queue.
-   */
-  public abstract ObjectName getAsyncEventQueueMBeanName(DistributedMember member,
-      String queueId);
+
-   * Returns the object name of the DistributedRegionMBean representing a region.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the AsyncEventQueueMBean representing a asynchronous queue. This is
+   * a utility method for generating an object name and it does not register an MBean.
-   * @param regionName
-   *          Name of the region.
+   * @param member Distributed member used to generate the object name.
+   * @param queueId ID of the asynchronous queue.
+   */
+  public abstract ObjectName getAsyncEventQueueMBeanName(DistributedMember member, String queueId);
+
+  /**
+   * Returns the object name of the DistributedRegionMBean representing a region. This is a utility
+   * method for generating an object name and it does not register an MBean.
+   * 
+   * @param regionName Name of the region.
-   * Returns the object name of the DistributedLockServiceMBean representing a 
-   * lock service. This is a utility method for generating an object name and
-   * it does not register an MBean. 
+   * Returns the object name of the DistributedLockServiceMBean representing a lock service. This is
+   * a utility method for generating an object name and it does not register an MBean.
-   * @param lockService
-   *          Name of the lock service.
+   * @param lockService Name of the lock service.
-  public abstract ObjectName getDistributedLockServiceMBeanName(
-      String lockService);
+  public abstract ObjectName getDistributedLockServiceMBeanName(String lockService);
-   * Returns the object name of the getDistributedSystemMBeanName representing a 
-   * distributed system. This is a utility method for generating an object name and
-   * it does not register an MBean. 
+   * Returns the object name of the getDistributedSystemMBeanName representing a distributed system.
+   * This is a utility method for generating an object name and it does not register an MBean.
-   * Returns the object name of the ManagerMBean representing a 
-   * manager. This is a utility method for generating an object name and
-   * it does not register an MBean. 
+   * Returns the object name of the ManagerMBean representing a manager. This is a utility method
+   * for generating an object name and it does not register an MBean.
-  
+
-   * Returns the object name of the LocatorMBean representing a locator.
-   * This is a utility method for generating an object name and it does
-   * not register an MBean.
+   * Returns the object name of the LocatorMBean representing a locator. This is a utility method
+   * for generating an object name and it does not register an MBean.
-   * @param member
-   *          Distributed member used to generate the object name.
+   * @param member Distributed member used to generate the object name.
-  
-  
+
+
-   * Registers a listener that receives call backs when a member joins
-   * or leaves the distributed system.
+   * Registers a listener that receives call backs when a member joins or leaves the distributed
+   * system.
-  
+
