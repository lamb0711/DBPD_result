Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  //   Constructor(s)
+  // Constructor(s)
-   * Creates a new <code>RemoteTransportConfig</code> from the
-   * configuration information in a <code>DistributionConfig</code>.
-   * We assume that <code>config</code> already been checked for
+   * Creates a new <code>RemoteTransportConfig</code> from the configuration information in a
+   * <code>DistributionConfig</code>. We assume that <code>config</code> already been checked for
+   * 
-      this.mcastId = new DistributionLocatorId(config.getMcastAddress(), config.getMcastPort(), config.getBindAddress(), this.sslConfig);
+      this.mcastId = new DistributionLocatorId(config.getMcastAddress(), config.getMcastPort(),
+          config.getBindAddress(), this.sslConfig);
-   * Constructs a transport config given a collection of {@link
-   * DistributionLocatorId} instances.
+   * Constructs a transport config given a collection of {@link DistributionLocatorId} instances.
-  public RemoteTransportConfig(boolean isMcastEnabled,
-                               boolean isTcpDisabled,
-                               boolean isAutoReconnectDisabled,
-                               String bindAddress,
-                               SSLConfig sslConfig,
-                               Collection ids,
-                               String membershipPortRange,
-                               int tcpPort,
-                               int vmKind) {
+  public RemoteTransportConfig(boolean isMcastEnabled, boolean isTcpDisabled,
+      boolean isAutoReconnectDisabled, String bindAddress, SSLConfig sslConfig, Collection ids,
+      String membershipPortRange, int tcpPort, int vmKind) {
-        throw new IllegalArgumentException(LocalizedStrings.RemoteTransportConfig_EXPECTED_AT_LEAST_ONE_HOSTPORT_ID.toLocalizedString());
+        throw new IllegalArgumentException(
+            LocalizedStrings.RemoteTransportConfig_EXPECTED_AT_LEAST_ONE_HOSTPORT_ID
+                .toLocalizedString());
-          //System.out.println("mcast id: " + id);
+          // System.out.println("mcast id: " + id);
-          //System.out.println("non-mcast id: " + id);
+          // System.out.println("non-mcast id: " + id);
-  //   Attribute(s)
+  // Attribute(s)
-   * Returns the set of DistributionLocatorId instances that define this
-   * transport. The set is unmodifiable.
+   * Returns the set of DistributionLocatorId instances that define this transport. The set is
+   * unmodifiable.
-   * Returns true iff multicast is enabled in this transport.
-   * Multicast must be enabled in order to use multicast discovery.
+   * Returns true iff multicast is enabled in this transport. Multicast must be enabled in order to
+   * use multicast discovery.
-   * Returns a <code>Properties</code> based on this config that is
-   * appropriate to use with {@link
-   * org.apache.geode.distributed.DistributedSystem#connect}.
+   * Returns a <code>Properties</code> based on this config that is appropriate to use with
+   * {@link org.apache.geode.distributed.DistributedSystem#connect}.
+   * 
-    //    System.out.println("entering ds port range property of " + this.membershipPortRange);
+    // System.out.println("entering ds port range property of " + this.membershipPortRange);
-    for (Iterator iter = this.ids.iterator(); iter.hasNext(); ) {
+    for (Iterator iter = this.ids.iterator(); iter.hasNext();) {
-  //   Methods overridden from java.lang.Object
+  // Methods overridden from java.lang.Object
