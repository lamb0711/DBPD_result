GEODE-6964: Move geode log4j core classes to geode-log4j

Introduce new Logging and Alerting SPIs. Extract all log4j-core code to
geode-log4j module.

The geode-core module no longer contains log4j2.xml and no longer has a
dependency on log4j-core.

All code that uses log4j-core has moved to the new module geode-log4j.
The log4j2.xml for Geode now lives in geode-log4j as well. These
changes ensure that users have better control over logging including
which backend to use. This should improve user experience when using
Spring Boot.

Co-authored-by: Mark Hanson <mhanson@pivotal.io>

+import org.apache.geode.alerting.internal.AlertingSession;
+import org.apache.geode.alerting.internal.ClusterAlertMessaging;
+import org.apache.geode.alerting.internal.InternalAlertingService;
+import org.apache.geode.alerting.internal.InternalAlertingServiceFactory;
+import org.apache.geode.alerting.internal.NullAlertMessaging;
+import org.apache.geode.alerting.internal.spi.AlertLevel;
-import org.apache.geode.internal.alerting.AlertLevel;
-import org.apache.geode.internal.alerting.AlertMessaging;
-import org.apache.geode.internal.alerting.AlertingService;
-import org.apache.geode.internal.alerting.AlertingSession;
-import org.apache.geode.internal.logging.LogConfig;
-import org.apache.geode.internal.logging.LogConfigListener;
-import org.apache.geode.internal.logging.LogConfigSupplier;
-import org.apache.geode.internal.logging.LogFile;
-import org.apache.geode.internal.logging.LoggingSession;
-import org.apache.geode.internal.logging.NullLoggingSession;
+import org.apache.geode.logging.internal.LoggingSession;
+import org.apache.geode.logging.internal.NullLoggingSession;
+import org.apache.geode.logging.internal.spi.LogConfig;
+import org.apache.geode.logging.internal.spi.LogConfigListener;
+import org.apache.geode.logging.internal.spi.LogConfigSupplier;
+import org.apache.geode.logging.internal.spi.LogFile;
+  private final AtomicReference<ClusterAlertMessaging> clusterAlertMessaging =
+      new AtomicReference<>();
+
-  private final AlertingService alertingService;
+  private final InternalAlertingService alertingService;
-    alertingService = new AlertingService();
+    alertingService = new InternalAlertingServiceFactory().create();
-      alertingSession.createSession(new AlertMessaging(this));
+      clusterAlertMessaging.set(new ClusterAlertMessaging(this));
+      alertingService.useAlertMessaging(clusterAlertMessaging.get());
+      alertingSession.createSession(alertingService);
+          alertingService.useAlertMessaging(new NullAlertMessaging());
+          clusterAlertMessaging.get().close();
-  public AlertingService getAlertingService() {
+  public InternalAlertingService getAlertingService() {
