GEODE-6677: Eliminate Infinite Function Retry (#3690)

* Fix for retry with onRegion
* Fix retry with onRegion singlehop
* Fix for onServer
* DUnitTest for onRegion (singleHop, multihop), onServer
* Unit test for onRegion (singleHop, multihop), onServer

-import java.util.Arrays;
+import org.apache.geode.cache.client.PoolFactory;
+
-      if (logger.isDebugEnabled()) {
-        logger.debug(
-            "ExecuteFunctionOp#execute : Sending Function Execution Message:{} to all servers using pool: {}",
-            op.getMessage(), pool);
-      }
+
-    } else {
-      boolean reexecuteForServ = false;
-      AbstractOp reexecOp = null;
-      int retryAttempts = 0;
-      boolean reexecute = false;
-      int maxRetryAttempts = 0;
-      if (function.isHA())
-        maxRetryAttempts = pool.getRetryAttempts();
-      final boolean isDebugEnabled = logger.isDebugEnabled();
+    } else {
+      AbstractOp reexecOp = null;
+      boolean reexecuteForServ = false;
+      boolean reexecute = false;
+
+      int maxRetryAttempts = pool.getRetryAttempts();
+      if (!function.isHA()) {
+        maxRetryAttempts = 0;
+      }
+
-            if (isDebugEnabled) {
-              logger.debug(
-                  "ExecuteFunctionOp#execute.reexecuteForServ : Sending Function Execution Message:{} to server using pool: {} with groups:{} all members:{} ignoreFailedMembers:{}",
-                  op.getMessage(), pool, Arrays.toString(groups), allServers,
-                  executor.isIgnoreDepartedMembers());
-            }
-            if (isDebugEnabled) {
-              logger.debug(
-                  "ExecuteFunctionOp#execute : Sending Function Execution Message:{} to server using pool: {} with groups:{} all members:{} ignoreFailedMembers:{}",
-                  op.getMessage(), pool, Arrays.toString(groups), allServers,
-                  executor.isIgnoreDepartedMembers());
-            }
-
-          if (isDebugEnabled) {
-            logger.debug(
-                "ExecuteFunctionOp#execute : Received InternalFunctionInvocationTargetException. The failed node is {}",
-                e.getFailedNodeSet());
-          }
+        } catch (ServerOperationException serverOperationException) {
+          throw serverOperationException;
-          retryAttempts++;
-          if (isDebugEnabled) {
-            logger.debug(
-                "ExecuteFunctionOp#execute : Received ServerConnectivityException. The exception is {} The retryAttempt is : {} maxRetryAttempts  {}",
-                se, retryAttempts, maxRetryAttempts);
+          if (maxRetryAttempts == PoolFactory.DEFAULT_RETRY_ATTEMPTS) {
+            // If the retryAttempt is set to default(-1). Try it on all servers once.
+            // Calculating number of servers when function is re-executed as it involves
+            // messaging locator.
+            maxRetryAttempts = ((PoolImpl) pool).getConnectionSource().getAllServers().size() - 1;
-          if (se instanceof ServerOperationException) {
+
+          if ((maxRetryAttempts--) < 1) {
-          if ((retryAttempts > maxRetryAttempts && maxRetryAttempts != -1))
-            throw se;
-            maxRetryAttempts - 1, groups, allServers);
+            maxRetryAttempts, groups, allServers);
+
+
-      if (logger.isDebugEnabled()) {
-        logger.debug(
-            "ExecuteFunctionOp#execute : Sending Function Execution Message:{} to all servers using pool: {}",
-            op.getMessage(), pool);
-      }
-      boolean reexecuteForServ = false;
-      int retryAttempts = 0;
+      boolean reexecuteForServ = false;
-      int maxRetryAttempts = 0;
-      if (isHA) {
-        maxRetryAttempts = pool.getRetryAttempts();
+
+      int maxRetryAttempts = pool.getRetryAttempts();
+      if (!isHA) {
+        maxRetryAttempts = 0;
-      final boolean isDebugEnabled = logger.isDebugEnabled();
-            if (isDebugEnabled) {
-              logger.debug(
-                  "ExecuteFunctionOp#execute : Sending Function Execution Message:{} to server using pool:{} with groups:{} all members:{} ignoreFailedMembers:{}",
-                  op.getMessage(), pool, Arrays.toString(groups), allServers,
-                  executor.isIgnoreDepartedMembers());
-            }
-          if (isDebugEnabled) {
-            logger.debug(
-                "ExecuteFunctionOp#execute : Received InternalFunctionInvocationTargetException. The failed node is {}",
-                e.getFailedNodeSet());
-          }
+        } catch (ServerOperationException serverOperationException) {
+          throw serverOperationException;
-          retryAttempts++;
-          if (isDebugEnabled) {
-            logger.debug(
-                "ExecuteFunctionOp#execute : Received ServerConnectivityException. The exception is {} The retryAttempt is : {} maxRetryAttempts {}",
-                se, retryAttempts, maxRetryAttempts);
+          if (maxRetryAttempts == PoolFactory.DEFAULT_RETRY_ATTEMPTS) {
+            // If the retryAttempt is set to default(-1). Try it on all servers once.
+            // Calculating number of servers when function is re-executed as it involves
+            // messaging locator.
+            maxRetryAttempts = ((PoolImpl) pool).getConnectionSource().getAllServers().size() - 1;
-          if (se instanceof ServerOperationException) {
+
+          if ((maxRetryAttempts--) < 1) {
-          if ((retryAttempts > maxRetryAttempts && maxRetryAttempts != -1))
-            throw se;
-            isFnSerializationReqd, maxRetryAttempts - 1, args, isHA, optimizeForWrite, groups,
+            isFnSerializationReqd, maxRetryAttempts, args, isHA, optimizeForWrite, groups,
-      boolean isFnSerializationReqd, int maxRetryAttempts, String[] groups, boolean allMembers) {
+      boolean isFnSerializationReqd, int retryAttempts, String[] groups, boolean allMembers) {
+
-    int retryAttempts = 0;
-    final boolean isDebugEnabled = logger.isDebugEnabled();
+    int maxRetryAttempts = retryAttempts;
+
-      if (isDebugEnabled) {
-        logger.debug(
-            "ExecuteFunction#reexecute : Sending Function Execution Message:{} to Server using pool:{} with groups:{} all members:{} ignoreFailedMembers:{}",
-            reExecuteOp.getMessage(), pool, Arrays.toString(groups), allMembers,
-            serverExecutor.isIgnoreDepartedMembers());
-      }
+
-        if (isDebugEnabled) {
-          logger.debug(
-              "ExecuteFunctionOp#reexecute : Received InternalFunctionInvocationTargetException. The failed nodes are {}",
-              e.getFailedNodeSet());
-        }
+      } catch (ServerOperationException serverOperationException) {
+        throw serverOperationException;
-        if (isDebugEnabled) {
-          logger.debug("ExecuteFunctionOp#reexecute : Received ServerConnectivity Exception.");
+
+        if (maxRetryAttempts == PoolFactory.DEFAULT_RETRY_ATTEMPTS) {
+          // If the retryAttempt is set to default(-1). Try it on all servers once.
+          // Calculating number of servers when function is re-executed as it involves
+          // messaging locator.
+          maxRetryAttempts = ((PoolImpl) pool).getConnectionSource().getAllServers().size() - 1;
-        if (se instanceof ServerOperationException) {
+        if ((maxRetryAttempts--) < 1) {
-        retryAttempts++;
-        if (retryAttempts > maxRetryAttempts && maxRetryAttempts != -2)
-          throw se;
-      boolean isFnSerializationReqd, int maxRetryAttempts, Object args, boolean isHA,
+      boolean isFnSerializationReqd, int retryAttempts, Object args, boolean isHA,
+
-    int retryAttempts = 0;
-    final boolean isDebugEnabled = logger.isDebugEnabled();
+    int maxRetryAttempts = retryAttempts;
+
-      if (isDebugEnabled) {
-        logger.debug(
-            "ExecuteFunction#reexecute : Sending Function Execution Message:{} to Server using pool:{} with groups:{} all members:{} ignoreFailedMembers:{}",
-            op.getMessage(), pool, Arrays.toString(groups), allMembers,
-            serverExecutor.isIgnoreDepartedMembers());
-      }
-        if (isDebugEnabled) {
-          logger.debug(
-              "ExecuteFunctionOp#reexecute : Received InternalFunctionInvocationTargetException. The failed nodes are {}",
-              e.getFailedNodeSet());
-        }
+      } catch (ServerOperationException serverOperationException) {
+        throw serverOperationException;
-        if (isDebugEnabled) {
-          logger.debug("ExecuteFunctionOp#reexecute : Received ServerConnectivity Exception.");
+
+        if (maxRetryAttempts == PoolFactory.DEFAULT_RETRY_ATTEMPTS) {
+          // If the retryAttempt is set to default(-1). Try it on all servers once.
+          // Calculating number of servers when function is re-executed as it involves
+          // messaging locator.
+          maxRetryAttempts = ((PoolImpl) pool).getConnectionSource().getAllServers().size() - 1;
-        if (se instanceof ServerOperationException) {
+        if ((maxRetryAttempts--) < 1) {
-        retryAttempts++;
-        if (retryAttempts > maxRetryAttempts && maxRetryAttempts != -2)
-          throw se;
