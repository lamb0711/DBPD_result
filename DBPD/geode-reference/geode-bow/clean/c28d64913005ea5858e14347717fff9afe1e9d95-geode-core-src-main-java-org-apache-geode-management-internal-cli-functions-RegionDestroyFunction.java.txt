Merge branch 'release/1.4.0'

+import org.apache.geode.cache.RegionDestroyedException;
-import org.apache.geode.management.internal.cli.i18n.CliStrings;
+import org.apache.geode.internal.logging.LogService;
- * 
+ *
+    String memberName = context.getMemberName();
+
-      if (getId().equals(functionId)) {
-        Object arguments = context.getArguments();
-        if (arguments != null) {
-          regionPath = (String) arguments;
-          Cache cache = context.getCache();
-          Region<?, ?> region = cache.getRegion(regionPath);
-          region.destroyRegion();
-          String regionName =
-              regionPath.startsWith(Region.SEPARATOR) ? regionPath.substring(1) : regionPath;
-          XmlEntity xmlEntity = new XmlEntity(CacheXml.REGION, "name", regionName);
-          context.getResultSender().lastResult(new CliFunctionResult("", xmlEntity, regionPath));
-        }
+      Object arguments = context.getArguments();
+
+      if (!getId().equals(functionId) || arguments == null) {
+        context.getResultSender().lastResult(new CliFunctionResult("", false,
+            "Function Id mismatch or arguments is not available."));
+        return;
-      context.getResultSender().lastResult(new CliFunctionResult("", false, "FAILURE"));
-    } catch (IllegalStateException e) {
-      context.getResultSender().lastResult(new CliFunctionResult("", e, null));
-    } catch (Exception ex) {
+
+      regionPath = (String) arguments;
+      Cache cache = context.getCache();
+      Region<?, ?> region = cache.getRegion(regionPath);
+      // the region is already destroyed by another member
+      if (region == null) {
+        context.getResultSender().lastResult(new CliFunctionResult(memberName, true,
+            String.format("Region '%s' already destroyed", regionPath)));
+        return;
+      }
+
+      region.destroyRegion();
+
+      String regionName =
+          regionPath.startsWith(Region.SEPARATOR) ? regionPath.substring(1) : regionPath;
+      XmlEntity xmlEntity = new XmlEntity(CacheXml.REGION, "name", regionName);
+      context.getResultSender().lastResult(new CliFunctionResult(memberName, xmlEntity,
+          String.format("Region '%s' destroyed successfully", regionPath)));
+
+    } catch (IllegalStateException ex) {
+      // user is trying to destroy something that can't destroyed, like co-location
-          .lastResult(new CliFunctionResult("",
-              new RuntimeException(CliStrings.format(
-                  CliStrings.DESTROY_REGION__MSG__ERROR_WHILE_DESTROYING_REGION_0_REASON_1,
-                  new Object[] {regionPath, ex.getMessage()})),
-              null));
+          .lastResult(new CliFunctionResult(memberName, false, ex.getMessage()));
+    } catch (RegionDestroyedException ex) {
+      context.getResultSender().lastResult(new CliFunctionResult(memberName, true,
+          String.format("Region '%s' already destroyed", regionPath)));
+    } catch (Exception ex) {
+      LogService.getLogger().error(ex.getMessage(), ex);
+      context.getResultSender().lastResult(new CliFunctionResult(memberName, ex, ex.getMessage()));
