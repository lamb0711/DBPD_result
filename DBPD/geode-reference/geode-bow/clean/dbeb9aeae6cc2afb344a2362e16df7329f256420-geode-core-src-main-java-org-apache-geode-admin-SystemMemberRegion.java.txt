Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * Administrative interface that represent's the {@link
- * SystemMember}'s view of one of its cache's {@link
- * org.apache.geode.cache.Region}s.  If the region in the remote
- * system member is closed or destroyed, the methods of
- * <code>SystemMemberRegion</code> will throw {@link
- * RegionNotFoundException}.
+ * Administrative interface that represent's the {@link SystemMember}'s view of one of its cache's
+ * {@link org.apache.geode.cache.Region}s. If the region in the remote system member is closed or
+ * destroyed, the methods of <code>SystemMemberRegion</code> will throw
+ * {@link RegionNotFoundException}.
- * @deprecated as of 7.0 use the <code><a href="{@docRoot}/org/apache/geode/management/package-summary.html">management</a></code> package instead
+ * @deprecated as of 7.0 use the <code><a href=
+ *             "{@docRoot}/org/apache/geode/management/package-summary.html">management</a></code>
+ *             package instead
-  
+
-   * Returns the full path name that identifies this region in its
-   * cache.
+   * Returns the full path name that identifies this region in its cache.
-   * Returns the full path of each of the subregions of this region.
-   * These paths are suitable for use with {@link
-   * SystemMemberCache#getRegion}.
+   * Returns the full path of each of the subregions of this region. These paths are suitable for
+   * use with {@link SystemMemberCache#getRegion}.
-   * Returns a description of any user attribute associated with this
-   * region.  The description includes the classname of the user
-   * attribute object as well as its <code>toString</code>
+   * Returns a description of any user attribute associated with this region. The description
+   * includes the classname of the user attribute object as well as its <code>toString</code>
+
-   * Returns the <code>EvictionAttributes</code> that configure how
-   * entries in the the region are evicted 
+   * Returns the <code>EvictionAttributes</code> that configure how entries in the the region are
+   * evicted
-   * Returns a description of the CacheListener in this region's attributes. If
-   * there is more than 1 CacheListener defined for a region this method will
-   * return the description of the 1st CacheListener returned from
-   * {@link #getCacheListeners}
+   * Returns a description of the CacheListener in this region's attributes. If there is more than 1
+   * CacheListener defined for a region this method will return the description of the 1st
+   * CacheListener returned from {@link #getCacheListeners}
-   * This method will return an empty array if there are no CacheListeners
-   * defined on the region. If there are one or more than 1 CacheListeners
-   * defined, this method will return an array which has the names of all the
-   * CacheListeners
+   * This method will return an empty array if there are no CacheListeners defined on the region. If
+   * there are one or more than 1 CacheListeners defined, this method will return an array which has
+   * the names of all the CacheListeners
+   * 
-  
+
-  
+
+   * 
-  
+
+   * 
-  
+
-  
+
-  
-  /**
-   * Returns the Scope in this region's attributes.
+   * 
+   * /** Returns the Scope in this region's attributes.
-   * Returns whether or not conflicting concurrent operations on this region
-   * are prevented 
+   * Returns whether or not conflicting concurrent operations on this region are prevented
-   * Returns whether or not a persistent backup should be made of the
-   * region (as opposed to just writing the overflow data to disk).
+   * Returns whether or not a persistent backup should be made of the region (as opposed to just
+   * writing the overflow data to disk).
-   * Returns the <code>DiskWriteAttributes</code> that configure how
-   * the region is written to disk.
+   * Returns the <code>DiskWriteAttributes</code> that configure how the region is written to disk.
-   * Returns the directories to which the region's data are written.  If
-   * multiple directories are used, GemFire will attempt to distribute the
-   * data evenly amongst them.
+   * Returns the directories to which the region's data are written. If multiple directories are
+   * used, GemFire will attempt to distribute the data evenly amongst them.
-  
+
-   * @return False if acks are sent after updates are processed;
-   *         true if acks are sent before updates are processed.
+   * 
+   * @return False if acks are sent after updates are processed; true if acks are sent before
+   *         updates are processed.
-   * Updates the state of this region instance. Note that once a cache
-   * instance is closed refresh will never change the state of its regions.
+   * Updates the state of this region instance. Note that once a cache instance is closed refresh
+   * will never change the state of its regions.
-   * @param name
-   *        The name of the region to create
-   * @param attrs
-   *        The attributes of the root region
+   * @param name The name of the region to create
+   * @param attrs The attributes of the root region
-   * @throws AdminException
-   *         If the region cannot be created
+   * @throws AdminException If the region cannot be created
-  public SystemMemberRegion createSubregion(String name,
-                                            RegionAttributes attrs)
-    throws AdminException;
+  public SystemMemberRegion createSubregion(String name, RegionAttributes attrs)
+      throws AdminException;
-   * Returns the <code>MembershipAttributes</code> that configure required
-   * roles for reliable access to the region.
+   * Returns the <code>MembershipAttributes</code> that configure required roles for reliable access
+   * to the region.
+   * 
-  
+
+   * 
-  
+
+   * 
