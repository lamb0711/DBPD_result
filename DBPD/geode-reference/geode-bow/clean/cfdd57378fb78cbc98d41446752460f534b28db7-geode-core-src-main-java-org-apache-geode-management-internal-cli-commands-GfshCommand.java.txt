GEODE-2966: RefactorLauncherLifecycleCommands

 - Extract several commands into their own classes.
 - Extract utility methods into their own classes.
 - Rename AbstractCommandsSupport to GfshCommand, and convert it from an abstract class to an interface

(cherry picked from commit 9046c8d)

-import org.apache.geode.internal.security.SecurityService;
- * The AbstractCommandsSupport class is an abstract base class encapsulating common functionality
- * for implementing command classes with command for the GemFire shell (gfsh).
+ * Encapsulates common functionality for implementing command classes for the Geode shell (gfsh).
- * @since GemFire 7.0
-public abstract class AbstractCommandsSupport implements CommandMarker {
-  protected static SecurityService securityService = SecurityService.getSecurityService();
-
-  protected static void assertArgument(final boolean valid, final String message,
-      final Object... args) {
-    if (!valid) {
-      throw new IllegalArgumentException(String.format(message, args));
-    }
-  }
-
-  protected static void assertNotNull(final Object obj, final String message,
-      final Object... args) {
-    if (obj == null) {
-      throw new NullPointerException(String.format(message, args));
-    }
-  }
-
-  protected static void assertState(final boolean valid, final String message,
-      final Object... args) {
-    if (!valid) {
-      throw new IllegalStateException(String.format(message, args));
-    }
-  }
-
-  protected static String convertDefaultValue(final String from, final String to) {
+public interface GfshCommand extends CommandMarker {
+  default String convertDefaultValue(final String from, final String to) {
-  protected static String toString(final Boolean condition, final String trueValue,
+  default String toString(final Boolean condition, final String trueValue,
-  protected static String toString(final Throwable t, final boolean printStackTrace) {
+  default String toString(final Throwable t, final boolean printStackTrace) {
-  protected boolean isConnectedAndReady() {
+  default boolean isConnectedAndReady() {
-  protected ClusterConfigurationService getSharedConfiguration() {
+  default ClusterConfigurationService getSharedConfiguration() {
-  protected void persistClusterConfiguration(Result result, Runnable runnable) {
+  default void persistClusterConfiguration(Result result, Runnable runnable) {
-  protected boolean isDebugging() {
+  default boolean isDebugging() {
-  protected boolean isLogging() {
+  default boolean isLogging() {
-  protected InternalCache getCache() {
+  default InternalCache getCache() {
-  protected static Gfsh getGfsh() {
+  default Gfsh getGfsh() {
-  protected DistributedMember getMember(final InternalCache cache, final String memberName) {
+  default DistributedMember getMember(final InternalCache cache, final String memberName) {
-   *
+   * 
-  protected Set<DistributedMember> getMembers(final InternalCache cache) {
+  default Set<DistributedMember> getMembers(final InternalCache cache) {
-  protected Execution getMembersFunctionExecutor(final Set<DistributedMember> members) {
+  default Execution getMembersFunctionExecutor(final Set<DistributedMember> members) {
-  protected void logInfo(final String message) {
+  default void logInfo(final String message) {
-  protected void logInfo(final Throwable cause) {
+  default void logInfo(final Throwable cause) {
-  protected void logInfo(final String message, final Throwable cause) {
+  default void logInfo(final String message, final Throwable cause) {
-  protected void logWarning(final String message) {
+  default void logWarning(final String message) {
-  protected void logWarning(final Throwable cause) {
+  default void logWarning(final Throwable cause) {
-  protected void logWarning(final String message, final Throwable cause) {
+  default void logWarning(final String message, final Throwable cause) {
-  protected void logSevere(final String message) {
+  default void logSevere(final String message) {
-  protected void logSevere(final Throwable cause) {
+  default void logSevere(final Throwable cause) {
-  protected void logSevere(final String message, final Throwable cause) {
+  default void logSevere(final String message, final Throwable cause) {
-  protected <T extends Function> T register(T function) {
+  default <T extends Function> T register(T function) {
