Merge branch 'release/1.4.0'

-import java.util.Map;
-        dsMembers.add(getMember(cache, memberId));
+        dsMembers.add(getMember(memberId));
-      Map<String, String> paramValueMap = parseResult.getParamValueStrings();
-      paramValueMap.entrySet();
-      String onGroup = paramValueMap.get(CliStrings.GROUP);
-      String onMember = paramValueMap.get(CliStrings.MEMBER);
+      String onGroup = parseResult.getParamValueAsString(CliStrings.GROUP);
+      String onMember = parseResult.getParamValueAsString(CliStrings.MEMBER);
+
+      String functionId = parseResult.getParamValueAsString(CliStrings.DESTROY_FUNCTION__ID);
-        Response response = readYesNo("Do you really want to destroy "
-            + paramValueMap.get(CliStrings.DESTROY_FUNCTION__ID) + " on entire DS?", Response.NO);
+        Response response = readYesNo(
+            "Do you really want to destroy " + functionId + " on entire DS?", Response.NO);
-          return ResultBuilder.createShellClientAbortOperationResult(
-              "Aborted destroy of " + paramValueMap.get(CliStrings.DESTROY_FUNCTION__ID));
-        } else {
-              .createInfoResult("Destroying " + paramValueMap.get(CliStrings.DESTROY_FUNCTION__ID));
+              .createShellClientAbortOperationResult("Aborted destroy of " + functionId);
+        } else {
+          return ResultBuilder.createInfoResult("Destroying " + functionId);
-        return ResultBuilder
-            .createInfoResult("Destroying " + paramValueMap.get(CliStrings.DESTROY_FUNCTION__ID));
+        return ResultBuilder.createInfoResult("Destroying " + functionId);
