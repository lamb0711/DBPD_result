GEODE-7194: simplify CMS 'get' return type (#4047)


-import static org.apache.geode.management.configuration.MemberConfig.MEMBER_CONFIG_ENDPOINT;
+import static org.apache.geode.management.configuration.Member.MEMBER_ENDPOINT;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.ResponseBody;
-import org.apache.geode.management.api.ClusterManagementException;
+import org.apache.geode.management.api.ClusterManagementGetResult;
-import org.apache.geode.management.api.ClusterManagementResult;
-import org.apache.geode.management.api.ClusterManagementResult.StatusCode;
-import org.apache.geode.management.configuration.MemberConfig;
+import org.apache.geode.management.configuration.Member;
-  @RequestMapping(method = RequestMethod.GET, value = MEMBER_CONFIG_ENDPOINT + "/{id}")
-  public ResponseEntity<ClusterManagementListResult<MemberConfig, MemberInformation>> getMember(
+  @RequestMapping(method = RequestMethod.GET, value = MEMBER_ENDPOINT + "/{id}")
+  @ResponseBody
+  public ClusterManagementGetResult<Member, MemberInformation> getMember(
-    MemberConfig config = new MemberConfig();
+    Member config = new Member();
-    ClusterManagementListResult<MemberConfig, MemberInformation> result =
-        clusterManagementService.list(config);
-    if (result.getRuntimeResult().size() == 0) {
-      throw new ClusterManagementException(new ClusterManagementResult(StatusCode.ENTITY_NOT_FOUND,
-          "Member '" + config.getId() + "' does not exist."));
-    }
-
-    return new ResponseEntity<>(result,
-        result.isSuccessful() ? HttpStatus.OK : HttpStatus.INTERNAL_SERVER_ERROR);
+    return clusterManagementService.get(config);
-  @RequestMapping(method = RequestMethod.GET, value = MEMBER_CONFIG_ENDPOINT)
-  public ResponseEntity<ClusterManagementListResult<MemberConfig, MemberInformation>> listMembers(
+  @RequestMapping(method = RequestMethod.GET, value = MEMBER_ENDPOINT)
+  @ResponseBody
+  public ClusterManagementListResult<Member, MemberInformation> listMembers(
-    MemberConfig filter = new MemberConfig();
+    Member filter = new Member();
-    ClusterManagementListResult<MemberConfig, MemberInformation> result =
-        clusterManagementService.list(filter);
-
-    return new ResponseEntity<>(result,
-        result.isSuccessful() ? HttpStatus.OK : HttpStatus.INTERNAL_SERVER_ERROR);
+    return clusterManagementService.list(filter);
-
