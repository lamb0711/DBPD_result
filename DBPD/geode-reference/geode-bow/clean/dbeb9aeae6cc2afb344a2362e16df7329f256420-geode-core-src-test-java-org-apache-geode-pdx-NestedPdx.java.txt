Merge branch 'release/1.1.0'

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
-  
+
-  
-  public NestedPdx() {
-  }
-  
-  public NestedPdx(String str1, long myLong, HashMap<String, PdxSerializable> myMap, String str2, float myFloat) {
+
+  public NestedPdx() {}
+
+  public NestedPdx(String str1, long myLong, HashMap<String, PdxSerializable> myMap, String str2,
+      float myFloat) {
+
-    result = prime * result + (int)(myLong ^ (myLong >>> 32));
+    result = prime * result + (int) (myLong ^ (myLong >>> 32));
-    NestedPdx other = (NestedPdx)obj;
+    NestedPdx other = (NestedPdx) obj;
-    }
-    else if (!myHashMap.equals(other.myHashMap))
+    } else if (!myHashMap.equals(other.myHashMap))
-    }
-    else if (!myString1.equals(other.myString1))
+    } else if (!myString1.equals(other.myString1))
-    }
-    else if (!myString2.equals(other.myString2))
+    } else if (!myString2.equals(other.myString2))
-   // out.writeObject("myHashMap", this.myHashMap);
+    // out.writeObject("myHashMap", this.myHashMap);
-  
-  public void fromData(PdxReader in){
+
+  public void fromData(PdxReader in) {
-    this.myHashMap = (Map<String, PdxSerializable>)in.readObject("myHashMap");
+    this.myHashMap = (Map<String, PdxSerializable>) in.readObject("myHashMap");
-  
+
-    return "NestedPdx [myString1=" + myString1 + ", myLong=" + myLong
-        + ", myHashMap=" + myHashMap + ", myString2=" + myString2
-        + ", myFloat=" + myFloat + "]";
+    return "NestedPdx [myString1=" + myString1 + ", myLong=" + myLong + ", myHashMap=" + myHashMap
+        + ", myString2=" + myString2 + ", myFloat=" + myFloat + "]";
