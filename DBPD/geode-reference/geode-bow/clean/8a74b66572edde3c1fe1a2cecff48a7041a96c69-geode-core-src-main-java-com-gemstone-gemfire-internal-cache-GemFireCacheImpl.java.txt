GEODE-1426: remove sqlf code from GemFireCacheImpl

The sqlf instance variables in GemFireCacheImpl
and all subsequent callers of them have been removed.

-  /** indicates whether this is a SQLFabric system */
-  private boolean sqlfSystem;
-
-  /**
-   * SQLFabric's static distribution advisee.
-   */
-  private volatile DistributionAdvisee sqlfAdvisee;
-
-  /** system property to indicate SQLFabric product */
-  public static final String SQLFABRIC_PRODUCT_PROP = "sqlfabric.product";
-
-  static final String SQLF_ENTRY_FACTORY_PROVIDER = "com.gemstone.sqlfabric."
-      + "internal.engine.store.entry.RegionEntryFactoryProvider";
-
-      // set custom entry factories for SQLFabric
-      this.sqlfSystem = Boolean.getBoolean(SQLFABRIC_PRODUCT_PROP);
-      if (this.sqlfSystem) {
-        String provider = SQLF_ENTRY_FACTORY_PROVIDER;
-        try {
-          Class<?> factoryProvider = Class.forName(provider);
-          Method method = factoryProvider.getDeclaredMethod("getTXEntryStateFactory", new Class[0]);
-          TXEntryStateFactory ref = (TXEntryStateFactory) method.invoke(null, new Object[0]);
-          this.txEntryStateFactory = ref;
-
-        } catch (Exception e) {
-          throw new CacheRuntimeException("Exception in obtaining SQLFabric " + "RegionEntry Factory provider class", e) {
-            private static final long serialVersionUID = -6456778743822843838L;
-          };
-        }
-      } else {
-        this.txEntryStateFactory = TXEntryState.getFactory();
-      }
+      this.txEntryStateFactory = TXEntryState.getFactory();
-        /** If gemfire prperties file is available replace properties from there */
+        /** If product properties file is available replace properties from there */
-      if (!this.sqlfSystem 
-          && ((DistributionManager) dm).getDMType() != DistributionManager.LOCATOR_DM_TYPE
+      if (((DistributionManager) dm).getDMType() != DistributionManager.LOCATOR_DM_TYPE
-    // no shortcuts for SQLFabric since these are not used and some combinations
-    // are not supported
-    if (sqlfSystem()) {
-      return;
-    }
-  public DistributionAdvisee getSqlfAdvisee() {
-    return this.sqlfAdvisee;
-  }
-
-  public void setSqlfAdvisee(DistributionAdvisee advisee) {
-    this.sqlfAdvisee = advisee;
-  }
-
-  public final boolean isSqlfSystem() {
-    return this.sqlfSystem;
-  }
-
-  public static boolean sqlfSystem() {
-    return (instance != null && instance.isSqlfSystem());
-  }
-
-  public void setSqlfSystem() {
-    this.sqlfSystem = true;
-  }
-
