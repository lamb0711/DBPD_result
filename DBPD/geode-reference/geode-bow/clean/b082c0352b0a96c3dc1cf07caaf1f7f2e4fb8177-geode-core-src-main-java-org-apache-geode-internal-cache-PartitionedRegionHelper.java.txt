GEODE-7803: provide undeprecated internal region create (#4722)

You can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.
InternalRegionFactory used to be named RegionFactoryImpl.

-import java.io.IOException;
-import org.apache.geode.cache.AttributesFactory;
-import org.apache.geode.cache.RegionAttributes;
-import org.apache.geode.cache.Scope;
+import org.apache.geode.cache.RegionShortcut;
-      AttributesFactory factory = new AttributesFactory();
-      factory.setScope(Scope.DISTRIBUTED_ACK);
-      factory.setDataPolicy(DataPolicy.REPLICATE);
+      InternalRegionFactory factory = cache.createInternalRegionFactory(RegionShortcut.REPLICATE);
-      RegionAttributes ra = factory.create();
+      factory.setIsUsedForPartitionedRegionAdmin(true);
+      factory.setInternalRegion(true);
+      factory.setCachePerfStatsHolder(prMetaStatsHolder);
+
-        root = (DistributedRegion) cache.createVMRegion(PR_ROOT_REGION_NAME, ra,
-            new InternalRegionArguments().setIsUsedForPartitionedRegionAdmin(true)
-                .setInternalRegion(true).setCachePerfStatsHolder(prMetaStatsHolder));
+        root = (DistributedRegion) factory.create(PR_ROOT_REGION_NAME);
-      } catch (IOException ieo) {
-        Assert.assertTrue(false, "IOException creating Partitioned Region root: " + ieo);
-      } catch (ClassNotFoundException cne) {
-        Assert.assertTrue(false, "ClassNotFoundExcpetion creating Partitioned Region root: " + cne);
