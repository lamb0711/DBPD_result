GEODE-2400: use a function to implement waitUntilFlushed, then accessor and client
can have this feature.

-    int attempts = 0;
-      // Wait until the sender is flushed. Retry if necessary.
-      while (true) {
-        try {
-          WaitUntilParallelGatewaySenderFlushedCoordinator coordinator =
-              new WaitUntilParallelGatewaySenderFlushedCoordinator(this, timeout, unit, true);
-          result = coordinator.waitUntilFlushed();
-          break;
-        } catch (BucketMovedException | CancelException | RegionDestroyedException e) {
-          attempts++;
-          logger.warn(
-              LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETRYING
-                  .toLocalizedString(),
-              e);
-          Thread.sleep(100);
-        } catch (Throwable t) {
-          attempts++;
-          logger.warn(
-              LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETURNING
-                  .toLocalizedString(),
-              t);
-          throw new InternalGemFireError(t);
-        }
+      try {
+        WaitUntilParallelGatewaySenderFlushedCoordinator coordinator =
+            new WaitUntilParallelGatewaySenderFlushedCoordinator(this, timeout, unit, true);
+        result = coordinator.waitUntilFlushed();
+      } catch (BucketMovedException | CancelException | RegionDestroyedException e) {
+        logger.warn(
+            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETRYING
+                .toLocalizedString(),
+            e);
+        throw e;
+      } catch (Throwable t) {
+        logger.warn(
+            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETURNING
+                .toLocalizedString(),
+            t);
+        throw new InternalGemFireError(t);
