GEODE-5272: CacheClosedException not wrapped in TypeMismatchException (#2009)

Co-authored-by: bijukunjummen <biju.kunjummen@gmail.com>
+import org.apache.geode.cache.CacheClosedException;
-      try {
-        rIter.evaluateCollection(context);
-      } catch (QueryExecutionTimeoutException qet) {
-        throw qet;
-      } catch (RegionNotFoundException re) {
-        throw re;
-      } catch (NotAuthorizedException e) {
-        throw e;
-      } catch (QueryExecutionCanceledException e) {
-        throw e;
-      } catch (Exception e) {
-        if (logger.isDebugEnabled()) {
-          logger.debug("Exception while getting runtime iterator.", e);
-        }
-        throw new TypeMismatchException(
-            LocalizedStrings.CompiledIteratorDef_EXCEPTION_IN_EVALUATING_THE_COLLECTION_EXPRESSION_IN_GETRUNTIMEITERATOR_EVEN_THOUGH_THE_COLLECTION_IS_INDEPENDENT_OF_ANY_RUNTIMEITERATOR
-                .toLocalizedString(),
-            e);
-      }
+      evaluateCollectionForIndependentIterator(context, rIter);
+  protected void evaluateCollectionForIndependentIterator(ExecutionContext context,
+      RuntimeIterator rIter)
+      throws RegionNotFoundException, TypeMismatchException {
+    try {
+      rIter.evaluateCollection(context);
+    } catch (QueryExecutionTimeoutException qet) {
+      throw qet;
+    } catch (RegionNotFoundException re) {
+      throw re;
+    } catch (NotAuthorizedException e) {
+      throw e;
+    } catch (QueryExecutionCanceledException e) {
+      throw e;
+    } catch (CacheClosedException e) {
+      throw e;
+    } catch (Exception e) {
+      if (logger.isDebugEnabled()) {
+        logger.debug("Exception while getting runtime iterator.", e);
+      }
+      throw new TypeMismatchException(
+          LocalizedStrings.CompiledIteratorDef_EXCEPTION_IN_EVALUATING_THE_COLLECTION_EXPRESSION_IN_GETRUNTIMEITERATOR_EVEN_THOUGH_THE_COLLECTION_IS_INDEPENDENT_OF_ANY_RUNTIMEITERATOR
+              .toLocalizedString(),
+          e);
+    }
+  }
+
