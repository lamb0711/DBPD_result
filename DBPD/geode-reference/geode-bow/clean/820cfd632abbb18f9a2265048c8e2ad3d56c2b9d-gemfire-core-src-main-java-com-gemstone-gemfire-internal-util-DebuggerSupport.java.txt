GEODE-773: Extract static methods from DistributedTestCase

Refactor DistributedTestCase by extracting inner classes & interfaces into:
* IgnoredException
* StoppableWaitCriterion
* WaitCriterion

Refactor DistributedTestCase by extracting static methods into:
* Assert
* DebuggerUtils
* DistributedTestUtils
* Invoke
* Jitter
* LogWriterUtils
* NetworkUtils
* ThreadUtils
* Wait

Also:
* Rename variables for clarity
* Replace several uses of LogWriter with Logger
* Write and polish lots of javadocs
* Overhaul entire hierarchy of tearDown() methods across dunit tests

-
-import com.gemstone.gemfire.i18n.LogWriterI18n;
+import org.apache.logging.log4j.Logger;
+
+import com.gemstone.gemfire.internal.logging.LogService;
+import com.gemstone.gemfire.internal.logging.log4j.LocalizedMessage;
+  private static final Logger logger = LogService.getLogger();
-  public static void waitForJavaDebugger(LogWriterI18n logger) {
-    waitForJavaDebugger(logger, null);
+  public static void waitForJavaDebugger() {
+    waitForJavaDebugger(null);
-  public static void waitForJavaDebugger(LogWriterI18n logger, String extraLogMsg) {
+  public static void waitForJavaDebugger(String extraLogMsg) {
-    logger.severe(LocalizedStrings.DebuggerSupport_WAITING_FOR_DEBUGGER_TO_ATTACH_0, msg);
+    logger.fatal(LocalizedMessage.create(LocalizedStrings.DebuggerSupport_WAITING_FOR_DEBUGGER_TO_ATTACH_0, msg));
-    logger.info(LocalizedStrings.DebuggerSupport_DEBUGGER_CONTINUING);
+    logger.info(LocalizedMessage.create(LocalizedStrings.DebuggerSupport_DEBUGGER_CONTINUING));
