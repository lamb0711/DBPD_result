GEODE-1803 Inefficient code in ClientMetadataService.getServerToFilterMap()

Created a Random to use in methods needing it.  Replaced Collections.shuffle()
with random selection from an ArrayList.

+import org.apache.logging.log4j.Logger;
+
-import com.gemstone.gemfire.internal.cache.BucketServerLocation66;
-import com.gemstone.gemfire.internal.cache.BucketServerLocation;
-import com.gemstone.gemfire.internal.cache.FixedPartitionAttributesImpl;
-import com.gemstone.gemfire.internal.cache.GemFireCacheImpl;
+import com.gemstone.gemfire.internal.cache.FixedPartitionAttributesImpl;
-import org.apache.logging.log4j.Logger;
+  
+  private Random random = new Random();
-      int index = new Random().nextInt(locationsCopy.size() - 1);
+      int index = random.nextInt(locationsCopy.size());
-    ArrayList<Integer> bucketList = new ArrayList<Integer>(
-        this.bucketServerLocationsMap.keySet());
-
-    if (bucketList.size() > 0) {
-      Collections.shuffle(bucketList);
+    ArrayList<Integer> bucketList = new ArrayList<Integer>(this.bucketServerLocationsMap.keySet());
+    int size = bucketList.size();
+    if (size > 0) {
-          .get(bucketList.get(0));
-
+          .get(bucketList.get(random.nextInt(size)));
