Merge branch 'release/1.3.0'

+import org.apache.geode.distributed.internal.membership.gms.membership.HostAddress;
-import org.apache.geode.internal.cache.tier.sockets.AcceptorImpl;
-  private static final int HANDSHAKE_TIMEOUT =
-      Integer.getInteger(DistributionConfig.GEMFIRE_PREFIX + "PoolImpl.HANDSHAKE_TIMEOUT",
-          AcceptorImpl.DEFAULT_HANDSHAKE_TIMEOUT_MS);
-
+  private final int socketConnectTimeout;
+  private final List<HostAddress> locatorAddresses;
-  public static PoolImpl create(PoolManagerImpl pm, String name, Pool attributes) {
-    PoolImpl pool = new PoolImpl(pm, name, attributes);
+  public static PoolImpl create(PoolManagerImpl pm, String name, Pool attributes,
+      List<HostAddress> locatorAddresses) {
+    PoolImpl pool = new PoolImpl(pm, name, attributes, locatorAddresses);
-  protected PoolImpl(PoolManagerImpl pm, String name, Pool attributes) {
+  protected PoolImpl(PoolManagerImpl pm, String name, Pool attributes,
+      List<HostAddress> locAddresses) {
+    this.socketConnectTimeout = attributes.getSocketConnectTimeout();
+    this.locatorAddresses = locAddresses;
-        HANDSHAKE_TIMEOUT, readTimeout, proxyId, this.cancelCriterion, usedByGateway, gatewaySender,
-        pingInterval, multiuserSecureModeEnabled, this);
+        socketConnectTimeout, readTimeout, proxyId, this.cancelCriterion, usedByGateway,
+        gatewaySender, pingInterval, multiuserSecureModeEnabled, this);
+        && getSocketConnectTimeout() == p.getSocketConnectTimeout()
+  public int getSocketConnectTimeout() {
+    return this.socketConnectTimeout;
+  }
+
-      AutoConnectionSourceImpl source =
-          new AutoConnectionSourceImpl(locators, getServerGroup(), HANDSHAKE_TIMEOUT);
+      AutoConnectionSourceImpl source = new AutoConnectionSourceImpl(locators, locatorAddresses,
+          getServerGroup(), socketConnectTimeout);
+    if (getSocketConnectTimeout() != other.getSocketConnectTimeout()) {
+      throw new RuntimeException(
+          LocalizedStrings.PoolImpl_0_IS_DIFFERENT.toLocalizedString("socketConnectimeout"));
+    }
