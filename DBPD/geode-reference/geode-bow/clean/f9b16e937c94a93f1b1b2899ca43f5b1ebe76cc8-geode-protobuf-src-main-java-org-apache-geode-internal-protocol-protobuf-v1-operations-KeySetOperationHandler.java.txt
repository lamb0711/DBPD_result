GEODE-4819: Separating authorization out from protobuf handlers (#1674)

Separating out authentication from the logic of parsing protobuf
messages. All region operations should be done through the new
AuthenticatingCache API, which does authentication and the operation.

In a future change we should move AuthenticationCache to the core and
refactor gfsh, the REST API, and the old client to also go through this
layer.

-  private static final Logger logger = LogService.getLogger();
-    Region region = messageExecutionContext.getCache().getRegion(regionName);
-    if (region == null) {
-      logger.error("Received request for nonexistent region: {}", regionName);
-      return Failure.of(BasicTypes.ErrorCode.SERVER_ERROR,
-          "Region \"" + regionName + "\" not found");
-    }
-    Set keySet = region.keySet();
+    Set<Object> keySet = messageExecutionContext.getAuthorizingCache().keySet(regionName);
+
-    keySet.stream().map(serializationService::encode)
-        .forEach(value -> builder.addKeys((BasicTypes.EncodedValue) value));
+    keySet.stream().map(serializationService::encode).forEach(builder::addKeys);
-
-  public static ResourcePermission determineRequiredPermission(RegionAPI.KeySetRequest request,
-      ProtobufSerializationService serializer) throws DecodingException {
-    return new ResourcePermission(ResourcePermission.Resource.DATA,
-        ResourcePermission.Operation.READ, request.getRegionName());
-  }
