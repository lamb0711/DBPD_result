GEODE-7504: region eviction support (#4428)

Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
Co-authored-by: Darrel Schneider <dschneider@pivotal.io>
Co-authored-by: Jinmei Liao <jiliao@pivotal.io>

* added eviction support to RegionConverter and RegionConfigValidator
+  private Eviction eviction;
+
+  public Eviction getEviction() {
+    return eviction;
+  }
+
+  public void setEviction(Eviction eviction) {
+    this.eviction = eviction;
+  }
+
+
-    public Expiration() {};
+    public Expiration() {}
+
+  public enum EvictionType {
+    ENTRY_COUNT,
+    MEMORY_SIZE,
+    HEAP_PERCENTAGE
+  }
+
+  public enum EvictionAction {
+    LOCAL_DESTROY,
+    OVERFLOW_TO_DISK
+  }
+
+  public static class Eviction implements Serializable {
+    private EvictionType type;
+    private EvictionAction action;
+    private Integer limit;
+    private ClassName objectSizer;
+
+    public Eviction() {}
+
+    public EvictionType getType() {
+      return type;
+    }
+
+    /**
+     * once a type is set, it can not be changed to another value.
+     *
+     * @param type eviction type
+     * @throws IllegalArgumentException if type is already set to another value. this is to
+     *         prevent users from trying to send in conflicting attributes in json
+     *         format such as {entryCount:10,type:HEAP_PERCENTAGE}
+     */
+    public void setType(EvictionType type) {
+      if (this.type != null && this.type != type) {
+        throw new IllegalArgumentException("Type conflict. Type is already set to " + this.type);
+      }
+      this.type = type;
+    }
+
+    public EvictionAction getAction() {
+      return action;
+    }
+
+    public void setAction(EvictionAction action) {
+      this.action = action;
+    }
+
+    public Integer getEntryCount() {
+      if (type == EvictionType.ENTRY_COUNT) {
+        return limit;
+      }
+      return null;
+    }
+
+    /**
+     * this sets the entry count and the eviction type to ENTRY_COUNT
+     *
+     * @param entryCount the entry count
+     * @throws IllegalArgumentException if type is already set to another value. This is to prevent
+     *         users from trying to send conflicting json attributes
+     *         such as {type:HEAP_PERCENTAGE,entryCount:10}
+     */
+    public void setEntryCount(Integer entryCount) {
+      if (type != null && type != EvictionType.ENTRY_COUNT) {
+        throw new IllegalArgumentException("Type conflict. Type is already set to " + type);
+      }
+      type = EvictionType.ENTRY_COUNT;
+      this.limit = entryCount;
+    }
+
+    public Integer getMemorySizeMb() {
+      if (type == EvictionType.MEMORY_SIZE) {
+        return limit;
+      }
+      return null;
+    }
+
+    /**
+     * this sets the memory size in megabytes and the eviction type to MEMORY_SIZE
+     *
+     * @param memorySizeMb the memory size in megabytes
+     * @throws IllegalArgumentException if type is already set to other values. This is to prevent
+     *         users from trying to send conflicting json attributes
+     *         such as {type:HEAP_PERCENTAGE,memorySizeMb:100}
+     */
+    public void setMemorySizeMb(Integer memorySizeMb) {
+      if (type != null && type != EvictionType.MEMORY_SIZE) {
+        throw new IllegalArgumentException("Type conflict. type is already set to " + type);
+      }
+      type = EvictionType.MEMORY_SIZE;
+      this.limit = memorySizeMb;
+    }
+
+    public ClassName getObjectSizer() {
+      return objectSizer;
+    }
+
+    public void setObjectSizer(ClassName objectSizer) {
+      this.objectSizer = objectSizer;
+    }
+  }
