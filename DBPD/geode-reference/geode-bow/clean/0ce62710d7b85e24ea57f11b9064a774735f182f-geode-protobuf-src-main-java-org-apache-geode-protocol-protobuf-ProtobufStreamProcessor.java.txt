GEODE-3129 - Added error messages to protobuf protocol. This now closes #621

added a new ErrorResponse type to ClientProtocol
removed success field from several RegionAPI response objects and refactored operation handlers to instead return ErrorResponses
made all op handlers take ClientProtocol.Requests and return ClientProtocol.Responses instead of operation specific types
moved the protobuf specific response building code from operation handlers to ProtobufResponseUtilities
moved the request building functions from MessageUtil (under Test) to ProtobufRequestUtilities
moved all utility classes to ...protocol.protobuf.utilities and added javadoc comments throughout
changed GetRegions to GetRegionNames, returns strings instead of Regions
replaced logging through the cache's LogWriter with log4j logging
updated all imports to be in the correct order for the new geode style guide

Signed-off-by: Brian Rowe <browe@pivotal.io>
Signed-off-by: Hitesh Khamesra <hiteshk25@yahoo.com>
Signed-off-by: Brian Rowe <browe@pivotal.io>

-import org.apache.geode.protocol.protobuf.operations.GetRegionsRequestOperationHandler;
-import org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandler;
-import org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandler;
-import org.apache.geode.protocol.protobuf.serializer.ProtobufProtocolSerializer;
+import org.apache.geode.protocol.protobuf.operations.GetRegionNamesRequestOperationHandler;
+import org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandler;
+import org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandler;
+import org.apache.geode.protocol.protobuf.serializer.ProtobufProtocolSerializer;
+import org.apache.geode.protocol.protobuf.utilities.ProtobufUtilities;
-        ClientProtocol.Request.RequestAPICase.GETREGIONSREQUEST.getNumber(),
-        new GetRegionsRequestOperationHandler());
+        ClientProtocol.Request.RequestAPICase.GETREGIONNAMESREQUEST.getNumber(),
+        new GetRegionNamesRequestOperationHandler());
-
+    ClientProtocol.MessageHeader responseHeader =
+        ProtobufUtilities.createMessageHeaderForRequest(message);
-        ProtobufUtilities.wrapResponseWithDefaultHeader(response);
+        ProtobufUtilities.createProtobufResponse(responseHeader, response);
