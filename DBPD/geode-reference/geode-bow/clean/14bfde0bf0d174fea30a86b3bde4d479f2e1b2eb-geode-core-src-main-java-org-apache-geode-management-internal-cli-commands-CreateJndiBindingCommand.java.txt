Merge branch 'release/1.8.0'

-      "This is the fully qualified name of the connection pool implementation to hold XA datasource connections.";
+      "This is the fully qualified name of the connection pool implementation to hold XA datasource connections."
+          + " When used with --type=POOLED this class must implement org.apache.geode.datasource.PooledDataSourceFactory.";
+  static final String URL = "url";
-      "Properties for the custom XADataSource driver. Append json string containing (name, type, value) to set any property. Eg: --datasource-config-properties={'name':'name1','type':'type1','value':'value1'},{'name':'name2','type':'type2','value':'value2'}";
+      "Properties for the data source. When used with the --type==POOLED, these properties will be used to configure the database data source unless the name begins with \"pool.\"."
+          + " If that prefix is used it will be used to configure the pool data source. Append json string containing (name, type, value) to set any property. "
+          + "For example: --datasource-config-properties={'name':'name1','type':'type1','value':'value1'},{'name':'name2','type':'type2','value':'value2'}";
-  @CliMetaData(relatedTopic = CliStrings.TOPIC_GEODE_REGION)
+  @CliMetaData(relatedTopic = CliStrings.TOPIC_GEODE_REGION,
+      interceptor = "org.apache.geode.management.internal.cli.commands.UsernamePasswordInterceptor")
-      @CliOption(key = CONNECTION_URL, mandatory = true,
+      @CliOption(key = {URL, CONNECTION_URL}, mandatory = true,
-      @CliOption(key = JDBC_DRIVER_CLASS, mandatory = true,
+      @CliOption(key = JDBC_DRIVER_CLASS,
+      @CliOption(key = USERNAME, help = USERNAME__HELP) String username,
-      @CliOption(key = TYPE, mandatory = true, help = TYPE__HELP) DATASOURCE_TYPE type,
-      @CliOption(key = USERNAME, help = USERNAME__HELP) String username,
+      @CliOption(key = TYPE, unspecifiedDefaultValue = "SIMPLE",
+          help = TYPE__HELP) DATASOURCE_TYPE type,
+      Object[] arguments = new Object[] {configuration, false};
-          new CreateJndiBindingFunction(), configuration, targetMembers);
+          new CreateJndiBindingFunction(), arguments, targetMembers);
