GEODE-2644: Make AlertAppender optional and support log4j2.xml

AlertAppender is now configured in log4j2.xml and it supports sessions
that correspond with Cache lifecycle. This allows Geode to pause and
resume AlertAppender without resorting to dynamically adding and
removing appenders.

List of changes:
* Change AlertAppender to be pausable and session-oriented
* Make AlertAppender support configuration from log4j2.xml
* Log4j2 Core dependency is now optional
* Internal Alerting interfaces allow Alerting service to be pluggable
* Reduce coupling between Alerting and the rest of Geode
* Greatly increase test coverage for Alerting

+import java.util.concurrent.atomic.AtomicReference;
+import org.apache.geode.annotations.TestingOnly;
+  private static final AtomicReference<Listener> listenerRef = new AtomicReference<>();
+
+    Listener listener = getListener();
+    if (listener != null) {
+      listener.received(this);
+    }
+
+
+      if (listener != null) {
+        listener.created(alert);
+      }
+
+
+      if (listener != null) {
+        listener.created(alertDetail);
+      }
+
+
+  @TestingOnly
+  public static void addListener(Listener listener) {
+    listenerRef.compareAndSet(null, listener);
+  }
+
+  @TestingOnly
+  public static void removeListener(Listener listener) {
+    listenerRef.compareAndSet(listener, null);
+  }
+
+  @TestingOnly
+  public static Listener getListener() {
+    return listenerRef.get();
+  }
+
+  @TestingOnly
+  public interface Listener {
+
+    void received(AlertListenerMessage message);
+
+    void created(Alert alert);
+
+    void created(AlertDetails alertDetails);
+  }
