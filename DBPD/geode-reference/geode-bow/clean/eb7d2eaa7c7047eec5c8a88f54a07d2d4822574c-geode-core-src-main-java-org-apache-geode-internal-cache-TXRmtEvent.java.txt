GEODE-240: Remove deprecated methods on TransactionEvent

Removed deprecated methods getCreateEvents, getDestroyEvents, getPutEvents, getInvalidateEvents from the TransactionEvent.
Removed implementation for methods getCreateEvents, getDestroyEvents, getPutEvents, getInvalidateEvents from TxEvent and TxRmtEvent.
Added utility methods getCreateEvents, getDestroyEvents, getPutEvents, getInvalidateEvents in TxEventTestUtil.
Changed tests to use the new utilty methods from TxEventTestUtil.

Signed-off-by: Shankar <shankar@ampool.io>

This closes #515

-  public List getCreateEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isCreate() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
-  public List getPutEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isUpdate() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
-
-  public List getInvalidateEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isInvalidate() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
-
-  public List getDestroyEvents() {
-    if (this.events == null) {
-      return Collections.EMPTY_LIST;
-    } else {
-      ArrayList result = new ArrayList(this.events.size());
-      Iterator it = this.events.iterator();
-      while (it.hasNext()) {
-        CacheEvent ce = (CacheEvent) it.next();
-        if (ce.getOperation().isDestroy() && isEventUserVisible(ce)) {
-          result.add(ce);
-        }
-      }
-      if (result.isEmpty()) {
-        return Collections.EMPTY_LIST;
-      } else {
-        return Collections.unmodifiableList(result);
-      }
-    }
-  }
