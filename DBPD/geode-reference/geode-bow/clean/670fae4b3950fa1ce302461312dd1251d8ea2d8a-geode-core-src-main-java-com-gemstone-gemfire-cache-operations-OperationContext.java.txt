GEODE-1463: Legacy OperationContexts do not set the appropriate Shiro
permission tuple

- Moved ResourceOperationContext into a 'public' package.
- Converted OperationContext into an interface.
- Cleaned up the hierarchy of everything that previously
  extended OperationContext.
- Marked GetOperationContext as abstract seeing that
  GetOperationContextImpl extends it and there are no uses of
  GetOperationContext anywhere. (So why does it still exist?).

-import org.apache.shiro.authz.permission.WildcardPermission;
+import org.apache.shiro.authz.Permission;
-public abstract class OperationContext extends WildcardPermission{
-  public static String ALL_REGIONS="*";
+public interface OperationContext extends Permission {
-  public enum Resource {
+  String ALL_REGIONS = "*";
+
+  enum Resource {
-  };
+  }
-  public enum OperationCode {
+  enum OperationCode {
-  public abstract OperationCode getOperationCode();
+  OperationCode getOperationCode();
-  public Resource getResource(){
+  default Resource getResource() {
-  public String getRegionName(){
+  default String getRegionName() {
-  public abstract boolean isPostOperation();
+  boolean isPostOperation();
-  public boolean isClientUpdate() {
+  default boolean isClientUpdate() {
-  public boolean isClientUpdate(OperationContext context) {
+  default boolean isClientUpdate(OperationContext context) {
-  @Override
-  public String toString(){
-    if(ALL_REGIONS.equals(getRegionName()))
-      return getResource()+":"+getOperationCode();
-    else
-      return getResource()+":"+getOperationCode()+":"+getRegionName();
-  }
-
