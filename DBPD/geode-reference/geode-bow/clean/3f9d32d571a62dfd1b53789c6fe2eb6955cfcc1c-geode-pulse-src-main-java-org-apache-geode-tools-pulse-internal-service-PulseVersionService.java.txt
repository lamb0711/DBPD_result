GEODE-7851: Pulse Oauth Support (#4936)

* GEODE-7851: Pulse Oauth Support

- create an OauthSecurityConfig to configure spring using oauth
- add PULSE as an oauth-enabled-component, and if pulse is set to use
  oauth, set the OauthSecurityConfig as the active security profile
- use pulse.properties in the locator's working dir to externalize pulse
  authentication provider configuration

Co-authored-by: Dale Emery <demery@pivotal.io>
Co-authored-by: Joris Melchior <joris.melchior@gmail.com>
+import org.springframework.beans.factory.annotation.Autowired;
+  private final PulseController pulseController;
+
+  @Autowired
+  public PulseVersionService(PulseController pulseController) {
+    this.pulseController = pulseController;
+  }
-    responseJSON.put("pulseVersion", PulseController.pulseVersion.getPulseVersion());
-    responseJSON.put("buildId", PulseController.pulseVersion.getPulseBuildId());
-    responseJSON.put("buildDate", PulseController.pulseVersion.getPulseBuildDate());
-    responseJSON.put("sourceDate", PulseController.pulseVersion.getPulseSourceDate());
-    responseJSON.put("sourceRevision", PulseController.pulseVersion.getPulseSourceRevision());
-    responseJSON.put("sourceRepository", PulseController.pulseVersion.getPulseSourceRepository());
+    responseJSON.put("pulseVersion", pulseController.getPulseVersion().getPulseVersion());
+    responseJSON.put("buildId", pulseController.getPulseVersion().getPulseBuildId());
+    responseJSON.put("buildDate", pulseController.getPulseVersion().getPulseBuildDate());
+    responseJSON.put("sourceDate", pulseController.getPulseVersion().getPulseSourceDate());
+    responseJSON.put("sourceRevision", pulseController.getPulseVersion().getPulseSourceRevision());
+    responseJSON.put("sourceRepository",
+        pulseController.getPulseVersion().getPulseSourceRepository());
