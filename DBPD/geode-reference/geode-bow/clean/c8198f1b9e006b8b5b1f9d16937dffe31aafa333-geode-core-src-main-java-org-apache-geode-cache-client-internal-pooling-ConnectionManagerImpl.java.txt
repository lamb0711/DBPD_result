Revert "GEODE-6536: Added retry in borrowConnection/single hop (#4719)" (#4749)

This reverts commit 9da2cd49e2e04564b446eaad579b51e986bc2179.
+  /**
+   * Borrow a connection to a specific server. This task currently allows us to break the connection
+   * limit, because it is used by tasks from the background thread that shouldn't be constrained by
+   * the limit. They will only violate the limit by 1 connection, and that connection will be
+   * destroyed when returned to the pool.
+   */
-  public PooledConnection borrowConnection(ServerLocation server, long acquireTimeout,
-      boolean onlyUseExistingCnx)
-      throws AllConnectionsInUseException, NoAvailableServersException,
-      ServerConnectivityException {
-
+  public PooledConnection borrowConnection(ServerLocation server,
+      boolean onlyUseExistingCnx) throws AllConnectionsInUseException, NoAvailableServersException {
-    if (!onlyUseExistingCnx) {
-      connection = forceCreateConnection(server);
-      if (null != connection) {
-        return connection;
-      }
-      throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);
+    if (onlyUseExistingCnx) {
+      throw new AllConnectionsInUseException();
-    long waitStart = NOT_WAITING;
-    try {
-      long timeout = System.nanoTime() + MILLISECONDS.toNanos(acquireTimeout);
-      while (true) {
-        connection =
-            availableConnectionManager.useFirst((c) -> c.getServer().equals(server));
-        if (null != connection) {
-          return connection;
-        }
-
-        if (checkShutdownInterruptedOrTimeout(timeout)) {
-          break;
-        }
-
-        waitStart = beginConnectionWaitStatIfNotStarted(waitStart);
-
-        Thread.yield();
-      }
-    } finally {
-      endConnectionWaitStatIfStarted(waitStart);
+    connection = forceCreateConnection(server);
+    if (null != connection) {
+      return connection;
-    cancelCriterion.checkCancelInProgress(null);
-
-    throw new AllConnectionsInUseException();
+    throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);
