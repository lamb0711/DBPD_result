GEODE-3472: Remove a great deal of commented-out code.

* this closes #748

+import java.io.StringWriter;
-import java.util.logging.Filter;
-  private volatile static LogWrapper INSTANCE = null;
+  private static volatile LogWrapper INSTANCE = null;
-      // TODO - Abhishek how to set different log levels for different handlers???
-      handler.setFilter(new Filter() {
-        @Override
-        public boolean isLoggable(LogRecord record) {
-          return record.getLevel().intValue() >= Level.FINE.intValue();
-        }
-      });
+      handler.setFilter(record -> record.getLevel().intValue() >= Level.FINE.intValue());
-            config.getLogFileSizeLimit(), config.getLogFileCount(), true /* append */);
+            config.getLogFileSizeLimit(), config.getLogFileCount(), true);
-      } catch (SecurityException e) {
-        addDefaultConsoleHandler(logger, e.getMessage(), config.getLogFilePath());
-      } catch (IOException e) {
+      } catch (SecurityException | IOException e) {
-  // TODO - Abhishek - ideally shouldn't be exposed outside.
-  /* package */ Logger getLogger() {
+  Logger getLogger() {
-  // TODO - Abhishek - Check whether we can use GemFireLevel.ERROR
-  // public boolean errorEnabled() {
-  // return severeEnabled();
-  // }
-  //
-  // public void error(String message) {
-  // logger.severe(message);
-  // }
-  //
-  // public void error(String message, Throwable t) {
-  // logger.log(Level.SEVERE, message, t);
-  // }
-
-  // Formatter code "copied" from LogWriterImpl
-    private final static String FORMAT = "yyyy/MM/dd HH:mm:ss.SSS z";
+    private static final String FORMAT = "yyyy/MM/dd HH:mm:ss.SSS z";
-      java.io.StringWriter sw = new java.io.StringWriter();
+      StringWriter sw = new StringWriter();
-      } catch (java.io.IOException ignore) {
+      } catch (IOException ignore) {
-      String result = sw.toString();
-      return result;
+      return sw.toString();
