GEODE-6702: optimize equals by not calling compareTo (#3524)

* added unit test for InternalDistributedMember.equals

* InternalDistributedMember equals no longer uses compareTo
to avoid array allocations needed by the compare code.

* simplified equals code by using Objects.equals

+import java.util.Objects;
+import org.apache.geode.annotations.VisibleForTesting;
-    return compareTo((InternalDistributedMember) obj) == 0;
+    InternalDistributedMember other = (InternalDistributedMember) obj;
+
+    int myPort = getPort();
+    int otherPort = other.getPort();
+    if (myPort != otherPort) {
+      return false;
+    }
+
+    InetAddress myAddr = getInetAddress();
+    InetAddress otherAddr = other.getInetAddress();
+    if (myAddr == null && otherAddr == null) {
+      return true;
+    } else if (!Objects.equals(myAddr, otherAddr)) {
+      return false;
+    }
+
+    if (!isPartial() && !other.isPartial()) {
+      if (!Objects.equals(getName(), other.getName())) {
+        return false;
+      }
+    }
+
+    if (this.uniqueTag == null && other.uniqueTag == null) {
+      // not loners, so look at P2P view ID
+      int thisViewId = getVmViewId();
+      int otherViewId = other.getVmViewId();
+      if (thisViewId >= 0 && otherViewId >= 0) {
+        if (thisViewId != otherViewId) {
+          return false;
+        } // else they're the same, so continue
+      }
+    } else if (!Objects.equals(this.uniqueTag, other.uniqueTag)) {
+      return false;
+    }
+
+    if (this.netMbr != null && other.netMbr != null) {
+      if (0 != this.netMbr.compareAdditionalData(other.netMbr)) {
+        return false;
+      }
+    }
+
+    // purposely avoid checking roles
+    // @todo Add durableClientAttributes to equals
+
+    return true;
+  @VisibleForTesting
+  void setUniqueTag(String tag) {
+    uniqueTag = tag;
+  }
+
+  @VisibleForTesting
+  void setIsPartial(boolean value) {
+    isPartial = value;
+  }
