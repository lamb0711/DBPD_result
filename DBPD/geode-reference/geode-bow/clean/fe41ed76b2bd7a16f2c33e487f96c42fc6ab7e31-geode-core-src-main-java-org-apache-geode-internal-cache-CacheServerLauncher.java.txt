GEODE-2632: change dependencies on GemFireCacheImpl to InternalCache

* misc cleanup of code where possible

+import static org.apache.geode.distributed.ConfigurationProperties.*;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.PrintStream;
+import java.io.Serializable;
+import java.net.URL;
+import java.util.AbstractList;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.concurrent.TimeUnit;
+
-import org.apache.geode.internal.net.SocketCreator;
+import org.apache.geode.internal.net.SocketCreator;
-import java.io.*;
-import java.net.URL;
-import java.util.*;
-import java.util.concurrent.TimeUnit;
-
-import static org.apache.geode.distributed.ConfigurationProperties.LOG_FILE;
-import static org.apache.geode.distributed.ConfigurationProperties.SERVER_BIND_ADDRESS;
-
- *
-    Cache cache = this.createCache(system, options);
+    InternalCache cache = createCache(system, options);
-      for (PartitionedRegion region : ((GemFireCacheImpl) cache).getPartitionedRegions()) {
+      for (PartitionedRegion region : cache.getPartitionedRegions()) {
-  protected Cache createCache(InternalDistributedSystem system, Map<String, Object> options)
+  protected InternalCache createCache(InternalDistributedSystem system, Map<String, Object> options)
-    Cache cache = CacheFactory.create(system);
+    InternalCache cache = (InternalCache) CacheFactory.create(system);
