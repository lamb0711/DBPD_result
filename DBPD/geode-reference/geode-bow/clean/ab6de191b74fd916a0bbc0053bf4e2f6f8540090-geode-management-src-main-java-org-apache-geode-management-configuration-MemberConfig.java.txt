GEODE-6745: Add status to list members output for REST v2 (#3558)


+import java.util.ArrayList;
+import com.fasterxml.jackson.annotation.JsonInclude;
+
-public class MemberConfig extends CacheElement
-    implements RuntimeCacheElement, RestfulEndpoint {
+public class MemberConfig extends CacheElement implements RuntimeCacheElement, RestfulEndpoint {
-  private String pid;
-  private List<Integer> ports;
+  private String status;
+  private int pid;
+  // Only relevant for locators - will be suppressed if null
+  private Integer port;
+  // Only relevant for servers - will be suppressed if empty
+  private List<CacheServerConfig> cacheServers = new ArrayList<>();
+  private long maxHeap;
+  private long initialHeap;
-  public MemberConfig() {
+  public static class CacheServerConfig {
+    private int port;
+    private int maxConnections;
+    private int maxThreads;
+    public CacheServerConfig() {}
+
+    public int getPort() {
+      return port;
+    }
+
+    public void setPort(int port) {
+      this.port = port;
+    }
+
+    public int getMaxConnections() {
+      return maxConnections;
+    }
+
+    public void setMaxConnections(int maxConnections) {
+      this.maxConnections = maxConnections;
+    }
+
+    public int getMaxThreads() {
+      return maxThreads;
+    }
+
+    public void setMaxThreads(int maxThreads) {
+      this.maxThreads = maxThreads;
+    }
+  public MemberConfig() {}
+
-  public String getPid() {
+  public String getStatus() {
+    return status;
+  }
+
+  public void setStatus(String status) {
+    this.status = status;
+  }
+
+  public int getPid() {
-  public void setPid(String pid) {
+  public void setPid(int pid) {
-  public List<Integer> getPorts() {
-    return ports;
+  @JsonInclude(value = JsonInclude.Include.NON_NULL)
+  public Integer getPort() {
+    return port;
-  public void setPorts(List<Integer> port) {
-    this.ports = port;
+  public void setPort(Integer port) {
+    this.port = port;
+  }
+
+  @JsonInclude(value = JsonInclude.Include.NON_EMPTY)
+  public List<CacheServerConfig> getCacheServers() {
+    return cacheServers;
+  }
+
+  public void addCacheServer(CacheServerConfig cacheServer) {
+    cacheServers.add(cacheServer);
+
+  public long getMaxHeap() {
+    return maxHeap;
+  }
+
+  public void setMaxHeap(long maxHeap) {
+    this.maxHeap = maxHeap;
+  }
+
+  public long getInitialHeap() {
+    return initialHeap;
+  }
+
+  public void setInitialHeap(long initialHeap) {
+    this.initialHeap = initialHeap;
+  }
