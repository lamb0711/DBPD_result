GEODE-7869: Cleanup warnings in geode-gfsh

-public class DataCommandFunction implements InternalFunction {
+public class DataCommandFunction implements InternalFunction<DataCommandRequest> {
-  private static final int NESTED_JSON_LENGTH = 20;
-
-  public void execute(FunctionContext functionContext) {
+  public void execute(FunctionContext<DataCommandRequest> functionContext) {
-      DataCommandRequest request = (DataCommandRequest) functionContext.getArguments();
+      DataCommandRequest request = functionContext.getArguments();
-          Object array[] = getClassAndJson(value);
+          Object[] array = getClassAndJson(value);
-        Object array[] = getClassAndJson(value);
+        Object[] array = getClassAndJson(value);
-  @SuppressWarnings({"rawtypes"})
-    Region region = cache.getRegion(regionName);
+    Region<Object, Object> region = cache.getRegion(regionName);
-      Object array[] = getClassAndJson(returnValue);
+      Object[] array = getClassAndJson(returnValue);
-    if (observer != null && observer instanceof IndexTrackingQueryObserver) {
+    if (observer instanceof IndexTrackingQueryObserver) {
-      Map usedIndexes = indexObserver.getUsedIndexes();
+      @SuppressWarnings("unchecked")
+      Map<Object, Object> usedIndexes = indexObserver.getUsedIndexes();
-      StringBuffer buf = new StringBuffer();
+      StringBuilder buf = new StringBuilder();
-        for (Iterator itr = usedIndexes.entrySet().iterator(); itr.hasNext();) {
-          Map.Entry entry = (Map.Entry) itr.next();
+        for (Iterator<Map.Entry<Object, Object>> itr = usedIndexes.entrySet().iterator(); itr
+            .hasNext();) {
+          Map.Entry<Object, Object> entry = itr.next();
