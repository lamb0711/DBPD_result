GEODE-5686: Remove LocalizedStrings

This removes the LocalizedStrings class and most uses of LogWriterI18n.
The I18n interfaces are still in place and still work since they're only
deprecated but there are no longer any uses of the StringID logging methods.

Going forward everyone should use the Log4j logging facility.  If you
must use the deprecated LogWriter use that version and not
LogWriterI18n.

-import org.apache.geode.internal.i18n.LocalizedStrings;
-import org.apache.geode.internal.logging.log4j.LocalizedMessage;
-          LocalizedStrings.GatewaySenderImpl_NULL_CANNNOT_BE_ADDED_TO_GATEWAY_EVENT_FILTER_LIST
-              .toLocalizedString());
+          "null value can not be added to gateway-event-filters list");
-              LocalizedStrings.GatewaySender_COULD_NOT_DESTROY_SENDER_AS_IT_IS_STILL_IN_USE
-                  .toLocalizedString(this));
+              String.format(
+                  "The GatewaySender %s could not be destroyed as it is still used by region(s).",
+                  this));
-              this.logger.info(LocalizedMessage.create(
-                  LocalizedStrings.AbstractGatewaySender_REGION_0_UNDERLYING_GATEWAYSENDER_1_IS_ALREADY_DESTROYED,
-                  new Object[] {e.getRegionFullPath(), this}));
+              this.logger.info(
+                  "Region {} that underlies the GatewaySender {} is already destroyed.",
+                  e.getRegionFullPath(), this);
-        LocalizedMessage.create(LocalizedStrings.GatewayImpl_GATEWAY_0_HAS_BEEN_REBALANCED, this));
+        "GatewaySender {} has been rebalanced", this);
-    logger.warn(LocalizedMessage.create(
-        LocalizedStrings.GatewayImpl_GATEWAY_0_IS_NOT_CLOSING_CLEANLY_FORCING_CANCELLATION, this));
+    logger.warn("Gateway <{}> is not closing cleanly; forcing cancellation.", this);
-            LocalizedStrings.Sender_COULD_NOT_START_GATEWAYSENDER_0_BECAUSE_OF_EXCEPTION_1
-                .toLocalizedString(new Object[] {this.getId(), ex.getMessage()}),
+            String.format("Could not start a gateway sender %s because of exception %s",
+                new Object[] {this.getId(), ex.getMessage()}),
-        logger.info(LocalizedMessage.create(LocalizedStrings.GatewaySender_PAUSED__0, this));
+        logger.info("Paused {}", this);
-        logger.info(LocalizedMessage.create(LocalizedStrings.GatewaySender_RESUMED__0, this));
+        logger.info("Resumed {}", this);
-          logger.warn(LocalizedMessage.create(
-              LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-              new Object[] {this, getId(), operation, clonedEvent}), e);
+          logger.warn(String.format(
+              "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+              new Object[] {this, getId(), operation, clonedEvent}),
+              e);
-          logger.fatal(LocalizedMessage.create(
-              LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-              new Object[] {this, getId(), operation, clonedEvent}), e);
+          logger.fatal(String.format(
+              "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+              new Object[] {this, getId(), operation, clonedEvent}),
+              e);
-        logger.fatal(LocalizedMessage.create(
-            LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-            new Object[] {this, getId(), nextEvent.getOperation(), nextEvent}), e);
+        logger.fatal(String.format(
+            "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+            new Object[] {this, getId(), nextEvent.getOperation(), nextEvent}),
+            e);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.GatewayImpl_0_AN_EXCEPTION_OCCURRED_WHILE_QUEUEING_1_TO_PERFORM_OPERATION_2_FOR_3,
-            new Object[] {this, getId(), operation, clonedEvent}), e);
+        logger.warn(String.format(
+            "%s: An Exception occurred while queueing %s to perform operation %s for %s",
+            new Object[] {this, getId(), operation, clonedEvent}),
+            e);
-            LocalizedStrings.AbstractGatewaySender_FAILED_TO_LOCK_META_REGION_0
-                .toLocalizedString(this));
+            String.format("%s: Failed to lock gateway event id index metadata region",
+                this));
-                LocalizedStrings.AbstractGatewaySender_CANNOT_CREATE_SENDER_0_BECAUSE_MAXIMUM_1_HAS_BEEN_REACHED
-                    .toLocalizedString(getId(), ThreadIdentifier.Bits.GATEWAY_ID.mask() + 1));
+                String.format(
+                    "Cannot create GatewaySender %s because the maximum (%s) has been reached",
+                    getId(), ThreadIdentifier.Bits.GATEWAY_ID.mask() + 1));
-            LocalizedStrings.AbstractGatewaySender_META_REGION_CREATION_EXCEPTION_0
-                .toLocalizedString(sender),
+            String.format(
+                "%s: Caught the following exception attempting to create gateway event id index metadata region:",
+                sender),
-            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETRYING
-                .toLocalizedString(),
+            "Caught the following exception attempting waitUntilFlushed and will retry:",
-            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ATTEMPTING_WAIT_UNTIL_FLUSHED_RETURNING
-                .toLocalizedString(),
+            "Caught the following exception attempting waitUntilFlushed and will return:",
-          LocalizedStrings.AbstractGatewaySender_WAIT_UNTIL_FLUSHED_NOT_SUPPORTED_FOR_SERIAL_SENDERS
-              .toLocalizedString());
+          "waitUntilFlushed is not currently supported for serial gateway senders");
-          logger.info(LocalizedMessage.create(
-              LocalizedStrings.AbstractGatewaySender_PROVIDING_SYNCHRONIZATION_EVENT,
-              new Object[] {this, key, timestamp, event}));
+          logger.info("{}: Providing synchronization event for key={}; timestamp={}: {}",
+              this, key, timestamp, event);
-        logger.info(LocalizedMessage.create(
-            LocalizedStrings.AbstractGatewaySender_ENQUEUEING_SYNCHRONIZATION_EVENT,
-            new Object[] {this, event}));
+        logger.info("{}: Enqueueing synchronization event: {}",
+            this, event);
-        logger.warn(LocalizedMessage.create(
-            LocalizedStrings.AbstractGatewaySender_CAUGHT_EXCEPTION_ENQUEUEING_SYNCHRONIZATION_EVENT,
-            new Object[] {this, event}), t);
+        logger.warn(String.format(
+            "%s: Caught the following exception attempting to enqueue synchronization event=%s:",
+            new Object[] {this, event}),
+            t);
