GEODE-2632: use immutable SecurityService impls to improve performance

* misc code clean up in classes touched by changes
* new unit tests for SecurityService

-import static org.junit.Assert.assertTrue;
+import static org.assertj.core.api.Assertions.*;
-  public static byte[] BYTES = {1, 0};
+
+  private static final byte[] BYTES = {1, 0};
+
+  static byte[] bytes() {
+    return BYTES;
+  }
-  public void init(Properties props) {
-    pdx = Boolean.parseBoolean(props.getProperty("security-pdx"));
-    count = 0;
+  @Override
+  public void init(Properties securityProps) {
+    this.pdx = Boolean.parseBoolean(securityProps.getProperty("security-pdx"));
+    this.count = 0;
-    count++;
+    this.count++;
-      assertTrue(Arrays.equals(BYTES, (byte[]) value));
-    } else if (pdx) {
-      assertTrue(value instanceof PdxInstanceImpl);
+      assertThat(Arrays.equals(BYTES, (byte[]) value)).isTrue();
+    } else if (this.pdx) {
+      assertThat(value).isInstanceOf(PdxInstanceImpl.class);
-      assertTrue(value instanceof SimpleClass);
+      assertThat(value).isInstanceOf(SimpleClass.class);
-    return count;
+    return this.count;
