GEODE-6103 RegionCreateFunction takes RegionConfig in argument (#2998)

* reduce dependence on RegionFunctionArgs
* Also clean up CreateRegionCommand to achieve a clean separation between validations and calling RegionCreateFunction

Signed-off-by: Aditya Anchuri <aanchuri@pivotal.io>
Signed-off-by: Peter Tran <ptran@pivotal.io>
Signed-off-by: Ken Howe <khowe@pivotal.io>
-import org.apache.geode.management.internal.cli.exceptions.EntityExistsException;
-    InternalConfigurationPersistenceService service =
-        (InternalConfigurationPersistenceService) getConfigurationPersistenceService();
+    InternalConfigurationPersistenceService service = getConfigurationPersistenceService();
-      if (cacheConfig != null) {
-        JndiBindingsType.JndiBinding existing =
-            CacheElement.findElement(cacheConfig.getJndiBindings(), name);
-        if (existing != null) {
-          throw new EntityExistsException(
-              CliStrings.format("Data source named \"{0}\" already exists.", name),
-              ifNotExists);
-        }
+      if (cacheConfig != null && CacheElement.exists(cacheConfig.getJndiBindings(), name)) {
+        String message =
+            CliStrings.format("Jndi binding with jndi-name \"{0}\" already exists.", name);
+        return ifNotExists ? ResultModel.createInfo("Skipping: " + message)
+            : ResultModel.createError(message);
