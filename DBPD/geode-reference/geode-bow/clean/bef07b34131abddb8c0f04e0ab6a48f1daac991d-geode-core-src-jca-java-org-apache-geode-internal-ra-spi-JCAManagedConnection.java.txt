GEODE-8174: Fix ConcurrentModificationException when using JTA transaction. (#5161)


+
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashSet;
+import java.util.concurrent.CopyOnWriteArrayList;
+import org.apache.geode.internal.CopyOnWriteHashSet;
-  private final List<ConnectionEventListener> listeners;
+  private final List<ConnectionEventListener> listeners = new CopyOnWriteArrayList<>();;
-  private final Set<GFConnectionImpl> connections;
+  private final Set<GFConnectionImpl> connections = new CopyOnWriteHashSet<>();;
-  private volatile JCALocalTransaction localTransaction;
+  private volatile JCALocalTransaction localTransaction = new JCALocalTransaction();;
-    this.listeners = Collections.synchronizedList(new ArrayList<>());
-    this.localTransaction = new JCALocalTransaction();
-    this.connections = Collections.synchronizedSet(new HashSet<>());
-      if (this.initialized && !this.cache.isClosed()) {
+      if (this.initialized && !isCacheClosed()) {
+  private boolean isCacheClosed() {
+    if (this.cache != null) {
+      return this.cache.isClosed();
+    }
+    return true;
+  }
+
-    if (!this.initialized || this.cache.isClosed()) {
+    if (!this.initialized || isCacheClosed()) {
+    if (this.cache == null) {
+      throw new RuntimeException("Cache could not be found in JCAManagedConnection");
+    }
-    if (this.initialized && !this.cache.isClosed()) {
+    if (this.initialized && !isCacheClosed()) {
-      if (this.initialized && !this.cache.isClosed()) {
+      if (this.initialized && !isCacheClosed()) {
