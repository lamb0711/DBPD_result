GEODE-3926: Lucene Query Exception is thrown if queries are executed in the middle of reindexing a region (#1742)

  * Add new internal exception, LuceneIndexCreationInProgressException
  * Index the region even if it's empty
  * Added awaitility clauses to reindexing tests
  * getRepositories will throw an exception if the index is not available
  * getRepositories will not throw an exception if the data region is empty (this scenario can occur when creating the index before the region)
+import java.util.concurrent.ExecutorService;
+
+import org.apache.logging.log4j.Logger;
+import org.apache.geode.internal.logging.LogService;
+  private final Logger logger = LogService.getLogger();
+
-  public PartitionedRepositoryManager(InternalLuceneIndex index, LuceneSerializer serializer) {
+  private final ExecutorService waitingThreadPoolFromDM;
+
+  public PartitionedRepositoryManager(InternalLuceneIndex index, LuceneSerializer serializer,
+      ExecutorService waitingThreadPool) {
+    this.waitingThreadPoolFromDM = waitingThreadPool;
-        repos.add(getRepository(userBucket.getId()));
+        if (index.isIndexAvailable(userBucket.getId()) || userBucket.isEmpty()) {
+          repos.add(getRepository(userBucket.getId()));
+        } else {
+          waitingThreadPoolFromDM.execute(() -> {
+            try {
+              getRepository(userBucket.getId());
+            } catch (BucketNotFoundException | LuceneIndexDestroyedException e) {
+              logger.debug("Lucene Index creation in progress.", e);
+            }
+          });
+          throw new LuceneIndexCreationInProgressException(
+              "Lucene Index creation in progress for bucket: " + userBucket.getId());
+        }
