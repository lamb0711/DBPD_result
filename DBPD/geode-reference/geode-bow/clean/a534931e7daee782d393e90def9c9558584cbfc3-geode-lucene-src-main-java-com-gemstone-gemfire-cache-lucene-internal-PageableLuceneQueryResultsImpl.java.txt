Merge branch 'develop' into feature/GEODE-1571

+import java.util.NoSuchElementException;
-import com.gemstone.gemfire.cache.lucene.LuceneQueryResults;
+import com.gemstone.gemfire.cache.lucene.PageableLuceneQueryResults;
- * Implementation of LuceneQueryResults that fetchs a page at a time
+ * Implementation of PageableLuceneQueryResults that fetchs a page at a time
-public class LuceneQueryResultsImpl<K,V> implements LuceneQueryResults<K,V> {
+public class PageableLuceneQueryResultsImpl<K,V> implements PageableLuceneQueryResults<K,V> {
-  private final List<EntryScore> hits;
+  private final List<EntryScore<K>> hits;
-  public LuceneQueryResultsImpl(List<EntryScore> hits, Region<K,V> userRegion, int pageSize) {
+  public PageableLuceneQueryResultsImpl(List<EntryScore<K>> hits, Region<K,V> userRegion, int pageSize) {
-  public List<LuceneResultStruct<K,V>> getNextPage() {
-    if(!hasNextPage()) {
-      return null;
+  public List<LuceneResultStruct<K,V>> next() {
+    if(!hasNext()) {
+      throw new NoSuchElementException();
-    List<EntryScore> scores = hits.subList(currentHit, end);
+    List<EntryScore<K>> scores = hits.subList(currentHit, end);
-    for(EntryScore score : scores) {
-      keys.add((K) score.getKey());
+    for(EntryScore<K> score : scores) {
+      keys.add(score.getKey());
-    
+
-    for(EntryScore score : scores) {
+    for(EntryScore<K> score : scores) {
-  public boolean hasNextPage() {
+  public boolean hasNext() {
-      for(EntryScore score : hits) {
+      for(EntryScore<K> score : hits) {
