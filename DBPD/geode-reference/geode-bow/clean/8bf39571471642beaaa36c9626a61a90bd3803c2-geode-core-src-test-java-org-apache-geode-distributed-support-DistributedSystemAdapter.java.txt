Added Spotless plugin to enforce formatting standards.
Added Google Java Style guide formatter templates, removed existing formatter templates.

Ran './gradlew clean build' for verification

This closes #268

- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
- *      http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
- * The DistributedSystemAdapter class is an adapter extending DistributedSystem to provide default behavior for the
- * abstract methods when testing.
+ * The DistributedSystemAdapter class is an adapter extending DistributedSystem to provide default
+ * behavior for the abstract methods when testing.
+ * 
-  
+
-  
+
-  public void stopReconnecting() {
-  }
-  
+  public void stopReconnecting() {}
+
-  public Statistics createStatistics(final StatisticsType type, final String textId, final long numericId) {
+  public Statistics createStatistics(final StatisticsType type, final String textId,
+      final long numericId) {
-  public Statistics createAtomicStatistics(final StatisticsType type, final String textId, final long numericId) {
+  public Statistics createAtomicStatistics(final StatisticsType type, final String textId,
+      final long numericId) {
-  public StatisticDescriptor createIntCounter(final String name, final String description, final String units) {
+  public StatisticDescriptor createIntCounter(final String name, final String description,
+      final String units) {
-  public StatisticDescriptor createLongCounter(final String name, final String description, final String units) {
+  public StatisticDescriptor createLongCounter(final String name, final String description,
+      final String units) {
-  public StatisticDescriptor createDoubleCounter(final String name, final String description, final String units) {
+  public StatisticDescriptor createDoubleCounter(final String name, final String description,
+      final String units) {
-  public StatisticDescriptor createIntGauge(final String name, final String description, final String units) {
+  public StatisticDescriptor createIntGauge(final String name, final String description,
+      final String units) {
-  public StatisticDescriptor createLongGauge(final String name, final String description, final String units) {
+  public StatisticDescriptor createLongGauge(final String name, final String description,
+      final String units) {
-  public StatisticDescriptor createDoubleGauge(final String name, final String description, final String units) {
+  public StatisticDescriptor createDoubleGauge(final String name, final String description,
+      final String units) {
-  public StatisticDescriptor createIntCounter(final String name, final String description, final String units, final boolean largerBetter) {
+  public StatisticDescriptor createIntCounter(final String name, final String description,
+      final String units, final boolean largerBetter) {
-  public StatisticDescriptor createLongCounter(final String name, final String description, final String units, final boolean largerBetter) {
+  public StatisticDescriptor createLongCounter(final String name, final String description,
+      final String units, final boolean largerBetter) {
-  public StatisticDescriptor createDoubleCounter(final String name, final String description, final String units, final boolean largerBetter) {
+  public StatisticDescriptor createDoubleCounter(final String name, final String description,
+      final String units, final boolean largerBetter) {
-  public StatisticDescriptor createIntGauge(final String name, final String description, final String units, final boolean largerBetter) {
+  public StatisticDescriptor createIntGauge(final String name, final String description,
+      final String units, final boolean largerBetter) {
-  public StatisticDescriptor createLongGauge(final String name, final String description, final String units, final boolean largerBetter) {
+  public StatisticDescriptor createLongGauge(final String name, final String description,
+      final String units, final boolean largerBetter) {
-  public StatisticDescriptor createDoubleGauge(final String name, final String description, final String units, final boolean largerBetter) {
+  public StatisticDescriptor createDoubleGauge(final String name, final String description,
+      final String units, final boolean largerBetter) {
-  public StatisticsType createType(final String name, final String description, final StatisticDescriptor[] stats) {
+  public StatisticsType createType(final String name, final String description,
+      final StatisticDescriptor[] stats) {
-  @Override public StatisticsType findType(final String name) {
+  @Override
+  public StatisticsType findType(final String name) {
-  @Override public StatisticsType[] createTypesFromXml(final Reader reader) throws IOException {
+  @Override
+  public StatisticsType[] createTypesFromXml(final Reader reader) throws IOException {
-  
-  
+
+
